void sub_100317D84(void (*a1)(double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  _QWORD *v66;
  _BOOL4 v67;
  void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t (*v78)(void);
  uint64_t v79;
  int v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint8_t *v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  char v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  unint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t Strong;
  uint64_t v169;
  BOOL v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  void (*v183)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  int v200;
  void (*v201)(char *, uint64_t, uint64_t);
  void (*v202)(uint64_t *, _QWORD);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  _BOOL4 v218;
  uint8_t *v219;
  char *v220;
  uint64_t v221;
  id v222;
  char *v223;
  void (*v224)(char *, uint64_t);
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  int v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  _BYTE *v258;
  int v259;
  char *v260;
  char *v261;
  char *v262;
  __int128 v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(unint64_t *, uint64_t, uint64_t);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char v279[8];
  char v280[8];
  uint64_t v281;

  v265 = a5;
  v269 = a4;
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v230 = (char *)&v225 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v232 = (char *)&v225 - v10;
  v11 = type metadata accessor for IndexPath(0);
  v233 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v234 = (char *)&v225 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v228 = (char *)&v225 - v14;
  v15 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v15);
  v246 = (char *)&v225 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v266 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v254 = (uint64_t)&v225 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v235 = (uint64_t)&v225 - v19;
  __chkstk_darwin(v20);
  v260 = (char *)&v225 - v21;
  __chkstk_darwin(v22);
  v262 = (char *)&v225 - v23;
  v24 = type metadata accessor for IndexSet(0);
  v264 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v261 = (char *)&v225 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v277 = (char *)&v225 - v27;
  v28 = sub_10002A750(&qword_100655960);
  v270 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v30 = (unint64_t *)((char *)&v225 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v31);
  v251 = (uint64_t)&v225 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v247 = (uint64_t)&v225 - v34;
  __chkstk_darwin(v35);
  v252 = (char *)&v225 - v36;
  __chkstk_darwin(v37);
  v276 = (uint64_t)&v225 - v38;
  v39 = sub_10002A750(&qword_100655968);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = __chkstk_darwin(v39);
  v244 = (uint64_t)&v225 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v41);
  v243 = *(_QWORD *)(a3 + 16);
  if (v243)
  {
    v229 = v11;
    v255 = v24;
    v242 = *(int *)(v39 + 28);
    v268 = qword_10065D8E0;
    v241 = a3 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    v240 = *(_QWORD *)(v40 + 72);
    v267 = enum case for ExtendedPatch.insertion<A>(_:);
    v259 = enum case for ExtendedPatch.deletion<A>(_:);
    v256 = enum case for ExtendedPatch.move<A>(_:);
    v250 = enum case for ExtendedPatch.update<A>(_:);
    v227 = a3;
    swift_bridgeObjectRetain(a3);
    v43 = 0;
    v263 = xmmword_100520250;
    v44 = (uint64_t)v260;
    v45 = (uint64_t)v262;
    v46 = v261;
    v47 = v270;
    v48 = v28;
    v271 = v28;
    while (1)
    {
      v248 = v43;
      v51 = v244;
      sub_10000735C(v241 + v240 * v43, v244, &qword_100655968);
      sub_10000735C(v51, v276, (uint64_t *)&unk_100640EB0);
      v52 = *(_QWORD *)(v51 + v242);
      swift_bridgeObjectRetain(v52);
      sub_1000073A0(v51, &qword_100655968);
      v275 = *(_QWORD *)(v52 + 16);
      if (v275)
        break;
      v49 = v52;
LABEL_4:
      swift_bridgeObjectRelease(v49);
      v50 = v248 + 1;
      sub_1000073A0(v276, (uint64_t *)&unk_100640EB0);
      v43 = v50;
      if (v50 == v243)
      {
        swift_bridgeObjectRelease(v227);
        return;
      }
    }
    v53 = 0;
    v54 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v245 = v52;
    v274 = v52 + v54;
    v55 = *(_QWORD *)(v47 + 72);
    v272 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v47 + 16);
    v273 = v55;
    v56 = v255;
    v57 = (_QWORD *)v48;
    v272(v30, v274, v48);
LABEL_11:
    v58 = (*(uint64_t (**)(unint64_t *, _QWORD *))(v47 + 88))(v30, v57);
    if (v58 == v267)
    {
      (*(void (**)(unint64_t *, _QWORD *))(v47 + 96))(v30, v57);
      v59 = *v30;
      v60 = sub_10002A750((uint64_t *)&unk_10064FA40);
      v61 = swift_allocObject(v60, 40, 7);
      *(_OWORD *)(v61 + 16) = v263;
      *(_QWORD *)(v61 + 32) = v59;
      v281 = v61;
      v62 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v63 = sub_10002A750(&qword_100641150);
      v64 = sub_1000798C0();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v281, v63, v64, v56, v62);
      v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v266 + 48);
      v67 = v65(v276, 1, v278) == 1;
      v68 = *(void **)(v269 + v268);
      if (v68)
      {
        v69 = *(_QWORD *)(v265 + 16 * v67);
        v70 = v68;
        if ((IndexSet.isEmpty.getter(v70) & 1) != 0)
        {

        }
        else
        {
          v90 = *(_QWORD *)&v70[qword_100645F10];
          if (v90)
          {
            v91 = *(uint64_t (**)(uint64_t))(v90 + 16);
            v92 = swift_retain();
            if ((v91(v92) & 1) != 0)
            {
              v93 = v247;
              sub_10000735C(v276, v247, (uint64_t *)&unk_100640EB0);
              if (v65(v93, 1, v278) == 1)
              {
                v94 = sub_1000073A0(v93, (uint64_t *)&unk_100640EB0);
                __chkstk_darwin(v94);
                v95 = v277;
                *(&v225 - 4) = (uint64_t)v70;
                *(&v225 - 3) = (uint64_t)v95;
                *(&v225 - 2) = v90;
                *(&v225 - 1) = v69;
                sub_10030A8DC((void (*)(uint64_t))sub_10031B518, (uint64_t)(&v225 - 6), 0, 0, 0, 0);

                swift_release();
              }
              else
              {
                v118 = v235;
                v119 = sub_10001F580(v93, v235, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                __chkstk_darwin(v119);
                v120 = v277;
                *(&v225 - 4) = (uint64_t)v70;
                *(&v225 - 3) = (uint64_t)v120;
                *(&v225 - 2) = v118;
                *(&v225 - 1) = v69;
                sub_10030A8DC((void (*)(uint64_t))sub_10031B544, (uint64_t)(&v225 - 6), 0, 0, 0, 0);
                swift_release();
                sub_10001F544(v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

              }
              v46 = v261;
              v56 = v255;
              goto LABEL_39;
            }

            swift_release();
          }
          else
          {

          }
          v46 = v261;
        }
LABEL_39:
        v105 = (uint64_t)v30 + *(int *)(sub_10002A750(&qword_100655980) + 48);
        (*(void (**)(char *, uint64_t))(v264 + 8))(v277, v56);
        sub_10001F544(v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v44 = (uint64_t)v260;
        v45 = (uint64_t)v262;
        goto LABEL_8;
      }
      goto LABEL_174;
    }
    if (v58 != v259)
    {
      if (v58 == v256)
      {
        (*(void (**)(unint64_t *, _QWORD *))(v47 + 96))(v30, v57);
        v85 = *v30;
        v84 = v30[1];
        v86 = sub_10002A750(&qword_100655978);
        sub_10001F580((uint64_t)v30 + *(int *)(v86 + 64), v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v87 = *(void **)(v269 + v268);
        if (!v87)
        {
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
          goto LABEL_181;
        }
        v88 = v87;
        sub_100311324(v45, v85, v276, v84, v276);

        v89 = v45;
      }
      else
      {
        v66 = v57;
        v96 = (uint64_t)v252;
        if (v58 != v250)
        {
LABEL_183:
          _diagnoseUnexpectedEnumCase<A>(type:)(v66, v66);
          __break(1u);
          return;
        }
        (*(void (**)(unint64_t *, _QWORD *))(v47 + 96))(v30, v66);
        v97 = sub_10002A750(&qword_100655970);
        sub_10001F580((uint64_t)v30 + *(int *)(v97 + 48), v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10002B1E8(v44, v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v266 + 56))(v96, 0, 1, v278);
        v98 = *(void **)(v269 + v268);
        if (!v98)
          goto LABEL_180;
        v99 = *(_QWORD *)(v265 + 32);
        v100 = (char *)v30 + *(int *)(v97 + 64);
        v101 = v98;
        sub_100313D0C(v96, 0, v99);

        sub_1000073A0(v96, (uint64_t *)&unk_100640EB0);
        sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v89 = (uint64_t)v100;
      }
      sub_10001F544(v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v46 = v261;
LABEL_8:
      v47 = v270;
      v57 = (_QWORD *)v271;
      goto LABEL_9;
    }
    v71 = v44;
    (*(void (**)(unint64_t *, _QWORD *))(v47 + 96))(v30, v57);
    v72 = *v30;
    v73 = sub_10002A750((uint64_t *)&unk_10064FA40);
    v74 = swift_allocObject(v73, 40, 7);
    *(_OWORD *)(v74 + 16) = v263;
    *(_QWORD *)(v74 + 32) = v72;
    v281 = v74;
    v75 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v76 = sub_10002A750(&qword_100641150);
    v77 = sub_1000798C0();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v281, v76, v77, v56, v75);
    v78 = *(uint64_t (**)(void))(v266 + 48);
    v79 = v276;
    v80 = v78();
    v81 = 24;
    if (v80 != 1)
      v81 = 8;
    v82 = *(void **)(v269 + v268);
    if (!v82)
      goto LABEL_175;
    v257 = *(_QWORD *)(v265 + v81);
    v83 = v82;
    if ((IndexSet.isEmpty.getter(v83) & 1) != 0)
    {

LABEL_34:
      v44 = v71;
      goto LABEL_35;
    }
    v258 = v83;
    v102 = v251;
    sub_10000735C(v79, v251, (uint64_t *)&unk_100640EB0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v78)(v102, 1, v278) == 1)
    {
      v103 = sub_1000073A0(v102, (uint64_t *)&unk_100640EB0);
      __chkstk_darwin(v103);
      v104 = v258;
      *(&v225 - 4) = (uint64_t)v258;
      *(&v225 - 3) = (uint64_t)v46;
      *(&v225 - 2) = v257;
      sub_10030A8DC((void (*)(uint64_t))sub_10031B5CC, (uint64_t)(&v225 - 6), 0, 0, 0, 0);

      v56 = v255;
      goto LABEL_34;
    }
    sub_10001F580(v102, v254, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v106 = v258;
    v56 = v255;
    if (v258[qword_100645F38] == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v107 = type metadata accessor for Logger(0);
      v108 = sub_100012DC4(v107, (uint64_t)qword_100645EC0);
      v109 = Logger.logObject.getter(v108);
      v110 = static os_log_type_t.fault.getter(v109);
      if (os_log_type_enabled(v109, v110))
      {
        v111 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v111 = 0;
        _os_log_impl((void *)&_mh_execute_header, v109, v110, "Attempting to read sectionMetadata while it is being modified", v111, 2u);
        v112 = v111;
        v46 = v261;
        swift_slowDealloc(v112, -1, -1);
      }

    }
    v113 = &v106[qword_100645F30];
    v114 = *(_QWORD *)&v106[qword_100645F30 + 8];
    v115 = *(_QWORD *)&v106[qword_100645F30 + 16];
    v253 = *(_QWORD *)&v106[qword_100645F30];
    if (v253)
    {
      v44 = v71;
      swift_bridgeObjectRetain(v253);
      swift_bridgeObjectRetain(v114);
      swift_bridgeObjectRetain(v115);
      v117 = v114;
      v249 = v115;
    }
    else
    {
      v238 = v115;
      v239 = v114;
      LODWORD(v237) = v113[24];
      v121 = sub_10002A750((uint64_t *)&unk_100646400);
      v122 = swift_allocObject(v121, 24, 7);
      *(_QWORD *)(v122 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v205 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v205)
        {
          v206 = v205;
          if (v205 < 1)
            goto LABEL_182;
          v207 = &_swiftEmptyArrayStorage[4];
          do
          {
            v208 = *v207++;
            swift_weakAssign(v208 + 56, 0);
            swift_beginAccess(v208 + 64, v279, 1, 0);
            v209 = *(_QWORD *)(v208 + 64);
            *(_QWORD *)(v208 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v209);
            --v206;
          }
          while (v206);
        }
      }
      sub_100070B1C(v122);
      v124 = v123;
      v126 = v125;
      v128 = v127;
      v130 = v129;
      swift_release();
      v131 = v130 & 1;
      v132 = *(_QWORD *)v113;
      v236 = *((_QWORD *)v113 + 1);
      v133 = *((_QWORD *)v113 + 2);
      *(_QWORD *)v113 = v124;
      *((_QWORD *)v113 + 1) = v126;
      *((_QWORD *)v113 + 2) = v128;
      v113[24] = v131;
      v253 = v124;
      swift_bridgeObjectRetain(v124);
      swift_bridgeObjectRetain(v126);
      v249 = v128;
      v134 = v128;
      v117 = v126;
      swift_bridgeObjectRetain(v134);
      sub_1000072F0(v132, v236, v133);
      v116 = sub_1000072F0(0, v239, v238);
      v44 = (uint64_t)v260;
      v46 = v261;
    }
    v135 = (uint64_t)v246;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v116);
    if (!*(_QWORD *)(v117 + 16) || (v136 = sub_1002AA39C(v135), (v137 & 1) == 0))
    {
      sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      swift_bridgeObjectRelease(v117);
      v138 = v253;
      v57 = (_QWORD *)v271;
      goto LABEL_60;
    }
    v138 = *(_QWORD *)(*(_QWORD *)(v117 + 56) + 8 * v136);
    swift_bridgeObjectRetain(v138);
    sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v139 = v138 & 0xC000000000000001;
    if ((v138 & 0xC000000000000001) != 0)
    {
      if (v138 < 0)
        v140 = v138;
      else
        v140 = v138 & 0xFFFFFFFFFFFFFF8;
      v141 = __CocoaSet.startIndex.getter(v140);
      v143 = v142;
      v144 = __CocoaSet.endIndex.getter(v140);
      v146 = static __CocoaSet.Index.== infix(_:_:)(v141, v143, v144, v145);
      swift_bridgeObjectRelease(v144);
      v147 = v143;
      v148 = v141;
      v57 = (_QWORD *)v271;
      if ((v146 & 1) != 0)
        goto LABEL_120;
    }
    else
    {
      v149 = *(_BYTE *)(v138 + 32);
      v148 = 1 << v149;
      v150 = *(_QWORD *)(v138 + 56);
      if (v150)
      {
        v151 = 0;
        v57 = (_QWORD *)v271;
      }
      else
      {
        v57 = (_QWORD *)v271;
        if ((v149 & 0x3Fu) < 7)
        {
LABEL_119:
          v147 = *(unsigned int *)(v138 + 36);
LABEL_120:
          sub_10003E0E0(v148, v147, v139 != 0);
          swift_bridgeObjectRelease(v117);
          swift_bridgeObjectRelease(v253);
          v44 = (uint64_t)v260;
          v46 = v261;
LABEL_60:
          swift_bridgeObjectRelease(v138);
          swift_bridgeObjectRelease(v249);
          sub_10001F544(v254, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

          v45 = (uint64_t)v262;
          goto LABEL_61;
        }
        v150 = *(_QWORD *)(v138 + 64);
        if (v150)
        {
          v151 = 1;
        }
        else
        {
          v186 = 0;
          v187 = (unint64_t)(v148 + 63) >> 6;
          if (v187 <= 2)
            v187 = 2;
          v188 = v187 - 2;
          do
          {
            if (v188 == v186)
              goto LABEL_119;
            v150 = *(_QWORD *)(v138 + 72 + 8 * v186++);
          }
          while (!v150);
          v151 = v186 + 1;
        }
      }
      v141 = __clz(__rbit64(v150)) + (v151 << 6);
      v147 = *(unsigned int *)(v138 + 36);
      if (v141 == v148)
        goto LABEL_120;
    }
    v152 = v139 != 0;
    v153 = v147;
    v154 = sub_100478468(v141, v147, v152, v138);
    sub_10003E0E0(v141, v153, v152);
    swift_bridgeObjectRelease(v249);
    swift_bridgeObjectRelease(v117);
    swift_bridgeObjectRelease(v253);
    swift_bridgeObjectRelease(v138);
    if (*(_BYTE *)(v154 + 72) != 2)
    {
      sub_10001F544(v254, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

      swift_release();
      v44 = (uint64_t)v260;
      v45 = (uint64_t)v262;
      v46 = v261;
      goto LABEL_61;
    }
    v236 = sub_10006B3DC();
    v231 = v156;
    v158 = *(_QWORD *)(v157 + 16);
    v159 = v233;
    v160 = v234;
    v238 = v157;
    v237 = v154;
    if (!v158)
      goto LABEL_152;
    v161 = v155;
    v162 = sub_1002AA398(v154);
    v163 = (uint64_t)v232;
    if ((v66 & 1) != 0)
    {
      v164 = *(_QWORD *)(*(_QWORD *)(v238 + 56) + 8 * v162);
      if ((v164 & 0x8000000000000000) != 0)
        goto LABEL_172;
      if (v164 >= *(_QWORD *)(v236 + 16))
      {
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
      if (*(_QWORD *)(v236 + 16 * v164 + 32) == v154)
      {
        if (*(_QWORD *)(v238 + 16) && (v181 = sub_1002AA398(v154), v163 = (uint64_t)v232, (v182 & 1) != 0))
        {
          IndexPath.init(row:section:)(0, *(_QWORD *)(*(_QWORD *)(v238 + 56) + 8 * v181));
          v183 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
          v184 = v163;
          v185 = 0;
        }
        else
        {
          v183 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
          v184 = v163;
          v185 = 1;
        }
        v189 = v229;
        v183(v184, v185, 1, v229);
        goto LABEL_155;
      }
    }
    if (!*(_QWORD *)(v238 + 16))
      goto LABEL_152;
    v165 = sub_1002AA398(v154);
    if ((v66 & 1) == 0)
      goto LABEL_152;
    v166 = v159;
    v167 = *(_QWORD *)(*(_QWORD *)(v238 + 56) + 8 * v165);
    if ((v161 & 1) != 0)
    {
      v226 = *(_QWORD *)(*(_QWORD *)(v238 + 56) + 8 * v165);
      Strong = swift_weakLoadStrong(v154 + 56);
      swift_retain();
      v169 = 0;
      if (!Strong)
      {
LABEL_135:
        swift_release();
        v195 = v169 - 1;
        if (__OFSUB__(v169, 1))
        {
LABEL_178:
          __break(1u);
          goto LABEL_179;
        }
        v159 = v233;
        if ((v195 & 0x8000000000000000) == 0)
        {
          v196 = (uint64_t)v230;
          IndexPath.init(row:section:)(v195, v226);
          v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
          v198 = v159;
          v189 = v229;
          v197(v196, 0, 1, v229);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v196, 1, v189) == 1)
            goto LABEL_153;
LABEL_140:
          v201 = *(void (**)(char *, uint64_t, uint64_t))(v233 + 32);
          v201(v160, v196, v189);
          v202 = (void (*)(uint64_t *, _QWORD))IndexPath.row.modify(&v281);
          if (!__OFADD__(*v66, 1))
          {
            ++*v66;
            v202(&v281, 0);
            v163 = (uint64_t)v232;
            v201(v232, (uint64_t)v160, v189);
            v203 = (char *)v163;
            v204 = 0;
            goto LABEL_154;
          }
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
          goto LABEL_183;
        }
LABEL_152:
        v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
        v196 = (uint64_t)v230;
        v189 = v229;
        v197((uint64_t)v230, 1, 1, v229);
        goto LABEL_153;
      }
      v253 = v154;
      while (2)
      {
        v170 = __OFADD__(v169++, 1);
        if (v170)
        {
LABEL_169:
          __break(1u);
          goto LABEL_170;
        }
        v171 = Strong;
        swift_beginAccess(Strong + 64, v280, 0, 0);
        v172 = *(_QWORD *)(Strong + 64);
        if ((unint64_t)v172 >> 62)
        {
          if (v172 < 0)
            v180 = *(_QWORD *)(Strong + 64);
          else
            v180 = v172 & 0xFFFFFFFFFFFFFF8;
          swift_retain();
          swift_bridgeObjectRetain(v172);
          v173 = _CocoaArrayWrapper.endIndex.getter(v180);
          if (!v173)
            goto LABEL_77;
LABEL_82:
          v249 = v172 & 0xC000000000000001;
          if ((v172 & 0xC000000000000001) != 0)
          {
            v174 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v172);
          }
          else
          {
            if (!*(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_171;
            v174 = *(_QWORD *)(v172 + 32);
            swift_retain();
          }
          if (v174 != v253)
          {
            v175 = 0;
            v239 = v172 & 0xFFFFFFFFFFFFFF8;
            v176 = v173 - 1;
            while (1)
            {
              v170 = __OFADD__(v169, 1);
              v177 = v169 + 1;
              if (v170)
                break;
              if ((*(_BYTE *)(v174 + 48) & 1) != 0)
              {
                v281 = 0;
                sub_10019D874(v174, &v281);
                v178 = v281;
                *(_QWORD *)(v174 + 40) = v281;
                *(_BYTE *)(v174 + 48) = 0;
              }
              else
              {
                v178 = *(_QWORD *)(v174 + 40);
              }
              swift_release();
              v170 = __OFADD__(v177, v178);
              v169 = v177 + v178;
              if (v170)
                goto LABEL_166;
              if (v176 == v175)
                goto LABEL_77;
              v179 = v175 + 1;
              if (v249)
              {
                v174 = specialized _ArrayBuffer._getElementSlowPath(_:)(v175 + 1, v172);
                if (__OFADD__(v179, 1))
                  goto LABEL_167;
              }
              else
              {
                if (v179 >= *(_QWORD *)(v239 + 16))
                  goto LABEL_168;
                v174 = *(_QWORD *)(v172 + 8 * v175 + 40);
                swift_retain();
                if (__OFADD__(v179, 1))
                  goto LABEL_167;
              }
              ++v175;
              if (v174 == v253)
                goto LABEL_100;
            }
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
            goto LABEL_169;
          }
LABEL_100:
          swift_bridgeObjectRelease(v172);
          swift_release_n(v253, 2);
        }
        else
        {
          v173 = *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain(v172);
          if (v173)
            goto LABEL_82;
LABEL_77:
          swift_release();
          swift_bridgeObjectRelease(v172);
        }
        Strong = swift_weakLoadStrong(v171 + 56);
        swift_release();
        v253 = v171;
        v160 = v234;
        if (!Strong)
          goto LABEL_135;
        continue;
      }
    }
    if ((v167 & 0x8000000000000000) != 0)
      goto LABEL_176;
    if (v167 >= *(_QWORD *)(v236 + 16))
      goto LABEL_177;
    v190 = *(_QWORD *)(v236 + 16 * v167 + 40);
    if ((unint64_t)v190 >> 62)
    {
      if (v190 < 0)
        v210 = *(_QWORD *)(v236 + 16 * v167 + 40);
      else
        v210 = v190 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain(v190);
      v191 = _CocoaArrayWrapper.endIndex.getter(v210);
      if (!v191)
      {
LABEL_151:
        swift_bridgeObjectRelease(v190);
        swift_release();
        v159 = v166;
        goto LABEL_152;
      }
    }
    else
    {
      v191 = *(_QWORD *)((v190 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain(v190);
      if (!v191)
        goto LABEL_151;
    }
    v192 = 0;
    while (1)
    {
      if ((v190 & 0xC000000000000001) != 0)
      {
        v193 = specialized _ArrayBuffer._getElementSlowPath(_:)(v192, v190);
        swift_unknownObjectRelease(v193);
        if (v193 == v237)
          goto LABEL_139;
      }
      else if (*(_QWORD *)(v190 + 8 * v192 + 32) == v237)
      {
LABEL_139:
        swift_bridgeObjectRelease(v190);
        swift_release();
        v196 = (uint64_t)v230;
        IndexPath.init(row:section:)(v192, v167);
        v199 = v233;
        v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v233 + 56);
        v189 = v229;
        v197(v196, 0, 1, v229);
        v200 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v196, 1, v189);
        v160 = v234;
        if (v200 != 1)
          goto LABEL_140;
LABEL_153:
        sub_1000073A0(v196, &qword_100646950);
        v163 = (uint64_t)v232;
        v203 = v232;
        v204 = 1;
LABEL_154:
        v197((uint64_t)v203, v204, 1, v189);
LABEL_155:
        v211 = v231;
        swift_bridgeObjectRelease(v238);
        swift_bridgeObjectRelease(v211);
        v212 = swift_bridgeObjectRelease(v236);
        v213 = v233;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v233 + 48))(v163, 1, v189, v212) == 1)
        {
          sub_1000073A0(v163, &qword_100646950);
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v214 = type metadata accessor for Logger(0);
          v215 = sub_100012DC4(v214, (uint64_t)qword_100645EC0);
          v216 = Logger.logObject.getter(v215);
          v217 = static os_log_type_t.fault.getter(v216);
          v218 = os_log_type_enabled(v216, v217);
          v44 = (uint64_t)v260;
          v45 = (uint64_t)v262;
          if (v218)
          {
            v219 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v219 = 0;
            _os_log_impl((void *)&_mh_execute_header, v216, v217, "Unable to find childrenStartIndexPath", v219, 2u);
            swift_slowDealloc(v219, -1, -1);
          }
          swift_release();

          sub_10001F544(v254, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v46 = v261;
        }
        else
        {
          v220 = v228;
          v221 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v213 + 32))(v228, v163, v189);
          __chkstk_darwin(v221);
          v222 = v258;
          v223 = v261;
          *(&v225 - 6) = (uint64_t)v258;
          *(&v225 - 5) = (uint64_t)v223;
          *(&v225 - 4) = v237;
          *(&v225 - 3) = (uint64_t)v220;
          *(&v225 - 2) = v257;
          sub_10030A8DC((void (*)(uint64_t))sub_10031B4DC, (uint64_t)(&v225 - 8), 0, 0, 0, 0);
          swift_release();
          sub_10001F544(v254, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v224 = *(void (**)(char *, uint64_t))(v213 + 8);
          v46 = v223;
          v224(v220, v189);

          v44 = (uint64_t)v260;
          v45 = (uint64_t)v262;
        }
LABEL_35:
        v57 = (_QWORD *)v271;
LABEL_61:
        (*(void (**)(char *, uint64_t))(v264 + 8))(v46, v56);
        v47 = v270;
LABEL_9:
        if (++v53 == v275)
        {
          v48 = (uint64_t)v57;
          v49 = v245;
          goto LABEL_4;
        }
        v272(v30, v274 + v273 * v53, (uint64_t)v57);
        goto LABEL_11;
      }
      v194 = v192 + 1;
      if (__OFADD__(v192, 1))
      {
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
        goto LABEL_173;
      }
      ++v192;
      if (v194 == v191)
      {
        swift_bridgeObjectRelease(v190);
        swift_release();
        v159 = v233;
        goto LABEL_152;
      }
    }
  }
}

uint64_t sub_100319798(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  _QWORD *v69;
  _BOOL4 v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  int v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t inited;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t *v167;
  uint64_t Strong;
  uint64_t v169;
  BOOL v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  void (*v182)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v197;
  unsigned int (*v198)(uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  int v200;
  void (*v201)(char *, uint64_t, uint64_t);
  void (*v202)(uint64_t *, _QWORD);
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  NSObject *v213;
  os_log_type_t v214;
  _BOOL4 v215;
  uint8_t *v216;
  char *v217;
  uint64_t v218;
  id v219;
  char *v220;
  uint64_t v221;
  void (*v222)(char *, uint64_t);
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  int v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  _BYTE *v255;
  char *v256;
  int v257;
  char *v258;
  char *v259;
  char *v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(unint64_t *, uint64_t, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  char v276[8];
  char v277[4];
  uint64_t v278;
  char v279[8];

  v263 = a5;
  v268 = a4;
  v7 = sub_10002A750(&qword_100646950);
  v8 = __chkstk_darwin(v7);
  v228 = (char *)&v223 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v229 = (char *)&v223 - v10;
  v11 = type metadata accessor for IndexPath(0);
  v230 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v231 = (char *)&v223 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v226 = (char *)&v223 - v14;
  v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v15);
  v244 = (char *)&v223 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v264 = *(_QWORD *)(v275 - 8);
  v17 = __chkstk_darwin(v275);
  v251 = (uint64_t)&v223 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v232 = (uint64_t)&v223 - v20;
  v21 = __chkstk_darwin(v19);
  v258 = (char *)&v223 - v22;
  __chkstk_darwin(v21);
  v259 = (char *)&v223 - v23;
  v24 = type metadata accessor for IndexSet(0);
  v262 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v260 = (char *)&v223 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v274 = (char *)&v223 - v27;
  v28 = sub_10002A750(&qword_100655928);
  v269 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v30 = (unint64_t *)((char *)&v223 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_10002A750((uint64_t *)&unk_100640E00);
  v32 = __chkstk_darwin(v31);
  v249 = (uint64_t)&v223 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v245 = (uint64_t)&v223 - v35;
  v36 = __chkstk_darwin(v34);
  v250 = (char *)&v223 - v37;
  __chkstk_darwin(v36);
  v39 = (char *)&v223 - v38;
  v40 = sub_10002A750(&qword_100655930);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = __chkstk_darwin(v40);
  v242 = (uint64_t)&v223 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = a1(v42);
  v241 = *(_QWORD *)(a3 + 16);
  if (v241)
  {
    v227 = v11;
    v252 = v24;
    v240 = *(int *)(v40 + 28);
    v267 = qword_10065D8E0;
    v239 = a3 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
    v238 = *(_QWORD *)(v41 + 72);
    v266 = enum case for ExtendedPatch.insertion<A>(_:);
    v257 = enum case for ExtendedPatch.deletion<A>(_:);
    v253 = enum case for ExtendedPatch.move<A>(_:);
    v248 = enum case for ExtendedPatch.update<A>(_:);
    v224 = a3;
    swift_bridgeObjectRetain(a3);
    v45 = 0;
    v261 = xmmword_100520250;
    v46 = (uint64_t)v258;
    v47 = (uint64_t)v259;
    v48 = v260;
    v49 = v269;
    v256 = v39;
    v50 = v28;
    v265 = v28;
    while (1)
    {
      v246 = v45;
      v53 = v242;
      sub_10000735C(v239 + v238 * v45, v242, &qword_100655930);
      sub_10000735C(v53, (uint64_t)v39, (uint64_t *)&unk_100640E00);
      v54 = *(_QWORD *)(v53 + v240);
      swift_bridgeObjectRetain(v54);
      sub_1000073A0(v53, &qword_100655930);
      v273 = *(_QWORD *)(v54 + 16);
      if (v273)
        break;
      v51 = v54;
LABEL_4:
      swift_bridgeObjectRelease(v51);
      v52 = v246 + 1;
      sub_1000073A0((uint64_t)v39, (uint64_t *)&unk_100640E00);
      v45 = v52;
      if (v52 == v241)
        return swift_bridgeObjectRelease(v224);
    }
    v55 = 0;
    v56 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v243 = v54;
    v272 = v54 + v56;
    v57 = *(_QWORD *)(v49 + 72);
    v270 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v49 + 16);
    v271 = v57;
    v58 = v252;
    v59 = (_QWORD *)v50;
    v270(v30, v272, v50);
LABEL_13:
    v61 = (*(uint64_t (**)(unint64_t *, _QWORD *))(v49 + 88))(v30, v59);
    if (v61 == v266)
    {
      (*(void (**)(unint64_t *, _QWORD *))(v49 + 96))(v30, v59);
      v62 = *v30;
      v63 = sub_10002A750((uint64_t *)&unk_10064FA40);
      v64 = swift_allocObject(v63, 40, 7);
      *(_OWORD *)(v64 + 16) = v261;
      *(_QWORD *)(v64 + 32) = v62;
      v278 = v64;
      v65 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v66 = sub_10002A750(&qword_100641150);
      v67 = sub_1000798C0();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v278, v66, v67, v58, v65);
      v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v264 + 48);
      v70 = v68(v39, 1, v275) == 1;
      v71 = *(void **)(v268 + v267);
      if (v71)
      {
        v72 = *(_QWORD *)(v263 + 16 * v70);
        v73 = v71;
        if ((IndexSet.isEmpty.getter(v73) & 1) != 0)
        {

        }
        else
        {
          v74 = *(_QWORD *)&v73[qword_100645F10];
          if (v74)
          {
            v75 = *(uint64_t (**)(uint64_t))(v74 + 16);
            v76 = swift_retain(*(_QWORD *)&v73[qword_100645F10]);
            if ((v75(v76) & 1) != 0)
            {
              v39 = v256;
              v77 = v245;
              sub_10000735C((uint64_t)v256, v245, (uint64_t *)&unk_100640E00);
              if (v68((char *)v77, 1, v275) == 1)
              {
                v78 = sub_1000073A0(v77, (uint64_t *)&unk_100640E00);
                __chkstk_darwin(v78);
                v79 = v274;
                *(&v223 - 4) = (unint64_t)v73;
                *(&v223 - 3) = (unint64_t)v79;
                *(&v223 - 2) = v74;
                *(&v223 - 1) = v72;
                sub_10030B054((void (*)(uint64_t))sub_10031B2DC, (uint64_t)(&v223 - 6), 0, 0, 0, 0);

                swift_release(v74);
              }
              else
              {
                v118 = v232;
                v119 = sub_10001F580(v77, v232, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                __chkstk_darwin(v119);
                v120 = v274;
                *(&v223 - 4) = (unint64_t)v73;
                *(&v223 - 3) = (unint64_t)v120;
                *(&v223 - 2) = v118;
                *(&v223 - 1) = v72;
                sub_10030B054((void (*)(uint64_t))sub_10031B308, (uint64_t)(&v223 - 6), 0, 0, 0, 0);
                swift_release(v74);
                v121 = v118;
                v39 = v256;
                sub_10001F544(v121, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

              }
              v48 = v260;
              v58 = v252;
            }
            else
            {

              swift_release(v74);
              v48 = v260;
              v39 = v256;
            }
          }
          else
          {

            v48 = v260;
          }
        }
        v60 = (uint64_t)v30 + *(int *)(sub_10002A750(&qword_100655948) + 48);
        (*(void (**)(char *, uint64_t))(v262 + 8))(v274, v58);
        sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v46 = (uint64_t)v258;
        v47 = (uint64_t)v259;
        goto LABEL_9;
      }
      goto LABEL_175;
    }
    if (v61 != v257)
    {
      if (v61 != v253)
      {
        v69 = v59;
        v97 = (uint64_t)v250;
        if (v61 != v248)
        {
LABEL_184:
          result = _diagnoseUnexpectedEnumCase<A>(type:)(v69, v69);
          __break(1u);
          return result;
        }
        (*(void (**)(unint64_t *, _QWORD *))(v49 + 96))(v30, v69);
        v98 = sub_10002A750(&qword_100655938);
        sub_10001F580((uint64_t)v30 + *(int *)(v98 + 48), v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_10002B1E8(v46, v97, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v264 + 56))(v97, 0, 1, v275);
        v99 = *(void **)(v268 + v267);
        if (v99)
        {
          v100 = *(_QWORD *)(v263 + 32);
          v101 = (uint64_t)v30 + *(int *)(v98 + 64);
          v102 = v99;
          sub_100314AE0(v97, 0, v100);

          sub_1000073A0(v97, (uint64_t *)&unk_100640E00);
          sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_10001F544(v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v48 = v260;
          v49 = v269;
          v39 = v256;
          goto LABEL_10;
        }
        goto LABEL_181;
      }
      (*(void (**)(unint64_t *, _QWORD *))(v49 + 96))(v30, v59);
      v93 = *v30;
      v92 = v30[1];
      v94 = sub_10002A750(&qword_100655940);
      sub_10001F580((uint64_t)v30 + *(int *)(v94 + 64), v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v95 = *(void **)(v268 + v267);
      if (v95)
      {
        v96 = v95;
        sub_100311DA0(v47, v93, (uint64_t)v39, v92, (uint64_t)v39);

        sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v48 = v260;
LABEL_9:
        v49 = v269;
LABEL_10:
        v59 = (_QWORD *)v265;
        goto LABEL_11;
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
      goto LABEL_182;
    }
    v80 = v46;
    (*(void (**)(unint64_t *, _QWORD *))(v49 + 96))(v30, v59);
    v81 = *v30;
    v82 = sub_10002A750((uint64_t *)&unk_10064FA40);
    v83 = swift_allocObject(v82, 40, 7);
    *(_OWORD *)(v83 + 16) = v261;
    *(_QWORD *)(v83 + 32) = v81;
    v278 = v83;
    v84 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v85 = sub_10002A750(&qword_100641150);
    v86 = sub_1000798C0();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v278, v85, v86, v58, v84);
    v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v264 + 48);
    v88 = v87(v39, 1, v275);
    v89 = 24;
    if (v88 != 1)
      v89 = 8;
    v90 = *(void **)(v268 + v267);
    if (!v90)
      goto LABEL_176;
    v254 = *(_QWORD *)(v263 + v89);
    v91 = v90;
    if ((IndexSet.isEmpty.getter(v91) & 1) != 0)
    {

      v49 = v269;
LABEL_35:
      v46 = v80;
      goto LABEL_61;
    }
    v255 = v91;
    v103 = v249;
    sub_10000735C((uint64_t)v39, v249, (uint64_t *)&unk_100640E00);
    if (v87((char *)v103, 1, v275) == 1)
    {
      v104 = sub_1000073A0(v103, (uint64_t *)&unk_100640E00);
      __chkstk_darwin(v104);
      v105 = v255;
      *(&v223 - 4) = (unint64_t)v255;
      *(&v223 - 3) = (unint64_t)v48;
      *(&v223 - 2) = v254;
      sub_10030B054((void (*)(uint64_t))sub_10031B29C, (uint64_t)(&v223 - 6), 0, 0, 0, 0);

      v49 = v269;
      v58 = v252;
      goto LABEL_35;
    }
    sub_10001F580(v103, v251, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v106 = v255;
    v58 = v252;
    if (v255[qword_100645F38] == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v107 = type metadata accessor for Logger(0);
      v108 = sub_100012DC4(v107, (uint64_t)qword_100645EC0);
      v109 = Logger.logObject.getter(v108);
      v110 = static os_log_type_t.fault.getter(v109);
      if (os_log_type_enabled(v109, v110))
      {
        v111 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v111 = 0;
        _os_log_impl((void *)&_mh_execute_header, v109, v110, "Attempting to read sectionMetadata while it is being modified", v111, 2u);
        swift_slowDealloc(v111, -1, -1);
      }

    }
    v112 = &v106[qword_100645F30];
    v114 = *(_QWORD *)&v106[qword_100645F30];
    v113 = *(_QWORD *)&v106[qword_100645F30 + 8];
    v115 = *(_QWORD *)&v106[qword_100645F30 + 16];
    if (v114)
    {
      v46 = v80;
      v247 = *(uint64_t **)&v106[qword_100645F30];
      v116 = v113;
      v117 = v115;
    }
    else
    {
      LODWORD(v235) = v106[qword_100645F30 + 24];
      v236 = v115;
      v237 = v113;
      v122 = sub_10002A750((uint64_t *)&unk_100640E10);
      inited = swift_initStackObject(v122, v279);
      *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v203 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v203)
        {
          v204 = v203;
          if (v203 < 1)
            goto LABEL_183;
          v205 = &_swiftEmptyArrayStorage[4];
          do
          {
            v206 = *v205++;
            swift_weakAssign(v206 + 56, 0);
            swift_beginAccess(v206 + 64, v276, 1, 0);
            v207 = *(_QWORD *)(v206 + 64);
            *(_QWORD *)(v206 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v207);
            --v204;
          }
          while (v204);
        }
      }
      sub_100070F40(inited);
      v125 = v124;
      v127 = v126;
      v129 = v128;
      v131 = v130;
      swift_setDeallocating(inited);
      swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
      v132 = *((_QWORD *)v112 + 1);
      v234 = *(_QWORD *)v112;
      v233 = *((_QWORD *)v112 + 2);
      *(_QWORD *)v112 = v125;
      *((_QWORD *)v112 + 1) = v127;
      *((_QWORD *)v112 + 2) = v129;
      v112[24] = v131 & 1;
      v247 = v125;
      v133 = v125;
      v117 = v129;
      v116 = v127;
      swift_bridgeObjectRetain(v133);
      swift_bridgeObjectRetain(v127);
      swift_bridgeObjectRetain(v117);
      sub_1000072F0(v234, v132, v233);
      v46 = (uint64_t)v258;
      v113 = v237;
      v115 = v236;
    }
    v134 = sub_10002340C(v114, v113, v115);
    v135 = (uint64_t)v244;
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v134);
    v39 = v256;
    if (!*(_QWORD *)(v116 + 16) || (v136 = sub_1002AA6DC(v135), (v137 & 1) == 0))
    {
      sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      swift_bridgeObjectRelease(v116);
      v138 = (uint64_t)v247;
      v48 = v260;
      goto LABEL_58;
    }
    v138 = *(_QWORD *)(*(_QWORD *)(v116 + 56) + 8 * v136);
    swift_bridgeObjectRetain(v138);
    sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v139 = v138 & 0xC000000000000001;
    if ((v138 & 0xC000000000000001) != 0)
    {
      if (v138 < 0)
        v140 = v138;
      else
        v140 = v138 & 0xFFFFFFFFFFFFFF8;
      v237 = v138 & 0xC000000000000001;
      v141 = __CocoaSet.startIndex.getter(v140);
      v143 = v142;
      v144 = __CocoaSet.endIndex.getter(v140);
      v146 = static __CocoaSet.Index.== infix(_:_:)(v141, v143, v144, v145);
      swift_bridgeObjectRelease(v144);
      v139 = v237;
      v147 = v141;
      if ((v146 & 1) != 0)
        goto LABEL_122;
    }
    else
    {
      v148 = *(_BYTE *)(v138 + 32);
      v147 = 1 << v148;
      v149 = *(_QWORD *)(v138 + 56);
      if (v149)
      {
        v150 = 0;
      }
      else
      {
        if ((v148 & 0x3Fu) < 7)
        {
LABEL_121:
          v143 = *(unsigned int *)(v138 + 36);
LABEL_122:
          sub_10003E0E0(v147, v143, v139 != 0);
          swift_bridgeObjectRelease(v116);
          swift_bridgeObjectRelease(v247);
          v46 = (uint64_t)v258;
          v48 = v260;
          v39 = v256;
LABEL_58:
          swift_bridgeObjectRelease(v138);
          swift_bridgeObjectRelease(v117);
          sub_10001F544(v251, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

LABEL_59:
          v47 = (uint64_t)v259;
          goto LABEL_60;
        }
        v149 = *(_QWORD *)(v138 + 64);
        if (v149)
        {
          v150 = 1;
        }
        else
        {
          v185 = 0;
          v186 = (unint64_t)(v147 + 63) >> 6;
          if (v186 <= 2)
            v186 = 2;
          v187 = v186 - 2;
          do
          {
            if (v187 == v185)
              goto LABEL_121;
            v149 = *(_QWORD *)(v138 + 72 + 8 * v185++);
          }
          while (!v149);
          v150 = v185 + 1;
        }
      }
      v141 = __clz(__rbit64(v149)) + (v150 << 6);
      v143 = *(unsigned int *)(v138 + 36);
      if (v141 == v147)
        goto LABEL_122;
    }
    v151 = v139 != 0;
    v152 = sub_1004786DC(v141, v143, v139 != 0, v138);
    sub_10003E0E0(v141, v143, v151);
    swift_bridgeObjectRelease(v117);
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v247);
    swift_bridgeObjectRelease(v138);
    if (*(_BYTE *)(v152 + 72) != 2)
    {
      sub_10001F544(v251, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

      swift_release(v152);
      v46 = (uint64_t)v258;
      v47 = (uint64_t)v259;
      v48 = v260;
      v49 = v269;
      v39 = v256;
      goto LABEL_61;
    }
    v236 = v152;
    v154 = sub_10006B64C();
    v233 = v155;
    v157 = *(_QWORD *)(v156 + 16);
    v158 = v230;
    v159 = v231;
    v39 = v256;
    v234 = v156;
    if (!v157)
      goto LABEL_154;
    v160 = v153;
    v161 = sub_1002AA398(v236);
    v162 = (uint64_t)v229;
    if ((v69 & 1) != 0)
    {
      v163 = *(_QWORD *)(*(_QWORD *)(v234 + 56) + 8 * v161);
      if ((v163 & 0x8000000000000000) != 0)
        goto LABEL_173;
      if (v163 >= *(_QWORD *)(v154 + 16))
      {
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
        goto LABEL_179;
      }
      if (*(_QWORD *)(v154 + 16 * v163 + 32) == v236)
      {
        if (*(_QWORD *)(v234 + 16) && (v180 = sub_1002AA398(v236), v162 = (uint64_t)v229, (v181 & 1) != 0))
        {
          IndexPath.init(row:section:)(0, *(_QWORD *)(*(_QWORD *)(v234 + 56) + 8 * v180));
          v182 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56);
          v183 = v162;
          v184 = 0;
        }
        else
        {
          v182 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56);
          v183 = v162;
          v184 = 1;
        }
        v188 = v227;
        v182(v183, v184, 1, v227);
        goto LABEL_156;
      }
    }
    if (!*(_QWORD *)(v234 + 16))
      goto LABEL_154;
    v164 = sub_1002AA398(v236);
    if ((v69 & 1) == 0)
      goto LABEL_154;
    v165 = v158;
    v166 = *(_QWORD *)(*(_QWORD *)(v234 + 56) + 8 * v164);
    v225 = v154;
    if ((v160 & 1) != 0)
    {
      v223 = v166;
      v167 = (uint64_t *)v236;
      Strong = swift_weakLoadStrong(v236 + 56);
      swift_retain(v167);
      v169 = 0;
      if (Strong)
      {
        v247 = v167;
        do
        {
          v170 = __OFADD__(v169++, 1);
          if (v170)
          {
LABEL_170:
            __break(1u);
            goto LABEL_171;
          }
          v167 = (uint64_t *)Strong;
          swift_beginAccess(Strong + 64, v277, 0, 0);
          v171 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v171 >> 62)
          {
            if (v171 < 0)
              v179 = *(_QWORD *)(Strong + 64);
            else
              v179 = v171 & 0xFFFFFFFFFFFFFF8;
            swift_retain(v167);
            swift_bridgeObjectRetain(v171);
            v172 = _CocoaArrayWrapper.endIndex.getter(v179);
            if (!v172)
            {
LABEL_80:
              swift_release(v247);
              swift_bridgeObjectRelease(v171);
              v39 = v256;
              goto LABEL_81;
            }
          }
          else
          {
            v172 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain(Strong);
            swift_bridgeObjectRetain(v171);
            if (!v172)
              goto LABEL_80;
          }
          v237 = v171 & 0xC000000000000001;
          if ((v171 & 0xC000000000000001) != 0)
          {
            v173 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v171);
          }
          else
          {
            if (!*(_QWORD *)((v171 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_172;
            v173 = *(_QWORD *)(v171 + 32);
            swift_retain(v173);
          }
          if ((uint64_t *)v173 != v247)
          {
            v174 = 0;
            v235 = v171 & 0xFFFFFFFFFFFFFF8;
            v175 = v172 - 1;
            while (1)
            {
              v170 = __OFADD__(v169, 1);
              v176 = v169 + 1;
              if (v170)
                break;
              if ((*(_BYTE *)(v173 + 48) & 1) != 0)
              {
                v278 = 0;
                sub_10019D874(v173, &v278);
                v177 = v278;
                *(_QWORD *)(v173 + 40) = v278;
                *(_BYTE *)(v173 + 48) = 0;
              }
              else
              {
                v177 = *(_QWORD *)(v173 + 40);
              }
              swift_release(v173);
              v170 = __OFADD__(v176, v177);
              v169 = v176 + v177;
              if (v170)
                goto LABEL_167;
              if (v175 == v174)
              {
                swift_release(v247);
                swift_bridgeObjectRelease(v171);
                goto LABEL_105;
              }
              v178 = v174 + 1;
              if (v237)
              {
                v173 = specialized _ArrayBuffer._getElementSlowPath(_:)(v174 + 1, v171);
                if (__OFADD__(v178, 1))
                  goto LABEL_168;
              }
              else
              {
                if (v178 >= *(_QWORD *)(v235 + 16))
                  goto LABEL_169;
                v173 = *(_QWORD *)(v171 + 8 * v174 + 40);
                swift_retain(v173);
                if (__OFADD__(v178, 1))
                  goto LABEL_168;
              }
              ++v174;
              if ((uint64_t *)v173 == v247)
                goto LABEL_103;
            }
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
            goto LABEL_170;
          }
LABEL_103:
          swift_bridgeObjectRelease(v171);
          swift_release_n(v247, 2);
LABEL_105:
          v39 = v256;
          v154 = v225;
LABEL_81:
          Strong = swift_weakLoadStrong(v167 + 7);
          swift_release(v167);
          v247 = v167;
          v159 = v231;
        }
        while (Strong);
      }
      swift_release(v167);
      v194 = v169 - 1;
      if (__OFSUB__(v169, 1))
      {
LABEL_179:
        __break(1u);
        goto LABEL_180;
      }
      v158 = v230;
      if ((v194 & 0x8000000000000000) == 0)
      {
        v195 = (uint64_t)v228;
        IndexPath.init(row:section:)(v194, v223);
        v196 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v158 + 56);
        v197 = v158;
        v188 = v227;
        v196(v195, 0, 1, v227);
        v198 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
        v154 = v225;
        if (v198(v195, 1, v188) == 1)
          goto LABEL_155;
LABEL_142:
        v201 = *(void (**)(char *, uint64_t, uint64_t))(v230 + 32);
        v201(v159, v195, v188);
        v202 = (void (*)(uint64_t *, _QWORD))IndexPath.row.modify(&v278);
        if (!__OFADD__(*v69, 1))
        {
          ++*v69;
          v202(&v278, 0);
          v162 = (uint64_t)v229;
          v201(v229, (uint64_t)v159, v188);
          v196(v162, 0, 1, v188);
          v154 = v225;
          goto LABEL_156;
        }
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
        goto LABEL_184;
      }
LABEL_154:
      v196 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v158 + 56);
      v195 = (uint64_t)v228;
      v188 = v227;
      v196((uint64_t)v228, 1, 1, v227);
      goto LABEL_155;
    }
    if ((v166 & 0x8000000000000000) != 0)
      goto LABEL_177;
    if (v166 >= *(_QWORD *)(v154 + 16))
      goto LABEL_178;
    v189 = *(_QWORD *)(v154 + 16 * v166 + 40);
    if ((unint64_t)v189 >> 62)
    {
      if (v189 < 0)
        v208 = *(_QWORD *)(v154 + 16 * v166 + 40);
      else
        v208 = v189 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v236);
      swift_bridgeObjectRetain(v189);
      v190 = _CocoaArrayWrapper.endIndex.getter(v208);
      if (!v190)
      {
LABEL_153:
        swift_bridgeObjectRelease(v189);
        swift_release(v236);
        v154 = v225;
        v158 = v165;
        goto LABEL_154;
      }
    }
    else
    {
      v190 = *(_QWORD *)((v189 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(v236);
      swift_bridgeObjectRetain(v189);
      if (!v190)
        goto LABEL_153;
    }
    v191 = 0;
    while (1)
    {
      if ((v189 & 0xC000000000000001) != 0)
      {
        v192 = specialized _ArrayBuffer._getElementSlowPath(_:)(v191, v189);
        swift_unknownObjectRelease(v192);
        if (v192 == v236)
          goto LABEL_141;
      }
      else if (*(_QWORD *)(v189 + 8 * v191 + 32) == v236)
      {
LABEL_141:
        swift_bridgeObjectRelease(v189);
        swift_release(v236);
        v195 = (uint64_t)v228;
        IndexPath.init(row:section:)(v191, v166);
        v199 = v230;
        v196 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v230 + 56);
        v188 = v227;
        v196(v195, 0, 1, v227);
        v200 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v195, 1, v188);
        v159 = v231;
        v154 = v225;
        if (v200 != 1)
          goto LABEL_142;
LABEL_155:
        sub_1000073A0(v195, &qword_100646950);
        v162 = (uint64_t)v229;
        v196((uint64_t)v229, 1, 1, v188);
LABEL_156:
        v209 = v233;
        swift_bridgeObjectRelease(v234);
        swift_bridgeObjectRelease(v209);
        swift_bridgeObjectRelease(v154);
        v210 = v230;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(v162, 1, v188) != 1)
        {
          v217 = v226;
          v218 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 32))(v226, v162, v188);
          v247 = (uint64_t *)&v223;
          __chkstk_darwin(v218);
          v219 = v255;
          v220 = v260;
          *(&v223 - 6) = (unint64_t)v255;
          *(&v223 - 5) = (unint64_t)v220;
          v221 = v236;
          *(&v223 - 4) = v236;
          *(&v223 - 3) = (unint64_t)v217;
          *(&v223 - 2) = v254;
          sub_10030B054((void (*)(uint64_t))sub_10031B2C8, (uint64_t)(&v223 - 8), 0, 0, 0, 0);
          swift_release(v221);
          sub_10001F544(v251, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v222 = *(void (**)(char *, uint64_t))(v210 + 8);
          v48 = v220;
          v222(v217, v188);

          v46 = (uint64_t)v258;
          goto LABEL_59;
        }
        sub_1000073A0(v162, &qword_100646950);
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v211 = type metadata accessor for Logger(0);
        v212 = sub_100012DC4(v211, (uint64_t)qword_100645EC0);
        v213 = Logger.logObject.getter(v212);
        v214 = static os_log_type_t.fault.getter(v213);
        v215 = os_log_type_enabled(v213, v214);
        v46 = (uint64_t)v258;
        v47 = (uint64_t)v259;
        if (v215)
        {
          v216 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v216 = 0;
          _os_log_impl((void *)&_mh_execute_header, v213, v214, "Unable to find childrenStartIndexPath", v216, 2u);
          swift_slowDealloc(v216, -1, -1);
        }
        swift_release(v236);

        sub_10001F544(v251, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v48 = v260;
LABEL_60:
        v49 = v269;
LABEL_61:
        v59 = (_QWORD *)v265;
        (*(void (**)(char *, uint64_t))(v262 + 8))(v48, v58);
LABEL_11:
        if (++v55 == v273)
        {
          v50 = (uint64_t)v59;
          v51 = v243;
          goto LABEL_4;
        }
        v270(v30, v272 + v271 * v55, (uint64_t)v59);
        goto LABEL_13;
      }
      v193 = v191 + 1;
      if (__OFADD__(v191, 1))
      {
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
        goto LABEL_174;
      }
      ++v191;
      if (v193 == v190)
      {
        swift_bridgeObjectRelease(v189);
        swift_release(v236);
        v158 = v230;
        v154 = v225;
        goto LABEL_154;
      }
    }
  }
  return result;
}

uint64_t sub_10031B294()
{
  uint64_t v0;

  return sub_1000670CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10031B29C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030FDE4(a1, v1[2], v1[3], v1[4], sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003108E0);
}

uint64_t sub_10031B2C8(uint64_t a1)
{
  return sub_10031B4F0(a1, sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10030F068);
}

uint64_t sub_10031B2DC(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030CFF0(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10030D668);
}

uint64_t sub_10031B308(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030B7CC(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B64C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *))sub_10030C640);
}

uint64_t sub_10031B334(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EEE9C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10031B33C(uint64_t a1)
{
  uint64_t v1;

  return sub_1000F46DC(a1, *(uint64_t (**)(void))(v1 + 16)) & 1;
}

uint64_t sub_10031B358()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10031B37C(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EFC0C(a1, v1);
}

uint64_t sub_10031B388(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EF028(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10031B390(uint64_t a1)
{
  return sub_10031B44C(a1, sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100313990);
}

uint64_t sub_10031B3A4(uint64_t a1)
{
  uint64_t *v1;

  return sub_10031281C(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100312FAC);
}

uint64_t sub_10031B3D0(uint64_t a1)
{
  return sub_10031B584(a1, sub_10006B64C, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100316A60);
}

uint64_t sub_10031B3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EEE80(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10031B3EC(uint64_t a1)
{
  uint64_t v1;

  return sub_100105B40(a1, *(uint64_t (**)(void))(v1 + 16)) & 1;
}

uint64_t sub_10031B40C(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EF01C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10031B414()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10031B438(uint64_t a1)
{
  return sub_10031B44C(a1, sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100313838);
}

uint64_t sub_10031B44C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;

  return sub_100313754(a1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], a2, a3);
}

uint64_t sub_10031B484(uint64_t a1)
{
  uint64_t *v1;

  return sub_10031281C(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003128E4);
}

uint64_t sub_10031B4B0(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030FDE4(a1, v1[2], v1[3], v1[4], sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10030FE9C);
}

uint64_t sub_10031B4DC(uint64_t a1)
{
  return sub_10031B4F0(a1, sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10030E554);
}

uint64_t sub_10031B4F0(uint64_t a1, uint64_t (*a2)(void), void (*a3)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;

  return sub_10030E484(a1, v3[2], v3[3], v3[4], v3[5], v3[6], a2, a3);
}

uint64_t sub_10031B518(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030CFF0(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10030D0B8);
}

uint64_t sub_10031B544(uint64_t a1)
{
  uint64_t *v1;

  return sub_10030B7CC(a1, v1[2], v1[3], v1[4], v1[5], sub_10006B3DC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *))sub_10030B890);
}

uint64_t sub_10031B570(uint64_t a1)
{
  return sub_10031B584(a1, sub_10006B3DC, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100315D68);
}

uint64_t sub_10031B584(uint64_t a1, uint64_t (*a2)(void), void (*a3)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;

  return sub_100315C7C(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(unsigned __int8 *)(v3 + 41), *(unsigned __int8 *)(v3 + 42), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a2, a3);
}

uint64_t sub_10031B5DC(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  id v17;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3)
         : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v17 = v8;
      v11 = a1(&v17);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v13 & 1;
      }
      v12 = v11;

      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        v13 = 1;
        return v13 & 1;
      }
      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  v13 = 0;
  return v13 & 1;
}

BOOL sub_10031B70C(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  BOOL v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  _BOOL8 v32;
  uint64_t (*v33)(char *);
  uint64_t v34;

  v4 = v3;
  v32 = a2;
  v33 = a1;
  v34 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v29 = *(_QWORD *)(v6 + 72);
    v30 = v8;
    v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v27 = a3;
    v14 = swift_bridgeObjectRetain(a3);
    while (1)
    {
      v15 = v34;
      v31(v11, v13, v34, v14);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v16)(v11, 0, 1, v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v15);
      v18 = v17 != 1;
      if (v17 == 1)
      {
        a3 = v27;
        goto LABEL_13;
      }
      v28 = 1;
      v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v20 = v6;
      v21 = v30;
      v19(v30, v11, v15);
      v18 = v32;
      v22 = v33(v21);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
        swift_bridgeObjectRelease(v27);
        return v18;
      }
      v23 = v22;
      v24 = v16;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
      if ((v23 & 1) != 0)
        break;
      v13 += v29;
      --v12;
      v4 = 0;
      v6 = v20;
      if (!v12)
      {
        a3 = v27;
        goto LABEL_9;
      }
    }
    a3 = v27;
    v18 = v28;
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v14 = swift_bridgeObjectRetain(a3);
LABEL_9:
    v24(v11, 1, 1, v34, v14);
    v18 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v18;
}

uint64_t sub_10031B934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655988);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655988);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10031B9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = swift_getObjectType(v3, a2);
  v5 = sub_10002A750(&qword_100649BA0);
  v4[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ItemID(0) - 8);
  v4[13] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[14] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v8);
  v4[16] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v4[17] = v9;
  v4[18] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v4[19] = v11;
  v4[20] = v12;
  return swift_task_switch(sub_10031BAA0, v11, v12);
}

uint64_t sub_10031BAA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v1 = v0[7];
  v2 = v0[16];
  v3 = type metadata accessor for Logger(0);
  sub_100012DC4(v3, (uint64_t)qword_100655988);
  v4 = sub_1000CDF24(v1, v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[16];
  if (v7)
  {
    v9 = v0[11];
    v10 = swift_slowAlloc(32, -1);
    v46 = swift_slowAlloc(96, -1);
    v47 = v46;
    *(_DWORD *)v10 = 136315650;
    v11 = _typeName(_:qualified:)(v9, 0);
    v13 = v12;
    v0[4] = sub_100027E40(v11, v12, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v10 + 12) = 2080;
    v0[5] = sub_100027E40(0xD00000000000002CLL, 0x8000000100574200, &v47);
    v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6, v10 + 14, v10 + 22);
    *(_WORD *)(v10 + 22) = 2080;
    v15 = TTRRemindersListViewModel.ItemID.description.getter(v14);
    v17 = v16;
    v0[6] = sub_100027E40(v15, v16, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 6, v0 + 7, v10 + 24, v10 + 32);
    swift_bridgeObjectRelease(v17);
    sub_1000CDF68(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s: %s {itemID: %s}", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy(v46, 3, &type metadata for Any[8]);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_1000CDF68(v0[16]);
  }

  v18 = v0[10];
  v19 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_pendingStartEditingTask;
  if (*(_QWORD *)(v18 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_pendingStartEditingTask))
  {
    swift_retain();
    sub_10002A750((uint64_t *)&unk_100649DE0);
    Task.cancel()();
    swift_release();
  }
  v20 = (void *)v0[10];
  v21 = v0[15];
  v41 = v21;
  v42 = v0[14];
  v23 = v0[12];
  v22 = v0[13];
  v45 = v0[11];
  v40 = v0[9];
  v43 = v23;
  v44 = v0[8];
  v24 = v0[7];
  *(_QWORD *)(v18 + v19) = 0;
  swift_release();
  v25 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 1, 1, v25);
  sub_1000CDF24(v24, v21);
  v26 = v20;
  v27 = swift_retain();
  v28 = static MainActor.shared.getter(v27);
  v29 = *(unsigned __int8 *)(v22 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = (v42 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject(&unk_100600600, v33 + 8, v29 | 7);
  *(_QWORD *)(v34 + 16) = v28;
  *(_QWORD *)(v34 + 24) = &protocol witness table for MainActor;
  sub_1000CDFA4(v41, v34 + v30);
  *(_QWORD *)(v34 + v31) = v26;
  v35 = (_QWORD *)(v34 + v32);
  *v35 = v44;
  v35[1] = v40;
  *(_QWORD *)(v34 + v33) = v45;
  v36 = sub_1001484D8(v43, (uint64_t)&unk_100655A50, v34);
  v0[21] = v36;
  *(_QWORD *)(v18 + v19) = v36;
  swift_retain();
  swift_release();
  v37 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v0[22] = v37;
  v38 = sub_10002A750((uint64_t *)&unk_100649DE0);
  *v37 = v0;
  v37[1] = sub_10031BE94;
  return Task<>.value.getter(v0 + 2, v36, v38);
}

uint64_t sub_10031BE94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  return swift_task_switch(sub_10031BEE0, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_10031BEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 168));
  swift_release(v1);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
}

uint64_t sub_10031BF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8[13] = v9;
  v8[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v8[15] = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
  v8[16] = v12;
  v8[17] = v13;
  return swift_task_switch(sub_10031BFF0, v12, v13);
}

void sub_10031BFF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[13];
  v2 = v0[14];
  sub_1000CDF24(v0[8], v2);
  v3 = (char *)sub_10031C03C + 4 * byte_10052DF00[swift_getEnumCaseMultiPayload(v2, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10031C03C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100655A5C);
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_10031C0D4;
  return sub_10031C77C(*(_QWORD *)(v0 + 64), 0, 1);
}

uint64_t sub_10031C07C()
{
  uint64_t *v0;
  uint64_t **v1;

  sub_1000CDF68(v0[14]);
  v1 = (uint64_t **)swift_task_alloc(dword_100655A3C);
  v0[20] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10031C42C;
  return sub_10031CF88(v0[8], 0, 1);
}

uint64_t sub_10031C0D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10031C12C, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_10031C12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _UNKNOWN **v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _UNKNOWN **v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 112);
  swift_release();
  sub_1000CDF68(v2);
  if (v1)
  {
    v3 = *(void **)(v0 + 152);
    v4 = v3;
    if ((static Task<>.isCancelled.getter() & 1) == 0)
    {
      v20 = *(_QWORD **)(v0 + 56);
      (*(void (**)(id, _UNKNOWN **))(v0 + 80))(v4, &off_10060D318);

      *v20 = v3;
      v20[1] = &off_10060D318;
      goto LABEL_12;
    }

    v5 = &off_10060D318;
  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100655988);
  v7 = v3;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 96);
    v22 = v5;
    v11 = swift_slowAlloc(38, -1);
    v23 = swift_slowAlloc(96, -1);
    v24 = v23;
    *(_DWORD *)v11 = 136315906;
    v12 = _typeName(_:qualified:)(v10, 0);
    v14 = v13;
    *(_QWORD *)(v0 + 32) = sub_100027E40(v12, v13, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v11 + 12) = 2080;
    *(_QWORD *)(v0 + 40) = sub_100027E40(0xD00000000000002CLL, 0x8000000100574200, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v11 + 14, v11 + 22);
    *(_WORD *)(v11 + 22) = 2080;
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v22;
    v15 = sub_10002A750((uint64_t *)&unk_100649DE0);
    v16 = Optional.descriptionOrNil.getter(v15);
    v18 = v17;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v16, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v11 + 24, v11 + 32);
    swift_bridgeObjectRelease(v18);

    *(_WORD *)(v11 + 32) = 1024;
    *(_DWORD *)(v0 + 176) = static Task<>.isCancelled.getter() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 180, v11 + 34, v11 + 38);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s - Unable to scroll to item {cell: %s, taskIsCancelled: %{BOOL}d", (uint8_t *)v11, 0x26u);
    swift_arrayDestroy(v23, 3, &type metadata for Any[8]);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v19 = *(_QWORD **)(v0 + 56);
  *v19 = 0;
  v19[1] = 0;
LABEL_12:
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031C42C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 168) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10031C484, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_10031C484()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _UNKNOWN **v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _UNKNOWN **v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  if (v1)
  {
    v2 = *(void **)(v0 + 168);
    v3 = v2;
    if ((static Task<>.isCancelled.getter() & 1) == 0)
    {
      v19 = *(_QWORD **)(v0 + 56);
      (*(void (**)(id, _UNKNOWN **))(v0 + 80))(v3, &off_1005F7020);

      *v19 = v2;
      v19[1] = &off_1005F7020;
      goto LABEL_12;
    }

    v4 = &off_1005F7020;
  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100655988);
  v6 = v2;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 96);
    v21 = v4;
    v10 = swift_slowAlloc(38, -1);
    v22 = swift_slowAlloc(96, -1);
    v23 = v22;
    *(_DWORD *)v10 = 136315906;
    v11 = _typeName(_:qualified:)(v9, 0);
    v13 = v12;
    *(_QWORD *)(v0 + 32) = sub_100027E40(v11, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 40) = sub_100027E40(0xD00000000000002CLL, 0x8000000100574200, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v10 + 14, v10 + 22);
    *(_WORD *)(v10 + 22) = 2080;
    *(_QWORD *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 24) = v21;
    v14 = sub_10002A750((uint64_t *)&unk_100649DE0);
    v15 = Optional.descriptionOrNil.getter(v14);
    v17 = v16;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v10 + 24, v10 + 32);
    swift_bridgeObjectRelease(v17);

    *(_WORD *)(v10 + 32) = 1024;
    *(_DWORD *)(v0 + 176) = static Task<>.isCancelled.getter() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 180, v10 + 34, v10 + 38);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s: %s - Unable to scroll to item {cell: %s, taskIsCancelled: %{BOOL}d", (uint8_t *)v10, 0x26u);
    swift_arrayDestroy(v22, 3, &type metadata for Any[8]);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v18 = *(_QWORD **)(v0 + 56);
  *v18 = 0;
  v18[1] = 0;
LABEL_12:
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031C77C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = v3;
  *(_BYTE *)(v4 + 192) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 80) = swift_getObjectType(v3, a2);
  v5 = type metadata accessor for IndexPath(0);
  *(_QWORD *)(v4 + 88) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 96) = v6;
  *(_QWORD *)(v4 + 104) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646950);
  *(_QWORD *)(v4 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  *(_QWORD *)(v4 + 120) = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 128) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 136) = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 144) = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
  *(_QWORD *)(v4 + 152) = v12;
  *(_QWORD *)(v4 + 160) = v13;
  return swift_task_switch(sub_10031C87C, v12, v13);
}

uint64_t sub_10031C87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655988);
  *(_QWORD *)(v0 + 168) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v39 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = _typeName(_:qualified:)(v5, 0);
    v10 = v9;
    *(_QWORD *)(v0 + 40) = sub_100027E40(v8, v9, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = sub_100027E40(0xD000000000000037, 0x8000000100574230, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 120);
  sub_1000CDF24(*(_QWORD *)(v0 + 56), v11);
  if (swift_getEnumCaseMultiPayload(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 136);
    swift_release();
    sub_1000CDF68(v13);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 56);
    sub_1000CDF68(*(_QWORD *)(v0 + 136));
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1000073A0(*(_QWORD *)(v0 + 112), &qword_100646950);
      v38 = (_QWORD *)swift_task_alloc(dword_1006559EC);
      *(_QWORD *)(v0 + 176) = v38;
      *v38 = v0;
      v38[1] = sub_10031CCCC;
      return sub_10031DC6C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 192));
    }
    v18 = *(_QWORD *)(v0 + 112);
    swift_release();
    sub_1000073A0(v18, &qword_100646950);
  }
  v19 = sub_1000CDF24(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 128));
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 128);
  if (v22)
  {
    v24 = *(_QWORD *)(v0 + 80);
    v25 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v39 = v26;
    *(_DWORD *)v25 = 136315394;
    v27 = _typeName(_:qualified:)(v24, 0);
    v29 = v28;
    *(_QWORD *)(v0 + 16) = sub_100027E40(v27, v28, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v25 + 12) = 2080;
    v31 = TTRRemindersListViewModel.ItemID.description.getter(v30);
    v33 = v32;
    *(_QWORD *)(v0 + 24) = sub_100027E40(v31, v32, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease(v33);
    sub_1000CDF68(v23);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: columnID/indexPath not found {itemID: %s}", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2, &type metadata for Any[8]);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    sub_1000CDF68(*(_QWORD *)(v0 + 128));
  }

  v34 = *(_QWORD *)(v0 + 128);
  v36 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10031CCCC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10031CD24, *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 160));
}

uint64_t sub_10031CD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  id v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  if (!v1)
  {
    v15 = Logger.logObject.getter(v2);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = *(_QWORD *)(v0 + 80);
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v26 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = _typeName(_:qualified:)(v17, 0);
      v22 = v21;
      *(_QWORD *)(v0 + 32) = sub_100027E40(v20, v21, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: unable to find column cell", v18, 0xCu);
      swift_arrayDestroy(v19, 1, &type metadata for Any[8]);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    goto LABEL_10;
  }
  v3 = (char *)*(id *)(v0 + 184);
  result = IndexPath.init(item:section:)(0, 0);
  v5 = *(void **)&v3[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView];
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = UICollectionElementKindSectionHeader;
    v10 = v5;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v10, "supplementaryViewForElementKind:atIndexPath:", v9, isa);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if (v12)
    {
      v13 = type metadata accessor for TTRIBoardEditableColumnHeader();
      v14 = swift_dynamicCastClass(v12, v13);

      if (!v14)
      goto LABEL_11;
    }

LABEL_10:
    v14 = 0;
LABEL_11:
    v23 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_10031CF88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v4 + 104) = a2;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 296) = a3;
  *(_QWORD *)(v4 + 96) = a1;
  *(_QWORD *)(v4 + 120) = swift_getObjectType(v3, a2);
  v5 = sub_10002A750(&qword_100646950);
  *(_QWORD *)(v4 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  *(_QWORD *)(v4 + 136) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 144) = v7;
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  *(_QWORD *)(v4 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 176) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 200) = v12;
  *(_QWORD *)(v4 + 208) = static MainActor.shared.getter(v12);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v13);
  *(_QWORD *)(v4 + 216) = v14;
  *(_QWORD *)(v4 + 224) = v15;
  return swift_task_switch(sub_10031D0B4, v14, v15);
}

uint64_t sub_10031D0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48[2];

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655988);
  *(_QWORD *)(v0 + 232) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 120);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v48[0] = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = _typeName(_:qualified:)(v5, 0);
    v10 = v9;
    *(_QWORD *)(v0 + 80) = sub_100027E40(v8, v9, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 88) = sub_100027E40(0xD000000000000032, 0x80000001005741C0, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 160);
  TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)(*(_QWORD *)(v0 + 96));
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
  v15 = *(_QWORD *)(v0 + 160);
  if (v14 == 1)
  {
    swift_release();
    v16 = (uint64_t *)&unk_1006463C0;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 128);
    sub_1000CDFA4(*(_QWORD *)(v0 + 160), v17);
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) != 1)
    {
      v41 = *(_QWORD *)(v0 + 152);
      v42 = *(_QWORD *)(v0 + 136);
      v43 = *(_QWORD *)(v0 + 112);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 144) + 32))(v41, *(_QWORD *)(v0 + 128), v42);
      v44 = objc_msgSend(*(id *)(v43 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView), "indexPathsForVisibleItems");
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v42);

      v46 = swift_task_alloc(32);
      *(_QWORD *)(v46 + 16) = v41;
      *(_BYTE *)(v0 + 297) = sub_10031B70C((uint64_t (*)(char *))sub_10031F9EC, v46, v45);
      swift_bridgeObjectRelease(v45);
      swift_task_dealloc(v46);
      v47 = (_QWORD *)swift_task_alloc(dword_1006559EC);
      *(_QWORD *)(v0 + 240) = v47;
      *v47 = v0;
      v47[1] = sub_10031D5B8;
      return sub_10031DC6C(*(_QWORD *)(v0 + 192), 0, *(_BYTE *)(v0 + 296));
    }
    v15 = *(_QWORD *)(v0 + 128);
    sub_1000CDF68(*(_QWORD *)(v0 + 192));
    swift_release();
    v16 = &qword_100646950;
  }
  sub_1000073A0(v15, v16);
  v21 = sub_1000CDF24(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 184));
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter();
  v24 = os_log_type_enabled(v22, v23);
  v25 = *(_QWORD *)(v0 + 184);
  if (v24)
  {
    v26 = *(_QWORD *)(v0 + 120);
    v27 = swift_slowAlloc(22, -1);
    v28 = swift_slowAlloc(64, -1);
    v48[0] = v28;
    *(_DWORD *)v27 = 136315394;
    v29 = _typeName(_:qualified:)(v26, 0);
    v31 = v30;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v29, v30, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v27 + 4, v27 + 12);
    v32 = swift_bridgeObjectRelease(v31);
    *(_WORD *)(v27 + 12) = 2080;
    v33 = TTRRemindersListViewModel.ItemID.description.getter(v32);
    v35 = v34;
    *(_QWORD *)(v0 + 56) = sub_100027E40(v33, v34, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v27 + 14, v27 + 22);
    swift_bridgeObjectRelease(v35);
    sub_1000CDF68(v25);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s: columnID/indexPath not found {itemID: %s}", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy(v28, 2, &type metadata for Any[8]);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    sub_1000CDF68(*(_QWORD *)(v0 + 184));
  }

  v36 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 152);
  v37 = *(_QWORD *)(v0 + 160);
  v39 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10031D5B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10031D610, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

void sub_10031D610()
{
  uint64_t v0;
  char *v1;
  void *v2;
  int v3;
  int v4;
  char *v5;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(char **)(v0 + 248);
  if (v1)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController];
    *(_QWORD *)(v0 + 256) = v2;
    if (v2)
    {
      v3 = *(unsigned __int8 *)(v0 + 297);
      v4 = *(unsigned __int8 *)(v0 + 296);
      v5 = v1;
      *(_QWORD *)(v0 + 264) = static MainActor.shared.getter(v2);
      if (v3 != 1 || v4 == 0)
      {
        v7 = (_QWORD *)swift_task_alloc(dword_100664214);
        *(_QWORD *)(v0 + 280) = v7;
        *v7 = v0;
        v7[1] = sub_10031D984;
        sub_1004EA688(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
      }
      else
      {
        v23 = (_QWORD *)swift_task_alloc(dword_10066418C);
        *(_QWORD *)(v0 + 272) = v23;
        *v23 = v0;
        v23[1] = sub_10031D8CC;
        sub_1004E99D4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 136);
    if (v11)
    {
      v16 = *(_QWORD *)(v0 + 120);
      v28 = *(_QWORD *)(v0 + 192);
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v29 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = _typeName(_:qualified:)(v16, 0);
      v21 = v20;
      *(_QWORD *)(v0 + 64) = sub_100027E40(v19, v20, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: unable to find column cell", v17, 0xCu);
      swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
      v22 = v28;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
      v22 = v12;
    }
    sub_1000CDF68(v22);
    v24 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    (*(void (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_10031D8CC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*v1;
  v2[2] = v1;
  v2[3] = a1;
  v3 = v2[25];
  swift_task_dealloc(v2[34]);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_10031D940, v5, v6);
}

uint64_t sub_10031D940()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[3];
  v2 = (void *)v0[32];
  swift_release();

  v0[36] = v1;
  return swift_task_switch(sub_10031DA40, v0[27], v0[28]);
}

uint64_t sub_10031D984(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*v1;
  v2[4] = v1;
  v2[5] = a1;
  v3 = v2[25];
  swift_task_dealloc(v2[35]);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_10031D9FC, v5, v6);
}

uint64_t sub_10031D9FC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[5];
  v2 = (void *)v0[32];
  swift_release();

  v0[36] = v1;
  return swift_task_switch(sub_10031DA40, v0[27], v0[28]);
}

uint64_t sub_10031DA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 288);
  swift_release();
  if (v1)
  {
    v3 = *(void **)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_1000CDF68(v4);
    v8 = *(_QWORD *)(v0 + 288);
  }
  else
  {
    v9 = Logger.logObject.getter(v2);
    v10 = static os_log_type_t.debug.getter();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(void **)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 136);
    if (v11)
    {
      v17 = *(_QWORD *)(v0 + 120);
      v31 = *(_QWORD *)(v0 + 152);
      v30 = *(_QWORD *)(v0 + 192);
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = v15;
      v19 = swift_slowAlloc(32, -1);
      v32 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = _typeName(_:qualified:)(v17, 0);
      v22 = v21;
      *(_QWORD *)(v0 + 72) = sub_100027E40(v20, v21, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: unable to find reminder cell", v18, 0xCu);
      swift_arrayDestroy(v19, 1, &type metadata for Any[8]);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v16);
      v23 = v30;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      v23 = v13;
    }
    sub_1000CDF68(v23);
    v8 = 0;
  }
  v24 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t sub_10031DC6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = v3;
  *(_BYTE *)(v4 + 216) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 80) = swift_getObjectType(v3, a2);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_1006559F0);
  *(_QWORD *)(v4 + 96) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 104) = v7;
  *(_QWORD *)(v4 + 112) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_10002A750(&qword_100646950) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 120) = swift_task_alloc(v8);
  *(_QWORD *)(v4 + 128) = swift_task_alloc(v8);
  v9 = type metadata accessor for IndexPath(0);
  *(_QWORD *)(v4 + 136) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 144) = v10;
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 160) = static MainActor.shared.getter(v11);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v12);
  *(_QWORD *)(v4 + 168) = v13;
  *(_QWORD *)(v4 + 176) = v14;
  return swift_task_switch(sub_10031DD94, v13, v14);
}

uint64_t sub_10031DD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  CGFloat MinY;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void *v70;
  Class v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655988);
  *(_QWORD *)(v0 + 184) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v77 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = _typeName(_:qualified:)(v5, 0);
    v10 = v9;
    *(_QWORD *)(v0 + 40) = sub_100027E40(v8, v9, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = sub_100027E40(0xD000000000000030, 0x8000000100574180, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 128);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(*(_QWORD *)(v0 + 56));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
  {
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 56);
    swift_release();
    sub_1000073A0(v14, &qword_100646950);
    v17 = sub_1000CDF24(v16, v15);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 88);
    if (v20)
    {
      v22 = *(_QWORD *)(v0 + 80);
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v77 = v24;
      *(_DWORD *)v23 = 136315394;
      v25 = _typeName(_:qualified:)(v22, 0);
      v27 = v26;
      *(_QWORD *)(v0 + 16) = sub_100027E40(v25, v26, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v23 + 4, v23 + 12);
      v28 = swift_bridgeObjectRelease(v27);
      *(_WORD *)(v23 + 12) = 2080;
      v29 = TTRRemindersListViewModel.ItemID.description.getter(v28);
      v31 = v30;
      *(_QWORD *)(v0 + 24) = sub_100027E40(v29, v30, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v23 + 14, v23 + 22);
      swift_bridgeObjectRelease(v31);
      sub_1000CDF68(v21);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: indexPath not found {columnID: %s}", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, &type metadata for Any[8]);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      sub_1000CDF68(*(_QWORD *)(v0 + 88));
    }

    v56 = 0;
    goto LABEL_25;
  }
  v32 = *(_QWORD *)(v0 + 152);
  v33 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(v32, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  v34 = *(void **)(v33 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView);
  *(_QWORD *)(v0 + 192) = v34;
  v35 = (void *)UICollectionView.visibleCellForItem(at:)(v32);
  if (v35)
  {
    v36 = v35;
    v37 = v35;
    objc_msgSend(v34, "bounds");
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v45 = v44;
    objc_msgSend(v37, "bounds");
    objc_msgSend(v34, "convertRect:fromCoordinateSpace:", v37);
    v47 = v46;
    v49 = v48;
    v78.origin.x = v39;
    v78.origin.y = v41;
    v78.size.width = v43;
    v78.size.height = v45;
    MinY = CGRectGetMinY(v78);
    v79.origin.x = v39;
    v79.origin.y = v41;
    v79.size.width = v43;
    v79.size.height = v45;
    v81.size.height = CGRectGetHeight(v79);
    v80.origin.x = v39;
    v80.origin.y = v41;
    v80.size.width = v43;
    v80.size.height = v45;
    v81.origin.x = v47;
    v81.origin.y = MinY;
    v81.size.width = v49;
    if (!CGRectContainsRect(v80, v81))
    {
      v51 = *(unsigned __int8 *)(v0 + 216);
      v52 = *(_QWORD *)(v0 + 64);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v34, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, v52, v51);

    }
    swift_release();
  }
  else
  {
    v57 = *(unsigned __int8 *)(v0 + 216);
    v58 = *(_QWORD *)(v0 + 64);
    v59 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "scrollToItemAtIndexPath:atScrollPosition:animated:", v59, v58, v57);

    if ((v57 & 1) != 0)
    {
      v60 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 72)
                                       + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_willDisplayCell);
      v61 = sub_10002A750(&qword_1006559F8);
      v62 = sub_100023FEC(&qword_100655A00, &qword_1006559F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      Publisher<>.rem_bufferedValues.getter(v61, v62);
      v63 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 200) = v63;
      *(_QWORD *)(v63 + 16) = v60;
      v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100655A18 + dword_100655A18);
      v64 = (_QWORD *)swift_task_alloc(unk_100655A1C);
      *(_QWORD *)(v0 + 208) = v64;
      *v64 = v0;
      v64[1] = sub_10031E4E0;
      return v76(*(_QWORD *)(v0 + 120), (uint64_t)&unk_100655A10, v63);
    }
    objc_msgSend(v34, "layoutIfNeeded", swift_release().n128_f64[0]);
    v70 = *(void **)(v0 + 192);
    v71 = IndexPath._bridgeToObjectiveC()().super.isa;
    v37 = objc_msgSend(v70, "cellForItemAtIndexPath:", v71);

    if (!v37)
      goto LABEL_23;
    v36 = v37;
  }
  v54 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
  v55 = swift_dynamicCastClass(v37, v54);
  if (!v55)
  {
    v66 = v36;
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.fault.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "TTRIRemindersBoardScrollingController: unexpected cell type", v69, 2u);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {

    }
LABEL_23:
    v56 = 0;
    goto LABEL_24;
  }
  v56 = v55;
LABEL_24:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
LABEL_25:
  v73 = *(_QWORD *)(v0 + 120);
  v72 = *(_QWORD *)(v0 + 128);
  v74 = *(_QWORD *)(v0 + 112);
  v75 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v56);
}

uint64_t sub_10031E4E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 200);
  v4 = *(_QWORD *)(*v0 + 112);
  v3 = *(_QWORD *)(*v0 + 120);
  v5 = *(_QWORD *)(*v0 + 96);
  v6 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_1000073A0(v3, &qword_100646950);
  return swift_task_switch(sub_10031E56C, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_10031E56C()
{
  uint64_t v0;
  void *v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  v1 = *(void **)(v0 + 192);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "cellForItemAtIndexPath:", isa);

  if (!v3)
    goto LABEL_7;
  v4 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
  v5 = swift_dynamicCastClass(v3, v4);
  if (!v5)
  {
    v7 = v3;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.fault.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRIRemindersBoardScrollingController: unexpected cell type", v10, 2u);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
LABEL_7:
    v6 = 0;
    goto LABEL_8;
  }
  v6 = v5;
LABEL_8:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  v12 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_10031E6E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_10031E74C, v5, v6);
}

uint64_t sub_10031E74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  v3 = static IndexPath.== infix(_:_:)(v2, v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_10031E794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for IndexPath(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646950);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006559F0);
  v4[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[11] = v9;
  v4[12] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100655A20);
  v4[13] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[14] = v11;
  v4[15] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10031E874, 0, 0);
}

uint64_t sub_10031E874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[10];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[11] + 16))(v0[12], v0[5], v1);
  v2 = sub_100023FEC(&qword_100655A28, &qword_1006559F0, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v1, v2);
  v3 = sub_100023FEC(&qword_100655A30, &qword_100655A20, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v0[16] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[17] = v4;
  *v4 = v0;
  v4[1] = sub_10031E94C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[9], v0[13], v3);
}

uint64_t sub_10031E94C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 136));
  if (v0)
  {
    v2[18] = v0;
    (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
    v3 = sub_10031EADC;
  }
  else
  {
    v3 = sub_10031E9C0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10031E9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  uint64_t (*v13)(_QWORD);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 48));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(int **)(v0 + 24);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    *(_QWORD *)(v0 + 152) = v11;
    v11(v9, v1, v2);
    v13 = (uint64_t (*)(_QWORD))((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    *(_QWORD *)(v0 + 160) = v12;
    *v12 = v0;
    v12[1] = sub_10031EB38;
    return v13(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_10031EADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031EB38(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v7 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
    v8 = *(_QWORD *)(v4 + 104);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 56) + 8))(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 48));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_10031ECE4;
  }
  else
  {
    *(_BYTE *)(v4 + 184) = a1 & 1;
    v9 = sub_10031EBD8;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10031EBD8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;

  if (*(_BYTE *)(v0 + 184) == 1)
  {
    v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 152);
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
    v1(v4, v2, v3);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 56))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 48));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 176) = v10;
    *v10 = v0;
    v10[1] = sub_10031ED40;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_10031ECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031ED40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 176));
  if (v0)
  {
    v2[18] = v0;
    (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
    v3 = sub_10031EADC;
  }
  else
  {
    v3 = sub_10031E9C0;
  }
  return swift_task_switch(v3, 0, 0);
}

void sub_10031EDB4(unsigned int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unsigned int v57;
  char *v58;
  int v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t ObjectType;
  uint64_t v64;
  uint64_t v65[5];

  v4 = v3;
  v59 = a3;
  v5 = a2;
  v57 = a1;
  ObjectType = swift_getObjectType(v3, a2);
  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v56 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v62 = (char *)&v54 - v16;
  __chkstk_darwin(v17);
  v58 = (char *)&v54 - v18;
  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100012DC4(v19, (uint64_t)qword_100655988);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter();
  v23 = os_log_type_enabled(v21, v22);
  v60 = v8;
  v61 = v11;
  if (v23)
  {
    v24 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v65[0] = v25;
    *(_DWORD *)v24 = 136315394;
    v54 = v4;
    v55 = v13;
    v26 = _typeName(_:qualified:)(ObjectType, 0);
    v28 = v27;
    v64 = sub_100027E40(v26, v27, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v24 + 12) = 2080;
    v64 = sub_100027E40(0xD00000000000002ALL, 0x8000000100574270, v65);
    v4 = v54;
    v13 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v24 + 14, v24 + 22);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v25, 2, &type metadata for Any[8]);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  sub_100010634(v5, (uint64_t)v65);
  v29 = sub_10002A750(&qword_100655A60);
  v30 = type metadata accessor for TTRIBoardEditableColumnHeader();
  if ((swift_dynamicCast(&v64, v65, v29, v30, 6) & 1) != 0)
  {
    v31 = (void *)v64;
    v32 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
    UIView.ancestorView<A>(ofType:)(v65, v32, v32);
    v33 = (void *)v65[0];
    if (v65[0])
    {
      v34 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView), "indexPathForCell:", v65[0]);
      if (v34)
      {
        v35 = v34;
        v36 = v5;
        v37 = v62;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v34);

        v38 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v39 = (uint64_t)v61;
        v40 = v37;
        v5 = v36;
        v38(v61, v40, v12);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v39, 0, 1, v12);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v39, 1, v12) != 1)
        {
          v41 = (uint64_t)v58;
          v38(v58, (char *)v39, v12);
          sub_10031F35C(v33, v41, v4, v59 & 1, ObjectType);

          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v41, v12);
          return;
        }
      }
      else
      {
        v39 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v61, 1, 1, v12);
      }

      sub_1000073A0(v39, &qword_100646950);
    }
    else
    {

    }
  }
  sub_100010634(v5, (uint64_t)v65);
  v42 = type metadata accessor for TTRIBoardReminderCell(0);
  if ((swift_dynamicCast(&v64, v65, v29, v42, 6) & 1) != 0)
  {
    v43 = (void *)v64;
    v44 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
    UIView.ancestorView<A>(ofType:)(v65, v44, v44);
    v45 = (void *)v65[0];
    if (v65[0])
    {
      v46 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView), "indexPathForCell:", v65[0]);
      if (v46)
      {
        v47 = v46;
        v48 = v62;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v46);

        v49 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v50 = (uint64_t)v60;
        v49(v60, v48, v12);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v50, 0, 1, v12);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v50, 1, v12) != 1)
        {
          v51 = (uint64_t)v56;
          v49(v56, (char *)v50, v12);
          v52 = v59 & 1;
          v53 = ObjectType;
          sub_10031F35C(v45, v51, v4, v59 & 1, ObjectType);
          sub_10031F62C((uint64_t)v43, (uint64_t)v45, v57, v52, v53);

          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v51, v12);
          return;
        }
      }
      else
      {
        v50 = (uint64_t)v60;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v60, 1, 1, v12);
      }

      sub_1000073A0(v50, &qword_100646950);
    }
    else
    {

    }
  }
}

void sub_10031F35C(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  CGFloat MinY;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100012DC4(v9, (uint64_t)qword_100655988);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = a4;
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v36 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = _typeName(_:qualified:)(a5, 0);
    v18 = v17;
    v35 = sub_100027E40(v16, v17, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    v35 = sub_100027E40(0xD000000000000018, 0x80000001005742D0, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 14, v14 + 22);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, &type metadata for Any[8]);
    swift_slowDealloc(v15, -1, -1);
    v19 = v14;
    a4 = v13;
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView);
  objc_msgSend(v20, "bounds");
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v20, "convertRect:fromCoordinateSpace:", a1);
  v30 = v29;
  v32 = v31;
  v37.origin.x = v22;
  v37.origin.y = v24;
  v37.size.width = v26;
  v37.size.height = v28;
  MinY = CGRectGetMinY(v37);
  v38.origin.x = v22;
  v38.origin.y = v24;
  v38.size.width = v26;
  v38.size.height = v28;
  v40.size.height = CGRectGetHeight(v38);
  v39.origin.x = v22;
  v39.origin.y = v24;
  v39.size.width = v26;
  v39.size.height = v28;
  v40.origin.x = v30;
  v40.origin.y = MinY;
  v40.size.width = v32;
  if (!CGRectContainsRect(v39, v40))
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 0, a4 & 1);

  }
}

void sub_10031F62C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_10063D660 != -1)
    swift_once(&qword_10063D660, sub_10031B934);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100012DC4(v10, (uint64_t)qword_100655988);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v22 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = _typeName(_:qualified:)(a5, 0);
    v18 = v17;
    v21 = sub_100027E40(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v14 + 12) = 2080;
    v21 = sub_100027E40(0xD000000000000020, 0x80000001005742A0, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14 + 14, v14 + 22);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, &type metadata for Any[8]);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  v19 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollingController);
  if (v19)
  {
    v20 = v19;
    sub_1004E97DC(a3, a1, a4 & 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardScrollingController()
{
  return objc_opt_self(_TtC9Reminders37TTRIRemindersBoardScrollingController);
}

uint64_t sub_10031F8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100655A0C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10031F940;
  return sub_10031E6E0(a1, v4);
}

uint64_t sub_10031F940(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_10031F990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = type metadata accessor for IndexPath(0);
  v5 = sub_1000523B0();
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v4, v5) & 1;
}

uint64_t sub_10031F9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for IndexPath(0);
  v5 = sub_1000523B0();
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

uint64_t sub_10031FA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      v6 = (id *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            v10 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:
  v11 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v0 + v12 + 8));
  return swift_deallocObject(v0, ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10031FBD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ItemID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = *(_QWORD *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_100655A4C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10004A08C;
  return sub_10031BF58(a1, v8, v9, v10, v11, v12, v13, v14);
}

void sub_10031FCA4(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  Swift::Bool IsNativeType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a1;
  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v7 = (char *)&v17 - v6;
  if ((sub_10043C3AC() & 1) != 0)
  {
    if ((sub_10043C3A0() & 1) != 0)
      return;
LABEL_5:
    sub_10043C2E8();
    v9 = v8;
    if (!Array.endIndex.getter(v8, v3))
    {
      swift_bridgeObjectRelease(v9);
      return;
    }
    v10 = 0;
    v11 = *(void (**)(char *, uint64_t))((swift_isaMask & *v1) + 0x2F0);
    v12 = v2 & 1;
    while (1)
    {
      IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)(v10, IsNativeType, v9, v3);
      if (IsNativeType)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v10, v3);
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_14;
      }
      else
      {
        v15 = _ArrayBuffer._getElementSlowPath(_:)(v10, v9, v3);
        if (v5 != 8)
        {
          __break(1u);
          return;
        }
        v16 = v15;
        v18 = v15;
        (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v7, &v18, v3);
        swift_unknownObjectRelease(v16);
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease(v9);
          return;
        }
      }
      v11(v7, v12);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      ++v10;
      if (v14 == Array.endIndex.getter(v9, v3))
        goto LABEL_15;
    }
  }
  if ((sub_10043C394() & 1) == 0)
    goto LABEL_5;
}

void sub_10031FE7C(uint64_t a1)
{
  sub_10031FCA4(a1);
}

uint64_t sub_10031FE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655A68);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655A68);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t *sub_10031FF2C(void *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  v3[3] = 0;
  swift_unknownObjectWeakInit(v3 + 2, 0);
  v3[4] = (uint64_t)a1;
  v3[5] = 0;
  v7 = _swiftEmptyArrayStorage;
  v3[6] = 0;
  v3[7] = (uint64_t)_swiftEmptyArrayStorage;
  v8 = a1;
  v9 = objc_msgSend(v8, "shareeContext");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "sharees");

    v12 = sub_100005ED8(0, &qword_100642220, REMSharee_ptr);
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  }
  v13 = v3[7];
  v3[7] = (uint64_t)v7;
  swift_bridgeObjectRelease(v13);
  v14 = NSUndoManager.observeChanges<A>(target:handler:)(v3, sub_100320038, 0, v6);

  v3[5] = v14;
  swift_release();
  return v3;
}

uint64_t sub_100320038(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v2 = result;
    sub_1002F5054();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_100320074()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    sub_100005ED8(0, (unint64_t *)&qword_10065C600, NSUndoManager_ptr);
    v1 = swift_retain();
    static NSUndoManager.removeObserver(with:)(v1);
    swift_release();
    sub_1000381C8(v0 + 16);

    swift_release();
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    swift_deallocClassInstance(v0, 64, 7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRListSharingInteractor()
{
  return objc_opt_self(_TtC9Reminders24TTRListSharingInteractor);
}

void sub_100320128(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t i;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;

  v3 = v1;
  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_64;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_68:
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v62 = type metadata accessor for Logger(0);
    sub_100012DC4(v62, (uint64_t)qword_100655A68);
    v63 = swift_retain();
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(12, -1);
      v67 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v66 = 138412290;
      v68 = objc_msgSend(*(id *)(v3 + 32), "objectID");
      v86 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v66 + 4, v66 + 12);
      *v67 = v68;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Requested to add sharees but no sharees are provided {list.objectID: %@}", v66, 0xCu);
      v69 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v67, 1, v69);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v66, -1, -1);

    }
    else
    {

      swift_release();
    }
    return;
  }
LABEL_3:
  if (!sub_100320B88())
    goto LABEL_68;
  v82 = v5;
  v6 = *(_QWORD *)(v3 + 56);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v70 = *(_QWORD *)(v3 + 56);
    else
      v70 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v3 + 56), 2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v70);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v3 + 56), 2);
  }
  v83 = v3;
  v84 = v4;
  v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_85;
    }
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v10 = *(id *)(v6 + 8 * i + 32);
      v3 = (uint64_t)v10;
      v11 = objc_msgSend(v10, "address");
      if (v11)
      {
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10001D840(0, v8[2] + 1, 1, v8);
        v5 = v8[2];
        v16 = v8[3];
        v3 = v5 + 1;
        if (v5 >= v16 >> 1)
          v8 = sub_10001D840((_QWORD *)(v16 > 1), v5 + 1, 1, v8);
        v8[2] = v3;
        v17 = &v8[2 * v5];
        v17[4] = v13;
        v17[5] = v15;
      }
      else
      {

      }
    }
  }
  swift_bridgeObjectRelease_n(v6, 2);
  v18 = sub_1003E7D94((uint64_t)v8);
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v89 = v18;
  v2 = v83;
  v20 = objc_msgSend(*(id *)(v83 + 32), "sharedOwnerAddress", v19);
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    sub_100481C18((uint64_t *)&v86, v22, v24);
    swift_bridgeObjectRelease(v87);
  }
  v86 = _swiftEmptyArrayStorage;
  if (!v82)
  {
    v25 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v25)
      goto LABEL_40;
    goto LABEL_24;
  }
  if (v4 < 0)
    v35 = v4;
  else
    v35 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v25 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (v25)
  {
LABEL_24:
    v26 = 0;
    v4 &= 0xC000000000000001;
    v2 = v89;
    while (1)
    {
      if (v4)
      {
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v84);
      }
      else
      {
        if (v26 >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          if (v4 < 0)
            v60 = v4;
          else
            v60 = v4 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v4);
          v61 = _CocoaArrayWrapper.endIndex.getter(v60);
          swift_bridgeObjectRelease(v4);
          if (!v61)
            goto LABEL_68;
          goto LABEL_3;
        }
        v29 = *(id *)(v84 + 8 * v26 + 32);
      }
      v30 = v29;
      v5 = v26 + 1;
      if (__OFADD__(v26, 1))
        goto LABEL_63;
      v31 = objc_msgSend(v29, "address");
      if (!v31)
        goto LABEL_25;
      v32 = v31;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v3 = v34;

      swift_bridgeObjectRetain(v2);
      LOBYTE(v32) = sub_10037B9D4(v33, v3, v2);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v2);
      if ((v32 & 1) != 0)
      {

      }
      else
      {
LABEL_25:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v27 = v86[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
        v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v30);
        specialized ContiguousArray._endMutation()(v28);
      }
      ++v26;
      if (v5 == v25)
      {
        v4 = v84;
        v7 = (uint64_t)v86;
        v2 = v83;
        goto LABEL_41;
      }
    }
  }
LABEL_40:
  v7 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_41:
  swift_bridgeObjectRelease(v4);
  LODWORD(v4) = v7 < 0 || (v7 & 0x4000000000000000) != 0;
  if ((v4 & 1) == 0)
  {
    if (*(_QWORD *)(v7 + 16))
      goto LABEL_46;
LABEL_78:
    swift_release();
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v73 = type metadata accessor for Logger(0);
    sub_100012DC4(v73, (uint64_t)qword_100655A68);
    v74 = swift_retain();
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc(12, -1);
      v78 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v77 = 138412290;
      v79 = objc_msgSend(*(id *)(v2 + 32), "objectID");
      v86 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v77 + 4, v77 + 12);
      *v78 = v79;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "All sharees requested to add are already existing {list.objectID: %@}", v77, 0xCu);
      v80 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v78, 1, v80);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v77, -1, -1);

    }
    else
    {

      swift_release();
    }
LABEL_83:
    swift_bridgeObjectRelease(v89);
    return;
  }
  swift_bridgeObjectRetain(v7);
  v72 = _CocoaArrayWrapper.endIndex.getter(v71);
  swift_release();
  if (!v72)
    goto LABEL_78;
LABEL_46:
  if (qword_10063D668 != -1)
LABEL_85:
    swift_once(&qword_10063D668, sub_10031FE9C);
  v36 = type metadata accessor for Logger(0);
  sub_100012DC4(v36, (uint64_t)qword_100655A68);
  swift_bridgeObjectRetain_n(v7, 2);
  swift_retain_n(v7, 2);
  v37 = swift_retain_n(v2, 2);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  if (!os_log_type_enabled(v38, v39))
  {

    swift_release_n(v2, 2);
    swift_release_n(v7, 4);
    goto LABEL_61;
  }
  v40 = swift_slowAlloc(32, -1);
  v85 = (_QWORD *)swift_slowAlloc(8, -1);
  v41 = (_QWORD *)swift_slowAlloc(32, -1);
  v86 = v41;
  *(_DWORD *)v40 = 134218498;
  if ((_DWORD)v4)
  {
    swift_bridgeObjectRetain(v7);
    v43 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_release();
  }
  else
  {
    v43 = *(_QWORD *)(v7 + 16);
  }
  swift_release();
  v88 = (_QWORD *)v43;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v40 + 4, v40 + 12);
  *(_QWORD *)&v44 = swift_release().n128_u64[0];
  *(_WORD *)(v40 + 12) = 2112;
  v45 = objc_msgSend(*(id *)(v2 + 32), "objectID", v44);
  v88 = v45;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v40 + 14, v40 + 22);
  *v85 = v45;
  swift_release_n(v83, 2);
  *(_WORD *)(v40 + 22) = 2080;
  v46 = _swiftEmptyArrayStorage;
  if (!v43)
    goto LABEL_60;
  v81 = v41;
  v88 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v43);
  if ((v43 & 0x8000000000000000) == 0)
  {
    v47 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v7);
      else
        v48 = *(id *)(v7 + 8 * v47 + 32);
      v49 = v48;
      ++v47;
      v50 = objc_msgSend(v48, "objectID");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      v52 = v88[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v52);
      v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
      specialized ContiguousArray._endMutation()(v53);
    }
    while (v43 != v47);
    v46 = v88;
    v41 = v81;
LABEL_60:
    v54 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v55 = Array.description.getter(v46, v54);
    v57 = v56;
    swift_bridgeObjectRelease(v46);
    v88 = (_QWORD *)sub_100027E40(v55, v57, (uint64_t *)&v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v40 + 24, v40 + 32);
    swift_release_n(v7, 2);
    swift_bridgeObjectRelease(v57);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Going to add %ld new sharees to list {list.objectID: %@, newShareeIDs: %s}", (uint8_t *)v40, 0x20u);
    v58 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v85, 1, v58);
    swift_slowDealloc(v85, -1, -1);
    swift_arrayDestroy(v41, 1, &type metadata for Any[8]);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    v2 = v83;
LABEL_61:
    v86 = *(_QWORD **)(v2 + 56);
    swift_bridgeObjectRetain(v86);
    sub_100450B7C(v7);
    v59 = v86;
    sub_100320C60((uint64_t)v86);
    swift_bridgeObjectRelease(v59);
    goto LABEL_83;
  }
  __break(1u);
}

BOOL sub_100320B88()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v1 = sub_1003218E0();
  v2 = v1;
  if (v1)
  {
    v3 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v1;
    v4 = v1;

    v5 = objc_msgSend(*(id *)(v0 + 32), "shareeContext");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "sharees");

      v8 = sub_100005ED8(0, &qword_100642220, REMSharee_ptr);
      v9 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    }
    else
    {
      v9 = _swiftEmptyArrayStorage;
    }
    v10 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 56) = v9;

    swift_bridgeObjectRelease(v10);
  }
  return v2 != 0;
}

void sub_100320C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  Class isa;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  _QWORD v18[5];
  _QWORD *v19;

  v2 = v1;
  v4 = *(id *)(v1 + 32);
  v5 = objc_msgSend(v4, "store");
  v6 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v5);

  v7 = objc_msgSend(v6, "updateList:", v4);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  objc_msgSend(v7, "setSharingStatus:", v8 != 0);
  sub_100005ED8(0, &qword_100642220, REMSharee_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "setSharees:", isa);

  v10 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_100600668, 24, 7);
  swift_weakInit(v12 + 16, v2);
  v13 = (_QWORD *)swift_allocObject(&unk_100600690, 40, 7);
  v13[2] = v4;
  v13[3] = a1;
  v13[4] = v12;
  v18[4] = sub_1003224D4;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100009944;
  v18[3] = &unk_1006006A8;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = v4;
  swift_bridgeObjectRetain(a1);
  objc_msgSend(v6, "saveWithQueue:completion:", v11, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

void sub_100320E90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  id v49;
  uint64_t v50;
  os_log_type_t type;
  id v52;
  uint64_t v53;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 56);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v28 = v8;
    else
      v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v8);
    if (!v29)
    {
LABEL_22:
      if (qword_10063D668 != -1)
        swift_once(&qword_10063D668, sub_10031FE9C);
      v30 = type metadata accessor for Logger(0);
      sub_100012DC4(v30, (uint64_t)qword_100655A68);
      v31 = a1;
      swift_retain(v4);
      v20 = v31;
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc(22, -1);
        v24 = (_QWORD *)swift_slowAlloc(16, -1);
        *(_DWORD *)v23 = 138412546;
        v32 = objc_msgSend(*(id *)(v4 + 32), "objectID");
        v52 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v23 + 4, v23 + 12);
        *v24 = v32;
        swift_release(v4);
        *(_WORD *)(v23 + 12) = 2112;
        v52 = v20;
        v33 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v23 + 14, v23 + 22);
        v24[1] = v20;

        v27 = "Requested to delete a sharee but the list is not shared to anyone {list.objectID: %@, shareeID: %@}";
        goto LABEL_26;
      }
      goto LABEL_27;
    }
  }
  else if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_22;
  }
  if (!sub_100320B88())
    goto LABEL_22;
  v9 = *(_QWORD *)(v4 + 56);
  v10 = a1;
  swift_bridgeObjectRetain(v9);
  v12 = (uint64_t)sub_10032213C(v11, (uint64_t)v10);
  swift_bridgeObjectRelease(v9);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v35 = v12;
    else
      v35 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = *(_QWORD *)(v4 + 56);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v36 = *(_QWORD *)(v4 + 56);
    else
      v36 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 56));
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v14);
    if (v13 != v37)
      goto LABEL_10;
  }
  else if (v13 != *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_10;
  }
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v15 = sub_1003222C0(v12, a2, a3);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(a3);
    v12 = (uint64_t)v15;
  }
LABEL_10:
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v38 = v12;
    else
      v38 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v16 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v16 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = *(_QWORD *)(v4 + 56);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v39 = *(_QWORD *)(v4 + 56);
    else
      v39 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 56));
    v40 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v17);
    if (v16 == v40)
    {
LABEL_14:
      swift_bridgeObjectRelease(v12);
      if (qword_10063D668 != -1)
        swift_once(&qword_10063D668, sub_10031FE9C);
      v18 = type metadata accessor for Logger(0);
      sub_100012DC4(v18, (uint64_t)qword_100655A68);
      v19 = v10;
      swift_retain(v4);
      v20 = v19;
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc(22, -1);
        v24 = (_QWORD *)swift_slowAlloc(16, -1);
        *(_DWORD *)v23 = 138412546;
        v25 = objc_msgSend(*(id *)(v4 + 32), "objectID");
        v52 = v25;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v23 + 4, v23 + 12);
        *v24 = v25;
        swift_release(v4);
        *(_WORD *)(v23 + 12) = 2112;
        v52 = v20;
        v26 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v23 + 14, v23 + 22);
        v24[1] = v20;

        v27 = "The sharee requested to delete does not exist {list.objectID: %@, shareeID: %@}";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v21, v22, v27, (uint8_t *)v23, 0x16u);
        v34 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v24, 2, v34);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v23, -1, -1);

        return;
      }
LABEL_27:

      swift_release(v4);
      return;
    }
  }
  else if (v16 == *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_14;
  }
  if (qword_10063D668 != -1)
    swift_once(&qword_10063D668, sub_10031FE9C);
  v41 = type metadata accessor for Logger(0);
  sub_100012DC4(v41, (uint64_t)qword_100655A68);
  v42 = v10;
  swift_retain(v4);
  v43 = v42;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    type = v45;
    v46 = swift_slowAlloc(22, -1);
    v47 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v46 = 138412546;
    v48 = objc_msgSend(*(id *)(v4 + 32), "objectID");
    v52 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v46 + 4, v46 + 12);
    *v47 = v48;
    swift_release(v4);
    *(_WORD *)(v46 + 12) = 2112;
    v52 = v43;
    v49 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v46 + 14, v46 + 22);
    v47[1] = v43;

    _os_log_impl((void *)&_mh_execute_header, v44, type, "Going to delete sharee from list {list.objectID: %@, shareeID: %@}", (uint8_t *)v46, 0x16u);
    v50 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v47, 2, v50);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

  }
  else
  {

    swift_release(v4);
  }
  sub_100320C60(v12);
  swift_bridgeObjectRelease(v12);
}

double sub_10032157C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 56);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v12 = v2;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v2);
    if (!v13)
      goto LABEL_14;
  }
  else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_14;
  }
  if (sub_100320B88())
  {
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v3 = type metadata accessor for Logger(0);
    sub_100012DC4(v3, (uint64_t)qword_100655A68);
    v4 = swift_retain(v1);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v7 = 138412290;
      v9 = objc_msgSend(*(id *)(v1 + 32), "objectID");
      v22 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v7 + 4, v7 + 12);
      *v8 = v9;
      swift_release(v1);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Going to remove stop sharing list, i.e. remove all sharees {list.objectID: %@}", v7, 0xCu);
      v10 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v8, 1, v10);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

    }
    else
    {

      swift_release(v1);
    }
    sub_100320C60((uint64_t)_swiftEmptyArrayStorage);
    return result;
  }
LABEL_14:
  if (qword_10063D668 != -1)
    swift_once(&qword_10063D668, sub_10031FE9C);
  v14 = type metadata accessor for Logger(0);
  sub_100012DC4(v14, (uint64_t)qword_100655A68);
  v15 = swift_retain(v1);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v18 = 138412290;
    v20 = objc_msgSend(*(id *)(v1 + 32), "objectID");
    v22 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v18 + 4, v18 + 12);
    *v19 = v20;
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Requested to stop sharing the list but the list is not shared to anyone {list.objectID: %@}", v18, 0xCu);
    v21 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v19, 1, v21);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  return result;
}

id sub_1003218E0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[3];
  _BYTE v24[16];
  id v25;

  v1 = v0;
  v2 = objc_msgSend(*(id *)(v0 + 32), "store");
  v3 = objc_msgSend(*(id *)(v0 + 32), "objectID");
  v25 = 0;
  v4 = objc_msgSend(v2, "fetchListWithObjectID:error:", v3, &v25);

  v5 = v25;
  if (!v4)
  {
    v6 = v5;
    v7 = _convertNSErrorToError(_:)(v5);

    swift_willThrow(v8);
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_100655A68);
    swift_errorRetain(v7);
    swift_retain(v1);
    swift_errorRetain(v7);
    v10 = swift_retain(v1);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = (_QWORD *)swift_slowAlloc(8, -1);
      v15 = (void *)swift_slowAlloc(32, -1);
      v25 = v15;
      *(_DWORD *)v13 = 136315394;
      swift_getErrorValue(v7, v24, v23);
      v16 = Error.localizedDescription.getter(v23[1], v23[2]);
      v18 = v17;
      v22 = sub_100027E40(v16, v17, (uint64_t *)&v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v18);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      *(_WORD *)(v13 + 12) = 2112;
      v19 = objc_msgSend(*(id *)(v1 + 32), "objectID");
      v22 = (uint64_t)v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v13 + 14, v13 + 22);
      *v14 = v19;
      swift_release_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRListSharingInteractor failed to fetch updated list {error: %s, list.objectID: %@}", (uint8_t *)v13, 0x16u);
      v20 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v14, 1, v20);
      swift_slowDealloc(v14, -1, -1);
      swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease(v7);
    }
    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);

      swift_release_n(v1, 2);
    }
    return 0;
  }
  return v4;
}

double sub_100321C18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  double result;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  char v46[8];
  uint64_t v47;
  _BYTE v48[16];

  v5 = a4 + 16;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v7 = type metadata accessor for Logger(0);
    sub_100012DC4(v7, (uint64_t)qword_100655A68);
    v8 = a2;
    swift_errorRetain(a1);
    v9 = v8;
    v10 = swift_errorRetain(a1);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v43 = v5;
      v14 = (_QWORD *)swift_slowAlloc(8, -1);
      v15 = swift_slowAlloc(32, -1);
      v47 = v15;
      *(_DWORD *)v13 = 136315394;
      swift_getErrorValue(a1, v46, v45);
      v16 = Error.localizedDescription.getter(v45[1], v45[2]);
      v18 = v17;
      v44 = sub_100027E40(v16, v17, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v18);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      *(_WORD *)(v13 + 12) = 2112;
      v19 = objc_msgSend(v9, "objectID");
      v44 = (uint64_t)v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v13 + 14, v13 + 22);
      *v14 = v19;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to update sharees for list {error: %s, list.objectID: %@}", (uint8_t *)v13, 0x16u);
      v20 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v14, 1, v20);
      v21 = v14;
      v5 = v43;
      swift_slowDealloc(v21, -1, -1);
      swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_10063D668 != -1)
      swift_once(&qword_10063D668, sub_10031FE9C);
    v23 = type metadata accessor for Logger(0);
    sub_100012DC4(v23, (uint64_t)qword_100655A68);
    v24 = a2;
    swift_bridgeObjectRetain_n(a3, 2);
    v25 = v24;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v28 = 138412546;
      v30 = objc_msgSend(v25, "objectID");
      v47 = (uint64_t)v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v28 + 4, v28 + 12);
      *v29 = v30;

      *(_WORD *)(v28 + 12) = 2048;
      if ((unint64_t)a3 >> 62)
      {
        if (a3 < 0)
          v42 = a3;
        else
          v42 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v31 = _CocoaArrayWrapper.endIndex.getter(v42);
        swift_bridgeObjectRelease(a3);
      }
      else
      {
        v31 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(a3);
      v47 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Updated sharees to list {list.objectID: %@, sharees.count: %ld}", (uint8_t *)v28, 0x16u);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v29, 1, v32);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
  }
  swift_beginAccess(v5, &v47, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v35 = Strong;
    v36 = *(_QWORD *)(Strong + 56);
    swift_bridgeObjectRetain(v36);
    if (sub_100320B88())
    {
      v37 = *(_QWORD *)(v35 + 56);
      swift_bridgeObjectRetain(v37);
      v39 = sub_100096D84(v38, v36);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v36);
      if ((v39 & 1) != 0 || (v40 = swift_unknownObjectWeakLoadStrong(v35 + 16)) == 0)
      {
        *(_QWORD *)&result = swift_release(v35).n128_u64[0];
      }
      else
      {
        v41 = v40;
        sub_1002F5054();
        swift_release(v35);
        swift_unknownObjectRelease(v41);
      }
    }
    else
    {
      swift_release(v35);
      swift_bridgeObjectRelease(v36);
    }
  }
  return result;
}

_QWORD *sub_10032213C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_9:
        v8 = v7;
        v9 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v10 = objc_msgSend(v7, "objectID");
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v11 = static NSObject.== infix(_:_:)(v10, a2);

        if ((v11 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v5 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
          v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
          specialized ContiguousArray._endMutation()(v6);
        }
        ++v4;
        if (v9 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v14);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1003222C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t i;
  unint64_t j;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_22;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    for (j = 0; ; ++j)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, a1);
        goto LABEL_9;
      }
      if (j >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      v9 = *(id *)(a1 + 8 * j + 32);
LABEL_9:
      v10 = v9;
      v11 = j + 1;
      if (__OFADD__(j, 1))
        goto LABEL_21;
      v12 = objc_msgSend(v9, "address");
      if (!v12)
        goto LABEL_4;
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v16 = v15;

      if (v14 == a2 && v16 == a3)
      {

        swift_bridgeObjectRelease(a3);
        goto LABEL_5;
      }
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, a2, a3, 0);
      v12 = (id)swift_bridgeObjectRelease(v16);
      if ((v18 & 1) != 0)
      {

      }
      else
      {
LABEL_4:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v7 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
        v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
        specialized ContiguousArray._endMutation()(v8);
      }
LABEL_5:
      if (v11 == i)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10032247C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003224A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003224D4(uint64_t a1)
{
  uint64_t v1;

  return sub_100321C18(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003224E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIRemindersListTemporaryItemSet()
{
  return objc_opt_self(_TtC9Reminders33TTRIRemindersListTemporaryItemSet);
}

uint64_t sub_10032252C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 24, v3, 1, 0);
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 24) = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_10032256C(uint64_t a1, unsigned int a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  char v11;
  int v12;
  uint64_t v14;

  v4 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  if (!(_BYTE)a2)
    return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)((a2 >> 8) & 1);
  if (a2 == 1)
  {
    v10 = *(unsigned __int8 *)(a1 + v4[12]);
    sub_1003226A8(a1, (uint64_t)&v14 - v8);
    if (v10 == 1)
    {
      v11 = v9[v4[18]];
      sub_10025ABEC((uint64_t)v9);
      sub_1003226A8(a1, (uint64_t)v6);
      if ((v11 & 1) != 0)
      {
        v12 = v6[v4[14]];
        sub_10025ABEC((uint64_t)v6);
        if (v12 != 1)
          return 0;
        return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)((a2 >> 8) & 1);
      }
    }
    else
    {
      sub_10025ABEC((uint64_t)v9);
      sub_1003226A8(a1, (uint64_t)v6);
    }
    sub_10025ABEC((uint64_t)v6);
  }
  else if ((*(_BYTE *)(a1 + v4[12]) & 1) != 0)
  {
    return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)((a2 >> 8) & 1);
  }
  return 0;
}

uint64_t sub_1003226A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003227DC + 4 * byte_10052E055[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100322810 + 4 * byte_10052E050[v4]))();
}

uint64_t sub_100322810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100322818(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100322820);
  return result;
}

uint64_t sub_10032282C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100322834);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_100322838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100322840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresentationTreeConfiguration()
{
  return &type metadata for TTRRemindersListPresentationTreeConfiguration;
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003228A8 + 4 * byte_10052E05F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003228DC + 4 * byte_10052E05A[v4]))();
}

uint64_t sub_1003228DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003228E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003228ECLL);
  return result;
}

uint64_t sub_1003228F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100322900);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100322904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032290C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility()
{
  return &type metadata for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility;
}

unint64_t sub_10032292C()
{
  unint64_t result;

  result = qword_100655BE8;
  if (!qword_100655BE8)
  {
    result = swift_getWitnessTable(&unk_10052E0F8, &type metadata for TTRRemindersListPresentationTreeConfiguration.CompletedRowVisibility);
    atomic_store(result, (unint64_t *)&qword_100655BE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003229BC + 4 * byte_10052E125[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003229F0 + 4 * byte_10052E120[v4]))();
}

uint64_t sub_1003229F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003229F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100322A00);
  return result;
}

uint64_t sub_100322A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100322A14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100322A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100322A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride()
{
  return &type metadata for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride;
}

unint64_t sub_100322A40()
{
  unint64_t result;

  result = qword_100655BF0;
  if (!qword_100655BF0)
  {
    result = swift_getWitnessTable(&unk_10052E4A0, &type metadata for TTRIRemindersListNavigationBarTemplatesItemVisibilityOverride);
    atomic_store(result, (unint64_t *)&qword_100655BF0);
  }
  return result;
}

_QWORD *sub_100322A84(uint64_t *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v28[5];

  v10 = type metadata accessor for TTRIRemindersListNavigationBarInteractor();
  swift_allocObject(v10, 160, 7);
  v11 = sub_1004ACD30((uint64_t)a2, (uint64_t)a3);
  v12 = type metadata accessor for TTRIRemindersListNavigationBarRouter();
  v13 = swift_allocObject(v12, 16, 7);
  v28[3] = v12;
  v28[4] = &off_100602CB8;
  v28[0] = v13;
  v14 = type metadata accessor for TTRIRemindersListNavigationBarPresenter(0);
  v15 = (_QWORD *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = sub_100028D48((uint64_t)v28, v12);
  __chkstk_darwin(v16);
  v18 = (_QWORD *)((char *)&v28[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  v20 = sub_100322D14(v11, *v18, a4, a5, v15);
  v21 = a2;
  sub_1000438B0(a3);
  swift_retain(v11);
  swift_retain(v13);
  swift_unknownObjectRetain(a4);
  sub_100027F10(v28);
  v22 = type metadata accessor for TTRIRemindersListNavigationBarController();
  v23 = swift_allocObject(v22, 248, 7);
  v24 = swift_retain(v20);
  v25 = sub_100322C60(v24, v23);
  *(_QWORD *)(v11 + 24) = &off_1005EC060;
  swift_unknownObjectWeakAssign(v11 + 16, v20);
  v20[3] = &off_1005EDBD0;
  swift_unknownObjectWeakAssign(v20 + 2, v25);
  a1[3] = v22;
  swift_release(v13);
  *a1 = v25;
  return v20;
}

uint64_t sub_100322C60(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  *(_BYTE *)(a2 + 16) = v5 == (id)1;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 200) = 0u;
  *(_OWORD *)(a2 + 216) = 0u;
  *(_OWORD *)(a2 + 232) = 0u;
  *(_QWORD *)(a2 + 24) = a1;
  *(_QWORD *)(a2 + 32) = &off_1005EC080;
  return a2;
}

_QWORD *sub_100322D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char *v10;
  uint64_t v11;
  char *v12;

  a5[13] = type metadata accessor for TTRIRemindersListNavigationBarRouter();
  a5[14] = &off_100602CB8;
  a5[10] = a2;
  a5[3] = 0;
  swift_unknownObjectWeakInit(a5 + 2, 0);
  a5[5] = 0;
  swift_unknownObjectWeakInit(a5 + 4, 0);
  a5[7] = 0;
  swift_unknownObjectWeakInit(a5 + 6, 0);
  a5[15] = 0;
  v10 = (char *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetConfiguration;
  v11 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)a5
      + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_lastSetReminderEditingItemsInfoSource;
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = -4;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_templatesItemVisibilityOverride) = 2;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders39TTRIRemindersListNavigationBarPresenter_shouldIgnoreCenterItemActions) = 0;
  a5[8] = a1;
  a5[9] = &off_100609998;
  a5[16] = a3;
  a5[17] = a4;
  return a5;
}

char *sub_100322E14(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  void *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  id v179;
  void *v180;
  id v181;
  uint64_t v182;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  void *v189;
  unsigned __int8 v190;
  void *v191;
  char *v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 0u:
          v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v197 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v10))
          {
            case 1u:
              v11 = *a2;
              *(_QWORD *)a1 = *a2;
              v12 = v11;
              v13 = a1;
              v14 = v10;
              v15 = 1;
              goto LABEL_45;
            case 2u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
              v13 = a1;
              v14 = v10;
              v15 = 2;
              goto LABEL_45;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
              v13 = a1;
              v14 = v10;
              v15 = 3;
              goto LABEL_45;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
              v13 = a1;
              v14 = v10;
              v15 = 4;
              goto LABEL_45;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
              v13 = a1;
              v14 = v10;
              v15 = 5;
              goto LABEL_45;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
              v13 = a1;
              v14 = v10;
              v15 = 6;
              goto LABEL_45;
            case 8u:
              v101 = *a2;
              *(_QWORD *)a1 = *a2;
              v102 = v101;
              v13 = a1;
              v14 = v10;
              v15 = 8;
              goto LABEL_45;
            case 9u:
              v103 = *a2;
              *(_QWORD *)a1 = *a2;
              v104 = v103;
              v13 = a1;
              v14 = v10;
              v15 = 9;
LABEL_45:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
              break;
          }
          v105 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v106 = v105[5];
          v107 = &a1[v106];
          v108 = (char *)a2 + v106;
          v109 = *(uint64_t *)((char *)a2 + v106 + 8);
          if (v109)
          {
            *(_QWORD *)v107 = *(_QWORD *)v108;
            *((_QWORD *)v107 + 1) = v109;
            v110 = (void *)*((_QWORD *)v108 + 2);
            v111 = *((_QWORD *)v108 + 3);
            v112 = *((_QWORD *)v108 + 4);
            v113 = *((_QWORD *)v108 + 5);
            v184 = *((_QWORD *)v108 + 6);
            v193 = *((_QWORD *)v108 + 7);
            v188 = v108[64];
            swift_bridgeObjectRetain(v109);
            sub_10003E1F0(v110, v111, v112, v113, v184, v193, v188);
            *((_QWORD *)v107 + 2) = v110;
            *((_QWORD *)v107 + 3) = v111;
            *((_QWORD *)v107 + 4) = v112;
            *((_QWORD *)v107 + 5) = v113;
            *((_QWORD *)v107 + 6) = v184;
            *((_QWORD *)v107 + 7) = v193;
            v107[64] = v188;
            *(_DWORD *)(v107 + 65) = *(_DWORD *)(v108 + 65);
            v114 = v108[120];
            if (v114 == 255)
            {
              v115 = *(_OWORD *)(v108 + 88);
              *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
              *(_OWORD *)(v107 + 88) = v115;
              *(_OWORD *)(v107 + 104) = *(_OWORD *)(v108 + 104);
              v107[120] = v108[120];
            }
            else
            {
              v194 = v114 & 1;
              v119 = *((_QWORD *)v108 + 10);
              v120 = *((_QWORD *)v108 + 11);
              v121 = *((_QWORD *)v108 + 12);
              v122 = *((_QWORD *)v108 + 13);
              v185 = *((_QWORD *)v108 + 14);
              v189 = (void *)*((_QWORD *)v108 + 9);
              sub_10002B764(v189, v119, v120, v121, v122, v185, v114 & 1);
              *((_QWORD *)v107 + 9) = v189;
              *((_QWORD *)v107 + 10) = v119;
              *((_QWORD *)v107 + 11) = v120;
              *((_QWORD *)v107 + 12) = v121;
              *((_QWORD *)v107 + 13) = v122;
              *((_QWORD *)v107 + 14) = v185;
              v107[120] = v194;
            }
            v8 = v197;
            v107[121] = v108[121];
          }
          else
          {
            v116 = *((_OWORD *)v108 + 5);
            *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
            *((_OWORD *)v107 + 5) = v116;
            *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
            *(_OWORD *)(v107 + 106) = *(_OWORD *)(v108 + 106);
            v117 = *((_OWORD *)v108 + 1);
            *(_OWORD *)v107 = *(_OWORD *)v108;
            *((_OWORD *)v107 + 1) = v117;
            v118 = *((_OWORD *)v108 + 3);
            *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
            *((_OWORD *)v107 + 3) = v118;
          }
          a1[v105[6]] = *((_BYTE *)a2 + v105[6]);
          a1[v105[7]] = *((_BYTE *)a2 + v105[7]);
          a1[v105[8]] = *((_BYTE *)a2 + v105[8]);
          a1[v105[9]] = *((_BYTE *)a2 + v105[9]);
          a1[v105[10]] = *((_BYTE *)a2 + v105[10]);
          v123 = v105[11];
          v124 = *(char **)((char *)a2 + v123);
          *(_QWORD *)&a1[v123] = v124;
          v125 = v124;
          v51 = a1;
          v52 = v7;
          v53 = 0;
          goto LABEL_102;
        case 1u:
          v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v198 = v8;
          switch(swift_getEnumCaseMultiPayload(a2, v16))
          {
            case 1u:
              v17 = *a2;
              *(_QWORD *)a1 = *a2;
              v18 = v17;
              v19 = a1;
              v20 = v16;
              v21 = 1;
              goto LABEL_61;
            case 2u:
              v126 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
              v19 = a1;
              v20 = v16;
              v21 = 2;
              goto LABEL_61;
            case 3u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
              v19 = a1;
              v20 = v16;
              v21 = 3;
              goto LABEL_61;
            case 4u:
              v128 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
              v19 = a1;
              v20 = v16;
              v21 = 4;
              goto LABEL_61;
            case 5u:
              v129 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(a1, a2, v129);
              v19 = a1;
              v20 = v16;
              v21 = 5;
              goto LABEL_61;
            case 6u:
              v130 = type metadata accessor for Date(0);
              (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, a2, v130);
              v19 = a1;
              v20 = v16;
              v21 = 6;
              goto LABEL_61;
            case 8u:
              v131 = *a2;
              *(_QWORD *)a1 = *a2;
              v132 = v131;
              v19 = a1;
              v20 = v16;
              v21 = 8;
              goto LABEL_61;
            case 9u:
              v133 = *a2;
              *(_QWORD *)a1 = *a2;
              v134 = v133;
              v19 = a1;
              v20 = v16;
              v21 = 9;
LABEL_61:
              swift_storeEnumTagMultiPayload(v19, v20, v21);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
              break;
          }
          v135 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v136 = v135[5];
          v137 = &a1[v136];
          v138 = (char *)a2 + v136;
          v139 = *(uint64_t *)((char *)a2 + v136 + 8);
          if (v139)
          {
            *(_QWORD *)v137 = *(_QWORD *)v138;
            *((_QWORD *)v137 + 1) = v139;
            v140 = (void *)*((_QWORD *)v138 + 2);
            v141 = *((_QWORD *)v138 + 3);
            v142 = *((_QWORD *)v138 + 4);
            v143 = *((_QWORD *)v138 + 5);
            v186 = *((_QWORD *)v138 + 6);
            v195 = *((_QWORD *)v138 + 7);
            v190 = v138[64];
            swift_bridgeObjectRetain(v139);
            sub_10003E1F0(v140, v141, v142, v143, v186, v195, v190);
            *((_QWORD *)v137 + 2) = v140;
            *((_QWORD *)v137 + 3) = v141;
            *((_QWORD *)v137 + 4) = v142;
            *((_QWORD *)v137 + 5) = v143;
            *((_QWORD *)v137 + 6) = v186;
            *((_QWORD *)v137 + 7) = v195;
            v137[64] = v190;
            *(_DWORD *)(v137 + 65) = *(_DWORD *)(v138 + 65);
            v144 = v138[120];
            if (v144 == 255)
            {
              v145 = *(_OWORD *)(v138 + 88);
              *(_OWORD *)(v137 + 72) = *(_OWORD *)(v138 + 72);
              *(_OWORD *)(v137 + 88) = v145;
              *(_OWORD *)(v137 + 104) = *(_OWORD *)(v138 + 104);
              v137[120] = v138[120];
            }
            else
            {
              v196 = v144 & 1;
              v149 = *((_QWORD *)v138 + 10);
              v150 = *((_QWORD *)v138 + 11);
              v151 = *((_QWORD *)v138 + 12);
              v152 = *((_QWORD *)v138 + 13);
              v187 = *((_QWORD *)v138 + 14);
              v191 = (void *)*((_QWORD *)v138 + 9);
              sub_10002B764(v191, v149, v150, v151, v152, v187, v144 & 1);
              *((_QWORD *)v137 + 9) = v191;
              *((_QWORD *)v137 + 10) = v149;
              *((_QWORD *)v137 + 11) = v150;
              *((_QWORD *)v137 + 12) = v151;
              *((_QWORD *)v137 + 13) = v152;
              *((_QWORD *)v137 + 14) = v187;
              v137[120] = v196;
            }
            v8 = v198;
            v137[121] = v138[121];
          }
          else
          {
            v146 = *((_OWORD *)v138 + 5);
            *((_OWORD *)v137 + 4) = *((_OWORD *)v138 + 4);
            *((_OWORD *)v137 + 5) = v146;
            *((_OWORD *)v137 + 6) = *((_OWORD *)v138 + 6);
            *(_OWORD *)(v137 + 106) = *(_OWORD *)(v138 + 106);
            v147 = *((_OWORD *)v138 + 1);
            *(_OWORD *)v137 = *(_OWORD *)v138;
            *((_OWORD *)v137 + 1) = v147;
            v148 = *((_OWORD *)v138 + 3);
            *((_OWORD *)v137 + 2) = *((_OWORD *)v138 + 2);
            *((_OWORD *)v137 + 3) = v148;
          }
          a1[v135[6]] = *((_BYTE *)a2 + v135[6]);
          a1[v135[7]] = *((_BYTE *)a2 + v135[7]);
          a1[v135[8]] = *((_BYTE *)a2 + v135[8]);
          a1[v135[9]] = *((_BYTE *)a2 + v135[9]);
          a1[v135[10]] = *((_BYTE *)a2 + v135[10]);
          v153 = v135[11];
          v154 = *(char **)((char *)a2 + v153);
          *(_QWORD *)&a1[v153] = v154;
          v155 = v154;
          v51 = a1;
          v52 = v7;
          v53 = 1;
          goto LABEL_102;
        case 2u:
          v22 = *a2;
          *(_QWORD *)a1 = *a2;
          v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v24 = (void **)&a1[v23];
          v25 = (void **)((char *)a2 + v23);
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
          v29 = v22;
          if (v28(v25, 1, v26))
          {
            v30 = sub_10002A750(&qword_100644980);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v25, v26))
            {
              case 1u:
                v66 = *v25;
                *v24 = *v25;
                v67 = v66;
                v68 = v24;
                v69 = v26;
                v70 = 1;
                goto LABEL_77;
              case 2u:
                v156 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v24, v25, v156);
                v68 = v24;
                v69 = v26;
                v70 = 2;
                goto LABEL_77;
              case 3u:
                v157 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v24, v25, v157);
                v68 = v24;
                v69 = v26;
                v70 = 3;
                goto LABEL_77;
              case 4u:
                v158 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v24, v25, v158);
                v68 = v24;
                v69 = v26;
                v70 = 4;
                goto LABEL_77;
              case 5u:
                v159 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v24, v25, v159);
                v68 = v24;
                v69 = v26;
                v70 = 5;
                goto LABEL_77;
              case 6u:
                v160 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v24, v25, v160);
                v68 = v24;
                v69 = v26;
                v70 = 6;
                goto LABEL_77;
              case 8u:
                v161 = *v25;
                *v24 = *v25;
                v162 = v161;
                v68 = v24;
                v69 = v26;
                v70 = 8;
                goto LABEL_77;
              case 9u:
                v163 = *v25;
                *v24 = *v25;
                v164 = v163;
                v68 = v24;
                v69 = v26;
                v70 = 9;
LABEL_77:
                swift_storeEnumTagMultiPayload(v68, v69, v70);
                break;
              default:
                memcpy(v24, v25, *(_QWORD *)(v27 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          v51 = a1;
          v52 = v7;
          v53 = 2;
          goto LABEL_102;
        case 3u:
          v31 = *a2;
          *(_QWORD *)a1 = *a2;
          v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v33 = (void **)&a1[v32];
          v34 = (void **)((char *)a2 + v32);
          v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
          v38 = v31;
          if (v37(v34, 1, v35))
          {
            v39 = sub_10002A750(&qword_100644980);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v34, v35))
            {
              case 1u:
                v71 = *v34;
                *v33 = *v34;
                v72 = v71;
                v73 = v33;
                v74 = v35;
                v75 = 1;
                goto LABEL_99;
              case 2u:
                v165 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v33, v34, v165);
                v73 = v33;
                v74 = v35;
                v75 = 2;
                goto LABEL_99;
              case 3u:
                v166 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v33, v34, v166);
                v73 = v33;
                v74 = v35;
                v75 = 3;
                goto LABEL_99;
              case 4u:
                v167 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v33, v34, v167);
                v73 = v33;
                v74 = v35;
                v75 = 4;
                goto LABEL_99;
              case 5u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v33, v34, v182);
                v73 = v33;
                v74 = v35;
                v75 = 5;
                goto LABEL_99;
              case 6u:
                v168 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v33, v34, v168);
                v73 = v33;
                v74 = v35;
                v75 = 6;
                goto LABEL_99;
              case 8u:
                v169 = *v34;
                *v33 = *v34;
                v170 = v169;
                v73 = v33;
                v74 = v35;
                v75 = 8;
                goto LABEL_99;
              case 9u:
                v171 = *v34;
                *v33 = *v34;
                v172 = v171;
                v73 = v33;
                v74 = v35;
                v75 = 9;
LABEL_99:
                swift_storeEnumTagMultiPayload(v73, v74, v75);
                break;
              default:
                memcpy(v33, v34, *(_QWORD *)(v36 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
          v51 = a1;
          v52 = v7;
          v53 = 3;
          goto LABEL_102;
        case 4u:
          v40 = *a2;
          *(_QWORD *)a1 = *a2;
          v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v42 = (void **)&a1[v41];
          v43 = (void **)((char *)a2 + v41);
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v45 = *(_QWORD *)(v44 - 8);
          v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
          v47 = v40;
          if (v46(v43, 1, v44))
          {
            v48 = sub_10002A750(&qword_100644980);
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v43, v44))
            {
              case 1u:
                v76 = *v43;
                *v42 = *v43;
                v77 = v76;
                v78 = v42;
                v79 = v44;
                v80 = 1;
                goto LABEL_95;
              case 2u:
                v173 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v42, v43, v173);
                v78 = v42;
                v79 = v44;
                v80 = 2;
                goto LABEL_95;
              case 3u:
                v174 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v42, v43, v174);
                v78 = v42;
                v79 = v44;
                v80 = 3;
                goto LABEL_95;
              case 4u:
                v175 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v42, v43, v175);
                v78 = v42;
                v79 = v44;
                v80 = 4;
                goto LABEL_95;
              case 5u:
                v176 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v42, v43, v176);
                v78 = v42;
                v79 = v44;
                v80 = 5;
                goto LABEL_95;
              case 6u:
                v177 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v42, v43, v177);
                v78 = v42;
                v79 = v44;
                v80 = 6;
                goto LABEL_95;
              case 8u:
                v178 = *v43;
                *v42 = *v43;
                v179 = v178;
                v78 = v42;
                v79 = v44;
                v80 = 8;
                goto LABEL_95;
              case 9u:
                v180 = *v43;
                *v42 = *v43;
                v181 = v180;
                v78 = v42;
                v79 = v44;
                v80 = 9;
LABEL_95:
                swift_storeEnumTagMultiPayload(v78, v79, v80);
                break;
              default:
                memcpy(v42, v43, *(_QWORD *)(v45 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
          }
          v51 = a1;
          v52 = v7;
          v53 = 4;
          goto LABEL_102;
        case 5u:
          *(_QWORD *)a1 = *a2;
          a1[8] = *((_BYTE *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          v49 = a2[2];
          *((_QWORD *)a1 + 2) = v49;
          v50 = v49;
          v51 = a1;
          v52 = v7;
          v53 = 5;
          goto LABEL_102;
        case 6u:
          v61 = *a2;
          *(_QWORD *)a1 = *a2;
          v62 = v61;
          v51 = a1;
          v52 = v7;
          v53 = 6;
          goto LABEL_102;
        case 7u:
          v54 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v55 = *(_QWORD *)(v54 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v55 + 48))(a2, 1, v54))
          {
            v56 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            v81 = *a2;
            *(_QWORD *)a1 = *a2;
            v82 = *(int *)(v54 + 20);
            v192 = &a1[v82];
            v83 = (char *)a2 + v82;
            v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v85 = v8;
            v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
            v87 = swift_bridgeObjectRetain(v81);
            v86(v192, v83, v84, v87);
            v8 = v85;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v54);
          }
          v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v89 = &a1[v88];
          v90 = (char **)((char *)a2 + v88);
          v91 = v90[1];
          if (v91)
          {
            *(_QWORD *)v89 = *v90;
            *((_QWORD *)v89 + 1) = v91;
            v92 = (void *)v90[2];
            *((_QWORD *)v89 + 2) = v92;
            swift_bridgeObjectRetain(v91);
            v93 = v92;
          }
          else
          {
            *(_OWORD *)v89 = *(_OWORD *)v90;
            *((_QWORD *)v89 + 2) = v90[2];
          }
          v51 = a1;
          v52 = v7;
          v53 = 7;
          goto LABEL_102;
        case 8u:
          v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v64 + 48))(a2, 1, v63))
          {
            v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            a1[*(int *)(v63 + 20)] = *((_BYTE *)a2 + *(int *)(v63 + 20));
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
          }
          v95 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)&a1[*(int *)(v95 + 20)] = *(char **)((char *)a2 + *(int *)(v95 + 20));
          v51 = a1;
          v52 = v7;
          v53 = 8;
          goto LABEL_102;
        case 9u:
          *a1 = *(_BYTE *)a2;
          v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v58 = &a1[v57];
          v59 = (char *)a2 + v57;
          v60 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
          v51 = a1;
          v52 = v7;
          v53 = 9;
LABEL_102:
          swift_storeEnumTagMultiPayload(v51, v52, v53);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void sub_100323E4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    switch(swift_getEnumCaseMultiPayload(a1, v2))
    {
      case 0u:
        v3 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v3))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_23;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_24;
        }
        goto LABEL_24;
      case 1u:
        v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a1, v4))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_23:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            v5 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
            break;
          default:
            break;
        }
LABEL_24:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v17 = (char *)a1 + *(int *)(v16 + 20);
        v18 = *((_QWORD *)v17 + 1);
        if (v18)
        {
          swift_bridgeObjectRelease(v18);
          sub_10003E2EC(*((void **)v17 + 2), *((_QWORD *)v17 + 3), *((_QWORD *)v17 + 4), *((_QWORD *)v17 + 5), *((_QWORD *)v17 + 6), *((_QWORD *)v17 + 7), v17[64]);
          v19 = v17[120];
          if (v19 != 255)
            sub_10002B328(*((void **)v17 + 9), *((_QWORD *)v17 + 10), *((_QWORD *)v17 + 11), *((_QWORD *)v17 + 12), *((_QWORD *)v17 + 13), *((_QWORD *)v17 + 14), v19 & 1);
        }
        v9 = *(id *)((char *)a1 + *(int *)(v16 + 44));
        goto LABEL_28;
      case 2u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v6))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v7))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload(a1, v8))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:
        v9 = (id)*a1;
        goto LABEL_28;
      case 7u:
        v10 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1, 1, v10))
        {
          swift_bridgeObjectRelease(*a1);
          v11 = (char *)a1 + *(int *)(v10 + 20);
          v12 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        }
        a1 = (_QWORD *)((char *)a1
                      + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
        v13 = a1[1];
        if (!v13)
          return;
        swift_bridgeObjectRelease(v13);
LABEL_18:
        v9 = (id)a1[2];
LABEL_28:

        break;
      case 8u:
        v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
          return;
LABEL_20:
        v15 = type metadata accessor for Date(0);
LABEL_22:
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
        break;
      case 9u:
        a1 = (_QWORD *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
        v15 = type metadata accessor for AnyTip(0);
        goto LABEL_22;
      default:
        return;
    }
  }
}

void **sub_100324204(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(void **, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(void **, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(void **, uint64_t, uint64_t);
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  void **v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void **v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  void *v131;
  id v132;
  int *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  id v168;
  void *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void *v178;
  id v179;
  uint64_t v180;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  void *v187;
  unsigned __int8 v188;
  void *v189;
  char *v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v195 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 1u:
            v9 = *a2;
            *a1 = *a2;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_43;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_43;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(a1, a2, v95);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_43;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_43;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_43;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_43;
          case 8u:
            v99 = *a2;
            *a1 = *a2;
            v100 = v99;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_43;
          case 9u:
            v101 = *a2;
            *a1 = *a2;
            v102 = v101;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        v107 = *(uint64_t *)((char *)a2 + v104 + 8);
        if (v107)
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v182 = *((_QWORD *)v106 + 6);
          v191 = *((_QWORD *)v106 + 7);
          v186 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v182, v191, v186);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v182;
          *((_QWORD *)v105 + 7) = v191;
          v105[64] = v186;
          *(_DWORD *)(v105 + 65) = *(_DWORD *)(v106 + 65);
          v112 = v106[120];
          if (v112 == 255)
          {
            v113 = *(_OWORD *)(v106 + 88);
            *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
            *(_OWORD *)(v105 + 88) = v113;
            *(_OWORD *)(v105 + 104) = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
          }
          else
          {
            v192 = v112 & 1;
            v117 = *((_QWORD *)v106 + 10);
            v118 = *((_QWORD *)v106 + 11);
            v119 = *((_QWORD *)v106 + 12);
            v120 = *((_QWORD *)v106 + 13);
            v183 = *((_QWORD *)v106 + 14);
            v187 = (void *)*((_QWORD *)v106 + 9);
            sub_10002B764(v187, v117, v118, v119, v120, v183, v112 & 1);
            *((_QWORD *)v105 + 9) = v187;
            *((_QWORD *)v105 + 10) = v117;
            *((_QWORD *)v105 + 11) = v118;
            *((_QWORD *)v105 + 12) = v119;
            *((_QWORD *)v105 + 13) = v120;
            *((_QWORD *)v105 + 14) = v183;
            v105[120] = v192;
          }
          v7 = v195;
          v105[121] = v106[121];
        }
        else
        {
          v114 = *((_OWORD *)v106 + 5);
          *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
          *((_OWORD *)v105 + 5) = v114;
          *((_OWORD *)v105 + 6) = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          v115 = *((_OWORD *)v106 + 1);
          *(_OWORD *)v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v115;
          v116 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v116;
        }
        *((_BYTE *)a1 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)a1 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)a1 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)a1 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)a1 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v121 = v103[11];
        v122 = *(void **)((char *)a2 + v121);
        *(void **)((char *)a1 + v121) = v122;
        v123 = v122;
        v49 = a1;
        v50 = v6;
        v51 = 0;
        goto LABEL_100;
      case 1u:
        v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v196 = v7;
        switch(swift_getEnumCaseMultiPayload(a2, v14))
        {
          case 1u:
            v15 = *a2;
            *a1 = *a2;
            v16 = v15;
            v17 = a1;
            v18 = v14;
            v19 = 1;
            goto LABEL_59;
          case 2u:
            v124 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(a1, a2, v124);
            v17 = a1;
            v18 = v14;
            v19 = 2;
            goto LABEL_59;
          case 3u:
            v125 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(a1, a2, v125);
            v17 = a1;
            v18 = v14;
            v19 = 3;
            goto LABEL_59;
          case 4u:
            v126 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
            v17 = a1;
            v18 = v14;
            v19 = 4;
            goto LABEL_59;
          case 5u:
            v127 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(a1, a2, v127);
            v17 = a1;
            v18 = v14;
            v19 = 5;
            goto LABEL_59;
          case 6u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(a1, a2, v128);
            v17 = a1;
            v18 = v14;
            v19 = 6;
            goto LABEL_59;
          case 8u:
            v129 = *a2;
            *a1 = *a2;
            v130 = v129;
            v17 = a1;
            v18 = v14;
            v19 = 8;
            goto LABEL_59;
          case 9u:
            v131 = *a2;
            *a1 = *a2;
            v132 = v131;
            v17 = a1;
            v18 = v14;
            v19 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v17, v18, v19);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        v133 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v134 = v133[5];
        v135 = (char *)a1 + v134;
        v136 = (char *)a2 + v134;
        v137 = *(uint64_t *)((char *)a2 + v134 + 8);
        if (v137)
        {
          *(_QWORD *)v135 = *(_QWORD *)v136;
          *((_QWORD *)v135 + 1) = v137;
          v138 = (void *)*((_QWORD *)v136 + 2);
          v139 = *((_QWORD *)v136 + 3);
          v140 = *((_QWORD *)v136 + 4);
          v141 = *((_QWORD *)v136 + 5);
          v184 = *((_QWORD *)v136 + 6);
          v193 = *((_QWORD *)v136 + 7);
          v188 = v136[64];
          swift_bridgeObjectRetain(v137);
          sub_10003E1F0(v138, v139, v140, v141, v184, v193, v188);
          *((_QWORD *)v135 + 2) = v138;
          *((_QWORD *)v135 + 3) = v139;
          *((_QWORD *)v135 + 4) = v140;
          *((_QWORD *)v135 + 5) = v141;
          *((_QWORD *)v135 + 6) = v184;
          *((_QWORD *)v135 + 7) = v193;
          v135[64] = v188;
          *(_DWORD *)(v135 + 65) = *(_DWORD *)(v136 + 65);
          v142 = v136[120];
          if (v142 == 255)
          {
            v143 = *(_OWORD *)(v136 + 88);
            *(_OWORD *)(v135 + 72) = *(_OWORD *)(v136 + 72);
            *(_OWORD *)(v135 + 88) = v143;
            *(_OWORD *)(v135 + 104) = *(_OWORD *)(v136 + 104);
            v135[120] = v136[120];
          }
          else
          {
            v194 = v142 & 1;
            v147 = *((_QWORD *)v136 + 10);
            v148 = *((_QWORD *)v136 + 11);
            v149 = *((_QWORD *)v136 + 12);
            v150 = *((_QWORD *)v136 + 13);
            v185 = *((_QWORD *)v136 + 14);
            v189 = (void *)*((_QWORD *)v136 + 9);
            sub_10002B764(v189, v147, v148, v149, v150, v185, v142 & 1);
            *((_QWORD *)v135 + 9) = v189;
            *((_QWORD *)v135 + 10) = v147;
            *((_QWORD *)v135 + 11) = v148;
            *((_QWORD *)v135 + 12) = v149;
            *((_QWORD *)v135 + 13) = v150;
            *((_QWORD *)v135 + 14) = v185;
            v135[120] = v194;
          }
          v7 = v196;
          v135[121] = v136[121];
        }
        else
        {
          v144 = *((_OWORD *)v136 + 5);
          *((_OWORD *)v135 + 4) = *((_OWORD *)v136 + 4);
          *((_OWORD *)v135 + 5) = v144;
          *((_OWORD *)v135 + 6) = *((_OWORD *)v136 + 6);
          *(_OWORD *)(v135 + 106) = *(_OWORD *)(v136 + 106);
          v145 = *((_OWORD *)v136 + 1);
          *(_OWORD *)v135 = *(_OWORD *)v136;
          *((_OWORD *)v135 + 1) = v145;
          v146 = *((_OWORD *)v136 + 3);
          *((_OWORD *)v135 + 2) = *((_OWORD *)v136 + 2);
          *((_OWORD *)v135 + 3) = v146;
        }
        *((_BYTE *)a1 + v133[6]) = *((_BYTE *)a2 + v133[6]);
        *((_BYTE *)a1 + v133[7]) = *((_BYTE *)a2 + v133[7]);
        *((_BYTE *)a1 + v133[8]) = *((_BYTE *)a2 + v133[8]);
        *((_BYTE *)a1 + v133[9]) = *((_BYTE *)a2 + v133[9]);
        *((_BYTE *)a1 + v133[10]) = *((_BYTE *)a2 + v133[10]);
        v151 = v133[11];
        v152 = *(void **)((char *)a2 + v151);
        *(void **)((char *)a1 + v151) = v152;
        v153 = v152;
        v49 = a1;
        v50 = v6;
        v51 = 1;
        goto LABEL_100;
      case 2u:
        v20 = *a2;
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v22 = (void **)((char *)a1 + v21);
        v23 = (void **)((char *)a2 + v21);
        v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v25 + 48);
        v27 = v20;
        if (v26(v23, 1, v24))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v23, v24))
          {
            case 1u:
              v64 = *v23;
              *v22 = *v23;
              v65 = v64;
              v66 = v22;
              v67 = v24;
              v68 = 1;
              goto LABEL_75;
            case 2u:
              v154 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v22, v23, v154);
              v66 = v22;
              v67 = v24;
              v68 = 2;
              goto LABEL_75;
            case 3u:
              v155 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v22, v23, v155);
              v66 = v22;
              v67 = v24;
              v68 = 3;
              goto LABEL_75;
            case 4u:
              v156 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v22, v23, v156);
              v66 = v22;
              v67 = v24;
              v68 = 4;
              goto LABEL_75;
            case 5u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v22, v23, v157);
              v66 = v22;
              v67 = v24;
              v68 = 5;
              goto LABEL_75;
            case 6u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v22, v23, v158);
              v66 = v22;
              v67 = v24;
              v68 = 6;
              goto LABEL_75;
            case 8u:
              v159 = *v23;
              *v22 = *v23;
              v160 = v159;
              v66 = v22;
              v67 = v24;
              v68 = 8;
              goto LABEL_75;
            case 9u:
              v161 = *v23;
              *v22 = *v23;
              v162 = v161;
              v66 = v22;
              v67 = v24;
              v68 = 9;
LABEL_75:
              swift_storeEnumTagMultiPayload(v66, v67, v68);
              break;
            default:
              memcpy(v22, v23, *(_QWORD *)(v25 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        v49 = a1;
        v50 = v6;
        v51 = 2;
        goto LABEL_100;
      case 3u:
        v29 = *a2;
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (void **)((char *)a1 + v30);
        v32 = (void **)((char *)a2 + v30);
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48);
        v36 = v29;
        if (v35(v32, 1, v33))
        {
          v37 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 1u:
              v69 = *v32;
              *v31 = *v32;
              v70 = v69;
              v71 = v31;
              v72 = v33;
              v73 = 1;
              goto LABEL_97;
            case 2u:
              v163 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v31, v32, v163);
              v71 = v31;
              v72 = v33;
              v73 = 2;
              goto LABEL_97;
            case 3u:
              v164 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v31, v32, v164);
              v71 = v31;
              v72 = v33;
              v73 = 3;
              goto LABEL_97;
            case 4u:
              v165 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v31, v32, v165);
              v71 = v31;
              v72 = v33;
              v73 = 4;
              goto LABEL_97;
            case 5u:
              v180 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v31, v32, v180);
              v71 = v31;
              v72 = v33;
              v73 = 5;
              goto LABEL_97;
            case 6u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v31, v32, v166);
              v71 = v31;
              v72 = v33;
              v73 = 6;
              goto LABEL_97;
            case 8u:
              v167 = *v32;
              *v31 = *v32;
              v168 = v167;
              v71 = v31;
              v72 = v33;
              v73 = 8;
              goto LABEL_97;
            case 9u:
              v169 = *v32;
              *v31 = *v32;
              v170 = v169;
              v71 = v31;
              v72 = v33;
              v73 = 9;
LABEL_97:
              swift_storeEnumTagMultiPayload(v71, v72, v73);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v49 = a1;
        v50 = v6;
        v51 = 3;
        goto LABEL_100;
      case 4u:
        v38 = *a2;
        *a1 = *a2;
        v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v40 = (void **)((char *)a1 + v39);
        v41 = (void **)((char *)a2 + v39);
        v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v43 = *(_QWORD *)(v42 - 8);
        v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
        v45 = v38;
        if (v44(v41, 1, v42))
        {
          v46 = sub_10002A750(&qword_100644980);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v41, v42))
          {
            case 1u:
              v74 = *v41;
              *v40 = *v41;
              v75 = v74;
              v76 = v40;
              v77 = v42;
              v78 = 1;
              goto LABEL_93;
            case 2u:
              v171 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v40, v41, v171);
              v76 = v40;
              v77 = v42;
              v78 = 2;
              goto LABEL_93;
            case 3u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v40, v41, v172);
              v76 = v40;
              v77 = v42;
              v78 = 3;
              goto LABEL_93;
            case 4u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v40, v41, v173);
              v76 = v40;
              v77 = v42;
              v78 = 4;
              goto LABEL_93;
            case 5u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v40, v41, v174);
              v76 = v40;
              v77 = v42;
              v78 = 5;
              goto LABEL_93;
            case 6u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v40, v41, v175);
              v76 = v40;
              v77 = v42;
              v78 = 6;
              goto LABEL_93;
            case 8u:
              v176 = *v41;
              *v40 = *v41;
              v177 = v176;
              v76 = v40;
              v77 = v42;
              v78 = 8;
              goto LABEL_93;
            case 9u:
              v178 = *v41;
              *v40 = *v41;
              v179 = v178;
              v76 = v40;
              v77 = v42;
              v78 = 9;
LABEL_93:
              swift_storeEnumTagMultiPayload(v76, v77, v78);
              break;
            default:
              memcpy(v40, v41, *(_QWORD *)(v43 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        v49 = a1;
        v50 = v6;
        v51 = 4;
        goto LABEL_100;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        v47 = a2[2];
        a1[2] = v47;
        v48 = v47;
        v49 = a1;
        v50 = v6;
        v51 = 5;
        goto LABEL_100;
      case 6u:
        v59 = *a2;
        *a1 = *a2;
        v60 = v59;
        v49 = a1;
        v50 = v6;
        v51 = 6;
        goto LABEL_100;
      case 7u:
        v52 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v53 = *(_QWORD *)(v52 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48))(a2, 1, v52))
        {
          v54 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          v79 = *a2;
          *a1 = *a2;
          v80 = *(int *)(v52 + 20);
          v190 = (char *)a1 + v80;
          v81 = (char *)a2 + v80;
          v82 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v83 = v7;
          v84 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v82 - 8) + 16);
          v85 = swift_bridgeObjectRetain(v79);
          v84(v190, v81, v82, v85);
          v7 = v83;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(a1, 0, 1, v52);
        }
        v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v87 = (void **)((char *)a1 + v86);
        v88 = (void **)((char *)a2 + v86);
        v89 = v88[1];
        if (v89)
        {
          *v87 = *v88;
          v87[1] = v89;
          v90 = (void *)v88[2];
          v87[2] = v90;
          swift_bridgeObjectRetain(v89);
          v91 = v90;
        }
        else
        {
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v87[2] = v88[2];
        }
        v49 = a1;
        v50 = v6;
        v51 = 7;
        goto LABEL_100;
      case 8u:
        v61 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v62 + 48))(a2, 1, v61))
        {
          v63 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(a1, a2, v92);
          *((_BYTE *)a1 + *(int *)(v61 + 20)) = *((_BYTE *)a2 + *(int *)(v61 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v62 + 56))(a1, 0, 1, v61);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v49 = a1;
        v50 = v6;
        v51 = 8;
        goto LABEL_100;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v55 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v56 = (char *)a1 + v55;
        v57 = (char *)a2 + v55;
        v58 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        v49 = a1;
        v50 = v6;
        v51 = 9;
LABEL_100:
        swift_storeEnumTagMultiPayload(v49, v50, v51);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void **sub_100325218(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void **v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(void **, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void **v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(void **, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(void **, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  void *v57;
  id v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void **v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(void **, uint64_t, uint64_t);
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void **v91;
  void **v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(void **, uint64_t, uint64_t);
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void **v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(void **, uint64_t, uint64_t);
  id v105;
  uint64_t v106;
  void *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void *v116;
  id v117;
  void **v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t, __n128);
  __n128 v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void *v141;
  id v142;
  __int128 v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  void **v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  id v157;
  void **v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void **v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t, __n128);
  __n128 v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  void *v177;
  id v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  id v188;
  void *v189;
  id v190;
  int *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  id v223;
  void *v224;
  id v225;
  int *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void *v257;
  id v258;
  void *v259;
  id v260;
  int *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  uint64_t v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void *v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  uint64_t v318;
  void *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  id v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  id v332;
  void *v333;
  id v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;
  id v341;
  void *v342;
  id v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;
  id v350;
  void *v351;
  id v352;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  id v360;
  void *v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  void *v368;
  id v369;
  void *v370;
  id v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void *v377;
  id v378;
  void *v379;
  id v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  int *v385;
  int *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unsigned __int8 v391;
  uint64_t v392;
  unsigned __int8 v393;
  uint64_t v394;
  int *v395;
  int *v396;
  char *v397;
  uint64_t v398;
  char v399;
  uint64_t v400;
  char v401;
  unsigned __int8 v402;
  char v403;
  unsigned __int8 v404;
  char v405;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 1u:
              v12 = *a2;
              *a1 = *a2;
              v13 = v12;
              v14 = a1;
              v15 = v11;
              v16 = 1;
              goto LABEL_80;
            case 2u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(a1, a2, v182);
              v14 = a1;
              v15 = v11;
              v16 = 2;
              goto LABEL_80;
            case 3u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
              v14 = a1;
              v15 = v11;
              v16 = 3;
              goto LABEL_80;
            case 4u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(a1, a2, v184);
              v14 = a1;
              v15 = v11;
              v16 = 4;
              goto LABEL_80;
            case 5u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(a1, a2, v185);
              v14 = a1;
              v15 = v11;
              v16 = 5;
              goto LABEL_80;
            case 6u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(a1, a2, v186);
              v14 = a1;
              v15 = v11;
              v16 = 6;
              goto LABEL_80;
            case 8u:
              v187 = *a2;
              *a1 = *a2;
              v188 = v187;
              v14 = a1;
              v15 = v11;
              v16 = 8;
              goto LABEL_80;
            case 9u:
              v189 = *a2;
              *a1 = *a2;
              v190 = v189;
              v14 = a1;
              v15 = v11;
              v16 = 9;
LABEL_80:
              swift_storeEnumTagMultiPayload(v14, v15, v16);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v191 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v192 = v191[5];
          v193 = (char *)a1 + v192;
          v194 = (char *)a2 + v192;
          if (*(void **)((char *)a2 + v192 + 8))
          {
            v385 = v191;
            *(_QWORD *)v193 = *(_QWORD *)v194;
            v195 = *((_QWORD *)v194 + 1);
            *((_QWORD *)v193 + 1) = v195;
            v196 = (void *)*((_QWORD *)v194 + 2);
            v197 = *((_QWORD *)v194 + 3);
            v198 = *((_QWORD *)v194 + 4);
            v381 = *((_QWORD *)v194 + 5);
            v199 = *((_QWORD *)v194 + 6);
            v398 = *((_QWORD *)v194 + 7);
            v391 = v194[64];
            swift_bridgeObjectRetain(v195);
            sub_10003E1F0(v196, v197, v198, v381, v199, v398, v391);
            *((_QWORD *)v193 + 2) = v196;
            *((_QWORD *)v193 + 3) = v197;
            *((_QWORD *)v193 + 4) = v198;
            *((_QWORD *)v193 + 5) = v381;
            *((_QWORD *)v193 + 6) = v199;
            *((_QWORD *)v193 + 7) = v398;
            v193[64] = v391;
            v193[65] = v194[65];
            v193[66] = v194[66];
            v193[67] = v194[67];
            v193[68] = v194[68];
            v200 = v194[120];
            if (v200 == 255)
            {
              v201 = *(_OWORD *)(v194 + 72);
              v202 = *(_OWORD *)(v194 + 88);
              v203 = *(_OWORD *)(v194 + 104);
              v193[120] = v194[120];
              *(_OWORD *)(v193 + 88) = v202;
              *(_OWORD *)(v193 + 104) = v203;
              *(_OWORD *)(v193 + 72) = v201;
            }
            else
            {
              v399 = v200 & 1;
              v210 = (void *)*((_QWORD *)v194 + 9);
              v392 = *((_QWORD *)v194 + 10);
              v211 = *((_QWORD *)v194 + 11);
              v212 = *((_QWORD *)v194 + 12);
              v213 = *((_QWORD *)v194 + 13);
              v382 = *((_QWORD *)v194 + 14);
              sub_10002B764(v210, v392, v211, v212, v213, v382, v200 & 1);
              *((_QWORD *)v193 + 9) = v210;
              *((_QWORD *)v193 + 10) = v392;
              *((_QWORD *)v193 + 11) = v211;
              *((_QWORD *)v193 + 12) = v212;
              *((_QWORD *)v193 + 13) = v213;
              *((_QWORD *)v193 + 14) = v382;
              v193[120] = v399;
            }
            v193[121] = v194[121];
            v191 = v385;
          }
          else
          {
            v204 = *(_OWORD *)v194;
            v205 = *((_OWORD *)v194 + 1);
            v206 = *((_OWORD *)v194 + 3);
            *((_OWORD *)v193 + 2) = *((_OWORD *)v194 + 2);
            *((_OWORD *)v193 + 3) = v206;
            *(_OWORD *)v193 = v204;
            *((_OWORD *)v193 + 1) = v205;
            v207 = *((_OWORD *)v194 + 4);
            v208 = *((_OWORD *)v194 + 5);
            v209 = *((_OWORD *)v194 + 6);
            *(_OWORD *)(v193 + 106) = *(_OWORD *)(v194 + 106);
            *((_OWORD *)v193 + 5) = v208;
            *((_OWORD *)v193 + 6) = v209;
            *((_OWORD *)v193 + 4) = v207;
          }
          *((_BYTE *)a1 + v191[6]) = *((_BYTE *)a2 + v191[6]);
          *((_BYTE *)a1 + v191[7]) = *((_BYTE *)a2 + v191[7]);
          *((_BYTE *)a1 + v191[8]) = *((_BYTE *)a2 + v191[8]);
          *((_BYTE *)a1 + v191[9]) = *((_BYTE *)a2 + v191[9]);
          *((_BYTE *)a1 + v191[10]) = *((_BYTE *)a2 + v191[10]);
          v214 = v191[11];
          v215 = *(void **)((char *)a2 + v214);
          *(void **)((char *)a1 + v214) = v215;
          v216 = v215;
          v59 = a1;
          v60 = v6;
          v61 = 0;
          goto LABEL_169;
        case 1u:
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v24))
          {
            case 1u:
              v25 = *a2;
              *a1 = *a2;
              v26 = v25;
              v27 = a1;
              v28 = v24;
              v29 = 1;
              goto LABEL_96;
            case 2u:
              v217 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(a1, a2, v217);
              v27 = a1;
              v28 = v24;
              v29 = 2;
              goto LABEL_96;
            case 3u:
              v218 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(a1, a2, v218);
              v27 = a1;
              v28 = v24;
              v29 = 3;
              goto LABEL_96;
            case 4u:
              v219 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(a1, a2, v219);
              v27 = a1;
              v28 = v24;
              v29 = 4;
              goto LABEL_96;
            case 5u:
              v220 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(a1, a2, v220);
              v27 = a1;
              v28 = v24;
              v29 = 5;
              goto LABEL_96;
            case 6u:
              v221 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(a1, a2, v221);
              v27 = a1;
              v28 = v24;
              v29 = 6;
              goto LABEL_96;
            case 8u:
              v222 = *a2;
              *a1 = *a2;
              v223 = v222;
              v27 = a1;
              v28 = v24;
              v29 = 8;
              goto LABEL_96;
            case 9u:
              v224 = *a2;
              *a1 = *a2;
              v225 = v224;
              v27 = a1;
              v28 = v24;
              v29 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v27, v28, v29);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              break;
          }
          v226 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v227 = v226[5];
          v228 = (char *)a1 + v227;
          v229 = (char *)a2 + v227;
          if (*(void **)((char *)a2 + v227 + 8))
          {
            v386 = v226;
            *(_QWORD *)v228 = *(_QWORD *)v229;
            v230 = *((_QWORD *)v229 + 1);
            *((_QWORD *)v228 + 1) = v230;
            v231 = (void *)*((_QWORD *)v229 + 2);
            v232 = *((_QWORD *)v229 + 3);
            v233 = *((_QWORD *)v229 + 4);
            v383 = *((_QWORD *)v229 + 5);
            v234 = *((_QWORD *)v229 + 6);
            v400 = *((_QWORD *)v229 + 7);
            v393 = v229[64];
            swift_bridgeObjectRetain(v230);
            sub_10003E1F0(v231, v232, v233, v383, v234, v400, v393);
            *((_QWORD *)v228 + 2) = v231;
            *((_QWORD *)v228 + 3) = v232;
            *((_QWORD *)v228 + 4) = v233;
            *((_QWORD *)v228 + 5) = v383;
            *((_QWORD *)v228 + 6) = v234;
            *((_QWORD *)v228 + 7) = v400;
            v228[64] = v393;
            v228[65] = v229[65];
            v228[66] = v229[66];
            v228[67] = v229[67];
            v228[68] = v229[68];
            v235 = v229[120];
            if (v235 == 255)
            {
              v236 = *(_OWORD *)(v229 + 72);
              v237 = *(_OWORD *)(v229 + 88);
              v238 = *(_OWORD *)(v229 + 104);
              v228[120] = v229[120];
              *(_OWORD *)(v228 + 88) = v237;
              *(_OWORD *)(v228 + 104) = v238;
              *(_OWORD *)(v228 + 72) = v236;
            }
            else
            {
              v401 = v235 & 1;
              v245 = (void *)*((_QWORD *)v229 + 9);
              v394 = *((_QWORD *)v229 + 10);
              v246 = *((_QWORD *)v229 + 11);
              v247 = *((_QWORD *)v229 + 12);
              v248 = *((_QWORD *)v229 + 13);
              v384 = *((_QWORD *)v229 + 14);
              sub_10002B764(v245, v394, v246, v247, v248, v384, v235 & 1);
              *((_QWORD *)v228 + 9) = v245;
              *((_QWORD *)v228 + 10) = v394;
              *((_QWORD *)v228 + 11) = v246;
              *((_QWORD *)v228 + 12) = v247;
              *((_QWORD *)v228 + 13) = v248;
              *((_QWORD *)v228 + 14) = v384;
              v228[120] = v401;
            }
            v228[121] = v229[121];
            v226 = v386;
          }
          else
          {
            v239 = *(_OWORD *)v229;
            v240 = *((_OWORD *)v229 + 1);
            v241 = *((_OWORD *)v229 + 3);
            *((_OWORD *)v228 + 2) = *((_OWORD *)v229 + 2);
            *((_OWORD *)v228 + 3) = v241;
            *(_OWORD *)v228 = v239;
            *((_OWORD *)v228 + 1) = v240;
            v242 = *((_OWORD *)v229 + 4);
            v243 = *((_OWORD *)v229 + 5);
            v244 = *((_OWORD *)v229 + 6);
            *(_OWORD *)(v228 + 106) = *(_OWORD *)(v229 + 106);
            *((_OWORD *)v228 + 5) = v243;
            *((_OWORD *)v228 + 6) = v244;
            *((_OWORD *)v228 + 4) = v242;
          }
          *((_BYTE *)a1 + v226[6]) = *((_BYTE *)a2 + v226[6]);
          *((_BYTE *)a1 + v226[7]) = *((_BYTE *)a2 + v226[7]);
          *((_BYTE *)a1 + v226[8]) = *((_BYTE *)a2 + v226[8]);
          *((_BYTE *)a1 + v226[9]) = *((_BYTE *)a2 + v226[9]);
          *((_BYTE *)a1 + v226[10]) = *((_BYTE *)a2 + v226[10]);
          v249 = v226[11];
          v250 = *(void **)((char *)a2 + v249);
          *(void **)((char *)a1 + v249) = v250;
          v251 = v250;
          v59 = a1;
          v60 = v6;
          v61 = 1;
          goto LABEL_169;
        case 2u:
          v30 = *a2;
          *a1 = *a2;
          v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v32 = (void **)((char *)a1 + v31);
          v33 = (void **)((char *)a2 + v31);
          v34 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v35 + 48);
          v37 = v30;
          if (v36(v33, 1, v34))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v33, v34))
            {
              case 1u:
                v116 = *v33;
                *v32 = *v33;
                v117 = v116;
                v118 = v32;
                v119 = v34;
                v120 = 1;
                goto LABEL_144;
              case 2u:
                v326 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v326 - 8) + 16))(v32, v33, v326);
                v118 = v32;
                v119 = v34;
                v120 = 2;
                goto LABEL_144;
              case 3u:
                v327 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v32, v33, v327);
                v118 = v32;
                v119 = v34;
                v120 = 3;
                goto LABEL_144;
              case 4u:
                v328 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v328 - 8) + 16))(v32, v33, v328);
                v118 = v32;
                v119 = v34;
                v120 = 4;
                goto LABEL_144;
              case 5u:
                v329 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v32, v33, v329);
                v118 = v32;
                v119 = v34;
                v120 = 5;
                goto LABEL_144;
              case 6u:
                v330 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v32, v33, v330);
                v118 = v32;
                v119 = v34;
                v120 = 6;
                goto LABEL_144;
              case 8u:
                v331 = *v33;
                *v32 = *v33;
                v332 = v331;
                v118 = v32;
                v119 = v34;
                v120 = 8;
                goto LABEL_144;
              case 9u:
                v333 = *v33;
                *v32 = *v33;
                v334 = v333;
                v118 = v32;
                v119 = v34;
                v120 = 9;
LABEL_144:
                swift_storeEnumTagMultiPayload(v118, v119, v120);
                break;
              default:
                memcpy(v32, v33, *(_QWORD *)(v35 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          v59 = a1;
          v60 = v6;
          v61 = 2;
          goto LABEL_169;
        case 3u:
          v39 = *a2;
          *a1 = *a2;
          v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v41 = (void **)((char *)a1 + v40);
          v42 = (void **)((char *)a2 + v40);
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v44 = *(_QWORD *)(v43 - 8);
          v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
          v46 = v39;
          if (v45(v42, 1, v43))
          {
            v47 = sub_10002A750(&qword_100644980);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v42, v43))
            {
              case 1u:
                v121 = *v42;
                *v41 = *v42;
                v122 = v121;
                v123 = v41;
                v124 = v43;
                v125 = 1;
                goto LABEL_155;
              case 2u:
                v335 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v335 - 8) + 16))(v41, v42, v335);
                v123 = v41;
                v124 = v43;
                v125 = 2;
                goto LABEL_155;
              case 3u:
                v336 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v336 - 8) + 16))(v41, v42, v336);
                v123 = v41;
                v124 = v43;
                v125 = 3;
                goto LABEL_155;
              case 4u:
                v337 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v41, v42, v337);
                v123 = v41;
                v124 = v43;
                v125 = 4;
                goto LABEL_155;
              case 5u:
                v338 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v41, v42, v338);
                v123 = v41;
                v124 = v43;
                v125 = 5;
                goto LABEL_155;
              case 6u:
                v339 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v41, v42, v339);
                v123 = v41;
                v124 = v43;
                v125 = 6;
                goto LABEL_155;
              case 8u:
                v340 = *v42;
                *v41 = *v42;
                v341 = v340;
                v123 = v41;
                v124 = v43;
                v125 = 8;
                goto LABEL_155;
              case 9u:
                v342 = *v42;
                *v41 = *v42;
                v343 = v342;
                v123 = v41;
                v124 = v43;
                v125 = 9;
LABEL_155:
                swift_storeEnumTagMultiPayload(v123, v124, v125);
                break;
              default:
                memcpy(v41, v42, *(_QWORD *)(v44 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          }
          v59 = a1;
          v60 = v6;
          v61 = 3;
          goto LABEL_169;
        case 4u:
          v48 = *a2;
          *a1 = *a2;
          v49 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v50 = (void **)((char *)a1 + v49);
          v51 = (void **)((char *)a2 + v49);
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v53 = *(_QWORD *)(v52 - 8);
          v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
          v55 = v48;
          if (v54(v51, 1, v52))
          {
            v56 = sub_10002A750(&qword_100644980);
            memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v51, v52))
            {
              case 1u:
                v126 = *v51;
                *v50 = *v51;
                v127 = v126;
                v128 = v50;
                v129 = v52;
                v130 = 1;
                goto LABEL_166;
              case 2u:
                v344 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v50, v51, v344);
                v128 = v50;
                v129 = v52;
                v130 = 2;
                goto LABEL_166;
              case 3u:
                v345 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v345 - 8) + 16))(v50, v51, v345);
                v128 = v50;
                v129 = v52;
                v130 = 3;
                goto LABEL_166;
              case 4u:
                v346 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v346 - 8) + 16))(v50, v51, v346);
                v128 = v50;
                v129 = v52;
                v130 = 4;
                goto LABEL_166;
              case 5u:
                v347 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v347 - 8) + 16))(v50, v51, v347);
                v128 = v50;
                v129 = v52;
                v130 = 5;
                goto LABEL_166;
              case 6u:
                v348 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v50, v51, v348);
                v128 = v50;
                v129 = v52;
                v130 = 6;
                goto LABEL_166;
              case 8u:
                v349 = *v51;
                *v50 = *v51;
                v350 = v349;
                v128 = v50;
                v129 = v52;
                v130 = 8;
                goto LABEL_166;
              case 9u:
                v351 = *v51;
                *v50 = *v51;
                v352 = v351;
                v128 = v50;
                v129 = v52;
                v130 = 9;
LABEL_166:
                swift_storeEnumTagMultiPayload(v128, v129, v130);
                break;
              default:
                memcpy(v50, v51, *(_QWORD *)(v53 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
          }
          v59 = a1;
          v60 = v6;
          v61 = 4;
          goto LABEL_169;
        case 5u:
          *a1 = *a2;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
          *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
          v57 = a2[2];
          a1[2] = v57;
          v58 = v57;
          v59 = a1;
          v60 = v6;
          v61 = 5;
          goto LABEL_169;
        case 6u:
          v69 = *a2;
          *a1 = *a2;
          v70 = v69;
          v59 = a1;
          v60 = v6;
          v61 = 6;
          goto LABEL_169;
        case 7u:
          v62 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
          {
            v64 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            v131 = *a2;
            *a1 = *a2;
            v132 = *(int *)(v62 + 20);
            v133 = (char *)a1 + v132;
            v397 = (char *)a2 + v132;
            v134 = type metadata accessor for REMHashtagLabelSpecifier(0);
            v135 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v134 - 8) + 16);
            v136 = swift_bridgeObjectRetain(v131);
            v135(v133, v397, v134, v136);
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
          }
          v137 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v138 = (void **)((char *)a1 + v137);
          v139 = (void **)((char *)a2 + v137);
          if (v139[1])
          {
            *v138 = *v139;
            v140 = v139[1];
            v138[1] = v140;
            v141 = (void *)v139[2];
            v138[2] = v141;
            swift_bridgeObjectRetain(v140);
            v142 = v141;
          }
          else
          {
            v143 = *(_OWORD *)v139;
            v138[2] = v139[2];
            *(_OWORD *)v138 = v143;
          }
          v59 = a1;
          v60 = v6;
          v61 = 7;
          goto LABEL_169;
        case 8u:
          v71 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v72 = *(_QWORD *)(v71 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v72 + 48))(a2, 1, v71))
          {
            v73 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v149 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
            *((_BYTE *)a1 + *(int *)(v71 + 20)) = *((_BYTE *)a2 + *(int *)(v71 + 20));
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v72 + 56))(a1, 0, 1, v71);
          }
          v150 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(void **)((char *)a1 + *(int *)(v150 + 20)) = *(void **)((char *)a2 + *(int *)(v150 + 20));
          v59 = a1;
          v60 = v6;
          v61 = 8;
          goto LABEL_169;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v65 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v66 = (char *)a1 + v65;
          v67 = (char *)a2 + v65;
          v68 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
          v59 = a1;
          v60 = v6;
          v61 = 9;
LABEL_169:
          swift_storeEnumTagMultiPayload(v59, v60, v61);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10004941C((uint64_t)a1);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v17);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v18))
        {
          case 1u:
            v19 = *a2;
            *a1 = *a2;
            v20 = v19;
            v21 = a1;
            v22 = v18;
            v23 = 1;
            goto LABEL_112;
          case 2u:
            v252 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(a1, a2, v252);
            v21 = a1;
            v22 = v18;
            v23 = 2;
            goto LABEL_112;
          case 3u:
            v253 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v253 - 8) + 16))(a1, a2, v253);
            v21 = a1;
            v22 = v18;
            v23 = 3;
            goto LABEL_112;
          case 4u:
            v254 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(a1, a2, v254);
            v21 = a1;
            v22 = v18;
            v23 = 4;
            goto LABEL_112;
          case 5u:
            v255 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v255 - 8) + 16))(a1, a2, v255);
            v21 = a1;
            v22 = v18;
            v23 = 5;
            goto LABEL_112;
          case 6u:
            v256 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(a1, a2, v256);
            v21 = a1;
            v22 = v18;
            v23 = 6;
            goto LABEL_112;
          case 8u:
            v257 = *a2;
            *a1 = *a2;
            v258 = v257;
            v21 = a1;
            v22 = v18;
            v23 = 8;
            goto LABEL_112;
          case 9u:
            v259 = *a2;
            *a1 = *a2;
            v260 = v259;
            v21 = a1;
            v22 = v18;
            v23 = 9;
LABEL_112:
            swift_storeEnumTagMultiPayload(v21, v22, v23);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        v261 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v262 = v261[5];
        v263 = (char *)a1 + v262;
        v264 = (char *)a2 + v262;
        if (*(void **)((char *)a2 + v262 + 8))
        {
          v395 = v261;
          *(_QWORD *)v263 = *(_QWORD *)v264;
          v265 = *((_QWORD *)v264 + 1);
          *((_QWORD *)v263 + 1) = v265;
          v266 = (void *)*((_QWORD *)v264 + 2);
          v267 = *((_QWORD *)v264 + 3);
          v268 = *((_QWORD *)v264 + 4);
          v269 = *((_QWORD *)v264 + 5);
          v270 = *((_QWORD *)v264 + 7);
          v387 = *((_QWORD *)v264 + 6);
          v402 = v264[64];
          swift_bridgeObjectRetain(v265);
          sub_10003E1F0(v266, v267, v268, v269, v387, v270, v402);
          *((_QWORD *)v263 + 2) = v266;
          *((_QWORD *)v263 + 3) = v267;
          *((_QWORD *)v263 + 4) = v268;
          *((_QWORD *)v263 + 5) = v269;
          *((_QWORD *)v263 + 6) = v387;
          *((_QWORD *)v263 + 7) = v270;
          v263[64] = v402;
          v263[65] = v264[65];
          v263[66] = v264[66];
          v263[67] = v264[67];
          v263[68] = v264[68];
          v271 = v264[120];
          if (v271 == 255)
          {
            v272 = *(_OWORD *)(v264 + 72);
            v273 = *(_OWORD *)(v264 + 88);
            v274 = *(_OWORD *)(v264 + 104);
            v263[120] = v264[120];
            *(_OWORD *)(v263 + 88) = v273;
            *(_OWORD *)(v263 + 104) = v274;
            *(_OWORD *)(v263 + 72) = v272;
          }
          else
          {
            v403 = v271 & 1;
            v282 = (void *)*((_QWORD *)v264 + 9);
            v281 = *((_QWORD *)v264 + 10);
            v283 = *((_QWORD *)v264 + 11);
            v284 = *((_QWORD *)v264 + 12);
            v285 = *((_QWORD *)v264 + 13);
            v388 = *((_QWORD *)v264 + 14);
            sub_10002B764(v282, v281, v283, v284, v285, v388, v271 & 1);
            *((_QWORD *)v263 + 9) = v282;
            *((_QWORD *)v263 + 10) = v281;
            *((_QWORD *)v263 + 11) = v283;
            *((_QWORD *)v263 + 12) = v284;
            *((_QWORD *)v263 + 13) = v285;
            *((_QWORD *)v263 + 14) = v388;
            v263[120] = v403;
          }
          v263[121] = v264[121];
          v261 = v395;
        }
        else
        {
          v275 = *(_OWORD *)v264;
          v276 = *((_OWORD *)v264 + 1);
          v277 = *((_OWORD *)v264 + 3);
          *((_OWORD *)v263 + 2) = *((_OWORD *)v264 + 2);
          *((_OWORD *)v263 + 3) = v277;
          *(_OWORD *)v263 = v275;
          *((_OWORD *)v263 + 1) = v276;
          v278 = *((_OWORD *)v264 + 4);
          v279 = *((_OWORD *)v264 + 5);
          v280 = *((_OWORD *)v264 + 6);
          *(_OWORD *)(v263 + 106) = *(_OWORD *)(v264 + 106);
          *((_OWORD *)v263 + 5) = v279;
          *((_OWORD *)v263 + 6) = v280;
          *((_OWORD *)v263 + 4) = v278;
        }
        *((_BYTE *)a1 + v261[6]) = *((_BYTE *)a2 + v261[6]);
        *((_BYTE *)a1 + v261[7]) = *((_BYTE *)a2 + v261[7]);
        *((_BYTE *)a1 + v261[8]) = *((_BYTE *)a2 + v261[8]);
        *((_BYTE *)a1 + v261[9]) = *((_BYTE *)a2 + v261[9]);
        *((_BYTE *)a1 + v261[10]) = *((_BYTE *)a2 + v261[10]);
        v286 = v261[11];
        v287 = *(void **)((char *)a2 + v286);
        *(void **)((char *)a1 + v286) = v287;
        v288 = v287;
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v74 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v74))
        {
          case 1u:
            v75 = *a2;
            *a1 = *a2;
            v76 = v75;
            v77 = a1;
            v78 = v74;
            v79 = 1;
            goto LABEL_128;
          case 2u:
            v289 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
            v77 = a1;
            v78 = v74;
            v79 = 2;
            goto LABEL_128;
          case 3u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
            v77 = a1;
            v78 = v74;
            v79 = 3;
            goto LABEL_128;
          case 4u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(a1, a2, v291);
            v77 = a1;
            v78 = v74;
            v79 = 4;
            goto LABEL_128;
          case 5u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(a1, a2, v292);
            v77 = a1;
            v78 = v74;
            v79 = 5;
            goto LABEL_128;
          case 6u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(a1, a2, v293);
            v77 = a1;
            v78 = v74;
            v79 = 6;
            goto LABEL_128;
          case 8u:
            v294 = *a2;
            *a1 = *a2;
            v295 = v294;
            v77 = a1;
            v78 = v74;
            v79 = 8;
            goto LABEL_128;
          case 9u:
            v296 = *a2;
            *a1 = *a2;
            v297 = v296;
            v77 = a1;
            v78 = v74;
            v79 = 9;
LABEL_128:
            swift_storeEnumTagMultiPayload(v77, v78, v79);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
            break;
        }
        v298 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v299 = v298[5];
        v300 = (char *)a1 + v299;
        v301 = (char *)a2 + v299;
        if (*(void **)((char *)a2 + v299 + 8))
        {
          v396 = v298;
          *(_QWORD *)v300 = *(_QWORD *)v301;
          v302 = *((_QWORD *)v301 + 1);
          *((_QWORD *)v300 + 1) = v302;
          v303 = (void *)*((_QWORD *)v301 + 2);
          v304 = *((_QWORD *)v301 + 3);
          v305 = *((_QWORD *)v301 + 4);
          v306 = *((_QWORD *)v301 + 5);
          v307 = *((_QWORD *)v301 + 7);
          v389 = *((_QWORD *)v301 + 6);
          v404 = v301[64];
          swift_bridgeObjectRetain(v302);
          sub_10003E1F0(v303, v304, v305, v306, v389, v307, v404);
          *((_QWORD *)v300 + 2) = v303;
          *((_QWORD *)v300 + 3) = v304;
          *((_QWORD *)v300 + 4) = v305;
          *((_QWORD *)v300 + 5) = v306;
          *((_QWORD *)v300 + 6) = v389;
          *((_QWORD *)v300 + 7) = v307;
          v300[64] = v404;
          v300[65] = v301[65];
          v300[66] = v301[66];
          v300[67] = v301[67];
          v300[68] = v301[68];
          v308 = v301[120];
          if (v308 == 255)
          {
            v309 = *(_OWORD *)(v301 + 72);
            v310 = *(_OWORD *)(v301 + 88);
            v311 = *(_OWORD *)(v301 + 104);
            v300[120] = v301[120];
            *(_OWORD *)(v300 + 88) = v310;
            *(_OWORD *)(v300 + 104) = v311;
            *(_OWORD *)(v300 + 72) = v309;
          }
          else
          {
            v405 = v308 & 1;
            v319 = (void *)*((_QWORD *)v301 + 9);
            v318 = *((_QWORD *)v301 + 10);
            v320 = *((_QWORD *)v301 + 11);
            v321 = *((_QWORD *)v301 + 12);
            v322 = *((_QWORD *)v301 + 13);
            v390 = *((_QWORD *)v301 + 14);
            sub_10002B764(v319, v318, v320, v321, v322, v390, v308 & 1);
            *((_QWORD *)v300 + 9) = v319;
            *((_QWORD *)v300 + 10) = v318;
            *((_QWORD *)v300 + 11) = v320;
            *((_QWORD *)v300 + 12) = v321;
            *((_QWORD *)v300 + 13) = v322;
            *((_QWORD *)v300 + 14) = v390;
            v300[120] = v405;
          }
          v300[121] = v301[121];
          v298 = v396;
        }
        else
        {
          v312 = *(_OWORD *)v301;
          v313 = *((_OWORD *)v301 + 1);
          v314 = *((_OWORD *)v301 + 3);
          *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
          *((_OWORD *)v300 + 3) = v314;
          *(_OWORD *)v300 = v312;
          *((_OWORD *)v300 + 1) = v313;
          v315 = *((_OWORD *)v301 + 4);
          v316 = *((_OWORD *)v301 + 5);
          v317 = *((_OWORD *)v301 + 6);
          *(_OWORD *)(v300 + 106) = *(_OWORD *)(v301 + 106);
          *((_OWORD *)v300 + 5) = v316;
          *((_OWORD *)v300 + 6) = v317;
          *((_OWORD *)v300 + 4) = v315;
        }
        *((_BYTE *)a1 + v298[6]) = *((_BYTE *)a2 + v298[6]);
        *((_BYTE *)a1 + v298[7]) = *((_BYTE *)a2 + v298[7]);
        *((_BYTE *)a1 + v298[8]) = *((_BYTE *)a2 + v298[8]);
        *((_BYTE *)a1 + v298[9]) = *((_BYTE *)a2 + v298[9]);
        *((_BYTE *)a1 + v298[10]) = *((_BYTE *)a2 + v298[10]);
        v323 = v298[11];
        v324 = *(void **)((char *)a2 + v323);
        *(void **)((char *)a1 + v323) = v324;
        v325 = v324;
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        v80 = *a2;
        *a1 = *a2;
        v81 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v82 = (void **)((char *)a1 + v81);
        v83 = (void **)((char *)a2 + v81);
        v84 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v85 + 48);
        v87 = v80;
        if (v86(v83, 1, v84))
        {
          v88 = sub_10002A750(&qword_100644980);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v83, v84))
          {
            case 1u:
              v151 = *v83;
              *v82 = *v83;
              v152 = v151;
              v153 = v82;
              v154 = v84;
              v155 = 1;
              goto LABEL_180;
            case 2u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v82, v83, v354);
              v153 = v82;
              v154 = v84;
              v155 = 2;
              goto LABEL_180;
            case 3u:
              v355 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v82, v83, v355);
              v153 = v82;
              v154 = v84;
              v155 = 3;
              goto LABEL_180;
            case 4u:
              v356 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v82, v83, v356);
              v153 = v82;
              v154 = v84;
              v155 = 4;
              goto LABEL_180;
            case 5u:
              v357 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v82, v83, v357);
              v153 = v82;
              v154 = v84;
              v155 = 5;
              goto LABEL_180;
            case 6u:
              v358 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v82, v83, v358);
              v153 = v82;
              v154 = v84;
              v155 = 6;
              goto LABEL_180;
            case 8u:
              v359 = *v83;
              *v82 = *v83;
              v360 = v359;
              v153 = v82;
              v154 = v84;
              v155 = 8;
              goto LABEL_180;
            case 9u:
              v361 = *v83;
              *v82 = *v83;
              v362 = v361;
              v153 = v82;
              v154 = v84;
              v155 = 9;
LABEL_180:
              swift_storeEnumTagMultiPayload(v153, v154, v155);
              break;
            default:
              memcpy(v82, v83, *(_QWORD *)(v85 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        v89 = *a2;
        *a1 = *a2;
        v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v91 = (void **)((char *)a1 + v90);
        v92 = (void **)((char *)a2 + v90);
        v93 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v94 = *(_QWORD *)(v93 - 8);
        v95 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v94 + 48);
        v96 = v89;
        if (v95(v92, 1, v93))
        {
          v97 = sub_10002A750(&qword_100644980);
          memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v92, v93))
          {
            case 1u:
              v156 = *v92;
              *v91 = *v92;
              v157 = v156;
              v158 = v91;
              v159 = v93;
              v160 = 1;
              goto LABEL_191;
            case 2u:
              v363 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v363 - 8) + 16))(v91, v92, v363);
              v158 = v91;
              v159 = v93;
              v160 = 2;
              goto LABEL_191;
            case 3u:
              v364 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v91, v92, v364);
              v158 = v91;
              v159 = v93;
              v160 = 3;
              goto LABEL_191;
            case 4u:
              v365 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v91, v92, v365);
              v158 = v91;
              v159 = v93;
              v160 = 4;
              goto LABEL_191;
            case 5u:
              v366 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v91, v92, v366);
              v158 = v91;
              v159 = v93;
              v160 = 5;
              goto LABEL_191;
            case 6u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v91, v92, v367);
              v158 = v91;
              v159 = v93;
              v160 = 6;
              goto LABEL_191;
            case 8u:
              v368 = *v92;
              *v91 = *v92;
              v369 = v368;
              v158 = v91;
              v159 = v93;
              v160 = 8;
              goto LABEL_191;
            case 9u:
              v370 = *v92;
              *v91 = *v92;
              v371 = v370;
              v158 = v91;
              v159 = v93;
              v160 = 9;
LABEL_191:
              swift_storeEnumTagMultiPayload(v158, v159, v160);
              break;
            default:
              memcpy(v91, v92, *(_QWORD *)(v94 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        v98 = *a2;
        *a1 = *a2;
        v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v100 = (void **)((char *)a1 + v99);
        v101 = (void **)((char *)a2 + v99);
        v102 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v103 = *(_QWORD *)(v102 - 8);
        v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v103 + 48);
        v105 = v98;
        if (v104(v101, 1, v102))
        {
          v106 = sub_10002A750(&qword_100644980);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v101, v102))
          {
            case 1u:
              v161 = *v101;
              *v100 = *v101;
              v162 = v161;
              v163 = v100;
              v164 = v102;
              v165 = 1;
              goto LABEL_202;
            case 2u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v100, v101, v372);
              v163 = v100;
              v164 = v102;
              v165 = 2;
              goto LABEL_202;
            case 3u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v100, v101, v373);
              v163 = v100;
              v164 = v102;
              v165 = 3;
              goto LABEL_202;
            case 4u:
              v374 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v100, v101, v374);
              v163 = v100;
              v164 = v102;
              v165 = 4;
              goto LABEL_202;
            case 5u:
              v375 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v100, v101, v375);
              v163 = v100;
              v164 = v102;
              v165 = 5;
              goto LABEL_202;
            case 6u:
              v376 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v100, v101, v376);
              v163 = v100;
              v164 = v102;
              v165 = 6;
              goto LABEL_202;
            case 8u:
              v377 = *v101;
              *v100 = *v101;
              v378 = v377;
              v163 = v100;
              v164 = v102;
              v165 = 8;
              goto LABEL_202;
            case 9u:
              v379 = *v101;
              *v100 = *v101;
              v380 = v379;
              v163 = v100;
              v164 = v102;
              v165 = 9;
LABEL_202:
              swift_storeEnumTagMultiPayload(v163, v164, v165);
              break;
            default:
              memcpy(v100, v101, *(_QWORD *)(v103 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        v107 = a2[2];
        a1[2] = v107;
        v108 = v107;
        swift_storeEnumTagMultiPayload(a1, v6, 5);
        break;
      case 6u:
        v144 = *a2;
        *a1 = *a2;
        v145 = v144;
        swift_storeEnumTagMultiPayload(a1, v6, 6);
        break;
      case 7u:
        v109 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
        {
          v111 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          v166 = *a2;
          *a1 = *a2;
          v167 = *(int *)(v109 + 20);
          v168 = (char *)a1 + v167;
          v169 = (char *)a2 + v167;
          v170 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v171 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v170 - 8) + 16);
          v172 = swift_bridgeObjectRetain(v166);
          v171(v168, v169, v170, v172);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
        }
        v173 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v174 = (void **)((char *)a1 + v173);
        v175 = (void **)((char *)a2 + v173);
        if (v175[1])
        {
          *v174 = *v175;
          v176 = v175[1];
          v174[1] = v176;
          v177 = (void *)v175[2];
          v174[2] = v177;
          swift_bridgeObjectRetain(v176);
          v178 = v177;
        }
        else
        {
          v179 = *(_OWORD *)v175;
          v174[2] = v175[2];
          *(_OWORD *)v174 = v179;
        }
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v146 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v147 = *(_QWORD *)(v146 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v147 + 48))(a2, 1, v146))
        {
          v148 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          v180 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(a1, a2, v180);
          *((_BYTE *)a1 + *(int *)(v146 + 20)) = *((_BYTE *)a2 + *(int *)(v146 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v147 + 56))(a1, 0, 1, v146);
        }
        v181 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v181 + 20)) = *(void **)((char *)a2 + *(int *)(v181 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v112 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v17 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
  return a1;
}

_QWORD *sub_10032723C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  _OWORD *v85;
  _OWORD *v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v8))
        {
          case 2u:
            v9 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
            v10 = a1;
            v11 = v8;
            v12 = 2;
            goto LABEL_35;
          case 3u:
            v67 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
            v10 = a1;
            v11 = v8;
            v12 = 3;
            goto LABEL_35;
          case 4u:
            v68 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(a1, a2, v68);
            v10 = a1;
            v11 = v8;
            v12 = 4;
            goto LABEL_35;
          case 5u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v10 = a1;
            v11 = v8;
            v12 = 5;
            goto LABEL_35;
          case 6u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v10 = a1;
            v11 = v8;
            v12 = 6;
LABEL_35:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v71 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v72 = v71[5];
        v73 = (_OWORD *)((char *)a1 + v72);
        v74 = (_OWORD *)((char *)a2 + v72);
        v75 = v74[3];
        v73[2] = v74[2];
        v73[3] = v75;
        v76 = v74[1];
        *v73 = *v74;
        v73[1] = v76;
        *(_OWORD *)((char *)v73 + 106) = *(_OWORD *)((char *)v74 + 106);
        v77 = v74[6];
        v78 = v74[4];
        v73[5] = v74[5];
        v73[6] = v77;
        v73[4] = v78;
        *((_BYTE *)a1 + v71[6]) = *((_BYTE *)a2 + v71[6]);
        *((_BYTE *)a1 + v71[7]) = *((_BYTE *)a2 + v71[7]);
        *((_BYTE *)a1 + v71[8]) = *((_BYTE *)a2 + v71[8]);
        *((_BYTE *)a1 + v71[9]) = *((_BYTE *)a2 + v71[9]);
        *((_BYTE *)a1 + v71[10]) = *((_BYTE *)a2 + v71[10]);
        *(_QWORD *)((char *)a1 + v71[11]) = *(_QWORD *)((char *)a2 + v71[11]);
        v46 = a1;
        v47 = v6;
        v48 = 0;
        goto LABEL_67;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 2u:
            v14 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
            v15 = a1;
            v16 = v13;
            v17 = 2;
            goto LABEL_42;
          case 3u:
            v79 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(a1, a2, v79);
            v15 = a1;
            v16 = v13;
            v17 = 3;
            goto LABEL_42;
          case 4u:
            v80 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
            v15 = a1;
            v16 = v13;
            v17 = 4;
            goto LABEL_42;
          case 5u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v15 = a1;
            v16 = v13;
            v17 = 5;
            goto LABEL_42;
          case 6u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v15 = a1;
            v16 = v13;
            v17 = 6;
LABEL_42:
            swift_storeEnumTagMultiPayload(v15, v16, v17);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v83 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v84 = v83[5];
        v85 = (_OWORD *)((char *)a1 + v84);
        v86 = (_OWORD *)((char *)a2 + v84);
        v87 = v86[3];
        v85[2] = v86[2];
        v85[3] = v87;
        v88 = v86[1];
        *v85 = *v86;
        v85[1] = v88;
        *(_OWORD *)((char *)v85 + 106) = *(_OWORD *)((char *)v86 + 106);
        v89 = v86[6];
        v90 = v86[4];
        v85[5] = v86[5];
        v85[6] = v89;
        v85[4] = v90;
        *((_BYTE *)a1 + v83[6]) = *((_BYTE *)a2 + v83[6]);
        *((_BYTE *)a1 + v83[7]) = *((_BYTE *)a2 + v83[7]);
        *((_BYTE *)a1 + v83[8]) = *((_BYTE *)a2 + v83[8]);
        *((_BYTE *)a1 + v83[9]) = *((_BYTE *)a2 + v83[9]);
        *((_BYTE *)a1 + v83[10]) = *((_BYTE *)a2 + v83[10]);
        *(_QWORD *)((char *)a1 + v83[11]) = *(_QWORD *)((char *)a2 + v83[11]);
        v46 = a1;
        v47 = v6;
        v48 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          v23 = sub_10002A750(&qword_100644980);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v20, v21))
          {
            case 2u:
              v49 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v19, v20, v49);
              v50 = v19;
              v51 = v21;
              v52 = 2;
              goto LABEL_49;
            case 3u:
              v91 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v19, v20, v91);
              v50 = v19;
              v51 = v21;
              v52 = 3;
              goto LABEL_49;
            case 4u:
              v92 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v19, v20, v92);
              v50 = v19;
              v51 = v21;
              v52 = 4;
              goto LABEL_49;
            case 5u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v19, v20, v93);
              v50 = v19;
              v51 = v21;
              v52 = 5;
              goto LABEL_49;
            case 6u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v19, v20, v94);
              v50 = v19;
              v51 = v21;
              v52 = 6;
LABEL_49:
              swift_storeEnumTagMultiPayload(v50, v51, v52);
              break;
            default:
              memcpy(v19, v20, *(_QWORD *)(v22 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        v46 = a1;
        v47 = v6;
        v48 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_10002A750(&qword_100644980);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v26, v27))
          {
            case 2u:
              v53 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v25, v26, v53);
              v54 = v25;
              v55 = v27;
              v56 = 2;
              goto LABEL_57;
            case 3u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v25, v26, v95);
              v54 = v25;
              v55 = v27;
              v56 = 3;
              goto LABEL_57;
            case 4u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v25, v26, v96);
              v54 = v25;
              v55 = v27;
              v56 = 4;
              goto LABEL_57;
            case 5u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v25, v26, v97);
              v54 = v25;
              v55 = v27;
              v56 = 5;
              goto LABEL_57;
            case 6u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v25, v26, v98);
              v54 = v25;
              v55 = v27;
              v56 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v54, v55, v56);
              break;
            default:
              memcpy(v25, v26, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        v46 = a1;
        v47 = v6;
        v48 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          v35 = sub_10002A750(&qword_100644980);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v32, v33))
          {
            case 2u:
              v57 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v31, v32, v57);
              swift_storeEnumTagMultiPayload(v31, v33, 2);
              break;
            case 3u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v31, v32, v99);
              swift_storeEnumTagMultiPayload(v31, v33, 3);
              break;
            case 4u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v31, v32, v100);
              swift_storeEnumTagMultiPayload(v31, v33, 4);
              break;
            case 5u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v31, v32, v101);
              swift_storeEnumTagMultiPayload(v31, v33, 5);
              break;
            case 6u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v31, v32, v102);
              swift_storeEnumTagMultiPayload(v31, v33, 6);
              break;
            default:
              memcpy(v31, v32, *(_QWORD *)(v34 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
        v46 = a1;
        v47 = v6;
        v48 = 4;
        goto LABEL_67;
      case 7u:
        v36 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(a2, 1, v36))
        {
          v38 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v58 = *(int *)(v36 + 20);
          v59 = (char *)a1 + v58;
          v60 = (char *)a2 + v58;
          v61 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        }
        v62 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_QWORD *)v63 + 2) = *((_QWORD *)v64 + 2);
        v46 = a1;
        v47 = v6;
        v48 = 7;
        goto LABEL_67;
      case 8u:
        v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v65 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(a1, a2, v65);
          *((_BYTE *)a1 + *(int *)(v39 + 20)) = *((_BYTE *)a2 + *(int *)(v39 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        v66 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v66 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v66 + 20));
        v46 = a1;
        v47 = v6;
        v48 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v42 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        v46 = a1;
        v47 = v6;
        v48 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v46, v47, v48);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_100327DEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  _OWORD *v118;
  _OWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int *v161;
  uint64_t v162;
  _OWORD *v163;
  _OWORD *v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  _OWORD *v175;
  _OWORD *v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload(a2, v6))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v11))
          {
            case 2u:
              v12 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
              v13 = a1;
              v14 = v11;
              v15 = 2;
              goto LABEL_57;
            case 3u:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(a1, a2, v112);
              v13 = a1;
              v14 = v11;
              v15 = 3;
              goto LABEL_57;
            case 4u:
              v113 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
              v13 = a1;
              v14 = v11;
              v15 = 4;
              goto LABEL_57;
            case 5u:
              v114 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(a1, a2, v114);
              v13 = a1;
              v14 = v11;
              v15 = 5;
              goto LABEL_57;
            case 6u:
              v115 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(a1, a2, v115);
              v13 = a1;
              v14 = v11;
              v15 = 6;
LABEL_57:
              swift_storeEnumTagMultiPayload(v13, v14, v15);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
              break;
          }
          v116 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v117 = v116[5];
          v118 = (_OWORD *)((char *)a1 + v117);
          v119 = (_OWORD *)((char *)a2 + v117);
          v120 = v119[3];
          v118[2] = v119[2];
          v118[3] = v120;
          v121 = v119[1];
          *v118 = *v119;
          v118[1] = v121;
          *(_OWORD *)((char *)v118 + 106) = *(_OWORD *)((char *)v119 + 106);
          v122 = v119[6];
          v123 = v119[4];
          v118[5] = v119[5];
          v118[6] = v122;
          v118[4] = v123;
          *((_BYTE *)a1 + v116[6]) = *((_BYTE *)a2 + v116[6]);
          *((_BYTE *)a1 + v116[7]) = *((_BYTE *)a2 + v116[7]);
          *((_BYTE *)a1 + v116[8]) = *((_BYTE *)a2 + v116[8]);
          *((_BYTE *)a1 + v116[9]) = *((_BYTE *)a2 + v116[9]);
          *((_BYTE *)a1 + v116[10]) = *((_BYTE *)a2 + v116[10]);
          *(_QWORD *)((char *)a1 + v116[11]) = *(_QWORD *)((char *)a2 + v116[11]);
          v55 = a1;
          v56 = v6;
          v57 = 0;
          goto LABEL_114;
        case 1u:
          v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v22))
          {
            case 2u:
              v23 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
              v24 = a1;
              v25 = v22;
              v26 = 2;
              goto LABEL_64;
            case 3u:
              v124 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(a1, a2, v124);
              v24 = a1;
              v25 = v22;
              v26 = 3;
              goto LABEL_64;
            case 4u:
              v125 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(a1, a2, v125);
              v24 = a1;
              v25 = v22;
              v26 = 4;
              goto LABEL_64;
            case 5u:
              v126 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(a1, a2, v126);
              v24 = a1;
              v25 = v22;
              v26 = 5;
              goto LABEL_64;
            case 6u:
              v127 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(a1, a2, v127);
              v24 = a1;
              v25 = v22;
              v26 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v24, v25, v26);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
              break;
          }
          v128 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v129 = v128[5];
          v130 = (_OWORD *)((char *)a1 + v129);
          v131 = (_OWORD *)((char *)a2 + v129);
          v132 = v131[3];
          v130[2] = v131[2];
          v130[3] = v132;
          v133 = v131[1];
          *v130 = *v131;
          v130[1] = v133;
          *(_OWORD *)((char *)v130 + 106) = *(_OWORD *)((char *)v131 + 106);
          v134 = v131[6];
          v135 = v131[4];
          v130[5] = v131[5];
          v130[6] = v134;
          v130[4] = v135;
          *((_BYTE *)a1 + v128[6]) = *((_BYTE *)a2 + v128[6]);
          *((_BYTE *)a1 + v128[7]) = *((_BYTE *)a2 + v128[7]);
          *((_BYTE *)a1 + v128[8]) = *((_BYTE *)a2 + v128[8]);
          *((_BYTE *)a1 + v128[9]) = *((_BYTE *)a2 + v128[9]);
          *((_BYTE *)a1 + v128[10]) = *((_BYTE *)a2 + v128[10]);
          *(_QWORD *)((char *)a1 + v128[11]) = *(_QWORD *)((char *)a2 + v128[11]);
          v55 = a1;
          v56 = v6;
          v57 = 1;
          goto LABEL_114;
        case 2u:
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          {
            v32 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 2u:
                v91 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v28, v29, v91);
                v92 = v28;
                v93 = v30;
                v94 = 2;
                goto LABEL_95;
              case 3u:
                v181 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v28, v29, v181);
                v92 = v28;
                v93 = v30;
                v94 = 3;
                goto LABEL_95;
              case 4u:
                v182 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v28, v29, v182);
                v92 = v28;
                v93 = v30;
                v94 = 4;
                goto LABEL_95;
              case 5u:
                v183 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v28, v29, v183);
                v92 = v28;
                v93 = v30;
                v94 = 5;
                goto LABEL_95;
              case 6u:
                v184 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v28, v29, v184);
                v92 = v28;
                v93 = v30;
                v94 = 6;
LABEL_95:
                swift_storeEnumTagMultiPayload(v92, v93, v94);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v55 = a1;
          v56 = v6;
          v57 = 2;
          goto LABEL_114;
        case 3u:
          *a1 = *a2;
          v33 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
          {
            v38 = sub_10002A750(&qword_100644980);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v35, v36))
            {
              case 2u:
                v95 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v34, v35, v95);
                v96 = v34;
                v97 = v36;
                v98 = 2;
                goto LABEL_103;
              case 3u:
                v185 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v34, v35, v185);
                v96 = v34;
                v97 = v36;
                v98 = 3;
                goto LABEL_103;
              case 4u:
                v186 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v34, v35, v186);
                v96 = v34;
                v97 = v36;
                v98 = 4;
                goto LABEL_103;
              case 5u:
                v187 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v34, v35, v187);
                v96 = v34;
                v97 = v36;
                v98 = 5;
                goto LABEL_103;
              case 6u:
                v188 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v34, v35, v188);
                v96 = v34;
                v97 = v36;
                v98 = 6;
LABEL_103:
                swift_storeEnumTagMultiPayload(v96, v97, v98);
                break;
              default:
                memcpy(v34, v35, *(_QWORD *)(v37 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
          v55 = a1;
          v56 = v6;
          v57 = 3;
          goto LABEL_114;
        case 4u:
          *a1 = *a2;
          v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          {
            v44 = sub_10002A750(&qword_100644980);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v41, v42))
            {
              case 2u:
                v99 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v40, v41, v99);
                v100 = v40;
                v101 = v42;
                v102 = 2;
                goto LABEL_111;
              case 3u:
                v189 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v40, v41, v189);
                v100 = v40;
                v101 = v42;
                v102 = 3;
                goto LABEL_111;
              case 4u:
                v190 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v40, v41, v190);
                v100 = v40;
                v101 = v42;
                v102 = 4;
                goto LABEL_111;
              case 5u:
                v191 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v40, v41, v191);
                v100 = v40;
                v101 = v42;
                v102 = 5;
                goto LABEL_111;
              case 6u:
                v192 = type metadata accessor for Date(0);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v40, v41, v192);
                v100 = v40;
                v101 = v42;
                v102 = 6;
LABEL_111:
                swift_storeEnumTagMultiPayload(v100, v101, v102);
                break;
              default:
                memcpy(v40, v41, *(_QWORD *)(v43 + 64));
                break;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          }
          v55 = a1;
          v56 = v6;
          v57 = 4;
          goto LABEL_114;
        case 7u:
          v45 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            v47 = sub_10002A750(&qword_100644600);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            v103 = *(int *)(v45 + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
          v108 = (char *)a1 + v107;
          v109 = (char *)a2 + v107;
          *(_OWORD *)v108 = *(_OWORD *)v109;
          *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
          v55 = a1;
          v56 = v6;
          v57 = 7;
          goto LABEL_114;
        case 8u:
          v48 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          v49 = *(_QWORD *)(v48 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48))(a2, 1, v48))
          {
            v50 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          }
          else
          {
            v110 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(a1, a2, v110);
            *((_BYTE *)a1 + *(int *)(v48 + 20)) = *((_BYTE *)a2 + *(int *)(v48 + 20));
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(a1, 0, 1, v48);
          }
          v111 = type metadata accessor for TTRTemplatePublicLinkData(0);
          *(_QWORD *)((char *)a1 + *(int *)(v111 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v111 + 20));
          v55 = a1;
          v56 = v6;
          v57 = 8;
          goto LABEL_114;
        case 9u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v51 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = type metadata accessor for AnyTip(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          v55 = a1;
          v56 = v6;
          v57 = 9;
LABEL_114:
          swift_storeEnumTagMultiPayload(v55, v56, v57);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_10004941C((uint64_t)a1);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v16);
    return a1;
  }
  if (a1 != a2)
  {
    sub_10004941C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v17))
        {
          case 2u:
            v18 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
            v19 = a1;
            v20 = v17;
            v21 = 2;
            goto LABEL_81;
          case 3u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(a1, a2, v157);
            v19 = a1;
            v20 = v17;
            v21 = 3;
            goto LABEL_81;
          case 4u:
            v158 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
            v19 = a1;
            v20 = v17;
            v21 = 4;
            goto LABEL_81;
          case 5u:
            v159 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(a1, a2, v159);
            v19 = a1;
            v20 = v17;
            v21 = 5;
            goto LABEL_81;
          case 6u:
            v160 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(a1, a2, v160);
            v19 = a1;
            v20 = v17;
            v21 = 6;
LABEL_81:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            break;
        }
        v161 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v162 = v161[5];
        v163 = (_OWORD *)((char *)a1 + v162);
        v164 = (_OWORD *)((char *)a2 + v162);
        v165 = v164[3];
        v163[2] = v164[2];
        v163[3] = v165;
        v166 = v164[1];
        *v163 = *v164;
        v163[1] = v166;
        *(_OWORD *)((char *)v163 + 106) = *(_OWORD *)((char *)v164 + 106);
        v167 = v164[6];
        v168 = v164[4];
        v163[5] = v164[5];
        v163[6] = v167;
        v163[4] = v168;
        *((_BYTE *)a1 + v161[6]) = *((_BYTE *)a2 + v161[6]);
        *((_BYTE *)a1 + v161[7]) = *((_BYTE *)a2 + v161[7]);
        *((_BYTE *)a1 + v161[8]) = *((_BYTE *)a2 + v161[8]);
        *((_BYTE *)a1 + v161[9]) = *((_BYTE *)a2 + v161[9]);
        *((_BYTE *)a1 + v161[10]) = *((_BYTE *)a2 + v161[10]);
        *(_QWORD *)((char *)a1 + v161[11]) = *(_QWORD *)((char *)a2 + v161[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 0);
        break;
      case 1u:
        v58 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v58))
        {
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
            v60 = a1;
            v61 = v58;
            v62 = 2;
            goto LABEL_88;
          case 3u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(a1, a2, v169);
            v60 = a1;
            v61 = v58;
            v62 = 3;
            goto LABEL_88;
          case 4u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(a1, a2, v170);
            v60 = a1;
            v61 = v58;
            v62 = 4;
            goto LABEL_88;
          case 5u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
            v60 = a1;
            v61 = v58;
            v62 = 5;
            goto LABEL_88;
          case 6u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(a1, a2, v172);
            v60 = a1;
            v61 = v58;
            v62 = 6;
LABEL_88:
            swift_storeEnumTagMultiPayload(v60, v61, v62);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
            break;
        }
        v173 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v174 = v173[5];
        v175 = (_OWORD *)((char *)a1 + v174);
        v176 = (_OWORD *)((char *)a2 + v174);
        v177 = v176[3];
        v175[2] = v176[2];
        v175[3] = v177;
        v178 = v176[1];
        *v175 = *v176;
        v175[1] = v178;
        *(_OWORD *)((char *)v175 + 106) = *(_OWORD *)((char *)v176 + 106);
        v179 = v176[6];
        v180 = v176[4];
        v175[5] = v176[5];
        v175[6] = v179;
        v175[4] = v180;
        *((_BYTE *)a1 + v173[6]) = *((_BYTE *)a2 + v173[6]);
        *((_BYTE *)a1 + v173[7]) = *((_BYTE *)a2 + v173[7]);
        *((_BYTE *)a1 + v173[8]) = *((_BYTE *)a2 + v173[8]);
        *((_BYTE *)a1 + v173[9]) = *((_BYTE *)a2 + v173[9]);
        *((_BYTE *)a1 + v173[10]) = *((_BYTE *)a2 + v173[10]);
        *(_QWORD *)((char *)a1 + v173[11]) = *(_QWORD *)((char *)a2 + v173[11]);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
        break;
      case 2u:
        *a1 = *a2;
        v63 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_10002A750(&qword_100644980);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v65, v66))
          {
            case 2u:
              v136 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v64, v65, v136);
              v137 = v64;
              v138 = v66;
              v139 = 2;
              goto LABEL_122;
            case 3u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v64, v65, v194);
              v137 = v64;
              v138 = v66;
              v139 = 3;
              goto LABEL_122;
            case 4u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v64, v65, v195);
              v137 = v64;
              v138 = v66;
              v139 = 4;
              goto LABEL_122;
            case 5u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v64, v65, v196);
              v137 = v64;
              v138 = v66;
              v139 = 5;
              goto LABEL_122;
            case 6u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v64, v65, v197);
              v137 = v64;
              v138 = v66;
              v139 = 6;
LABEL_122:
              swift_storeEnumTagMultiPayload(v137, v138, v139);
              break;
            default:
              memcpy(v64, v65, *(_QWORD *)(v67 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 2);
        break;
      case 3u:
        *a1 = *a2;
        v69 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_10002A750(&qword_100644980);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v71, v72))
          {
            case 2u:
              v140 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v70, v71, v140);
              v141 = v70;
              v142 = v72;
              v143 = 2;
              goto LABEL_130;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v70, v71, v198);
              v141 = v70;
              v142 = v72;
              v143 = 3;
              goto LABEL_130;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v70, v71, v199);
              v141 = v70;
              v142 = v72;
              v143 = 4;
              goto LABEL_130;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v70, v71, v200);
              v141 = v70;
              v142 = v72;
              v143 = 5;
              goto LABEL_130;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v70, v71, v201);
              v141 = v70;
              v142 = v72;
              v143 = 6;
LABEL_130:
              swift_storeEnumTagMultiPayload(v141, v142, v143);
              break;
            default:
              memcpy(v70, v71, *(_QWORD *)(v73 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 3);
        break;
      case 4u:
        *a1 = *a2;
        v75 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v79 = *(_QWORD *)(v78 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          v80 = sub_10002A750(&qword_100644980);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v77, v78))
          {
            case 2u:
              v144 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v76, v77, v144);
              v145 = v76;
              v146 = v78;
              v147 = 2;
              goto LABEL_138;
            case 3u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v76, v77, v202);
              v145 = v76;
              v146 = v78;
              v147 = 3;
              goto LABEL_138;
            case 4u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v76, v77, v203);
              v145 = v76;
              v146 = v78;
              v147 = 4;
              goto LABEL_138;
            case 5u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v76, v77, v204);
              v145 = v76;
              v146 = v78;
              v147 = 5;
              goto LABEL_138;
            case 6u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v76, v77, v205);
              v145 = v76;
              v146 = v78;
              v147 = 6;
LABEL_138:
              swift_storeEnumTagMultiPayload(v145, v146, v147);
              break;
            default:
              memcpy(v76, v77, *(_QWORD *)(v79 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        swift_storeEnumTagMultiPayload(a1, v6, 4);
        break;
      case 7u:
        v81 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48))(a2, 1, v81))
        {
          v83 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v148 = *(int *)(v81 + 20);
          v149 = (char *)a1 + v148;
          v150 = (char *)a2 + v148;
          v151 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v81);
        }
        v152 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v153 = (char *)a1 + v152;
        v154 = (char *)a2 + v152;
        *(_OWORD *)v153 = *(_OWORD *)v154;
        *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);
        swift_storeEnumTagMultiPayload(a1, v6, 7);
        break;
      case 8u:
        v84 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(a2, 1, v84))
        {
          v86 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v155 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(a1, a2, v155);
          *((_BYTE *)a1 + *(int *)(v84 + 20)) = *((_BYTE *)a2 + *(int *)(v84 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(a1, 0, 1, v84);
        }
        v156 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v156 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v156 + 20));
        swift_storeEnumTagMultiPayload(a1, v6, 8);
        break;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v87 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        v90 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
        swift_storeEnumTagMultiPayload(a1, v6, 9);
        break;
      default:
        v16 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
  return a1;
}

uint64_t sub_1003294DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003294E8);
}

uint64_t sub_1003294E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_100329534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100329540);
}

uint64_t sub_100329540(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100329590(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1003295C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarEditingTarget(uint64_t a1)
{
  uint64_t result;

  result = qword_100655C68;
  if (!qword_100655C68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListNavigationBarEditingTarget);
  return result;
}

uint64_t sub_100329644(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t sub_100329698()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for TTRIRemindersListPresenter()
{
  return objc_opt_self(_TtC9Reminders26TTRIRemindersListPresenter);
}

void sub_1003296EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v5);
  v6 = (char *)sub_1003297D8 + 4 * byte_10052E500[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1003297D8()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  return 0;
}

void sub_100329828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  ObjectType = swift_getObjectType(v5, a2);
  *(_QWORD *)(v4 - 72) = v5;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  v10 = v9;
  v11 = swift_getObjectType(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 128))(v11, v10);
  swift_unknownObjectRelease(v8);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  JUMPOUT(0x10032980CLL);
}

void sub_100329900(void *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  sub_10001F580(v3, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if ((v1 & 1) == 0)
  {
    sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    JUMPOUT(0x10032980CLL);
  }
  JUMPOUT(0x1003297E4);
}

double sub_100329964@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;

  if ((a2 & 1) != 0)
    goto LABEL_7;
  v7 = sub_100329AF8(0, a1);
  v8 = v7[2];
  swift_bridgeObjectRelease(v7);
  v9 = sub_100329AF8(1, a1);
  v10 = v9[2];
  swift_bridgeObjectRelease(v9);
  if (!v8)
  {
    if (!v10)
      goto LABEL_11;
LABEL_7:
    v11 = sub_100329AF8(0, a3);
    v16 = v11[2];
    if (!v16)
    {
      v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
      v19 = a4;
      v20 = 1;
      goto LABEL_13;
    }
    v17 = v16 - 1;
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = *(_QWORD *)(v13 - 8);
    sub_10002B1E8((uint64_t)v11+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v17, a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    goto LABEL_9;
  }
  if (v10)
  {
LABEL_11:
    v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a4, 1, 1, v22);
    return result;
  }
  v11 = sub_100329AF8(0, a3);
  v12 = v11[2];
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!v12)
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v19 = a4;
    v20 = 1;
    goto LABEL_10;
  }
  sub_10002B1E8((uint64_t)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
LABEL_9:
  v19 = a4;
  v20 = 0;
LABEL_10:
  v21 = v13;
LABEL_13:
  v15(v19, v20, 1, v21);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

_QWORD *sub_100329AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[6];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v17[4] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v17 - v10;
  v17[5] = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain(a2);
  if (v12)
  {
    v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17[0] = a2;
    v17[3] = v13;
    v17[1] = v3;
    v17[2] = v5;
    v14 = sub_10002B1E8(a2 + v13, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v14);
    v15 = (char *)&loc_100329BF8 + 4 * byte_10052E511[swift_getEnumCaseMultiPayload(v5, v3)];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(a2);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100329D90()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  NSObject *v3;
  uint64_t result;
  unsigned __int8 v5;
  id v6;
  NSObject *v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (!Strong)
    return 0;
  v2 = Strong;
  if (!objc_msgSend(Strong, "isViewLoaded"))
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v3 = sub_1002C26B0();
  result = *(uint64_t *)((char *)&v3->isa + qword_10065D8D8);
  if (result)
  {
    v5 = objc_msgSend((id)result, "hasActiveDrag");

    if ((v5 & 1) != 0)
    {
      swift_unknownObjectRelease(v2);
      return 1;
    }
    v7 = sub_1002C26B0();
    result = *(uint64_t *)((char *)&v7->isa + qword_10065D8D8);
    if (result)
    {
      v6 = objc_msgSend((id)result, "hasActiveDrop");
      swift_unknownObjectRelease(v2);

      return (uint64_t)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100329E64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t result;
  _QWORD v19[2];

  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  ObjectType = swift_getObjectType(v6, v8);
  v19[1] = v6;
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  v12 = v11;
  v13 = swift_getObjectType(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 136))(v13, v12);
  swift_unknownObjectRelease(v10);
  v14 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v5, &qword_100649CA0);
LABEL_5:
    v16 = type metadata accessor for TTRIDefaultPresentationTreeMaker();
    v17 = &off_1005EE2E8;
    goto LABEL_6;
  }
  v15 = v5[*(int *)(v14 + 64)];
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v15 != 1)
    goto LABEL_5;
  v16 = type metadata accessor for TTRIEditableSectionsPresentationTreeMaker();
  v17 = &off_1005EE2C0;
LABEL_6:
  result = swift_allocObject(v16, 16, 7);
  a1[3] = v16;
  a1[4] = (uint64_t)v17;
  *a1 = result;
  return result;
}

uint64_t sub_100329FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18[6];

  v3 = sub_10002A750((uint64_t *)&unk_100649CE0);
  __chkstk_darwin(v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100642EA0);
  __chkstk_darwin(v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (result)
  {
    v13 = result;
    sub_100371B10(v18);
    sub_1002C7874((uint64_t)v18);
    sub_1000522B0(v18);
    sub_10000735C(a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing, (uint64_t)v5, (uint64_t *)&unk_100649CE0);
    v14 = sub_10002A750((uint64_t *)&unk_100649CF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14) == 1)
    {
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100649CE0);
      return swift_unknownObjectRelease(v13);
    }
    else
    {
      v15 = v5[*(int *)(v14 + 48)];
      v16 = *(int *)(v6 + 48);
      sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v8[v16] = v15;
      v17 = v8[*(int *)(v6 + 48)];
      sub_10001F580((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1002C7CCC((uint64_t)v11, v17);
      swift_unknownObjectRelease(v13);
      return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return result;
}

void sub_10032A1A0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  id v6;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong)
  {
    v2 = Strong;
    v3 = sub_1002C26B0();
    __chkstk_darwin(v3);
    v5 = *(void **)(v4 + qword_10065D8E0);
    if (v5)
    {
      v6 = v5;
      sub_1000FAA08(0, 0, 0, 0, (uint64_t)v6, (void (*)(uint64_t))sub_10032B2B0);
      swift_unknownObjectRelease(v2);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10032A260(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  _BYTE v11[24];

  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v4 = Strong;
    if (!objc_msgSend(Strong, "isViewLoaded"))
    {
      swift_unknownObjectRelease(v4);
      return;
    }
    v5 = *(char **)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController];
    if (v5)
    {
      v6 = *(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController]
                     + 24);
      if (v6 && (*(_BYTE *)(v6 + 24) & 1) != 0)
      {
        v7 = v5;
LABEL_10:
        swift_beginAccess(&v5[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate], v11, 33, 0);
        swift_bridgeObjectRetain(a1);
        sub_10048F3A0(v9);
        swift_endAccess(v11);
        swift_unknownObjectRelease(v4);

        swift_bridgeObjectRelease(a1);
        return;
      }
      v8 = *(void **)(*(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView]
                    + qword_10065D8D8);
      if (v8)
      {
        v10 = v5;
        if ((objc_msgSend(v8, "hasActiveDrop") & 1) == 0)
        {
          (*(void (**)(uint64_t))&v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately])(a1);
          swift_unknownObjectRelease(v4);

          return;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10032A3BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v4 = (char *)result;
    v5 = a1[3];
    v6 = a1[4];
    sub_10001413C(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1;
    sub_10028F4A0();
    if ((_DWORD)v7 == objc_msgSend(v4, "isEditing"))
    {
      return swift_unknownObjectRelease(v4);
    }
    else
    {
      UIViewController.endFirstResponderEditing()();
      v8.receiver = v4;
      v8.super_class = (Class)type metadata accessor for TTRIShowRemindersViewController(0);
      objc_msgSendSuper2(&v8, "setEditing:animated:", v7, 1);
      objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController], "setEditing:animated:", v7, 1);
      sub_1002908A0(1, 1);
      sub_100291CAC();
      return swift_unknownObjectRelease(v4);
    }
  }
  return result;
}

void sub_10032A4C8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  char *v11;
  NSObject *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  uint8_t *v20;
  uint8_t *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  double v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "viewIfLoaded");
    if (v5 && (v6 = v5, v52 = (id)UIView.firstResponderDescendant.getter(), v6, v52))
    {
      v7 = *(_QWORD *)(a1 + 16);
      if (v7)
      {
        v8 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
        v53 = *(_QWORD *)(v8 + 72);
        v54 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v45 = a1;
        swift_bridgeObjectRetain(a1);
        v9 = 0;
        v46 = v7;
        v47 = v4;
        while (1)
        {
          v10 = sub_1002C26B0();
          v11 = *(char **)((char *)&v10->isa + qword_10065D8E0);
          if (!v11)
            break;
          v12 = v10;
          if (v11[qword_100645F38] == 1)
          {
            v13 = qword_10063D3C8;
            v14 = v11;
            if (v13 != -1)
              swift_once(&qword_10063D3C8, sub_1000E35C8);
            v15 = type metadata accessor for Logger(0);
            v16 = sub_100012DC4(v15, (uint64_t)qword_100645EC0);
            v17 = Logger.logObject.getter(v16);
            v18 = static os_log_type_t.fault.getter(v17);
            if (os_log_type_enabled(v17, v18))
            {
              v19 = v12;
              v20 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v20 = 0;
              _os_log_impl((void *)&_mh_execute_header, v17, v18, "Attempting to read sectionMetadata while it is being modified", v20, 2u);
              v21 = v20;
              v12 = v19;
              swift_slowDealloc(v21, -1, -1);
            }

          }
          else
          {
            v22 = v11;
          }
          v23 = &v11[qword_100645F30];
          v24 = *(_QWORD *)&v11[qword_100645F30];
          v25 = *(_QWORD *)&v11[qword_100645F30 + 8];
          v26 = *(_QWORD *)&v11[qword_100645F30 + 16];
          if (v24)
          {
            v27 = v11[qword_100645F30 + 24] & 1;
            swift_bridgeObjectRetain(*(_QWORD *)&v11[qword_100645F30]);
            swift_bridgeObjectRetain(v25);
            swift_bridgeObjectRetain(v26);
          }
          else
          {
            v49 = *(_QWORD *)&v11[qword_100645F30 + 16];
            v50 = *(_QWORD *)&v11[qword_100645F30 + 8];
            v51 = v12;
            v28 = sub_10002A750((uint64_t *)&unk_100646400);
            v29 = swift_allocObject(v28, 24, 7);
            *(_QWORD *)(v29 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
            {
              v40 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
              if (v40)
              {
                v41 = v40;
                if (v40 < 1)
                  goto LABEL_32;
                v42 = &_swiftEmptyArrayStorage[4];
                do
                {
                  v43 = *v42++;
                  swift_weakAssign(v43 + 56, 0);
                  swift_beginAccess(v43 + 64, v55, 1, 0);
                  v44 = *(_QWORD *)(v43 + 64);
                  *(_QWORD *)(v43 + 64) = _swiftEmptyArrayStorage;
                  swift_bridgeObjectRelease(v44);
                  --v41;
                }
                while (v41);
              }
            }
            sub_100070B1C(v29);
            v24 = v30;
            v25 = v31;
            v26 = v32;
            v27 = v33;
            swift_release();
            v34 = *((_QWORD *)v23 + 1);
            v48 = *(_QWORD *)v23;
            v35 = *((_QWORD *)v23 + 2);
            *(_QWORD *)v23 = v24;
            *((_QWORD *)v23 + 1) = v25;
            *((_QWORD *)v23 + 2) = v26;
            v23[24] = v27 & 1;
            swift_bridgeObjectRetain(v24);
            swift_bridgeObjectRetain(v25);
            swift_bridgeObjectRetain(v26);
            sub_1000072F0(v48, v34, v35);
            sub_1000072F0(0, v50, v49);
            v7 = v46;
            v4 = v47;
            v12 = v51;
          }
          sub_1000701C4(v54 + v53 * v9, v24, v25, v26, v27 & 1);
          v37 = v36;

          swift_bridgeObjectRelease(v26);
          swift_bridgeObjectRelease(v25);
          *(_QWORD *)&v38 = swift_bridgeObjectRelease(v24).n128_u64[0];
          if (v37)
          {
            v39 = objc_msgSend(v52, "isDescendantOfView:", v37, v38);

            if ((v39 & 1) != 0)
            {
              objc_msgSend(v52, "resignFirstResponder", swift_bridgeObjectRelease(v45).n128_f64[0]);
              swift_unknownObjectRelease(v4);

              return;
            }
          }
          if (++v9 == v7)
          {
            swift_unknownObjectRelease(v4);

            swift_bridgeObjectRelease(v45);
            return;
          }
        }
        __break(1u);
LABEL_32:
        __break(1u);
      }
      else
      {
        swift_unknownObjectRelease(v4);

      }
    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
}

void sub_10032A908(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t Strong;
  __int128 v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];
  void *v30;
  unsigned __int8 v31;
  uint64_t v32;
  char v33;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + 32);
  v6 = 0uLL;
  if (!Strong)
  {
    v19 = 0;
    v24 = 0;
    v25 = 0;
    v23 = 254;
    v26 = 0uLL;
    goto LABEL_13;
  }
  v7 = Strong;
  v8 = sub_1002C26B0();
  v9 = *(Class *)((char *)&v8->isa + qword_10065D8E0);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = sub_10006B3DC();
    v14 = v13;
    v16 = v15;
    sub_1000701C4(a1, v12, v13, v15, v17 & 1);
    v19 = v18;

    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    if (v19)
    {
      v20 = type metadata accessor for TTRIRemindersListReminderCell(0);
      if (swift_dynamicCastClass(v19, v20))
      {
        v21 = (void *)TTRIRemindersListReminderCell.viewForAnchoringPopover.getter();

        if (v21)
        {
          static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v29, v21, 0, 1, v22);
          v27 = v29[1];
          v28 = v29[0];
          v19 = v30;
          v23 = v31;
          v24 = v32;
          v25 = v33;
          swift_unknownObjectRelease(v7);

          v26 = v27;
          v6 = v28;
LABEL_13:
          *(_OWORD *)a2 = v6;
          *(_OWORD *)(a2 + 16) = v26;
          *(_QWORD *)(a2 + 32) = v19;
          *(_QWORD *)(a2 + 40) = v23;
          *(_QWORD *)(a2 + 48) = v24;
          *(_BYTE *)(a2 + 56) = v25;
          return;
        }
        swift_unknownObjectRelease(v7);
      }
      else
      {
        swift_unknownObjectRelease(v7);

      }
      v19 = 0;
    }
    else
    {
      swift_unknownObjectRelease(v7);
    }
    v24 = 0;
    v25 = 0;
    v23 = 254;
    v26 = 0uLL;
    v6 = 0uLL;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_10032AAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v4 = Strong;
    v5 = TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)(0, a1, 0);
    swift_unknownObjectRelease(v4);
    return v5;
  }
  else
  {
    v7 = type metadata accessor for PromiseError(0);
    v8 = sub_1000A60A8();
    v9 = swift_allocError(v7, v8, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v10, enum case for PromiseError.cancelled(_:), v7);
    v11 = sub_10002A750(&qword_100642E88);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    return Promise.init(error:)(v9);
  }
}

void sub_10032AB78(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  void *Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (Strong)
  {
    v8 = Strong;
    if (objc_msgSend(Strong, "isViewLoaded"))
    {
      v11 = sub_1002C26B0();
      sub_100124744(a1, a2, a3);
      swift_unknownObjectRelease(v8);

    }
    else
    {
      v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 1, 1, v10);
      swift_unknownObjectRelease(v8);
    }
  }
  else
  {
    v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
}

void sub_10032AC78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v7 = (char *)Strong;
    sub_10002B1E8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
    v9 = (uint64_t)&v7[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore];
    swift_beginAccess(&v7[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore], v12, 33, 0);
    sub_10029A148((uint64_t)v5, v9);
    swift_endAccess(v12);
    v10 = objc_msgSend(v7, "viewIfLoaded");
    objc_msgSend(v10, "setNeedsLayout");
    swift_unknownObjectRelease(v7);

  }
}

uint64_t sub_10032ADA4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = swift_unknownObjectWeakLoadStrong(v2 + 32);
  if (result)
  {
    v6 = result;
    sub_1002C7CCC(a1, a2);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10032AE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (result)
  {
    v4 = result;
    sub_1002C7E3C(a1);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10032AE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[64];

  sub_10032A908(a1, (uint64_t)v4);
  return sub_1000A25CC((uint64_t)v4, a2);
}

uint64_t sub_10032AE80(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + 32);
  if (Strong)
  {
    v6 = Strong;
    v7 = sub_1002C83AC(a1, a2 & 1);
    swift_unknownObjectRelease(v6);
    return v7;
  }
  else
  {
    v9 = type metadata accessor for PromiseError(0);
    v10 = sub_1000A60A8();
    v11 = swift_allocError(v9, v10, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v12, enum case for PromiseError.cancelled(_:), v9);
    v13 = sub_10002A750(&qword_100657300);
    swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    return Promise.init(error:)(v11);
  }
}

uint64_t sub_10032AF44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v8;
  NSObject *v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  Strong = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (Strong)
  {
    v8 = Strong;
    v9 = sub_1002C7FC0(a1, a2, a3 & 1);
    swift_unknownObjectRelease(v8);
    return (uint64_t)v9;
  }
  else
  {
    v11 = type metadata accessor for PromiseError(0);
    v12 = sub_1000A60A8();
    v13 = swift_allocError(v11, v12, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v14, enum case for PromiseError.cancelled(_:), v11);
    v15 = sub_10002A750(&qword_100642E88);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    return Promise.init(error:)(v13);
  }
}

void sub_10032B020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for REMFeatureFlags(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v5);
  v6 = (char *)sub_10032B118 + 4 * byte_10052E51E[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10032B118()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  return 0;
}

void sub_10032B14C()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  JUMPOUT(0x10032B12CLL);
}

uint64_t sub_10032B164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  uint64_t v5;

  v2 = sub_10001F580(v0, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v2);
  v4 = v3;
  v5 = sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return ((uint64_t (*)(uint64_t))((char *)&loc_10032B12C + 4 * byte_10052E52B[v4]))(v5);
}

void sub_10032B1B8()
{
  void *v0;

  JUMPOUT(0x10032B128);
}

void sub_10032B1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for REMFeatureFlags.indentOutdentUncommittedReminder(_:), v1);
  REMFeatureFlags.isEnabled.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  JUMPOUT(0x10032B12CLL);
}

void sub_10032B20C()
{
  void *v0;

  JUMPOUT(0x10032B12CLL);
}

void sub_10032B218(void (*a1)(id))
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  id v8;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_1002C26B0();
    v6 = *(Class *)((char *)&v5->isa + qword_10065D8D8);
    if (v6)
    {
      v7 = v5;
      v8 = v6;

      a1(v8);
      swift_unknownObjectRelease(v4);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10032B2B0()
{
  uint64_t v0;

  sub_1002C79AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10032B2B8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for Calendar(0);
  __chkstk_darwin(v2);
  v3 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v9 = type metadata accessor for Date(0);
  __chkstk_darwin(v9);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for DateComponents(0);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __asm { BR              X10 }
}

uint64_t sub_10032B444()
{
  Swift::String v0;
  Swift::String v1;

  v0._countAndFlagsBits = 0xD000000000000027;
  v0._object = (void *)0x80000001005747C0;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t sub_10032BA80(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  return Set.init()(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_10032BAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = v3;
  v11 = a1;
  v12 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3, v9, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v9, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  v6 = type metadata accessor for Set(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  return Set.removeAll(where:)(sub_10032BBA8, &v8, v6);
}

uint64_t sub_10032BB98(uint64_t a1, uint64_t a2)
{
  return sub_100020498(1, a1, a2);
}

uint64_t sub_10032BBA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t sub_10032BBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655DA8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655DA8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIListSharingRouter()
{
  return objc_opt_self(_TtC9Reminders21TTRIListSharingRouter);
}

uint64_t sub_10032BC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655E60);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655E60);
  if (qword_10063D618 != -1)
    swift_once(&qword_10063D618, sub_1002EBB28);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673798);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10032BD14()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocClassInstance(v0, 88, 7);
}

id sub_10032BD50()
{
  id result;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  result = objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "aa_appleAccounts");

    if (!v2)
      return 0;
    v3 = sub_10032BEC0();
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
      goto LABEL_15;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v12))
    {
      v6 = ACAccountDataclassReminders;
      v7 = 4;
      while (1)
      {
        v8 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4)
           : *(id *)(v4 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v11 = objc_msgSend(v8, "isEnabledForDataclass:", v6);

        if ((v11 & 1) == 0)
        {
          ++v7;
          if (v10 != v5)
            continue;
        }
        goto LABEL_20;
      }
      __break(1u);
LABEL_15:
      if (v4 < 0)
        v12 = v4;
      else
        v12 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
    }
    v11 = 0;
LABEL_20:
    swift_bridgeObjectRelease_n(v4, 2);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10032BEC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642AE0;
  if (!qword_100642AE0)
  {
    v1 = objc_opt_self(ACAccount);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100642AE0);
  }
  return result;
}

_QWORD *sub_10032BEFC(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v24;
  void *v25;
  _QWORD v26[4];
  char v27[24];

  v3 = v2;
  v6 = *v2;
  v2[3] = 0;
  swift_unknownObjectWeakInit(v2 + 2, 0);
  v2[5] = 0;
  v7 = *(_QWORD **)(a1 + 16);
  v2[4] = a1;
  swift_beginAccess(v7 + 5, v27, 0, 0);
  v8 = v7[6];
  v3[7] = v7[5];
  v3[8] = v8;
  swift_retain(v7);
  swift_retain(a1);
  swift_bridgeObjectRetain(v8);
  v9 = (void *)TTRListDetailCreationChangeItem.storage.getter();
  v10 = objc_msgSend(v9, "copyWithZone:", 0);
  swift_release(v9);
  _bridgeAnyObjectToAny(_:)(v26);
  swift_unknownObjectRelease(v10);
  v11 = type metadata accessor for TTRListDetailCreationChangeItem.Storage();
  if (swift_dynamicCast(&v25, v26, &type metadata for Any[8], v11, 6))
  {
    v12 = v25;
  }
  else
  {
    if (qword_10063D3B0 != -1)
      swift_once(&qword_10063D3B0, sub_1000D5748);
    v13 = type metadata accessor for Logger(0);
    sub_100012DC4(v13, (uint64_t)qword_100645478);
    v14 = swift_retain_n(v7, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v17 = 138412290;
      swift_beginAccess(v7 + 4, v26, 0, 0);
      v18 = (void *)v7[4];
      v25 = v18;
      v19 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v17 + 4, v17 + 12);
      *v24 = v18;
      swift_release_n(v7, 2);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v17, 0xCu);
      v20 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v24, 1, v20);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

      swift_release_n(v7, 2);
    }
    v12 = 0;
  }
  v3[6] = v12;
  v21 = NSUndoManager.observeChanges<A>(target:handler:)(v3, sub_1000D993C, 0, v6);
  swift_release(v7);
  swift_release(a1);

  v22 = v3[5];
  v3[5] = v21;
  swift_release(v22);
  return v3;
}

_QWORD *sub_10032C1D0(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v3 = v2;
  v6 = *v2;
  v2[3] = 0;
  swift_unknownObjectWeakInit(v2 + 2, 0);
  v2[5] = 0;
  v7 = *(void **)(a1 + 16);
  v2[4] = a1;
  v8 = v7;
  swift_retain(a1);
  v9 = objc_msgSend(v8, "customContext");
  v10 = v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, "name");

    v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

  }
  else
  {
    v13 = 0xE000000000000000;
  }
  v3[7] = v10;
  v3[8] = v13;
  v14 = objc_msgSend(v8, "storage");
  v15 = objc_msgSend(v14, "copyWithZone:", 0);

  _bridgeAnyObjectToAny(_:)(&v33);
  swift_unknownObjectRelease(v15);
  v16 = sub_100005ED8(0, &qword_100645670, REMSmartListStorage_ptr);
  if (swift_dynamicCast(&v32, &v33, &type metadata for Any[8], v16, 6))
  {
    v17 = v32;
  }
  else
  {
    if (qword_10063D3B0 != -1)
      swift_once(&qword_10063D3B0, sub_1000D5748);
    v18 = type metadata accessor for Logger(0);
    sub_100012DC4(v18, (uint64_t)qword_100645478);
    v19 = v8;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.fault.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v31 = a2;
      v30 = v6;
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138412290;
      v24 = -[NSObject objectID](v19, "objectID");
      v33 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 4, v22 + 12);
      *v23 = v24;
      a2 = v31;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v22, 0xCu);
      v25 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v23, 1, v25);
      swift_slowDealloc(v23, -1, -1);
      v26 = v22;
      v6 = v30;
      swift_slowDealloc(v26, -1, -1);
      v19 = v20;
    }
    else
    {

    }
    v17 = 0;
  }
  v3[6] = v17;
  v27 = NSUndoManager.observeChanges<A>(target:handler:)(v3, sub_1000D993C, 0, v6);

  swift_release(a1);
  v28 = v3[5];
  v3[5] = v27;
  swift_release(v28);
  return v3;
}

_QWORD *sub_10032C4E4(uint64_t a1, void *a2, unint64_t *a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v9;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v9 = v5;
  v36 = *v5;
  v5[3] = 0;
  swift_unknownObjectWeakInit(v5 + 2, 0);
  v5[5] = 0;
  v12 = *(void **)(a1 + 16);
  v5[4] = a1;
  v13 = v12;
  swift_retain(a1);
  v14 = objc_msgSend(v13, "name");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v9[7] = v15;
  v9[8] = v17;
  v18 = objc_msgSend(v13, "storage");
  v19 = objc_msgSend(v18, "copyWithZone:", 0);

  _bridgeAnyObjectToAny(_:)(&v38);
  swift_unknownObjectRelease(v19);
  v20 = sub_100005ED8(0, a3, a4);
  if (swift_dynamicCast(&v37, &v38, &type metadata for Any[8], v20, 6))
  {
    v21 = v37;
  }
  else
  {
    if (qword_10063D3B0 != -1)
      swift_once(&qword_10063D3B0, sub_1000D5748);
    v22 = type metadata accessor for Logger(0);
    sub_100012DC4(v22, (uint64_t)qword_100645478);
    v23 = v13;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.fault.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v35 = a2;
      v34 = a5;
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v26 = 138412290;
      v28 = -[NSObject objectID](v23, "objectID");
      v38 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v26 + 4, v26 + 12);
      *v27 = v28;
      a2 = v35;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v26, 0xCu);
      v29 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v27, 1, v29);
      swift_slowDealloc(v27, -1, -1);
      v30 = v26;
      a5 = v34;
      swift_slowDealloc(v30, -1, -1);
      v23 = v24;
    }
    else
    {

    }
    v21 = 0;
  }
  v9[6] = v21;
  v31 = NSUndoManager.observeChanges<A>(target:handler:)(v9, a5, 0, v36);

  swift_release(a1);
  v32 = v9[5];
  v9[5] = v31;
  swift_release(v32);
  return v9;
}

uint64_t sub_10032C7CC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10032C7F8(a1, a2, a3, sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, sub_1002AA398, sub_100073214, (void (*)(uint64_t, uint64_t *))sub_10019D874);
}

uint64_t sub_10032C7F8(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t *))
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void *v54;
  id v55;
  Class isa;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t *);
  uint64_t v71;
  char v72[40];

  v70 = a8;
  v62 = a3;
  v63 = a2;
  v14 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v14);
  v67 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  result = __chkstk_darwin(v16);
  v68 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = v8;
  v20 = *(void **)(v8 + qword_10065D8E0);
  if (!v20)
    goto LABEL_67;
  v65 = v20;
  v69 = a4();
  v22 = v21;
  v24 = v23;
  v66 = v25;
  v26 = a5(a1);
  if (!v26)
  {
    v44 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v67, 1, 1, v16);
LABEL_47:
    v52 = v68;
    v51 = v69;
    v53 = v66;
    goto LABEL_48;
  }
  v27 = v26;
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_45;
  result = a6(v26);
  if ((v28 & 1) == 0)
    goto LABEL_45;
  v29 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * result);
  if ((v24 & 1) == 0)
  {
    if ((v29 & 0x8000000000000000) != 0)
      goto LABEL_64;
    if (v29 >= *(_QWORD *)(v69 + 16))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v45 = *(_QWORD *)(v69 + 16 * v29 + 40);
    v46 = swift_bridgeObjectRetain(v45);
    v47 = a7(v46, v27);
    v49 = v48;
    swift_bridgeObjectRelease(v45);
    if ((v49 & 1) == 0)
    {
      v50 = v29;
      v44 = (uint64_t)v67;
      IndexPath.init(row:section:)(v47, v50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v44, 0, 1, v16);
LABEL_46:
      swift_release(v27);
      goto LABEL_47;
    }
LABEL_45:
    v44 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v67, 1, 1, v16);
    goto LABEL_46;
  }
  v57 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * result);
  v58 = v22;
  Strong = swift_weakLoadStrong(v27 + 56);
  result = swift_retain(v27);
  v31 = 0;
  if (Strong)
  {
    v32 = v27;
    v60 = v17;
    v61 = v16;
    v59 = v27;
    while (1)
    {
      v33 = __OFADD__(v31++, 1);
      if (v33)
      {
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      v34 = Strong;
      swift_beginAccess(Strong + 64, v72, 0, 0);
      v35 = *(_QWORD *)(Strong + 64);
      if ((unint64_t)v35 >> 62)
      {
        if (v35 < 0)
          v43 = *(_QWORD *)(Strong + 64);
        else
          v43 = v35 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v34);
        swift_bridgeObjectRetain(v35);
        result = _CocoaArrayWrapper.endIndex.getter(v43);
        v36 = result;
        if (!result)
        {
LABEL_8:
          swift_release(v32);
          swift_bridgeObjectRelease(v35);
          goto LABEL_9;
        }
      }
      else
      {
        v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v34);
        result = swift_bridgeObjectRetain(v35);
        if (!v36)
          goto LABEL_8;
      }
      if ((v35 & 0xC000000000000001) != 0)
      {
        result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
        v37 = result;
        if (result != v32)
          goto LABEL_16;
      }
      else
      {
        if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_63;
        v37 = *(_QWORD *)(v35 + 32);
        result = swift_retain(v37);
        if (v37 != v32)
        {
LABEL_16:
          v38 = 0;
          v39 = v36 - 1;
          while (1)
          {
            v40 = v31 + 1;
            if (__OFADD__(v31, 1))
              break;
            if ((*(_BYTE *)(v37 + 48) & 1) != 0)
            {
              v71 = 0;
              v70(v37, &v71);
              v41 = v71;
              *(_QWORD *)(v37 + 40) = v71;
              *(_BYTE *)(v37 + 48) = 0;
            }
            else
            {
              v41 = *(_QWORD *)(v37 + 40);
            }
            result = swift_release(v37);
            v33 = __OFADD__(v40, v41);
            v31 = v40 + v41;
            if (v33)
              goto LABEL_59;
            if (v39 == v38)
            {
              swift_release(v32);
              swift_bridgeObjectRelease(v35);
              goto LABEL_32;
            }
            v42 = v38 + 1;
            if ((v35 & 0xC000000000000001) != 0)
            {
              result = specialized _ArrayBuffer._getElementSlowPath(_:)(v38 + 1, v35);
              v37 = result;
              if (__OFADD__(v42, 1))
                goto LABEL_60;
            }
            else
            {
              if (v42 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_61;
              v37 = *(_QWORD *)(v35 + 8 * v38 + 40);
              result = swift_retain(v37);
              if (__OFADD__(v42, 1))
                goto LABEL_60;
            }
            ++v38;
            if (v37 == v32)
              goto LABEL_30;
          }
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
      }
LABEL_30:
      swift_bridgeObjectRelease(v35);
      swift_release_n(v32, 2);
LABEL_32:
      v17 = v60;
      v16 = v61;
      v27 = v59;
LABEL_9:
      Strong = swift_weakLoadStrong(v34 + 56);
      result = swift_release(v34);
      v32 = v34;
      if (!Strong)
        goto LABEL_53;
    }
  }
  v34 = v27;
LABEL_53:
  swift_release(v34);
  result = v31 - 1;
  if (__OFSUB__(v31, 1))
    goto LABEL_66;
  v44 = (uint64_t)v67;
  v52 = v68;
  v51 = v69;
  v53 = v66;
  v22 = v58;
  if (result < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v67, 1, 1, v16);
  }
  else
  {
    IndexPath.init(row:section:)(result, v57);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v44, 0, 1, v16);
  }
  swift_release(v27);
LABEL_48:

  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v44, 1, v16) == 1)
    return sub_1000073A0(v44, &qword_100646950);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(v52, v44, v16);
  v54 = *(void **)(v64 + qword_10065D8D8);
  if (v54)
  {
    v55 = v54;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v55, "scrollToRowAtIndexPath:atScrollPosition:animated:", isa, v63, v62 & 1);

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v52, v16);
  }
LABEL_68:
  __break(1u);
  return result;
}

void sub_10032CD40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58[4];
  id v59;
  uint64_t v60;
  char v61[88];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v61);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = *(void **)a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v11;
  v12 = v11;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"respond to share invitation {list.objectID: %@}", 47, 2, v13);
  swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = *(_QWORD *)(v2 + 184);
  swift_retain(v14);
  v15 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
  *(_QWORD *)&v16 = swift_release(v14).n128_u64[0];
  if (v15)
  {
    if (objc_msgSend(v15, "sharingStatus", v16) == (id)3)
    {
      v17 = objc_msgSend(v15, "account");
      if (objc_msgSend(v17, "type") == (id)3)
      {
        sub_100010634(v2 + 112, (uint64_t)&v57);
        sub_10001413C(&v57, v58[2]);
        v18 = objc_msgSend(v15, "sharedOwnerName");
        if (v18)
        {
          v19 = v18;
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          v22 = v21;

        }
        else
        {
          v20 = 0;
          v22 = 0;
        }
        v44 = *(_QWORD *)(a1 + 8);
        v45 = *(_QWORD *)(a1 + 16);
        v46 = swift_allocObject(&unk_100601370, 24, 7);
        swift_weakInit(v46 + 16, v2);
        v47 = swift_allocObject(&unk_1006015F0, 250, 7);
        *(_QWORD *)(v47 + 16) = v46;
        *(_QWORD *)(v47 + 24) = v15;
        v48 = *(_OWORD *)(a1 + 176);
        *(_OWORD *)(v47 + 192) = *(_OWORD *)(a1 + 160);
        *(_OWORD *)(v47 + 208) = v48;
        *(_OWORD *)(v47 + 224) = *(_OWORD *)(a1 + 192);
        *(_OWORD *)(v47 + 234) = *(_OWORD *)(a1 + 202);
        v49 = *(_OWORD *)(a1 + 112);
        *(_OWORD *)(v47 + 128) = *(_OWORD *)(a1 + 96);
        *(_OWORD *)(v47 + 144) = v49;
        v50 = *(_OWORD *)(a1 + 144);
        *(_OWORD *)(v47 + 160) = *(_OWORD *)(a1 + 128);
        *(_OWORD *)(v47 + 176) = v50;
        v51 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v47 + 64) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v47 + 80) = v51;
        v52 = *(_OWORD *)(a1 + 80);
        *(_OWORD *)(v47 + 96) = *(_OWORD *)(a1 + 64);
        *(_OWORD *)(v47 + 112) = v52;
        v53 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v47 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v47 + 48) = v53;
        swift_retain(v46);
        v54 = v15;
        sub_100076C08(a1);
        sub_1001E5258(v44, v45, v20, v22, (uint64_t)sub_100347A1C, v47);
        swift_release(v46);
        swift_release(v47);

        swift_bridgeObjectRelease(v22);
        sub_100027F10(&v57);
      }
      else
      {
        v30 = v17;
        sub_100076C08(a1);
        v31 = v30;
        sub_100076C08(a1);
        v32 = v31;
        v33 = Logger.logObject.getter(v32);
        v34 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = swift_slowAlloc(32, -1);
          v36 = (_QWORD *)swift_slowAlloc(16, -1);
          v56 = swift_slowAlloc(32, -1);
          v57 = (uint64_t)v12;
          v60 = v56;
          *(_DWORD *)v35 = 138412802;
          v55 = v33;
          v37 = v12;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v35 + 4, v35 + 12);
          *v36 = v12;
          sub_100075FE8(a1);
          sub_100075FE8(a1);
          *(_WORD *)(v35 + 12) = 2112;
          v38 = objc_msgSend(v32, "objectID");
          v57 = (uint64_t)v38;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v35 + 14, v35 + 22);
          v36[1] = v38;

          *(_WORD *)(v35 + 22) = 2080;
          v57 = 0;
          v58[0] = 0xE000000000000000;
          v59 = objc_msgSend(v32, "type");
          type metadata accessor for REMAccountType(0);
          _print_unlocked<A, B>(_:_:)(&v59, &v57, v39, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v40 = v58[0];
          v57 = sub_100027E40(v57, v58[0], &v60);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v35 + 24, v35 + 32);

          swift_bridgeObjectRelease(v40);
          v41 = v55;
          _os_log_impl((void *)&_mh_execute_header, v55, v34, "Responding to share invitation is not supported for the account {list.objectID: %@, account.objectID: %@, account.type: %s}", (uint8_t *)v35, 0x20u);
          v42 = sub_10002A750(&qword_100642D60);
          swift_arrayDestroy(v36, 2, v42);
          swift_slowDealloc(v36, -1, -1);
          v43 = v56;
          swift_arrayDestroy(v56, 1, &type metadata for Any[8]);
          swift_slowDealloc(v43, -1, -1);
          swift_slowDealloc(v35, -1, -1);

        }
        else
        {

          sub_100075FE8(a1);
          sub_100075FE8(a1);

        }
      }
      return;
    }

  }
  sub_100076C08(a1);
  v23 = sub_100076C08(a1);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v26 = 138412290;
    v57 = (uint64_t)v12;
    v28 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v26 + 4, v26 + 12);
    *v27 = v12;
    sub_100075FE8(a1);
    sub_100075FE8(a1);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to get placeholder list for share invitation for {list.objectID: %@}", v26, 0xCu);
    v29 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v27, 1, v29);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    sub_100075FE8(a1);
    sub_100075FE8(a1);
  }

}

void sub_10032D3FC(void **a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(_QWORD *, uint64_t, uint64_t);
  id v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  _BYTE v34[4];
  int v35;
  id v36;
  _BYTE v37[80];

  v3 = v2;
  v35 = a2;
  v5 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v5);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v12 = sub_100012DC4(v8, (uint64_t)qword_100655F30);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v37);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v15 = *a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v15;
  v16 = v15;
  v17 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Show reminders for list {list.objectID: %@}", 43, 2, v17);
  swift_bridgeObjectRelease(v17);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v18 = v3[23];
  swift_retain(v18);
  v19 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
  swift_release(v18);
  if (v19)
  {
    v21 = v3[9];
    ObjectType = swift_getObjectType(v3[8], v20);
    *v7 = v16;
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    v23 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 32);
    v24 = v16;
    v23(v7, ObjectType, v21);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 4);
    if (Strong)
    {
      v26 = Strong;
      sub_100344F20(v19, v35 & 1, Strong);

      swift_unknownObjectRelease(v26);
    }
    else
    {

    }
  }
  else
  {
    sub_100076C08((uint64_t)a1);
    v27 = sub_100076C08((uint64_t)a1);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v30 = 138412290;
      v36 = v16;
      v32 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v30 + 4, v30 + 12);
      *v31 = v16;
      sub_100075FE8((uint64_t)a1);
      sub_100075FE8((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to find remList in viewModel -- failed to show reminders {list.objectID: %@}", v30, 0xCu);
      v33 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v31, 1, v33);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      sub_100075FE8((uint64_t)a1);
      sub_100075FE8((uint64_t)a1);
    }

  }
}

void sub_10032D774(void **a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(_QWORD *, uint64_t, uint64_t);
  id v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _BYTE v36[80];

  v2 = v1;
  v4 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v36);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v14 = *a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v14;
  v15 = v14;
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Show reminders for custom smart list {smartList.objectID: %@}", 61, 2, v16);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = v2[23];
  swift_retain(v17);
  v18 = (void *)TTRAccountsListsViewModel.remSmartList(for:)(a1);
  swift_release(v17);
  if (v18)
  {
    v20 = v2[9];
    ObjectType = swift_getObjectType(v2[8], v19);
    *v6 = v15;
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    v22 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32);
    v23 = v15;
    v22(v6, ObjectType, v20);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 4);
    if (Strong)
    {
      v25 = Strong;
      sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
      sub_10029C000(v18, v25, (uint64_t)&off_1005FA008, &v34);
      sub_100027F10(&v34);

      swift_unknownObjectRelease(v25);
    }
    else
    {

    }
  }
  else
  {
    sub_100076C08((uint64_t)a1);
    v26 = sub_100076C08((uint64_t)a1);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138412290;
      v34 = v15;
      v31 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v29 + 4, v29 + 12);
      *v30 = v15;
      sub_100075FE8((uint64_t)a1);
      sub_100075FE8((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to find remSmartList in viewModel -- failed to show reminders {smartList.objectID: %@}", v29, 0xCu);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v30, 1, v32);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      sub_100075FE8((uint64_t)a1);
      sub_100075FE8((uint64_t)a1);
    }

  }
}

void sub_10032DB04(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  _BYTE v10[80];

  v2 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v7 = sub_100012DC4(v3, (uint64_t)qword_100655F30);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v8, v10);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  __asm { BR              X12 }
}

void sub_10032DDCC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(_QWORD *, uint64_t, uint64_t);
  id v23;
  uint64_t Strong;
  uint64_t v25;
  _QWORD *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _BYTE v35[80];

  v2 = v1;
  v4 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v35);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v14 = (void *)a1[6];
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v14;
  v15 = v14;
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Show reminders for group {group.objectID: %@}", 45, 2, v16);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = v2[23];
  swift_retain(v17);
  v18 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
  swift_release(v17);
  if (v18)
  {
    v20 = v2[9];
    ObjectType = swift_getObjectType(v2[8], v19);
    *v6 = v15;
    swift_storeEnumTagMultiPayload(v6, v4, 0);
    v22 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32);
    v23 = v15;
    v22(v6, ObjectType, v20);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 4);
    if (Strong)
    {
      v25 = Strong;
      sub_100344F20(v18, 0, Strong);

      swift_unknownObjectRelease(v25);
    }
    else
    {

    }
  }
  else
  {
    sub_100347944(a1);
    v26 = sub_100347944(a1);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138412290;
      v34 = v15;
      v31 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v29 + 4, v29 + 12);
      *v30 = v15;
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to find remList for group in viewModel -- failed to show reminders {group.objectID: %@}", v29, 0xCu);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v30, 1, v32);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
    }

  }
}

void sub_10032E13C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  Swift::String v30;
  unint64_t v31;
  __n128 v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;

  v2 = v1;
  v4 = *v2;
  v5 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMAnalyticsEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[23];
  swift_retain(v12);
  v13 = (void *)TTRAccountsListsViewModel.remAccount(for:)(a1);
  swift_release(v12);
  if (v13)
  {
    v45 = v13;
    v43 = v7;
    v15 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v14);
    type metadata accessor for REMAnalyticsManager(0);
    v16 = v15;
    v44 = v4;
    v17 = v16;
    v18 = static REMAnalyticsManager.shared.getter();
    v19 = sub_10002A750(&qword_100649F98);
    v20 = &v11[*(int *)(v19 + 48)];
    v21 = &v11[*(int *)(v19 + 80)];
    v22 = enum case for REMUserOperation.openRecentlyDeletedList(_:);
    v23 = type metadata accessor for REMUserOperation(0);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v11, v22, v23);
    *(_QWORD *)v20 = TTRUserDefaults.activitySessionId.getter(v24);
    *((_QWORD *)v20 + 1) = v25;
    v46 = v17;
    TTRUserDefaults.activitySessionBeginTime.getter();
    v47 = 0;
    v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    v26 = v48;
    v27 = _typeName(_:qualified:)(v44, 0);
    v29 = v28;
    swift_bridgeObjectRelease(v26);
    v47 = v27;
    v48 = v29;
    v30._countAndFlagsBits = 0x756F636341202D20;
    v30._object = (void *)0xEE007473694C746ELL;
    String.append(_:)(v30);
    v31 = v48;
    *(_QWORD *)v21 = v47;
    *((_QWORD *)v21 + 1) = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMAnalyticsEvent.userOperation(_:), v8);
    REMAnalyticsManager.post(event:)(v11);
    v32 = swift_release(v18);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v32);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 4);
    if (Strong)
    {
      v35 = Strong;
      v36 = v2[9];
      ObjectType = swift_getObjectType(v2[8], v34);
      v38 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v36 + 8) + 8))(ObjectType);
      v39 = sub_10001413C((_QWORD *)(v35 + 48), *(_QWORD *)(v35 + 72));
      v40 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
      v41 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v43, 1, 1, v40);
      v42 = v45;
      sub_100342064(v45, v41, v38, v35, *v39);
      sub_1000073A0(v41, (uint64_t *)&unk_1006463C0);

      swift_unknownObjectRelease(v35);
    }
    else
    {

    }
  }
}

uint64_t sub_10032E41C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v2 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for REMAccountsListDataView.Model(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v14, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v10 = result;
    v11 = result + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
    swift_beginAccess(result + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v13, 0, 0);
    sub_10000735C(v11, (uint64_t)v4, &qword_100656198);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      swift_release(v10);
      return sub_1000073A0((uint64_t)v4, &qword_100656198);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
      sub_10032E598((uint64_t)v8, 0, 2, 1);
      v12 = swift_release(v10);
      return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v12);
    }
  }
  return result;
}

uint64_t sub_10032E598(uint64_t a1, int a2, int a3, int a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, unint64_t, uint64_t);
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjectType;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  id v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, id, char *);
  uint64_t v94;
  uint64_t v95;
  int v96;
  void (*v97)(char *, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, id, char *);
  void *v121;
  id v122;
  NSString v123;
  id v124;
  char *v125;
  Class isa;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  char *v163;
  void (*v164)(char *, id, char *);
  char *v165;
  uint64_t v166;
  int v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  _QWORD *v174;
  char v175[24];
  char v176[24];
  _QWORD v177[6];
  _QWORD v178[3];
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  char v183;
  _QWORD *v184;

  v5 = v4;
  LODWORD(v164) = a4;
  v9 = type metadata accessor for Notification(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v158 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v12);
  v165 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v169 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v156 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_10064E538);
  v16 = __chkstk_darwin(v15);
  v166 = (uint64_t)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v173 = (char *)&v151 - v18;
  v19 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v19);
  v155 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v21);
  v163 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = (char *)type metadata accessor for REMAccountsListDataView.Model(0);
  v170 = *((_QWORD *)v171 - 1);
  v23 = __chkstk_darwin(v171);
  v172 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = v24;
  __chkstk_darwin(v23);
  v154 = (char *)&v151 - v25;
  v26 = type metadata accessor for REMAccountsListDataView.Model.Account(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 4);
  v168 = a3;
  v167 = a2;
  v160 = v9;
  v159 = v10;
  if (Strong)
  {
    v31 = Strong;
    v162 = sub_10000E014(Strong);
    swift_unknownObjectRelease(v31);
  }
  else
  {
    v162 = 0;
  }
  v32 = v5[23];
  v33 = swift_retain(v32);
  v34 = TTRAccountsListsViewModel.accounts.getter(v33);
  swift_release(v32);
  v35 = *(_QWORD *)(v34 + 16);
  v174 = v5;
  if (v35)
  {
    v36 = v27;
    v37 = a1;
    v184 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v35);
    v38 = 48;
    do
    {
      v39 = *(id *)(v34 + v38);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v39);
      v40 = v184[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v40);
      v41 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v39);
      specialized ContiguousArray._endMutation()(v41);
      v38 += 32;
      --v35;
    }
    while (v35);
    v42 = v184;
    v43 = swift_bridgeObjectRelease(v34);
    v5 = v174;
    a1 = v37;
    v27 = v36;
  }
  else
  {
    v43 = swift_bridgeObjectRelease(v34);
    v42 = _swiftEmptyArrayStorage;
  }
  v44 = REMAccountsListDataView.Model.accounts.getter(v43);
  v45 = v44;
  v46 = *(_QWORD *)(v44 + 16);
  if (v46)
  {
    v152 = v42;
    v157 = a1;
    v184 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v46);
    v47 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v151 = v45;
    v48 = v45 + v47;
    v49 = *(_QWORD *)(v27 + 72);
    v50 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v27 + 16);
    do
    {
      v51 = v50(v29, v48, v26);
      v52 = (void *)REMAccountsListDataView.Model.Account.account.getter(v51);
      v53 = objc_msgSend(v52, "objectID");

      v54 = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v54);
      v55 = v27;
      v56 = v184[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v56);
      v57 = v56;
      v27 = v55;
      v58 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v53);
      specialized ContiguousArray._endMutation()(v58);
      v48 += v49;
      --v46;
    }
    while (v46);
    v59 = v184;
    swift_bridgeObjectRelease(v151);
    v5 = v174;
    a1 = v157;
    v60 = v169;
    v61 = (char)v164;
    v42 = v152;
  }
  else
  {
    swift_bridgeObjectRelease(v44);
    v59 = _swiftEmptyArrayStorage;
    v60 = v169;
    v61 = (char)v164;
  }
  v62 = sub_100017684((uint64_t)v42);
  swift_bridgeObjectRelease(v42);
  v63 = sub_100017684((uint64_t)v59);
  swift_bridgeObjectRelease(v59);
  sub_10002CE3C(v62, v63);
  v65 = v64;
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v62);
  if ((v65 & 1) == 0)
  {
    v67 = v5[9];
    ObjectType = swift_getObjectType(v5[8], v66);
    (*(void (**)(uint64_t, uint64_t))(v67 + 208))(ObjectType, v67);
  }
  if ((v61 & 1) != 0)
  {
    v69 = (uint64_t)v5 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
    swift_beginAccess((char *)v5 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v175, 0, 0);
    v70 = v163;
    sub_10000735C(v69, (uint64_t)v163, &qword_100656198);
    v71 = v170;
    v72 = v171;
    if ((*(unsigned int (**)(id, uint64_t, char *))(v170 + 48))(v70, 1, v171) == 1)
    {
      sub_1000073A0((uint64_t)v70, &qword_100656198);
    }
    else
    {
      v164 = *(void (**)(char *, id, char *))(v71 + 32);
      v73 = v70;
      v74 = v154;
      v164(v154, v73, v72);
      v75 = type metadata accessor for TaskPriority(0);
      v76 = v155;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v155, 1, 1, v75);
      v77 = v172;
      (*(void (**)(char *, char *, char *))(v71 + 16))(v172, v74, v72);
      type metadata accessor for MainActor(0);
      v78 = swift_retain(v5);
      v79 = static MainActor.shared.getter(v78);
      v80 = *(unsigned __int8 *)(v71 + 80);
      v81 = (v80 + 40) & ~v80;
      v82 = v71;
      v83 = (char *)swift_allocObject(&unk_100601730, v81 + v153, v80 | 7);
      *((_QWORD *)v83 + 2) = v79;
      *((_QWORD *)v83 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v83 + 4) = v5;
      v164(&v83[v81], v77, v72);
      v84 = (uint64_t)v76;
      v60 = v169;
      v85 = sub_100148368(v84, (uint64_t)&unk_1006561C0, (uint64_t)v83);
      swift_release(v85);
      (*(void (**)(char *, char *))(v82 + 8))(v74, v72);
    }
  }
  v86 = v5[8];
  v87 = v5[9];
  v88 = swift_getObjectType(v86, v66);
  v89 = REMAccountsListDataView.Model.accounts.getter(v88);
  v90 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 224))(v89, v88, v87);
  swift_bridgeObjectRelease(v89);
  v91 = v5[23];
  v92 = swift_retain(v91);
  v93 = (void (*)(char *, id, char *))TTRAccountsListsViewModel.visiblePinnedLists.getter(v92);
  swift_release(v91);
  v94 = (uint64_t)v165;
  (*(void (**)(uint64_t, uint64_t))(v87 + 16))(v88, v87);
  v95 = type metadata accessor for TTRListType(0);
  v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95);
  v164 = v93;
  v163 = v90;
  if (v96 == 1)
  {
    sub_1000073A0(v94, (uint64_t *)&unk_100665590);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v94, v95) == 3)
    {
      v97 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
      v98 = v156;
      v99 = v161;
      v97(v156, v94, v161);
      v97(v173, (uint64_t)v98, v99);
      v100 = 0;
      goto LABEL_26;
    }
    sub_10001F544(v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
  }
  v100 = 1;
  v99 = v161;
LABEL_26:
  v101 = (uint64_t)v173;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v173, v100, 1, v99);
  v102 = *(_QWORD *)(v87 + 8);
  v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 24))(v88, v102);
  v104 = REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter();
  v169 = TTRListType.PredefinedSmartListVisibilityOptions.merging(with:)(v104, v103);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v103);
  (*(void (**)(char *, uint64_t, char *))(v170 + 16))(v172, a1, v171);
  v105 = swift_allocObject(&unk_1006016E0, 32, 7);
  *(_QWORD *)(v105 + 16) = v86;
  *(_QWORD *)(v105 + 24) = v87;
  v106 = swift_allocObject(&unk_100601708, 32, 7);
  *(_QWORD *)(v106 + 16) = v86;
  *(_QWORD *)(v106 + 24) = v87;
  v107 = *(uint64_t (**)(uint64_t, uint64_t))(v102 + 16);
  swift_unknownObjectRetain_n(v86, 2);
  v108 = v107(v88, v102);
  v109 = v174;
  v110 = v174[20];
  swift_beginAccess(v110 + 32, v176, 0, 0);
  v111 = *(_QWORD *)(v110 + 32);
  v112 = v101;
  v113 = v166;
  sub_10000735C(v112, v166, &qword_10064E538);
  LOBYTE(v110) = *((_BYTE *)v109 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing);
  sub_10000F614((uint64_t)v109 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest, (uint64_t)&v184, &qword_1006561B0);
  swift_bridgeObjectRetain(v111);
  sub_1002387D8(&v184, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FA6C);
  v114 = v163;
  v171 = v163;
  v115 = *(_QWORD *)TTRAccountsListsViewModel.ModelCreationOption.platformDefault.unsafeMutableAddressor();
  v116 = type metadata accessor for TTRAccountsListsViewModel(0);
  swift_allocObject(v116, *(unsigned int *)(v116 + 48), *(unsigned __int16 *)(v116 + 52));
  v117 = TTRAccountsListsViewModel.init(model:shouldSelectListByDefault:options:accountMigrationState:cloudKitNetworkActivity:smartListsDisplayOrder:smartListsVisibility:pinnedListsContactsData:currentHashtagSelection:isEditing:tip:permissionRequest:accountForUpgradeHint:)(v172, v162 & 1, v115, sub_100347BD0, v105, sub_100347C18, v106, v108, v169, v111, v113, (_BYTE)v110, 0, 0, &v184, v114);
  swift_release(v106);
  v118 = swift_release(v105);
  v119 = TTRAccountsListsViewModel.visiblePinnedLists.getter(v118);
  v120 = v164;
  LOBYTE(v106) = sub_10002D1DC((uint64_t)v164, v119);
  swift_bridgeObjectRelease(v119);
  swift_bridgeObjectRelease(v120);
  if ((v106 & 1) == 0)
  {
    v121 = *(void **)((char *)v109 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_menuSystemNotifier);
    v122 = objc_msgSend((id)objc_opt_self(NSNotificationQueue), "defaultQueue");
    v123 = String._bridgeToObjectiveC()();
    v179 = type metadata accessor for TTRIMenuSystemNotifier();
    v178[0] = v121;
    v124 = v121;
    v125 = v158;
    Notification.init(name:object:userInfo:)(v123, v178, 0);
    isa = Notification._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v159 + 8))(v125, v160);
    objc_msgSend(v122, "enqueueNotification:postingStyle:coalesceMask:forModes:", isa, 1, 3, 0);

  }
  v127 = v109[23];
  v128 = swift_retain(v127);
  v129 = TTRAccountsListsViewModel.accounts.getter(v128);
  swift_release(v127);
  v130 = *(_QWORD *)(v129 + 16);
  v131 = swift_bridgeObjectRelease(v129);
  if (v130
    || (v141 = TTRAccountsListsViewModel.accounts.getter(v131),
        v142 = *(_QWORD *)(v141 + 16),
        swift_bridgeObjectRelease(v141),
        !v142))
  {
    v132 = v109[23];
    swift_retain(v132);
    v133 = TTRAccountsListsViewModel.diff(with:)(v117);
    v134 = swift_release(v132);
    v135 = (uint64_t *)TTRTreeViewAnimationByType.fading.unsafeMutableAddressor(v134);
    v136 = *v135;
    v137 = v135[1];
    v138 = v135[2];
    v139 = v135[3];
    v140 = v135[4];
  }
  else
  {
    v133 = 0;
    v136 = 0;
    v137 = 0;
    v138 = 0;
    v139 = 0;
    v140 = 0;
  }
  v177[0] = v133;
  v177[1] = v136;
  v177[2] = v137;
  v177[3] = v138;
  v177[4] = v139;
  v177[5] = v140;
  v143 = v109[23];
  v109[23] = v117;
  swift_retain(v117);
  swift_release(v143);
  v178[0] = v133;
  v178[1] = v136;
  v178[2] = v137;
  v179 = v138;
  v180 = v139;
  v181 = v140;
  v182 = v167 & 1;
  v183 = v168;
  v144 = swift_unknownObjectWeakLoadStrong(v109 + 2);
  if (v144)
  {
    v145 = v144;
    v146 = v109[23];
    swift_bridgeObjectRetain(v133);
    v147 = swift_retain(v146);
    sub_10000F3F8(v147, (uint64_t)v178);
    swift_unknownObjectRelease(v145);
    swift_bridgeObjectRelease(v133);
    swift_release(v146);
  }
  v148 = v171;
  v149 = v109[6];
  swift_retain(v149);
  TTRModuleState.modelDidLoad(defersResolveOverride:)((Swift::Bool_optional)2);
  swift_release(v149);
  sub_100007B84(v177);
  swift_release(v117);

  swift_bridgeObjectRelease(v133);
  return sub_1000073A0((uint64_t)v173, &qword_10064E538);
}

uint64_t sub_10032F268(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[24];

  v10 = a6 + 16;
  swift_beginAccess(a6 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v10);
  if (result)
  {
    v12 = result;
    sub_10032F308(a1, a2, a3, a4 & 0x101010101FFLL, 0, 0, 3);
    return swift_release(v12);
  }
  return result;
}

void sub_10032F308(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  id v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *Strong;
  void *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _BYTE v49[24];
  id v50;
  uint64_t v51;
  _BYTE v52[88];

  v8 = v7;
  v48 = a7;
  v46 = a5;
  v47 = a6;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v17 = sub_100012DC4(v13, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  v18 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v18, v52);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a3;
  v20 = a3;
  v21 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Add New List on account {account.objectID: %@}", 46, 2, v21);
  swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v22 = v8[23];
  swift_retain(v22);
  v23 = (void *)TTRAccountsListsViewModel.remAccount(for:)(a1, a2, v20, a4 & 0x101010101FFLL);
  swift_release(v22);
  if (v23)
  {
    v24 = objc_msgSend(v23, "store");
    v25 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", v24);

    v26 = type metadata accessor for TTRListDetailCreationChangeItem();
    swift_allocObject(v26, 81, 7);
    v27 = v25;
    v28 = v23;
    v29 = TTRListDetailCreationChangeItem.init(saveRequest:account:)((uint64_t)v27, (uint64_t)v28);
    v30 = v29;
    v31 = v47;
    if (v47)
    {
      swift_beginAccess(v29 + 40, v49, 1, 0);
      v32 = *(_QWORD *)(v30 + 48);
      *(_QWORD *)(v30 + 40) = v46;
      *(_QWORD *)(v30 + 48) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v32);
    }
    v33 = v48;
    if (v48 != 3)
    {
      swift_beginAccess(v30 + 80, &v50, 1, 0);
      *(_BYTE *)(v30 + 80) = v33;
    }
    v34 = *sub_10001413C(v8 + 14, v8[17]);
    v35 = sub_1003434E4(v30, (uint64_t)v8, (uint64_t)v8, (uint64_t)&off_1006010E0);
    swift_unknownObjectRelease(v36);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v34 + 16);
    if (Strong)
    {
      v38 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v35, 1, 0);

      swift_release(v30);
    }
    else
    {

      swift_release(v30);
    }

  }
  else
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v39 = v20;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v42 = 138412290;
      v50 = v39;
      v44 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v42 + 4, v42 + 12);
      *v43 = v39;

      swift_bridgeObjectRelease_n(a2, 2);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Failed to find model for account -- Failed to add new list {account.objectID: %@}", v42, 0xCu);
      v45 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v43, 1, v45);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
}

Class sub_10032F770()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const mach_header_64 *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *preferredElementSize;
  Swift::String v48;
  UIMenu v49;
  _QWORD *v51;
  uint64_t v52;
  Swift::OpaquePointer v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  UIImage_optional v68;

  v2 = v0;
  v3 = *(_QWORD *)(v0 + 184);
  v4 = swift_retain(v3);
  v5 = TTRAccountsListsViewModel.accounts.getter(v4);
  swift_release(v3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_retain(v2);
    swift_bridgeObjectRetain(v5);
    v54 = v5;
    v7 = (char *)(v5 + 61);
    v66 = _swiftEmptyArrayStorage;
    v56 = v2;
    do
    {
      v8 = *(_QWORD *)(v7 - 29);
      v9 = *(_QWORD *)(v7 - 21);
      v10 = *(void **)(v7 - 13);
      v11 = *(v7 - 3);
      v12 = *(v7 - 4);
      v13 = *(_QWORD *)(v2 + 184);
      v60 = *(v7 - 5);
      v14 = 256;
      if (!v12)
        v14 = 0;
      v15 = 0x10000;
      if (!*(v7 - 3))
        v15 = 0;
      v58 = *(v7 - 2);
      v16 = 0x1000000;
      if (!v58)
        v16 = 0;
      v62 = *(v7 - 1);
      v64 = *v7;
      v17 = &_mh_execute_header;
      if (!v62)
        v17 = 0;
      v18 = 0x10000000000;
      if (!*v7)
        v18 = 0;
      v1 = v1 & 0xFFFF000000000000 | v60 | v18 | (unint64_t)v17 | v16 | v15 | v14;
      swift_retain(v13);
      swift_bridgeObjectRetain(v9);
      v19 = v10;
      v20 = (void *)TTRAccountsListsViewModel.remAccount(for:)(v8, v9, v19, v1);
      swift_release(v13);
      if (v20 && (v21 = objc_msgSend(v20, "groupContext"), v20, v21))
      {
        swift_bridgeObjectRetain(v9);
        if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) != 0)
          v22 = v66;
        else
          v22 = sub_100456310(0, v66[2] + 1, 1, v66);
        v24 = v22[2];
        v23 = v22[3];
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v27 = sub_100456310((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
          v25 = v24 + 1;
          v22 = v27;
        }
        v22[2] = v25;
        v66 = v22;
        v26 = &v22[7 * v24];
        v26[4] = v8;
        v26[5] = v9;
        v26[6] = v19;
        *((_BYTE *)v26 + 56) = v60;
        *((_BYTE *)v26 + 57) = v12;
        *((_BYTE *)v26 + 58) = v11;
        *((_BYTE *)v26 + 59) = v58;
        *((_BYTE *)v26 + 60) = v62;
        *((_BYTE *)v26 + 61) = v64;
        v26[8] = v8;
        v26[9] = v9;
        v26[10] = v21;
      }
      else
      {

        swift_bridgeObjectRelease(v9);
      }
      v2 = v56;
      v7 += 32;
      --v6;
    }
    while (v6);
    swift_release(v56);
    v5 = v54;
    swift_bridgeObjectRelease(v54);
    v28 = v66;
  }
  else
  {
    v28 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v5);
  v29 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v29 + 16, v2);
  v30 = v28[2];
  if (v30 <= 1)
  {
    swift_release(v29);
    swift_bridgeObjectRelease(v28);
    return 0;
  }
  else
  {
    v67 = v28;
    specialized ContiguousArray.reserveCapacity(_:)(v30);
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v55 = v29;
    v31 = 0;
    do
    {
      v33 = v67[v31 + 4];
      v32 = v67[v31 + 5];
      v34 = (void *)v67[v31 + 6];
      v63 = v67[v31 + 7];
      v35 = BYTE1(v67[v31 + 7]);
      v36 = BYTE2(v67[v31 + 7]);
      v59 = BYTE4(v67[v31 + 7]);
      v61 = BYTE3(v67[v31 + 7]);
      v57 = BYTE5(v67[v31 + 7]);
      v37 = v67[v31 + 8];
      v38 = v67[v31 + 9];
      v65 = v30;
      v39 = (void *)v67[v31 + 10];
      v40 = swift_allocObject(&unk_1006017D0, 88, 7);
      *(_QWORD *)(v40 + 16) = v33;
      *(_QWORD *)(v40 + 24) = v32;
      *(_QWORD *)(v40 + 32) = v34;
      *(_BYTE *)(v40 + 40) = v63;
      *(_BYTE *)(v40 + 41) = v35;
      *(_BYTE *)(v40 + 42) = v36;
      *(_BYTE *)(v40 + 43) = v61;
      *(_BYTE *)(v40 + 44) = v59;
      *(_BYTE *)(v40 + 45) = v57;
      *(_QWORD *)(v40 + 48) = v37;
      *(_QWORD *)(v40 + 56) = v38;
      *(_QWORD *)(v40 + 64) = v39;
      *(_QWORD *)(v40 + 72) = sub_100347EEC;
      *(_QWORD *)(v40 + 80) = v55;
      swift_bridgeObjectRetain(v32);
      v41 = v34;
      swift_bridgeObjectRetain_n(v38, 2);
      v42 = v39;
      swift_retain(v55);
      v43 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v37, v38, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100347F48, v40);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v44 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v44);
      v45 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v43);
      specialized ContiguousArray._endMutation()(v45);
      v31 += 7;
      v30 = v65 - 1;
    }
    while (v65 != 1);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v51 = _swiftEmptyArrayStorage;
      else
        v51 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v52 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v51, v52);
    }
    else
    {
      v46 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v46);
      sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
      preferredElementSize = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v68.value.super.isa = 0;
    v68.is_nil = 0;
    v49.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v48, (Swift::String_optional)0, v68, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v53).super.super.isa;
    swift_release(v55);
    swift_bridgeObjectRelease(v67);
  }
  return v49.super.super.isa;
}

uint64_t sub_10032FC94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _BYTE v14[24];

  v10 = *a5;
  v11 = a6 + 16;
  swift_beginAccess(a6 + 16, v14, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v13 = result;
    sub_10032FD30(a1, a2, a3, a4 & 0x101010101FFLL, v10);
    return swift_release(v13);
  }
  return result;
}

void sub_10032FD30(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  void *Strong;
  void *v39;
  id v40;
  NSObject *v41;
  uint64_t v42;
  uint8_t *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  _BYTE v51[80];

  v6 = v5;
  v49 = a5;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v15 = sub_100012DC4(v11, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v51);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = a3;
  v18 = a3;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Add New Group on account {account.objectID: %@}", 47, 2, v19);
  swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = v6[23];
  v21 = a4 & 0x101010101FFLL;
  swift_retain(v20);
  v22 = (void *)TTRAccountsListsViewModel.remAccount(for:)(a1, a2, v18, a4 & 0x101010101FFLL);
  swift_release(v20);
  v24 = a2;
  if (v22)
  {
    v48 = a2;
    v25 = v6[9];
    ObjectType = swift_getObjectType(v6[8], v23);
    v27 = (void *)(*(uint64_t (**)(void *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 72))(v22, v49, _swiftEmptyArrayStorage, 1, 512, ObjectType, v25);
    v28 = objc_msgSend(v27, "sublistContext");
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v27, "saveRequest");
      v31 = objc_msgSend(v30, "updateAccount:", v22);
      v32 = v6[23];
      swift_retain(v32);
      v33 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)(a1, v48, v18, v21);
      swift_release(v32);
      v34 = v30;
      v35 = sub_100344E10(v33, v34);
      swift_bridgeObjectRelease(v33);

      v36 = *sub_10001413C(v6 + 14, v6[17]);
      v37 = sub_100343644(v31, v27, v29, (uint64_t)v35, (uint64_t)v6, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v36 + 16);
      if (Strong)
      {
        v39 = Strong;
        objc_msgSend(Strong, "presentViewController:animated:completion:", v37, 1, 0);

        swift_bridgeObjectRelease(v35);
      }
      else
      {

        swift_bridgeObjectRelease(v35);
      }

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v40 = v18;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, (os_log_type_t)v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v43 = 138412290;
      v50 = v40;
      v45 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v43 + 4, v43 + 12);
      *v44 = v40;

      swift_bridgeObjectRelease_n(v24, 2);
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v42, "Failed to find model account - Failed to add new group {account.objectID: %@}", v43, 0xCu);
      v46 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v44, 1, v46);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
}

Class sub_1003301BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Swift::String v30;
  UIMenu v31;
  Swift::OpaquePointer v33;
  UIImage_optional v34;

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 184) + direct field offset for TTRAccountsListsViewModel.accountsCapabilities);
  if ((*(_QWORD *)TTRAccountsListsViewModel.AccountsCapabilities.supportsTemplates.unsafeMutableAddressor() & ~v6) != 0)
    return 0;
  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "_systemImageNamed:", v7);

  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v10._countAndFlagsBits = 0x73694C2074696445;
  v10._object = (void *)0xEA00000000007374;
  v11._countAndFlagsBits = 0xD00000000000001ELL;
  v11._object = (void *)0x8000000100574BF0;
  v12 = TTRLocalizedString(_:comment:)(v10, v11);
  v13 = swift_allocObject(&unk_100601758, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = v9;
  swift_retain(a2);
  v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12._countAndFlagsBits, v12._object, 0, 0, v9, 0, 0, 0, 0, 0, 0, sub_10001B280, v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
  specialized Array._endMutation()(v18);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v8, "_systemImageNamed:", v19);

  v21._countAndFlagsBits = 0x6574616C706D6554;
  v21._object = (void *)0xE900000000000073;
  v22._countAndFlagsBits = 0xD00000000000001ELL;
  v22._object = (void *)0x8000000100574BF0;
  v23 = TTRLocalizedString(_:comment:)(v21, v22);
  v24 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v24 + 16, v3);
  v25 = v20;
  v26 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v23._countAndFlagsBits, v23._object, 0, 0, v20, 0, 0, 0, 0, 0, 0, sub_100347E30, v24);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
  v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
  specialized Array._endMutation()(v29);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v34.value.super.isa = 0;
  v34.is_nil = 0;
  v31.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v30, (Swift::String_optional)0, v34, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v33).super.super.isa;

  return v31.super.super.isa;
}

void sub_10033053C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(Strong + 184);
    v6 = swift_retain(v5);
    v7 = (void *)TTRAccountsListsViewModel.remAccountForTemplates.getter(v6);
    swift_release(v5);
    if (v7)
    {
      v8 = sub_10001413C((_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 136));
      v9 = swift_unknownObjectWeakLoadStrong(*v8 + 16);
      if (v9)
      {
        v10 = (void *)v9;
        v11 = sub_1004037E4(1, v7, v4, (uint64_t)&off_1006010E0);
        v13 = v12;
        v14 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v11);
        objc_msgSend(v14, "setModalPresentationStyle:", 2);
        swift_unknownObjectRelease(v13);

        objc_msgSend(v10, "presentViewController:animated:completion:", v14, 1, 0);
        swift_release(v4);

      }
      else
      {
        swift_release(v4);

      }
    }
    else
    {
      swift_release(v4);
    }
  }
}

double sub_100330688@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const mach_header_64 *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  id v16;
  double result;

  v5 = *a1;
  v4 = a1[1];
  v6 = (void *)a1[2];
  v7 = *(_QWORD *)(a2 + 184);
  v8 = 256;
  if (!*((_BYTE *)a1 + 25))
    v8 = 0;
  v9 = 0x10000;
  if (!*((_BYTE *)a1 + 26))
    v9 = 0;
  v10 = 0x1000000;
  if (!*((_BYTE *)a1 + 27))
    v10 = 0;
  v11 = &_mh_execute_header;
  if (!*((_BYTE *)a1 + 28))
    v11 = 0;
  v12 = 0x10000000000;
  if (!*((_BYTE *)a1 + 29))
    v12 = 0;
  v13 = v8 | *((unsigned __int8 *)a1 + 24) | v9 | v10 | (unint64_t)v11 | v12;
  swift_retain(*(_QWORD *)(a2 + 184));
  v14 = (void *)TTRAccountsListsViewModel.remAccount(for:)(v5, v4, v6, v13);
  swift_release(v7);
  if (v14 && (v15 = objc_msgSend(v14, "groupContext"), v14, v15))
  {
    *a3 = v5;
    a3[1] = v4;
    a3[2] = v6;
    a3[3] = v13;
    a3[4] = v15;
    swift_bridgeObjectRetain(v4);
    v16 = v6;
  }
  else
  {
    a3[4] = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
  return result;
}

void sub_1003307B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_10033084C + 4 * byte_10052E7B7[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10033084C()
{
  uint64_t v0;

  return sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

void sub_100330874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *(_BYTE *)(v1 + 217);
  v4 = *(_BYTE *)(v1 + 216);
  v5 = *(_BYTE *)(v1 + 148);
  v6 = *(_BYTE *)(v1 + 147);
  v7 = *(_BYTE *)(v1 + 146);
  v8 = *(_BYTE *)(v1 + 145);
  v9 = *(_BYTE *)(v1 + 144);
  v10 = *(_BYTE *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v13 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_QWORD *)(v0 + 16) = v13;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 40) = v12;
  *(_QWORD *)(v0 + 48) = v11;
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(v0 + 104) = *(_OWORD *)(v1 + 104);
  *(_BYTE *)(v0 + 120) = v10;
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
  *(_BYTE *)(v0 + 144) = v9;
  *(_BYTE *)(v0 + 145) = v8;
  *(_BYTE *)(v0 + 146) = v7;
  *(_BYTE *)(v0 + 147) = v6;
  *(_BYTE *)(v0 + 148) = v5;
  *(_OWORD *)(v2 + 152) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(v2 + 168) = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(v2 + 184) = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(v2 + 200) = *(_OWORD *)(v1 + 200);
  *(_BYTE *)(v0 + 216) = v4;
  *(_BYTE *)(v0 + 217) = v3;
  v14 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 272) = v14;
  v15 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 304) = v15;
  v16 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)v0;
  *(_OWORD *)(v0 + 240) = v16;
  v17 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = v17;
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 426) = *(_OWORD *)(v2 + 202);
  v18 = *(_OWORD *)(v0 + 96);
  v19 = *(_OWORD *)(v0 + 112);
  v20 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 368) = v20;
  *(_OWORD *)(v0 + 320) = v18;
  *(_OWORD *)(v0 + 336) = v19;
  sub_100330974(v0 + 224);
  sub_100075FE8(v0);
  JUMPOUT(0x10033085CLL);
}

void sub_100330974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Bool v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v41;
  char v42[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v42);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = *(void **)a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v11;
  v12 = v11;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Pin List with id {list.objectID: %@}", 36, 2, v13);
  swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = *(_QWORD *)(v2 + 184);
  swift_retain(v14);
  v15 = (void *)TTRAccountsListsViewModel.listOrCustomSmartList(for:)(a1);
  v17 = v16;
  v18 = ~v16;
  swift_release(v14);
  if (v18)
  {
    v20 = *(_QWORD *)(v2 + 184);
    swift_retain(v20);
    v21 = TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(1);
    swift_release(v20);
    if (v21)
    {
      sub_10033B9FC();
      sub_1000760F4(v15, v17);
    }
    else
    {
      v25 = (void *)objc_opt_self(TTRUndoManager);
      static TTRLocalizableStrings.UndoAction.pinList.getter();
      v27 = v26;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
      v29 = swift_allocObject(&unk_100601F00, 258, 7);
      v30 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v29 + 200) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v29 + 216) = v30;
      *(_OWORD *)(v29 + 232) = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(v29 + 242) = *(_OWORD *)(a1 + 202);
      v31 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v29 + 136) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v29 + 152) = v31;
      v32 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v29 + 168) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v29 + 184) = v32;
      v33 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v29 + 88) = v33;
      v34 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v29 + 104) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v29 + 120) = v34;
      v35 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v29 + 40) = *(_OWORD *)a1;
      *(_QWORD *)(v29 + 16) = v2;
      *(_QWORD *)(v29 + 24) = v15;
      *(_BYTE *)(v29 + 32) = v17 & 1;
      *(_OWORD *)(v29 + 56) = v35;
      v36 = swift_allocObject(&unk_100601F28, 32, 7);
      *(_QWORD *)(v36 + 16) = sub_10034A3C0;
      *(_QWORD *)(v36 + 24) = v29;
      aBlock[4] = sub_1000381EC;
      v41 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_100601F40;
      v37 = _Block_copy(aBlock);
      v38 = v41;
      swift_retain(v2);
      sub_1000B5EC0(v15, v17);
      sub_100076C08(a1);
      swift_retain(v36);
      objc_msgSend(v25, "withActionName:block:", v28, v37, swift_release(v38).n128_f64[0]);
      sub_1000760F4(v15, v17);

      _Block_release(v37);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v36, "", 114, 1806, 81, 1);
      swift_release(v29);
      swift_release(v36);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
  }
  else
  {
    v22 = Logger.logObject.getter(v19);
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to find listOrCustomSmartList to pin list", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
}

void sub_100330D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  char v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char isEscapingClosureAtFileLocation;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD aBlock[5];
  uint64_t v39;
  char v40[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v40);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = *(void **)a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v11;
  v12 = v11;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Unpin List with id {list.objectID: %@}", 38, 2, v13);
  swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = *(_QWORD *)(v2 + 184);
  swift_retain(v14);
  v15 = (void *)TTRAccountsListsViewModel.listOrCustomSmartList(for:)(a1);
  v17 = v16;
  v18 = ~v16;
  swift_release(v14);
  if (v18)
  {
    v20 = (void *)objc_opt_self(TTRUndoManager);
    static TTRLocalizableStrings.UndoAction.unpinList.getter();
    v22 = v21;
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    v24 = swift_allocObject(&unk_100601E88, 258, 7);
    v25 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v24 + 200) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v24 + 216) = v25;
    *(_OWORD *)(v24 + 232) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v24 + 242) = *(_OWORD *)(a1 + 202);
    v26 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v24 + 136) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v24 + 152) = v26;
    v27 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v24 + 168) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v24 + 184) = v27;
    v28 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v24 + 88) = v28;
    v29 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v24 + 104) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v24 + 120) = v29;
    v30 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v24 + 40) = *(_OWORD *)a1;
    *(_QWORD *)(v24 + 16) = v2;
    *(_QWORD *)(v24 + 24) = v15;
    *(_BYTE *)(v24 + 32) = v17 & 1;
    *(_OWORD *)(v24 + 56) = v30;
    v31 = swift_allocObject(&unk_100601EB0, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_10034A308;
    *(_QWORD *)(v31 + 24) = v24;
    aBlock[4] = sub_1000381EC;
    v39 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100601EC8;
    v32 = _Block_copy(aBlock);
    v33 = v39;
    swift_retain(v2);
    sub_1000B5EC0(v15, v17);
    sub_100076C08(a1);
    swift_retain(v31);
    objc_msgSend(v20, "withActionName:block:", v23, v32, swift_release(v33).n128_f64[0]);
    sub_1000760F4(v15, v17);

    _Block_release(v32);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v31, "", 114, 1824, 83, 1);
    swift_release(v24);
    swift_release(v31);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v35 = Logger.logObject.getter(v19);
  v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to find listOrCustomSmartList to unpin list", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

}

void sub_100331128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_1003311BC + 4 * byte_10052E7C5[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

void sub_1003311BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655F30);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.fault.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Trying to delete unexpected item", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

}

void sub_1003313DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  void (*v11)(char *);
  uint64_t v12;
  uint64_t inited;
  void *v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  void *v65;
  id v66;
  _QWORD *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  os_log_type_t v80;
  _BOOL4 v81;
  uint8_t *v82;
  id v83;
  id v84;
  _QWORD *v85;
  os_log_type_t v86;
  const char *v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  _QWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _QWORD v99[6];
  _OWORD v100[3];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v10 = (_QWORD *)sub_100012DC4(v6, (uint64_t)qword_100655F30);
  v11 = *(void (**)(char *))(v7 + 16);
  v94 = v10;
  v11(v9);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, &v98);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v14 = *(void **)a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  LODWORD(v91) = a2;
  v15 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if ((a2 & 1) != 0)
    v17 = 0xE400000000000000;
  else
    v17 = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 88) = 0x8000000100574EF0;
  *(_QWORD *)(inited + 96) = v16;
  v92 = v16;
  *(_QWORD *)(inited + 104) = v17;
  if (v15)
    v18 = 4;
  else
    v18 = 5;
  v93 = v14;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"delete list {list.objectID: %@, isCustomSmartList: %@}", 54, 2, v19);
  swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = sub_10002A750(&qword_100646A70);
  v21 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 72);
  v24 = *(unsigned __int8 *)(v22 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v20, v25 + v23, v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100520250;
  v27 = (_OWORD *)(v26 + v25);
  v28 = *(_OWORD *)(a1 + 176);
  v27[10] = *(_OWORD *)(a1 + 160);
  v27[11] = v28;
  v27[12] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v27 + 202) = *(_OWORD *)(a1 + 202);
  v29 = *(_OWORD *)(a1 + 112);
  v27[6] = *(_OWORD *)(a1 + 96);
  v27[7] = v29;
  v30 = *(_OWORD *)(a1 + 144);
  v27[8] = *(_OWORD *)(a1 + 128);
  v27[9] = v30;
  v31 = *(_OWORD *)(a1 + 48);
  v27[2] = *(_OWORD *)(a1 + 32);
  v27[3] = v31;
  v32 = *(_OWORD *)(a1 + 80);
  v27[4] = *(_OWORD *)(a1 + 64);
  v27[5] = v32;
  v33 = *(_OWORD *)(a1 + 16);
  *v27 = *(_OWORD *)a1;
  v27[1] = v33;
  swift_storeEnumTagMultiPayload(v26 + v25, v21, v18);
  v34 = *(_QWORD *)(v3 + 184);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (Strong)
  {
    v36 = Strong;
    sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
    sub_100076C08(a1);
    swift_retain(v34);
    v37 = sub_10029ECC0();
    v39 = v38;
    swift_unknownObjectRelease(v36);
  }
  else
  {
    sub_100076C08(a1);
    swift_retain(v34);
    v37 = 0;
    v39 = 255;
  }
  TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)(v99, v26, v34, v37, v39);
  sub_10000F614((uint64_t)v99, (uint64_t)v100, &qword_100656268);
  if (!*(_QWORD *)&v100[0])
  {
    sub_100076C08(a1);
    v70 = sub_100076C08(a1);
    v71 = Logger.logObject.getter(v70);
    v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = swift_slowAlloc(22, -1);
      v91 = swift_slowAlloc(8, -1);
      v94 = (_QWORD *)swift_slowAlloc(32, -1);
      *(_QWORD *)&v101 = v94;
      *(_DWORD *)v73 = 138412546;
      v74 = v93;
      *(_QWORD *)&v95 = v93;
      v75 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v73 + 4, v73 + 12);
      v76 = v91;
      *(_QWORD *)v91 = v74;
      sub_100075FE8(a1);
      sub_100075FE8(a1);
      *(_WORD *)(v73 + 12) = 2080;
      *(_QWORD *)&v95 = sub_100027E40(v92, v17, (uint64_t *)&v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v73 + 14, v73 + 22);
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Failed to construct delete arguments for deleting list {list.objectID: %@, isCustomSmartList: %s}", (uint8_t *)v73, 0x16u);
      v77 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v76, 1, v77);
      swift_slowDealloc(v76, -1, -1);
      v78 = v94;
      swift_arrayDestroy(v94, 1, &type metadata for Any[8]);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v73, -1, -1);
LABEL_34:

      return;
    }
    goto LABEL_33;
  }
  v101 = v100[0];
  v102 = v100[1];
  v103 = v100[2];
  v40 = swift_allocObject(&unk_100601370, 24, 7);
  v92 = v3;
  swift_weakInit(v40 + 16, v3);
  v104 = v101;
  v105 = v103;
  v41 = swift_allocObject(&unk_100601D70, 72, 7);
  *(_QWORD *)(v41 + 16) = v40;
  *(_OWORD *)(v41 + 24) = v101;
  v42 = v103;
  *(_OWORD *)(v41 + 40) = v102;
  *(_OWORD *)(v41 + 56) = v42;
  v43 = BYTE8(v101);
  sub_10002DF4C(&v104);
  sub_10002DF4C(&v105);
  sub_10002DF4C((_QWORD *)&v105 + 1);
  if ((v43 & 1) == 0)
  {
    v44 = swift_retain(v40);
    if ((static UIAccessibility.ttriIsAccessibilityRunning.getter(v44) & 1) == 0)
    {
      sub_10033257C(v40, (uint64_t *)&v101);
      swift_release(v41);
      swift_release(v40);
      sub_1000522B0(&v104);
      sub_1000522B0(&v105);
      sub_1000522B0((_QWORD *)&v105 + 1);
      return;
    }
    swift_release(v40);
  }
  v95 = v101;
  v96 = v102;
  v97 = v103;
  v45 = sub_10034A268();
  v46 = TTRAccountsListsDeleteArgumentsType.allListsToDelete()(&type metadata for TTRAccountsListsInteractorDeleteArguments, v45);
  sub_1000522B0(&v104);
  sub_1000522B0(&v105);
  sub_1000522B0((_QWORD *)&v105 + 1);
  if (!*(_QWORD *)(v46 + 16))
  {
    swift_bridgeObjectRelease(v46);
    sub_100076C08(a1);
    v79 = sub_100076C08(a1);
    v71 = Logger.logObject.getter(v79);
    v80 = static os_log_type_t.error.getter();
    v81 = os_log_type_enabled(v71, v80);
    if ((v91 & 1) != 0)
    {
      if (v81)
      {
        v82 = (uint8_t *)swift_slowAlloc(12, -1);
        v94 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v82 = 138412290;
        v83 = v93;
        *(_QWORD *)&v95 = v93;
        v84 = v93;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v82 + 4, v82 + 12);
        v85 = v94;
        *v94 = v83;
        sub_100075FE8(a1);
        sub_100075FE8(a1);
        v86 = v80;
        v87 = "Failed to find REMSmartList -- failed to delete list {list.objectID: %@}";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v71, v86, v87, v82, 0xCu);
        v90 = sub_10002A750(&qword_100642D60);
        swift_arrayDestroy(v85, 1, v90);
        swift_slowDealloc(v85, -1, -1);
        swift_slowDealloc(v82, -1, -1);
        swift_release(v41);
        goto LABEL_34;
      }
    }
    else if (v81)
    {
      v82 = (uint8_t *)swift_slowAlloc(12, -1);
      v94 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v82 = 138412290;
      v88 = v93;
      *(_QWORD *)&v95 = v93;
      v89 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v82 + 4, v82 + 12);
      v85 = v94;
      *v94 = v88;
      sub_100075FE8(a1);
      sub_100075FE8(a1);
      v86 = v80;
      v87 = "Failed to find REMList -- failed to delete list {list.objectID: %@}";
      goto LABEL_31;
    }
    swift_release(v41);
LABEL_33:
    sub_100075FE8(a1);
    sub_100075FE8(a1);
    goto LABEL_34;
  }
  v47 = *(void **)(v46 + 32);
  v48 = *(_BYTE *)(v46 + 40);
  v94 = v47;
  swift_bridgeObjectRelease(v46);
  sub_10022B41C(v47, v48);
  v50 = v49;
  sub_10022B660(v47, v48);
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50);
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  v55 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v53, v54, 1);

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  v57 = v56;
  v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v57);
  v59 = (void *)objc_opt_self(UIAlertAction);
  v60 = objc_msgSend(v59, "actionWithTitle:style:handler:", v58, 1, 0);

  static TTRLocalizableStrings.Common.deleteButton.getter();
  v62 = v61;
  v63 = swift_allocObject(&unk_100601D98, 32, 7);
  *(_QWORD *)(v63 + 16) = sub_10034A25C;
  *(_QWORD *)(v63 + 24) = v41;
  swift_retain(v41);
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v62);
  *(_QWORD *)&v97 = sub_10002D4F8;
  *((_QWORD *)&v97 + 1) = v63;
  *(_QWORD *)&v95 = _NSConcreteStackBlock;
  *((_QWORD *)&v95 + 1) = 1107296256;
  *(_QWORD *)&v96 = sub_1000D4884;
  *((_QWORD *)&v96 + 1) = &unk_100601DB0;
  v65 = _Block_copy(&v95);
  v66 = objc_msgSend(v59, "actionWithTitle:style:handler:", v64, 2, v65, swift_release(*((_QWORD *)&v97 + 1)).n128_f64[0]);
  _Block_release(v65);

  objc_msgSend(v55, "addAction:", v60);
  objc_msgSend(v55, "addAction:", v66);
  v67 = sub_10001413C((_QWORD *)(v92 + 112), *(_QWORD *)(v92 + 136));
  v68 = (void *)swift_unknownObjectWeakLoadStrong(*v67 + 16);
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v68, "presentViewController:animated:completion:", v55, 1, 0);

    swift_release(v41);
  }
  else
  {

    swift_release(v41);
  }
}

void sub_100331DFC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  void *object;
  uint64_t v45;
  __int128 v46;
  NSString v47;
  void *v48;
  id v49;
  Swift::String v50;
  Swift::String v51;
  void *v52;
  uint64_t v53;
  __int128 v54;
  NSString v55;
  void *v56;
  id v57;
  _QWORD *v58;
  NSObject *v59;
  NSObject *v60;
  uint64_t v61;
  _QWORD *v62;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD *v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  void **aBlock;
  uint64_t aBlock_8;
  void (*v72)(uint64_t, void *);
  void *v73;
  void (*v74)();
  uint64_t v75;
  _QWORD v76[6];
  _OWORD v77[3];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;

  v2 = v1;
  v4 = sub_10002A750(&qword_100646A70);
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v4, v9 + v7, v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100520250;
  v11 = (_OWORD *)(v10 + v9);
  v12 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  *v11 = *(_OWORD *)a1;
  v11[1] = v13;
  swift_storeEnumTagMultiPayload(v10 + v9, v5, 6);
  v14 = v2[23];
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 4);
  if (Strong)
  {
    v16 = Strong;
    sub_10001413C((_QWORD *)(Strong + 48), *(_QWORD *)(Strong + 72));
    sub_100347944((_QWORD *)a1);
    swift_retain(v14);
    v17 = sub_10029ECC0();
    v19 = v18;
    swift_unknownObjectRelease(v16);
  }
  else
  {
    sub_100347944((_QWORD *)a1);
    swift_retain(v14);
    v17 = 0;
    v19 = 255;
  }
  TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)(v76, v10, v14, v17, v19);
  v20 = sub_10000F614((uint64_t)v76, (uint64_t)v77, &qword_100656268);
  if (!*(_QWORD *)&v77[0])
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v61 = type metadata accessor for Logger(0);
    sub_100012DC4(v61, (uint64_t)qword_100655F30);
    sub_100347944((_QWORD *)a1);
    v62 = sub_100347944((_QWORD *)a1);
    v60 = Logger.logObject.getter(v62);
    v63 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(12, -1);
      v65 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v64 = 138412290;
      v66 = *(void **)(a1 + 48);
      *(_QWORD *)&v78 = v66;
      v67 = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, (char *)&v78 + 8, v64 + 4, v64 + 12);
      *v65 = v66;
      sub_100075FA0(a1);
      sub_100075FA0(a1);
      _os_log_impl((void *)&_mh_execute_header, v60, v63, "Failed to construct delete arguments for deleting group {group.objectID: %@}", v64, 0xCu);
      v68 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v65, 1, v68);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);
    }
    else
    {
      sub_100075FA0(a1);
      sub_100075FA0(a1);
    }
    goto LABEL_14;
  }
  v78 = v77[0];
  v79 = v77[1];
  v80 = v77[2];
  if ((BYTE8(v77[0]) & 1) != 0 || (static UIAccessibility.ttriIsAccessibilityRunning.getter(v20) & 1) != 0)
  {
    v22 = *(_QWORD *)a1;
    v21 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRetain(v21);
    v23._countAndFlagsBits = 0xD000000000000031;
    v24._object = (void *)0x8000000100575100;
    v23._object = (void *)0x8000000100575120;
    v24._countAndFlagsBits = 0x100000000000001ALL;
    v25 = TTRLocalizedString(_:comment:)(v24, v23);
    v26 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v27 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100520250;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_1000770A4();
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v21;
    static String.localizedStringWithFormat(_:_:)(v25._countAndFlagsBits, v25._object, v27);
    v29 = v28;
    swift_bridgeObjectRelease(v25._object);
    swift_bridgeObjectRelease(v27);
    v30 = sub_10034A268();
    v31 = TTRAccountsListsDeleteArgumentsType.allListsToDelete()(&type metadata for TTRAccountsListsInteractorDeleteArguments, v30);
    sub_10022BAC4(v31);
    v33 = v32;
    swift_bridgeObjectRelease(v31);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    v36 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v34, v35, 1);

    static TTRLocalizableStrings.Common.alertCancelButton.getter();
    v38 = v37;
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v40 = (void *)objc_opt_self(UIAlertAction);
    v41 = objc_msgSend(v40, "actionWithTitle:style:handler:", v39, 1, 0);

    v69 = v41;
    objc_msgSend(v36, "addAction:", v41);
    v42._countAndFlagsBits = 0xD00000000000001ELL;
    v43._object = (void *)0x8000000100575160;
    v42._object = (void *)0x8000000100575180;
    v43._countAndFlagsBits = 0xD000000000000011;
    object = TTRLocalizedString(_:comment:)(v43, v42)._object;
    v81 = v78;
    v82 = v80;
    v45 = swift_allocObject(&unk_100602270, 72, 7);
    v46 = v79;
    *(_OWORD *)(v45 + 16) = v78;
    *(_OWORD *)(v45 + 32) = v46;
    *(_OWORD *)(v45 + 48) = v80;
    *(_QWORD *)(v45 + 64) = v2;
    sub_10002DF4C(&v81);
    sub_10002DF4C(&v82);
    sub_10002DF4C((_QWORD *)&v82 + 1);
    swift_retain(v2);
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v74 = sub_10034AE50;
    v75 = v45;
    aBlock = _NSConcreteStackBlock;
    aBlock_8 = 1107296256;
    v72 = sub_1000D4884;
    v73 = &unk_100602288;
    v48 = _Block_copy(&aBlock);
    v49 = objc_msgSend(v40, "actionWithTitle:style:handler:", v47, 0, v48, swift_release(v75).n128_f64[0]);
    _Block_release(v48);

    v50._countAndFlagsBits = 0xD000000000000016;
    v51._countAndFlagsBits = 0xD000000000000023;
    v50._object = (void *)0x80000001005751A0;
    v51._object = (void *)0x80000001005751C0;
    v52 = TTRLocalizedString(_:comment:)(v50, v51)._object;
    v53 = swift_allocObject(&unk_1006022C0, 72, 7);
    v54 = v79;
    *(_OWORD *)(v53 + 16) = v78;
    *(_OWORD *)(v53 + 32) = v54;
    *(_OWORD *)(v53 + 48) = v80;
    *(_QWORD *)(v53 + 64) = v2;
    swift_retain(v2);
    v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    v74 = sub_10034AEA0;
    v75 = v53;
    aBlock = _NSConcreteStackBlock;
    aBlock_8 = 1107296256;
    v72 = sub_1000D4884;
    v73 = &unk_1006022D8;
    v56 = _Block_copy(&aBlock);
    v57 = objc_msgSend(v40, "actionWithTitle:style:handler:", v55, 2, v56, swift_release(v75).n128_f64[0]);
    _Block_release(v56);

    objc_msgSend(v36, "addAction:", v49);
    objc_msgSend(v36, "addAction:", v57);
    v58 = sub_10001413C(v2 + 14, v2[17]);
    v59 = swift_unknownObjectWeakLoadStrong(*v58 + 16);
    if (v59)
    {
      v60 = v59;
      -[NSObject presentViewController:animated:completion:](v59, "presentViewController:animated:completion:", v36, 1, 0);

LABEL_14:
      return;
    }

  }
  else
  {
    sub_100334B9C(0, (uint64_t *)&v78, (uint64_t)v2);
    *(_QWORD *)&v82 = v78;
    sub_1000522B0(&v82);
    *((_QWORD *)&v82 + 1) = v80;
    sub_1000522B0((_QWORD *)&v82 + 1);
    aBlock = (void **)*((_QWORD *)&v80 + 1);
    sub_1000522B0(&aBlock);
  }
}

void sub_10033257C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v30;
  char v31[80];
  char v32[24];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v32, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v9 = Strong;
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v10 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    v11 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v11, v31);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x746E656D75677261;
    *(_QWORD *)(inited + 40) = 0xE900000000000073;
    v13 = TTRAccountsListsInteractorDeleteArguments.description.getter();
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v13;
    *(_QWORD *)(inited + 56) = v14;
    v15 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"Delete list {arguments: %@}", 27, 2, v15);
    swift_bridgeObjectRelease(v15);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    static TTRLocalizableStrings.AccountsList.deleteListUndoAction.getter(v16);
    v18 = v17;
    v19 = (void *)objc_opt_self(TTRUndoManager);
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    v21 = *a2;
    v22 = a2[5];
    v34 = a2[4];
    v35 = v21;
    v33 = v22;
    v23 = swift_allocObject(&unk_100601DE8, 72, 7);
    *(_QWORD *)(v23 + 16) = v9;
    v24 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(v23 + 24) = *(_OWORD *)a2;
    *(_OWORD *)(v23 + 40) = v24;
    *(_OWORD *)(v23 + 56) = *((_OWORD *)a2 + 2);
    v25 = swift_allocObject(&unk_100601E10, 32, 7);
    *(_QWORD *)(v25 + 16) = sub_10034A2B4;
    *(_QWORD *)(v25 + 24) = v23;
    aBlock[4] = sub_1000381EC;
    v30 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100601E28;
    v26 = _Block_copy(aBlock);
    v27 = v30;
    swift_retain(v9);
    sub_10002DF4C(&v35);
    sub_10002DF4C(&v34);
    sub_10002DF4C(&v33);
    swift_retain(v25);
    objc_msgSend(v19, "withActionName:block:", v20, v26, swift_release(v27).n128_f64[0]);

    swift_release(v9);
    _Block_release(v26);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 114, 437, 55, 1);
    swift_release(v23);
    swift_release(v25);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_100332878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t ObjectType;
  Swift::OpaquePointer v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  void (*v10)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 64), a2);
  v6._rawValue = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = v7;
  v14[3] = &type metadata for TTRAccountsListsInteractorDeleteArguments;
  v14[4] = sub_10034A268();
  v8 = (_OWORD *)swift_allocObject(&unk_100601E60, 64, 7);
  v14[0] = v8;
  v9 = *(_OWORD *)(a2 + 16);
  v8[1] = *(_OWORD *)a2;
  v8[2] = v9;
  v8[3] = *(_OWORD *)(a2 + 32);
  v10 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 136);
  swift_bridgeObjectRetain(v6._rawValue);
  sub_10002DF4C(&v16);
  sub_10002DF4C(&v15);
  v10(v14, 0, ObjectType, v4);
  sub_100027F10(v14);
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
      if (Strong)
      {
        v13 = Strong;
        sub_100347F84(Strong);
        swift_unknownObjectRelease(v13);
      }
    }
    else
    {
      v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      v14[0] = v11;
      type metadata accessor for TTRIPrivacyChecker(0);
      swift_retain(v11);
      TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(v6);
      swift_release(v11);
    }
  }
}

uint64_t sub_1003329C0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  Swift::Bool v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  _QWORD *v19;
  void *Strong;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;

  v3 = v2;
  if ((a1 & 1) == 0)
  {
    v5 = 2;
    goto LABEL_6;
  }
  swift_retain();
  v5 = 1;
  v6 = TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(1);
  v7 = swift_release();
  if (!v6)
  {
LABEL_6:
    v22 = *(_QWORD *)(v2 + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 64), a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 32))(v5, a2, ObjectType);
    return 1;
  }
  static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter(v7);
  v9 = v8;
  static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v17, 1, 0);

  objc_msgSend(v14, "addAction:", v18);
  v19 = sub_10001413C((_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 136));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v19 + 16);
  if (Strong)
  {
    v21 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_100332B7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_10032E598(a2, 1, a3 & 1, 1);
    return swift_release(v7);
  }
  return result;
}

void sub_100332BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_100332C88 + 4 * byte_10052E7D3[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

void sub_100332C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655F30);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.fault.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Trying to edit unexpected item", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

}

void sub_100332E50(void **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void *v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  Swift::String_optional v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void *v64;
  _BYTE v65[80];

  v2 = v1;
  v63 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  v4 = *(_QWORD *)(v63 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v63);
  v61 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (char *)&v61 - v7;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v12 = sub_100012DC4(v8, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v65);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v15 = *a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v15;
  v16 = v15;
  v17 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Edit List Details {objectID: %@}", 32, 2, v17);
  swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = *(_QWORD *)(v2 + 184);
  swift_retain(v18);
  v19 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
  v20 = swift_release(v18);
  if (v19)
  {
    v22 = v62;
    v21 = v63;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v62, enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:), v63, v20);
    v23 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 40);
    v24 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v24 + 16, v2);
    v25 = v61;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v61, v22, v21);
    v26 = *(unsigned __int8 *)(v4 + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject(&unk_100601938, v27 + v5, v26 | 7);
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v28 + v27, v25, v21);
    v29 = swift_allocObject(&unk_100601960, 32, 7);
    *(_QWORD *)(v29 + 16) = sub_100286C14;
    *(_QWORD *)(v29 + 24) = v28;
    swift_retain(v23);
    v30 = v19;
    v31 = (void *)zalgo.getter(v30);
    v32 = dispatch thunk of Promise.then<A>(on:closure:)(v31, sub_10034BD28, v29, (char *)&type metadata for () + 8);
    swift_release(v32);
    swift_release(v23);
    swift_release(v29);

    v33 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v22, v21);
    v34 = (uint64_t *)TTRITipKitSignalContext.AccountsList.SwipeCell.list.unsafeMutableAddressor(v33);
LABEL_7:
    v50 = *v34;
    v51 = (void *)v34[1];
    swift_bridgeObjectRetain(v51);
    v52.value._countAndFlagsBits = v50;
    v52.value._object = v51;
    TTRITipKitSignal.donate(signalContext:)(v52);

    swift_bridgeObjectRelease(v51);
    return;
  }
  v35 = *(_QWORD *)(v2 + 184);
  swift_retain(v35);
  v36 = (void *)TTRAccountsListsViewModel.remSmartList(for:)(a1);
  v37 = swift_release(v35);
  if (v36)
  {
    v39 = v62;
    v38 = v63;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v62, enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:), v63, v37);
    v40 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 40);
    v41 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v41 + 16, v2);
    v42 = v61;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v61, v39, v38);
    v43 = *(unsigned __int8 *)(v4 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(&unk_1006018E8, v44 + v5, v43 | 7);
    *(_QWORD *)(v45 + 16) = v41;
    *(_QWORD *)(v45 + 24) = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v45 + v44, v42, v38);
    v46 = swift_allocObject(&unk_100601910, 32, 7);
    *(_QWORD *)(v46 + 16) = sub_100286E40;
    *(_QWORD *)(v46 + 24) = v45;
    swift_retain(v40);
    v30 = v36;
    v47 = (void *)zalgo.getter(v30);
    v48 = dispatch thunk of Promise.then<A>(on:closure:)(v47, sub_1002DAD00, v46, (char *)&type metadata for () + 8);
    swift_release(v48);
    swift_release(v40);
    swift_release(v46);

    v49 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v39, v38);
    v34 = (uint64_t *)TTRITipKitSignalContext.AccountsList.SwipeCell.smartList.unsafeMutableAddressor(v49);
    goto LABEL_7;
  }
  v53 = v16;
  sub_100076C08((uint64_t)a1);
  v54 = sub_100076C08((uint64_t)a1);
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v58 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v57 = 138412290;
    v64 = v53;
    v59 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v57 + 4, v57 + 12);
    *v58 = v53;
    sub_100075FE8((uint64_t)a1);
    sub_100075FE8((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to find REMList or REMSmartList -- failed to edit list {list.objectID: %@}", v57, 0xCu);
    v60 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v58, 1, v60);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);
  }
  else
  {
    sub_100075FE8((uint64_t)a1);
    sub_100075FE8((uint64_t)a1);
  }

}

void sub_100333404(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void *v33;
  NSObject *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  void *Strong;
  void *v45;
  _QWORD *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  id v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  id v68;
  id v69;
  _BYTE v70[88];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v70);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = (void *)a1[6];
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v11;
  v12 = v11;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Edit Group Details {objectID: %@}", 33, 2, v13);
  swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v2[23];
  swift_retain(v14);
  v15 = TTRAccountsListsViewModel.remList(for:)(a1);
  swift_release(v14);
  if (!v15)
    goto LABEL_11;
  v68 = v12;
  v16 = v2[23];
  swift_retain(v16);
  v17 = -[NSObject account](v15, "account");
  v18 = objc_msgSend(v17, "objectID");

  v19 = TTRAccountsListsViewModel.account(with:)(v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v16);

  if (!v21)
  {
LABEL_10:

    v12 = v68;
LABEL_11:
    sub_100347944(a1);
    v46 = sub_100347944(a1);
    v34 = Logger.logObject.getter(v46);
    v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v48 = 138412290;
      v69 = v12;
      v50 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v48 + 4, v48 + 12);
      *v49 = v12;
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v34, v47, "Failed to find models group -- failed to edit group {group.objectID: %@}", v48, 0xCu);
      v51 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v49, 1, v51);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
    }
    goto LABEL_19;
  }
  v26 = v21;
  v67 = v15;
  v27 = v2[23];
  v28 = v25 & 0x101010101FFLL;
  swift_retain(v27);
  v29 = (void *)TTRAccountsListsViewModel.remAccount(for:)(v19, v26, v23, v25 & 0x101010101FFLL);
  swift_release(v27);
  if (!v29)
  {
    sub_1001BDB7C(v19, v26, v23);
    v15 = v67;
    goto LABEL_10;
  }
  v65 = v26;
  v66 = v23;
  v64 = v25;
  v31 = v2[9];
  ObjectType = swift_getObjectType(v2[8], v30);
  v33 = (void *)(*(uint64_t (**)(NSObject *, uint64_t, uint64_t))(v31 + 104))(v67, ObjectType, v31);
  v34 = objc_msgSend(v33, "saveRequest");
  v35 = objc_msgSend(v33, "sublistContext");
  if (v35)
  {
    v36 = v35;
    v37 = -[NSObject updateAccount:](v34, "updateAccount:", v29);
    v38 = v2[23];
    swift_retain(v38);
    v39 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)(v19, v65, v66, v28);
    swift_release(v38);
    v40 = v34;
    v41 = sub_100344E10(v39, v40);
    swift_bridgeObjectRelease(v39);

    v42 = *sub_10001413C(v2 + 14, v2[17]);
    v43 = sub_100343644(v37, v33, v36, (uint64_t)v41, (uint64_t)v2, 1);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v42 + 16);
    if (Strong)
    {
      v45 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v43, 1, 0);

      swift_bridgeObjectRelease(v41);
    }
    else
    {

      swift_bridgeObjectRelease(v41);
    }

    sub_1001BDB7C(v19, v65, v66);
    v34 = v67;
  }
  else
  {
    v62 = v33;
    sub_100347944(a1);
    v52 = sub_100347944(a1);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.fault.getter(v53);
    v63 = v53;
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v55 = 138412290;
      v61 = v19;
      v57 = v68;
      v69 = v68;
      v58 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v55 + 4, v55 + 12);
      *v56 = v57;
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
      v59 = v63;
      _os_log_impl((void *)&_mh_execute_header, v63, v54, "Tried to edit group without a sublist context {objectID: %@}", v55, 0xCu);
      v60 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v56, 1, v60);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      sub_1001BDB7C(v61, v65, v66);
    }
    else
    {

      sub_1001BDB7C(v19, v65, v66);
      sub_100075FA0((uint64_t)a1);
      sub_100075FA0((uint64_t)a1);
      v34 = v63;
    }
  }
LABEL_19:

}

void sub_100333AA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  _BYTE v7[224];

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v4, v5);
  v6 = (char *)sub_100333B3C + 4 * byte_10052E7E1[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

void sub_100333B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100655F30);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.fault.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Trying to share unexpected item", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

}

void sub_100333D58(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  id v26;
  const char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  id v33;
  unint64_t v34;
  __n128 v35;
  Class v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, NSObject *);
  id v38;
  char v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int *v47;
  NSObject *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  objc_class *v53;
  char *v54;
  char *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  char *v60;
  char *v61;
  id v62;
  void *v63;
  _QWORD *v64;
  void *Strong;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  double v84;
  unsigned int v85;
  BOOL v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  NSObject *v103;
  char *v104;
  Class v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  id *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  void *v126;
  Class isa;
  uint64_t v128;
  NSObject *v129;
  id aBlock;
  unint64_t v131[5];
  objc_super v132;
  id v133;
  uint64_t v134;
  char v135[88];

  v3 = v2;
  v122 = *v2;
  v6 = type metadata accessor for REMAnalyticsEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v123 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for REMUserOperation(0);
  isa = v129[-1].isa;
  __chkstk_darwin(v129);
  v125 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100656228);
  __chkstk_darwin(v10);
  v124 = (uint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v119 - v13;
  __chkstk_darwin(v15);
  v128 = (uint64_t)&v119 - v16;
  v17 = type metadata accessor for Logger(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 147) & 1) == 0)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    sub_100012DC4(v17, (uint64_t)qword_100655F30);
    sub_100076C08(a1);
    v21 = sub_100076C08(a1);
    v129 = Logger.logObject.getter(v21);
    v22 = static os_log_type_t.error.getter(v129);
    if (os_log_type_enabled(v129, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      aBlock = *(id *)a1;
      v25 = aBlock;
      v26 = aBlock;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v23 + 4, v23 + 12);
      *v24 = v25;
      sub_100075FE8(a1);
      sub_100075FE8(a1);
      v27 = "Cannot share list {list.objectID: %@}";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v129, v22, v27, v23, 0xCu);
      v52 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v24, 1, v52);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      return;
    }
LABEL_19:
    sub_100075FE8(a1);
    sub_100075FE8(a1);

    return;
  }
  v121 = v7;
  swift_retain();
  v28 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
  swift_release();
  v126 = v28;
  if (!v28)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    sub_100012DC4(v17, (uint64_t)qword_100655F30);
    sub_100076C08(a1);
    v49 = sub_100076C08(a1);
    v129 = Logger.logObject.getter(v49);
    v22 = static os_log_type_t.error.getter(v129);
    if (os_log_type_enabled(v129, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      aBlock = *(id *)a1;
      v50 = aBlock;
      v51 = aBlock;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v23 + 4, v23 + 12);
      *v24 = v50;
      sub_100075FE8(a1);
      sub_100075FE8(a1);
      v27 = "Failed to find REMList -- failed to edit list {list.objectID: %@}";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v120 = v6;
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v29 = sub_100012DC4(v17, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v29, v17);
  v30 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v30, v135);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v32 = *(id *)a1;
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v32;
  v33 = v32;
  v34 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List share list {objectID: %@}", 40, 2, v34);
  v35 = swift_bridgeObjectRelease(v34);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v35);
  v36 = isa;
  v37 = (void (*)(uint64_t, uint64_t, uint64_t, NSObject *))*((_QWORD *)isa + 7);
  v37(v128, 1, 1, v129);
  v38 = objc_msgSend(v126, "account");
  v39 = REMAccount.listSharingUIType.getter();

  if (v39)
  {
    if (v39 == 1)
    {
      v40 = sub_10001413C(v3 + 14, v3[17]);
      v41 = v126;
      sub_100343DC8(v126, (uint64_t)v3, *v40);
      LODWORD(v41) = objc_msgSend(v41, "isShared");
      v42 = v128;
      sub_1000073A0(v128, &qword_100656228);
      v43 = enum case for REMSharedListUserOperationDetail.calDAVShare(_:);
      v44 = type metadata accessor for REMSharedListUserOperationDetail(0);
      v45 = *(_QWORD *)(v44 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v14, v43, v44);
      v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
      v36 = isa;
      v46(v14, 0, 1, v44);
      v47 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
      if (!(_DWORD)v41)
        v47 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
      v48 = v129;
      (*((void (**)(char *, _QWORD, NSObject *))v36 + 13))(v14, *v47, v129);
      v37((uint64_t)v14, 0, 1, v48);
      sub_10000F614((uint64_t)v14, v42, &qword_100656228);
    }
    else
    {
      v73 = v126;
      v74 = Logger.logObject.getter(v73);
      v75 = static os_log_type_t.fault.getter(v74);
      if (os_log_type_enabled(v74, v75))
      {
        v76 = swift_slowAlloc(32, -1);
        v77 = (_QWORD *)swift_slowAlloc(8, -1);
        v119 = v77;
        v78 = swift_slowAlloc(64, -1);
        v134 = v78;
        *(_DWORD *)v76 = 138412802;
        v79 = objc_msgSend(v73, "objectID");
        aBlock = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v76 + 4, v76 + 12);
        *v77 = v79;
        *(_WORD *)(v76 + 12) = 2080;
        aBlock = 0;
        v131[0] = 0xE000000000000000;
        v80 = objc_msgSend(v73, "account");
        v81 = objc_msgSend(v80, "type");

        v133 = v81;
        type metadata accessor for REMAccountType(0);
        _print_unlocked<A, B>(_:_:)(&v133, &aBlock, v82, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v83 = v131[0];
        aBlock = (id)sub_100027E40((uint64_t)aBlock, v131[0], &v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v76 + 14, v76 + 22);

        *(_QWORD *)&v84 = swift_bridgeObjectRelease(v83).n128_u64[0];
        *(_WORD *)(v76 + 22) = 2080;
        aBlock = 0;
        v131[0] = 0xE000000000000000;
        v85 = objc_msgSend(v73, "canBeShared", v84);
        v86 = v85 == 0;
        if (v85)
          v87 = 1702195828;
        else
          v87 = 0x65736C6166;
        if (v86)
          v88 = 0xE500000000000000;
        else
          v88 = 0xE400000000000000;
        v89 = v88;
        String.append(_:)(*(Swift::String *)&v87);
        swift_bridgeObjectRelease(v88);
        v90 = v131[0];
        aBlock = (id)sub_100027E40((uint64_t)aBlock, v131[0], &v134);
        v36 = isa;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v131, v76 + 24, v76 + 32);

        swift_bridgeObjectRelease(v90);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "Trying to share a list that doesn't support sharing. Probably list.canBeShared is wrong. {listID: %@, accountType: %s, canBeShared: %s}", (uint8_t *)v76, 0x20u);
        v91 = sub_10002A750(&qword_100642D60);
        v92 = v119;
        swift_arrayDestroy(v119, 1, v91);
        swift_slowDealloc(v92, -1, -1);
        swift_arrayDestroy(v78, 2, &type metadata for Any[8]);
        swift_slowDealloc(v78, -1, -1);
        swift_slowDealloc(v76, -1, -1);

      }
      else
      {

      }
      v48 = v129;
      v42 = v128;
    }
    goto LABEL_42;
  }
  if (!objc_msgSend(v126, "isShared") || (a2 & 1) != 0)
  {
    sub_10001413C(v3 + 14, v3[17]);
    sub_1001E57E0(v126);
    v42 = v128;
    sub_1000073A0(v128, &qword_100656228);
    v93 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    v94 = type metadata accessor for REMSharedListUserOperationDetail(0);
    v95 = *(_QWORD *)(v94 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 104))(v42, v93, v94);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v42, 0, 1, v94);
    v36 = isa;
    v48 = v129;
    (*((void (**)(uint64_t, _QWORD, NSObject *))isa + 13))(v42, enum case for REMUserOperation.startSharedList(_:), v129);
LABEL_41:
    v37(v42, 0, 1, v48);
    goto LABEL_42;
  }
  v53 = (objc_class *)type metadata accessor for TTRIListSharingController();
  v54 = (char *)objc_allocWithZone(v53);
  v55 = &v54[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate];
  *((_QWORD *)v55 + 1) = 0;
  swift_unknownObjectWeakInit(v55, 0);
  v56 = v126;
  *(_QWORD *)&v54[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list] = v126;
  v132.receiver = v54;
  v132.super_class = v53;
  v57 = v56;
  v58 = objc_msgSendSuper2(&v132, "init");
  v59 = (void *)v3[19];
  v3[19] = v58;
  v60 = (char *)v58;

  v61 = &v60[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate];
  *((_QWORD *)v61 + 1) = &off_100600FA8;
  swift_unknownObjectWeakAssign(v61, v3);
  v62 = sub_1004B1360();
  v48 = v129;
  v42 = v128;
  if (v62)
  {
    v63 = v62;
    v64 = sub_10001413C(v3 + 14, v3[17]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v64 + 16);
    if (Strong)
    {
      v66 = Strong;
      v67 = objc_msgSend(Strong, "presentedViewController");
      if (v67)
      {
        v68 = v67;
        v69 = swift_allocObject(&unk_100601988, 33, 7);
        *(_QWORD *)(v69 + 16) = v66;
        *(_QWORD *)(v69 + 24) = v63;
        *(_BYTE *)(v69 + 32) = 1;
        v131[3] = (unint64_t)sub_10017C1E8;
        v131[4] = v69;
        aBlock = _NSConcreteStackBlock;
        v131[0] = 1107296256;
        v131[1] = (unint64_t)sub_100006378;
        v131[2] = (unint64_t)&unk_1006019A0;
        v70 = _Block_copy(&aBlock);
        v71 = v66;
        v72 = v63;
        objc_msgSend(v68, "dismissViewControllerAnimated:completion:", 1, v70, swift_release().n128_f64[0]);

        _Block_release(v70);
      }
      else
      {
        objc_msgSend(v66, "presentViewController:animated:completion:", v63, 1, 0);

      }
    }
    else
    {

    }
    sub_1000073A0(v42, &qword_100656228);
    v96 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
    v97 = type metadata accessor for REMSharedListUserOperationDetail(0);
    v98 = *(_QWORD *)(v97 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 104))(v42, v96, v97);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56))(v42, 0, 1, v97);
    v36 = isa;
    (*((void (**)(uint64_t, _QWORD, NSObject *))isa + 13))(v42, enum case for REMUserOperation.manageSharedList(_:), v48);
    goto LABEL_41;
  }

  v36 = isa;
LABEL_42:
  v99 = v124;
  sub_10000735C(v42, v124, &qword_100656228);
  if ((*((unsigned int (**)(uint64_t, uint64_t, NSObject *))v36 + 6))(v99, 1, v48) == 1)
  {
    sub_1000073A0(v42, &qword_100656228);

    v100 = v99;
  }
  else
  {
    v101 = v125;
    (*((void (**)(char *, uint64_t, NSObject *))v36 + 4))(v125, v99, v48);
    type metadata accessor for REMAnalyticsManager(0);
    static REMAnalyticsManager.shared.getter();
    v102 = sub_10002A750(&qword_100649F98);
    v103 = v48;
    v104 = v123;
    v105 = v36;
    v106 = (uint64_t *)&v123[*(int *)(v102 + 48)];
    v107 = &v123[*(int *)(v102 + 80)];
    v108 = (*((uint64_t (**)(char *, char *, NSObject *))v105 + 2))(v123, v101, v103);
    v109 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v108);
    v110 = *v109;
    v111 = TTRUserDefaults.activitySessionId.getter(v110);
    v113 = v112;

    *v106 = v111;
    v106[1] = v113;
    v114 = *v109;
    TTRUserDefaults.activitySessionBeginTime.getter();

    *(_QWORD *)v107 = _typeName(_:qualified:)(v122, 0);
    *((_QWORD *)v107 + 1) = v115;
    v116 = v121;
    v117 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v104, enum case for REMAnalyticsEvent.userOperation(_:), v120);
    REMAnalyticsManager.post(event:)(v104);

    v118 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v104, v117, v118);
    (*((void (**)(char *, NSObject *))v105 + 1))(v125, v129);
    v100 = v128;
  }
  sub_1000073A0(v100, &qword_100656228);
}

void sub_100334B9C(char a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[128];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v10 = sub_100012DC4(v6, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v11, v32);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x746E656D75677261;
  *(_QWORD *)(inited + 40) = 0xE900000000000073;
  *(_QWORD *)(inited + 48) = TTRAccountsListsInteractorDeleteArguments.description.getter();
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x7473694C7065656BLL;
  *(_QWORD *)(inited + 88) = 0xE900000000000073;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  v14 = a1 & 1;
  *(_BYTE *)(inited + 96) = a1 & 1;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Delete group {arguments: %@, keepLists: %d}", 43, 2, v15);
  swift_bridgeObjectRelease(v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static TTRLocalizableStrings.UndoAction.deleteGroup.getter(v16);
  v18 = v17;
  v19 = (void *)objc_opt_self(TTRUndoManager);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  v21 = *a2;
  v22 = a2[5];
  v34 = a2[4];
  v35 = v21;
  v33 = v22;
  v23 = swift_allocObject(&unk_100602310, 73, 7);
  *(_QWORD *)(v23 + 16) = a3;
  v24 = *((_OWORD *)a2 + 1);
  *(_OWORD *)(v23 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v23 + 40) = v24;
  *(_OWORD *)(v23 + 56) = *((_OWORD *)a2 + 2);
  *(_BYTE *)(v23 + 72) = v14;
  v25 = swift_allocObject(&unk_100602338, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_10034AF00;
  *(_QWORD *)(v25 + 24) = v23;
  aBlock[4] = sub_1000381EC;
  v31 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100602350;
  v26 = _Block_copy(aBlock);
  v27 = v31;
  swift_retain(a3);
  sub_10002DF4C(&v35);
  sub_10002DF4C(&v34);
  sub_10002DF4C(&v33);
  swift_retain(v25);
  objc_msgSend(v19, "withActionName:block:", v20, v26, swift_release(v27).n128_f64[0]);

  _Block_release(v26);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 114, 640, 55, 1);
  swift_release(v23);
  swift_release(v25);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_100334EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t ObjectType;
  Swift::OpaquePointer v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 64), a2);
  v8._rawValue = *(void **)a2;
  v9 = *(_QWORD *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = v9;
  v16[3] = &type metadata for TTRAccountsListsInteractorDeleteArguments;
  v16[4] = sub_10034A268();
  v10 = (_OWORD *)swift_allocObject(&unk_100601E60, 64, 7);
  v16[0] = v10;
  v11 = *(_OWORD *)(a2 + 16);
  v10[1] = *(_OWORD *)a2;
  v10[2] = v11;
  v10[3] = *(_OWORD *)(a2 + 32);
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 136);
  swift_bridgeObjectRetain(v8._rawValue);
  sub_10002DF4C(&v18);
  sub_10002DF4C(&v17);
  v12(v16, a3, ObjectType, v6);
  sub_100027F10(v16);
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(a1 + 32);
      if (Strong)
      {
        v15 = Strong;
        sub_100347F84(Strong);
        swift_unknownObjectRelease(v15);
      }
    }
    else
    {
      v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
      v16[0] = v13;
      type metadata accessor for TTRIPrivacyChecker(0);
      swift_retain(v13);
      TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(v8);
      swift_release(v13);
    }
  }
}

void sub_100335000(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  _QWORD *v25;
  void *Strong;
  void *v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v28 = *v2;
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter();
  v6 = v5;
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)(a2);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v9, v10, 1);

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = (void *)objc_opt_self(UIAlertAction);
  v16 = objc_msgSend(v15, "actionWithTitle:style:handler:", v14, 1, 0);

  static TTRLocalizableStrings.Common.alertDeleteButton.getter(objc_msgSend(v11, "addAction:", v16));
  v18 = v17;
  v19 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v19 + 16, v2);
  v20 = (_QWORD *)swift_allocObject(&unk_100601A28, 40, 7);
  v20[2] = v19;
  v20[3] = a1;
  v20[4] = v28;
  swift_retain(v19);
  v21 = a1;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  aBlock[4] = sub_100349E0C;
  v30 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D4884;
  aBlock[3] = &unk_100601A40;
  v23 = _Block_copy(aBlock);
  v24 = objc_msgSend(v15, "actionWithTitle:style:handler:", v22, 2, v23, swift_release(v30).n128_f64[0]);
  _Block_release(v23);
  swift_release(v19);

  objc_msgSend(v11, "addAction:", v24);
  v25 = sub_10001413C(v2 + 14, v2[17]);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v25 + 16);
  if (Strong)
  {
    v27 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v11, 1, 0);

    v16 = v24;
    v24 = v27;
  }

}

uint64_t sub_100335298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  void **v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  unint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50[24];

  v7 = type metadata accessor for REMAnalyticsEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v50, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v12 = result;
    v13 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(result);
    v47 = a3;
    v14 = *v13;
    type metadata accessor for REMAnalyticsManager(0);
    v44 = v14;
    v46 = static REMAnalyticsManager.shared.getter();
    v15 = sub_10002A750(&qword_100649F98);
    v16 = *(int *)(v15 + 48);
    v45 = a4;
    v17 = &v10[v16];
    v18 = &v10[*(int *)(v15 + 80)];
    v19 = enum case for REMRDLUserOperationDetail.rdl_permanentlyDeleteAll(_:);
    v20 = type metadata accessor for REMRDLUserOperationDetail(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v10, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v10, 0, 1, v20);
    v22 = enum case for REMUserOperation.permanentlyDeleteReminder(_:);
    v23 = type metadata accessor for REMUserOperation(0);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v10, v22, v23);
    v25 = v44;
    *(_QWORD *)v17 = TTRUserDefaults.activitySessionId.getter(v24);
    *((_QWORD *)v17 + 1) = v26;
    v27 = v25;
    TTRUserDefaults.activitySessionBeginTime.getter();
    v48 = 0;
    v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    v28 = v49;
    v29 = _typeName(_:qualified:)(v45, 0);
    v31 = v30;
    swift_bridgeObjectRelease(v28);
    v48 = v29;
    v49 = v31;
    v32._countAndFlagsBits = 0x756F636341202D20;
    v32._object = (void *)0xEE007473694C746ELL;
    String.append(_:)(v32);
    v33 = v49;
    *(_QWORD *)v18 = v48;
    *((_QWORD *)v18 + 1) = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for REMAnalyticsEvent.userOperation(_:), v7);
    v34 = v46;
    REMAnalyticsManager.post(event:)(v10);
    v35 = swift_release(v34);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v35);
    v37 = *(_QWORD *)(v12 + 64);
    v36 = *(_QWORD *)(v12 + 72);
    ObjectType = swift_getObjectType(v37, v38);
    v40 = *(_QWORD *)(v36 + 8);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v40 + 72);
    v42 = swift_unknownObjectRetain(v37);
    v41(v47, ObjectType, v40, v42);
    swift_release(v12);

    return swift_unknownObjectRelease(v37);
  }
  return result;
}

id sub_10033550C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t (*v9)(_QWORD);
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  _QWORD v31[6];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];

  v3 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v3);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v6);
  v8 = (__int128 *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = v8[11];
    v42 = v8[10];
    v43 = v10;
    v44[0] = v8[12];
    *(_OWORD *)((char *)v44 + 10) = *(__int128 *)((char *)v8 + 202);
    v11 = v8[7];
    v38 = v8[6];
    v39 = v11;
    v12 = v8[9];
    v40 = v8[8];
    v41 = v12;
    v13 = v8[3];
    v34 = v8[2];
    v35 = v13;
    v14 = v8[5];
    v36 = v8[4];
    v37 = v14;
    v15 = v8[1];
    v32 = *v8;
    v33 = v15;
    v16 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v16 + 16, v1);
    v17 = swift_allocObject(&unk_100601F78, 242, 7);
    v18 = v43;
    *(_OWORD *)(v17 + 184) = v42;
    *(_OWORD *)(v17 + 200) = v18;
    *(_OWORD *)(v17 + 216) = v44[0];
    *(_OWORD *)(v17 + 226) = *(_OWORD *)((char *)v44 + 10);
    v19 = v39;
    *(_OWORD *)(v17 + 120) = v38;
    *(_OWORD *)(v17 + 136) = v19;
    v20 = v41;
    *(_OWORD *)(v17 + 152) = v40;
    *(_OWORD *)(v17 + 168) = v20;
    v21 = v35;
    *(_OWORD *)(v17 + 56) = v34;
    *(_OWORD *)(v17 + 72) = v21;
    v22 = v37;
    *(_OWORD *)(v17 + 88) = v36;
    *(_OWORD *)(v17 + 104) = v22;
    v23 = v33;
    *(_OWORD *)(v17 + 24) = v32;
    *(_QWORD *)(v17 + 16) = v16;
    v24 = sub_10034A3E4;
    *(_OWORD *)(v17 + 40) = v23;
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v25 = v5[*(int *)(v3 + 20)];
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v26 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v26 + 16, v1);
    v17 = swift_allocObject(&unk_100601FC8, 25, 7);
    *(_QWORD *)(v17 + 16) = v26;
    *(_BYTE *)(v17 + 24) = v25;
    v24 = sub_10034A3F0;
  }
  v27 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v31[4] = v24;
  v31[5] = v17;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 1107296256;
  v31[2] = sub_100172B74;
  v31[3] = &unk_100601F90;
  v28 = _Block_copy(v31);
  swift_retain_n(v17, 2);
  v29 = objc_msgSend(v27, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v28, swift_release().n128_f64[0]);
  swift_release();
  _Block_release(v28);
  swift_release();
  return v29;
}

UIMenu sub_1003357EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::OpaquePointer v21;
  UIMenuElementSize preferredElementSize;
  _BYTE v23[24];
  UIImage_optional v24;

  v4 = a2 + 16;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v5 = static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  v10 = swift_allocObject(&unk_100601370, 24, 7);
  swift_beginAccess(v4, v23, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  swift_weakInit(v10 + 16, Strong);
  swift_release();
  v12 = swift_allocObject(&unk_100601FF0, 25, 7);
  *(_QWORD *)(v12 + 16) = v10;
  *(_BYTE *)(v12 + 24) = a3;
  v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v5, v7, 0, 0, v9, 0, 0, 0, 0, 0, 0, sub_10034A3FC, v12);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v14 = TTRListType.PredefinedSmartListType.longTitle.getter(a3);
  v16 = v15;
  v17 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v18 = swift_allocObject(v17, 40, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100521140;
  *(_QWORD *)(v18 + 32) = v13;
  preferredElementSize = v18;
  specialized Array._endMutation()(v18);
  v19._countAndFlagsBits = v14;
  v19._object = v16;
  v24.value.super.isa = 0;
  v24.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v24, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v21);
}

uint64_t sub_1003359D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + 64), v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 32))(2, a3, ObjectType);
    return swift_release(v7);
  }
  return result;
}

Class sub_100335A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  Class v5;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  if (!swift_weakLoadStrong(v4))
    return 0;
  v5 = sub_100335AC8(a3, *(_BYTE *)(a3 + 216));
  swift_release();
  return v5;
}

Class sub_100335AC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  id v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  double v49;
  id v50;
  id v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t countAndFlagsBits;
  void *object;
  NSString v57;
  char v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  id v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  void *v77;
  Swift::String v78;
  Swift::String v79;
  Swift::String v80;
  NSString v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  id v91;
  id v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  NSString v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  id v110;
  id v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  Swift::String v115;
  Class isa;
  Swift::OpaquePointer children;
  char v119;
  char v120;
  char v121;
  UIImage_optional v122;

  v3 = v2;
  sub_100349FE8(a1 + 146, (uint64_t)&v120);
  sub_100349FE8((uint64_t)&v120, (uint64_t)&v121);
  if (v121 == 2)
  {
    if ((*(_BYTE *)(a1 + 145) & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v6 = v121 & 1;
    if ((v121 & 1) != 0)
    {
      v11 = String._bridgeToObjectiveC()();
      v8 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v11);

      v9 = static TTRLocalizableStrings.AccountsList.unpinText.getter();
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v8 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v7);

      v9 = static TTRLocalizableStrings.AccountsList.pinText.getter();
    }
    v12 = v9;
    v13 = v10;
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v14 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v14 + 16, v3);
    v15 = swift_allocObject(&unk_100602018, 250, 7);
    *(_BYTE *)(v15 + 16) = v6;
    *(_QWORD *)(v15 + 24) = v14;
    v16 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v15 + 192) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v15 + 208) = v16;
    *(_OWORD *)(v15 + 224) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v15 + 234) = *(_OWORD *)(a1 + 202);
    v17 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v15 + 128) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v15 + 144) = v17;
    v18 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v15 + 160) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v15 + 176) = v18;
    v19 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v15 + 64) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v15 + 80) = v19;
    v20 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v15 + 96) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v15 + 112) = v20;
    v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v15 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v15 + 48) = v21;
    v22 = v8;
    sub_100076C08(a1);
    v23 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12, v13, 0, 0, v8, 0, 0, 0, 0, 0, 0, sub_10034A494, v15);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v26);

    if ((*(_BYTE *)(a1 + 145) & 1) == 0)
    {
LABEL_3:
      if ((*(_BYTE *)(a1 + 147) & 1) == 0)
        goto LABEL_33;
      goto LABEL_17;
    }
  }
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v27);

  if ((a2 & 1) != 0)
    v29 = static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter();
  else
    v29 = static TTRLocalizableStrings.AccountsList.showListInfoText.getter();
  v31 = v29;
  v32 = v30;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v33 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v33 + 16, v3);
  v34 = swift_allocObject(&unk_1006020B8, 242, 7);
  v35 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v34 + 184) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v34 + 200) = v35;
  *(_OWORD *)(v34 + 216) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v34 + 226) = *(_OWORD *)(a1 + 202);
  v36 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v34 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v34 + 136) = v36;
  v37 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v34 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v34 + 168) = v37;
  v38 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 72) = v38;
  v39 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v34 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v34 + 104) = v39;
  v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v34 + 16) = v33;
  *(_OWORD *)(v34 + 40) = v40;
  sub_100076C08(a1);
  v41 = v28;
  v42 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v31, v32, 0, 0, v28, 0, 0, 0, 0, 0, 0, sub_10034A5A4, v34);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v44 >= v43 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
  v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
  specialized Array._endMutation()(v45);

  if ((*(_BYTE *)(a1 + 147) & 1) != 0)
  {
LABEL_17:
    v119 = a2;
    v46 = *(_BYTE *)(a1 + 148);
    if ((v46 & 1) == 0)
      goto LABEL_21;
    v47 = *(_QWORD *)(v3 + 184);
    swift_retain(v47);
    v48 = (void *)TTRAccountsListsViewModel.remList(for:)(a1);
    *(_QWORD *)&v49 = swift_release(v47).n128_u64[0];
    if (!v48)
      goto LABEL_21;
    v50 = objc_msgSend(v48, "account", v49);

    v51 = objc_msgSend(v50, "accountTypeHost");
    LODWORD(v50) = objc_msgSend(v51, "isCalDav");

    if ((_DWORD)v50)
    {
      v52._countAndFlagsBits = 0xD00000000000002DLL;
      v53._object = (void *)0x8000000100561EF0;
      v52._object = (void *)0x8000000100574EC0;
      v53._countAndFlagsBits = 0xD000000000000012;
      v54 = TTRLocalizedString(_:comment:)(v53, v52);
      countAndFlagsBits = v54._countAndFlagsBits;
      object = v54._object;
      v57 = String._bridgeToObjectiveC()();
      v58 = 1;
    }
    else
    {
LABEL_21:
      v59._countAndFlagsBits = 0xD000000000000025;
      v59._object = (void *)0x8000000100574E90;
      v60._countAndFlagsBits = 0x694C206572616853;
      v60._object = (void *)0xEA00000000007473;
      v61 = TTRLocalizedString(_:comment:)(v60, v59);
      countAndFlagsBits = v61._countAndFlagsBits;
      object = v61._object;
      v57 = String._bridgeToObjectiveC()();
      v58 = 0;
    }
    v62 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v57);

    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v63 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v63 + 16, v3);
    v64 = swift_allocObject(&unk_100602068, 242, 7);
    v65 = *(_OWORD *)(a1 + 176);
    *(_OWORD *)(v64 + 184) = *(_OWORD *)(a1 + 160);
    *(_OWORD *)(v64 + 200) = v65;
    *(_OWORD *)(v64 + 216) = *(_OWORD *)(a1 + 192);
    *(_OWORD *)(v64 + 226) = *(_OWORD *)(a1 + 202);
    v66 = *(_OWORD *)(a1 + 112);
    *(_OWORD *)(v64 + 120) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v64 + 136) = v66;
    v67 = *(_OWORD *)(a1 + 144);
    *(_OWORD *)(v64 + 152) = *(_OWORD *)(a1 + 128);
    *(_OWORD *)(v64 + 168) = v67;
    v68 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v64 + 56) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v64 + 72) = v68;
    v69 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v64 + 88) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v64 + 104) = v69;
    v70 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v64 + 24) = *(_OWORD *)a1;
    *(_QWORD *)(v64 + 16) = v63;
    *(_OWORD *)(v64 + 40) = v70;
    sub_100076C08(a1);
    v71 = v62;
    v72 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v62, 0, 0, 0, 0, 0, 0, sub_10034A4B8, v64);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v74 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v73 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v74 >= v73 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v72);
    specialized Array._endMutation()(v75);
    if ((v46 & 1) != 0)
      v76 = v58;
    else
      v76 = 1;
    if ((v76 & 1) != 0)
    {
      v77 = v71;
      v71 = v72;
    }
    else
    {
      v78._countAndFlagsBits = 0xD00000000000002DLL;
      v79._object = (void *)0x8000000100561EF0;
      v78._object = (void *)0x8000000100574EC0;
      v79._countAndFlagsBits = 0xD000000000000012;
      v80 = TTRLocalizedString(_:comment:)(v79, v78);
      v81 = String._bridgeToObjectiveC()();
      v82 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v81);

      v83 = swift_allocObject(&unk_100601370, 24, 7);
      swift_weakInit(v83 + 16, v3);
      v84 = swift_allocObject(&unk_100602090, 242, 7);
      v85 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(v84 + 184) = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(v84 + 200) = v85;
      *(_OWORD *)(v84 + 216) = *(_OWORD *)(a1 + 192);
      *(_OWORD *)(v84 + 226) = *(_OWORD *)(a1 + 202);
      v86 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(v84 + 120) = *(_OWORD *)(a1 + 96);
      *(_OWORD *)(v84 + 136) = v86;
      v87 = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(v84 + 152) = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(v84 + 168) = v87;
      v88 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v84 + 56) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v84 + 72) = v88;
      v89 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v84 + 88) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v84 + 104) = v89;
      v90 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v84 + 24) = *(_OWORD *)a1;
      *(_QWORD *)(v84 + 16) = v83;
      *(_OWORD *)(v84 + 40) = v90;
      sub_100076C08(a1);
      v91 = v82;
      v92 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v80._countAndFlagsBits, v80._object, 0, 0, v82, 0, 0, 0, 0, 0, 0, sub_10034A4E8, v84);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
      v94 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v93 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v94 >= v93 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
      v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v92);
      specialized Array._endMutation()(v95);

      v77 = v72;
    }

    a2 = v119;
  }
LABEL_33:
  v96 = String._bridgeToObjectiveC()();
  v97 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v96);

  if ((a2 & 1) != 0)
    v98 = static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter();
  else
    v98 = static TTRLocalizableStrings.RemindersList.deleteListActionText.getter();
  v100 = v98;
  v101 = v99;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v102 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v102 + 16, v3);
  v103 = swift_allocObject(&unk_100602040, 242, 7);
  v104 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v103 + 184) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v103 + 200) = v104;
  *(_OWORD *)(v103 + 216) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v103 + 226) = *(_OWORD *)(a1 + 202);
  v105 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v103 + 120) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v103 + 136) = v105;
  v106 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v103 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v103 + 168) = v106;
  v107 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v103 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v103 + 72) = v107;
  v108 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v103 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v103 + 104) = v108;
  v109 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v103 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v103 + 16) = v102;
  *(_OWORD *)(v103 + 40) = v109;
  sub_100076C08(a1);
  v110 = v97;
  v111 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v100, v101, 0, 0, v97, 0, 0, 0, 0, 2, 0, sub_10034A4A8, v103);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v111);
  v113 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v112 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v113 >= v112 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v112 > 1, v113 + 1, 1);
  v114 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v113, v111);
  specialized Array._endMutation()(v114);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  v122.value.super.isa = 0;
  v122.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v115, (Swift::String_optional)0, v122, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, children).super.super.isa;

  return isa;
}

unint64_t sub_1003365F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t (*v10)(_QWORD);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  id v52;
  NSString v53;
  void *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  id v71;
  NSString v72;
  void *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  Swift::String v79;
  Swift::String v80;
  void *object;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  id v91;
  NSString v92;
  void *v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  Swift::String v99;
  Swift::String v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  id v111;
  NSString v112;
  void *v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  id v130;
  NSString v131;
  void *v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v139;
  void **v140;
  uint64_t v141;
  uint64_t (*v142)(uint64_t, void *);
  void *v143;
  BOOL (*v144)(uint64_t);
  uint64_t v145;
  unint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _BYTE v159[26];
  char v160;
  _BYTE v161[17];

  v2 = v1;
  v4 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v7);
  v9 = (__int128 *)((char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v146 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10002B1E8(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    v11 = v9[10];
    v12 = v9[12];
    v158 = v9[11];
    *(_OWORD *)v159 = v12;
    *(_OWORD *)&v159[10] = *(__int128 *)((char *)v9 + 202);
    v13 = v9[6];
    v14 = v9[8];
    v15 = v9[9];
    v154 = v9[7];
    v155 = v14;
    v156 = v15;
    v157 = v11;
    v16 = v9[3];
    v149 = v9[2];
    v150 = v16;
    v17 = v9[5];
    v151 = v9[4];
    v152 = v17;
    v153 = v13;
    v18 = v9[1];
    v147 = *v9;
    v148 = v18;
    sub_100349FE8((uint64_t)&v156 + 2, (uint64_t)&v160);
    v19 = sub_100349FE8((uint64_t)&v160, (uint64_t)v161);
    if (v161[0] == 2)
    {
      if ((BYTE1(v156) & 1) == 0)
        goto LABEL_4;
    }
    else
    {
      v35 = v161[0] & 1;
      if ((v161[0] & 1) != 0)
      {
        static TTRLocalizableStrings.AccountsList.unpinText.getter(v19);
        v38 = v40;
        v39 = 0x73616C732E6E6970;
        v36 = 0xE900000000000068;
      }
      else
      {
        v36 = 0xE300000000000000;
        static TTRLocalizableStrings.AccountsList.pinText.getter(v19);
        v38 = v37;
        v39 = 7235952;
      }
      sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
      v41 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(v39, v36);
      swift_bridgeObjectRelease(v36);
      v42 = swift_allocObject(&unk_100601370, 24, 7);
      swift_weakInit(v42 + 16, v2);
      v43 = swift_allocObject(&unk_100601B40, 250, 7);
      v44 = v158;
      v45 = *(_OWORD *)v159;
      v46 = v156;
      *(_OWORD *)(v43 + 192) = v157;
      *(_OWORD *)(v43 + 208) = v44;
      *(_OWORD *)(v43 + 224) = v45;
      *(_OWORD *)(v43 + 234) = *(_OWORD *)&v159[10];
      v47 = v154;
      v48 = v155;
      v49 = v152;
      *(_OWORD *)(v43 + 128) = v153;
      *(_OWORD *)(v43 + 144) = v47;
      *(_QWORD *)(v43 + 16) = v42;
      *(_BYTE *)(v43 + 24) = v35;
      *(_OWORD *)(v43 + 160) = v48;
      *(_OWORD *)(v43 + 176) = v46;
      v50 = v150;
      *(_OWORD *)(v43 + 64) = v149;
      *(_OWORD *)(v43 + 80) = v50;
      *(_OWORD *)(v43 + 96) = v151;
      *(_OWORD *)(v43 + 112) = v49;
      v51 = v148;
      *(_OWORD *)(v43 + 32) = v147;
      *(_OWORD *)(v43 + 48) = v51;
      v52 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
      swift_retain();
      sub_100076C08((uint64_t)&v147);
      v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      v144 = sub_10034A0B0;
      v145 = v43;
      v140 = _NSConcreteStackBlock;
      v141 = 1107296256;
      v142 = sub_100341638;
      v143 = &unk_100601B58;
      v54 = _Block_copy(&v140);
      v55 = objc_msgSend(v52, "initWithName:image:actionHandler:", v53, v41, v54);

      _Block_release(v54);
      swift_release();
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v58 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v57 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v58 >= v57 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
      v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v55);
      v19 = specialized Array._endMutation()(v59);
      if ((BYTE1(v156) & 1) == 0)
      {
LABEL_4:
        if ((BYTE3(v156) & 1) == 0)
        {
LABEL_27:
          if ((v159[24] & 1) != 0)
            static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter(v19);
          else
            static TTRLocalizableStrings.RemindersList.deleteListActionText.getter(v19);
          v120 = v119;
          sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
          v121 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6873617274, 0xE500000000000000);
          v122 = swift_allocObject(&unk_100601370, 24, 7);
          swift_weakInit(v122 + 16, v2);
          v123 = swift_allocObject(&unk_100601B90, 242, 7);
          v124 = v156;
          *(_OWORD *)(v123 + 184) = v157;
          v125 = *(_OWORD *)v159;
          *(_OWORD *)(v123 + 200) = v158;
          *(_OWORD *)(v123 + 216) = v125;
          *(_OWORD *)(v123 + 226) = *(_OWORD *)&v159[10];
          v126 = v152;
          *(_OWORD *)(v123 + 120) = v153;
          v127 = v155;
          *(_OWORD *)(v123 + 136) = v154;
          *(_OWORD *)(v123 + 152) = v127;
          *(_OWORD *)(v123 + 168) = v124;
          v128 = v150;
          *(_OWORD *)(v123 + 56) = v149;
          *(_OWORD *)(v123 + 72) = v128;
          *(_OWORD *)(v123 + 88) = v151;
          *(_OWORD *)(v123 + 104) = v126;
          v129 = v148;
          *(_OWORD *)(v123 + 24) = v147;
          *(_QWORD *)(v123 + 16) = v122;
          *(_OWORD *)(v123 + 40) = v129;
          v130 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          sub_100076C08((uint64_t)&v147);
          swift_retain();
          v131 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v120);
          v144 = sub_10034A0C4;
          v145 = v123;
          v140 = _NSConcreteStackBlock;
          v141 = 1107296256;
          v142 = sub_100341638;
          v143 = &unk_100601BA8;
          v132 = _Block_copy(&v140);
          v133 = objc_msgSend(v130, "initWithName:image:actionHandler:", v131, v121, v132);

          _Block_release(v132);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
          v136 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v135 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v136 >= v135 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
          v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v133);
          specialized Array._endMutation()(v137);
          sub_100075FE8((uint64_t)&v147);
          return v146;
        }
LABEL_21:
        v79._countAndFlagsBits = 0xD000000000000025;
        v79._object = (void *)0x8000000100574E90;
        v80._countAndFlagsBits = 0x694C206572616853;
        v80._object = (void *)0xEA00000000007473;
        object = TTRLocalizedString(_:comment:)(v80, v79)._object;
        sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
        v82 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0xD000000000000013, 0x8000000100561F40);
        v83 = swift_allocObject(&unk_100601370, 24, 7);
        swift_weakInit(v83 + 16, v2);
        v84 = swift_allocObject(&unk_100601BE0, 242, 7);
        v85 = v156;
        *(_OWORD *)(v84 + 184) = v157;
        v86 = *(_OWORD *)v159;
        *(_OWORD *)(v84 + 200) = v158;
        *(_OWORD *)(v84 + 216) = v86;
        *(_OWORD *)(v84 + 226) = *(_OWORD *)&v159[10];
        v87 = v152;
        *(_OWORD *)(v84 + 120) = v153;
        v88 = v155;
        *(_OWORD *)(v84 + 136) = v154;
        *(_OWORD *)(v84 + 152) = v88;
        *(_OWORD *)(v84 + 168) = v85;
        v89 = v150;
        *(_OWORD *)(v84 + 56) = v149;
        *(_OWORD *)(v84 + 72) = v89;
        *(_OWORD *)(v84 + 88) = v151;
        *(_OWORD *)(v84 + 104) = v87;
        v90 = v148;
        *(_OWORD *)(v84 + 24) = v147;
        *(_QWORD *)(v84 + 16) = v83;
        *(_OWORD *)(v84 + 40) = v90;
        v91 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
        sub_100076C08((uint64_t)&v147);
        swift_retain();
        v92 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v144 = sub_10034A0D4;
        v145 = v84;
        v140 = _NSConcreteStackBlock;
        v141 = 1107296256;
        v142 = sub_100341638;
        v143 = &unk_100601BF8;
        v93 = _Block_copy(&v140);
        v94 = objc_msgSend(v91, "initWithName:image:actionHandler:", v92, v82, v93);

        _Block_release(v93);
        swift_release();
        swift_release();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
        v97 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v96 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v97 >= v96 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
        v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v94);
        v19 = specialized Array._endMutation()(v98);
        if ((BYTE4(v156) & 1) != 0)
        {
          v99._countAndFlagsBits = 0xD00000000000002DLL;
          v100._object = (void *)0x8000000100561EF0;
          v99._object = (void *)0x8000000100574EC0;
          v100._countAndFlagsBits = 0xD000000000000012;
          v101 = TTRLocalizedString(_:comment:)(v100, v99)._object;
          v102 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0xD000000000000022, 0x8000000100561F10);
          v103 = swift_allocObject(&unk_100601370, 24, 7);
          swift_weakInit(v103 + 16, v2);
          v104 = swift_allocObject(&unk_100601C30, 242, 7);
          v105 = v156;
          *(_OWORD *)(v104 + 184) = v157;
          v106 = *(_OWORD *)v159;
          *(_OWORD *)(v104 + 200) = v158;
          *(_OWORD *)(v104 + 216) = v106;
          *(_OWORD *)(v104 + 226) = *(_OWORD *)&v159[10];
          v107 = v152;
          *(_OWORD *)(v104 + 120) = v153;
          v108 = v155;
          *(_OWORD *)(v104 + 136) = v154;
          *(_OWORD *)(v104 + 152) = v108;
          *(_OWORD *)(v104 + 168) = v105;
          v109 = v150;
          *(_OWORD *)(v104 + 56) = v149;
          *(_OWORD *)(v104 + 72) = v109;
          *(_OWORD *)(v104 + 88) = v151;
          *(_OWORD *)(v104 + 104) = v107;
          v110 = v148;
          *(_OWORD *)(v104 + 24) = v147;
          *(_QWORD *)(v104 + 16) = v103;
          *(_OWORD *)(v104 + 40) = v110;
          v111 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          sub_100076C08((uint64_t)&v147);
          swift_retain();
          v112 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v101);
          v144 = sub_10034A108;
          v145 = v104;
          v140 = _NSConcreteStackBlock;
          v141 = 1107296256;
          v142 = sub_100341638;
          v143 = &unk_100601C48;
          v113 = _Block_copy(&v140);
          v114 = objc_msgSend(v111, "initWithName:image:actionHandler:", v112, v102, v113);

          _Block_release(v113);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v115);
          v117 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v116 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v117 >= v116 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v116 > 1, v117 + 1, 1);
          v118 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v117, v114);
          v19 = specialized Array._endMutation()(v118);
        }
        goto LABEL_27;
      }
    }
    if ((v159[24] & 1) != 0)
      static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter(v19);
    else
      static TTRLocalizableStrings.AccountsList.showListInfoText.getter(v19);
    v61 = v60;
    sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    v62 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x7269632E6F666E69, 0xEB00000000656C63);
    v63 = swift_allocObject(&unk_100601370, 24, 7);
    swift_weakInit(v63 + 16, v2);
    v64 = swift_allocObject(&unk_100601C80, 242, 7);
    v65 = v156;
    *(_OWORD *)(v64 + 184) = v157;
    v66 = *(_OWORD *)v159;
    *(_OWORD *)(v64 + 200) = v158;
    *(_OWORD *)(v64 + 216) = v66;
    *(_OWORD *)(v64 + 226) = *(_OWORD *)&v159[10];
    v67 = v152;
    *(_OWORD *)(v64 + 120) = v153;
    v68 = v155;
    *(_OWORD *)(v64 + 136) = v154;
    *(_OWORD *)(v64 + 152) = v68;
    *(_OWORD *)(v64 + 168) = v65;
    v69 = v150;
    *(_OWORD *)(v64 + 56) = v149;
    *(_OWORD *)(v64 + 72) = v69;
    *(_OWORD *)(v64 + 88) = v151;
    *(_OWORD *)(v64 + 104) = v67;
    v70 = v148;
    *(_OWORD *)(v64 + 24) = v147;
    *(_QWORD *)(v64 + 16) = v63;
    *(_OWORD *)(v64 + 40) = v70;
    v71 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    sub_100076C08((uint64_t)&v147);
    swift_retain();
    v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v61);
    v144 = sub_10034A13C;
    v145 = v64;
    v140 = _NSConcreteStackBlock;
    v141 = 1107296256;
    v142 = sub_100341638;
    v143 = &unk_100601C98;
    v73 = _Block_copy(&v140);
    v74 = objc_msgSend(v71, "initWithName:image:actionHandler:", v72, v62, v73);

    _Block_release(v73);
    swift_release();
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
    v77 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v76 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v77 >= v76 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
    v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v74);
    v19 = specialized Array._endMutation()(v78);
    if ((BYTE3(v156) & 1) == 0)
      goto LABEL_27;
    goto LABEL_21;
  }
  v20 = sub_10001F580((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  v21 = v6[*(int *)(v4 + 20)];
  static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter(v20);
  v23 = v22;
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v24 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x73616C732E657965, 0xE900000000000068);
  v25 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v25 + 16, v2);
  v26 = swift_allocObject(&unk_100601CD0, 25, 7);
  *(_QWORD *)(v26 + 16) = v25;
  *(_BYTE *)(v26 + 24) = v21;
  v27 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)&v149 = sub_10034A148;
  *((_QWORD *)&v149 + 1) = v26;
  *(_QWORD *)&v147 = _NSConcreteStackBlock;
  *((_QWORD *)&v147 + 1) = 1107296256;
  *(_QWORD *)&v148 = sub_100341638;
  *((_QWORD *)&v148 + 1) = &unk_100601CE8;
  v29 = _Block_copy(&v147);
  v30 = objc_msgSend(v27, "initWithName:image:actionHandler:", v28, v24, v29);

  _Block_release(v29);
  swift_release();
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
  specialized Array._endMutation()(v34);
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  return v146;
}

BOOL sub_100337380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  v7 = Strong;
  if (Strong)
  {
    v8 = *(_QWORD *)(Strong + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 64), v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 32))(2, a3, ObjectType);
    swift_release(v7);
  }
  return v7 != 0;
}

BOOL sub_100337408(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    if ((a3 & 1) != 0)
      sub_100330D6C(a4);
    else
      sub_100330974(a4);
    swift_release();
  }
  return Strong != 0;
}

BOOL sub_100337484(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    sub_100332E50(a3);
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_1003374E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_100337554, v8, v9);
}

uint64_t sub_100337554()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[8] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_1003375D0;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1003375D0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10034BC98, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

BOOL sub_10033761C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v25[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    type metadata accessor for MainActor(0);
    swift_retain();
    v14 = sub_100076C08((uint64_t)a3);
    v15 = static MainActor.shared.getter(v14);
    v16 = swift_allocObject(a4, 258, 7);
    v17 = a3[11];
    *(_OWORD *)(v16 + 200) = a3[10];
    *(_OWORD *)(v16 + 216) = v17;
    *(_OWORD *)(v16 + 232) = a3[12];
    *(_OWORD *)(v16 + 242) = *(_OWORD *)((char *)a3 + 202);
    v18 = a3[7];
    *(_OWORD *)(v16 + 136) = a3[6];
    *(_OWORD *)(v16 + 152) = v18;
    v19 = a3[9];
    *(_OWORD *)(v16 + 168) = a3[8];
    *(_OWORD *)(v16 + 184) = v19;
    v20 = a3[3];
    *(_OWORD *)(v16 + 72) = a3[2];
    *(_OWORD *)(v16 + 88) = v20;
    v21 = a3[5];
    *(_OWORD *)(v16 + 104) = a3[4];
    *(_OWORD *)(v16 + 120) = v21;
    v22 = a3[1];
    *(_OWORD *)(v16 + 40) = *a3;
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v16 + 32) = Strong;
    *(_OWORD *)(v16 + 56) = v22;
    sub_100148368((uint64_t)v11, a5, v16);
    swift_release();
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_1003377A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_10033780C, v8, v9);
}

uint64_t sub_10033780C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[8] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_100337888;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_100337888()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10034BC9C, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

BOOL sub_1003378D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    sub_1003313DC(a3, *(unsigned __int8 *)(a3 + 216));
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_10033793C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v16[24];
  _QWORD v17[29];
  uint64_t v18[30];

  v5 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)(v17, a1, a2);
  sub_10034A79C((uint64_t)v17);
  sub_10002B1E8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_10000F614((uint64_t)v17, (uint64_t)v18, &qword_1006562C0);
  if (sub_100076D84(v18) == 1)
  {
    sub_10002B1E8((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v12 = TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)(a1, v7, 0, 1, *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing));
    v13 = v12;
    if (v12)
    {
      swift_beginAccess(v12 + 24, v16, 0, 0);
      v14 = *(_BYTE *)(v13 + 24);
      swift_release(v13);
      LOBYTE(v13) = v14 ^ 1;
    }
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640E00);
  }
  else
  {
    LOBYTE(v13) = 1;
  }
  sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return v13 & 1;
}

uint64_t sub_100337AF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  id v21;
  void *v22;
  uint64_t result;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *Strong;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char v45;
  char v46;
  _QWORD v47[9];
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[48];
  _OWORD v52[14];
  uint64_t v53;
  _OWORD v54[14];
  uint64_t v55;

  v3 = v2;
  TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)(v47, a1, a2);
  sub_10000F614((uint64_t)v47, (uint64_t)v52, &qword_1006562C0);
  if (sub_100076D84((uint64_t *)v52) == 1)
    return 0;
  v54[12] = v52[12];
  v54[13] = v52[13];
  v55 = v53;
  v54[8] = v52[8];
  v54[9] = v52[9];
  v54[10] = v52[10];
  v54[11] = v52[11];
  v54[4] = v52[4];
  v54[5] = v52[5];
  v54[6] = v52[6];
  v54[7] = v52[7];
  v54[0] = v52[0];
  v54[1] = v52[1];
  v54[2] = v52[2];
  v54[3] = v52[3];
  TTRAccountsListsPresenterCapability.groupCreationParams(for:)(v48, v54);
  v4 = (void *)v48[0];
  v5 = (void *)v48[1];
  v7 = (void *)v48[2];
  v6 = v49;
  v8 = v50;
  sub_10000F614((uint64_t)v48, (uint64_t)v51, &qword_1006562E0);
  if ((v51[40] & 1) != 0)
  {
    v46 = (char)v4;
    v9 = sub_10034A9D8();
    swift_willThrowTypedImpl(&v46, &type metadata for TTRAccountsListsPresenterCapability.GroupCreationValidationError, v9);
LABEL_9:
    sub_10034A79C((uint64_t)v47);
    return 0;
  }
  v45 = v6;
  v10 = v3[23];
  swift_retain(v10);
  v11 = objc_msgSend(v4, "objectID");
  v42 = TTRAccountsListsViewModel.account(with:)(v11);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);

  if (!v13)
  {
    swift_bridgeObjectRelease(v8);

    goto LABEL_9;
  }
  v38 = v13;
  v43 = v15;
  v44 = v17;
  v19 = v3[9];
  ObjectType = swift_getObjectType(v3[8], v18);
  v40 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v19 + 72);
  v21 = v7;
  v39 = v8;
  v22 = (void *)v40(v4, v5, v8, v7, v45 & 1, ObjectType, v19);
  v41 = v21;

  result = (uint64_t)objc_msgSend(v22, "sublistContext");
  if (result)
  {
    v24 = (void *)result;
    v25 = objc_msgSend(v22, "saveRequest");
    v26 = objc_msgSend(v25, "updateAccount:", v4);
    v27 = v3[23];
    swift_retain(v27);
    v28 = TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)(v42, v38, v43, v44 & 0x101010101FFLL);
    swift_release(v27);
    v29 = v25;
    v30 = sub_100344E10(v28, v29);
    v31 = v28;
    v32 = (uint64_t)v30;
    swift_bridgeObjectRelease(v31);

    v33 = *sub_10001413C(v3 + 14, v3[17]);
    v34 = sub_100343644(v26, v22, v24, v32, (uint64_t)v3, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v33 + 16);
    if (Strong)
    {
      v36 = Strong;
      v37 = 1;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v34, 1, 0);

      sub_10034A79C((uint64_t)v47);
      sub_1001BDB7C(v42, v38, v43);
      swift_bridgeObjectRelease(v39);

      swift_bridgeObjectRelease(v32);
    }
    else
    {

      sub_10034A79C((uint64_t)v47);
      sub_1001BDB7C(v42, v38, v43);
      swift_bridgeObjectRelease(v39);

      swift_bridgeObjectRelease(v32);
      return 1;
    }
    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_100337F18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *rawValue;
  uint64_t v24;
  char *v25;
  _DWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  Swift::OpaquePointer_optional v30;

  v26[1] = a5;
  v9 = a4 & 1;
  v10 = sub_10002A750(&qword_1006562C8);
  __chkstk_darwin(v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v27 = v5;
  v28 = (uint64_t)v26 - v18;
  v19 = TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)(a1, a2, a3, v9, *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing));
  if (v19)
  {
    v20 = v19;
    swift_beginAccess(v19 + 24, v29, 0, 0);
    if ((*(_BYTE *)(v20 + 24) & 1) != 0
      || (v30 = TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateOptimisticMoves()(),
          !v30.value._rawValue))
    {
      swift_release(v20);
    }
    else
    {
      rawValue = v30.value._rawValue;
      TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateParamsForSaving()(v30.value._rawValue, *(_QWORD *)&v30.is_nil);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        v24 = v28;
        sub_10001F580((uint64_t)v12, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
        sub_10002B1E8(v24, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
        v25 = (char *)sub_100338108 + 4 * byte_10052E7EF[swift_getEnumCaseMultiPayload(v17, v13)];
        __asm { BR              X10 }
      }
      swift_release(v20);
      swift_bridgeObjectRelease(rawValue);
      sub_1000073A0((uint64_t)v12, &qword_1006562C8);
    }
  }
  return 0;
}

void sub_100338108()
{
  uint64_t v0;
  Swift::OpaquePointer v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *v2;
  v6 = (uint64_t)v2 + *(int *)(sub_10002A750(&qword_1006562D0) + 48);
  v7 = swift_allocObject(&unk_100602180, 32, 7);
  *(_QWORD *)(v7 + 16) = v5;
  v8 = *(_QWORD *)(v4 - 120);
  *(_QWORD *)(v7 + 24) = v8;
  swift_retain(v8);
  sub_1000073A0(v6, &qword_1006562D8);
  if (*((_QWORD *)v1._rawValue + 2))
  {
    v9 = *(_QWORD *)(v8 + 184);
    swift_retain(v9);
    TTRAccountsListsViewModel.performMoves(_:)(v1);
    swift_release(v9);
    if ((*(_DWORD *)(v4 - 124) & 1) != 0 || (Strong = swift_unknownObjectWeakLoadStrong(v8 + 16)) == 0)
    {
      swift_bridgeObjectRelease(v1._rawValue);
    }
    else
    {
      v11 = Strong;
      v12 = *(_QWORD *)(v8 + 184);
      v13 = swift_retain(v12);
      sub_100067100(v13);
      swift_release(v12);
      swift_bridgeObjectRelease(v1._rawValue);
      swift_unknownObjectRelease(v11);
    }
    sub_10034A9D0();
    swift_release(v7);
    swift_release(v0);
    sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  }
  else
  {
    swift_release(v7);
    swift_bridgeObjectRelease(v1._rawValue);
    swift_release(v0);
    sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  }
  JUMPOUT(0x100338090);
}

void sub_1003382D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam);
  swift_release();
  swift_bridgeObjectRelease(v0);
  JUMPOUT(0x10033808CLL);
}

uint64_t sub_1003382F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char v45[184];

  v43 = a5;
  v40 = a4;
  v39 = a3;
  v41 = sub_10002A750(&qword_100641018);
  v7 = __chkstk_darwin(v41);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v19 = sub_100012DC4(v15, (uint64_t)qword_100655F30);
  v37 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  v20 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v20, v45);
  *(_OWORD *)(inited + 16) = xmmword_1005275C0;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v22 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v42 = a1;
  *(_QWORD *)(inited + 48) = Array.description.getter(a1, v22);
  *(_QWORD *)(inited + 56) = v23;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 49;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  v38 = a2;
  sub_10000735C(a2, (uint64_t)v14, (uint64_t *)&unk_100640E00);
  v24 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v22) == 1)
  {
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100640E00);
    v25 = (uint64_t *)(inited + 96);
    *(_QWORD *)(inited + 120) = &type metadata for String;
  }
  else
  {
    v26 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
    v27 = TTRTreeStorageItem.treeItemDescription.getter(v22, v26);
    v29 = v28;
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v25 = (uint64_t *)(inited + 96);
    *(_QWORD *)(inited + 120) = &type metadata for String;
    if (v29)
    {
      *v25 = v27;
      goto LABEL_8;
    }
  }
  *v25 = 7104878;
  v29 = 0xE300000000000000;
LABEL_8:
  *(_QWORD *)(inited + 104) = v29;
  *(_QWORD *)(inited + 128) = 50;
  *(_QWORD *)(inited + 136) = 0xE100000000000000;
  *(_QWORD *)(inited + 168) = &type metadata for Int;
  v30 = v39;
  *(_QWORD *)(inited + 144) = v39;
  v31 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Accounts Lists move item {item: %@, to (%@, %d)}", 48, 2, v31);
  swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v9, 1, 1, v22);
  sub_10034AA1C(v38, (uint64_t)v9);
  v32 = v41;
  *(_QWORD *)&v9[*(int *)(v41 + 36)] = v30;
  sub_10000F614((uint64_t)v9, (uint64_t)v11, &qword_100641018);
  v33 = v42;
  if ((v40 & 1) != 0)
  {
    v34 = *(_QWORD *)(v44 + 184);
    swift_retain(v34);
    TTRAccountsListsViewModel.unadjustInsertionLocation(_:forMoving:)(v11, v33);
    swift_release(v34);
    sub_1000073A0((uint64_t)v11, &qword_100641018);
    sub_10000F614((uint64_t)v9, (uint64_t)v11, &qword_100641018);
  }
  sub_100337F18(v33, (uint64_t)v11, *(_QWORD *)&v11[*(int *)(v32 + 36)], 0, v43 & 1);
  return sub_1000073A0((uint64_t)v11, &qword_100641018);
}

void sub_10033870C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  int v22;
  __int128 v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[28];
  _OWORD v36[2];
  char v37;
  _OWORD v38[12];
  _OWORD v39[2];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];

  v4 = v3;
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (__int128 *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1003E5908(a1);
  if ((v11 & 1) != 0)
  {
    sub_10002B1E8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v10, v8) == 4)
    {
      v12 = v10[11];
      v50 = v10[10];
      v51 = v12;
      v52[0] = v10[12];
      *(_OWORD *)((char *)v52 + 10) = *(__int128 *)((char *)v10 + 202);
      v13 = v10[7];
      v46 = v10[6];
      v47 = v13;
      v14 = v10[9];
      v48 = v10[8];
      v49 = v14;
      v15 = v10[3];
      v42 = v10[2];
      v43 = v15;
      v16 = v10[5];
      v44 = v10[4];
      v45 = v16;
      v17 = v10[1];
      v40 = *v10;
      v41 = v17;
      v18 = *(_QWORD *)(v4 + 184);
      swift_retain(v18);
      v19 = (void *)TTRAccountsListsViewModel.remList(for:)(&v40);
      sub_100075FE8((uint64_t)&v40);
      v20 = swift_release(v18);
      if (v19)
      {
        v21 = 0;
LABEL_11:
        TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)(v36, a1, v19, v21, sub_10033CEF4, 0, v20);
        v33 = v36[1];
        v34 = v36[0];
        v24 = v37;
        sub_10004E09C(v19, v21);
        v25 = v33;
        v23 = v34;
        goto LABEL_13;
      }
    }
    else
    {
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    }
    v23 = 0uLL;
    v24 = -1;
    v25 = 0uLL;
  }
  else
  {
    TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter(v35, v11);
    sub_10000F614((uint64_t)v35, (uint64_t)v38, &qword_100640F68);
    v22 = sub_100076D84((uint64_t *)v38);
    v23 = 0uLL;
    v24 = -1;
    if (v22 != 1)
    {
      v50 = v38[10];
      v51 = v38[11];
      v52[0] = v39[0];
      *(_OWORD *)((char *)v52 + 10) = *(_OWORD *)((char *)v39 + 10);
      v46 = v38[6];
      v47 = v38[7];
      v48 = v38[8];
      v49 = v38[9];
      v42 = v38[2];
      v43 = v38[3];
      v44 = v38[4];
      v45 = v38[5];
      v40 = v38[0];
      v41 = v38[1];
      v26 = *(_QWORD *)(v4 + 184);
      swift_retain(v26);
      v27 = TTRAccountsListsViewModel.listOrCustomSmartList(for:)(&v40);
      v29 = v28;
      v30 = ~v28;
      sub_100076D9C((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
      swift_release(v26);
      if (!v30)
      {
        v25 = 0uLL;
        v23 = 0uLL;
        goto LABEL_13;
      }
      v31 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
      v19 = (void *)TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)(v27, v29 & 1, v31);
      v21 = v32;
      goto LABEL_11;
    }
    v25 = 0uLL;
  }
LABEL_13:
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v25;
  *(_BYTE *)(a3 + 32) = v24;
}

_QWORD *sub_1003389B4(uint64_t a1, uint64_t a2)
{
  return sub_100338CC8(a1, a2, (uint64_t)"Accounts lists drop reminder(s) into list {target: %@}", 54, (uint64_t (*)(_BYTE *))sub_1003389CC);
}

void sub_1003389CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char isEscapingClosureAtFileLocation;
  void *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, void *, _QWORD, uint64_t, uint64_t);
  id v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  __int128 v33;
  _QWORD aBlock[5];
  uint64_t v35;
  _QWORD v36[5];
  void *v37;
  __int128 v38;
  uint64_t v39;
  char v40;

  v2 = v1;
  sub_10000F614(a1, (uint64_t)v36, &qword_100640FF0);
  v5 = (void *)v36[0];
  v4 = v36[1];
  v6 = v36[2];
  v7 = v36[3];
  sub_10000F614(a1, (uint64_t)&v37, &qword_100640FF0);
  if (v40)
  {
    if (v40 == 1)
    {
      v9 = v37;
      v10 = v39;
      v11 = v5;
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      v33 = v38;
      v12 = TTRMoveRemindersToListPresenterCapability.showSmartListAddInfoAlertIfNeeded(_:)(sub_100349E18, v1);
      static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter(v12);
      v14 = v13;
      v15 = (void *)objc_opt_self(TTRUndoManager);
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      v17 = swift_allocObject(&unk_100601A78, 56, 7);
      *(_QWORD *)(v17 + 16) = v2;
      *(_QWORD *)(v17 + 24) = v9;
      *(_OWORD *)(v17 + 32) = v33;
      *(_QWORD *)(v17 + 48) = v10;
      v18 = swift_allocObject(&unk_100601AA0, 32, 7);
      *(_QWORD *)(v18 + 16) = sub_100349E64;
      *(_QWORD *)(v18 + 24) = v17;
      aBlock[4] = sub_1000381EC;
      v35 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_100601AB8;
      v19 = _Block_copy(aBlock);
      v20 = v35;
      sub_100056B58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100349EC8);
      swift_retain(v2);
      swift_retain(v18);
      objc_msgSend(v15, "withActionName:block:", v16, v19, swift_release(v20).n128_f64[0]);

      _Block_release(v19);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v18, "", 114, 1850, 55, 1);
      swift_release(v18);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain(v33);
        sub_100056B58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100077130);
        swift_release(v17);
      }
    }
    else
    {
      v29 = v38;
      v30 = *(_QWORD *)(v1 + 72);
      v31 = v37;
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 64), v8);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8) + 48))(*((_QWORD *)&v29 + 1), v31, ObjectType);
      swift_bridgeObjectRetain(v29);
    }
  }
  else
  {
    v22 = v37;
    v23 = v38;
    v24 = *(_QWORD *)(v2 + 72);
    v25 = swift_getObjectType(*(_QWORD *)(v2 + 64), v8);
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(void (**)(_QWORD, void *, _QWORD, uint64_t, uint64_t))(v26 + 56);
    sub_100056B58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100349EC8);
    v28 = v22;
    v27(*((_QWORD *)&v23 + 1), v22, 0, v25, v26);

    swift_bridgeObjectRetain(v23);
    sub_100056B58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100077130);
  }
}

_QWORD *sub_100338CB0(uint64_t a1, uint64_t a2)
{
  return sub_100338CC8(a1, a2, (uint64_t)"Accounts lists drop deleted reminder(s) into list for recovery {target: %@}", 75, (uint64_t (*)(_BYTE *))sub_100338EE4);
}

_QWORD *sub_100338CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_BYTE *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *);
  _BYTE v25[80];
  _BYTE v26[40];
  _BYTE v27[40];
  _BYTE v28[48];

  v24 = a5;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v13 = sub_100012DC4(v9, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v25);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x746567726174;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v16 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v17 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
  v18 = TTRTreeStorageItem.treeItemDescription.getter(v16, v17);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = v19;
  v20 = sub_10002D32C(inited);
  sub_1000143B4(a3, a4, 2, v20);
  swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10033870C(a1, a2, (uint64_t)v26);
  sub_10000F614((uint64_t)v26, (uint64_t)v27, &qword_100652080);
  if (v27[32] == 255)
    return _swiftEmptyArrayStorage;
  sub_10000F614((uint64_t)v27, (uint64_t)v28, &qword_100640FF0);
  v21 = v24(v28);
  sub_100056B58((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007711C);
  return (_QWORD *)v21;
}

_QWORD *sub_100338EE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(uint64_t, id, uint64_t);
  void *v33;
  uint64_t v34;
  _QWORD v36[2];
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42[2];
  uint64_t v43;
  char v44;

  v2 = v1;
  v4 = *v2;
  v5 = type metadata accessor for REMAnalyticsEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000F614(a1, (uint64_t)v42, &qword_100640FF0);
  if (v44)
    return _swiftEmptyArrayStorage;
  v39 = v4;
  v9 = v42[1];
  v10 = v43;
  v40 = v43;
  v41 = v42[0];
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v12 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v11);
  type metadata accessor for REMAnalyticsManager(0);
  v37 = v12;
  v38 = static REMAnalyticsManager.shared.getter();
  v13 = (int *)sub_10002A750(&qword_100649F98);
  v14 = &v8[v13[12]];
  v36[1] = &v8[v13[16]];
  v15 = &v8[v13[20]];
  v16 = enum case for REMRDLUserOperationDetail.rdl_dragToRecover(_:);
  v17 = type metadata accessor for REMRDLUserOperationDetail(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v8, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
  v19 = enum case for REMUserOperation.recoverReminder(_:);
  v20 = type metadata accessor for REMUserOperation(0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v8, v19, v20);
  v22 = v37;
  *(_QWORD *)v14 = TTRUserDefaults.activitySessionId.getter(v21);
  *((_QWORD *)v14 + 1) = v23;
  v24 = v22;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v15 = _typeName(_:qualified:)(v39, 0);
  *((_QWORD *)v15 + 1) = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for REMAnalyticsEvent.userOperation(_:), v5);
  v26 = v38;
  REMAnalyticsManager.post(event:)(v8);
  v27 = swift_release(v26);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
  v29 = v2[8];
  v28 = v2[9];
  ObjectType = swift_getObjectType(v29, v30);
  v32 = *(void (**)(uint64_t, id, uint64_t))(*(_QWORD *)(v28 + 8) + 64);
  v34 = v40;
  v33 = v41;
  v32(v40, v41, ObjectType);
  swift_bridgeObjectRelease(v34);

  return v9;
}

void sub_10033911C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSString v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = v3;
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v8 = type metadata accessor for Logger(0);
  sub_100012DC4(v8, (uint64_t)qword_100655F30);
  v9 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Accounts Lists drop reminder(s) on hashtag label", 48, 2, v9);
  swift_bridgeObjectRelease(v9);
  if ((sub_1003E5908(a1) & 1) == 0)
  {
    aBlock[0] = a1;
    v10 = sub_10002A750(&qword_100650578);
    v11 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
    v12 = sub_10002D150((unint64_t *)&qword_100650588, &qword_100650578);
    v13 = Sequence.completeCompactMap<A>(_:)(sub_10033CF48, 0, v10, v11, v12);
    if (v13)
    {
      v14 = v13;
      static TTRLocalizableStrings.UndoAction.hashtagsChange.getter();
      v16 = v15;
      v17 = (void *)objc_opt_self(TTRUndoManager);
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      v19 = (_QWORD *)swift_allocObject(&unk_100601578, 48, 7);
      v19[2] = v4;
      v19[3] = v14;
      v19[4] = a2;
      v19[5] = a3;
      v20 = swift_allocObject(&unk_1006015A0, 32, 7);
      *(_QWORD *)(v20 + 16) = sub_1003478D4;
      *(_QWORD *)(v20 + 24) = v19;
      aBlock[4] = sub_10001B278;
      v25 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1006015B8;
      v21 = _Block_copy(aBlock);
      v22 = v25;
      swift_retain(v4);
      swift_bridgeObjectRetain(a3);
      swift_retain(v20);
      objc_msgSend(v17, "withActionName:block:", v18, v21, swift_release(v22).n128_f64[0]);

      _Block_release(v21);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 114, 1019, 51, 1);
      swift_release(v19);
      swift_release(v20);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
  }
}

void sub_100339390(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[3];

  v6 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v9);
  v11 = (__int128 *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (__int128 *)((char *)&v39 - v13);
  if ((sub_1003E5908(a1) & 1) == 0)
  {
    sub_10002B1E8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
    {
      v24 = v11[11];
      v53 = v11[10];
      v54 = v24;
      v55[0] = v11[12];
      *(_OWORD *)((char *)v55 + 10) = *(__int128 *)((char *)v11 + 202);
      v25 = v11[7];
      v49 = v11[6];
      v50 = v25;
      v26 = v11[9];
      v51 = v11[8];
      v52 = v26;
      v27 = v11[3];
      v45 = v11[2];
      v46 = v27;
      v28 = v11[5];
      v47 = v11[4];
      v48 = v28;
      v29 = v11[1];
      v43 = *v11;
      v44 = v29;
      swift_retain();
      v30 = TTRAccountsListsViewModel.listOrCustomSmartList(for:)(&v43);
      v32 = v31;
      v33 = -1;
      v34 = ~v31;
      sub_100075FE8((uint64_t)&v43);
      swift_release();
      if (!v34)
      {
        v37 = 0uLL;
        v38 = 0uLL;
        goto LABEL_12;
      }
      v35 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
      v21 = TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)(v30, v32 & 1, v35);
      v23 = v36;
    }
    else
    {
      sub_10001F580((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      v21 = v8[*(int *)(v6 + 20)];
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      v23 = 2;
    }
    goto LABEL_11;
  }
  sub_10002B1E8(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (swift_getEnumCaseMultiPayload(v14, v9) == 1)
  {
    v15 = v14[11];
    v53 = v14[10];
    v54 = v15;
    v55[0] = v14[12];
    *(_OWORD *)((char *)v55 + 10) = *(__int128 *)((char *)v14 + 202);
    v16 = v14[7];
    v49 = v14[6];
    v50 = v16;
    v17 = v14[9];
    v51 = v14[8];
    v52 = v17;
    v18 = v14[3];
    v45 = v14[2];
    v46 = v18;
    v19 = v14[5];
    v47 = v14[4];
    v48 = v19;
    v20 = v14[1];
    v43 = *v14;
    v44 = v20;
    swift_retain();
    v21 = TTRAccountsListsViewModel.remList(for:)(&v43);
    sub_100075FE8((uint64_t)&v43);
    v22 = swift_release();
    if (v21)
    {
      v23 = 0;
LABEL_11:
      TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)(v41, a1, v21, v23, sub_10033CEF4, 0, v22);
      v39 = v41[1];
      v40 = v41[0];
      v33 = v42;
      sub_10004E09C((id)v21, v23);
      v38 = v39;
      v37 = v40;
      goto LABEL_12;
    }
  }
  else
  {
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  }
  v37 = 0uLL;
  v33 = -1;
  v38 = 0uLL;
LABEL_12:
  *(_OWORD *)a3 = v37;
  *(_OWORD *)(a3 + 16) = v38;
  *(_BYTE *)(a3 + 32) = v33;
}

_QWORD *sub_10033969C(uint64_t a1, uint64_t a2)
{
  return sub_1003396CC(a1, a2, (uint64_t)"Accounts lists drop reminder(s) into pinned list {id: %@}", 57, (uint64_t (*)(_BYTE *))sub_1003389CC);
}

_QWORD *sub_1003396B4(uint64_t a1, uint64_t a2)
{
  return sub_1003396CC(a1, a2, (uint64_t)"Accounts lists drop deleted reminder(s) into pinned list for recovery {id: %@}", 78, (uint64_t (*)(_BYTE *))sub_100338EE4);
}

_QWORD *sub_1003396CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_BYTE *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *);
  _BYTE v23[80];
  _BYTE v24[40];
  _BYTE v25[40];
  _BYTE v26[48];

  v22 = a5;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v13 = sub_100012DC4(v9, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v23);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 72) = type metadata accessor for UUID(0);
  v16 = sub_100028D70((_QWORD *)(inited + 48));
  TTRAccountsListsViewModel.PinnedList.id.getter(v16);
  v17 = sub_10002D32C(inited);
  sub_1000143B4(a3, a4, 2, v17);
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v18);
  sub_100339390(a1, a2, (uint64_t)v24);
  sub_10000F614((uint64_t)v24, (uint64_t)v25, &qword_100652080);
  if (v25[32] == 255)
    return _swiftEmptyArrayStorage;
  sub_10000F614((uint64_t)v25, (uint64_t)v26, &qword_100640FF0);
  v19 = v22(v26);
  sub_100056B58((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007711C);
  return (_QWORD *)v19;
}

void sub_1003398BC(char a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  void ***v44;
  void **v45;
  void **v46;
  uint64_t v47;
  void **aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *);
  void *v51;
  void (*v52)(uint64_t);
  _OWORD *v53;
  char v54[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v54, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v10 = Strong;
    if (a1)
    {
      if (a1 == 1)
      {
        v11 = *(_QWORD *)(Strong + 72);
        ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 64), v9);
        v13 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v11 + 8) + 8))(ObjectType);
        v14 = objc_msgSend(v13, "nonUserInteractiveStore");

        v15 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
        v16 = static OS_dispatch_queue.main.getter(v15);
        v17 = (_OWORD *)swift_allocObject(&unk_100601618, 234, 7);
        v18 = a4[11];
        v17[11] = a4[10];
        v17[12] = v18;
        v17[13] = a4[12];
        *(_OWORD *)((char *)v17 + 218) = *(_OWORD *)((char *)a4 + 202);
        v19 = a4[7];
        v17[7] = a4[6];
        v17[8] = v19;
        v20 = a4[9];
        v17[9] = a4[8];
        v17[10] = v20;
        v21 = a4[3];
        v17[3] = a4[2];
        v17[4] = v21;
        v22 = a4[5];
        v17[5] = a4[4];
        v17[6] = v22;
        v23 = a4[1];
        v17[1] = *a4;
        v17[2] = v23;
        v52 = sub_100347A2C;
        v53 = v17;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v50 = sub_100009944;
        v51 = &unk_100601630;
        v24 = _Block_copy(&aBlock);
        v25 = v53;
        sub_100076C08((uint64_t)a4);
        objc_msgSend(v14, "rejectCalDAVSharedList:queue:completion:", a3, v16, v24, swift_release(v25).n128_f64[0]);
        _Block_release(v24);
        swift_release(v10);

      }
      else
      {
        if (qword_10063D680 != -1)
          swift_once(&qword_10063D680, sub_1000074FC);
        v40 = type metadata accessor for Logger(0);
        sub_100012DC4(v40, (uint64_t)qword_100655F30);
        sub_100076C08((uint64_t)a4);
        v41 = sub_100076C08((uint64_t)a4);
        v16 = Logger.logObject.getter(v41);
        v42 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v16, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc(12, -1);
          v44 = (void ***)swift_slowAlloc(8, -1);
          *(_DWORD *)v43 = 138412290;
          v45 = *(void ***)a4;
          aBlock = v45;
          v46 = v45;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v49, v43 + 4, v43 + 12);
          *v44 = v45;
          sub_100075FE8((uint64_t)a4);
          sub_100075FE8((uint64_t)a4);
          _os_log_impl((void *)&_mh_execute_header, v16, v42, "Canceled CalDAV share invitation response {list.objectID: %@}", v43, 0xCu);
          v47 = sub_10002A750(&qword_100642D60);
          swift_arrayDestroy(v44, 1, v47);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(v43, -1, -1);
          swift_release(v10);
        }
        else
        {
          swift_release(v10);
          sub_100075FE8((uint64_t)a4);
          sub_100075FE8((uint64_t)a4);
        }
      }
    }
    else
    {
      v26 = *(_QWORD *)(Strong + 72);
      v27 = swift_getObjectType(*(_QWORD *)(Strong + 64), v9);
      v28 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v26 + 8) + 8))(v27);
      v29 = objc_msgSend(v28, "nonUserInteractiveStore");

      v30 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
      v16 = static OS_dispatch_queue.main.getter(v30);
      v31 = (_OWORD *)swift_allocObject(&unk_100601668, 234, 7);
      v32 = a4[11];
      v31[11] = a4[10];
      v31[12] = v32;
      v31[13] = a4[12];
      *(_OWORD *)((char *)v31 + 218) = *(_OWORD *)((char *)a4 + 202);
      v33 = a4[7];
      v31[7] = a4[6];
      v31[8] = v33;
      v34 = a4[9];
      v31[9] = a4[8];
      v31[10] = v34;
      v35 = a4[3];
      v31[3] = a4[2];
      v31[4] = v35;
      v36 = a4[5];
      v31[5] = a4[4];
      v31[6] = v36;
      v37 = a4[1];
      v31[1] = *a4;
      v31[2] = v37;
      v52 = sub_100347ADC;
      v53 = v31;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_100009944;
      v51 = &unk_100601680;
      v38 = _Block_copy(&aBlock);
      v39 = v53;
      sub_100076C08((uint64_t)a4);
      objc_msgSend(v29, "acceptCalDAVSharedList:queue:completion:", a3, v16, v38, swift_release(v39).n128_f64[0]);
      swift_release(v10);
      _Block_release(v38);

    }
  }
}

void sub_100339D24(uint64_t a1, void **a2, const char *a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  const char *v28;
  NSObject *oslog;
  _QWORD v30[3];
  char v31[8];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v7 = type metadata accessor for Logger(0);
    sub_100012DC4(v7, (uint64_t)qword_100655F30);
    sub_100076C08((uint64_t)a2);
    swift_errorRetain(a1);
    sub_100076C08((uint64_t)a2);
    v8 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v11 = (_QWORD *)swift_slowAlloc(8, -1);
      v12 = swift_slowAlloc(32, -1);
      *(_DWORD *)v10 = 138412546;
      v28 = a3;
      v13 = *a2;
      v32 = (uint64_t)v13;
      v33 = v12;
      v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v10 + 4, v10 + 12);
      *v11 = v13;
      sub_100075FE8((uint64_t)a2);
      sub_100075FE8((uint64_t)a2);
      *(_WORD *)(v10 + 12) = 2080;
      swift_getErrorValue(a1, v31, v30);
      v15 = Error.localizedDescription.getter(v30[1], v30[2]);
      v17 = v16;
      v32 = sub_100027E40(v15, v16, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v10 + 14, v10 + 22);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, v28, (uint8_t *)v10, 0x16u);
      v18 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v11, 1, v18);
      swift_slowDealloc(v11, -1, -1);
      swift_arrayDestroy(v12, 1, &type metadata for Any[8]);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      swift_errorRelease(a1);
      return;
    }
    swift_errorRelease(a1);
    sub_100075FE8((uint64_t)a2);
    sub_100075FE8((uint64_t)a2);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v20 = type metadata accessor for Logger(0);
    sub_100012DC4(v20, (uint64_t)qword_100655F30);
    sub_100076C08((uint64_t)a2);
    v21 = sub_100076C08((uint64_t)a2);
    oslog = Logger.logObject.getter(v21);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      v25 = *a2;
      v33 = (uint64_t)v25;
      v26 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v23 + 4, v23 + 12);
      *v24 = v25;
      sub_100075FE8((uint64_t)a2);
      sub_100075FE8((uint64_t)a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v22, a4, v23, 0xCu);
      v27 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v24, 1, v27);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      return;
    }
    sub_100075FE8((uint64_t)a2);
    sub_100075FE8((uint64_t)a2);
  }

}

Class sub_10033A120(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  uint64_t Strong;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  id v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::OpaquePointer v44;
  _QWORD v45[2];
  void *v46;
  UIMenuElementSize v47[3];
  _QWORD v48[28];
  _OWORD v49[12];
  _OWORD v50[2];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD v63[3];
  UIImage_optional v64;

  v7 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v8 = __chkstk_darwin(v7);
  v10 = (void **)((char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v8);
  v13 = (__int128 *)((char *)v45 - v12);
  v14 = a3 + 16;
  TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter(v48, v11);
  sub_10000F614((uint64_t)v48, (uint64_t)v49, &qword_100640F68);
  if (sub_100076D84((uint64_t *)v49) != 1)
  {
    v61 = v49[10];
    v62 = v49[11];
    v63[0] = v50[0];
    *(_OWORD *)((char *)v63 + 10) = *(_OWORD *)((char *)v50 + 10);
    v57 = v49[6];
    v58 = v49[7];
    v59 = v49[8];
    v60 = v49[9];
    v53 = v49[2];
    v54 = v49[3];
    v55 = v49[4];
    v56 = v49[5];
    v51 = v49[0];
    v52 = v49[1];
    swift_beginAccess(v14, v47, 0, 0);
    Strong = swift_weakLoadStrong(v14);
    if (Strong)
    {
      v21 = Strong;
      isa = sub_100335AC8((uint64_t)&v51, a4 & 1);
      sub_100076D9C((uint64_t)v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
      swift_release(v21);
      return isa;
    }
    sub_100076D9C((uint64_t)v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
    return 0;
  }
  sub_10002B1E8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v13, v7) == 6)
  {
    v15 = v13[1];
    v51 = *v13;
    v52 = v15;
    v16 = v13[3];
    v53 = v13[2];
    v54 = v16;
    swift_beginAccess(v14, v47, 0, 0);
    v17 = swift_weakLoadStrong(v14);
    if (v17)
    {
      v18 = v17;
      isa = sub_10033A5AC((uint64_t)&v51);
      sub_100075FA0((uint64_t)&v51);
      swift_release(v18);
      return isa;
    }
    sub_100075FA0((uint64_t)&v51);
    return 0;
  }
  sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_10002B1E8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v10, v7) != 13)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return 0;
  }
  v22 = *v10;
  v23 = v10[1];
  v24 = v10[2];
  v25 = v10[3];
  swift_beginAccess(v14, &v51, 0, 0);
  v26 = swift_weakLoadStrong(v14);
  if (!v26)
  {
    swift_bridgeObjectRelease(v24);

    return 0;
  }
  v27 = v26;
  v47[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v28 = String._bridgeToObjectiveC()();
  v46 = v25;
  v29 = v28;
  v30 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v28);

  v45[1] = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v31 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  v33 = v32;
  v34 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v34 + 16, v27);
  v35 = (_QWORD *)swift_allocObject(&unk_1006021F8, 56, 7);
  v35[2] = v34;
  v35[3] = v22;
  v35[4] = v23;
  v35[5] = v24;
  v35[6] = v46;
  v36 = v30;
  v37 = v22;
  swift_bridgeObjectRetain(v24);
  v38 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v31, v33, 0, 0, v30, 0, 0, 0, 0, 2, 0, sub_10034ADB0, v35);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v40 = *(_QWORD *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v39 = *(_QWORD *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v40 >= v39 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
  v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
  specialized Array._endMutation()(v41);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v64.value.super.isa = 0;
  v64.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v64, 0, 0xFFFFFFFFFFFFFFFFLL, v47[0], v44).super.super.isa;
  swift_release(v27);
  swift_bridgeObjectRelease(v24);

  return isa;
}

Class sub_10033A5AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Class isa;
  Swift::OpaquePointer children;
  UIImage_optional v37;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  v5 = (void *)objc_opt_self(UIImage);
  v6 = objc_msgSend(v5, "_systemImageNamed:", v4);

  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v7 = static TTRLocalizableStrings.GroupDetail.showGroupInfoActionText.getter();
  v9 = v8;
  v10 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v10 + 16, v2);
  v11 = swift_allocObject(&unk_100602220, 88, 7);
  *(_QWORD *)(v11 + 16) = v10;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v11 + 72) = v13;
  v14 = v6;
  sub_100347944((_QWORD *)a1);
  v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v9, 0, 0, v6, 0, 0, 0, 0, 0, 0, sub_10034ADC4, v11);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
  specialized Array._endMutation()(v18);
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v5, "_systemImageNamed:", v19);

  v21 = static TTRLocalizableStrings.GroupDetail.deleteGroupActionText.getter();
  v23 = v22;
  v24 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v24 + 16, v2);
  v25 = swift_allocObject(&unk_100602248, 88, 7);
  *(_QWORD *)(v25 + 16) = v24;
  v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 40) = v26;
  v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v25 + 72) = v27;
  sub_100347944((_QWORD *)a1);
  v28 = v20;
  v29 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, v20, 0, 0, 0, 0, 2, 0, sub_10034AE28, v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
  specialized Array._endMutation()(v32);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v37.value.super.isa = 0;
  v37.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v37, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, children).super.super.isa;

  return isa;
}

id sub_10033A91C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;

  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_100655F30);
  v8 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Reminders Accounts List Show Context Menu For Hashtag Label", 59, 2, v8);
  swift_bridgeObjectRelease(v8);
  v9 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v9 + 16, v3);
  v10 = swift_allocObject(&unk_100601488, 97, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a1;
  *(_QWORD *)(v10 + 32) = a2;
  v11 = a3[1];
  *(_OWORD *)(v10 + 40) = *a3;
  *(_OWORD *)(v10 + 56) = v11;
  *(_OWORD *)(v10 + 72) = a3[2];
  *(_OWORD *)(v10 + 81) = *(_OWORD *)((char *)a3 + 41);
  v12 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v17[4] = sub_1003477CC;
  v18 = v10;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100172B74;
  v17[3] = &unk_1006014A0;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_retain_n(v10, 2);
  swift_bridgeObjectRetain(a2);
  sub_100341604((uint64_t)a3);
  v15 = objc_msgSend(v12, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v13, swift_release(v14).n128_f64[0]);
  swift_release(v10);
  _Block_release(v13);
  swift_release(v10);
  return v15;
}

Class sub_10033AAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  UIMenu v36;
  Swift::OpaquePointer children;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  UIMenuElementSize preferredElementSize;
  _BYTE v44[24];
  UIImage_optional v45;

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v44, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (!Strong)
    return 0;
  v11 = Strong;
  v12 = *(_QWORD *)(Strong + 88);
  ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 80), v10);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
  v40 = v14 & 1;
  v42 = v14;
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v39 = static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  v18 = (void *)objc_opt_self(UIImage);
  v19 = objc_msgSend(v18, "_systemImageNamed:", v17);

  v20 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v20 + 16, v11);
  v21 = swift_allocObject(&unk_1006014D8, 97, 7);
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = a3;
  *(_QWORD *)(v21 + 32) = a4;
  v22 = a5[1];
  *(_OWORD *)(v21 + 40) = *a5;
  *(_OWORD *)(v21 + 56) = v22;
  *(_OWORD *)(v21 + 72) = a5[2];
  *(_OWORD *)(v21 + 81) = *(_OWORD *)((char *)a5 + 41);
  swift_bridgeObjectRetain(a4);
  sub_100341604((uint64_t)a5);
  v41 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v39, v16, 0, 0, v19, 0, 0, 0, 0, v40, 0, sub_1003477E0, v21);
  v23 = static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(1);
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v18, "_systemImageNamed:", v26);

  if ((v42 & 1) != 0)
    v28 = 3;
  else
    v28 = 2;
  v29 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v29 + 16, v11);
  v30 = swift_allocObject(&unk_100601500, 97, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a3;
  *(_QWORD *)(v30 + 32) = a4;
  v31 = a5[1];
  *(_OWORD *)(v30 + 40) = *a5;
  *(_OWORD *)(v30 + 56) = v31;
  *(_OWORD *)(v30 + 72) = a5[2];
  *(_OWORD *)(v30 + 81) = *(_OWORD *)((char *)a5 + 41);
  swift_bridgeObjectRetain(a4);
  sub_100341604((uint64_t)a5);
  v32 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v23, v25, 0, 0, v27, 0, 0, 0, 0, v28, 0, sub_100347834, v30);
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v33 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v34 = swift_allocObject(v33, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v34 + 32) = v41;
  *(_QWORD *)(v34 + 40) = v32;
  preferredElementSize = v34;
  specialized Array._endMutation()(v34);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v45.value.super.isa = 0;
  v45.is_nil = 0;
  v36.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  swift_release(v11);
  return v36.super.super.isa;
}

double sub_10033AE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v26, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v15 = type metadata accessor for Logger(0);
    sub_100012DC4(v15, (uint64_t)qword_100655F30);
    v16 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Accounts lists show rename tag UI", 33, 2, v16);
    swift_bridgeObjectRelease(v16);
    v17 = *sub_10001413C((_QWORD *)(v14 + 112), *(_QWORD *)(v14 + 136));
    v18 = swift_unknownObjectWeakLoadStrong(v17 + 16);
    if (v18)
    {
      v19 = v18;
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
      v21 = swift_allocObject(&unk_100601550, 136, 7);
      *(_QWORD *)(v21 + 16) = 0;
      *(_QWORD *)(v21 + 24) = 0;
      *(_QWORD *)(v21 + 32) = v17;
      *(_QWORD *)(v21 + 40) = a3;
      *(_QWORD *)(v21 + 48) = a4;
      *(_BYTE *)(v21 + 56) = 1;
      v22 = a5[1];
      *(_OWORD *)(v21 + 64) = *a5;
      *(_OWORD *)(v21 + 80) = v22;
      *(_OWORD *)(v21 + 96) = a5[2];
      *(_OWORD *)(v21 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(_QWORD *)(v21 + 128) = v19;
      swift_retain(v17);
      swift_bridgeObjectRetain(a4);
      sub_100341604((uint64_t)a5);
      v23 = sub_100148368((uint64_t)v11, (uint64_t)&unk_100656190, v21);
      swift_release(v14);
      v24 = v23;
    }
    else
    {
      v24 = v14;
    }
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  return result;
}

void sub_10033B048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t inited;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v28[48];
  _BYTE v29[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v29, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v14 = type metadata accessor for Logger(0);
    sub_100012DC4(v14, (uint64_t)qword_100655F30);
    v15 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Accounts lists delete tag", 25, 2, v15);
    swift_bridgeObjectRelease(v15);
    v16 = sub_10001413C((_QWORD *)(v13 + 112), *(_QWORD *)(v13 + 136));
    v17 = sub_10002A750((uint64_t *)&unk_100654F80);
    inited = swift_initStackObject(v17, v28);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    swift_bridgeObjectRetain(a4);
    v19 = sub_100490398(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    v20 = *v16;
    v21 = swift_unknownObjectWeakLoadStrong(*v16 + 16);
    if (v21)
    {
      v22 = v21;
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
      v24 = swift_allocObject(&unk_100601528, 136, 7);
      *(_QWORD *)(v24 + 16) = 0;
      *(_QWORD *)(v24 + 24) = 0;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v19;
      *(_QWORD *)(v24 + 48) = 0;
      *(_BYTE *)(v24 + 56) = 0;
      v25 = a5[1];
      *(_OWORD *)(v24 + 64) = *a5;
      *(_OWORD *)(v24 + 80) = v25;
      *(_OWORD *)(v24 + 96) = a5[2];
      *(_OWORD *)(v24 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(_QWORD *)(v24 + 128) = v22;
      swift_retain(v20);
      swift_bridgeObjectRetain(v19);
      sub_100341604((uint64_t)a5);
      v26 = sub_100148368((uint64_t)v11, (uint64_t)&unk_100656188, v24);
      swift_release(v13);
      swift_bridgeObjectRelease(v19);
      swift_release(v26);
    }
    else
    {
      swift_release(v13);
      swift_bridgeObjectRelease(v19);
    }
  }
}

BOOL sub_10033B2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BOOL8 v45;
  unsigned int v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _OWORD *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[26];

  v56 = a1;
  v57 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  v2 = __chkstk_darwin(v57);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v59 = (uint64_t)&v48 - v5;
  v58 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v6 = *(_QWORD *)(v58 - 8);
  v7 = __chkstk_darwin(v58);
  v9 = (_OWORD *)((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v7);
  v12 = (__int128 *)((char *)&v48 - v11);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v48 - v16;
  v18 = sub_10002A750((uint64_t *)&unk_100646680);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v55 = (char *)&v48 - v22;
  v23 = *(_QWORD *)(v1 + 184);
  v24 = swift_retain(v23);
  v25 = TTRAccountsListsViewModel.visiblePinnedLists.getter(v24);
  v26 = swift_release(v23);
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v50 = v21;
    v51 = v17;
    v53 = v9;
    v54 = v4;
    v28 = v25 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v52 = v6;
    v29 = *(_QWORD *)(v6 + 72);
    v49 = v25;
    swift_bridgeObjectRetain(v25);
    v56 = v56;
    v30 = v58;
    do
    {
      sub_10002B1E8(v28, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      sub_10002B1E8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      if (swift_getEnumCaseMultiPayload(v12, v30) != 1)
      {
        v37 = v59;
        sub_10001F580((uint64_t)v12, v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
        __asm { BR              X9 }
      }
      v31 = v12[11];
      v70 = v12[10];
      v71 = v31;
      *(_OWORD *)v72 = v12[12];
      *(_OWORD *)&v72[10] = *(__int128 *)((char *)v12 + 202);
      v32 = v12[7];
      v66 = v12[6];
      v67 = v32;
      v33 = v12[9];
      v68 = v12[8];
      v69 = v33;
      v34 = v12[3];
      v62 = v12[2];
      v63 = v34;
      v35 = v12[5];
      v64 = v12[4];
      v65 = v35;
      v36 = v12[1];
      v60 = *v12;
      v61 = v36;
      sub_100075FE8((uint64_t)&v60);
      sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      v28 += v29;
      --v27;
    }
    while (v27);
    v25 = v49;
    swift_bridgeObjectRelease(v49);
    v4 = v54;
    v9 = v53;
    v6 = v52;
    v17 = v51;
    v21 = v50;
  }
  else
  {
    v30 = v58;
  }
  v38 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v55, 1, 1, v30, v26);
  swift_bridgeObjectRelease(v25);
  sub_10000F614(v38, (uint64_t)v21, (uint64_t *)&unk_100646680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v30) == 1)
  {
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100646680);
    return 0;
  }
  sub_10001F580((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  sub_10001F580((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  if (swift_getEnumCaseMultiPayload(v9, v30) == 1)
  {
    v39 = v9[11];
    v70 = v9[10];
    v71 = v39;
    *(_OWORD *)v72 = v9[12];
    *(_OWORD *)&v72[10] = *(_OWORD *)((char *)v9 + 202);
    v40 = v9[7];
    v66 = v9[6];
    v67 = v40;
    v41 = v9[9];
    v68 = v9[8];
    v69 = v41;
    v42 = v9[3];
    v62 = v9[2];
    v63 = v42;
    v43 = v9[5];
    v64 = v9[4];
    v65 = v43;
    v44 = v9[1];
    v60 = *v9;
    v61 = v44;
    sub_100075FE8((uint64_t)&v60);
    return 0;
  }
  sub_10001F580((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  v46 = v4[*(int *)(v57 + 36)];
  if (v46 >= 2)
    v45 = v46 != 2 && *(_QWORD *)&v4[*(int *)(v57 + 24)] > 0;
  else
    v45 = 1;
  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  return v45;
}

void sub_10033B9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  _QWORD *v11;
  void *Strong;
  void *v13;
  void *v14;
  id v15;

  static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter();
  v2 = v1;
  static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v15 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v9, 1, 0);

  objc_msgSend(v15, "addAction:", v10);
  v11 = sub_10001413C((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v11 + 16);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v15, 1, 0);

    v14 = v13;
  }
  else
  {
    v14 = v15;
  }

}

void sub_10033BB5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v3 = sub_10002A750(&qword_100656198);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for REMAccountsListDataView.Model(0);
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __asm { BR              X10 }
}

uint64_t sub_10033BC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 104) = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v7 = type metadata accessor for TTRIPrivacyChecker(0);
  ((void (*)(uint64_t, uint64_t, void *))TTRPrivacyChecker.dismissInlineRequest(for:))(v1, v7, &protocol witness table for TTRIPrivacyChecker);
  v8 = v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v6 - 104, 0, 0);
  sub_10000735C(v8, v3, &qword_100656198);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v2) == 1)
    return sub_1000073A0(v3, &qword_100656198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v2);
  sub_10032E598(v4, 0, 2, 1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v2);
}

uint64_t sub_10033BF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *a4;
  *(_QWORD *)(v4 + 16) = a4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_10033BFF4;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v5, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10033BFF4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void **sub_10033C03C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void **aBlock;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, void *);
  void *v42;
  BOOL (*v43)(uint64_t);
  uint64_t v44;

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 88);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 80), a2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8) & 1) != 0)
    return 0;
  v11 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v38 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_10051FF90;
  static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  v13 = v12;
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  v14 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6C69636E6570, 0xE600000000000000);
  v15 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v15 + 16, v3);
  v16 = swift_allocObject(&unk_100601398, 97, 7);
  v17 = a1;
  v37 = a1;
  v18 = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v17;
  *(_QWORD *)(v16 + 32) = a2;
  v19 = a3[1];
  *(_OWORD *)(v16 + 40) = *a3;
  *(_OWORD *)(v16 + 56) = v19;
  *(_OWORD *)(v16 + 72) = a3[2];
  *(_OWORD *)(v16 + 81) = *(_OWORD *)((char *)a3 + 41);
  v20 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain(v15);
  swift_bridgeObjectRetain(a2);
  sub_100341604((uint64_t)a3);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v43 = sub_1003415F4;
  v44 = v18;
  aBlock = _NSConcreteStackBlock;
  v40 = 1107296256;
  v41 = sub_100341638;
  v42 = &unk_1006013B0;
  v22 = _Block_copy(&aBlock);
  v23 = objc_msgSend(v20, "initWithName:image:actionHandler:", v21, v14, v22);

  _Block_release(v22);
  v24 = v44;
  swift_release(v15);
  swift_release(v24);
  *(_QWORD *)(v38 + 32) = v23;
  static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(1);
  v26 = v25;
  v27 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x6873617274, 0xE500000000000000);
  v28 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v28 + 16, v4);
  v29 = swift_allocObject(&unk_1006013E8, 97, 7);
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v37;
  *(_QWORD *)(v29 + 32) = a2;
  v30 = a3[1];
  *(_OWORD *)(v29 + 40) = *a3;
  *(_OWORD *)(v29 + 56) = v30;
  *(_OWORD *)(v29 + 72) = a3[2];
  *(_OWORD *)(v29 + 81) = *(_OWORD *)((char *)a3 + 41);
  v31 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_bridgeObjectRetain(a2);
  sub_100341604((uint64_t)a3);
  swift_retain(v28);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v43 = sub_10034168C;
  v44 = v29;
  aBlock = _NSConcreteStackBlock;
  v40 = 1107296256;
  v41 = sub_100341638;
  v42 = &unk_100601400;
  v33 = _Block_copy(&aBlock);
  v34 = objc_msgSend(v31, "initWithName:image:actionHandler:", v32, v27, v33);

  _Block_release(v33);
  v35 = v44;
  swift_release(v28);
  swift_release(v35);
  *(_QWORD *)(v38 + 40) = v34;
  aBlock = (void **)v38;
  specialized Array._endMutation()(v36);
  return aBlock;
}

BOOL sub_10033C3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v25[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v13 = type metadata accessor for Logger(0);
    sub_100012DC4(v13, (uint64_t)qword_100655F30);
    v14 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Accounts lists show rename tag UI", 33, 2, v14);
    swift_bridgeObjectRelease(v14);
    v15 = *sub_10001413C((_QWORD *)(Strong + 112), *(_QWORD *)(Strong + 136));
    v16 = swift_unknownObjectWeakLoadStrong(v15 + 16);
    if (v16)
    {
      v17 = v16;
      v18 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
      v19 = swift_allocObject(&unk_100601460, 136, 7);
      *(_QWORD *)(v19 + 16) = 0;
      *(_QWORD *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = a3;
      *(_QWORD *)(v19 + 48) = a4;
      *(_BYTE *)(v19 + 56) = 1;
      v20 = a5[1];
      *(_OWORD *)(v19 + 64) = *a5;
      *(_OWORD *)(v19 + 80) = v20;
      *(_OWORD *)(v19 + 96) = a5[2];
      *(_OWORD *)(v19 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(_QWORD *)(v19 + 128) = v17;
      swift_retain(v15);
      swift_bridgeObjectRetain(a4);
      sub_100341604((uint64_t)a5);
      v21 = sub_100148368((uint64_t)v11, (uint64_t)&unk_100656180, v19);
      swift_release(Strong);
      v22 = v21;
    }
    else
    {
      v22 = Strong;
    }
    swift_release(v22);
  }
  return Strong != 0;
}

BOOL sub_10033C5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t inited;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v29[48];
  _BYTE v30[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v13 = type metadata accessor for Logger(0);
    sub_100012DC4(v13, (uint64_t)qword_100655F30);
    v14 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1000143B4((uint64_t)"Accounts lists delete tag", 25, 2, v14);
    swift_bridgeObjectRelease(v14);
    v15 = sub_10001413C((_QWORD *)(Strong + 112), *(_QWORD *)(Strong + 136));
    v16 = sub_10002A750((uint64_t *)&unk_100654F80);
    inited = swift_initStackObject(v16, v29);
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    swift_bridgeObjectRetain(a4);
    v18 = sub_100490398(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    v19 = *v15;
    v20 = swift_unknownObjectWeakLoadStrong(*v15 + 16);
    if (v20)
    {
      v21 = v20;
      v22 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
      v23 = swift_allocObject(&unk_100601438, 136, 7);
      *(_QWORD *)(v23 + 16) = 0;
      *(_QWORD *)(v23 + 24) = 0;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v18;
      *(_QWORD *)(v23 + 48) = 0;
      *(_BYTE *)(v23 + 56) = 0;
      v24 = a5[1];
      *(_OWORD *)(v23 + 64) = *a5;
      *(_OWORD *)(v23 + 80) = v24;
      *(_OWORD *)(v23 + 96) = a5[2];
      *(_OWORD *)(v23 + 105) = *(_OWORD *)((char *)a5 + 41);
      *(_QWORD *)(v23 + 128) = v21;
      swift_retain(v19);
      swift_bridgeObjectRetain(v18);
      sub_100341604((uint64_t)a5);
      v25 = sub_100148368((uint64_t)v11, (uint64_t)&unk_100656178, v23);
      swift_bridgeObjectRelease(v18);
      swift_release(Strong);
      v26 = v25;
    }
    else
    {
      swift_bridgeObjectRelease(v18);
      v26 = Strong;
    }
    swift_release(v26);
  }
  return Strong != 0;
}

uint64_t sub_10033C824(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;

  v4 = v3;
  v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v3 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 64), v12);
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v11 + 8) + 8))(ObjectType);
  v15 = (char *)v10 + v8[5];
  v16 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = *(void **)(v4 + 176);
  *v10 = (void *)v14;
  *(void **)((char *)v10 + v8[6]) = v17;
  v18 = v8[7];
  v21 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)((char *)v10 + v18) = v21;
  *((_BYTE *)v10 + v8[8]) = 0;
  type metadata accessor for TTRIShowSearchResultAssembly();
  swift_retain(v17);
  swift_unknownObjectRetain(v21);
  v19 = sub_100289DFC(a1, v10, a2, a3, v4, (uint64_t)&off_100600FE8);
  sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  return v19;
}

uint64_t sub_10033C984(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v11 = (char *)&v28 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v28 = a1;
    v29 = a2;
    v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v14 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain(a1);
    v15 = _swiftEmptyArrayStorage;
    v30 = v14;
    v31 = v4;
    do
    {
      sub_10002B1E8(v13, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      sub_10002B1E8((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
      {
        v16 = *(_QWORD *)v7;
        v17 = v7[8];
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = sub_100457288(0, v15[2] + 1, 1, v15);
        v19 = v15[2];
        v18 = v15[3];
        if (v19 >= v18 >> 1)
          v15 = sub_100457288((_QWORD *)(v18 > 1), v19 + 1, 1, v15);
        v15[2] = v19 + 1;
        v20 = &v15[2 * v19];
        v20[4] = v16;
        *((_BYTE *)v20 + 40) = v17;
        v14 = v30;
        v4 = v31;
      }
      else
      {
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
        sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease(v28);
    a2 = v29;
  }
  else
  {
    v15 = _swiftEmptyArrayStorage;
  }
  v21 = a2[9];
  ObjectType = swift_getObjectType(a2[8], v8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 120))(v15, ObjectType, v21);
  swift_bridgeObjectRelease(v15);
  v23 = a2[23];
  v24 = swift_retain(v23);
  v25 = TTRAccountsListsViewModel.activePinnedListsDisplayOrder()(v24);
  v26 = swift_release(v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(*(_QWORD *)(v21 + 8) + 40))(v25, 0, ObjectType, v26);
  swift_bridgeObjectRelease(v25);
  return 1;
}

uint64_t sub_10033CBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  char v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  __n128 v22;
  char v23;
  unsigned int v27;

  v5 = a5;
  v6 = a4;
  v7 = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v27 = a5;
    swift_bridgeObjectRetain(a1);
    v11 = (_BYTE *)(a1 + 40);
    do
    {
      v12 = (void *)*((_QWORD *)v11 - 1);
      v13 = *v11;
      v14 = v12;
      if (objc_msgSend(v14, "isPinned"))
      {
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1003D85C8(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v16 = _swiftEmptyArrayStorage[2];
        v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1)
          sub_1003D85C8(v15 > 1, v16 + 1, 1);
        _swiftEmptyArrayStorage[2] = v16 + 1;
        v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v12;
        *((_BYTE *)v17 + 40) = v13;
      }
      else
      {

      }
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(a1);
    v5 = v27;
    v7 = a3;
    v6 = a4;
  }
  v19 = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  ObjectType = swift_getObjectType(v19, a2);
  v21 = sub_1003E8068((uint64_t)_swiftEmptyArrayStorage);
  v22 = swift_release(_swiftEmptyArrayStorage);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 160))(a1, v7, v6, v5, v21, ObjectType, v18, v22);
  swift_bridgeObjectRelease(v21);
  return v23 & 1;
}

uint64_t sub_10033CD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  char v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  __n128 v22;
  char v23;
  unsigned int v27;

  v5 = a5;
  v6 = a4;
  v7 = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v27 = a5;
    swift_bridgeObjectRetain(a1);
    v11 = (_BYTE *)(a1 + 40);
    do
    {
      v12 = (void *)*((_QWORD *)v11 - 1);
      v13 = *v11;
      v14 = v12;
      if (objc_msgSend(v14, "isPinned"))
      {
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1003D85C8(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v16 = _swiftEmptyArrayStorage[2];
        v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1)
          sub_1003D85C8(v15 > 1, v16 + 1, 1);
        _swiftEmptyArrayStorage[2] = v16 + 1;
        v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v12;
        *((_BYTE *)v17 + 40) = v13;
      }
      else
      {

      }
      v11 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(a1);
    v5 = v27;
    v7 = a3;
    v6 = a4;
  }
  v19 = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  ObjectType = swift_getObjectType(v19, a2);
  v21 = sub_1003E8068((uint64_t)_swiftEmptyArrayStorage);
  v22 = swift_release(_swiftEmptyArrayStorage);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 168))(a1, v7, v6, v5, v21, ObjectType, v18, v22);
  swift_bridgeObjectRelease(v21);
  return v23 & 1;
}

id sub_10033CEF4(id *a1)
{
  char *v1;
  void *v2;
  id v3;

  v1 = (char *)sub_1003E5C4C(*a1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = *(id *)&v1[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

  return v3;
}

void sub_10033CF48(id *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (char *)sub_1003E5C4C(*a1);
  if (!v3)
    goto LABEL_4;
  v4 = v3;
  v5 = *(id *)&v3[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

  v6 = objc_msgSend(v5, "hashtagContext");
  if (!v6)
  {

LABEL_4:
    v5 = 0;
  }
  *a2 = v5;
}

double sub_10033CFD4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a3 + 16;
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(a3 + 16, v10, 0, 0);
    Strong = swift_weakLoadStrong(v5);
    if (!Strong)
      return result;
    v8 = Strong;
    sub_100330D6C(a4);
  }
  else
  {
    swift_beginAccess(a3 + 16, v10, 0, 0);
    v9 = swift_weakLoadStrong(v5);
    if (!v9)
      return result;
    v8 = v9;
    sub_100330974(a4);
  }
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_10033D064(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_100332E50(a3);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033D0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_10033D12C, v8, v9);
}

uint64_t sub_10033D12C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[8] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10033D1A8;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10033D1A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10033D1F4, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10033D1F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_100333D58(v1, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10033D234(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _BYTE v27[24];

  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v14 = Strong;
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
    type metadata accessor for MainActor(0);
    swift_retain(v14);
    v16 = sub_100076C08((uint64_t)a3);
    v17 = static MainActor.shared.getter(v16);
    v18 = swift_allocObject(a4, 258, 7);
    v19 = a3[11];
    *(_OWORD *)(v18 + 200) = a3[10];
    *(_OWORD *)(v18 + 216) = v19;
    *(_OWORD *)(v18 + 232) = a3[12];
    *(_OWORD *)(v18 + 242) = *(_OWORD *)((char *)a3 + 202);
    v20 = a3[7];
    *(_OWORD *)(v18 + 136) = a3[6];
    *(_OWORD *)(v18 + 152) = v20;
    v21 = a3[9];
    *(_OWORD *)(v18 + 168) = a3[8];
    *(_OWORD *)(v18 + 184) = v21;
    v22 = a3[3];
    *(_OWORD *)(v18 + 72) = a3[2];
    *(_OWORD *)(v18 + 88) = v22;
    v23 = a3[5];
    *(_OWORD *)(v18 + 104) = a3[4];
    *(_OWORD *)(v18 + 120) = v23;
    v24 = a3[1];
    *(_OWORD *)(v18 + 40) = *a3;
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v18 + 32) = v14;
    *(_OWORD *)(v18 + 56) = v24;
    v25 = sub_100148368((uint64_t)v11, a5, v18);
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_10033D41C, v8, v9);
}

uint64_t sub_10033D41C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[2] = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v0[8] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10033D498;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10033D498()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_10033D4E4, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10033D4E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_100333D58(v1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10033D524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_1003313DC(a3, *(unsigned __int8 *)(a3 + 216));
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033D584(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    a4(a3);
    return swift_release(v8);
  }
  return result;
}

double sub_10033D5F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  _BYTE v12[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (Strong)
  {
    v11 = Strong;
    sub_100335000(a3, a6);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033D660(uint64_t a1, void *a2, int a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *inited;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[32];

  LODWORD(v47) = a3;
  v7 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMAccountsListDataView.Model(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v45 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v13 = a1;
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(v13 + 72);
  ObjectType = swift_getObjectType(v14, v16);
  v18 = sub_10002A750(&qword_100656278);
  v19 = swift_allocObject(v18, 48, 7);
  v43 = xmmword_100520250;
  *(_OWORD *)(v19 + 16) = xmmword_100520250;
  v20 = a2;
  *(_QWORD *)(v19 + 32) = a2;
  *(_BYTE *)(v19 + 40) = v47 & 1;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 120);
  v22 = v20;
  v47 = v14;
  v44 = v15;
  v21(v19, ObjectType, v15);
  v23 = v10;
  swift_bridgeObjectRelease(v19);
  v24 = v46 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v46 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v49, 0, 0);
  sub_10000735C(v24, (uint64_t)v9, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1000073A0((uint64_t)v9, &qword_100656198);
  v26 = v45;
  v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v45, v9, v23);
  v28 = REMAccountsListDataView.Model.orderedPinnedLists.getter(v27);
  v29 = Array<A>.init(pinnedLists:)(v28);
  v30 = sub_10002A750(&qword_100656280);
  inited = (_OWORD *)swift_initStackObject(v30, &v48);
  inited[1] = v43;
  v32 = a4[1];
  inited[2] = *a4;
  inited[3] = v32;
  v33 = a4[5];
  v35 = a4[2];
  v34 = a4[3];
  inited[6] = a4[4];
  inited[7] = v33;
  inited[4] = v35;
  inited[5] = v34;
  v36 = a4[9];
  v38 = a4[6];
  v37 = a4[7];
  inited[10] = a4[8];
  inited[11] = v36;
  inited[8] = v38;
  inited[9] = v37;
  v40 = a4[11];
  v39 = a4[12];
  v41 = a4[10];
  *(_OWORD *)((char *)inited + 234) = *(_OWORD *)((char *)a4 + 202);
  inited[13] = v40;
  inited[14] = v39;
  inited[12] = v41;
  sub_100076C08((uint64_t)a4);
  v42 = Array<A>.appending(lists:)(inited, v29);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 2, 1, &type metadata for TTRAccountsListsViewModel.List);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8) + 40))(v42, v29, ObjectType);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v29);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v26, v23);
}

uint64_t sub_10033D914(uint64_t a1, void *a2, int a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45[24];

  LODWORD(v44) = a3;
  v7 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMAccountsListDataView.Model(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v43 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  ObjectType = swift_getObjectType(v13, v15);
  v17 = sub_10002A750(&qword_100656278);
  v18 = swift_allocObject(v17, 48, 7);
  v41 = xmmword_100520250;
  *(_OWORD *)(v18 + 16) = xmmword_100520250;
  v19 = a2;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = v44 & 1;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 128);
  v21 = v19;
  v42 = v13;
  v44 = ObjectType;
  v20(v18, ObjectType, v14);
  swift_bridgeObjectRelease(v18);
  v22 = a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v45, 0, 0);
  sub_10000735C(v22, (uint64_t)v9, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1000073A0((uint64_t)v9, &qword_100656198);
  v24 = v43;
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v43, v9, v10);
  v26 = REMAccountsListDataView.Model.orderedPinnedLists.getter(v25);
  v27 = Array<A>.init(pinnedLists:)(v26);
  v28 = sub_10002A750(&qword_100656280);
  v29 = (_OWORD *)swift_allocObject(v28, 256, 7);
  v30 = a4[10];
  v31 = a4[12];
  v29[13] = a4[11];
  v29[14] = v31;
  *(_OWORD *)((char *)v29 + 234) = *(__int128 *)((char *)a4 + 202);
  v32 = a4[6];
  v33 = a4[8];
  v34 = a4[9];
  v29[9] = a4[7];
  v29[10] = v33;
  v29[11] = v34;
  v29[12] = v30;
  v35 = a4[2];
  v36 = a4[4];
  v37 = a4[5];
  v29[5] = a4[3];
  v29[6] = v36;
  v29[7] = v37;
  v29[8] = v32;
  v38 = *a4;
  v39 = a4[1];
  v29[1] = v41;
  v29[2] = v38;
  v29[3] = v39;
  v29[4] = v35;
  sub_100076C08((uint64_t)a4);
  v40 = Array<A>.removing(lists:)(v29, v27);
  swift_bridgeObjectRelease(v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8) + 40))(v40, v27, v44);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v24, v10);
}

void sub_10033DB98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  _QWORD *v12;
  void *Strong;
  void *v14;
  id v15;

  static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter();
  v3 = v2;
  static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v15 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v11, 1, 0);

  objc_msgSend(v8, "addAction:", v15);
  v12 = sub_10001413C((_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 136));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v12 + 16);
  if (Strong)
  {
    v14 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v8, 1, 0);

    v8 = v15;
    v15 = v14;
  }

}

uint64_t sub_10033DCF8()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  swift_release();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  sub_100027F10((_QWORD *)(v0 + 112));

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, &qword_100656198);

  swift_release();
  sub_10002FAF0(*(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 40), *(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 48), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 56), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 64), *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 72), *(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest + 80));

  return v0;
}

uint64_t sub_10033DDF4()
{
  uint64_t v0;

  sub_10033DCF8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10033DE18()
{
  return type metadata accessor for TTRIAccountsListsPresenter(0);
}

void sub_10033DE20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[20];

  v4[0] = &unk_10052E930;
  v4[1] = &unk_10052E930;
  v4[4] = &unk_10052E948;
  v4[5] = &unk_10052E948;
  v4[6] = &unk_10052E948;
  v4[7] = &unk_10052E960;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = &unk_10052E978;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10033DF00(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(v2 - 8) + 64;
    v4[14] = &unk_10052E990;
    v4[15] = &unk_10052E9A8;
    v4[16] = &unk_10052E990;
    v4[17] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[18] = &unk_10052E9C0;
    v4[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 20, v4, a1 + 80);
  }
}

void sub_10033DF00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100655FB8)
  {
    v2 = type metadata accessor for REMAccountsListDataView.Model(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100655FB8);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for TTRIAccountsListsPresenter.PostModelUpdateAction(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsPresenter.PostModelUpdateAction()
{
  return &type metadata for TTRIAccountsListsPresenter.PostModelUpdateAction;
}

uint64_t sub_10033E00C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_10033E06C + 4 * byte_10052E806[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

double sub_10033E278(_QWORD *a1, uint64_t a2)
{
  double result;
  uint64_t v4;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      *(_QWORD *)&result = swift_bridgeObjectRelease(*a1).n128_u64[0];
      break;
    case 1u:
      sub_100075E70((void *)*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], (void *)a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], (void *)a1[16], (void *)a1[17], *((_OWORD *)a1 + 9),
        a1[19],
        a1[20],
        a1[21],
        a1[22],
        a1[23],
        (void *)a1[24],
        a1[25],
        a1[26],
        *((_WORD *)a1 + 108));
      break;
    case 2u:
      v4 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 3u:
      *(_QWORD *)&result = swift_release().n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10033E360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_10033E3B4 + 4 * byte_10052E80E[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t *sub_10033E3B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *v0 = *v2;
  swift_bridgeObjectRetain(v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_10033E5A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10001F544(result, type metadata accessor for TTRIAccountsListsSelection);
    v5 = (char *)&loc_10033E60C + 4 * byte_10052E812[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

void *sub_10033E7F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    v6 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10033E884(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIAccountsListsSelection);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      v6 = type metadata accessor for REMHashtagLabelSpecifier(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10033E928(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = &unk_10052EA20;
  result = type metadata accessor for REMHashtagLabelSpecifier(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10052EA38;
    swift_initEnumMetadataMultiPayload(a1, 256, 4, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10033E9AC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((sub_1003E5908(a1) & 1) != 0)
    return 0;
  v2 = sub_10002A750(&qword_100650578);
  v3 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  v4 = sub_10002D150((unint64_t *)&qword_100650588, &qword_100650578);
  result = Sequence.completeCompactMap<A>(_:)(sub_10033CF48, 0, v2, v3, v4);
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return 1;
  }
  return result;
}

uint64_t sub_10033EA5C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 184));
}

uint64_t sub_10033EA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v5[69] = a5;
  v5[68] = a4;
  v7 = type metadata accessor for MainActor(0);
  v5[70] = v7;
  v5[71] = static MainActor.shared.getter(v7);
  v8 = (_QWORD *)swift_task_alloc(dword_1006561CC);
  v5[72] = v8;
  *v8 = v5;
  v8[1] = sub_10033EAE4;
  return sub_10033EE50((uint64_t)(v5 + 57), a4);
}

uint64_t sub_10033EAE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 560);
  swift_task_dealloc(*(_QWORD *)(*v0 + 576));
  *(_QWORD *)(v1 + 584) = *(_QWORD *)(v1 + 456);
  v3 = *(_OWORD *)(v1 + 480);
  *(_OWORD *)(v1 + 592) = *(_OWORD *)(v1 + 464);
  *(_OWORD *)(v1 + 608) = v3;
  v4 = *(_OWORD *)(v1 + 512);
  *(_OWORD *)(v1 + 624) = *(_OWORD *)(v1 + 496);
  *(_OWORD *)(v1 + 640) = v4;
  v5 = *(__n128 *)(v1 + 528);
  *(__n128 *)(v1 + 656) = v5;
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v5);
  return swift_task_switch(sub_10033EB7C, v6, v7);
}

uint64_t sub_10033EB7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28[3];
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;

  v1 = *(_QWORD *)(v0 + 544);
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_permissionRequest);
  v4 = v2[1];
  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  v33 = v2[5];
  v29 = (void *)v2[6];
  v31 = v2[7];
  v26 = v2[9];
  v27 = v2[8];
  v25 = (void *)v2[10];
  v34 = (_QWORD *)(v0 + 456);
  sub_10000F614(v0 + 456, v0 + 368, &qword_1006561B0);
  if (*(_QWORD *)(v0 + 384))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 600);
      *(_QWORD *)(v0 + 192) = v3;
      *(_QWORD *)(v0 + 200) = v4;
      *(_QWORD *)(v0 + 208) = v6;
      *(_QWORD *)(v0 + 216) = v5;
      *(_QWORD *)(v0 + 224) = v7;
      *(_QWORD *)(v0 + 232) = v33;
      *(_QWORD *)(v0 + 240) = v29;
      *(_QWORD *)(v0 + 248) = v31;
      *(_QWORD *)(v0 + 256) = v27;
      *(_QWORD *)(v0 + 264) = v26;
      *(_QWORD *)(v0 + 272) = v25;
      *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 584);
      *(_QWORD *)(v0 + 296) = v8;
      v9 = *(_OWORD *)(v0 + 624);
      *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 608);
      *(_OWORD *)(v0 + 320) = v9;
      v10 = *(_OWORD *)(v0 + 656);
      *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 640);
      *(_OWORD *)(v0 + 352) = v10;
      sub_10002FA6C((unint64_t)v3, v4, v6, v5, v7, v33, v29, v31, v27, v26, v25);
      v11 = (_QWORD *)(v0 + 456);
      sub_1002387D8(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FA6C);
      v12 = sub_100344C5C(v0 + 280, v0 + 192);
      sub_10002FAF0(v3, v4, v6, v5, v7, v33, v29, v31, v27, v26, v25);
      sub_1002387D8(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FAF0);
      if (v12)
        goto LABEL_8;
      goto LABEL_7;
    }
LABEL_6:
    v13 = *(_QWORD *)(v0 + 664);
    v14 = *(_OWORD *)(v0 + 600);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 584);
    *(_OWORD *)(v0 + 32) = v14;
    v15 = *(_OWORD *)(v0 + 632);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 616);
    *(_OWORD *)(v0 + 64) = v15;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 648);
    *(_QWORD *)(v0 + 96) = v13;
    *(_QWORD *)(v0 + 104) = v3;
    *(_QWORD *)(v0 + 112) = v4;
    *(_QWORD *)(v0 + 120) = v6;
    *(_QWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 136) = v7;
    *(_QWORD *)(v0 + 144) = v33;
    *(_QWORD *)(v0 + 152) = v29;
    *(_QWORD *)(v0 + 160) = v31;
    *(_QWORD *)(v0 + 168) = v27;
    *(_QWORD *)(v0 + 176) = v26;
    *(_QWORD *)(v0 + 184) = v25;
    sub_10002FA6C((unint64_t)v3, v4, v6, v5, v7, v33, v29, v31, v27, v26, v25);
    sub_1002387D8(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FA6C);
    sub_100347D74(v0 + 16);
LABEL_7:
    v32 = *(_QWORD *)(v0 + 552);
    v16 = (void *)*v2;
    v17 = v2[1];
    v18 = v2[2];
    v19 = v2[3];
    v21 = v2[4];
    v20 = v2[5];
    v22 = v2[7];
    v30 = (void *)v2[6];
    *(_OWORD *)v28 = *((_OWORD *)v2 + 4);
    v23 = (void *)v2[10];
    sub_10000F614((uint64_t)v34, (uint64_t)v2, &qword_1006561B0);
    sub_1002387D8(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FA6C);
    sub_10002FAF0(v16, v17, v18, v19, v21, v20, v30, v22, v28[0], v28[1], v23);
    sub_10032E598(v32, 0, 2, 0);
    v11 = (_QWORD *)(v0 + 456);
LABEL_8:
    sub_1002387D8(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002FAF0);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v6)
    goto LABEL_6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033EE50(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[25] = a1;
  v2[26] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[27] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  v2[28] = v5;
  v2[29] = v6;
  return swift_task_switch(sub_10033EEBC, v5, v6);
}

uint64_t sub_10033EEBC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[24] = *(_QWORD *)(v0[26] + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_privacyChecker);
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to TTRPrivacyChecker.inlineRequestPresentationState(for:)
                                  + 1));
  v0[30] = v1;
  v2 = type metadata accessor for TTRIPrivacyChecker(0);
  *v1 = v0;
  v1[1] = sub_10033EF38;
  return TTRPrivacyChecker.inlineRequestPresentationState(for:)(0, v2, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_10033EF38(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_BYTE *)(*v1 + 248) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10033EF90, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_10033EF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 248);
  v2 = swift_release(*(_QWORD *)(v0 + 216));
  if ((_DWORD)v1)
  {
    if ((_DWORD)v1 == 1)
    {
      v3 = (__int128 *)(v0 + 104);
      static TTRPermissionConfiguration.notificationPermissionRequest()(v2);
    }
    else
    {
      v3 = (__int128 *)(v0 + 16);
      static TTRPermissionConfiguration.notificationPermissionDisabled()(v2);
    }
    v4 = *v3;
    v1 = *((_QWORD *)v3 + 2);
    v5 = *(__int128 *)((char *)v3 + 24);
    v6 = *(__int128 *)((char *)v3 + 40);
    v7 = *(__int128 *)((char *)v3 + 56);
    v8 = *(__int128 *)((char *)v3 + 72);
  }
  else
  {
    v4 = 0uLL;
    v5 = 0uLL;
    v6 = 0uLL;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  v9 = *(_QWORD *)(v0 + 200);
  *(_OWORD *)v9 = v4;
  *(_QWORD *)(v9 + 16) = v1;
  *(_OWORD *)(v9 + 24) = v5;
  *(_OWORD *)(v9 + 40) = v6;
  *(_OWORD *)(v9 + 56) = v7;
  *(_OWORD *)(v9 + 72) = v8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10033F038(void *a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  id v13;
  _BYTE v14[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    if ((a2 & 1) != 0)
    {
      swift_release(Strong);
    }
    else
    {
      v10 = a4 & 1;
      v11 = Strong + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
      v12 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
      *(_QWORD *)v11 = a1;
      *(_BYTE *)(v11 + 8) = v10;
      v13 = a1;
      swift_release(v9);

    }
  }
}

uint64_t sub_10033F0D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_BYTE *))
{
  return sub_100348978(a3);
}

uint64_t sub_10033F0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE v11[24];

  v1 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for REMAccountsListDataView.Model(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v11, 0, 0);
  sub_10000735C(v8, (uint64_t)v3, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, &qword_100656198);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_10032E598((uint64_t)v7, 0, 2, 1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10033F224(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100348DCC(a3 & 1);
}

id sub_10033F22C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  id v3;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (!Strong)
    return 0;
  v2 = Strong;
  v3 = *(id *)(Strong + 112);
  swift_unknownObjectRelease(v2);
  return v3;
}

void sub_10033F274(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4, char a5)
{
  sub_100346190(a3, a4, a5);
}

double sub_10033F284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t);
  double result;

  v7 = *(_QWORD *)(v4 + 104);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 96), a2);
  v9 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v9 + 16, v4);
  v10 = swift_allocObject(&unk_100601898, 25, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_BYTE *)(v10 + 24) = 0;
  v11 = *(void (**)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  v11(a3, a4, sub_1002A0050, v10, ObjectType, v7);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_10033F354(void *a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *Strong;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  int v32;
  _QWORD aBlock[6];

  v32 = a3;
  v31 = a1;
  v5 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v8 = *(_QWORD *)(v30 - 8);
  v9 = __chkstk_darwin(v30);
  v29 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TTRLocalizableStrings.UndoAction.addList.getter(v9);
  v12 = v11;
  v13 = (void *)objc_opt_self(TTRUndoManager);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = swift_allocObject(&unk_100601820, 32, 7);
  *(_QWORD *)(v15 + 16) = v3;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = (_QWORD *)swift_allocObject(&unk_100601848, 32, 7);
  v16[2] = sub_100348780;
  v16[3] = v15;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100601860;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = a2;
  swift_retain();
  objc_msgSend(v13, "withActionName:block:", v14, v17, swift_release().n128_f64[0]);

  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v16, "", 114, 2305, 51, 1);
  swift_release();
  if ((v17 & 1) != 0)
  {
    __break(1u);
LABEL_12:

    goto LABEL_13;
  }
  if ((v32 & 1) == 0)
  {
LABEL_10:
    swift_release();
    return;
  }
  swift_retain();
  v19 = v31;
  TTRAccountsListsViewModel.item(with:)(v31);
  v20 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v7, 1, v30, v20) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640E00);
    v21 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
    v22 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
    *(_QWORD *)v21 = v19;
    *(_BYTE *)(v21 + 8) = 0;

    v23 = v19;
    goto LABEL_10;
  }
  v24 = v29;
  sub_10001F580((uint64_t)v7, v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (!Strong)
  {
LABEL_9:
    sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    goto LABEL_10;
  }
  v26 = Strong;
  v27 = objc_msgSend(Strong, "view");
  if (v27)
  {
    v16 = v27;
    v28 = type metadata accessor for TTRIAccountsListsTreeView(0);
    if (swift_dynamicCastClass(v16, v28))
    {
      sub_10032C7F8(v24, 3, 1, sub_10006B64C, (uint64_t (*)(uint64_t))sub_100073338, sub_1002AA398, sub_100073214, (void (*)(uint64_t, uint64_t *))sub_10019D874);
      swift_unknownObjectRelease(v26);

      goto LABEL_9;
    }
    goto LABEL_12;
  }
LABEL_13:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

void sub_10033F6D8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_10033F354(a3, a4, 1);
}

uint64_t sub_10033F6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[5] = a4;
  v5 = type metadata accessor for ContinuousClock(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v4[10] = v9;
  v4[11] = v10;
  return swift_task_switch(sub_10033F77C, v9, v10);
}

uint64_t sub_10033F77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(1.0);
  v3 = v2;
  ContinuousClock.init()();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100657320 + dword_100657320);
  v4 = (_QWORD *)swift_task_alloc(unk_100657324);
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_10033F810;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_10033F810()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[7] + 8))(v2[8], v2[6]);
  if (v0)
    v4 = sub_10033F94C;
  else
    v4 = sub_10033F880;
  return swift_task_switch(v4, v2[10], v2[11]);
}

uint64_t sub_10033F880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 64), v3);
    v6 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(ObjectType);
    v7 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v6);
    sub_100043358(v6, (uint64_t)v7);
    if ((sub_10035738C() & 1) != 0)
      sub_100357F3C(0);
    swift_release();
    swift_release();
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033F94C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10033F988(uint64_t a1, uint64_t a2, char a3)
{
  sub_100349070(a3 & 1);
}

double sub_10033F990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_10034918C(a5 & 1);
}

void sub_10033F998(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t (*v19)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char oslog;
  NSObject *osloga;

  v3 = v2;
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100655F30);
  v7 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Create custom smart list for hashtag labels", 43, 2, v7);
  v8 = swift_bridgeObjectRelease(v7);
  v9 = TTRAccountsListsPresenterCapability.customSmartListCreationParams(forHashtagLabels:)(a1, v8);
  if (!v9)
    goto LABEL_6;
  v13 = (void *)v9;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = *(_QWORD *)(v3 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 64), v10);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v17 + 64);
  oslog = a2;
  v20 = v16;
  v21 = v19(v13, v14, v15, v16, ObjectType, v17);
  swift_bridgeObjectRelease(v15);

  if (v21)
  {
    v22 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
    v23 = *(NSObject **)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
    *(_QWORD *)v22 = v21;
    *(_BYTE *)(v22 + 8) = oslog & 1;
  }
  else
  {
LABEL_6:
    osloga = Logger.logObject.getter(v9);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(osloga, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, osloga, v24, "Failed to create custom smart list for hashtag labels", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    v23 = osloga;
  }

}

uint64_t sub_10033FB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + 64), v7);
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(a2, ObjectType, v9);
    v12 = *sub_10001413C((_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 136));
    swift_retain(v8);
    sub_100344868(v11, v8, a3, v12);

    return swift_release_n(v8, 2);
  }
  return result;
}

uint64_t sub_10033FC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 72);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + 64), v7);
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 112))(a2, ObjectType, v9);
    v12 = *sub_10001413C((_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 136));
    swift_retain(v8);
    sub_100344B54(v11, v8, a3, v12);

    return swift_release_n(v8, 2);
  }
  return result;
}

void sub_10033FD00(uint64_t a1@<X1>, void *a2@<X2>, int a3@<W3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  __int128 *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t *v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[4];
  int v83;
  uint64_t v84;
  __int128 v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint8_t *v111;
  uint64_t v112;
  _OWORD v113[12];
  _OWORD v114[2];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _OWORD v127[2];
  _BYTE v128[224];
  _BYTE v129[224];
  uint64_t v130;
  _QWORD v131[28];
  _QWORD v132[28];
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char v148;
  char v149;
  unsigned __int8 v150;
  unsigned __int8 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160;
  unsigned __int8 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  _BYTE *v166;

  LODWORD(v112) = a3;
  v166 = a4;
  v7 = type metadata accessor for TTRIAccountsListsSelection(0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)&v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = (uint64_t *)&v82[-v11];
  a1 += 16;
  swift_beginAccess(a1, &v130, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    goto LABEL_32;
  v14 = Strong;
  v111 = (uint8_t *)v7;
  if ((objc_msgSend(a2, "isGroup") & 1) != 0)
  {
    v15 = *(_QWORD *)(v14 + 184);
    swift_retain(v15);
    v16 = objc_msgSend(a2, "objectID");
    TTRAccountsListsViewModel.group(with:)(v132);
    v17 = v132[1];
    v108 = v132[4];
    v109 = (id)v132[6];
    swift_release(v15);

    sub_10000F614((uint64_t)v132, (uint64_t)&v133, &qword_1006561E8);
    if (*((_QWORD *)&v133 + 1))
    {
      v162 = v133;
      v163 = v134;
      v164 = v135;
      v165 = v136;
      v18 = swift_unknownObjectWeakLoadStrong(v14 + 16);
      if (v18)
      {
        v19 = v18;
        v20 = sub_10002A750(&qword_100646A70);
        v21 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
        v22 = *(_QWORD *)(v21 - 8);
        v23 = *(_QWORD *)(v22 + 72);
        v24 = *(unsigned __int8 *)(v22 + 80);
        v25 = (v24 + 32) & ~v24;
        v26 = swift_allocObject(v20, v25 + v23, v24 | 7);
        *(_OWORD *)(v26 + 16) = xmmword_100520250;
        v27 = (_OWORD *)(v26 + v25);
        v28 = v165;
        v27[2] = v164;
        v27[3] = v28;
        v29 = v163;
        *v27 = v162;
        v27[1] = v29;
        swift_storeEnumTagMultiPayload(v26 + v25, v21, 6);
        *v12 = v26;
        swift_storeEnumTagMultiPayload(v12, v111, 0);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v108);
        v30 = v109;
        sub_1000620B0((uint64_t)v12, 0, v112 & 1);
        sub_10001F544((uint64_t)v12, type metadata accessor for TTRIAccountsListsSelection);
        swift_unknownObjectRelease(v19);
      }
      sub_1003486FC((uint64_t)v132);
      goto LABEL_26;
    }
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v51 = type metadata accessor for Logger(0);
    sub_100012DC4(v51, (uint64_t)qword_100655F30);
    v52 = a2;
    v39 = Logger.logObject.getter(v52);
    v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v53))
    {
      v54 = swift_slowAlloc(12, -1);
      v112 = v4;
      v55 = (uint8_t *)v54;
      v56 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v55 = 138412290;
      v111 = v55 + 4;
      v57 = -[NSObject objectID](v52, "objectID");
      *(_QWORD *)&v162 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v111, v55 + 12);
      *v56 = v57;

      _os_log_impl((void *)&_mh_execute_header, v39, v53, "Couldn't find the group to select {list.objectID: %@}", v55, 0xCu);
      v58 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v56, 1, v58);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);
    }
    else
    {

      v39 = v52;
    }
    v59 = v14;
    goto LABEL_31;
  }
  v31 = *(_QWORD *)(v14 + 184);
  swift_retain(v31);
  v32 = v14;
  v33 = objc_msgSend(a2, "objectID");
  TTRAccountsListsViewModel.pinnedListInnerList(with:)(v131);
  sub_10000F614((uint64_t)v131, (uint64_t)v129, &qword_100640F68);
  swift_release(v31);

  sub_10000F614((uint64_t)v131, (uint64_t)&v162, &qword_100640F68);
  v34 = sub_100076D84((uint64_t *)&v162);
  v110 = v32;
  if (v34 != 1)
  {
    sub_10000F614((uint64_t)v129, (uint64_t)&v133, &qword_100640F68);
    LODWORD(v109) = v161;
    LODWORD(v108) = v160;
    v97 = v159;
    v98 = v158;
    v103 = v157;
    v104 = v154;
    v106 = v153;
    v107 = v155;
    v105 = v152;
    v86 = v151;
    v83 = v150;
    v46 = v149;
    v47 = v148;
    v101 = v156;
    v102 = v145;
    v48 = v147;
    v99 = v146;
    v100 = v139;
    v95 = v141;
    v96 = v140;
    v49 = v144;
    v93 = v138;
    v94 = v142;
    v90 = v143;
    v91 = v137;
    v92 = *((_QWORD *)&v136 + 1);
    v88 = v136;
    v89 = v135;
    v87 = *((_QWORD *)&v134 + 1);
    v84 = v134;
    v85 = v133;
    v50 = (__int128 *)v129;
LABEL_20:
    sub_10000F614((uint64_t)v50, (uint64_t)v128, &qword_100640F68);
    v115 = v85;
    *(_QWORD *)&v116 = v84;
    *((_QWORD *)&v116 + 1) = v87;
    v117 = v89;
    *(_QWORD *)&v118 = v88;
    *((_QWORD *)&v118 + 1) = v92;
    *(_QWORD *)&v119 = v91;
    *((_QWORD *)&v119 + 1) = v93;
    *(_QWORD *)&v120 = v100;
    *((_QWORD *)&v120 + 1) = v96;
    *(_QWORD *)&v121 = v95;
    *((_QWORD *)&v121 + 1) = v94;
    *(_QWORD *)&v122 = v90;
    BYTE8(v122) = v49;
    *(_QWORD *)&v123 = v102;
    *((_QWORD *)&v123 + 1) = v99;
    LOBYTE(v124) = v48;
    BYTE1(v124) = v47;
    BYTE2(v124) = v46;
    BYTE3(v124) = v83;
    BYTE4(v124) = v86;
    *((_QWORD *)&v124 + 1) = v105;
    *(_QWORD *)&v125 = v106;
    *((_QWORD *)&v125 + 1) = v104;
    *(_QWORD *)&v126 = v107;
    *((_QWORD *)&v126 + 1) = v101;
    *(_QWORD *)&v127[0] = v103;
    *((_QWORD *)&v127[0] + 1) = v98;
    *(_QWORD *)&v127[1] = v97;
    BYTE8(v127[1]) = v108;
    v60 = v110;
    BYTE9(v127[1]) = (_BYTE)v109;
    v61 = swift_unknownObjectWeakLoadStrong(v110 + 16);
    if (!v61)
    {
      sub_100076D9C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1003485EC);
      sub_100076D9C((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
      sub_100075FE8((uint64_t)&v115);
      v81 = v60;
LABEL_27:
      swift_release(v81);
      *v166 = 1;
      return;
    }
    v62 = v61;
    if ((v46 & 1) != 0)
    {
      v113[10] = v125;
      v113[11] = v126;
      v114[0] = v127[0];
      *(_OWORD *)((char *)v114 + 10) = *(_OWORD *)((char *)v127 + 10);
      v113[6] = v121;
      v113[7] = v122;
      v113[8] = v123;
      v113[9] = v124;
      v113[2] = v117;
      v113[3] = v118;
      v113[4] = v119;
      v113[5] = v120;
      v113[0] = v115;
      v113[1] = v116;
      sub_10007636C((uint64_t)v113);
      sub_100075CE8((uint64_t)v113, (uint64_t)v10);
      v78 = v10;
      v79 = v111;
      v80 = 1;
    }
    else
    {
      v63 = sub_10002A750(&qword_100646A70);
      v64 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(_QWORD *)(v65 + 72);
      v67 = *(unsigned __int8 *)(v65 + 80);
      v68 = (v67 + 32) & ~v67;
      v69 = swift_allocObject(v63, v68 + v66, v67 | 7);
      *(_OWORD *)(v69 + 16) = xmmword_100520250;
      v70 = (_OWORD *)(v69 + v68);
      v71 = v116;
      *v70 = v115;
      v70[1] = v71;
      v72 = v120;
      v70[4] = v119;
      v70[5] = v72;
      v73 = v118;
      v70[2] = v117;
      v70[3] = v73;
      v74 = v124;
      v70[8] = v123;
      v70[9] = v74;
      v75 = v122;
      v70[6] = v121;
      v70[7] = v75;
      *(_OWORD *)((char *)v70 + 202) = *(_OWORD *)((char *)v127 + 10);
      v76 = v127[0];
      v77 = v125;
      v70[11] = v126;
      v70[12] = v76;
      v70[10] = v77;
      swift_storeEnumTagMultiPayload(v69 + v68, v64, 4);
      *v10 = v69;
      v78 = v10;
      v79 = v111;
      v80 = 0;
    }
    swift_storeEnumTagMultiPayload(v78, v79, v80);
    v14 = v110;
    sub_100076D9C((uint64_t)v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1003485EC);
    sub_100076C08((uint64_t)&v115);
    sub_1000620B0((uint64_t)v10, 0, v112 & 1);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIAccountsListsSelection);
    sub_100076D9C((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
    swift_unknownObjectRelease(v62);
    sub_100075FE8((uint64_t)&v115);
LABEL_26:
    v81 = v14;
    goto LABEL_27;
  }
  v35 = *(_QWORD *)(v32 + 184);
  swift_retain(v35);
  v36 = objc_msgSend(a2, "objectID");
  TTRAccountsListsViewModel.list(with:)(v132);
  sub_10000F614((uint64_t)v132, (uint64_t)&v115, &qword_100640F68);
  swift_release(v35);

  sub_10000F614((uint64_t)v132, (uint64_t)&v133, &qword_100640F68);
  if (sub_100076D84((uint64_t *)&v133) != 1)
  {
    v85 = v133;
    v84 = v134;
    v89 = v135;
    v87 = *((_QWORD *)&v134 + 1);
    v88 = v136;
    v91 = v137;
    v92 = *((_QWORD *)&v136 + 1);
    v95 = v141;
    v96 = v140;
    v93 = v138;
    v94 = v142;
    v90 = v143;
    v102 = v145;
    v99 = v146;
    v100 = v139;
    v46 = v149;
    v105 = v152;
    v106 = v153;
    v107 = v155;
    LODWORD(v109) = v161 & 1;
    LODWORD(v108) = v160 & 1;
    v101 = v156;
    v103 = v157;
    v104 = v154;
    v86 = v151 & 1;
    v83 = v150 & 1;
    v47 = v148 & 1;
    v48 = v147 & 1;
    v49 = v144 & 1;
    v97 = v159;
    v98 = v158;
    sub_10000F614((uint64_t)&v115, (uint64_t)v113, &qword_100640F68);
    sub_100076C08((uint64_t)v113);
    v50 = &v115;
    goto LABEL_20;
  }
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v37 = type metadata accessor for Logger(0);
  sub_100012DC4(v37, (uint64_t)qword_100655F30);
  v38 = a2;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(12, -1);
    v112 = v4;
    v42 = (uint8_t *)v41;
    v43 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v42 = 138412290;
    v111 = v42 + 4;
    v44 = -[NSObject objectID](v38, "objectID");
    *(_QWORD *)&v113[0] = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v113, (char *)v113 + 8, v111, v42 + 12);
    *v43 = v44;

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Couldn't find the list to select {list.objectID: %@}", v42, 0xCu);
    v45 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v43, 1, v45);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);
  }
  else
  {

    v39 = v38;
  }
  v59 = v110;
LABEL_31:
  swift_release(v59);

LABEL_32:
  *v166 = 0;
}

void sub_10034080C(uint64_t a1@<X1>, void *a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  _OWORD v47[12];
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  _BYTE v62[224];
  uint64_t v63;
  _QWORD v64[30];
  _BYTE *v65;

  v7 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, &v63, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
  {
LABEL_15:
    *a3 = 0;
    return;
  }
  v11 = Strong;
  v65 = a3;
  if ((objc_msgSend(a2, "isPinned") & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 184);
    swift_retain(v12);
    v13 = objc_msgSend(a2, "objectID");
    TTRAccountsListsViewModel.pinnedListInnerList(with:)(v64);
    sub_10000F614((uint64_t)v64, (uint64_t)&v49, &qword_100640F68);
    swift_release(v12);

  }
  else
  {
    v14 = *(_QWORD *)(v11 + 184);
    swift_retain(v14);
    v15 = objc_msgSend(a2, "objectID");
    TTRAccountsListsViewModel.customSmartList(with:)(v64);
    sub_10000F614((uint64_t)v64, (uint64_t)&v49, &qword_100640F68);
    swift_release(v14);

  }
  sub_10000F614((uint64_t)&v49, (uint64_t)v62, &qword_100640F68);
  sub_10000F614((uint64_t)v62, (uint64_t)&v49, &qword_100640F68);
  if (sub_100076D84((uint64_t *)&v49) == 1)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v16 = type metadata accessor for Logger(0);
    sub_100012DC4(v16, (uint64_t)qword_100655F30);
    v17 = a2;
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v46 = v3;
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v20 = 138412290;
      v45 = v20 + 4;
      v22 = -[NSObject objectID](v17, "objectID");
      *(_QWORD *)&v47[0] = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v47, (char *)v47 + 8, v45, v20 + 12);
      *v21 = v22;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Couldn't find the list to select {list.objectID: %@}", v20, 0xCu);
      v23 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v21, 1, v23);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {

      v18 = v17;
    }
    a3 = v65;
    swift_release(v11);

    goto LABEL_15;
  }
  v24 = swift_unknownObjectWeakLoadStrong(v11 + 16);
  v25 = v65;
  if (v24)
  {
    v26 = v24;
    v46 = v3;
    if ((BYTE2(v58) & 1) != 0)
    {
      v47[10] = v59;
      v47[11] = v60;
      v48[0] = v61[0];
      *(_OWORD *)((char *)v48 + 10) = *(_OWORD *)((char *)v61 + 10);
      v47[6] = v55;
      v47[7] = v56;
      v47[8] = v57;
      v47[9] = v58;
      v47[2] = v51;
      v47[3] = v52;
      v47[4] = v53;
      v47[5] = v54;
      v47[0] = v49;
      v47[1] = v50;
      sub_10007636C((uint64_t)v47);
      sub_100075CE8((uint64_t)v47, (uint64_t)v9);
      v42 = v9;
      v43 = v7;
      v44 = 1;
    }
    else
    {
      v27 = sub_10002A750(&qword_100646A70);
      v28 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(_QWORD *)(v29 + 72);
      v31 = *(unsigned __int8 *)(v29 + 80);
      v32 = (v31 + 32) & ~v31;
      v33 = swift_allocObject(v27, v32 + v30, v31 | 7);
      *(_OWORD *)(v33 + 16) = xmmword_100520250;
      v34 = (_OWORD *)(v33 + v32);
      v35 = v50;
      *v34 = v49;
      v34[1] = v35;
      v36 = v54;
      v34[4] = v53;
      v34[5] = v36;
      v37 = v52;
      v34[2] = v51;
      v34[3] = v37;
      v38 = v58;
      v34[8] = v57;
      v34[9] = v38;
      v39 = v56;
      v34[6] = v55;
      v34[7] = v39;
      *(_OWORD *)((char *)v34 + 202) = *(_OWORD *)((char *)v61 + 10);
      v40 = v61[0];
      v41 = v59;
      v34[11] = v60;
      v34[12] = v40;
      v34[10] = v41;
      swift_storeEnumTagMultiPayload(v33 + v32, v28, 5);
      *v9 = v33;
      v25 = v65;
      v42 = v9;
      v43 = v7;
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v42, v43, v44);
    sub_10000F614((uint64_t)v62, (uint64_t)v47, &qword_100640F68);
    sub_100076C08((uint64_t)v47);
    sub_1000620B0((uint64_t)v9, 0, 0);
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIAccountsListsSelection);
    swift_unknownObjectRelease(v26);
    sub_100076D9C((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
    swift_release(v11);
  }
  else
  {
    sub_100076D9C((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_100076E18);
    swift_release(v11);
  }
  *v25 = 1;
}

void sub_100340CFC(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v17[224];
  _BYTE v18[32];

  v8 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v8);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v18, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    goto LABEL_6;
  v12 = Strong;
  swift_retain();
  v13 = TTRAccountsListsViewModel.canDisplay(_:)(a2);
  swift_release();
  if ((v13 & 1) == 0)
  {
    swift_release();
LABEL_6:
    v16 = 0;
    goto LABEL_7;
  }
  v14 = swift_unknownObjectWeakLoadStrong(v12 + 16);
  if (v14)
  {
    v15 = v14;
    v17[0] = a2;
    sub_1000763A4((uint64_t)v17);
    sub_100075CE8((uint64_t)v17, (uint64_t)v10);
    v16 = 1;
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    sub_1000620B0((uint64_t)v10, 0, a3 & 1);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIAccountsListsSelection);
    swift_release();
    swift_unknownObjectRelease(v15);
  }
  else
  {
    swift_release();
    v16 = 1;
  }
LABEL_7:
  *a4 = v16;
}

void sub_100340E6C(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v6 = type metadata accessor for TTRIAccountsListsSelection(0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v20, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    goto LABEL_4;
  v13 = Strong;
  sub_10000735C(*(_QWORD *)(Strong + 184) + direct field offset for TTRAccountsListsViewModel.hashtagsItem, (uint64_t)v11, (uint64_t *)&unk_100640E00);
  v14 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14) == 1)
  {
    swift_release();
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640E00);
LABEL_4:
    v15 = 0;
    goto LABEL_9;
  }
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640E00);
  v16 = swift_unknownObjectWeakLoadStrong(v13 + 16);
  if (v16)
  {
    v17 = v16;
    v18 = type metadata accessor for REMHashtagLabelSpecifier(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, a2, v18);
    swift_storeEnumTagMultiPayload(v8, v6, 2);
    sub_1000620B0((uint64_t)v8, 0, 0);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRIAccountsListsSelection);
    swift_release();
    swift_unknownObjectRelease(v17);
  }
  else
  {
    swift_release();
  }
  v15 = 1;
LABEL_9:
  *a3 = v15;
}

uint64_t sub_100341054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_10032E598(a2, 0, 2, 1);
    return swift_release(v5);
  }
  return result;
}

_QWORD *sub_1003410BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int EnumCaseMultiPayload;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[12];
  _BYTE v38[26];

  v32 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v32);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  v3 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v5 = (_OWORD *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing) & 1) != 0)
    return _swiftEmptyArrayStorage;
  v9 = swift_retain();
  v10 = TTRAccountsListsViewModel.visiblePinnedLists.getter(v9);
  swift_release();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease(v10);
    return _swiftEmptyArrayStorage;
  }
  v12 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v35 = *(_QWORD *)(v3 + 72);
  v31 = v10;
  swift_bridgeObjectRetain(v10);
  v13 = _swiftEmptyArrayStorage;
  v34 = v2;
  v33 = v8;
  do
  {
    sub_10002B1E8(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_10002B1E8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v36);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = v5[11];
      v37[10] = v5[10];
      v37[11] = v15;
      *(_OWORD *)v38 = v5[12];
      *(_OWORD *)&v38[10] = *(_OWORD *)((char *)v5 + 202);
      v16 = v5[7];
      v37[6] = v5[6];
      v37[7] = v16;
      v17 = v5[9];
      v37[8] = v5[8];
      v37[9] = v17;
      v18 = v5[3];
      v37[2] = v5[2];
      v37[3] = v18;
      v19 = v5[5];
      v37[4] = v5[4];
      v37[5] = v19;
      v20 = v5[1];
      v37[0] = *v5;
      v37[1] = v20;
      v21 = v20;
      v22 = *((_QWORD *)&v37[0] + 1);
      v23 = *(void **)&v37[0];
      swift_bridgeObjectRetain(v20);
      v24 = v23;
      sub_100075FE8((uint64_t)v37);
    }
    else
    {
      sub_10001F580((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      v25 = *(int *)(v32 + 20);
      v24 = v2[v25];
      if (v24 == 5)
      {
        sub_10001F544((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
        sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
        goto LABEL_5;
      }
      v22 = TTRListType.PredefinedSmartListType.title.getter(v2[v25]);
      v21 = v26;
      sub_10001F544((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    }
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100456ED8(0, v13[2] + 1, 1, v13);
    v28 = v13[2];
    v27 = v13[3];
    if (v28 >= v27 >> 1)
      v13 = sub_100456ED8((_QWORD *)(v27 > 1), v28 + 1, 1, v13);
    v13[2] = v28 + 1;
    v29 = &v13[4 * v28];
    v29[4] = v22;
    v29[5] = v21;
    v29[6] = v24;
    *((_BYTE *)v29 + 56) = EnumCaseMultiPayload == 1;
    v2 = v34;
    v8 = v33;
LABEL_5:
    v12 += v35;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease_n(v31, 2);
  return v13;
}

BOOL sub_100341424(uint64_t a1, void (*a2)(void))
{
  uint64_t Strong;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (Strong)
  {
    sub_1000758CC(a2);
    swift_unknownObjectRelease(Strong);
  }
  return Strong == 0;
}

id sub_100341478()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  NSString v11;
  id v12;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 32);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(id *)(Strong + 112);
    swift_unknownObjectRelease(v2);
    return v3;
  }
  else
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100655F30);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Accounts list presenter's moduleDelegate is not set when presenting search result, so unable to return a proper undoManager.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = objc_allocWithZone((Class)TTRUndoManager);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "initWithDebugIdentifier:", v11);

    return v12;
  }
}

uint64_t sub_1003415CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_1003415F4(uint64_t a1)
{
  uint64_t v1;

  return sub_10033C3BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_100341604(uint64_t a1)
{
  sub_1000A2644(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_100341638(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

BOOL sub_10034168C(uint64_t a1)
{
  uint64_t v1;

  return sub_10033C5B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_10034169C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD v41[9];

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v34 - v9;
  result = __chkstk_darwin(v8);
  v14 = (char *)&v34 - v13;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v37 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v38 = (unint64_t)(v17 + 63) >> 6;
  v20 = a2 + 56;
  v35 = v12;
  v36 = a1;
  if (!v19)
    goto LABEL_9;
LABEL_7:
  v39 = (v19 - 1) & v19;
  v40 = v15;
  for (i = __clz(__rbit64(v19)) | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v12 + 72);
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + v26 * i, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v27 = v14;
    sub_10001F580((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)(v41, *(_QWORD *)(a2 + 40));
    TTRRemindersListViewModel.ItemID.hash(into:)(v41, v28);
    v29 = Hasher._finalize()();
    v30 = -1 << *(_BYTE *)(a2 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_27:
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return 0;
    }
    v32 = ~v30;
    while (1)
    {
      sub_10002B1E8(*(_QWORD *)(a2 + 48) + v31 * v26, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v33 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v7, v10);
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if ((v33 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        goto LABEL_27;
    }
    result = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v12 = v35;
    a1 = v36;
    v14 = v27;
    v19 = v39;
    v15 = v40;
    if (v39)
      goto LABEL_7;
LABEL_9:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v38)
      return 1;
    v23 = *(_QWORD *)(v37 + 8 * v22);
    v24 = v15 + 1;
    if (!v23)
    {
      v24 = v22 + 1;
      if (v22 + 1 >= v38)
        return 1;
      v23 = *(_QWORD *)(v37 + 8 * v24);
      if (!v23)
      {
        v24 = v22 + 2;
        if (v22 + 2 >= v38)
          return 1;
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_22:
    v39 = (v23 - 1) & v23;
    v40 = v24;
  }
  v25 = v22 + 3;
  if (v25 >= v38)
    return 1;
  v23 = *(_QWORD *)(v37 + 8 * v25);
  if (v23)
  {
    v24 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v38)
      return 1;
    v23 = *(_QWORD *)(v37 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100341994(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  _QWORD v28[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v25 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v26 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v27 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v26)
      return 1;
    v11 = *(_QWORD *)(v25 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v26)
        return 1;
      v11 = *(_QWORD *)(v25 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v26)
          return 1;
        v11 = *(_QWORD *)(v25 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v27 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = *(void **)(*(_QWORD *)(result + 48) + 8 * v9);
    Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
    v16 = v15;
    TTRSectionID.hash(into:)(v28, v15);
    v17 = Hasher._finalize()();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_31;
    v20 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v19);
    v21 = v20;
    LOBYTE(v20) = static TTRSectionID.__derived_enum_equals(_:_:)(v20, v15);

    if ((v20 & 1) == 0)
    {
      v22 = ~v18;
      while (1)
      {
        v19 = (v19 + 1) & v22;
        if (((*(_QWORD *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          break;
        v23 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v19);
        v24 = v23;
        LOBYTE(v23) = static TTRSectionID.__derived_enum_equals(_:_:)(v23, v15);

        if ((v23 & 1) != 0)
          goto LABEL_7;
      }
LABEL_31:

      return 0;
    }
LABEL_7:

    result = v14;
    v3 = v27;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v26)
    return 1;
  v11 = *(_QWORD *)(v25 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v26)
      return 1;
    v11 = *(_QWORD *)(v25 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100341C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[9];

  v4 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v33 - v9;
  result = __chkstk_darwin(v8);
  v14 = (char *)&v33 - v13;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v36 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v37 = (unint64_t)(v17 + 63) >> 6;
  v20 = a2 + 56;
  v34 = v12;
  v35 = a1;
  if (!v19)
    goto LABEL_9;
LABEL_7:
  v38 = (v19 - 1) & v19;
  v39 = v15;
  for (i = __clz(__rbit64(v19)) | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v12 + 72);
    sub_10002B1E8(*(_QWORD *)(a1 + 48) + v26 * i, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v27 = v14;
    sub_10001F580((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)(v40, *(_QWORD *)(a2 + 40));
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v40);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(a2 + 32);
    v30 = v28 & ~v29;
    if (((*(_QWORD *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    {
LABEL_29:
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      return 0;
    }
    v31 = ~v29;
    while (1)
    {
      sub_10002B1E8(*(_QWORD *)(a2 + 48) + v30 * v26, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v32 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)(v7, v10);
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if ((v32 & 1) != 0)
        break;
      v30 = (v30 + 1) & v31;
      if (((*(_QWORD *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_29;
    }
    result = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v12 = v34;
    a1 = v35;
    v14 = v27;
    v19 = v38;
    v15 = v39;
    if (v38)
      goto LABEL_7;
LABEL_9:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v22 >= v37)
      return 1;
    v23 = *(_QWORD *)(v36 + 8 * v22);
    v24 = v15 + 1;
    if (!v23)
    {
      v24 = v22 + 1;
      if (v22 + 1 >= v37)
        return 1;
      v23 = *(_QWORD *)(v36 + 8 * v24);
      if (!v23)
      {
        v24 = v22 + 2;
        if (v22 + 2 >= v37)
          return 1;
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          v24 = v22 + 3;
          if (v22 + 3 >= v37)
            return 1;
          v23 = *(_QWORD *)(v36 + 8 * v24);
          if (!v23)
            break;
        }
      }
    }
LABEL_24:
    v38 = (v23 - 1) & v23;
    v39 = v24;
  }
  v25 = v22 + 4;
  if (v25 >= v37)
    return 1;
  v23 = *(_QWORD *)(v36 + 8 * v25);
  if (v23)
  {
    v24 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v37)
      return 1;
    v23 = *(_QWORD *)(v36 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_100341F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4 != __CocoaSet.count.getter(a1))
    return;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v5 << 6);
LABEL_6:
    v13 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v12);
    v14 = __CocoaSet.contains(_:)(v13, a1);

    if ((v14 & 1) == 0)
      return;
  }
  v15 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v15 >= v10)
    return;
  v16 = *(_QWORD *)(v6 + 8 * v15);
  ++v5;
  if (v16)
    goto LABEL_19;
  v5 = v15 + 1;
  if (v15 + 1 >= v10)
    return;
  v16 = *(_QWORD *)(v6 + 8 * v5);
  if (v16)
  {
LABEL_19:
    v9 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v5 << 6);
    goto LABEL_6;
  }
  v17 = v15 + 2;
  if (v17 >= v10)
    return;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      return;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100342064(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  __int128 v19;
  __int128 v20[2];
  char v21;
  _QWORD v22[5];

  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  v11 = __chkstk_darwin(v10);
  v13 = (void **)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(a5 + 56);
  sub_10000735C(a2, (uint64_t)v13 + *(int *)(v11 + 20), (uint64_t *)&unk_1006463C0);
  *v13 = a3;
  *(void **)((char *)v13 + v10[6]) = v14;
  v15 = v10[7];
  v19 = *(_OWORD *)(a5 + 64);
  *(_OWORD *)((char *)v13 + v15) = v19;
  *((_BYTE *)v13 + v10[8]) = 0;
  swift_retain(v14);
  v16 = a3;
  swift_unknownObjectRetain(v19);
  v17 = (void *)sub_100468F20(v22, v13, a1, a4);
  sub_100010634((uint64_t)v22, (uint64_t)v20);
  v21 = 12;
  sub_10029CB74(v20, v17);

  sub_10000AEA4(v20);
  sub_100027F10(v22);
  return sub_10001F544((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_1003421B0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a5 + 96, v30, 0, 0);
  sub_10000AC28(a5 + 96, (uint64_t)&v26);
  if (v29 == 6)
  {
    sub_10002E37C(&v26, (uint64_t)v31);
    v13 = v32;
    v14 = v33;
    v15 = sub_10001413C(v31, v32);
    sub_10029FACC((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_10000AEA4(&v26);
    v16 = *(_QWORD *)(a5 + 56);
    sub_10000735C(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1006463C0);
    *v12 = a1;
    *(_QWORD *)((char *)v12 + v10[6]) = v16;
    v17 = v10[7];
    v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((_BYTE *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowTodayAssembly();
    swift_retain(v16);
    v18 = a1;
    swift_unknownObjectRetain(v25);
    v19 = sub_100254F58(v31, v12, a3);
    v20 = v32;
    v21 = v33;
    v22 = sub_10001413C(v31, v32);
    v27 = v20;
    v28 = *(_QWORD *)(v21 + 8);
    v23 = sub_100028D70(&v26);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
    v29 = 6;
    sub_10029CB74(&v26, v19);

    sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v26);
  }
  return sub_100027F10(v31);
}

uint64_t sub_100342398(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a5 + 96, v30, 0, 0);
  sub_10000AC28(a5 + 96, (uint64_t)&v26);
  if (v29 == 3)
  {
    sub_10002E37C(&v26, (uint64_t)v31);
    v13 = v32;
    v14 = v33;
    v15 = sub_10001413C(v31, v32);
    sub_10029FACC((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_10000AEA4(&v26);
    v16 = *(void **)(a5 + 56);
    sub_10000735C(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1006463C0);
    *v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    v17 = v10[7];
    v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((_BYTE *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowScheduledAssembly();
    swift_retain(v16);
    v18 = a1;
    swift_unknownObjectRetain(v25);
    v19 = (void *)sub_1000DDB88(v31, v12, a3);
    v20 = v32;
    v21 = v33;
    v22 = sub_10001413C(v31, v32);
    v27 = v20;
    v28 = *(_QWORD *)(v21 + 8);
    v23 = sub_100028D70(&v26);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
    v29 = 3;
    sub_10029CB74(&v26, v19);

    sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v26);
  }
  return sub_100027F10(v31);
}

uint64_t sub_100342580(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (void **)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a5 + 96, v30, 0, 0);
  sub_10000AC28(a5 + 96, (uint64_t)&v26);
  if (v29 == 5)
  {
    sub_10002E37C(&v26, (uint64_t)v31);
    v13 = v32;
    v14 = v33;
    v15 = sub_10001413C(v31, v32);
    sub_10029FACC((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_10000AEA4(&v26);
    v16 = *(void **)(a5 + 56);
    sub_10000735C(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1006463C0);
    *v12 = a1;
    *(void **)((char *)v12 + v10[6]) = v16;
    v17 = v10[7];
    v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((_BYTE *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowAllRemindersAssembly();
    swift_retain(v16);
    v18 = a1;
    swift_unknownObjectRetain(v25);
    v19 = (void *)sub_1002EA7E0(v31, v12, a3);
    v20 = v32;
    v21 = v33;
    v22 = sub_10001413C(v31, v32);
    v27 = v20;
    v28 = *(_QWORD *)(v21 + 8);
    v23 = sub_100028D70(&v26);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
    v29 = 5;
    sub_10029CB74(&v26, v19);

    sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v26);
  }
  return sub_100027F10(v31);
}

uint64_t sub_100342768(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v10 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a5 + 96, v30, 0, 0);
  sub_10000AC28(a5 + 96, (uint64_t)&v26);
  if (v29 == 4)
  {
    sub_10002E37C(&v26, (uint64_t)v31);
    v13 = v32;
    v14 = v33;
    v15 = sub_10001413C(v31, v32);
    sub_10029FACC((uint64_t)v15, a5, v13, v14);
  }
  else
  {
    sub_10000AEA4(&v26);
    v16 = *(_QWORD *)(a5 + 56);
    sub_10000735C(a2, (uint64_t)v12 + v10[5], (uint64_t *)&unk_1006463C0);
    *v12 = a1;
    *(_QWORD *)((char *)v12 + v10[6]) = v16;
    v17 = v10[7];
    v25 = *(_OWORD *)(a5 + 64);
    *(_OWORD *)((char *)v12 + v17) = v25;
    *((_BYTE *)v12 + v10[8]) = a4 & 1;
    type metadata accessor for TTRIShowFlaggedAssembly();
    swift_retain(v16);
    v18 = a1;
    swift_unknownObjectRetain(v25);
    v19 = sub_1001DC9B4(v31, v12, a3);
    v20 = v32;
    v21 = v33;
    v22 = sub_10001413C(v31, v32);
    v27 = v20;
    v28 = *(_QWORD *)(v21 + 8);
    v23 = sub_100028D70(&v26);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v23, v22, v20);
    v29 = 4;
    sub_10029CB74(&v26, v19);

    sub_10001F544((uint64_t)v12, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v26);
  }
  return sub_100027F10(v31);
}

uint64_t sub_100342950(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a4 + 96, v28, 0, 0);
  sub_10000AC28(a4 + 96, (uint64_t)&v24);
  if (v27 == 8)
  {
    sub_10002E37C(&v24, (uint64_t)v29);
    v11 = v30;
    v12 = v31;
    v13 = sub_10001413C(v29, v30);
    sub_10029FACC((uint64_t)v13, a4, v11, v12);
  }
  else
  {
    sub_10000AEA4(&v24);
    v14 = *(void **)(a4 + 56);
    sub_10000735C(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_1006463C0);
    *v10 = a1;
    *(void **)((char *)v10 + v8[6]) = v14;
    v15 = v8[7];
    v23 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v15) = v23;
    *((_BYTE *)v10 + v8[8]) = 0;
    type metadata accessor for TTRIShowSiriFoundInAppsAssembly();
    swift_retain(v14);
    v16 = a1;
    swift_unknownObjectRetain(v23);
    v17 = (void *)sub_10037491C(v29, v10, a3);
    v18 = v30;
    v19 = v31;
    v20 = sub_10001413C(v29, v30);
    v25 = v18;
    v26 = *(_QWORD *)(v19 + 8);
    v21 = sub_100028D70(&v24);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v21, v20, v18);
    v27 = 8;
    sub_10029CB74(&v24, v17);

    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v24);
  }
  return sub_100027F10(v29);
}

uint64_t sub_100342B30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a4 + 96, v28, 0, 0);
  sub_10000AC28(a4 + 96, (uint64_t)&v24);
  if (v27 == 7)
  {
    sub_10002E37C(&v24, (uint64_t)v29);
    v11 = v30;
    v12 = v31;
    v13 = sub_10001413C(v29, v30);
    sub_10029FACC((uint64_t)v13, a4, v11, v12);
  }
  else
  {
    sub_10000AEA4(&v24);
    v14 = *(_QWORD *)(a4 + 56);
    sub_10000735C(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_1006463C0);
    *v10 = a1;
    *(_QWORD *)((char *)v10 + v8[6]) = v14;
    v15 = v8[7];
    v23 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v15) = v23;
    *((_BYTE *)v10 + v8[8]) = 0;
    type metadata accessor for TTRIShowAssignedAssembly();
    swift_retain(v14);
    v16 = a1;
    swift_unknownObjectRetain(v23);
    v17 = (void *)sub_1000D2E4C(v29, v10, a3);
    v18 = v30;
    v19 = v31;
    v20 = sub_10001413C(v29, v30);
    v25 = v18;
    v26 = *(_QWORD *)(v19 + 8);
    v21 = sub_100028D70(&v24);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v21, v20, v18);
    v27 = 7;
    sub_10029CB74(&v24, v17);

    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    sub_10000AEA4(&v24);
  }
  return sub_100027F10(v29);
}

uint64_t sub_100342D10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v26[24];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v8 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(a4 + 96, v26, 0, 0);
  sub_10000AC28(a4 + 96, (uint64_t)&v22);
  if (v25 == 11)
  {
    sub_10002E37C(&v22, (uint64_t)v27);
    v11 = v28;
    v12 = v29;
    v13 = sub_10001413C(v27, v28);
    v23 = v11;
    v14 = *(_QWORD *)(v12 + 8);
    v24 = v14;
    v15 = sub_100028D70(&v22);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, v13, v11);
    sub_10029FACC((uint64_t)v15, a4, v11, v14);
    sub_100027F10(&v22);
    return sub_100027F10(v27);
  }
  else
  {
    sub_10000AEA4(&v22);
    v17 = *(void **)(a4 + 56);
    sub_10000735C(a2, (uint64_t)v10 + v8[5], (uint64_t *)&unk_1006463C0);
    *v10 = a1;
    *(void **)((char *)v10 + v8[6]) = v17;
    v18 = v8[7];
    v21 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v10 + v18) = v21;
    *((_BYTE *)v10 + v8[8]) = 0;
    swift_retain(v17);
    v19 = a1;
    swift_unknownObjectRetain(v21);
    v20 = (void *)sub_1002606A4(v27, v10, a3);
    sub_100010634((uint64_t)v27, (uint64_t)&v22);
    v25 = 11;
    sub_10029CB74(&v22, v20);

    sub_10000AEA4(&v22);
    sub_100027F10(v27);
    return sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
}

void *sub_100342EF0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_100342F34(a1, a2, a3, a4, a5);
}

void *sub_100342F34(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *inited;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  void *v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  id v38;
  id v39;
  _QWORD *v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  void (*v50)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128);
  __n128 v51;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char v56[72];
  _QWORD v57[5];

  v54 = a1;
  v9 = sub_10002A750(&qword_1006531C8);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1005201E0;
  *(_QWORD *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 40) = &off_1005EE090;
  v53 = a5;
  if (a3)
  {
    swift_retain(a2);
    sub_10028AD88(a3, a4);

    v11 = a4;
  }
  else
  {
    swift_unknownObjectRetain(a2);
    v11 = 0;
    a5 = 0;
  }
  *(_QWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 56) = a5;
  v12 = sub_10002A750(&qword_1006531D0);
  v13 = sub_10002A750(&qword_1006531D8);
  v14 = sub_10002D150((unint64_t *)&qword_1006531E0, &qword_1006531D0);
  v15 = Sequence.removingNils<A>()(v12, v13, v14);
  swift_bridgeObjectRelease(v10);
  v16 = type metadata accessor for TTRIListDetailContainerRouter();
  v17 = swift_allocObject(v16, 24, 7);
  v18 = v17 + 16;
  swift_unknownObjectWeakInit(v17 + 16, 0);
  v57[3] = v16;
  v57[4] = &off_1005EC888;
  v57[0] = v17;
  v19 = type metadata accessor for TTRIListDetailContainerPresenter();
  v20 = (_QWORD *)swift_allocObject(v19, 96, 7);
  v21 = sub_100028D48((uint64_t)v57, v16);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  v25 = *v23;
  v20[9] = v16;
  v20[10] = &off_1005EC888;
  v20[6] = v25;
  v20[3] = 0;
  swift_unknownObjectWeakInit(v20 + 2, 0);
  v20[5] = 0;
  swift_unknownObjectWeakInit(v20 + 4, 0);
  v20[11] = v15;
  v55 = v17;
  swift_retain(v17);
  swift_bridgeObjectRetain(v15);
  sub_100027F10(v57);
  v26 = sub_10002A750(&qword_1006531E8);
  inited = (_QWORD *)swift_initStackObject(v26, v56);
  *((_OWORD *)inited + 1) = xmmword_100520250;
  v28._countAndFlagsBits = 0xD000000000000013;
  v28._object = (void *)0x8000000100563210;
  v29._countAndFlagsBits = 0x7473694C2077654ELL;
  v29._object = (void *)0xE800000000000000;
  v30._countAndFlagsBits = 0xD00000000000001ELL;
  v30._object = (void *)0x8000000100563230;
  v31 = TTRLocalizedString(_:value:comment:)(v28, v29, v30);
  inited[4] = 7824750;
  inited[5] = 0xE300000000000000;
  *((Swift::String *)inited + 3) = v31;
  v32 = v54;
  inited[8] = v54;
  if (a3)
  {
    sub_10028AD88(a3, a4);
    v33 = v32;
    v34._countAndFlagsBits = 0xD000000000000019;
    v34._object = (void *)0x80000001005712F0;
    v35._countAndFlagsBits = 0x6574616C706D6554;
    v35._object = (void *)0xE900000000000073;
    v36._countAndFlagsBits = 0xD00000000000001ELL;
    v36._object = (void *)0x8000000100563230;
    v37 = TTRLocalizedString(_:value:comment:)(v34, v35, v36);
    v38 = a3;
    inited = sub_1004561F0((_QWORD *)1, 2, 1, inited);
    inited[2] = 2;
    inited[9] = 0x6574616C706D6574;
    inited[10] = 0xE900000000000073;
    *(Swift::String *)(inited + 11) = v37;
    inited[13] = v38;
    swift_unknownObjectRelease(a4);

  }
  else
  {
    v39 = v32;
  }
  v40 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailContainerViewController())
      + OBJC_IVAR____TtC9Reminders37TTRIListDetailContainerViewController_presenter;
  *v40 = v20;
  v40[1] = &off_1006056C0;
  swift_retain(v20);
  v41 = (void *)sub_1002F5724((uint64_t)inited, 0);
  v20[3] = &off_1005F1148;
  swift_unknownObjectWeakAssign(v20 + 2, v41);
  swift_unknownObjectWeakAssign(v18, v41);
  v42 = objc_msgSend(v41, "presentationController", v53);
  if (v42)
  {
    v44 = v42;
    objc_msgSend(v42, "setDelegate:", v41);

  }
  v45 = *(_QWORD *)(v15 + 16);
  if (v45)
  {
    v46 = (uint64_t *)(v15 + 40);
    do
    {
      v47 = *(v46 - 1);
      v48 = *v46;
      ObjectType = swift_getObjectType(v47, v43);
      v50 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t, __n128))(v48 + 16);
      swift_retain(v20);
      v51 = swift_unknownObjectRetain(v47);
      v50(v20, &off_1006056A0, ObjectType, v48, v51);
      swift_unknownObjectRelease(v47);
      v46 += 2;
      --v45;
    }
    while (v45);
  }
  swift_release(v55);
  swift_bridgeObjectRelease(v15);
  swift_release(v20);
  return v41;
}

uint64_t sub_1003433E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  _BYTE v20[208];

  v15 = a7 & 1;
  v19[3] = type metadata accessor for TTRIListDetailRouter();
  v19[4] = &off_1005F7778;
  v19[0] = a4;
  *(_QWORD *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit(a8 + 48, 0);
  *(_QWORD *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit(a8 + 64, 0);
  *(_QWORD *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit(a8 + 80, 0);
  *(_QWORD *)(a8 + 160) = 0;
  *(_QWORD *)(a8 + 168) = 0;
  *(_QWORD *)(a8 + 144) = a2;
  *(_QWORD *)(a8 + 152) = a3;
  sub_100010634((uint64_t)v19, a8 + 104);
  *(_BYTE *)(a8 + 96) = v15;
  *(_QWORD *)(a8 + 16) = a1;
  *(_QWORD *)(a8 + 24) = a5;
  *(_QWORD *)(a8 + 32) = a6;
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v17 = swift_retain(v16);
  sub_1002F2678(v17, (uint64_t)v20);
  swift_release(v16);
  sub_1000905E0((uint64_t)v20);
  *(_BYTE *)(a8 + 40) = v20[184];
  sub_100027F10(v19);
  return a8;
}

void *sub_1003434E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t ObjectType;
  void *v23;

  v8 = objc_msgSend(*(id *)(a1 + 16), "store");
  v9 = sub_100345630(v8, a1, 0, a2, (uint64_t)&off_1006010F8);
  v11 = v10;

  v12 = *(void **)(a1 + 24);
  v13 = objc_msgSend(v12, "capabilities");
  v14 = objc_msgSend(v13, "supportsTemplates");

  if (v14)
  {
    v16 = sub_1004037E4(0, v12, a3, a4);
    v18 = v17;
    v20 = *(_QWORD *)(v19 + 8);
    v21 = v16;
    swift_unknownObjectRetain(v18);
  }
  else
  {
    v20 = 0;
    v16 = 0;
    v18 = 0;
  }
  ObjectType = swift_getObjectType(v11, v15);
  v23 = sub_10028A8A4(v9, v11, v16, v18, v20, ObjectType, (uint64_t)&off_1005EE090);
  sub_10017C190(v16, v18);
  sub_10017C190(v16, v18);

  return v23;
}

id sub_100343644(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  char v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  _UNKNOWN **v38;

  v11 = a6 & 1;
  v12 = objc_allocWithZone((Class)TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithDebugIdentifier:", v13);

  v15 = type metadata accessor for TTRIGroupDetailInteractor();
  swift_allocObject(v15, 72, 7);
  v16 = a1;
  v17 = a2;
  v18 = a3;
  swift_bridgeObjectRetain(a4);
  v19 = v14;
  v20 = sub_100218290(v16, v17, v18, a4, v19);
  v21 = type metadata accessor for TTRIGroupDetailRouter();
  v22 = swift_allocObject(v21, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, 0);
  v37 = v21;
  v38 = &off_100602CA0;
  v35[0] = v22;
  v23 = type metadata accessor for TTRIGroupDetailPresenter();
  v24 = (_QWORD *)swift_allocObject(v23, 112, 7);
  v25 = sub_100028D48((uint64_t)v35, v21);
  __chkstk_darwin(v25);
  v27 = (_QWORD *)((char *)&v35[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  v29 = *v27;
  v24[11] = v21;
  v24[12] = &off_100602CA0;
  v24[8] = v29;
  v24[3] = 0;
  swift_unknownObjectWeakInit(v24 + 2, 0);
  v24[5] = 0;
  swift_unknownObjectWeakInit(v24 + 4, 0);
  v24[6] = v20;
  v24[7] = &off_1005F7740;
  v24[13] = v19;
  v30 = v19;
  swift_retain(v20);
  swift_retain(v22);
  sub_100027F10(v35);
  type metadata accessor for TTRIGroupDetailViewController();
  v35[0] = v24;
  v35[1] = &off_1005EFD70;
  v36 = v11;
  v37 = (uint64_t)v30;
  static TTRTypedController<>.instantiateFromStoryboard(with:)(&v34, v35);
  v31 = v34;
  v32 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v34);

  v20[3] = (uint64_t)&off_1005EFD60;
  swift_unknownObjectWeakAssign(v20 + 2, v24);
  swift_release(v20);
  v24[3] = &off_100608630;
  swift_unknownObjectWeakAssign(v24 + 2, v31);

  v24[5] = &off_1006010D0;
  swift_unknownObjectWeakAssign(v24 + 4, a5);
  swift_release(v24);
  swift_unknownObjectWeakAssign(v22 + 16, v32);
  swift_release(v22);
  return v32;
}

void sub_100343930(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v7;
  id *v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *Strong;
  void *v18;
  id v19;

  v7 = a1;
  v8 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v9 = *v8;
  v10 = TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter();

  if ((v10 & 1) != 0)
  {
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100012DC4(v11, (uint64_t)qword_100653B00);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "showWelcomeScreen: Showing upgrade screen because iCloud sync was enabled since last app start.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v16 = *v8;
    TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter(0);

  }
  v19 = sub_100343AA0(a3, a2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 48);
  if (Strong)
  {
    v18 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v19, v7 & 1, 0);

  }
}

id sub_100343AA0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[5];

  v4 = type metadata accessor for TTRWelcomeNavigationInteractor();
  v5 = swift_allocObject(v4, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16, 0);
  v6 = type metadata accessor for TTRIWelcomeNavigationRouter();
  v7 = swift_allocObject(v6, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, 0);
  v26[3] = v6;
  v26[4] = &off_100607468;
  v26[0] = v7;
  v8 = type metadata accessor for TTRIWelcomeNavigationPresenter();
  v9 = (_QWORD *)swift_allocObject(v8, 112, 7);
  v10 = sub_100028D48((uint64_t)v26, v6);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  v14 = *v12;
  v9[12] = v6;
  v9[13] = &off_100607468;
  v9[9] = v14;
  v9[3] = 0;
  swift_unknownObjectWeakInit(v9 + 2, 0);
  v9[5] = 0;
  swift_unknownObjectWeakInit(v9 + 4, 0);
  v9[7] = v5;
  v9[8] = &off_100603240;
  v9[6] = a2;
  swift_retain(v5);
  swift_retain(v7);
  sub_100347B98(a2);
  sub_100027F10(v26);
  swift_retain(v9);
  if (a2 == (void *)1)
    v15 = sub_1004B3378((uint64_t)v9, (uint64_t)&off_1006032A8);
  else
    v15 = sub_10042E0F0((uint64_t)v9, (uint64_t)&off_1006032D0, a2);
  v17 = v15;
  v18 = v16;
  swift_release(v9);
  swift_unknownObjectRelease(v18);
  v19 = (objc_class *)type metadata accessor for TTRIWelcomeNavigationViewController();
  v20 = (char *)objc_allocWithZone(v19);
  v21 = &v20[OBJC_IVAR____TtC9Reminders35TTRIWelcomeNavigationViewController_presenter];
  *(_QWORD *)v21 = v9;
  *((_QWORD *)v21 + 1) = &off_100603308;
  v25.receiver = v20;
  v25.super_class = v19;
  swift_retain_n(v9, 2);
  v22 = objc_msgSendSuper2(&v25, "initWithRootViewController:", v17);
  swift_release(v9);

  *(_QWORD *)(v5 + 24) = &off_100603300;
  swift_unknownObjectWeakAssign(v5 + 16, v9);
  swift_release(v5);
  v9[3] = &off_1005F65E8;
  swift_unknownObjectWeakAssign(v9 + 2, v22);
  v9[5] = &off_1005F9F18;
  swift_unknownObjectWeakAssign(v9 + 4, a1);
  swift_release(v9);
  swift_unknownObjectWeakAssign(v7 + 16, v22);
  swift_release(v7);
  return v22;
}

_QWORD *sub_100343D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  a5[12] = type metadata accessor for TTRIListSharingRouter();
  a5[13] = &off_100600ED8;
  a5[9] = a2;
  a5[3] = 0;
  swift_unknownObjectWeakInit(a5 + 2, 0);
  a5[5] = 0;
  swift_unknownObjectWeakInit(a5 + 4, 0);
  a5[16] = 0;
  a5[6] = 0;
  a5[7] = a1;
  a5[8] = &off_100600630;
  a5[14] = a3;
  a5[15] = a4;
  return a5;
}

void sub_100343DC8(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24[7];

  v6 = objc_msgSend(a1, "store");
  v7 = objc_msgSend(a1, "objectID");
  v24[0] = 0;
  v8 = objc_msgSend(v6, "fetchListWithObjectID:error:", v7, v24);

  v9 = v24[0];
  if (v8)
  {
    v10 = v24[0];
    v11 = sub_10034400C(v8, a2, objc_msgSend(v8, "isOwnedByMe") ^ 1u);
    swift_unknownObjectRelease(v12);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
    if (Strong)
    {
      v14 = Strong;
      v15 = objc_msgSend(Strong, "presentedViewController");
      if (v15)
      {
        v16 = v15;
        v17 = swift_allocObject(&unk_1006019D8, 33, 7);
        *(_QWORD *)(v17 + 16) = v14;
        *(_QWORD *)(v17 + 24) = v11;
        *(_BYTE *)(v17 + 32) = 1;
        v24[4] = sub_10019C898;
        v24[5] = (id)v17;
        v24[0] = _NSConcreteStackBlock;
        v24[1] = (id)1107296256;
        v24[2] = sub_100006378;
        v24[3] = &unk_1006019F0;
        v18 = _Block_copy(v24);
        v19 = v14;
        v20 = v11;
        objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, v18, swift_release().n128_f64[0]);

        _Block_release(v18);
      }
      else
      {
        objc_msgSend(v14, "presentViewController:animated:completion:", v11, 1, 0);

      }
    }
    else
    {

    }
  }
  else
  {
    v21 = v24[0];
    v22 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v23);
    swift_errorRelease(v22);
  }
}

id sub_10034400C(void *a1, uint64_t a2, char a3)
{
  char v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[2];
  char v34;
  uint64_t v35;
  _UNKNOWN **v36;

  v31 = a2;
  v4 = a3 & 1;
  v5 = objc_allocWithZone((Class)TTRUndoManager);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithDebugIdentifier:", v6);

  v8 = type metadata accessor for TTRListSharingInteractor();
  swift_allocObject(v8, 64, 7);
  v9 = a1;
  v10 = v7;
  v11 = sub_10031FF2C(v9, v10);
  v12 = type metadata accessor for TTRIListSharingRouter();
  v13 = swift_allocObject(v12, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, 0);
  v14 = type metadata accessor for TTRListSharingContactProvider();
  v15 = swift_allocObject(v14, 40, 7);
  *(_QWORD *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit(v15 + 16, 0);
  v16 = objc_msgSend((id)objc_opt_self(CalContactsProvider), "defaultProvider");
  v17 = objc_msgSend(v16, "contactStore");

  *(_QWORD *)(v15 + 32) = v17;
  v35 = v12;
  v36 = &off_100600ED8;
  v33[0] = v13;
  v18 = type metadata accessor for TTRIListSharingPresenter();
  v19 = (_QWORD *)swift_allocObject(v18, 136, 7);
  v20 = sub_100028D48((uint64_t)v33, v12);
  v21 = __chkstk_darwin(v20);
  v23 = (uint64_t *)((char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  v25 = sub_100343D38((uint64_t)v11, *v23, (uint64_t)v10, v15, v19);
  v26 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100027F10(v33);
  type metadata accessor for TTRIListSharingViewController();
  v33[0] = v25;
  v33[1] = &off_1005FF8A0;
  v34 = v4;
  v35 = (uint64_t)v26;
  static TTRTypedController<>.instantiateFromStoryboard(with:)(&v32, v33);
  v27 = v32;
  v28 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v32);

  v11[3] = (uint64_t)&off_1005FF890;
  swift_unknownObjectWeakAssign(v11 + 2, v25);
  swift_release();
  v25[3] = &off_1005ED498;
  swift_unknownObjectWeakAssign(v25 + 2, v27);

  v25[5] = &off_100600F98;
  swift_unknownObjectWeakAssign(v25 + 4, v31);
  *(_QWORD *)(v15 + 24) = &off_1005FF880;
  swift_unknownObjectWeakAssign(v15 + 16, v25);
  swift_release();
  swift_unknownObjectWeakAssign(v13 + 16, v28);
  swift_release();
  return v28;
}

id sub_10034433C(void *a1, uint64_t a2, char a3)
{
  char v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[2];
  char v34;
  uint64_t v35;
  _UNKNOWN **v36;

  v31 = a2;
  v4 = a3 & 1;
  v5 = objc_allocWithZone((Class)TTRUndoManager);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithDebugIdentifier:", v6);

  v8 = type metadata accessor for TTRListSharingInteractor();
  swift_allocObject(v8, 64, 7);
  v9 = a1;
  v10 = v7;
  v11 = sub_10031FF2C(v9, v10);
  v12 = type metadata accessor for TTRIListSharingRouter();
  v13 = swift_allocObject(v12, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, 0);
  v14 = type metadata accessor for TTRListSharingContactProvider();
  v15 = swift_allocObject(v14, 40, 7);
  *(_QWORD *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit(v15 + 16, 0);
  v16 = objc_msgSend((id)objc_opt_self(CalContactsProvider), "defaultProvider");
  v17 = objc_msgSend(v16, "contactStore");

  *(_QWORD *)(v15 + 32) = v17;
  v35 = v12;
  v36 = &off_100600ED8;
  v33[0] = v13;
  v18 = type metadata accessor for TTRIListSharingPresenter();
  v19 = (_QWORD *)swift_allocObject(v18, 136, 7);
  v20 = sub_100028D48((uint64_t)v33, v12);
  v21 = __chkstk_darwin(v20);
  v23 = (uint64_t *)((char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  v25 = sub_100343D38((uint64_t)v11, *v23, (uint64_t)v10, v15, v19);
  v26 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100027F10(v33);
  type metadata accessor for TTRIListSharingViewController();
  v33[0] = v25;
  v33[1] = &off_1005FF8A0;
  v34 = v4;
  v35 = (uint64_t)v26;
  static TTRTypedController<>.instantiateFromStoryboard(with:)(&v32, v33);
  v27 = v32;
  v28 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v32);

  v11[3] = (uint64_t)&off_1005FF890;
  swift_unknownObjectWeakAssign(v11 + 2, v25);
  swift_release();
  v25[3] = &off_1005ED498;
  swift_unknownObjectWeakAssign(v25 + 2, v27);

  v25[5] = &off_1005F2FE0;
  swift_unknownObjectWeakAssign(v25 + 4, v31);
  *(_QWORD *)(v15 + 24) = &off_1005FF880;
  swift_unknownObjectWeakAssign(v15 + 16, v25);
  swift_release();
  swift_unknownObjectWeakAssign(v13 + 16, v28);
  swift_release();
  return v28;
}

uint64_t sub_10034466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, void (*a9)(_QWORD *__return_ptr, id))
{
  char v16;
  _QWORD v18[5];
  _QWORD v19[23];
  char v20;

  v16 = a7 & 1;
  v18[3] = type metadata accessor for TTRIListDetailRouter();
  v18[4] = &off_1005F7778;
  v18[0] = a4;
  *(_QWORD *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit(a8 + 48, 0);
  *(_QWORD *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit(a8 + 64, 0);
  *(_QWORD *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit(a8 + 80, 0);
  *(_QWORD *)(a8 + 160) = 0;
  *(_QWORD *)(a8 + 168) = 0;
  *(_QWORD *)(a8 + 144) = a2;
  *(_QWORD *)(a8 + 152) = a3;
  sub_100010634((uint64_t)v18, a8 + 104);
  *(_BYTE *)(a8 + 96) = v16;
  *(_QWORD *)(a8 + 16) = a1;
  *(_QWORD *)(a8 + 24) = a5;
  *(_QWORD *)(a8 + 32) = a6;
  a9(v19, *(id *)(*(_QWORD *)(a1 + 32) + 16));
  sub_1000905E0((uint64_t)v19);
  *(_BYTE *)(a8 + 40) = v20;
  sub_100027F10(v18);
  return a8;
}

uint64_t sub_100344768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  char v15;
  id v16;
  _QWORD v18[5];
  _BYTE v19[208];

  v15 = a7 & 1;
  v18[3] = type metadata accessor for TTRIListDetailRouter();
  v18[4] = &off_1005F7778;
  v18[0] = a4;
  *(_QWORD *)(a8 + 56) = 0;
  swift_unknownObjectWeakInit(a8 + 48, 0);
  *(_QWORD *)(a8 + 72) = 0;
  swift_unknownObjectWeakInit(a8 + 64, 0);
  *(_QWORD *)(a8 + 88) = 0;
  swift_unknownObjectWeakInit(a8 + 80, 0);
  *(_QWORD *)(a8 + 160) = 0;
  *(_QWORD *)(a8 + 168) = 0;
  *(_QWORD *)(a8 + 144) = a2;
  *(_QWORD *)(a8 + 152) = a3;
  sub_100010634((uint64_t)v18, a8 + 104);
  *(_BYTE *)(a8 + 96) = v15;
  *(_QWORD *)(a8 + 16) = a1;
  *(_QWORD *)(a8 + 24) = a5;
  *(_QWORD *)(a8 + 32) = a6;
  v16 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  sub_1002F34E4(v16, (uint64_t)v19);

  sub_1000905E0((uint64_t)v19);
  *(_BYTE *)(a8 + 40) = v19[184];
  sub_100027F10(v18);
  return a8;
}

uint64_t sub_100344868(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *Strong;
  void *v28;
  uint64_t v30;
  uint64_t v31;

  v31 = a4;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMNavigationSpecifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (char *)v13 + *(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48);
  *v13 = objc_msgSend(a1, "objectID");
  v15 = enum case for REMNavigationSpecifier.ListPathSpecifier.DetailSection.none(_:);
  v16 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:);
  v18 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v14, v17, v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for REMNavigationSpecifier.list(_:), v10);
  if (qword_10063D4A8 != -1)
    swift_once(&qword_10063D4A8, sub_1001E4AC8);
  v19 = type metadata accessor for Logger(0);
  sub_100012DC4(v19, (uint64_t)qword_10064BE40);
  REMNavigationSpecifier.url.getter();
  sub_1002EB730(0x73746E756F636341, 0xED00007473694C20, 0x746544207473694CLL, 0xEB000000006C6961, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = objc_msgSend(a1, "saveRequest");
  v21 = objc_msgSend(v20, "store");

  v22 = sub_1003492B4(v21, a1, 1, a2, (uint64_t)&off_1006010F8);
  v24 = v23;

  v25 = v22;
  swift_retain(v24);
  v26 = sub_100342F34(v25, v24, 0, 0, 0);

  swift_release_n(v24, 2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v31 + 16);
  if (Strong)
  {
    v28 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v26, 1, 0);

    v26 = v28;
  }

  return (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_100344B54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *Strong;
  void *v14;
  id v15;

  v7 = objc_msgSend(a1, "saveRequest");
  v8 = objc_msgSend(v7, "store");

  v9 = sub_1003497D0(v8, a1, 1, a2, (uint64_t)&off_1006010F8);
  v11 = v10;

  v12 = v9;
  swift_retain(v11);
  v15 = sub_100342F34(v12, v11, 0, 0, 0);

  swift_release_n(v11, 2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (Strong)
  {
    v14 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v15, 1, 0);

  }
}

BOOL sub_100344C5C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  char v14;
  _BOOL8 result;
  unint64_t v16;
  char v17;
  _OWORD v18[3];
  uint64_t v19;
  _OWORD v20[3];
  uint64_t v21;

  v4 = *(_OWORD *)(a1 + 16);
  v20[0] = *(_OWORD *)a1;
  v20[1] = v4;
  v20[2] = *(_OWORD *)(a1 + 32);
  v21 = *(_QWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v5;
  v18[2] = *(_OWORD *)(a2 + 32);
  v19 = *(_QWORD *)(a2 + 48);
  if ((static TTRPermissionConfiguration.Header.__derived_struct_equals(_:_:)(v20, v18) & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 64);
  if (!v6)
    return !v7;
  if (!v7)
    return 0;
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(void **)(a1 + 80);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(void **)(a2 + 80);
  if (v8 == v11 && v6 == v7
    || (v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v6, v11, v7, 0), result = 0, (v14 & 1) != 0))
  {
    v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (v9 >> 2 == 0xFFFFFFFF)
    {
      if (v16 != 0x3FFFFFFFCLL)
        return 0;
    }
    else
    {
      if (v16 == 0x3FFFFFFFCLL)
        return 0;
      sub_10023054C(v11, v7, v12, v13);
      sub_10023054C(v8, v6, v9, v10);
      sub_100077888(v12, v13);
      sub_100077888(v9, v10);
      v17 = static TTRPermissionConfiguration.Action.__derived_enum_equals(_:_:)(v9, v10, v12, v13);
      sub_100077044(v12, v13);
      sub_100077044(v9, v10);
      sub_10007706C(v11, v7, v12, v13);
      sub_10007706C(v8, v6, v9, v10);
      if ((v17 & 1) == 0)
        return 0;
    }
    return 1;
  }
  return result;
}

_QWORD *sub_100344E10(uint64_t a1, void *a2)
{
  int64_t v2;
  _BYTE *v5;
  char v6;
  char **v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1003D81E4(0, v2, 0);
    v5 = (_BYTE *)(a1 + 40);
    do
    {
      v6 = *v5;
      v7 = &selRef_updateSmartList_;
      if (!*v5)
        v7 = &selRef_updateList_;
      v8 = objc_msgSend(a2, *v7, *((_QWORD *)v5 - 1));
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_1003D81E4(v9 > 1, v10 + 1, 1);
      _swiftEmptyArrayStorage[2] = v10 + 1;
      v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v8;
      *((_BYTE *)v11 + 40) = v6;
      v5 += 16;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100344F20(void *a1, char a2, uint64_t a3)
{
  unsigned int v6;
  _QWORD v8[5];

  v6 = objc_msgSend(a1, "isGroup");
  sub_10001413C((_QWORD *)(a3 + 48), *(_QWORD *)(a3 + 72));
  if (v6)
    sub_10029C6D4(a1, a3, (uint64_t)v8);
  else
    sub_10029BB50(a1, a3, (uint64_t)&off_1005FA018, a2 & 1, (uint64_t)v8);
  return sub_100027F10(v8);
}

void sub_100344FC0(char a1)
{
  uint64_t v2;

  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_100345038()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;

  v4 = sub_10001413C((_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 72));
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v0, 1, 1, v5);
  sub_1003421B0(v2, v0, v1, v3 & 1, *v4);
  return sub_1000073A0(v0, (uint64_t *)&unk_1006463C0);
}

uint64_t sub_100345280(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;
  char v44[24];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMAccountsListDataView.Model(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v15);
  v19 = (char *)&v35 - v18;
  v20 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing);
  if (v20 == 1)
  {
    if ((a1 & 1) != 0)
      return result;
  }
  else if ((a1 & 1) == 0)
  {
    return result;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_isEditing) = a1 & 1;
  v21 = v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v44, 0, 0);
  sub_10000735C(v21, (uint64_t)v11, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1000073A0((uint64_t)v11, &qword_100656198);
  v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v35(v19, v11, v12);
  sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v36 = static OS_dispatch_queue.main.getter();
  v22 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v22 + 16, v2);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v12);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = v24 + v14;
  v26 = swift_allocObject(&unk_100601780, v25 + 1, v23 | 7);
  *(_QWORD *)(v26 + 16) = v22;
  v35((char *)(v26 + v24), v16, v12);
  *(_BYTE *)(v26 + v25) = v20;
  aBlock[4] = sub_100347EB0;
  v43 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_100601798;
  v27 = _Block_copy(aBlock);
  v28 = swift_release(v43);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_10002A750((uint64_t *)&unk_100640F40);
  v31 = sub_10002D150((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40);
  v32 = v39;
  v33 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v41, v29);
  v34 = (void *)v36;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v32, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
}

id sub_100345630(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void **v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  id v41;
  char v43;
  __int128 v46;
  uint64_t v47;
  _UNKNOWN **v48;
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  _UNKNOWN **v52;

  v43 = a3 & 1;
  v7 = objc_allocWithZone((Class)TTRUndoManager);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithDebugIdentifier:", v8);

  v11 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v10);
  v12 = *v11;
  v13 = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v14 = (_QWORD *)swift_allocObject(v13, 64, 7);
  v15 = type metadata accessor for TTRUserDefaults(0);
  v14[5] = v15;
  v14[6] = &protocol witness table for TTRUserDefaults;
  v14[2] = v12;
  v14[7] = 20;
  v51 = v13;
  v52 = &protocol witness table for TTRSmartListVersionWarningInteractor;
  v50[0] = v14;
  sub_100010634((uint64_t)v50, (uint64_t)v49);
  v16 = *v11;
  v17 = type metadata accessor for TTRListDetailCreationEditor();
  v18 = swift_allocObject(v17, 112, 7);
  v47 = v15;
  v48 = &protocol witness table for TTRUserDefaults;
  *(_QWORD *)&v46 = v16;
  *(_QWORD *)(v18 + 16) = a2;
  sub_10002E37C(v49, v18 + 32);
  *(_QWORD *)(v18 + 24) = v9;
  sub_10002E37C(&v46, v18 + 72);
  v19 = v12;
  swift_retain(v14);
  swift_retain(a2);
  v20 = v16;
  v21 = v9;
  sub_100027F10(v50);
  v22 = sub_10002A750(&qword_1006561D0);
  swift_allocObject(v22, 72, 7);
  v23 = v21;
  v24 = swift_retain(v18);
  v25 = sub_10032BEFC(v24, v23);
  v26 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v27 = swift_allocObject(v26, 16, 7);
  v51 = v26;
  v52 = (_UNKNOWN **)&protocol witness table for TTRInteractorAsyncEditsCommitter;
  v50[0] = v27;
  v28 = objc_allocWithZone((Class)type metadata accessor for TTRListToCustomSmartListConverter(0));
  v29 = (void *)TTRListToCustomSmartListConverter.init(store:committer:)(a1, v50);
  v30 = type metadata accessor for TTRIListDetailRouter();
  v31 = swift_allocObject(v30, 32, 7);
  swift_unknownObjectWeakInit(v31 + 16, 0);
  *(_QWORD *)(v31 + 24) = v14;
  v32 = type metadata accessor for TTRListDetailCreationViewModelSource();
  v33 = swift_allocObject(v32, 16, 7);
  v34 = sub_10002A750(&qword_1006561D8);
  v35 = swift_allocObject(v34, 176, 7);
  swift_retain(v14);
  v36 = v23;
  swift_retain(v33);
  swift_retain(v25);
  v37 = v29;
  swift_retain(v31);
  v38 = sub_1003433E0((uint64_t)v25, (uint64_t)v29, (uint64_t)&protocol witness table for TTRListToCustomSmartListConverter, v31, v33, (uint64_t)v36, v43, v35);
  v39 = objc_allocWithZone((Class)type metadata accessor for TTRIListDetailViewController());
  v40 = swift_retain(v38);
  v41 = sub_100349624(v40, v39);
  swift_release(v18);
  swift_release(v33);
  swift_release(v14);

  swift_release(v38);
  swift_beginAccess(v25 + 2, v50, 1, 0);
  v25[3] = &off_1005EE0E0;
  swift_unknownObjectWeakAssign(v25 + 2, v38);
  swift_release(v25);
  *(_QWORD *)(v38 + 56) = &off_1005F77E8;
  swift_unknownObjectWeakAssign(v38 + 48, v41);
  *(_QWORD *)(v38 + 72) = a5;
  swift_unknownObjectWeakAssign(v38 + 64, a4);
  swift_unknownObjectWeakAssign(v31 + 16, v41);
  swift_release(v31);
  return v41;
}

uint64_t sub_1003459B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const mach_header_64 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v1 = type metadata accessor for Logger(0);
  sub_100012DC4(v1, (uint64_t)qword_100655F30);
  v2 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Add New List", 12, 2, v2);
  swift_bridgeObjectRelease(v2);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = swift_retain(v3);
  v5 = TTRAccountsListsViewModel.accounts.getter(v4);
  swift_release(v3);
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(_QWORD *)(v5 + 40);
    v24 = *(_QWORD *)(v5 + 32);
    v7 = *(void **)(v5 + 48);
    v8 = *(unsigned __int8 *)(v5 + 56);
    v9 = *(unsigned __int8 *)(v5 + 57);
    v10 = *(unsigned __int8 *)(v5 + 58);
    v11 = *(unsigned __int8 *)(v5 + 59);
    v12 = *(unsigned __int8 *)(v5 + 60);
    v13 = *(unsigned __int8 *)(v5 + 61);
    swift_bridgeObjectRetain(v6);
    v14 = v7;
    swift_bridgeObjectRelease(v5);
    v15 = 256;
    if (!v9)
      v15 = 0;
    v16 = v15 | v8;
    v17 = 0x10000;
    if (!v10)
      v17 = 0;
    v18 = 0x1000000;
    if (!v11)
      v18 = 0;
    v19 = v16 | v17 | v18;
    v20 = &_mh_execute_header;
    if (!v12)
      v20 = 0;
    v21 = 0x10000000000;
    if (!v13)
      v21 = 0;
    sub_10032F308(v24, v6, v14, v19 | (unint64_t)v20 | v21, 0, 0, 3);

    v22 = v6;
  }
  else
  {
    v22 = v5;
  }
  return swift_bridgeObjectRelease(v22);
}

void sub_100345B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;

  v1 = v0;
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100655F30);
  v3 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Add New Group", 13, 2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = swift_retain(*(_QWORD *)(v1 + 184));
  v6 = TTRAccountsListsViewModel.accounts.getter(v5);
  swift_release(v4);
  v18 = v6;
  v7 = sub_10002A750(&qword_1006562A8);
  v8 = sub_10002A750(&qword_1006562B0);
  v9 = sub_10002D150(&qword_1006562B8, &qword_1006562A8);
  Sequence.firstMap<A>(_:)(&v19, sub_10034A744, v1, v7, v8, v9);
  swift_bridgeObjectRelease(v18);
  v10 = v20;
  if (v20)
  {
    v11 = v19;
    v12 = v21;
    v13 = v22;
    v14 = v23;
    v15 = v22 & 0x101010101FFLL;
    swift_bridgeObjectRetain(v20);
    v16 = v12;
    v17 = v14;
    sub_10032FD30(v11, v10, v16, v15, (uint64_t)v17);

    swift_bridgeObjectRelease(v10);
    sub_10034A75C(v11, v10, v12, v13, v14);
  }
}

id sub_100345D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSURL *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v0 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v20 - v4;
  URL.init(string:)(0xD000000000000040, 0x8000000100574B80);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v7 = result;
    sub_10000735C((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_100640EE0);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    v11 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
    {
      URL._bridgeToObjectiveC()(v10);
      v11 = v12;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    v13 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    LOBYTE(v13) = objc_msgSend(v7, "openSensitiveURL:withOptions:", v11, isa);

    if ((v13 & 1) == 0)
    {
      if (qword_10063D680 != -1)
        swift_once(&qword_10063D680, sub_1000074FC);
      v15 = type metadata accessor for Logger(0);
      v16 = sub_100012DC4(v15, (uint64_t)qword_100655F30);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRIAccountsListsPresenter: Failed to open Settings to turn on iCloud for Reminders", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

    }
    return (id)sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EE0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100345F54(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  char v13;
  _BYTE *v14;
  id v15;
  uint64_t v17;
  objc_super v18;
  _QWORD v19[2];
  _QWORD v20[5];
  char *v21;

  v1 = objc_msgSend(a1, "items");
  v2 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  while (v4)
  {
    v5 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if ((v3 & 0xC000000000000001) == 0)
        break;
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_13;
LABEL_9:
      v19[0] = 0xD000000000000029;
      v19[1] = 0x8000000100566E40;
      v10 = v8;
      AnyHashable.init<A>(_:)(v20, v19, &type metadata for String, &protocol witness table for String);
      UIDragItem.localObject<A>(ofType:forKey:)(&v21, v5, v20, v5);
      sub_100041DDC((uint64_t)v20);
      v11 = v21;
      if (!v21)
      {
        swift_bridgeObjectRelease_n(v3, 2);

        return 0;
      }
      v12 = *(void **)&v21[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
      v13 = v21[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
      v14 = objc_allocWithZone(v5);
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
      *(_QWORD *)&v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v12;
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v13;
      v18.receiver = v14;
      v18.super_class = v5;
      v15 = v12;

      ++v6;
      if (v9 == v4)
        goto LABEL_11;
    }
    v8 = *(id *)(v3 + 8 * v6);
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    if (v3 < 0)
      v17 = v3;
    else
      v17 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
  }
LABEL_11:
  swift_bridgeObjectRelease_n(v3, 2);
  return 1;
}

void sub_100346190(void *a1, unsigned __int8 a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;

  if ((a3 & 1) != 0)
  {
    if (a2 >= 2u)
    {
      if (qword_10063D680 != -1)
        swift_once(&qword_10063D680, sub_1000074FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_100012DC4(v6, (uint64_t)qword_100655F30);
      oslog = Logger.logObject.getter(v7);
      v8 = static os_log_type_t.fault.getter(oslog);
      if (os_log_type_enabled(oslog, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v8, "TTRIAccountsListsPresenter: unexpect objectType from listDetailDidComplete", v9, 2u);
        swift_slowDealloc(v9, -1, -1);
      }
    }
    else
    {
      v4 = v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction;
      oslog = *(NSObject **)(v3 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_postModelUpdateAction);
      *(_QWORD *)v4 = a1;
      *(_BYTE *)(v4 + 8) = 1;
      v5 = a1;
    }

  }
}

void sub_1003462A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  _QWORD v27[7];
  uint64_t v28;
  char v29[144];

  v28 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v3 = __chkstk_darwin(v28);
  v27[6] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v27[5] = (char *)v27 - v5;
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v27[1] = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v27[2] = v8;
  v27[3] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v15 = sub_100012DC4(v11, (uint64_t)qword_100655F30);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v29);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x6F436D6574496D73;
  *(_QWORD *)(inited + 40) = 0xEB00000000746E75;
  v27[4] = v1;
  v18 = *(_QWORD *)(v1 + 184);
  v19 = swift_retain(v18);
  v20 = TTRAccountsListsViewModel.pinnedListsSectionItems.getter(v19);
  swift_release(v18);
  v21 = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(inited + 48) = v21;
  *(_QWORD *)(inited + 72) = &type metadata for Int;
  *(_QWORD *)(inited + 80) = 1835365449;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v22 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
  v23 = TTRTreeStorageItem.treeItemDescription.getter(v6, v22);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v23;
  *(_QWORD *)(inited + 104) = v24;
  v25 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders Accounts List Show Context Menu {smItemCount: %ld} from {Item: %@)", 76, 2, v25);
  swift_bridgeObjectRelease(v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_10002B1E8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v26 = (char *)&loc_100346528 + dword_1003468FC[swift_getEnumCaseMultiPayload(v10, v6)];
  __asm { BR              X10 }
}

void sub_100346934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v6, v7);
  v8 = (char *)sub_100346A44 + 4 * word_10052E81E[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

_QWORD *sub_100346A44()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return _swiftEmptyArrayStorage;
}

void sub_100346A80()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  sub_10001F580(v4, v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  v6 = &v1[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
  *v1 = *(_BYTE *)(v3 + *(int *)(v5 + 20));
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_storeEnumTagMultiPayload(v1, v2, 2);
  v8 = (objc_class *)type metadata accessor for TTRIAccountsListsDragItem(0);
  v9 = objc_allocWithZone(v8);
  sub_10002B1E8((uint64_t)v1, (uint64_t)v9 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  *(_QWORD *)(v0 + 40) = v9;
  *(_QWORD *)(v0 + 48) = v8;
  v10 = objc_msgSendSuper2((objc_super *)(v0 + 40), "init");
  sub_10001F544((uint64_t)v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  v11 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v10);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v11);

  v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100521140;
  *(_QWORD *)(v14 + 32) = v12;
  *(_QWORD *)(v0 + 80) = v14;
  specialized Array._endMutation()(v14);

  sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  JUMPOUT(0x100346A5CLL);
}

void sub_100346BD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);

  swift_bridgeObjectRelease(v1);
  JUMPOUT(0x100346A54);
}

void sub_100346BEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  void *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v3[11];
  v4[10] = v3[10];
  v4[11] = v5;
  v4[12] = v3[12];
  *(_OWORD *)((char *)v4 + 202) = *(_OWORD *)((char *)v3 + 202);
  v6 = v3[7];
  v4[6] = v3[6];
  v4[7] = v6;
  v7 = v3[9];
  v4[8] = v3[8];
  v4[9] = v7;
  v8 = v3[3];
  *(_OWORD *)(v0 + 112) = v3[2];
  *(_OWORD *)(v0 + 128) = v8;
  v9 = v3[5];
  v4[4] = v3[4];
  v4[5] = v9;
  v10 = v3[1];
  *(_OWORD *)(v0 + 80) = *v3;
  *(_OWORD *)(v0 + 96) = v10;
  v11 = (char *)v1 + *(int *)(sub_10002A750(&qword_100643700) + 48);
  v12 = *(void **)(v0 + 80);
  *v1 = v12;
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  v14 = (objc_class *)type metadata accessor for TTRIAccountsListsDragItem(0);
  v15 = objc_allocWithZone(v14);
  sub_10002B1E8((uint64_t)v1, (uint64_t)v15 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  *(_QWORD *)(v0 + 8) = v15;
  *(_QWORD *)(v0 + 16) = v14;
  v16 = v12;
  v17 = objc_msgSendSuper2((objc_super *)(v0 + 8), "init");
  sub_10001F544((uint64_t)v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  v18 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v17);
  v19 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v18);

  v20 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100521140;
  *(_QWORD *)(v21 + 32) = v19;
  *(_QWORD *)(v0 + 56) = v21;
  specialized Array._endMutation()(v21);

  sub_100075FE8(v0 + 80);
  JUMPOUT(0x100346A5CLL);
}

void sub_100346E4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3[1];
  v5 = v3[4];
  v6 = (void *)v3[6];
  v7 = (char *)v1 + *(int *)(sub_10002A750(&qword_100643700) + 48);
  *v1 = v6;
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  v9 = (objc_class *)type metadata accessor for TTRIAccountsListsDragItem(0);
  v10 = objc_allocWithZone(v9);
  sub_10002B1E8((uint64_t)v1, (uint64_t)v10 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  *(_QWORD *)(v0 + 24) = v10;
  *(_QWORD *)(v0 + 32) = v9;
  v11 = v6;
  v12 = objc_msgSendSuper2((objc_super *)(v0 + 24), "init");
  sub_10001F544((uint64_t)v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  v13 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v12);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v13);

  v15 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100521140;
  *(_QWORD *)(v16 + 32) = v14;
  *(_QWORD *)(v0 + 80) = v16;
  specialized Array._endMutation()(v16);

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);

  JUMPOUT(0x100346A5CLL);
}

void sub_100346FA4()
{
  uint64_t v0;

  sub_100076F38(*(void **)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(_BYTE *)(v0 + 88));
  JUMPOUT(0x100346A54);
}

void sub_100346FDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 8));
  JUMPOUT(0x100346A54);
}

void sub_100346FE8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  JUMPOUT(0x100346A54);
}

uint64_t sub_100346FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t (*v14)(_QWORD);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  objc_class *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;

  v2 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (_OWORD *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
  __chkstk_darwin(v11);
  v13 = (_OWORD *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8(a1, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    v15 = v13[11];
    v4[10] = v13[10];
    v4[11] = v15;
    v4[12] = v13[12];
    *(_OWORD *)((char *)v4 + 202) = *(_OWORD *)((char *)v13 + 202);
    v16 = v13[7];
    v4[6] = v13[6];
    v4[7] = v16;
    v17 = v13[9];
    v4[8] = v13[8];
    v4[9] = v17;
    v18 = v13[3];
    v4[2] = v13[2];
    v4[3] = v18;
    v19 = v13[5];
    v4[4] = v13[4];
    v4[5] = v19;
    v20 = v13[1];
    *v4 = *v13;
    v4[1] = v20;
    swift_storeEnumTagMultiPayload(v4, v2, 4);
    sub_100346934((uint64_t)v4);
    v22 = v21;
    v23 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item;
    v24 = (uint64_t)v4;
  }
  else
  {
    sub_10001F580((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    v25 = &v7[*(int *)(sub_10002A750(&qword_10063F038) + 48)];
    *v7 = v10[*(int *)(v8 + 20)];
    v26 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    swift_storeEnumTagMultiPayload(v7, v5, 2);
    v27 = (objc_class *)type metadata accessor for TTRIAccountsListsDragItem(0);
    v28 = objc_allocWithZone(v27);
    sub_10002B1E8((uint64_t)v7, (uint64_t)v28 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
    v37.receiver = v28;
    v37.super_class = v27;
    v29 = objc_msgSendSuper2(&v37, "init");
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
    v30 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v29);
    v31 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v30);

    v32 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v33 = swift_allocObject(v32, 40, 7);
    *(_OWORD *)(v33 + 16) = xmmword_100521140;
    *(_QWORD *)(v33 + 32) = v31;
    v36 = v33;
    specialized Array._endMutation()(v33);
    v22 = v36;

    v24 = (uint64_t)v10;
    v23 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.SmartList;
  }
  sub_10001F544(v24, v23);
  return v22;
}

id sub_10034730C(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  id v38;
  char v40;
  _QWORD v43[5];

  v40 = a3 & 1;
  v7 = objc_allocWithZone((Class)TTRUndoManager);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithDebugIdentifier:", v8);

  v11 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v10);
  v12 = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v13 = (_QWORD *)swift_allocObject(v12, 64, 7);
  v13[5] = type metadata accessor for TTRUserDefaults(0);
  v13[6] = &protocol witness table for TTRUserDefaults;
  v13[2] = v11;
  v13[7] = 20;
  v14 = type metadata accessor for TTRTemplateEditor(0);
  v15 = sub_1000175C8(&qword_100656230, (uint64_t (*)(uint64_t))&type metadata accessor for TTRTemplateEditor, (uint64_t)&protocol conformance descriptor for TTRTemplateEditor);
  v16 = v11;
  v17 = a2;
  v18 = v9;
  TTRUndoableEditing.init(changeItem:undoManager:)(v43, v17, v9, v14, v15);
  v19 = sub_10002A750(&qword_100656238);
  swift_allocObject(v19, 72, 7);
  v20 = v18;
  v21 = swift_retain();
  v22 = sub_10032C4E4(v21, v20, &qword_100645748, REMTemplateStorage_ptr, (uint64_t)sub_1000D993C);
  v23 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v24 = swift_allocObject(v23, 16, 7);
  v43[3] = v23;
  v43[4] = &protocol witness table for TTRInteractorAsyncEditsCommitter;
  v43[0] = v24;
  v25 = objc_allocWithZone((Class)type metadata accessor for TTRListToCustomSmartListConverter(0));
  v26 = (void *)TTRListToCustomSmartListConverter.init(store:committer:)(a1, v43);
  v27 = type metadata accessor for TTRIListDetailRouter();
  v28 = swift_allocObject(v27, 32, 7);
  swift_unknownObjectWeakInit(v28 + 16, 0);
  *(_QWORD *)(v28 + 24) = v13;
  v29 = type metadata accessor for TTRListDetailTemplateViewModelSource();
  v30 = swift_allocObject(v29, 16, 7);
  v31 = sub_10002A750(&qword_100656240);
  v32 = swift_allocObject(v31, 176, 7);
  v33 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  v34 = v26;
  swift_retain();
  v35 = sub_100344768((uint64_t)v22, (uint64_t)v26, (uint64_t)&protocol witness table for TTRListToCustomSmartListConverter, v28, v30, (uint64_t)v33, v40, v32);
  v36 = objc_allocWithZone((Class)type metadata accessor for TTRIListDetailViewController());
  v37 = swift_retain();
  v38 = sub_100349624(v37, v36);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_beginAccess(v22 + 2, v43, 1, 0);
  v22[3] = &off_1005EE0E0;
  swift_unknownObjectWeakAssign(v22 + 2, v35);
  swift_release();
  *(_QWORD *)(v35 + 56) = &off_1005F77E8;
  swift_unknownObjectWeakAssign(v35 + 48, v38);
  *(_QWORD *)(v35 + 72) = a5;
  swift_unknownObjectWeakAssign(v35 + 64, a4);
  swift_unknownObjectWeakAssign(v28 + 16, v38);
  swift_release();
  return v38;
}

uint64_t sub_100347674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_10064BF14);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006083C;
  return sub_1001E5E48(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

uint64_t sub_100347720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_10064BF14);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10004A08C;
  return sub_1001E5E48(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

Class sub_1003477CC(uint64_t a1)
{
  uint64_t v1;

  return sub_10033AAEC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40));
}

double sub_1003477E0(uint64_t a1)
{
  uint64_t v1;

  return sub_10033AE54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_1003477F4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_1000866C4(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject(v0, 97, 7);
}

void sub_100347834(uint64_t a1)
{
  uint64_t v1;

  sub_10033B048(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40));
}

uint64_t sub_10034784C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  sub_10025ACC4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_1000866C4(*(id *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));

  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1003478A0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003478D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v6 = v2[4];
  v5 = v2[5];
  v7 = *(_QWORD *)(v3 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 64), a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 200))(v4, 0, v6, v5, ObjectType, v7);
}

uint64_t sub_100347934()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_100347944(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = a1[4];
  v3 = (void *)a1[6];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  v4 = v3;
  return a1;
}

uint64_t sub_100347988()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  sub_10002B328(*(void **)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_10002B318(*(void **)(v0 + 160), *(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  return swift_deallocObject(v0, 250, 7);
}

void sub_100347A1C(char a1)
{
  uint64_t v1;

  sub_1003398BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (_OWORD *)(v1 + 32));
}

void sub_100347A2C(uint64_t a1)
{
  uint64_t v1;

  sub_100339D24(a1, (void **)(v1 + 16), "Failed to reject CalDAV shared list for {list.objectID: %@, error: %s}", "Declined CalDAV shared list {list.objectID: %@}");
}

uint64_t sub_100347A58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  sub_10002B328(*(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  sub_10002B318(*(void **)(v0 + 144), *(id *)(v0 + 152), *(_BYTE *)(v0 + 160));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));
  return swift_deallocObject(v0, 234, 7);
}

void sub_100347ADC(uint64_t a1)
{
  uint64_t v1;

  sub_100339D24(a1, (void **)(v1 + 16), "Failed to accept CalDAV shared list {list.objectID: %@, error: %s}", "Accepted CalDAV shared list {list.objectID: %@}");
}

uint64_t sub_100347B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(uint64_t **)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1006561A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006083C;
  v4 = *v2;
  v3[2] = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)[1]);
  v3[3] = v5;
  *v5 = v3;
  v5[1] = sub_10033BFF4;
  return TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(2, v4, &protocol witness table for TTRIPrivacyChecker);
}

id sub_100347B98(id result)
{
  if ((char *)result - 1 >= (char *)3)
    return result;
  return result;
}

uint64_t sub_100347BAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100347BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 216))(a1, ObjectType, v4);
}

uint64_t sub_100347C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 232))(a1, ObjectType, v4) & 1;
}

uint64_t sub_100347C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMAccountsListDataView.Model(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100347CE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMAccountsListDataView.Model(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1006561BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_10033EA64(a1, v5, v6, v7, v8);
}

uint64_t sub_100347D74(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  __int128 v12;

  v2 = *(void **)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(void **)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v12 = *(_OWORD *)(a1 + 152);
  v10 = *(void **)(a1 + 168);
  sub_10002FAF0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80));
  sub_10002FAF0(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((unint64_t *)&v12 + 1), v10);
  return a1;
}

void sub_100347E30(uint64_t a1)
{
  uint64_t v1;

  sub_10033053C(a1, v1);
}

uint64_t sub_100347E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMAccountsListDataView.Model(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100347EB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for REMAccountsListDataView.Model(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100332B7C(*(_QWORD *)(v0 + 16), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_100347EEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;

  return sub_10032FC94(a1, a2, a3, a4 & 0x101010101FFLL, a5, v5);
}

uint64_t sub_100347F04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100347F48()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD, unint64_t, uint64_t *);
  __int128 v2;
  __int128 v4[3];
  uint64_t v5;

  v1 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, unint64_t, uint64_t *))(v0 + 72);
  v2 = *(_OWORD *)(v0 + 32);
  v4[0] = *(_OWORD *)(v0 + 16);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  return sub_1003482F0(v4, v1);
}

void sub_100347F84(uint64_t a1)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  char *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;

  v2 = *sub_10001413C((_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72)) + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    goto LABEL_8;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "traitCollection");

  v6 = objc_msgSend(v5, "horizontalSizeClass");
  if (v6 != (id)1)
    goto LABEL_8;
  v7 = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (!v7)
    return;
  v8 = v7;
  if (!objc_msgSend(v7, "isCollapsed"))
  {

    goto LABEL_8;
  }
  v9 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
  v10 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = *(id *)&v8[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
  v13 = sub_10002D318((uint64_t)v12, v11);

  swift_bridgeObjectRelease(v11);
  if ((v13 & 1) != 0)
LABEL_8:
    *(_BYTE *)(a1 + 145) = 1;
}

uint64_t sub_1003480C4(__int128 *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, unint64_t, __int128 *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const mach_header_64 *v21;
  uint64_t v22;
  _BYTE v24[128];
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1[1];
  v25 = *a1;
  v26 = v8;
  v27 = a1[2];
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v9 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v10, v24);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656C746974;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v12 = *((_QWORD *)&v27 + 1);
  v13 = (void *)v26;
  *(_QWORD *)(inited + 48) = v27;
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 120) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 96) = v13;
  swift_bridgeObjectRetain(v12);
  v14 = v13;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Picked account {title: %@, account.objectID: %@}", 48, 2, v15);
  swift_bridgeObjectRelease(v15);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v16 = 256;
  if (!BYTE9(v26))
    v16 = 0;
  v17 = v16 | BYTE8(v26);
  v18 = 0x10000;
  if (!BYTE10(v26))
    v18 = 0;
  v19 = 0x1000000;
  if (!BYTE11(v26))
    v19 = 0;
  v20 = v17 | v18 | v19;
  v21 = &_mh_execute_header;
  if (!BYTE12(v26))
    v21 = 0;
  v22 = 0x10000000000;
  if (!BYTE13(v26))
    v22 = 0;
  return a2(v25, *((_QWORD *)&v25 + 1), v26, v20 | (unint64_t)v21 | v22, &v25);
}

uint64_t sub_1003482F0(__int128 *a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, unint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const mach_header_64 *v21;
  uint64_t v22;
  _BYTE v24[128];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1[1];
  v25 = *a1;
  v26 = v8;
  v27 = a1[2];
  v28 = *((_QWORD *)a1 + 6);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v9 = sub_100012DC4(v4, (uint64_t)qword_100655F30);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v10, v24);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x656C746974;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v12 = *((_QWORD *)&v27 + 1);
  v13 = (void *)v26;
  *(_QWORD *)(inited + 48) = v27;
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 120) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 96) = v13;
  swift_bridgeObjectRetain(v12);
  v14 = v13;
  v15 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Picked account {title: %@, account.objectID: %@}", 48, 2, v15);
  swift_bridgeObjectRelease(v15);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v16 = 256;
  if (!BYTE9(v26))
    v16 = 0;
  v17 = v16 | BYTE8(v26);
  v18 = 0x10000;
  if (!BYTE10(v26))
    v18 = 0;
  v19 = 0x1000000;
  if (!BYTE11(v26))
    v19 = 0;
  v20 = v17 | v18 | v19;
  v21 = &_mh_execute_header;
  if (!BYTE12(v26))
    v21 = 0;
  v22 = 0x10000000000;
  if (!BYTE13(v26))
    v22 = 0;
  return a2(v25, *((_QWORD *)&v25 + 1), v26, v20 | (unint64_t)v21 | v22, &v28);
}

uint64_t sub_100348528(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_10032F268(a1, a2, a3, a4 & 0x101010101FFLL, a5, v5);
}

uint64_t sub_100348540()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10034857C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD, unint64_t, __int128 *);
  __int128 v2;
  __int128 v4[3];

  v1 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, unint64_t, __int128 *))(v0 + 64);
  v2 = *(_OWORD *)(v0 + 32);
  v4[0] = *(_OWORD *)(v0 + 16);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v0 + 48);
  return sub_1003480C4(v4, v1);
}

uint64_t sub_1003485B0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRAccountsListsViewModel.FallbackSelection.PinnedListSelection
                                             - 1)
                                           + 32))(a2, a1);
  return a2;
}

id sub_1003485EC(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, void *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27)
{
  void *v29;
  id v30;

  if (result)
  {
    v29 = result;
    swift_bridgeObjectRetain(a9);
    v30 = v29;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a7);
    sub_10002B764(a10, a11, a12, a13, a14, a15, a16 & 1);
    sub_10002B7A0(a17, a18, a19 & 1);
    swift_bridgeObjectRetain(a27);
    swift_bridgeObjectRetain(a22);
    swift_bridgeObjectRetain(a23);
    swift_bridgeObjectRetain(a24);
    return a25;
  }
  return result;
}

uint64_t sub_1003486FC(uint64_t a1)
{
  sub_100348734(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48));
  return a1;
}

void sub_100348734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a5);

  }
}

uint64_t sub_100348778()
{
  return sub_100006708(32);
}

uint64_t sub_100348780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 64), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 240))(v4, ObjectType, v5);
}

uint64_t sub_1003487C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003487D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v2 = v1;
  v4 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100012DC4(v7, (uint64_t)qword_100655F30);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "TTRIAccountsListsPresenter interactor did update model", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = type metadata accessor for REMAccountsListDataView.Model(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v6, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  v14 = v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v17, 33, 0);
  sub_100349B28((uint64_t)v6, v14);
  swift_endAccess(v17);
  return sub_10032E598(a1, 0, 2, 1);
}

uint64_t sub_100348978(uint64_t (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v15[-v7];
  v9 = type metadata accessor for REMAccountsListDataView.Model(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v16, 0, 0);
  sub_10000735C(v13, (uint64_t)v8, &qword_100656198);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1000073A0((uint64_t)v8, &qword_100656198);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  if ((a1(v12) & 1) != 0)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v5, v12, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    swift_beginAccess(v13, v15, 33, 0);
    sub_100349B28((uint64_t)v5, v13);
    swift_endAccess(v15);
    sub_10032E598((uint64_t)v12, 0, 2, 1);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_100348B50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t Strong;
  uint64_t v18;
  NSObject *oslog;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(REMSystemUtilities), "isInternalInstall");
  if (!(_DWORD)v2)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100012DC4(v10, (uint64_t)qword_100655F30);
    oslog = Logger.logObject.getter(v11);
    v7 = static os_log_type_t.error.getter(oslog);
    if (!os_log_type_enabled(oslog, v7))
      goto LABEL_12;
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    v9 = "didEncounterMigrationError. Not running internal install. Done";
    goto LABEL_11;
  }
  v3 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v2);
  v4 = TTRUserDefaults.migrationFailureAlertShown.getter();

  if ((v4 & 1) != 0)
  {
    if (qword_10063D680 != -1)
      swift_once(&qword_10063D680, sub_1000074FC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100012DC4(v5, (uint64_t)qword_100655F30);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter(oslog);
    if (!os_log_type_enabled(oslog, v7))
      goto LABEL_12;
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    v9 = "migrationFailureAlertShown is true, not showing dialog.";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, v9, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
LABEL_12:

    return;
  }
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100012DC4(v12, (uint64_t)qword_100655F30);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "migrationFailureAlertShown is false and running internal install. Showing dialog.", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v18 = Strong;
    sub_100067988();
    swift_unknownObjectRelease(v18);
  }
}

uint64_t sub_100348DCC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v2 = v1;
  v4 = sub_10002A750(&qword_100656198);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMAccountsListDataView.Model(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D680 != -1)
    swift_once(&qword_10063D680, sub_1000074FC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100012DC4(v11, (uint64_t)qword_100655F30);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v23 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    *(_DWORD *)v16 = 136315138;
    v25[0] = v17;
    if ((a1 & 1) != 0)
      v18 = 1701670771;
    else
      v18 = 1701736302;
    v24 = sub_100027E40(v18, 0xE400000000000000, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(0xE400000000000000);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "TTRIAccountsListsPresenter interactor did update CK network activity {activity: %s}", v16, 0xCu);
    swift_arrayDestroy(v17, 1, &type metadata for Any[8]);
    swift_slowDealloc(v17, -1, -1);
    v19 = v16;
    v2 = v23;
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC9Reminders26TTRIAccountsListsPresenter_dataViewModel, v25, 0, 0);
  sub_10000735C(v20, (uint64_t)v6, &qword_100656198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, &qword_100656198);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  sub_10032E598((uint64_t)v10, 0, 2, 1);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100349070(char a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v3 = sub_10001413C((_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 136));
  if ((a1 & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v3 + 48);
    if (Strong)
    {
      v5 = Strong;
      v6 = objc_msgSend(Strong, "presentingViewController");
      if (v6)
      {
        v12 = v6;
        v7 = objc_msgSend(v6, "presentedViewController");
        if (v7)
        {
          v8 = v7;
          sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
          v9 = v5;
          v10 = v8;
          LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

          if ((v8 & 1) != 0)
            objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
        }

        v11 = v12;
      }
      else
      {
        v11 = v5;
      }

    }
  }
}

double sub_10034918C(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  double result;
  uint64_t v12;

  v2 = a1 & 1;
  v3 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001413C((_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 136));
  sub_1001E5150(v2);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = swift_allocObject(&unk_100601370, 24, 7);
  swift_weakInit(v7 + 16, v1);
  type metadata accessor for MainActor(0);
  v8 = swift_retain();
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1006018C0, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  swift_release();
  sub_1001B9C04((uint64_t)v5, (uint64_t)&unk_100656220, (uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_1003492B4(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  id v39;
  char v41;
  _QWORD v44[5];

  v41 = a3 & 1;
  v7 = objc_allocWithZone((Class)TTRUndoManager);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithDebugIdentifier:", v8);

  v11 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v10);
  v12 = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v13 = (_QWORD *)swift_allocObject(v12, 64, 7);
  v13[5] = type metadata accessor for TTRUserDefaults(0);
  v13[6] = &protocol witness table for TTRUserDefaults;
  v13[2] = v11;
  v13[7] = 20;
  v14 = type metadata accessor for TTRListEditor(0);
  v15 = sub_1000175C8((unint64_t *)&qword_10064D710, (uint64_t (*)(uint64_t))&type metadata accessor for TTRListEditor, (uint64_t)&protocol conformance descriptor for TTRListEditor);
  v16 = v11;
  v17 = a2;
  v18 = v9;
  TTRUndoableEditing.init(changeItem:undoManager:)(v44, v17, v9, v14, v15);
  v19 = v44[0];
  v20 = sub_10002A750(&qword_1006561F0);
  swift_allocObject(v20, 72, 7);
  v21 = v18;
  v22 = swift_retain(v19);
  v23 = sub_10032C4E4(v22, v21, &qword_100645598, REMListStorage_ptr, (uint64_t)sub_1000D993C);
  v24 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v25 = swift_allocObject(v24, 16, 7);
  v44[3] = v24;
  v44[4] = &protocol witness table for TTRInteractorAsyncEditsCommitter;
  v44[0] = v25;
  v26 = objc_allocWithZone((Class)type metadata accessor for TTRListToCustomSmartListConverter(0));
  v27 = (void *)TTRListToCustomSmartListConverter.init(store:committer:)(a1, v44);
  v28 = type metadata accessor for TTRIListDetailRouter();
  v29 = swift_allocObject(v28, 32, 7);
  swift_unknownObjectWeakInit(v29 + 16, 0);
  *(_QWORD *)(v29 + 24) = v13;
  v30 = type metadata accessor for TTRListDetailListViewModelSource();
  v31 = swift_allocObject(v30, 16, 7);
  v32 = sub_10002A750(&qword_1006561F8);
  v33 = swift_allocObject(v32, 176, 7);
  v34 = v21;
  swift_retain(v31);
  swift_retain(v13);
  swift_retain(v23);
  v35 = v27;
  swift_retain(v29);
  v36 = sub_10034466C((uint64_t)v23, (uint64_t)v27, (uint64_t)&protocol witness table for TTRListToCustomSmartListConverter, v29, v31, (uint64_t)v34, v41, v33, (void (*)(_QWORD *__return_ptr, id))sub_1002F2DB4);
  v37 = objc_allocWithZone((Class)type metadata accessor for TTRIListDetailViewController());
  v38 = swift_retain(v36);
  v39 = sub_100349624(v38, v37);
  swift_release(v19);
  swift_release(v31);
  swift_release(v13);

  swift_release(v36);
  swift_beginAccess(v23 + 2, v44, 1, 0);
  v23[3] = &off_1005EE0E0;
  swift_unknownObjectWeakAssign(v23 + 2, v36);
  swift_release(v23);
  *(_QWORD *)(v36 + 56) = &off_1005F77E8;
  swift_unknownObjectWeakAssign(v36 + 48, v39);
  *(_QWORD *)(v36 + 72) = a5;
  swift_unknownObjectWeakAssign(v36 + 64, a4);
  swift_unknownObjectWeakAssign(v29 + 16, v39);
  swift_release(v29);
  return v39;
}

id sub_100349624(uint64_t a1, _BYTE *a2)
{
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(a2, a2);
  swift_unknownObjectWeakInit(&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_doneBarButtonItem], 0);
  swift_unknownObjectWeakInit(&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cancelBarButtonItem], 0);
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_tableDataController] = 0;
  a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_autoBeginEditingPerformed] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeSection] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___badgeCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___nameCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersSection] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___filtersCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___listTypeCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___editFiltersCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsSection] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___colorsCell] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsSection] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___emblemsCell] = 0;
  v5 = &a2[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_cslHelpAnchor];
  v6 = a2;
  v7 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor(v6);
  v9 = *v7;
  v8 = v7[1];
  *(_QWORD *)v5 = 0xD000000000000014;
  *((_QWORD *)v5 + 1) = 0x8000000100569E30;
  *((_QWORD *)v5 + 2) = v9;
  *((_QWORD *)v5 + 3) = v8;
  *((_OWORD *)v5 + 2) = xmmword_100529B00;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListSection] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController____lazy_storage___makeListIntoCustomSmartListActionCell] = 0;
  v10 = &v6[OBJC_IVAR____TtC9Reminders28TTRIListDetailViewController_presenter];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = &off_1005EE0F0;
  swift_bridgeObjectRetain(v8);
  swift_retain(a1);

  v12.receiver = v6;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
}

id sub_1003497D0(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  id v39;
  char v41;
  _QWORD v44[5];

  v41 = a3 & 1;
  v7 = objc_allocWithZone((Class)TTRUndoManager);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithDebugIdentifier:", v8);

  v11 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v10);
  v12 = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v13 = (_QWORD *)swift_allocObject(v12, 64, 7);
  v13[5] = type metadata accessor for TTRUserDefaults(0);
  v13[6] = &protocol witness table for TTRUserDefaults;
  v13[2] = v11;
  v13[7] = 20;
  v14 = type metadata accessor for TTRSmartListEditor(0);
  v15 = sub_1000175C8(&qword_100656200, (uint64_t (*)(uint64_t))&type metadata accessor for TTRSmartListEditor, (uint64_t)&protocol conformance descriptor for TTRSmartListEditor);
  v16 = v11;
  v17 = a2;
  v18 = v9;
  TTRUndoableEditing.init(changeItem:undoManager:)(v44, v17, v9, v14, v15);
  v19 = v44[0];
  v20 = sub_10002A750(&qword_100656208);
  swift_allocObject(v20, 72, 7);
  v21 = v18;
  v22 = swift_retain(v19);
  v23 = sub_10032C1D0(v22, v21);
  v24 = type metadata accessor for TTRInteractorAsyncEditsCommitter(0);
  v25 = swift_allocObject(v24, 16, 7);
  v44[3] = v24;
  v44[4] = &protocol witness table for TTRInteractorAsyncEditsCommitter;
  v44[0] = v25;
  v26 = objc_allocWithZone((Class)type metadata accessor for TTRListToCustomSmartListConverter(0));
  v27 = (void *)TTRListToCustomSmartListConverter.init(store:committer:)(a1, v44);
  v28 = type metadata accessor for TTRIListDetailRouter();
  v29 = swift_allocObject(v28, 32, 7);
  swift_unknownObjectWeakInit(v29 + 16, 0);
  *(_QWORD *)(v29 + 24) = v13;
  v30 = type metadata accessor for TTRListDetailCustomSmartListViewModelSource();
  v31 = swift_allocObject(v30, 16, 7);
  v32 = sub_10002A750(&qword_100656210);
  v33 = swift_allocObject(v32, 176, 7);
  v34 = v21;
  swift_retain(v31);
  swift_retain(v13);
  swift_retain(v23);
  v35 = v27;
  swift_retain(v29);
  v36 = sub_10034466C((uint64_t)v23, (uint64_t)v27, (uint64_t)&protocol witness table for TTRListToCustomSmartListConverter, v29, v31, (uint64_t)v34, v41, v33, (void (*)(_QWORD *__return_ptr, id))sub_1002F371C);
  v37 = objc_allocWithZone((Class)type metadata accessor for TTRIListDetailViewController());
  v38 = swift_retain(v36);
  v39 = sub_100349624(v38, v37);
  swift_release(v19);
  swift_release(v31);
  swift_release(v13);

  swift_release(v36);
  swift_beginAccess(v23 + 2, v44, 1, 0);
  v23[3] = &off_1005EE0E0;
  swift_unknownObjectWeakAssign(v23 + 2, v36);
  swift_release(v23);
  *(_QWORD *)(v36 + 56) = &off_1005F77E8;
  swift_unknownObjectWeakAssign(v36 + 48, v39);
  *(_QWORD *)(v36 + 72) = a5;
  swift_unknownObjectWeakAssign(v36 + 64, a4);
  swift_unknownObjectWeakAssign(v29 + 16, v39);
  swift_release(v29);
  return v39;
}

uint64_t sub_100349B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100656198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100349B70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100349B98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065621C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10033F6E8(a1, v4, v5, v6);
}

void sub_100349C04()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  NSString v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  _QWORD *v13;
  void *Strong;
  void *v15;
  void *v16;
  id v17;

  v1._object = (void *)0x8000000100574CE0;
  v1._countAndFlagsBits = 0x1000000000000015;
  v2._countAndFlagsBits = 0x1000000000000015;
  v2._object = (void *)0x8000000100574CE0;
  object = TTRLocalizedString(_:comment:)(v1, v2)._object;
  v4._object = (void *)0x8000000100574D00;
  v4._countAndFlagsBits = 0xD000000000000037;
  v5._countAndFlagsBits = 0xD000000000000037;
  v5._object = (void *)0x8000000100574D00;
  v6 = TTRLocalizedString(_:comment:)(v4, v5)._object;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v7, v8, 1);

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v11, 0, 0);

  objc_msgSend(v17, "addAction:", v12);
  v13 = sub_10001413C((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*v13 + 16);
  if (Strong)
  {
    v15 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v17, 1, 0);

    v16 = v15;
  }
  else
  {
    v16 = v17;
  }

}

uint64_t sub_100349DB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100349DD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100349E04()
{
  return sub_100006708(40);
}

uint64_t sub_100349E0C(uint64_t a1)
{
  uint64_t *v1;

  return sub_100335298(a1, v1[2], v1[3], v1[4]);
}

void sub_100349E18()
{
  uint64_t v0;

  sub_10033DB98(v0);
}

uint64_t sub_100349E20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100349E64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[5];
  v6 = *(_QWORD *)(v3 + 72);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 64), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 56))(v5, v4, 1, ObjectType);
}

uint64_t sub_100349EB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_100349EC8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7;
  id v9;

  if (a5 != 2)
  {
    if (a5 == 1)
    {
      v9 = result;
      swift_bridgeObjectRetain(a2);
      a2 = a3;
      a3 = a4;
    }
    else
    {
      if (a5)
        return result;
      v7 = result;
    }
  }
  swift_bridgeObjectRetain(a2);
  return (void *)swift_bridgeObjectRetain(a3);
}

uint64_t sub_100349F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMAccountsListDataView.Model(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100349FB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMAccountsListDataView.Model(0) - 8) + 80);
  return sub_100341054(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100349FE8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRAccountsListsViewModel.List.PinState - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_10034A024()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  sub_10002B328(*(void **)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_10002B318(*(void **)(v0 + 160), *(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  return swift_deallocObject(v0, 250, 7);
}

BOOL sub_10034A0B0(uint64_t a1)
{
  uint64_t v1;

  return sub_100337408(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + 32);
}

BOOL sub_10034A0C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003378D4(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

BOOL sub_10034A0D4(uint64_t a1)
{
  uint64_t v1;

  return sub_10033761C(a1, *(_QWORD *)(v1 + 16), (_OWORD *)(v1 + 24), (uint64_t)&unk_100601D48, (uint64_t)&unk_100656260);
}

BOOL sub_10034A108(uint64_t a1)
{
  uint64_t v1;

  return sub_10033761C(a1, *(_QWORD *)(v1 + 16), (_OWORD *)(v1 + 24), (uint64_t)&unk_100601D20, (uint64_t)&unk_100656250);
}

BOOL sub_10034A13C(uint64_t a1)
{
  uint64_t v1;

  return sub_100337484(a1, *(_QWORD *)(v1 + 16), (void **)(v1 + 24));
}

BOOL sub_10034A148(uint64_t a1)
{
  uint64_t v1;

  return sub_100337380(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_10034A158(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065624C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_1003377A0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10034A1D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065625C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_1003374E8(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10034A254()
{
  return sub_10034AEB8(72);
}

void sub_10034A25C()
{
  uint64_t v0;

  sub_10033257C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

unint64_t sub_10034A268()
{
  unint64_t result;

  result = qword_100656270;
  if (!qword_100656270)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRAccountsListsInteractorDeleteArguments, &type metadata for TTRAccountsListsInteractorDeleteArguments);
    atomic_store(result, (unint64_t *)&qword_100656270);
  }
  return result;
}

uint64_t sub_10034A2AC()
{
  return sub_10034AEB8(72);
}

void sub_10034A2B4()
{
  uint64_t v0;

  sub_100332878(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_10034A2C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034A2D0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10034A308()
{
  uint64_t v0;

  return sub_10033D914(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (__int128 *)(v0 + 40));
}

uint64_t sub_10034A318()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034A32C()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  sub_10002B328(*(void **)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
  sub_10002B318(*(void **)(v0 + 168), *(id *)(v0 + 176), *(_BYTE *)(v0 + 184));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  return swift_deallocObject(v0, 258, 7);
}

uint64_t sub_10034A3C0()
{
  uint64_t v0;

  return sub_10033D660(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (_OWORD *)(v0 + 40));
}

uint64_t sub_10034A3D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

Class sub_10034A3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100335A58(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

UIMenu sub_10034A3F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1003357EC(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_10034A3FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003359D8(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_10034A408()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  sub_10002B328(*(void **)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_10002B318(*(void **)(v0 + 160), *(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
  return swift_deallocObject(v0, 250, 7);
}

double sub_10034A494(uint64_t a1)
{
  uint64_t v1;

  return sub_10033CFD4(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

double sub_10034A4A8(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D524(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

double sub_10034A4B8(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D234(a1, *(_QWORD *)(v1 + 16), (_OWORD *)(v1 + 24), (uint64_t)&unk_100602108, (uint64_t)&unk_1006562A0);
}

double sub_10034A4E8(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D234(a1, *(_QWORD *)(v1 + 16), (_OWORD *)(v1 + 24), (uint64_t)&unk_1006020E0, (uint64_t)&unk_100656290);
}

uint64_t sub_10034A518()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  sub_10002B328(*(void **)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  sub_10002B318(*(void **)(v0 + 152), *(id *)(v0 + 160), *(_BYTE *)(v0 + 168));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
  return swift_deallocObject(v0, 242, 7);
}

double sub_10034A5A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D064(a1, *(_QWORD *)(v1 + 16), (void **)(v1 + 24));
}

uint64_t sub_10034A5B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065628C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10033D3B0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10034A634()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  sub_10002B328(*(void **)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
  sub_10002B318(*(void **)(v0 + 168), *(id *)(v0 + 176), *(_BYTE *)(v0 + 184));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 224));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  return swift_deallocObject(v0, 258, 7);
}

uint64_t sub_10034A6C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10065629C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_10033D0C0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

double sub_10034A744@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100330688(a1, v2, a2);
}

void sub_10034A75C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t sub_10034A79C(uint64_t a1)
{
  sub_10034A80C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(void **)(a1 + 128), *(void **)(a1 + 136), *(_OWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(void **)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  return a1;
}

void *sub_10034A80C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, void *a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (result)
  {

    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a9);
    sub_10002B328(a10, a11, a12, a13, a14, a15, a16 & 1);
    sub_10002B318(a17, a18, a19 & 1);
    swift_bridgeObjectRelease(a29);
    swift_bridgeObjectRelease(a22);
    swift_bridgeObjectRelease(a23);
    swift_bridgeObjectRelease(a24);

    return (void *)swift_bridgeObjectRelease(a27);
  }
  return result;
}

uint64_t sub_10034A930()
{
  return sub_10034A990(sub_10033CD60);
}

uint64_t sub_10034A940()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  sub_1000B5F28(*(id *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_BYTE *)(v0 + 49));
  return swift_deallocObject(v0, 50, 7);
}

uint64_t sub_10034A984()
{
  return sub_10034A990(sub_10033CBCC);
}

uint64_t sub_10034A990(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int16 *)(v1 + 48));
}

uint64_t sub_10034A9A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034A9D0()
{
  uint64_t v0;

  return sub_10033C984(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

unint64_t sub_10034A9D8()
{
  unint64_t result;

  result = qword_1006562E8[0];
  if (!qword_1006562E8[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRAccountsListsPresenterCapability.GroupCreationValidationError, &type metadata for TTRAccountsListsPresenterCapability.GroupCreationValidationError);
    atomic_store(result, qword_1006562E8);
  }
  return result;
}

uint64_t sub_10034AA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034AA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
    case 7u:
    case 9u:
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      goto LABEL_16;
    case 1u:
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v10 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists(0);
      goto LABEL_13;
    case 2u:
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
      v12 = type metadata accessor for TTRAccountsListsViewModel.SmartList(0);
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v12 + 28) + 8));
      v8 = *(_QWORD *)(v6 + *(int *)(v12 + 40) + 8);
      goto LABEL_15;
    case 3u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));

      goto LABEL_16;
    case 4u:
    case 5u:

      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 16));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 48));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 64));
      sub_10002B328(*(void **)(v6 + 72), *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_BYTE *)(v6 + 120));
      sub_10002B318(*(void **)(v6 + 128), *(id *)(v6 + 136), *(_BYTE *)(v6 + 144));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 168));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 176));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 184));

      v8 = *(_QWORD *)(v6 + 208);
      goto LABEL_15;
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + 32));

      goto LABEL_16;
    case 8u:
      sub_100076F38(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(void **)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(void **)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(void **)(v6 + 80), *(_BYTE *)(v6 + 88));
      goto LABEL_16;
    case 0xAu:
      v8 = *(_QWORD *)(v6 + 8);
      goto LABEL_15;
    case 0xBu:
      v13 = type metadata accessor for UUID(0);
      v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v0 + v4, v13);
      v15 = v6 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection(0) + 20);
      v16 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
        goto LABEL_16;
      v14(v15, v13);
      v8 = *(_QWORD *)(v15 + *(int *)(v16 + 20));
LABEL_15:
      swift_bridgeObjectRelease(v8);
LABEL_16:
      swift_release();
      return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v3 | 7);
    case 0xCu:
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v0 + v4, v17);
      v10 = type metadata accessor for TTRAccountsListsViewModel.Hashtags(0);
LABEL_13:
      v8 = *(_QWORD *)(v6 + *(int *)(v10 + 20));
      goto LABEL_15;
    case 0xDu:

      v8 = *(_QWORD *)(v6 + 16);
      goto LABEL_15;
    default:
      goto LABEL_16;
  }
}

Class sub_10034AD24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TTRAccountsListsViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10033A120(a1, v1 + v4, *(_QWORD *)v5, *(_BYTE *)(v5 + 8));
}

uint64_t sub_10034AD7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

double sub_10034ADB0(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D5F0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10034ADC4(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D584(a1, *(_QWORD *)(v1 + 16), v1 + 24, (void (*)(uint64_t))sub_100333404);
}

uint64_t sub_10034ADEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10034AE28(uint64_t a1)
{
  uint64_t v1;

  return sub_10033D584(a1, *(_QWORD *)(v1 + 16), v1 + 24, sub_100331DFC);
}

void sub_10034AE50()
{
  uint64_t v0;

  sub_100334B9C(1, (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 64));
}

uint64_t sub_10034AE64()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_10034AEA0()
{
  uint64_t v0;

  sub_100334B9C(0, (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 64));
}

uint64_t sub_10034AEB0()
{
  return sub_10034AEB8(73);
}

uint64_t sub_10034AEB8(uint64_t a1)
{
  _QWORD *v1;

  swift_release(v1[2]);
  swift_bridgeObjectRelease(v1[3]);
  swift_bridgeObjectRelease(v1[7]);
  swift_bridgeObjectRelease(v1[8]);
  return swift_deallocObject(v1, a1, 7);
}

void sub_10034AF00()
{
  uint64_t v0;

  sub_100334EB0(*(_QWORD *)(v0 + 16), v0 + 24, *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_10034AF10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034AF20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 48) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain(v9);
  }
  else
  {
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = (void *)a2[2];
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
    *(_DWORD *)(a1 + 26) = *(_DWORD *)((char *)a2 + 26);
    v12 = (_QWORD *)((a1 + 37) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 37) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = v13[1];
    v12[1] = v14;
    v15 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v16 = ((unint64_t)v13 + v6 + 16) & ~v6;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    v18 = v11;
    swift_bridgeObjectRetain(v14);
    v17(v15, v16, v4);
  }
  return a1;
}

uint64_t sub_10034B038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 26) = *(_DWORD *)(a2 + 26);
  v6 = (_QWORD *)((a1 + 37) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)((a2 + 37) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = v7[1];
  v6[1] = v8;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v6 + v11 + 16) & ~v11;
  v13 = ((unint64_t)v7 + v11 + 16) & ~v11;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain(v4);
  v15 = v5;
  swift_bridgeObjectRetain(v8);
  v14(v12, v13, v9);
  return a1;
}

uint64_t sub_10034B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a2 + 16);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v10 = v8;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  v11 = (_QWORD *)((a1 + 37) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((a2 + 37) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = v12[1];
  v14 = v11[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 24))(((unint64_t)v11 + *(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), ((unint64_t)v12 + *(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

_OWORD *sub_10034B1F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 14) = *(_OWORD *)((char *)a2 + 14);
  v4 = (_OWORD *)(((unint64_t)a1 + 37) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 37) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_10034B260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  v9 = (_QWORD *)((a1 + 37) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((a2 + 37) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = v9[1];
  v9[1] = v10[1];
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))(((unint64_t)v9 + *(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), ((unint64_t)v10 + *(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_10034B330(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 48) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 37) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10034B404 + 4 * byte_10052E848[(v9 - 1)]))();
}

void sub_10034B47C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void *destroy for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1)
{
  return sub_100075E70(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(void **)(a1 + 128), *(void **)(a1 + 136), *(_OWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(void **)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           *(_QWORD *)(a1 + 208),
           *(_WORD *)(a1 + 216));
}

uint64_t initializeWithCopy for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;

  v13 = *(void **)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(void **)(a2 + 128);
  v21 = *(void **)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_QWORD *)(a2 + 184);
  v28 = *(void **)(a2 + 192);
  v29 = *(_QWORD *)(a2 + 200);
  v30 = *(_QWORD *)(a2 + 208);
  v31 = *(_WORD *)(a2 + 216);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_100075D40(*(id *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_QWORD *)(a1 + 184) = v27;
  *(_QWORD *)(a1 + 192) = v28;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v30;
  *(_WORD *)(a1 + 216) = v31;
  return a1;
}

uint64_t assignWithCopy for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int16 v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;

  v32 = *(void **)(a2 + 72);
  v33 = *(_QWORD *)(a2 + 80);
  v34 = *(_QWORD *)(a2 + 88);
  v35 = *(_QWORD *)(a2 + 96);
  v36 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 112);
  v38 = *(_QWORD *)(a2 + 120);
  v39 = *(void **)(a2 + 128);
  v40 = *(void **)(a2 + 136);
  v41 = *(_QWORD *)(a2 + 144);
  v42 = *(_QWORD *)(a2 + 152);
  v43 = *(_QWORD *)(a2 + 160);
  v44 = *(_QWORD *)(a2 + 168);
  v45 = *(_QWORD *)(a2 + 176);
  v46 = *(_QWORD *)(a2 + 184);
  v47 = *(void **)(a2 + 192);
  v48 = *(_QWORD *)(a2 + 200);
  v49 = *(_QWORD *)(a2 + 208);
  v50 = *(_WORD *)(a2 + 216);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_100075D40(*(id *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v32;
  *(_QWORD *)(a1 + 80) = v33;
  *(_QWORD *)(a1 + 88) = v34;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v35;
  *(_QWORD *)(a1 + 104) = v36;
  *(_QWORD *)(a1 + 112) = v37;
  *(_QWORD *)(a1 + 120) = v38;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v39;
  *(_QWORD *)(a1 + 136) = v40;
  *(_QWORD *)(a1 + 144) = v41;
  *(_QWORD *)(a1 + 152) = v42;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v43;
  *(_QWORD *)(a1 + 168) = v44;
  *(_QWORD *)(a1 + 176) = v45;
  *(_QWORD *)(a1 + 184) = v46;
  v28 = *(_OWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v47;
  *(_QWORD *)(a1 + 200) = v48;
  v29 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v49;
  v30 = *(_WORD *)(a1 + 216);
  *(_WORD *)(a1 + 216) = v50;
  sub_100075E70(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((void **)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, SBYTE8(v23), (void *)v24, *((void **)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    (void *)v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  return a1;
}

__n128 initializeWithTake for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int16 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int16 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v4 = *(_QWORD *)(a2 + 208);
  v5 = *(_WORD *)(a2 + 216);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_OWORD *)(a1 + 160);
  v21 = *(_OWORD *)(a1 + 176);
  v22 = *(_OWORD *)(a1 + 192);
  v23 = *(_QWORD *)(a1 + 208);
  v24 = *(_WORD *)(a1 + 216);
  v25 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v25;
  v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v26;
  v27 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v27;
  v28 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v28;
  v29 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v29;
  v30 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v30;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = v4;
  *(_WORD *)(a1 + 216) = v5;
  sub_100075E70(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((void **)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, SBYTE8(v17), (void *)v18, *((void **)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 218))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 120) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for TTRIAccountsListsSelection.PinnedListSelection(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 216) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 218) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 112) = 0;
      *(_QWORD *)(a1 + 120) = 2 * -a2;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 202) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 218) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10034BC4C(uint64_t result, __int16 a2)
{
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(result + 144) & 0x101FF0101;
  v3 = *(_WORD *)(result + 216) & 0x101;
  *(_QWORD *)(result + 120) &= 1uLL;
  *(_QWORD *)(result + 144) = v2;
  *(_WORD *)(result + 216) = v3 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsSelection.PinnedListSelection()
{
  return &type metadata for TTRIAccountsListsSelection.PinnedListSelection;
}

uint64_t sub_10034BD28(uint64_t a1)
{
  return sub_1002DAD00(a1);
}

id TTRIGroupMembershipAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupMembershipAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIGroupMembershipAssembly()
{
  return objc_opt_self(_TtC9Reminders27TTRIGroupMembershipAssembly);
}

id TTRIGroupMembershipAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupMembershipAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id TTRListDetailCreationChangeItem.accountID.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), "objectID");
}

uint64_t TTRListDetailCreationChangeItem.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 40, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
  return v1;
}

id TTRListDetailCreationChangeItem.accountCapabilities.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), "capabilities");
}

uint64_t TTRListDetailCreationChangeItem.__allocating_init(saveRequest:account:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 81, 7);
  *(_QWORD *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 48) = 0xE000000000000000;
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_BYTE *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = objc_msgSend((id)objc_opt_self(REMList), "newObjectID");
  return v5;
}

id TTRListDetailCreationChangeItem.Storage.copy(with:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v13;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(void **)(v1 + 32);
  v6 = *(void **)(v1 + 40);
  v13 = *(id *)(v1 + 48);
  v7 = *(_BYTE *)(v1 + 56);
  v8 = type metadata accessor for TTRListDetailCreationChangeItem.Storage();
  v9 = swift_allocObject(v8, 57, 7);
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v3;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v13;
  *(_BYTE *)(v9 + 56) = v7;
  a1[3] = v8;
  *a1 = v9;
  swift_bridgeObjectRetain(v3);
  v10 = v5;
  v11 = v6;
  return v13;
}

uint64_t TTRListDetailCreationChangeItem.Storage.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t TTRListDetailCreationChangeItem.Storage.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 57, 7);
}

BOOL sub_10034C0D4(uint64_t *a1, uint64_t *a2)
{
  return _s9Reminders31TTRListDetailCreationChangeItemC7StorageC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

id TTRListDetailCreationChangeItem.saveRequest.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id TTRListDetailCreationChangeItem.account.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t TTRListDetailCreationChangeItem.storage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  swift_beginAccess(v0 + 40, v17, 0, 0);
  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess(v0 + 56, v16, 0, 0);
  v3 = *(void **)(v0 + 56);
  swift_beginAccess(v0 + 64, v15, 0, 0);
  v4 = *(void **)(v0 + 64);
  swift_beginAccess(v0 + 72, v14, 0, 0);
  v5 = *(void **)(v0 + 72);
  swift_beginAccess(v0 + 80, v13, 0, 0);
  v6 = *(_BYTE *)(v0 + 80);
  v7 = type metadata accessor for TTRListDetailCreationChangeItem.Storage();
  v8 = swift_allocObject(v7, 57, 7);
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v1;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_QWORD *)(v8 + 48) = v5;
  *(_BYTE *)(v8 + 56) = v6;
  swift_bridgeObjectRetain(v1);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  return v8;
}

id TTRListDetailCreationChangeItem.objectID.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(id *)(v0 + 32);
}

void TTRListDetailCreationChangeItem.objectID.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 32, v4, 1, 0);
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

uint64_t (*TTRListDetailCreationChangeItem.objectID.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

uint64_t TTRListDetailCreationChangeItem.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 40, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease(v5);
}

void *TTRListDetailCreationChangeItem.color.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 56, v4, 0, 0);
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void TTRListDetailCreationChangeItem.color.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 56, v4, 1, 0);
  v3 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;

}

uint64_t (*TTRListDetailCreationChangeItem.color.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 56, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void *TTRListDetailCreationChangeItem.badge.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 64, v4, 0, 0);
  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void TTRListDetailCreationChangeItem.badge.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 64, v4, 1, 0);
  v3 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = a1;

}

uint64_t (*TTRListDetailCreationChangeItem.badge.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void *TTRListDetailCreationChangeItem.filter.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 72, v4, 0, 0);
  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void TTRListDetailCreationChangeItem.filter.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 72, v4, 1, 0);
  v3 = *(void **)(v1 + 72);
  *(_QWORD *)(v1 + 72) = a1;

}

uint64_t (*TTRListDetailCreationChangeItem.filter.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 72, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

uint64_t TTRListDetailCreationChangeItem.listType.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t TTRListDetailCreationChangeItem.listType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 80, v4, 1, 0);
  *(_BYTE *)(v1 + 80) = a1;
  return result;
}

uint64_t (*TTRListDetailCreationChangeItem.listType.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 80, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

id TTRListDetailCreationChangeItem.canMakeIntoGroceriesList.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + 24), "capabilities");
  v2 = objc_msgSend(v1, "supportsGroceriesList");

  return v2;
}

uint64_t TTRListDetailCreationChangeItem.init(saveRequest:account:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0xE000000000000000;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(REMList), "newObjectID");
  return v2;
}

uint64_t type metadata accessor for TTRListDetailCreationChangeItem.Storage()
{
  return objc_opt_self(_TtCC9Reminders31TTRListDetailCreationChangeItem7Storage);
}

uint64_t TTRListDetailCreationChangeItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t TTRListDetailCreationChangeItem.__deallocating_deinit()
{
  uint64_t v0;

  TTRListDetailCreationChangeItem.deinit();
  return swift_deallocClassInstance(v0, 81, 7);
}

id sub_10034C6E4()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_10034C6F0()
{
  return TTRListDetailCreationChangeItem.storage.getter();
}

id sub_10034C714()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), "capabilities");
  v2 = objc_msgSend(v1, "supportsGroceriesList");

  return v2;
}

id TTRListDetailCreationChangeItem.sortingStyle.getter()
{
  return REMSortingStyleDefault;
}

id sub_10034C774()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 32, v3, 0, 0);
  return *(id *)(v1 + 32);
}

id sub_10034C7B0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), "objectID");
}

uint64_t sub_10034C7D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 40, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 48));
  return v2;
}

void *sub_10034C824()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 56, v5, 0, 0);
  v2 = *(void **)(v1 + 56);
  v3 = v2;
  return v2;
}

void *sub_10034C868()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 64, v5, 0, 0);
  v2 = *(void **)(v1 + 64);
  v3 = v2;
  return v2;
}

id sub_10034C8AC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), "capabilities");
}

BOOL _s9Reminders31TTRListDetailCreationChangeItemC7StorageC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  char v25;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    v11 = *(void **)(a1 + 32);
    v12 = *(void **)(a2 + 32);
    if (v11)
    {
      if (!v12)
        return 0;
      sub_100005ED8(0, &qword_100656620, REMColor_ptr);
      v13 = v12;
      v14 = v11;
      v15 = static NSObject.== infix(_:_:)(v14, v13);

      if ((v15 & 1) == 0)
        return 0;
    }
    else if (v12)
    {
      return 0;
    }
    v16 = *(void **)(a1 + 40);
    v17 = *(void **)(a2 + 40);
    if (v16)
    {
      if (!v17)
        return 0;
      sub_100005ED8(0, &qword_100656618, REMListBadge_ptr);
      v18 = v17;
      v19 = v16;
      v20 = static NSObject.== infix(_:_:)(v19, v18);

      if ((v20 & 1) == 0)
        return 0;
    }
    else if (v17)
    {
      return 0;
    }
    v21 = *(void **)(a1 + 48);
    v22 = *(void **)(a2 + 48);
    if (v21)
    {
      if (v22)
      {
        type metadata accessor for REMCustomSmartListFilterDescriptor(0);
        v23 = v22;
        v24 = v21;
        v25 = static NSObject.== infix(_:_:)(v24, v23);

        if ((v25 & 1) != 0)
          return *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56);
      }
    }
    else if (!v22)
    {
      return *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56);
    }
    return 0;
  }
  return result;
}

unint64_t sub_10034CA4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656398;
  if (!qword_100656398)
  {
    v1 = type metadata accessor for TTRListDetailCreationChangeItem.Storage();
    result = swift_getWitnessTable("19\r", v1);
    atomic_store(result, (unint64_t *)&qword_100656398);
  }
  return result;
}

uint64_t type metadata accessor for TTRListDetailCreationChangeItem()
{
  return objc_opt_self(_TtC9Reminders31TTRListDetailCreationChangeItem);
}

_QWORD *sub_10034CAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39[24];
  char v40[24];

  v1 = v0;
  v2 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - v7;
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  __chkstk_darwin(v9);
  v35 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v35 - v21;
  v23 = v1 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem;
  v24 = swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem, v40, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48))(v23, 1, v2, v24))
  {
    v25 = v1 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID, v39, 0, 0);
    sub_100042F74(v25, (uint64_t)v22);
    v27 = v36;
    v26 = v37;
  }
  else
  {
    sub_10034FB48(v23, (uint64_t)v8);
    sub_10034FB48((uint64_t)v8, (uint64_t)v5);
    if (swift_getEnumCaseMultiPayload(v5, v2) != 1)

    sub_1000CDFA4((uint64_t)v5, (uint64_t)v13);
    sub_1000CDFA4((uint64_t)v13, (uint64_t)v16);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    sub_1000CDFA4((uint64_t)v16, (uint64_t)v22);
    v27 = v36;
    v26 = v37;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v22, 0, 1, v37);
  }
  sub_100042F74((uint64_t)v22, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26) == 1)
  {
    sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_1006463C0);
LABEL_11:
    v33 = _swiftEmptyArrayStorage;
    goto LABEL_12;
  }
  v28 = v35;
  sub_1000CDFA4((uint64_t)v19, v35);
  v29 = sub_1003CE7B4(v28);
  if (!v29)
  {
    sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    goto LABEL_11;
  }
  v30 = v29;
  v31 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100521140;
  *(_QWORD *)(v32 + 32) = v30;
  v38 = (_QWORD *)v32;
  specialized Array._endMutation()(v32);
  v33 = v38;
  sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_12:
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006463C0);
  return v33;
}

uint64_t sub_10034CE0C()
{
  uint64_t v0;

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem, &qword_100657380);
  swift_release();
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID, (uint64_t *)&unk_1006463C0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10034CE6C()
{
  return type metadata accessor for TTRIRemindersBoardFocusController(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardFocusController(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100656660, (uint64_t)&nominal type descriptor for TTRIRemindersBoardFocusController);
}

void sub_10034CE88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_100005494(319, (unint64_t *)&unk_100656670, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_100005494(319, (unint64_t *)&qword_1006489F0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(uint64_t a1)
{
  return sub_100007328(a1, qword_100656778, (uint64_t)&nominal type descriptor for TTRIRemindersBoardFocusController.FocusedItem);
}

void **sub_10034CF50(void **a1, void **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void **v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(void **, uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  void *v86;
  id v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  id v102;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v9 = swift_getEnumCaseMultiPayload(a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      if (v9 == 2)
      {
        v23 = *a2;
        *a1 = *a2;
        v24 = v23;
        v25 = a1;
        v26 = v8;
        v27 = 2;
      }
      else if (v9 == 1)
      {
        v28 = *a2;
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)a1 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v51 = *v31;
              *v30 = *v31;
              v52 = v51;
              v53 = v30;
              v54 = v32;
              v55 = 1;
              goto LABEL_54;
            case 2u:
              v79 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v30, v31, v79);
              v53 = v30;
              v54 = v32;
              v55 = 2;
              goto LABEL_54;
            case 3u:
              v80 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v30, v31, v80);
              v53 = v30;
              v54 = v32;
              v55 = 3;
              goto LABEL_54;
            case 4u:
              v81 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v30, v31, v81);
              v53 = v30;
              v54 = v32;
              v55 = 4;
              goto LABEL_54;
            case 5u:
              v82 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v30, v31, v82);
              v53 = v30;
              v54 = v32;
              v55 = 5;
              goto LABEL_54;
            case 6u:
              v83 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v30, v31, v83);
              v53 = v30;
              v54 = v32;
              v55 = 6;
              goto LABEL_54;
            case 8u:
              v84 = *v31;
              *v30 = *v31;
              v85 = v84;
              v53 = v30;
              v54 = v32;
              v55 = 8;
              goto LABEL_54;
            case 9u:
              v86 = *v31;
              *v30 = *v31;
              v87 = v86;
              v53 = v30;
              v54 = v32;
              v55 = 9;
LABEL_54:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v25 = a1;
        v26 = v8;
        v27 = 1;
      }
      else
      {
        if (v9)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_58:
          v88 = a1;
          v89 = a3;
          v90 = 1;
LABEL_72:
          swift_storeEnumTagMultiPayload(v88, v89, v90);
          return a1;
        }
        v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v10))
        {
          case 1u:
            v11 = *a2;
            *a1 = *a2;
            v12 = v11;
            v13 = a1;
            v14 = v10;
            v15 = 1;
            goto LABEL_34;
          case 2u:
            v61 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
            v13 = a1;
            v14 = v10;
            v15 = 2;
            goto LABEL_34;
          case 3u:
            v62 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(a1, a2, v62);
            v13 = a1;
            v14 = v10;
            v15 = 3;
            goto LABEL_34;
          case 4u:
            v63 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
            v13 = a1;
            v14 = v10;
            v15 = 4;
            goto LABEL_34;
          case 5u:
            v64 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
            v13 = a1;
            v14 = v10;
            v15 = 5;
            goto LABEL_34;
          case 6u:
            v65 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(a1, a2, v65);
            v13 = a1;
            v14 = v10;
            v15 = 6;
            goto LABEL_34;
          case 8u:
            v66 = *a2;
            *a1 = *a2;
            v67 = v66;
            v13 = a1;
            v14 = v10;
            v15 = 8;
            goto LABEL_34;
          case 9u:
            v68 = *a2;
            *a1 = *a2;
            v69 = v68;
            v13 = a1;
            v14 = v10;
            v15 = 9;
LABEL_34:
            swift_storeEnumTagMultiPayload(v13, v14, v15);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        v25 = a1;
        v26 = v8;
        v27 = 0;
      }
      swift_storeEnumTagMultiPayload(v25, v26, v27);
      goto LABEL_58;
    }
    if (v9 == 2)
    {
      v37 = *a2;
      *a1 = *a2;
      v38 = v37;
      v39 = a1;
      v40 = v8;
      v41 = 2;
    }
    else if (v9 == 1)
    {
      v42 = *a2;
      *a1 = *a2;
      v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v44 = (void **)((char *)a1 + v43);
      v45 = (void **)((char *)a2 + v43);
      v46 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
      v49 = v42;
      if (v48(v45, 1, v46))
      {
        v50 = sub_10002A750(&qword_100644980);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v45, v46))
        {
          case 1u:
            v56 = *v45;
            *v44 = *v45;
            v57 = v56;
            v58 = v44;
            v59 = v46;
            v60 = 1;
            goto LABEL_67;
          case 2u:
            v91 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v44, v45, v91);
            v58 = v44;
            v59 = v46;
            v60 = 2;
            goto LABEL_67;
          case 3u:
            v92 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v44, v45, v92);
            v58 = v44;
            v59 = v46;
            v60 = 3;
            goto LABEL_67;
          case 4u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v44, v45, v93);
            v58 = v44;
            v59 = v46;
            v60 = 4;
            goto LABEL_67;
          case 5u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v44, v45, v94);
            v58 = v44;
            v59 = v46;
            v60 = 5;
            goto LABEL_67;
          case 6u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v44, v45, v95);
            v58 = v44;
            v59 = v46;
            v60 = 6;
            goto LABEL_67;
          case 8u:
            v96 = *v45;
            *v44 = *v45;
            v97 = v96;
            v58 = v44;
            v59 = v46;
            v60 = 8;
            goto LABEL_67;
          case 9u:
            v98 = *v45;
            *v44 = *v45;
            v99 = v98;
            v58 = v44;
            v59 = v46;
            v60 = 9;
LABEL_67:
            swift_storeEnumTagMultiPayload(v58, v59, v60);
            break;
          default:
            memcpy(v44, v45, *(_QWORD *)(v47 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v39 = a1;
      v40 = v8;
      v41 = 1;
    }
    else
    {
      if (v9)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_71:
        v100 = *(int *)(sub_10002A750(&qword_100656700) + 48);
        v101 = *(void **)((char *)a2 + v100);
        *(void **)((char *)a1 + v100) = v101;
        v102 = v101;
        v88 = a1;
        v89 = a3;
        v90 = 0;
        goto LABEL_72;
      }
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v17))
      {
        case 1u:
          v18 = *a2;
          *a1 = *a2;
          v19 = v18;
          v20 = a1;
          v21 = v17;
          v22 = 1;
          goto LABEL_44;
        case 2u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(a1, a2, v70);
          v20 = a1;
          v21 = v17;
          v22 = 2;
          goto LABEL_44;
        case 3u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(a1, a2, v71);
          v20 = a1;
          v21 = v17;
          v22 = 3;
          goto LABEL_44;
        case 4u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
          v20 = a1;
          v21 = v17;
          v22 = 4;
          goto LABEL_44;
        case 5u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(a1, a2, v73);
          v20 = a1;
          v21 = v17;
          v22 = 5;
          goto LABEL_44;
        case 6u:
          v74 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
          v20 = a1;
          v21 = v17;
          v22 = 6;
          goto LABEL_44;
        case 8u:
          v75 = *a2;
          *a1 = *a2;
          v76 = v75;
          v20 = a1;
          v21 = v17;
          v22 = 8;
          goto LABEL_44;
        case 9u:
          v77 = *a2;
          *a1 = *a2;
          v78 = v77;
          v20 = a1;
          v21 = v17;
          v22 = 9;
LABEL_44:
          swift_storeEnumTagMultiPayload(v20, v21, v22);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v39 = a1;
      v40 = v8;
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    goto LABEL_71;
  }
  v16 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v16[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_10034D848(id *a1, uint64_t a2)
{
  id *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v5 = swift_getEnumCaseMultiPayload(v2, v4);
  if (EnumCaseMultiPayload != 1)
  {
    switch(v5)
    {
      case 2:
LABEL_11:
        v9 = *v2;
LABEL_12:

        break;
      case 1:

        v11 = (id *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
        {
          switch(swift_getEnumCaseMultiPayload(v11, v12))
          {
            case 1u:
            case 8u:
            case 9u:
              v9 = *v11;
              goto LABEL_12;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              v13 = type metadata accessor for Date(0);
              (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
              break;
            default:
              goto LABEL_18;
          }
        }
        break;
      case 0:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v2, v7))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
            break;
          default:
            goto LABEL_18;
        }
        break;
    }
LABEL_18:
    v14 = *(id *)((char *)v2 + *(int *)(sub_10002A750(&qword_100656700) + 48));
    goto LABEL_22;
  }
  switch(v5)
  {
    case 2:
LABEL_21:
      v14 = *v2;
LABEL_22:

      return;
    case 1:

      v2 = (id *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v2, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v2, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_21;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_20:
            v15 = type metadata accessor for Date(0);
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v2, v15);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v2, v6))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_20;
        default:
          return;
      }
  }
}

void **sub_10034DAA8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  void *v97;
  id v98;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = swift_getEnumCaseMultiPayload(a2, v7);
  if (EnumCaseMultiPayload != 1)
  {
    if (v8 == 2)
    {
      v35 = *a2;
      *a1 = *a2;
      v36 = v35;
      v37 = a1;
      v38 = v7;
      v39 = 2;
    }
    else if (v8 == 1)
    {
      v40 = *a2;
      *a1 = *a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v42 = (void **)((char *)a1 + v41);
      v43 = (void **)((char *)a2 + v41);
      v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
      v47 = v40;
      if (v46(v43, 1, v44))
      {
        v48 = sub_10002A750(&qword_100644980);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v43, v44))
        {
          case 1u:
            v54 = *v43;
            *v42 = *v43;
            v55 = v54;
            v56 = v42;
            v57 = v44;
            v58 = 1;
            goto LABEL_65;
          case 2u:
            v87 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v42, v43, v87);
            v56 = v42;
            v57 = v44;
            v58 = 2;
            goto LABEL_65;
          case 3u:
            v88 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v42, v43, v88);
            v56 = v42;
            v57 = v44;
            v58 = 3;
            goto LABEL_65;
          case 4u:
            v89 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v42, v43, v89);
            v56 = v42;
            v57 = v44;
            v58 = 4;
            goto LABEL_65;
          case 5u:
            v90 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v42, v43, v90);
            v56 = v42;
            v57 = v44;
            v58 = 5;
            goto LABEL_65;
          case 6u:
            v91 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v42, v43, v91);
            v56 = v42;
            v57 = v44;
            v58 = 6;
            goto LABEL_65;
          case 8u:
            v92 = *v43;
            *v42 = *v43;
            v93 = v92;
            v56 = v42;
            v57 = v44;
            v58 = 8;
            goto LABEL_65;
          case 9u:
            v94 = *v43;
            *v42 = *v43;
            v95 = v94;
            v56 = v42;
            v57 = v44;
            v58 = 9;
LABEL_65:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(v42, v43, *(_QWORD *)(v45 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v37 = a1;
      v38 = v7;
      v39 = 1;
    }
    else
    {
      if (v8)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_69:
        v96 = *(int *)(sub_10002A750(&qword_100656700) + 48);
        v97 = *(void **)((char *)a2 + v96);
        *(void **)((char *)a1 + v96) = v97;
        v98 = v97;
        v68 = 0;
        goto LABEL_70;
      }
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v15))
      {
        case 1u:
          v16 = *a2;
          *a1 = *a2;
          v17 = v16;
          v18 = a1;
          v19 = v15;
          v20 = 1;
          goto LABEL_44;
        case 2u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(a1, a2, v69);
          v18 = a1;
          v19 = v15;
          v20 = 2;
          goto LABEL_44;
        case 3u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(a1, a2, v70);
          v18 = a1;
          v19 = v15;
          v20 = 3;
          goto LABEL_44;
        case 4u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(a1, a2, v71);
          v18 = a1;
          v19 = v15;
          v20 = 4;
          goto LABEL_44;
        case 5u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
          v18 = a1;
          v19 = v15;
          v20 = 5;
          goto LABEL_44;
        case 6u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(a1, a2, v73);
          v18 = a1;
          v19 = v15;
          v20 = 6;
          goto LABEL_44;
        case 8u:
          v74 = *a2;
          *a1 = *a2;
          v75 = v74;
          v18 = a1;
          v19 = v15;
          v20 = 8;
          goto LABEL_44;
        case 9u:
          v76 = *a2;
          *a1 = *a2;
          v77 = v76;
          v18 = a1;
          v19 = v15;
          v20 = 9;
LABEL_44:
          swift_storeEnumTagMultiPayload(v18, v19, v20);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v37 = a1;
      v38 = v7;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
    goto LABEL_69;
  }
  if (v8 == 2)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = v21;
    v23 = a1;
    v24 = v7;
    v25 = 2;
    goto LABEL_34;
  }
  if (v8 != 1)
  {
    if (v8)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_35:
      v68 = 1;
      goto LABEL_70;
    }
    v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v9))
    {
      case 1u:
        v10 = *a2;
        *a1 = *a2;
        v11 = v10;
        v12 = a1;
        v13 = v9;
        v14 = 1;
        goto LABEL_32;
      case 2u:
        v59 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
        v12 = a1;
        v13 = v9;
        v14 = 2;
        goto LABEL_32;
      case 3u:
        v60 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(a1, a2, v60);
        v12 = a1;
        v13 = v9;
        v14 = 3;
        goto LABEL_32;
      case 4u:
        v61 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
        v12 = a1;
        v13 = v9;
        v14 = 4;
        goto LABEL_32;
      case 5u:
        v62 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(a1, a2, v62);
        v12 = a1;
        v13 = v9;
        v14 = 5;
        goto LABEL_32;
      case 6u:
        v63 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
        v12 = a1;
        v13 = v9;
        v14 = 6;
        goto LABEL_32;
      case 8u:
        v64 = *a2;
        *a1 = *a2;
        v65 = v64;
        v12 = a1;
        v13 = v9;
        v14 = 8;
        goto LABEL_32;
      case 9u:
        v66 = *a2;
        *a1 = *a2;
        v67 = v66;
        v12 = a1;
        v13 = v9;
        v14 = 9;
LABEL_32:
        swift_storeEnumTagMultiPayload(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
    v23 = a1;
    v24 = v7;
    v25 = 0;
LABEL_34:
    swift_storeEnumTagMultiPayload(v23, v24, v25);
    goto LABEL_35;
  }
  v26 = *a2;
  *a1 = *a2;
  v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
  v28 = (void **)((char *)a1 + v27);
  v29 = (void **)((char *)a2 + v27);
  v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
  v33 = v26;
  if (v32(v29, 1, v30))
  {
    v34 = sub_10002A750(&qword_100644980);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v29, v30))
    {
      case 1u:
        v49 = *v29;
        *v28 = *v29;
        v50 = v49;
        v51 = v28;
        v52 = v30;
        v53 = 1;
        goto LABEL_54;
      case 2u:
        v78 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v28, v29, v78);
        v51 = v28;
        v52 = v30;
        v53 = 2;
        goto LABEL_54;
      case 3u:
        v79 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v28, v29, v79);
        v51 = v28;
        v52 = v30;
        v53 = 3;
        goto LABEL_54;
      case 4u:
        v80 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v28, v29, v80);
        v51 = v28;
        v52 = v30;
        v53 = 4;
        goto LABEL_54;
      case 5u:
        v81 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v28, v29, v81);
        v51 = v28;
        v52 = v30;
        v53 = 5;
        goto LABEL_54;
      case 6u:
        v82 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v28, v29, v82);
        v51 = v28;
        v52 = v30;
        v53 = 6;
        goto LABEL_54;
      case 8u:
        v83 = *v29;
        *v28 = *v29;
        v84 = v83;
        v51 = v28;
        v52 = v30;
        v53 = 8;
        goto LABEL_54;
      case 9u:
        v85 = *v29;
        *v28 = *v29;
        v86 = v85;
        v51 = v28;
        v52 = v30;
        v53 = 9;
LABEL_54:
        swift_storeEnumTagMultiPayload(v51, v52, v53);
        break;
      default:
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v68 = 1;
  swift_storeEnumTagMultiPayload(a1, v7, 1);
LABEL_70:
  swift_storeEnumTagMultiPayload(a1, a3, v68);
  return a1;
}

void **sub_10034E378(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  id v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  void *v97;
  id v98;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v8 == 2)
      {
        v21 = *a2;
        *a1 = *a2;
        v22 = v21;
        v23 = a1;
        v24 = v7;
        v25 = 2;
      }
      else
      {
        if (v8 == 1)
        {
          v26 = *a2;
          *a1 = *a2;
          v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
          v28 = (void **)((char *)a1 + v27);
          v29 = (void **)((char *)a2 + v27);
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
          v33 = v26;
          if (v32(v29, 1, v30))
          {
            v34 = sub_10002A750(&qword_100644980);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload(v29, v30))
            {
              case 1u:
                v49 = *v29;
                *v28 = *v29;
                v50 = v49;
                v51 = v28;
                v52 = v30;
                v53 = 1;
                goto LABEL_55;
              case 2u:
                v78 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v28, v29, v78);
                v51 = v28;
                v52 = v30;
                v53 = 2;
                goto LABEL_55;
              case 3u:
                v79 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v28, v29, v79);
                v51 = v28;
                v52 = v30;
                v53 = 3;
                goto LABEL_55;
              case 4u:
                v80 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v28, v29, v80);
                v51 = v28;
                v52 = v30;
                v53 = 4;
                goto LABEL_55;
              case 5u:
                v81 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v28, v29, v81);
                v51 = v28;
                v52 = v30;
                v53 = 5;
                goto LABEL_55;
              case 6u:
                v82 = type metadata accessor for Date(0);
                (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v28, v29, v82);
                v51 = v28;
                v52 = v30;
                v53 = 6;
                goto LABEL_55;
              case 8u:
                v83 = *v29;
                *v28 = *v29;
                v84 = v83;
                v51 = v28;
                v52 = v30;
                v53 = 8;
                goto LABEL_55;
              case 9u:
                v85 = *v29;
                *v28 = *v29;
                v86 = v85;
                v51 = v28;
                v52 = v30;
                v53 = 9;
LABEL_55:
                swift_storeEnumTagMultiPayload(v51, v52, v53);
                break;
              default:
                memcpy(v28, v29, *(_QWORD *)(v31 + 64));
                break;
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          v68 = 1;
          swift_storeEnumTagMultiPayload(a1, v7, 1);
          goto LABEL_71;
        }
        if (v8)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_36:
          v68 = 1;
LABEL_71:
          swift_storeEnumTagMultiPayload(a1, a3, v68);
          return a1;
        }
        v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v9))
        {
          case 1u:
            v10 = *a2;
            *a1 = *a2;
            v11 = v10;
            v12 = a1;
            v13 = v9;
            v14 = 1;
            goto LABEL_33;
          case 2u:
            v59 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
            v12 = a1;
            v13 = v9;
            v14 = 2;
            goto LABEL_33;
          case 3u:
            v60 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(a1, a2, v60);
            v12 = a1;
            v13 = v9;
            v14 = 3;
            goto LABEL_33;
          case 4u:
            v61 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
            v12 = a1;
            v13 = v9;
            v14 = 4;
            goto LABEL_33;
          case 5u:
            v62 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(a1, a2, v62);
            v12 = a1;
            v13 = v9;
            v14 = 5;
            goto LABEL_33;
          case 6u:
            v63 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
            v12 = a1;
            v13 = v9;
            v14 = 6;
            goto LABEL_33;
          case 8u:
            v64 = *a2;
            *a1 = *a2;
            v65 = v64;
            v12 = a1;
            v13 = v9;
            v14 = 8;
            goto LABEL_33;
          case 9u:
            v66 = *a2;
            *a1 = *a2;
            v67 = v66;
            v12 = a1;
            v13 = v9;
            v14 = 9;
LABEL_33:
            swift_storeEnumTagMultiPayload(v12, v13, v14);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
            break;
        }
        v23 = a1;
        v24 = v7;
        v25 = 0;
      }
      swift_storeEnumTagMultiPayload(v23, v24, v25);
      goto LABEL_36;
    }
    if (v8 == 2)
    {
      v35 = *a2;
      *a1 = *a2;
      v36 = v35;
      v37 = a1;
      v38 = v7;
      v39 = 2;
    }
    else if (v8 == 1)
    {
      v40 = *a2;
      *a1 = *a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v42 = (void **)((char *)a1 + v41);
      v43 = (void **)((char *)a2 + v41);
      v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
      v47 = v40;
      if (v46(v43, 1, v44))
      {
        v48 = sub_10002A750(&qword_100644980);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v43, v44))
        {
          case 1u:
            v54 = *v43;
            *v42 = *v43;
            v55 = v54;
            v56 = v42;
            v57 = v44;
            v58 = 1;
            goto LABEL_66;
          case 2u:
            v87 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v42, v43, v87);
            v56 = v42;
            v57 = v44;
            v58 = 2;
            goto LABEL_66;
          case 3u:
            v88 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v42, v43, v88);
            v56 = v42;
            v57 = v44;
            v58 = 3;
            goto LABEL_66;
          case 4u:
            v89 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v42, v43, v89);
            v56 = v42;
            v57 = v44;
            v58 = 4;
            goto LABEL_66;
          case 5u:
            v90 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v42, v43, v90);
            v56 = v42;
            v57 = v44;
            v58 = 5;
            goto LABEL_66;
          case 6u:
            v91 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v42, v43, v91);
            v56 = v42;
            v57 = v44;
            v58 = 6;
            goto LABEL_66;
          case 8u:
            v92 = *v43;
            *v42 = *v43;
            v93 = v92;
            v56 = v42;
            v57 = v44;
            v58 = 8;
            goto LABEL_66;
          case 9u:
            v94 = *v43;
            *v42 = *v43;
            v95 = v94;
            v56 = v42;
            v57 = v44;
            v58 = 9;
LABEL_66:
            swift_storeEnumTagMultiPayload(v56, v57, v58);
            break;
          default:
            memcpy(v42, v43, *(_QWORD *)(v45 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v37 = a1;
      v38 = v7;
      v39 = 1;
    }
    else
    {
      if (v8)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_70:
        v96 = *(int *)(sub_10002A750(&qword_100656700) + 48);
        v97 = *(void **)((char *)a2 + v96);
        *(void **)((char *)a1 + v96) = v97;
        v98 = v97;
        v68 = 0;
        goto LABEL_71;
      }
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v15))
      {
        case 1u:
          v16 = *a2;
          *a1 = *a2;
          v17 = v16;
          v18 = a1;
          v19 = v15;
          v20 = 1;
          goto LABEL_45;
        case 2u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(a1, a2, v69);
          v18 = a1;
          v19 = v15;
          v20 = 2;
          goto LABEL_45;
        case 3u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(a1, a2, v70);
          v18 = a1;
          v19 = v15;
          v20 = 3;
          goto LABEL_45;
        case 4u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(a1, a2, v71);
          v18 = a1;
          v19 = v15;
          v20 = 4;
          goto LABEL_45;
        case 5u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
          v18 = a1;
          v19 = v15;
          v20 = 5;
          goto LABEL_45;
        case 6u:
          v73 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(a1, a2, v73);
          v18 = a1;
          v19 = v15;
          v20 = 6;
          goto LABEL_45;
        case 8u:
          v74 = *a2;
          *a1 = *a2;
          v75 = v74;
          v18 = a1;
          v19 = v15;
          v20 = 8;
          goto LABEL_45;
        case 9u:
          v76 = *a2;
          *a1 = *a2;
          v77 = v76;
          v18 = a1;
          v19 = v15;
          v20 = 9;
LABEL_45:
          swift_storeEnumTagMultiPayload(v18, v19, v20);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      v37 = a1;
      v38 = v7;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
    goto LABEL_70;
  }
  return a1;
}

_QWORD *sub_10034EC60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = swift_getEnumCaseMultiPayload(a2, v7);
  if (EnumCaseMultiPayload != 1)
  {
    if (v8 == 1)
    {
      *a1 = *a2;
      v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_10002A750(&qword_100644980);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v27, v28))
        {
          case 2u:
            v35 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v26, v27, v35);
            v36 = v26;
            v37 = v28;
            v38 = 2;
            goto LABEL_48;
          case 3u:
            v55 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v26, v27, v55);
            v36 = v26;
            v37 = v28;
            v38 = 3;
            goto LABEL_48;
          case 4u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v26, v27, v56);
            v36 = v26;
            v37 = v28;
            v38 = 4;
            goto LABEL_48;
          case 5u:
            v57 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v26, v27, v57);
            v36 = v26;
            v37 = v28;
            v38 = 5;
            goto LABEL_48;
          case 6u:
            v58 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v26, v27, v58);
            v36 = v26;
            v37 = v28;
            v38 = 6;
LABEL_48:
            swift_storeEnumTagMultiPayload(v36, v37, v38);
            break;
          default:
            memcpy(v26, v27, *(_QWORD *)(v29 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v48 = a1;
      v49 = v7;
      v50 = 1;
    }
    else
    {
      if (v8)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_52:
        v59 = sub_10002A750(&qword_100656700);
        v43 = 0;
        *(_QWORD *)((char *)a1 + *(int *)(v59 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v59 + 48));
        goto LABEL_53;
      }
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v14))
      {
        case 2u:
          v15 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
          v16 = a1;
          v17 = v14;
          v18 = 2;
          goto LABEL_33;
        case 3u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(a1, a2, v44);
          v16 = a1;
          v17 = v14;
          v18 = 3;
          goto LABEL_33;
        case 4u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
          v16 = a1;
          v17 = v14;
          v18 = 4;
          goto LABEL_33;
        case 5u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(a1, a2, v46);
          v16 = a1;
          v17 = v14;
          v18 = 5;
          goto LABEL_33;
        case 6u:
          v47 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
          v16 = a1;
          v17 = v14;
          v18 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v48 = a1;
      v49 = v7;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
    goto LABEL_52;
  }
  if (v8 == 1)
  {
    *a1 = *a2;
    v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = sub_10002A750(&qword_100644980);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload(v21, v22))
      {
        case 2u:
          v31 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v20, v21, v31);
          v32 = v20;
          v33 = v22;
          v34 = 2;
          goto LABEL_40;
        case 3u:
          v51 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v20, v21, v51);
          v32 = v20;
          v33 = v22;
          v34 = 3;
          goto LABEL_40;
        case 4u:
          v52 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v20, v21, v52);
          v32 = v20;
          v33 = v22;
          v34 = 4;
          goto LABEL_40;
        case 5u:
          v53 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v20, v21, v53);
          v32 = v20;
          v33 = v22;
          v34 = 5;
          goto LABEL_40;
        case 6u:
          v54 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v20, v21, v54);
          v32 = v20;
          v33 = v22;
          v34 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v32, v33, v34);
          break;
        default:
          memcpy(v20, v21, *(_QWORD *)(v23 + 64));
          break;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v43 = 1;
    swift_storeEnumTagMultiPayload(a1, v7, 1);
  }
  else
  {
    if (v8)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v9))
      {
        case 2u:
          v10 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
          v11 = a1;
          v12 = v9;
          v13 = 2;
          goto LABEL_25;
        case 3u:
          v39 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
          v11 = a1;
          v12 = v9;
          v13 = 3;
          goto LABEL_25;
        case 4u:
          v40 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
          v11 = a1;
          v12 = v9;
          v13 = 4;
          goto LABEL_25;
        case 5u:
          v41 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(a1, a2, v41);
          v11 = a1;
          v12 = v9;
          v13 = 5;
          goto LABEL_25;
        case 6u:
          v42 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(a1, a2, v42);
          v11 = a1;
          v12 = v9;
          v13 = 6;
LABEL_25:
          swift_storeEnumTagMultiPayload(v11, v12, v13);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload(a1, v7, 0);
    }
    v43 = 1;
  }
LABEL_53:
  swift_storeEnumTagMultiPayload(a1, a3, v43);
  return a1;
}

_QWORD *sub_10034F384(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v8 = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v8 == 1)
      {
        *a1 = *a2;
        v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          v24 = sub_10002A750(&qword_100644980);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v21, v22))
          {
            case 2u:
              v31 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v20, v21, v31);
              v32 = v20;
              v33 = v22;
              v34 = 2;
              goto LABEL_41;
            case 3u:
              v51 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v20, v21, v51);
              v32 = v20;
              v33 = v22;
              v34 = 3;
              goto LABEL_41;
            case 4u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v20, v21, v52);
              v32 = v20;
              v33 = v22;
              v34 = 4;
              goto LABEL_41;
            case 5u:
              v53 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v20, v21, v53);
              v32 = v20;
              v33 = v22;
              v34 = 5;
              goto LABEL_41;
            case 6u:
              v54 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v20, v21, v54);
              v32 = v20;
              v33 = v22;
              v34 = 6;
LABEL_41:
              swift_storeEnumTagMultiPayload(v32, v33, v34);
              break;
            default:
              memcpy(v20, v21, *(_QWORD *)(v23 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v43 = 1;
        swift_storeEnumTagMultiPayload(a1, v7, 1);
      }
      else
      {
        if (v8)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        else
        {
          v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(a2, v9))
          {
            case 2u:
              v10 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
              v11 = a1;
              v12 = v9;
              v13 = 2;
              goto LABEL_26;
            case 3u:
              v39 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(a1, a2, v39);
              v11 = a1;
              v12 = v9;
              v13 = 3;
              goto LABEL_26;
            case 4u:
              v40 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
              v11 = a1;
              v12 = v9;
              v13 = 4;
              goto LABEL_26;
            case 5u:
              v41 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(a1, a2, v41);
              v11 = a1;
              v12 = v9;
              v13 = 5;
              goto LABEL_26;
            case 6u:
              v42 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(a1, a2, v42);
              v11 = a1;
              v12 = v9;
              v13 = 6;
LABEL_26:
              swift_storeEnumTagMultiPayload(v11, v12, v13);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
              break;
          }
          swift_storeEnumTagMultiPayload(a1, v7, 0);
        }
        v43 = 1;
      }
      goto LABEL_54;
    }
    if (v8 == 1)
    {
      *a1 = *a2;
      v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_10002A750(&qword_100644980);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v27, v28))
        {
          case 2u:
            v35 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v26, v27, v35);
            v36 = v26;
            v37 = v28;
            v38 = 2;
            goto LABEL_49;
          case 3u:
            v55 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v26, v27, v55);
            v36 = v26;
            v37 = v28;
            v38 = 3;
            goto LABEL_49;
          case 4u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v26, v27, v56);
            v36 = v26;
            v37 = v28;
            v38 = 4;
            goto LABEL_49;
          case 5u:
            v57 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v26, v27, v57);
            v36 = v26;
            v37 = v28;
            v38 = 5;
            goto LABEL_49;
          case 6u:
            v58 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v26, v27, v58);
            v36 = v26;
            v37 = v28;
            v38 = 6;
LABEL_49:
            swift_storeEnumTagMultiPayload(v36, v37, v38);
            break;
          default:
            memcpy(v26, v27, *(_QWORD *)(v29 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v48 = a1;
      v49 = v7;
      v50 = 1;
    }
    else
    {
      if (v8)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_53:
        v59 = sub_10002A750(&qword_100656700);
        v43 = 0;
        *(_QWORD *)((char *)a1 + *(int *)(v59 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v59 + 48));
LABEL_54:
        swift_storeEnumTagMultiPayload(a1, a3, v43);
        return a1;
      }
      v14 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v14))
      {
        case 2u:
          v15 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
          v16 = a1;
          v17 = v14;
          v18 = 2;
          goto LABEL_34;
        case 3u:
          v44 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(a1, a2, v44);
          v16 = a1;
          v17 = v14;
          v18 = 3;
          goto LABEL_34;
        case 4u:
          v45 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
          v16 = a1;
          v17 = v14;
          v18 = 4;
          goto LABEL_34;
        case 5u:
          v46 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(a1, a2, v46);
          v16 = a1;
          v17 = v14;
          v18 = 5;
          goto LABEL_34;
        case 6u:
          v47 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(a1, a2, v47);
          v16 = a1;
          v17 = v14;
          v18 = 6;
LABEL_34:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v48 = a1;
      v49 = v7;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
    goto LABEL_53;
  }
  return a1;
}

uint64_t sub_10034FAC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _QWORD v6[2];

  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v5, v4, (char *)&value witness table for Builtin.UnknownObject + 64);
    v6[0] = v5;
    v6[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v6);
    return 0;
  }
  return result;
}

uint64_t sub_10034FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034FB8C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char *v46;
  char *v47;
  void *v48;
  char *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[24];
  char v102[32];

  v95 = sub_10002A750((uint64_t *)&unk_100651D90);
  __chkstk_darwin(v95);
  v92 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
  v91 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v87 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v88 = (uint64_t)&v82 - v6;
  __chkstk_darwin(v7);
  v96 = (char *)&v82 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v82 - v10;
  v12 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v89 = (uint64_t)&v82 - v16;
  __chkstk_darwin(v17);
  v97 = (uint64_t)&v82 - v18;
  __chkstk_darwin(v19);
  v99 = (uint64_t)&v82 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v82 - v22;
  v24 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v83 = (uint64_t)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v82 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v82 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v82 - v34;
  v36 = sub_10002A750(&qword_100657380);
  v37 = __chkstk_darwin(v36);
  v100 = (uint64_t)&v82 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = objc_msgSend(a1, "nextFocusedView", v37);
  v90 = v14;
  v86 = v29;
  v85 = v11;
  v84 = v32;
  if (v39)
  {
    v40 = v39;
    v41 = sub_1003CEA74(v40);
    v43 = v42;
    v45 = v44;
    v47 = v46;

    v39 = (id)v41;
    v48 = v43;
  }
  else
  {
    v48 = 0;
    v45 = 0;
    v47 = 0;
  }
  v49 = v96;
  v93 = v39;
  v94 = v48;
  v96 = v47;
  sub_1003CE684((uint64_t)v39, v48, v45, (uint64_t)v23);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v50(v23, 1, v24) == 1)
  {
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006463C0);
    v51 = 1;
  }
  else
  {
    sub_1000CDFA4((uint64_t)v23, (uint64_t)v35);
    if (v45)
    {
      if (v96)
      {
        v52 = v100;
        sub_1000CDFA4((uint64_t)v35, v100);
        swift_storeEnumTagMultiPayload(v52, v3, 1);
      }
      else
      {
        v53 = *(int *)(sub_10002A750(&qword_100656700) + 48);
        v54 = (uint64_t)v35;
        v55 = v100;
        sub_1000CDFA4(v54, v100);
        *(_QWORD *)(v55 + v53) = v45;
        swift_storeEnumTagMultiPayload(v55, v3, 0);
        v56 = v45;
      }
      v51 = 0;
    }
    else
    {
      sub_10001F544((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v51 = 1;
    }
  }
  v57 = v91;
  v58 = (uint64_t)v92;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v100, v51, 1, v3);
  v59 = v98 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem;
  v60 = swift_beginAccess(v98 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem, v102, 0, 0);
  v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v57 + 48);
  if (v61(v59, 1, v3, v60))
  {
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v62(v99, 1, 1, v24);
  }
  else
  {
    v63 = (uint64_t)v85;
    sub_10034FB48(v59, (uint64_t)v85);
    sub_10034FB48(v63, (uint64_t)v49);
    if (swift_getEnumCaseMultiPayload(v49, v3) != 1)

    v64 = (uint64_t)v49;
    v65 = (uint64_t)v84;
    sub_1000CDFA4(v64, (uint64_t)v84);
    v66 = v65;
    v67 = v99;
    sub_1000CDFA4(v66, v99);
    sub_10001F544(v63, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v62(v67, 0, 1, v24);
  }
  v68 = 1;
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v61)(v100, 1, v3))
  {
    v69 = v88;
    sub_10034FB48(v100, v88);
    v70 = v87;
    sub_10034FB48(v69, v87);
    if (swift_getEnumCaseMultiPayload(v70, v3) != 1)

    v71 = v70;
    v72 = (uint64_t)v86;
    sub_1000CDFA4(v71, (uint64_t)v86);
    sub_1000CDFA4(v72, v97);
    sub_10001F544(v69, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    v68 = 0;
  }
  v73 = v97;
  v62(v97, v68, 1, v24);
  v74 = v58 + *(int *)(v95 + 48);
  sub_100042F74(v99, v58);
  sub_100042F74(v73, v74);
  if (v50((char *)v58, 1, v24) != 1)
  {
    v75 = v89;
    sub_100042F74(v58, v89);
    if (v50((char *)v74, 1, v24) != 1)
    {
      v76 = v83;
      sub_1000CDFA4(v74, v83);
      v77 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v75, v76);

      sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0(v73, (uint64_t *)&unk_1006463C0);
      sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1000073A0(v58, (uint64_t *)&unk_1006463C0);
      if ((v77 & 1) != 0)
        goto LABEL_28;
LABEL_29:
      v78 = (uint64_t)v90;
      sub_100350368(v99, (uint64_t)v90);
      v79 = v98 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID;
      swift_beginAccess(v98 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID, v101, 33, 0);
      sub_1003503B0(v78, v79);
      swift_endAccess(v101);
      goto LABEL_30;
    }
    sub_1000073A0(v73, (uint64_t *)&unk_1006463C0);

    sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_26:
    sub_1000073A0(v58, (uint64_t *)&unk_100651D90);
    goto LABEL_29;
  }
  sub_1000073A0(v73, (uint64_t *)&unk_1006463C0);

  if (v50((char *)v74, 1, v24) != 1)
    goto LABEL_26;
  sub_1000073A0(v58, (uint64_t *)&unk_1006463C0);
LABEL_28:
  sub_1000073A0(v99, (uint64_t *)&unk_1006463C0);
LABEL_30:
  swift_beginAccess(v59, v101, 33, 0);
  v80 = v100;
  sub_1003503F8(v100, v59);
  swift_endAccess(v101);
  return sub_1000073A0(v80, &qword_100657380);
}

uint64_t sub_100350368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003503B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006463C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003503F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100657380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100350440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  v4 = v3;
  ObjectType = swift_getObjectType(v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 192))(ObjectType, v4);
  swift_unknownObjectRelease(v2);
  return v6;
}

unint64_t sub_100350498(uint64_t a1)
{
  return sub_100350C18(a1, &qword_1006452F0, &qword_100656858, sub_1002AA394);
}

unint64_t sub_1003504B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100654248);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (id *)(a1 + 40);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = *v5;
    v9 = v6;
    result = sub_1002AA364((uint64_t)v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v3[6] + v12) = v9;
    *(_QWORD *)(v3[7] + v12) = v7;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v5 += 2;
    v3[2] = v15;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1003505B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2
    && (sub_10002A750(&qword_100654310),
        v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2),
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v5 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v6 = *((_BYTE *)v5 - 8);
      v7 = *v5;
      sub_1002AA4A4(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      *(_BYTE *)(v3[6] + v8) = v6;
      *(_QWORD *)(v3[7] + 8 * v8) = v7;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v5 += 2;
      v3[2] = v12;
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(a1);
  }
}

unint64_t sub_1003506AC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100649F28);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    result = sub_100005CF4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003507BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100654308);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = (void *)*(v5 - 1);
    v7 = *v5;
    v8 = v6;
    result = sub_1002AA5A4(v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v3[6] + v11) = v6;
    *(_QWORD *)(v3[7] + v11) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 2;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003508B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_10002A750(&qword_100656850);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10002A750(&qword_100654260);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000735C(v13, (uint64_t)v5, &qword_100656850);
    v15 = *v5;
    v16 = v5[1];
    result = sub_100005CF4(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100350A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_10002A750(&qword_100656848);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  sub_10002A750(&qword_100654250);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000735C(v13, (uint64_t)v5, &qword_100656848);
    v15 = *v5;
    result = sub_1002AA620(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100350BF0(uint64_t a1)
{
  return sub_1000097AC(a1, &qword_100656890);
}

unint64_t sub_100350BFC(uint64_t a1)
{
  return sub_100350C18(a1, &qword_100656868, &qword_100656870, sub_1002AA394);
}

unint64_t sub_100350C18(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10000735C(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_100028D38(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100656860);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *(_BYTE *)v6;
    v8 = *(v6 - 1);
    result = sub_1002AA394(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    *(_BYTE *)(v4[7] + result) = v7;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350E3C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_10064A548);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = (id)*(v5 - 2);
    swift_bridgeObjectRetain(v7);
    result = sub_1002AA364((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v8;
    v11 = (_QWORD *)(v3[7] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100350F50(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100654268);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    result = sub_100005CF4(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = (_QWORD *)(v3[7] + 16 * result);
    *v13 = v9;
    v13[1] = v8;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5 += 4;
    v3[2] = v16;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100351070(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100656898);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = *(v5 - 1);
    v8 = v6;
    result = sub_1002AA394(v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v3[6] + v11) = v7;
    *(_QWORD *)(v3[7] + v11) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100351178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002A750(&qword_100656878);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000735C(v7, (uint64_t)v16, &qword_100656880);
    result = sub_1002AA7E4((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100028D38(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003512B8(uint64_t a1)
{
  return sub_100350C18(a1, &qword_1006542C8, &qword_100656888, (uint64_t (*)(uint64_t))sub_1002AA394);
}

char *TTRListDetailPresenter.init(interactor:viewModelSource:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t v5;
  char *v6;

  v5 = *v3;
  v6 = sub_100353114(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 88) - 8) + 8))(a2);
  return v6;
}

char *TTRListDetailPresenter.deinit()
{
  char *v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 120)]);

  return v0;
}

__n128 TTRListDetailPresenter.viewModel.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;
  _OWORD v16[13];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4, v5, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v9 = (char *)v16 - v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v5, v4);
  (*(void (**)(_OWORD *__return_ptr, char *, _QWORD))(*(_QWORD *)(v3 + 104) + 16))(v16, v9, *(_QWORD *)(v3 + 88));
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  v10 = v16[11];
  *(_OWORD *)(a1 + 160) = v16[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v16[12];
  v11 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v11;
  v12 = v16[9];
  *(_OWORD *)(a1 + 128) = v16[8];
  *(_OWORD *)(a1 + 144) = v12;
  v13 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v13;
  v14 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v14;
  result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t TTRListDetailPresenter.colors.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v2, v3, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v10 - v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  v8 = (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v1 + 104) + 24))(v7, *(_QWORD *)(v1 + 88));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  return v8;
}

Swift::Void __swiftcall TTRListDetailPresenter.requestUpdateName(_:)(Swift::String a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  NSString v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t countAndFlagsBits;
  uint64_t v32;
  void *object;
  _QWORD aBlock[6];
  _BYTE v35[88];

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = *v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&countAndFlagsBits - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 96);
  v9 = *(_QWORD *)(v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v9, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&countAndFlagsBits - v12;
  (*(void (**)(uint64_t, uint64_t, double))(v8 + 24))(v9, v8, v11);
  if (qword_10063D688 != -1)
    swift_once(&qword_10063D688, sub_100352B30);
  v14 = sub_100012DC4(v4, (uint64_t)qword_1006567B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  v15 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v15, v35);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v9, AssociatedTypeWitness, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated conformance descriptor for TTRListDetailInteractorType.TTRListDetailInteractorType.ListDetailChangeItemType: TTRListDetailChangeItemType);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
  *(_QWORD *)(inited + 72) = sub_100017648();
  *(_QWORD *)(inited + 48) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Change List Name {objectID: %@}", 31, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  v21 = (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  static TTRLocalizableStrings.UndoAction.renameList.getter(v21);
  v23 = v22;
  v24 = (void *)objc_opt_self(TTRUndoManager);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v26 = (_QWORD *)swift_allocObject(&unk_100602560, 40, 7);
  v27 = countAndFlagsBits;
  v26[2] = v2;
  v26[3] = v27;
  v28 = object;
  v26[4] = object;
  v29 = swift_allocObject(&unk_100602588, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_100353410;
  *(_QWORD *)(v29 + 24) = v26;
  aBlock[4] = sub_10001B280;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1006025A0;
  v30 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(v28);
  swift_retain();
  objc_msgSend(v24, "withActionName:block:", v25, v30, swift_release().n128_f64[0]);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, AssociatedTypeWitness);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v29, "", 117, 76, 51, 1);
  swift_release();
  swift_release();
  if ((v28 & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall TTRListDetailPresenter.requestUpdateColor(index:)(Swift::Int index)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  void *v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char isEscapingClosureAtFileLocation;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];
  _BYTE v43[80];
  _BYTE v44[64];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 96);
  v40 = *(_QWORD *)(*v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v5, v40, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v38 - v7;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = TTRListDetailPresenter.colors.getter();
  if (index < 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v13;
    if (*(_QWORD *)(v13 + 16) > (unint64_t)index)
    {
      v39 = AssociatedTypeWitness;
      sub_1000AE578(v13 + 56 * index + 32, (uint64_t)v44);
      sub_1000AD9D0((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
      swift_bridgeObjectRelease(v14);
      if (qword_10063D688 == -1)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_13:
  swift_once(&qword_10063D688, sub_100352B30);
LABEL_4:
  v15 = sub_100012DC4(v9, (uint64_t)qword_1006567B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v43);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v18 = TTRListColors.Color.description.getter();
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = v19;
  v20 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Change List Badge Color {to: %@}", 32, 2, v20);
  v21 = swift_bridgeObjectRelease(v20);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v21);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v40, v5);
  v22 = (void *)(*(uint64_t (**)(_BYTE *, char *, _QWORD))(*(_QWORD *)(v4 + 104) + 32))(v44, v8, *(_QWORD *)(v4 + 88));
  v23 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v8, v39);
  if (v22)
  {
    v24 = v22;
    v25._object = (void *)0x8000000100575400;
    v26._countAndFlagsBits = 0x432065676E616843;
    v26._object = (void *)0xEC000000726F6C6FLL;
    v25._countAndFlagsBits = 0xD00000000000002FLL;
    object = TTRLocalizedString(_:comment:)(v26, v25)._object;
    v28 = (void *)objc_opt_self(TTRUndoManager);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v30 = swift_allocObject(&unk_1006025D8, 32, 7);
    *(_QWORD *)(v30 + 16) = v2;
    *(_QWORD *)(v30 + 24) = v24;
    v31 = swift_allocObject(&unk_100602600, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_10035345C;
    *(_QWORD *)(v31 + 24) = v30;
    aBlock[4] = sub_10002D4F8;
    aBlock[5] = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100602618;
    v32 = _Block_copy(aBlock);
    v33 = v24;
    swift_retain();
    swift_retain();
    objc_msgSend(v28, "withActionName:block:", v29, v32, swift_release().n128_f64[0]);

    sub_1000AD9D0((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    _Block_release(v32);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v31, "", 117, 88, 55, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  v35 = Logger.logObject.getter(v23);
  v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unable to get list color", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }
  sub_1000AD9D0((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);

}

Swift::Void __swiftcall TTRListDetailPresenter.requestUpdateBadgeEmblem(index:)(Swift::Int index)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  void *v23;
  NSString v24;
  uint64_t v25;
  void *v26;
  id v27;
  char isEscapingClosureAtFileLocation;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t aBlock[5];
  unint64_t v40;
  _BYTE v41[80];

  v3 = v1;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = index - 1;
  if (__OFSUB__(index, 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((v10 & 0x8000000000000000) != 0)
    goto LABEL_7;
  type metadata accessor for TTRListBadgeEmblem(0, v7);
  v11 = static TTRListBadgeEmblem.allBadges.getter();
  if (v10 >= *(_QWORD *)(v11 + 16))
    goto LABEL_14;
  v12 = v11;
  v2 = *(id *)(v11 + 8 * v10 + 32);
  swift_bridgeObjectRelease(v12);
  if (qword_10063D688 != -1)
LABEL_15:
    swift_once(&qword_10063D688, sub_100352B30);
  v13 = sub_100012DC4(v5, (uint64_t)qword_1006567B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v13, v5);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v41);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Change List Badge Emblem {to: %@}", 33, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v19);
  v20._object = (void *)0x8000000100575460;
  v21._countAndFlagsBits = 0x422065676E616843;
  v21._object = (void *)0xEC00000065676461;
  v20._countAndFlagsBits = 0xD00000000000002FLL;
  object = TTRLocalizedString(_:comment:)(v21, v20)._object;
  v23 = (void *)objc_opt_self(TTRUndoManager);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v25 = swift_allocObject(&unk_100602650, 32, 7);
  *(_QWORD *)(v25 + 16) = v3;
  *(_QWORD *)(v25 + 24) = v2;
  v5 = swift_allocObject(&unk_100602678, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1003534A4;
  *(_QWORD *)(v5 + 24) = v25;
  aBlock[4] = (uint64_t)sub_10002D4F8;
  v40 = v5;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10001B258;
  aBlock[3] = (uint64_t)&unk_100602690;
  v26 = _Block_copy(aBlock);
  v10 = v40;
  v27 = v2;
  swift_retain();
  swift_retain();
  objc_msgSend(v23, "withActionName:block:", v24, v26, swift_release().n128_f64[0]);

  _Block_release(v26);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 117, 108, 51, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return;
  __break(1u);
LABEL_7:
  if (qword_10063D688 != -1)
    swift_once(&qword_10063D688, sub_100352B30);
  v29 = sub_100012DC4(v5, (uint64_t)qword_1006567B0);
  v37 = Logger.logObject.getter(v29);
  v30 = static os_log_type_t.fault.getter(v37);
  if (os_log_type_enabled(v37, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v38 = v10;
    aBlock[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_10017EEF0();
    v34 = BinaryInteger.description.getter(&type metadata for Int, v33);
    v36 = v35;
    v38 = sub_100027E40(v34, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, aBlock, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v37, v30, "Failed to update badge emblem because emblemIndex should not be less than 0 {emblemIndex: %s}", v31, 0xCu);
    swift_arrayDestroy(v32, 1, &type metadata for Any[8]);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

  }
}

Swift::Void __swiftcall TTRListDetailPresenter.requestUpdateBadgeEmoji(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  __n128 v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  void *v17;
  NSString v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v24[80];

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D688 != -1)
    swift_once(&qword_10063D688, sub_100352B30);
  v9 = sub_100012DC4(v5, (uint64_t)qword_1006567B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v10, v24);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = countAndFlagsBits;
  *(_QWORD *)(inited + 56) = object;
  swift_bridgeObjectRetain(object);
  v12 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Change List Badge Emoji {to: %@}", 32, 2, v12);
  v13 = swift_bridgeObjectRelease(v12);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v13);
  v14._object = (void *)0x80000001005754C0;
  v15._countAndFlagsBits = 0x452065676E616843;
  v15._object = (void *)0xEC000000696A6F6DLL;
  v14._countAndFlagsBits = 0xD00000000000002FLL;
  v16 = TTRLocalizedString(_:comment:)(v15, v14)._object;
  v17 = (void *)objc_opt_self(TTRUndoManager);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v19 = (_QWORD *)swift_allocObject(&unk_1006026C8, 40, 7);
  v19[2] = v2;
  v19[3] = countAndFlagsBits;
  v19[4] = object;
  v20 = swift_allocObject(&unk_1006026F0, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1003534EC;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_10002D4F8;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100602708;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(object);
  swift_retain();
  swift_retain();
  objc_msgSend(v17, "withActionName:block:", v18, v21, swift_release().n128_f64[0]);

  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 117, 117, 51, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void TTRListDetailPresenter.requestUpdateListType(_:)(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  void *v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char isEscapingClosureAtFileLocation;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  _QWORD aBlock[6];
  _BYTE v34[80];

  v2 = v1;
  v31 = a1;
  v3 = *v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v3 + 96);
  v9 = *(_QWORD *)(v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, v9, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = &v30[-v12];
  (*(void (**)(uint64_t, uint64_t, double))(v8 + 24))(v9, v8, v11);
  if (qword_10063D688 != -1)
    swift_once(&qword_10063D688, sub_100352B30);
  v14 = sub_100012DC4(v4, (uint64_t)qword_1006567B0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  v15 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v15, v34);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v9, AssociatedTypeWitness, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated conformance descriptor for TTRListDetailInteractorType.TTRListDetailInteractorType.ListDetailChangeItemType: TTRListDetailChangeItemType);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
  *(_QWORD *)(inited + 72) = sub_100017648();
  *(_QWORD *)(inited + 48) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Change List Type {objectID: %@}", 31, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  v21._countAndFlagsBits = 0xD000000000000033;
  v22._object = (void *)0x8000000100575510;
  v21._object = (void *)0x8000000100575530;
  v22._countAndFlagsBits = 0xD000000000000010;
  object = TTRLocalizedString(_:comment:)(v22, v21)._object;
  v24 = (void *)objc_opt_self(TTRUndoManager);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v26 = swift_allocObject(&unk_100602740, 25, 7);
  *(_QWORD *)(v26 + 16) = v2;
  *(_BYTE *)(v26 + 24) = v31;
  v27 = swift_allocObject(&unk_100602768, 32, 7);
  *(_QWORD *)(v27 + 16) = sub_100353558;
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = sub_10002D4F8;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100602780;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v24, "withActionName:block:", v25, v28, swift_release().n128_f64[0]);
  _Block_release(v28);

  (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v13, AssociatedTypeWitness);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v27, "", 117, 127, 51, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

Swift::Bool __swiftcall TTRListDetailPresenter.shouldPresentConfirmationAlertForRemovingExistingSections()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v9)(char *, uint64_t);
  char v10;
  uint64_t AssociatedConformanceWitness;
  _QWORD v14[23];
  char v15;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v2, v3, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v14[-1] - v6;
  if (*(_BYTE *)(v0 + v1[17]) == 1)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
    v8(v3, v2);
    (*(void (**)(_QWORD *__return_ptr, char *, _QWORD))(v1[13] + 16))(v14, v7, v1[11]);
    v9 = *(void (**)(char *, uint64_t))(v5 + 8);
    v9(v7, AssociatedTypeWitness);
    if (!v15)
    {
      v8(v3, v2);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v3, AssociatedTypeWitness, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated conformance descriptor for TTRListDetailInteractorType.TTRListDetailInteractorType.ListDetailChangeItemType: TTRListDetailChangeItemType);
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness, AssociatedConformanceWitness);
      sub_1000905E0((uint64_t)v14);
      v9(v7, AssociatedTypeWitness);
      return v10 & 1;
    }
    sub_1000905E0((uint64_t)v14);
  }
  v10 = 0;
  return v10 & 1;
}

Swift::Void __swiftcall TTRListDetailPresenter.removeExistingSections()()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  void *v4;
  NSString v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v1._object = (void *)0x8000000100575570;
  v2._countAndFlagsBits = 0x732065766F6D6552;
  v2._object = (void *)0xEF736E6F69746365;
  v1._countAndFlagsBits = 0xD00000000000006FLL;
  object = TTRLocalizedString(_:comment:)(v2, v1)._object;
  v4 = (void *)objc_opt_self(TTRUndoManager);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v6 = swift_allocObject(&unk_1006027B8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1003535A4;
  *(_QWORD *)(v6 + 24) = v0;
  v8[4] = sub_10002D4F8;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10001B258;
  v8[3] = &unk_1006027D0;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  objc_msgSend(v4, "withActionName:block:", v5, v7, swift_release().n128_f64[0]);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v6, "", 117, 148, 51, 1);
  swift_release();
  swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
}

id TTRListDetailPresenter.undoManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_100352B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006567B0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006567B0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t TTRListDetailAppearanceBadge.name.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain(a3);
  return a2;
}

void *TTRListDetailAppearanceBadge.emblem.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = a4;
  return a4;
}

char *TTRListDetailPresenter.__allocating_init(interactor:viewModelSource:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v8;

  v4 = v3;
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v8 = sub_100353114(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 88) - 8) + 8))(a2);
  return v8;
}

BOOL sub_100352C8C(char *a1, char *a2)
{
  return static TTRListDetailSavedObjectID.ObjectType.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100352C98()
{
  unsigned __int8 *v0;

  return TTRListDetailSavedObjectID.ObjectType.hashValue.getter(*v0);
}

void sub_100352CA0(uint64_t a1)
{
  unsigned __int8 *v1;

  TTRListDetailSavedObjectID.ObjectType.hash(into:)(a1, *v1);
}

Swift::Int sub_100352CA8(uint64_t a1)
{
  unsigned __int8 *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  TTRListDetailSavedObjectID.ObjectType.hash(into:)((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

uint64_t TTRListDetailPresenter.interactor.getter()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t TTRListDetailPresenter.viewModelSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
}

uint64_t TTRListDetailPresenter.__deallocating_deinit()
{
  uint64_t v0;

  TTRListDetailPresenter.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

__n128 sub_100352D30@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  _OWORD v8[13];

  TTRListDetailPresenter.viewModel.getter((uint64_t)v8);
  v2 = v8[11];
  *(_OWORD *)(a1 + 160) = v8[10];
  *(_OWORD *)(a1 + 176) = v2;
  *(_OWORD *)(a1 + 192) = v8[12];
  v3 = v8[7];
  *(_OWORD *)(a1 + 96) = v8[6];
  *(_OWORD *)(a1 + 112) = v3;
  v4 = v8[9];
  *(_OWORD *)(a1 + 128) = v8[8];
  *(_OWORD *)(a1 + 144) = v4;
  v5 = v8[3];
  *(_OWORD *)(a1 + 32) = v8[2];
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v8[5];
  *(_OWORD *)(a1 + 64) = v8[4];
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)v8[1];
  *(_OWORD *)a1 = v8[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100352DAC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_1006568A0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

unint64_t sub_100352EF8(_QWORD *a1)
{
  return sub_100352FF4(a1, &qword_1006542B8, sub_1002AA398);
}

unint64_t sub_100352F0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10002A750(&qword_100640EC0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_1002AA3B8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100352FE0(_QWORD *a1)
{
  return sub_100352FF4(a1, &qword_100654290, sub_1002AA398);
}

unint64_t sub_100352FF4(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = a1[2];
  if (!v3)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10002A750(a2);
  v6 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v3);
  v8 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  result = a3(v8);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v8);
    swift_bridgeObjectRetain(v7);
    return (unint64_t)v6;
  }
  v12 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v6[6] + 8 * result) = v8;
    v13 = (_QWORD *)(v6[7] + 16 * result);
    *v13 = v7;
    v13[1] = v9;
    v14 = v6[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      break;
    v6[2] = v16;
    if (!--v3)
      goto LABEL_8;
    v17 = v12 + 3;
    v18 = *(v12 - 2);
    v19 = *(v12 - 1);
    v9 = *v12;
    swift_retain(v8);
    swift_bridgeObjectRetain(v7);
    result = a3(v18);
    v12 = v17;
    v7 = v19;
    v8 = v18;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

char *sub_100353114(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  _QWORD v21[23];
  char v22;

  v4 = v3;
  v18 = a2;
  v8 = *(_QWORD **)v4;
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 96);
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for TTRListDetailInteractorType, &associated type descriptor for TTRListDetailInteractorType.ListDetailChangeItemType);
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)&v18 - v12;
  *((_QWORD *)v4 + 2) = a1;
  v14 = v8[11];
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(v14 - 8) + 16))(&v4[v8[15]], a2, v14, v11);
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 128)] = a3;
  v15 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
  swift_unknownObjectRetain(a1);
  v16 = a3;
  v15(v10, v9);
  (*(void (**)(_QWORD *__return_ptr, char *, uint64_t))(v8[13] + 16))(v21, v13, v14);
  swift_unknownObjectRelease(a1);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, AssociatedTypeWitness);
  sub_1000905E0((uint64_t)v21);
  v4[*(_QWORD *)(*(_QWORD *)v4 + 136)] = v22;
  return v4;
}

_QWORD *_s9Reminders22TTRListDetailPresenterC6badgesSayAA0bC15AppearanceBadgeVGvg_0(double a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __n128 v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;

  type metadata accessor for TTRListBadgeEmblem(0, a1);
  v1 = static TTRListBadgeEmblem.allBadges.getter();
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    sub_1003D83B0(0, v3, 0);
    v4 = 0;
    do
    {
      v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = REMListBadgeEmblem.image.getter(v5);
      v7 = REMListBadgeEmblem.name.getter(v5);
      v9 = v8;
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        sub_1003D83B0(v10 > 1, v11 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[4 * v11];
      v12[4] = v6;
      v12[5] = v7;
      v12[6] = v9;
      v12[7] = v5;
    }
    while (v3 != v4);
    v13 = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v13 = swift_bridgeObjectRelease(v1);
  }
  v14 = *(id *)TTRCommonAsset.Image.emojiIcon.unsafeMutableAddressor(v13);
  v15._object = (void *)0x80000001005757E0;
  v16._countAndFlagsBits = 0x696A6F6D45;
  v16._object = (void *)0xE500000000000000;
  v15._countAndFlagsBits = 0xD000000000000014;
  v17 = TTRLocalizedString(_:comment:)(v16, v15);
  sub_1004394A8(0, 0, (uint64_t)v14, v17._countAndFlagsBits, (uint64_t)v17._object, 0);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100353410()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 96) + 48))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 80));
}

uint64_t sub_100353448()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035345C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 96) + 56))(*(_QWORD *)(v0 + 24), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 80));
}

uint64_t sub_100353490()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003534A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 96) + 64))(*(_QWORD *)(v0 + 24), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 80));
}

uint64_t sub_1003534D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003534EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 96) + 72))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 80));
}

uint64_t sub_100353524()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100353534()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100353558()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(**(_QWORD **)(v0 + 16) + 96) + 88))(*(unsigned __int8 *)(v0 + 24), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 80));
}

uint64_t sub_100353594()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003535A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 96) + 96))(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_1003535D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void destroy for TTRListDetailAppearanceBadge(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *initializeWithCopy for TTRListDetailAppearanceBadge(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for TTRListDetailAppearanceBadge(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v11 = v10;

  return a1;
}

uint64_t assignWithTake for TTRListDetailAppearanceBadge(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TTRListDetailAppearanceBadge()
{
  return &type metadata for TTRListDetailAppearanceBadge;
}

uint64_t sub_100353734(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 88));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = &unk_10052EF00;
    result = swift_initClassMetadata2(a1, 0, 4, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TTRListDetailPresenter(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for TTRListDetailPresenter);
}

uint64_t sub_1003537D4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100353820 + 4 * byte_10052EE65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100353854 + 4 * asc_10052EE60[v4]))();
}

uint64_t sub_100353854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035385C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100353864);
  return result;
}

uint64_t sub_100353870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100353878);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10035387C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100353884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for TTRListDetailPresenter.ConvertGroceryListToRegularListConfirmationAlertResponse(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for TTRListDetailPresenter.ConvertGroceryListToRegularListConfirmationAlertResponse);
}

uint64_t sub_10035389C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_10052EFB0, a1);
}

uint64_t sub_1003538CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100656938);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100656938);
  if (qword_10063D630 != -1)
    swift_once(&qword_10063D630, sub_1002EBB50);
  v2 = sub_100012DC4(v0, (uint64_t)qword_1006737E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10035395C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  char v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, uint64_t *, uint64_t);
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void (***v39)(char *, uint64_t *, uint64_t);
  void (**v40)(char *, uint64_t *, uint64_t);
  uint64_t v41;
  char *v42;
  int v43;
  char *v44;
  uint64_t v45;
  void (**v46)(char *, uint64_t *, uint64_t);
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void (*v52)(char *, uint64_t);
  char v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  void (**v65)(char *, uint64_t *, uint64_t);
  void *v66;
  uint64_t v67;
  void (**v68)(char *, uint64_t *, uint64_t);
  uint64_t v69;
  NSObject *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  void (***v74)(char *, uint64_t *, uint64_t);
  void (**v75)(char *, uint64_t *, uint64_t);
  uint64_t v76;
  void (***v77)(char *, uint64_t *, uint64_t);
  id v78;
  void *v79;
  void *v80;
  id v81;
  void (**v82)(char *, uint64_t *, uint64_t);
  void *v83;
  uint64_t v84;
  void (**v85)(char *, uint64_t *, uint64_t);
  uint64_t v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  void (**v96)(char *, uint64_t *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void *v100;
  void (*v102)(void);
  id v103;
  void (*v104)(void);
  id v105;
  uint64_t v106;
  uint64_t v107;
  os_log_type_t v108;
  uint8_t *v109;
  void (**v110)(char *, uint64_t *, uint64_t);
  void (**v111)(char *, uint64_t *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  void (**v119)(char *, uint64_t *, uint64_t);
  id v120;
  id v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  void (*v125)(void);
  id v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  const char *v132;
  void (**v133)(char *, uint64_t *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  void (**v141)(char *, uint64_t *, uint64_t);
  id v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  void (*v146)(void);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t (*v155)(char *, _QWORD, uint64_t);
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  void (**v161)(char *, uint64_t *, uint64_t);
  char *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  void (**v167)(char *, uint64_t *, uint64_t);
  uint64_t v168;

  v158 = type metadata accessor for REMNotificationIdentifier(0);
  v161 = *(void (***)(char *, uint64_t *, uint64_t))(v158 - 8);
  v2 = __chkstk_darwin(v158);
  v156 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v157 = (char *)&v154 - v5;
  __chkstk_darwin(v4);
  v160 = (char *)&v154 - v6;
  v7 = sub_10002A750(&qword_100656950);
  __chkstk_darwin(v7);
  v9 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RDUserNotificationType(0);
  v163 = *(_QWORD *)(v10 - 8);
  v164 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v154 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v162 = (char *)&v154 - v14;
  v15 = type metadata accessor for RDUserNotificationAction(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v154 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v154 - v20;
  v165 = objc_msgSend(a1, "notification");
  v22 = objc_msgSend(a1, "actionIdentifier");
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(UNNotificationDefaultActionIdentifier);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
    goto LABEL_3;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
  {
LABEL_5:
    swift_bridgeObjectRelease(v25);
    goto LABEL_6;
  }
  v155 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v48 = v155(v21, enum case for RDUserNotificationAction.viewAssignmentInList(_:), v15);
  v49 = RDUserNotificationAction.rawValue.getter(v48);
  v51 = v50;
  v52 = *(void (**)(char *, uint64_t))(v16 + 8);
  v52(v21, v15);
  if (v23 == v49 && v25 == v51)
    goto LABEL_3;
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v49, v51, 0);
  swift_bridgeObjectRelease(v51);
  if ((v53 & 1) != 0)
    goto LABEL_5;
  v54 = v155(v19, enum case for RDUserNotificationAction.declineAssignment(_:), v15);
  v55 = RDUserNotificationAction.rawValue.getter(v54);
  v57 = v56;
  v52(v19, v15);
  if (v23 == v55 && v25 == v57)
  {
LABEL_3:
    swift_bridgeObjectRelease_n(v25, 2);
LABEL_6:
    v30 = v165;
    goto LABEL_7;
  }
  v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v55, v57, 0);
  swift_bridgeObjectRelease(v57);
  v30 = v165;
  if ((v58 & 1) == 0)
  {
    if (qword_10063D690 == -1)
    {
LABEL_55:
      v106 = type metadata accessor for Logger(0);
      sub_100012DC4(v106, (uint64_t)qword_100656938);
      v107 = swift_bridgeObjectRetain(v25);
      v36 = Logger.logObject.getter(v107);
      v108 = static os_log_type_t.fault.getter(v36);
      if (!os_log_type_enabled(v36, v108))
      {

        swift_bridgeObjectRelease_n(v25, 2);
        goto LABEL_13;
      }
      v109 = (uint8_t *)swift_slowAlloc(12, -1);
      v110 = (void (**)(char *, uint64_t *, uint64_t))swift_slowAlloc(32, -1);
      v167 = v110;
      *(_DWORD *)v109 = 136315138;
      swift_bridgeObjectRetain(v25);
      v166 = sub_100027E40(v23, (unint64_t)v25, (uint64_t *)&v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v109 + 4, v109 + 12);
      swift_bridgeObjectRelease_n(v25, 3);
      _os_log_impl((void *)&_mh_execute_header, v36, v108, "App should not receive non-default or 'fall-through-as-default' actions. remindd is not configured properly. {actionIdentifier: %s", v109, 0xCu);
      swift_arrayDestroy(v110, 1, &type metadata for Any[8]);
      swift_slowDealloc(v110, -1, -1);
      swift_slowDealloc(v109, -1, -1);
LABEL_12:

LABEL_13:
      return;
    }
LABEL_106:
    swift_once(&qword_10063D690, sub_1003538CC);
    goto LABEL_55;
  }
  swift_bridgeObjectRelease(v25);
LABEL_7:
  v31 = objc_msgSend(v30, "request");
  v32 = objc_msgSend(v31, "content");

  v25 = v32;
  RDUserNotificationType.init(notificationContent:)();
  v33 = v163;
  v23 = v164;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v9, 1, v164) != 1)
  {
    v42 = v162;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v162, v9, v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(v13, v42, v23);
    v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v33 + 88))(v13, v23);
    v45 = v159;
    v44 = v160;
    v46 = v161;
    if (v43 != enum case for RDUserNotificationType.reminderAlarm(_:)
      && v43 != enum case for RDUserNotificationType.todayNotificationForSingleReminder(_:))
    {
      if (v43 == enum case for RDUserNotificationType.caldavSharedList(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v33 + 96))(v13, v23);
        v47 = (void *)*v13;
        (*(void (**)(uint64_t))(v45 + 24))(*v13);

LABEL_79:
        goto LABEL_80;
      }
      if (v43 == enum case for RDUserNotificationType.assignmentNotification(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v33 + 96))(v13, v23);
        v59 = *v13;
        if ((unint64_t)*v13 >> 62)
        {
          if (v59 < 0)
            v147 = *v13;
          else
            v147 = v59 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v13);
          v60 = _CocoaArrayWrapper.endIndex.getter(v147);
          swift_bridgeObjectRelease(v59);
          if (v60)
            goto LABEL_29;
        }
        else
        {
          v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v60)
          {
LABEL_29:
            if ((v59 & 0xC000000000000001) != 0)
            {
              v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v59);
              goto LABEL_32;
            }
            if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v61 = *(id *)(v59 + 32);
LABEL_32:
              v62 = v61;
              swift_bridgeObjectRelease(v59);
              v63 = *(void **)v45;
              v167 = 0;
              v64 = objc_msgSend(v63, "fetchReminderWithObjectID:error:", v62, &v167);
              v65 = v167;
              if (v64)
              {
                v66 = v64;
                v67 = qword_10063D690;
                v68 = v167;
                if (v67 != -1)
                  swift_once(&qword_10063D690, sub_1003538CC);
                v69 = type metadata accessor for Logger(0);
                sub_100012DC4(v69, (uint64_t)qword_100656938);
                v70 = v66;
                v71 = Logger.logObject.getter(v70);
                v72 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v71, v72))
                {
                  v73 = (uint8_t *)swift_slowAlloc(12, -1);
                  v74 = (void (***)(char *, uint64_t *, uint64_t))swift_slowAlloc(8, -1);
                  *(_DWORD *)v73 = 138412290;
                  v75 = (void (**)(char *, uint64_t *, uint64_t))-[NSObject objectID](v70, "objectID");
                  v167 = v75;
                  v33 = v163;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v73 + 4, v73 + 12);
                  *v74 = v75;
                  v30 = v165;

                  _os_log_impl((void *)&_mh_execute_header, v71, v72, "REMAssignment: assignmentNotification navigateToReminderBy {reminderID: %@}.", v73, 0xCu);
                  v76 = sub_10002A750(&qword_100642D60);
                  swift_arrayDestroy(v74, 1, v76);
                  v77 = v74;
                  v23 = v164;
                  swift_slowDealloc(v77, -1, -1);
                  swift_slowDealloc(v73, -1, -1);
                }
                else
                {

                  v71 = v70;
                }

                v125 = *(void (**)(void))(v159 + 8);
                v126 = -[NSObject objectID](v70, "objectID");
                v125();

LABEL_78:
                goto LABEL_79;
              }
              v111 = v167;
              v112 = _convertNSErrorToError(_:)(v65);

              swift_willThrow(v113);
              if (qword_10063D690 != -1)
                swift_once(&qword_10063D690, sub_1003538CC);
              v114 = type metadata accessor for Logger(0);
              sub_100012DC4(v114, (uint64_t)qword_100656938);
              v115 = v62;
              v116 = Logger.logObject.getter(v115);
              v117 = static os_log_type_t.error.getter();
              if (!os_log_type_enabled(v116, v117))
              {

                swift_errorRelease(v112);
LABEL_80:
                (*(void (**)(char *, uint64_t))(v33 + 8))(v162, v23);
                return;
              }
              v161 = (void (**)(char *, uint64_t *, uint64_t))v112;
              v118 = (uint8_t *)swift_slowAlloc(12, -1);
              v119 = (void (**)(char *, uint64_t *, uint64_t))swift_slowAlloc(32, -1);
              v167 = v119;
              *(_DWORD *)v118 = 136315138;
              v160 = (char *)(v118 + 4);
              v120 = v115;
              v121 = objc_msgSend(v120, "description");
              v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
              v124 = v123;

              v166 = sub_100027E40(v122, v124, (uint64_t *)&v167);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v160, v118 + 12);

              swift_bridgeObjectRelease(v124);
              _os_log_impl((void *)&_mh_execute_header, v116, v117, "Cannot look up reminder by assignmentNotification.reminderIDs.first {reminderID: %s}", v118, 0xCu);
              swift_arrayDestroy(v119, 1, &type metadata for Any[8]);
              swift_slowDealloc(v119, -1, -1);
              swift_slowDealloc(v118, -1, -1);

              swift_errorRelease(v161);
              goto LABEL_50;
            }
            __break(1u);
            goto LABEL_94;
          }
        }
        swift_bridgeObjectRelease(v59);
        if (qword_10063D690 != -1)
          swift_once(&qword_10063D690, sub_1003538CC);
        v148 = type metadata accessor for Logger(0);
        v149 = sub_100012DC4(v148, (uint64_t)qword_100656938);
        v129 = Logger.logObject.getter(v149);
        v130 = static os_log_type_t.fault.getter(v129);
        if (!os_log_type_enabled(v129, v130))
          goto LABEL_103;
        v131 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v131 = 0;
        v132 = "Received assignment notification response but this notification has no reminderID.";
LABEL_102:
        _os_log_impl((void *)&_mh_execute_header, v129, v130, v132, v131, 2u);
        swift_slowDealloc(v131, -1, -1);
        goto LABEL_103;
      }
      if (v43 == enum case for RDUserNotificationType.sharedListAddedReminderNotification(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v33 + 96))(v13, v23);
        v60 = *v13;
        if (!((unint64_t)*v13 >> 62))
        {
          if (!*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_98:
            swift_bridgeObjectRelease(v60);
            if (qword_10063D690 != -1)
              swift_once(&qword_10063D690, sub_1003538CC);
            v152 = type metadata accessor for Logger(0);
            v153 = sub_100012DC4(v152, (uint64_t)qword_100656938);
            v129 = Logger.logObject.getter(v153);
            v130 = static os_log_type_t.fault.getter(v129);
            if (!os_log_type_enabled(v129, v130))
              goto LABEL_103;
            v131 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v131 = 0;
            v132 = "REMSharedEntitySyncActivity: Received shared list update notification response by this notification h"
                   "as no reminderID.";
            goto LABEL_102;
          }
          goto LABEL_40;
        }
LABEL_94:
        if (v60 < 0)
          v150 = v60;
        else
          v150 = v60 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v60);
        v151 = _CocoaArrayWrapper.endIndex.getter(v150);
        swift_bridgeObjectRelease(v60);
        if (!v151)
          goto LABEL_98;
LABEL_40:
        if ((v60 & 0xC000000000000001) != 0)
        {
          v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v60);
          goto LABEL_43;
        }
        if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v78 = *(id *)(v60 + 32);
LABEL_43:
          v79 = v78;
          swift_bridgeObjectRelease(v60);
          v80 = *(void **)v45;
          v167 = 0;
          v81 = objc_msgSend(v80, "fetchReminderWithObjectID:error:", v79, &v167);
          v82 = v167;
          if (v81)
          {
            v83 = v81;
            v84 = qword_10063D690;
            v85 = v167;
            if (v84 != -1)
              swift_once(&qword_10063D690, sub_1003538CC);
            v86 = type metadata accessor for Logger(0);
            sub_100012DC4(v86, (uint64_t)qword_100656938);
            v87 = v79;
            v88 = Logger.logObject.getter(v87);
            v89 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v88, v89))
            {
              v90 = (uint8_t *)swift_slowAlloc(12, -1);
              v161 = (void (**)(char *, uint64_t *, uint64_t))swift_slowAlloc(32, -1);
              v167 = v161;
              *(_DWORD *)v90 = 136315138;
              v160 = (char *)(v90 + 4);
              v91 = objc_msgSend(v87, "description");
              v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
              v94 = v93;

              v30 = v165;
              v166 = sub_100027E40(v92, v94, (uint64_t *)&v167);
              v33 = v163;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v160, v90 + 12);

              v95 = v94;
              v23 = v164;
              swift_bridgeObjectRelease(v95);
              _os_log_impl((void *)&_mh_execute_header, v88, v89, "REMSharedEntitySyncActivity: sharedListUpdateNotification.reminderIDs.first {reminderID: %s}", v90, 0xCu);
              v96 = v161;
              swift_arrayDestroy(v161, 1, &type metadata for Any[8]);
              swift_slowDealloc(v96, -1, -1);
              swift_slowDealloc(v90, -1, -1);

            }
            else
            {

            }
            v146 = *(void (**)(void))(v159 + 8);
            v126 = objc_msgSend(v83, "objectID");
            v146();

            goto LABEL_78;
          }
          v133 = v167;
          v134 = _convertNSErrorToError(_:)(v82);

          swift_willThrow(v135);
          if (qword_10063D690 != -1)
            swift_once(&qword_10063D690, sub_1003538CC);
          v136 = type metadata accessor for Logger(0);
          sub_100012DC4(v136, (uint64_t)qword_100656938);
          v137 = v79;
          v138 = Logger.logObject.getter(v137);
          v139 = static os_log_type_t.fault.getter(v138);
          if (!os_log_type_enabled(v138, v139))
          {

            swift_errorRelease(v134);
            goto LABEL_80;
          }
          v161 = (void (**)(char *, uint64_t *, uint64_t))v134;
          v140 = (uint8_t *)swift_slowAlloc(12, -1);
          v141 = (void (**)(char *, uint64_t *, uint64_t))swift_slowAlloc(32, -1);
          v167 = v141;
          *(_DWORD *)v140 = 136315138;
          v160 = (char *)(v140 + 4);
          v142 = objc_msgSend(v137, "description");
          v143 = static String._unconditionallyBridgeFromObjectiveC(_:)(v142);
          v145 = v144;

          v166 = sub_100027E40(v143, v145, (uint64_t *)&v167);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v160, v140 + 12);

          swift_bridgeObjectRelease(v145);
          _os_log_impl((void *)&_mh_execute_header, v138, v139, "REMSharedEntitySyncActivity: Cannot look up reminder by sharedListUpdateNotification.reminderIDs.first {reminderID: %s}", v140, 0xCu);
          swift_arrayDestroy(v141, 1, &type metadata for Any[8]);
          swift_slowDealloc(v141, -1, -1);
          swift_slowDealloc(v140, -1, -1);

          swift_errorRelease(v161);
LABEL_50:
          (*(void (**)(char *, uint64_t))(v163 + 8))(v162, v164);
          return;
        }
        __break(1u);
        goto LABEL_106;
      }
      if (v43 != enum case for RDUserNotificationType.dueDateDeltaAlarm(_:))
      {
        if (v43 == enum case for RDUserNotificationType.todayNotification(_:))
        {
          (*(void (**)(void))(v159 + 56))();

          goto LABEL_79;
        }
        if (v43 != enum case for RDUserNotificationType.todayNotificationBadge(_:))
        {
          if (v43 == enum case for RDUserNotificationType.beforeFirstUnlock(_:))
          {
            (*(void (**)(char *, uint64_t))(v33 + 8))(v162, v23);

          }
          else
          {
            _diagnoseUnexpectedEnumCase<A>(type:)(v23, v23);
            __break(1u);
          }
          return;
        }
        if (qword_10063D690 != -1)
          swift_once(&qword_10063D690, sub_1003538CC);
        v127 = type metadata accessor for Logger(0);
        v128 = sub_100012DC4(v127, (uint64_t)qword_100656938);
        v129 = Logger.logObject.getter(v128);
        v130 = static os_log_type_t.fault.getter(v129);
        if (!os_log_type_enabled(v129, v130))
        {
LABEL_103:

          goto LABEL_80;
        }
        v131 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v131 = 0;
        v132 = "Received todayNotificationBadge response but this notification has no banner.";
        goto LABEL_102;
      }
    }
    v155 = (uint64_t (*)(char *, _QWORD, uint64_t))v25;
    (*(void (**)(uint64_t *, uint64_t))(v33 + 96))(v13, v23);
    v97 = v158;
    v46[4](v44, v13, v158);
    v98 = REMStore.fetchReminder(notificationIdentifier:includingDueDateDeltaAlerts:)(v44, 0);
    v99 = v44;
    v100 = (void *)v98;
    ((void (*)(char *, uint64_t))v46[1])(v99, v97);
    if (objc_msgSend(v100, "isOverdue"))
    {
      v102 = *(void (**)(void))(v45 + 40);
      v103 = objc_msgSend(v100, "objectID");
      v102();

    }
    else
    {
      v104 = *(void (**)(void))(v45 + 8);
      v105 = objc_msgSend(v100, "objectID");
      v104();

    }
    goto LABEL_80;
  }
  sub_100354EAC((uint64_t)v9);
  if (qword_10063D690 != -1)
    swift_once(&qword_10063D690, sub_1003538CC);
  v34 = type metadata accessor for Logger(0);
  sub_100012DC4(v34, (uint64_t)qword_100656938);
  v35 = (void (**)(char *, uint64_t *, uint64_t))v25;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = (void (***)(char *, uint64_t *, uint64_t))swift_slowAlloc(8, -1);
    *(_DWORD *)v38 = 138412290;
    v167 = v35;
    v40 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v38 + 4, v38 + 12);
    *v39 = v35;

    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Cannot determine notification type from content. {content: %@}", v38, 0xCu);
    v41 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v39, 1, v41);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    goto LABEL_12;
  }

}

uint64_t sub_100354EAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100656950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100354EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100656958);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100656958);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100354F7C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  objc_super v11;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (qword_10063D698 != -1)
    swift_once(&qword_10063D698, sub_100354EEC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100012DC4(v5, (uint64_t)qword_100656958);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIWelcomeViewController dealloc", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v11.receiver = v3;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "dealloc");
}

uint64_t sub_100355228(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;
  uint64_t v8;
  _QWORD v10[4];

  swift_unknownObjectRetain(a3);
  v7 = a1;
  _bridgeAnyObjectToAny(_:)(v10);
  v8 = swift_unknownObjectRelease(a3);
  a4(v8);

  return sub_100027F10(v10);
}

double sub_100355328(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v4;
  id v5;
  int v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  NSString v14;
  __n128 v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  NSString v24;
  __n128 v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  NSString v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  NSString v35;
  __n128 v36;
  void *v37;
  Swift::String v38;
  Swift::String v39;
  void *v40;
  Swift::String v41;
  Swift::String v42;
  void *v43;
  void *v44;
  NSString v45;
  NSString v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  NSString v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  NSString v54;
  __n128 v55;
  void *v56;
  Swift::String v57;
  Swift::String v58;
  void *v59;
  NSString v60;
  Swift::String v61;
  Swift::String v62;
  void *v63;
  NSString v64;
  __n128 v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  objc_super v72;

  v3 = v2;
  v72.receiver = v2;
  v72.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v72, "viewDidLoad");
  if ((unint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_presenter]
                                                + 48)
                                    + 32)
                        - 1) >= 2
    && (v5 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v4),
        v6 = TTRUserDefaults.lastSeenWelcomeScreenVersion.getter(),
        v5,
        v6))
  {
    v7._countAndFlagsBits = 0xD000000000000019;
    v7._object = (void *)0x80000001005758D0;
    v8._object = (void *)0x80000001005758F0;
    v8._countAndFlagsBits = 0xD00000000000001DLL;
    object = TTRLocalizedString(_:comment:)(v7, v8)._object;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v11._countAndFlagsBits = 0xD000000000000044;
    v11._object = (void *)0x8000000100575910;
    v12._object = (void *)0x8000000100575960;
    v12._countAndFlagsBits = 0xD00000000000001CLL;
    v13 = TTRLocalizedString(_:comment:)(v11, v12)._object;
    v14 = String._bridgeToObjectiveC()();
    v15 = swift_bridgeObjectRelease(v13);
    v16 = (void *)static TTRIAsset.Image.WelcomeBullet.smiling.getter(v15);
    objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v10, v14, v16);

    v17._countAndFlagsBits = 0xD00000000000001ELL;
    v17._object = (void *)0x8000000100575980;
    v18._object = (void *)0x80000001005759A0;
    v18._countAndFlagsBits = 0xD00000000000001DLL;
    v19 = TTRLocalizedString(_:comment:)(v17, v18)._object;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v21._countAndFlagsBits = 0xD00000000000004CLL;
    v21._object = (void *)0x80000001005759C0;
    v22._object = (void *)0x8000000100575A10;
    v22._countAndFlagsBits = 0xD00000000000001CLL;
    v23 = TTRLocalizedString(_:comment:)(v21, v22)._object;
    v24 = String._bridgeToObjectiveC()();
    v25 = swift_bridgeObjectRelease(v23);
    v26 = (void *)static TTRIAsset.Image.WelcomeBullet.collaboration.getter(v25);
    objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v20, v24, v26);

    v27 = objc_msgSend(v3, "headerView");
    objc_msgSend(v27, "setAllowFullWidthIcon:", 1);
  }
  else
  {
    v28._object = (void *)0x80000001005758F0;
    v29._countAndFlagsBits = 0x7243206B63697551;
    v29._object = (void *)0xEE006E6F69746165;
    v28._countAndFlagsBits = 0xD00000000000001DLL;
    v30 = TTRLocalizedString(_:comment:)(v29, v28)._object;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v32._countAndFlagsBits = 0xD00000000000004DLL;
    v32._object = (void *)0x8000000100575A30;
    v33._object = (void *)0x8000000100575960;
    v33._countAndFlagsBits = 0xD00000000000001CLL;
    v34 = TTRLocalizedString(_:comment:)(v32, v33)._object;
    v35 = String._bridgeToObjectiveC()();
    v36 = swift_bridgeObjectRelease(v34);
    v37 = (void *)static TTRIAsset.Image.WelcomeBullet.one.getter(v36);
    objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v31, v35, v37);

    v38._countAndFlagsBits = 0xD000000000000010;
    v38._object = (void *)0x8000000100575A80;
    v39._object = (void *)0x80000001005759A0;
    v39._countAndFlagsBits = 0xD00000000000001DLL;
    v40 = TTRLocalizedString(_:comment:)(v38, v39)._object;
    v41._countAndFlagsBits = 0xD000000000000049;
    v41._object = (void *)0x8000000100575AA0;
    v42._object = (void *)0x8000000100575A10;
    v42._countAndFlagsBits = 0xD00000000000001CLL;
    v43 = TTRLocalizedString(_:comment:)(v41, v42)._object;
    v44 = (void *)static TTRIAsset.Image.WelcomeBullet.two.getter();
    if ((sub_100356E70() & 1) != 0)
    {
      v45 = String._bridgeToObjectiveC()();
      v46 = String._bridgeToObjectiveC()();
      objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v45, v46, v44);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v43);

      v44 = v46;
    }
    else
    {
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v43);
    }

    v47._object = (void *)0x8000000100575AF0;
    v48._countAndFlagsBits = 0x6168532079736145;
    v48._object = (void *)0xEC000000676E6972;
    v47._countAndFlagsBits = 0xD00000000000001DLL;
    v49 = TTRLocalizedString(_:comment:)(v48, v47)._object;
    v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v49);
    v51._countAndFlagsBits = 0xD000000000000038;
    v51._object = (void *)0x8000000100575B10;
    v52._object = (void *)0x8000000100575B50;
    v52._countAndFlagsBits = 0xD00000000000001CLL;
    v53 = TTRLocalizedString(_:comment:)(v51, v52)._object;
    v54 = String._bridgeToObjectiveC()();
    v55 = swift_bridgeObjectRelease(v53);
    v56 = (void *)static TTRIAsset.Image.WelcomeBullet.three.getter(v55);
    objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v50, v54, v56);

    v57._countAndFlagsBits = 0xD000000000000015;
    v57._object = (void *)0x8000000100575B70;
    v58._object = (void *)0x8000000100575B90;
    v58._countAndFlagsBits = 0xD00000000000001DLL;
    v59 = TTRLocalizedString(_:comment:)(v57, v58)._object;
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v59);
    v61._countAndFlagsBits = 0xD000000000000082;
    v61._object = (void *)0x8000000100575BB0;
    v62._object = (void *)0x8000000100575C40;
    v62._countAndFlagsBits = 0xD00000000000001CLL;
    v63 = TTRLocalizedString(_:comment:)(v61, v62)._object;
    v64 = String._bridgeToObjectiveC()();
    v65 = swift_bridgeObjectRelease(v63);
    v27 = (id)static TTRIAsset.Image.WelcomeBullet.four.getter(v65);
    objc_msgSend(v3, "addBulletedListItemWithTitle:description:image:", v60, v64, v27);

  }
  v66 = sub_1000AF63C();
  v67 = (uint64_t *)&v3[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel];
  v68 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel];
  v69 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel + 8];
  *v67 = v66;
  v67[1] = v70;
  sub_1000B0370(v68, v69);
  sub_1003558EC();
  return sub_1000AF7C8();
}

void sub_1003558EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  unint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *object;
  NSString v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  NSString v28;
  NSString v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  os_log_t v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  void *v55;
  id v56;
  NSString v57;
  NSURL *v58;
  void *v59;
  void *v60;
  uint8_t *v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t countAndFlagsBits;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9._countAndFlagsBits = 0xD000000000000015;
  v9._object = (void *)0x8000000100575C60;
  v10._countAndFlagsBits = 0x65756E69746E6F43;
  v10._object = (void *)0xE800000000000000;
  v11 = TTRLocalizedString(_:comment:)(v10, v9);
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel + 8];
  switch(v12)
  {
    case 1uLL:
      swift_bridgeObjectRelease(v11._object);
      sub_100356340();
      return;
    case 2uLL:
      sub_1003561F4();
      v25 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
      v26 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setTitle:forState:", v26, 0, swift_bridgeObjectRelease(v11._object).n128_f64[0]);

      objc_msgSend(v25, "addTarget:action:forControlEvents:", v1, "didTapDismissButton:", 64);
      v27 = objc_msgSend(v1, "buttonTray");
      goto LABEL_8;
    case 3uLL:
      sub_1003561F4();
      v25 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
      v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setTitle:forState:", v28, 0, swift_bridgeObjectRelease(v11._object).n128_f64[0]);

      objc_msgSend(v25, "addTarget:action:forControlEvents:", v1, "didTapContinueButton:", 64);
      v27 = objc_msgSend(v1, "buttonTray");
      goto LABEL_8;
    case 4uLL:
      sub_1003561F4();
      v25 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setTitle:forState:", v29, 0, swift_bridgeObjectRelease(v11._object).n128_f64[0]);

      objc_msgSend(v25, "addTarget:action:forControlEvents:", v1, "didTapContinueToUpgradeAutomaticallyButton:", 64);
      v27 = objc_msgSend(v1, "buttonTray");
LABEL_8:
      v67 = v27;
      objc_msgSend(v67, "addButton:", v25);

      break;
    default:
      v67 = *(id *)&v0[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel];
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v11._object);
      sub_1003561F4();
      v13 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
      v14._countAndFlagsBits = 0xD000000000000017;
      v14._object = (void *)0x800000010056C4F0;
      v15._countAndFlagsBits = 0x4E20657461647055;
      v15._object = (void *)0xEA0000000000776FLL;
      object = TTRLocalizedString(_:comment:)(v15, v14)._object;
      v17 = String._bridgeToObjectiveC()();
      objc_msgSend(v13, "setTitle:forState:", v17, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

      objc_msgSend(v13, "addTarget:action:forControlEvents:", v1, "didTapUpgradeButton:", 64);
      v18 = objc_msgSend(v1, "buttonTray");
      objc_msgSend(v18, "addButton:", v13);

      v19 = objc_msgSend((id)objc_opt_self(OBLinkTrayButton), "linkButton");
      v20._countAndFlagsBits = 0xD000000000000019;
      v20._object = (void *)0x800000010056C510;
      v21._countAndFlagsBits = 0x4C20657461647055;
      v21._object = (void *)0xEC00000072657461;
      v22 = TTRLocalizedString(_:comment:)(v21, v20)._object;
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setTitle:forState:", v23, 0, swift_bridgeObjectRelease(v22).n128_f64[0]);

      objc_msgSend(v19, "addTarget:action:forControlEvents:", v1, "didTapLaterButton:", 64);
      v24 = objc_msgSend(v1, "buttonTray");
      objc_msgSend(v24, "addButton:", v19);

      URL.init(string:)(*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_upgradeHelpURLString], *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_upgradeHelpURLString + 8]);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1000B0370((uint64_t)v67, v12);

        sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EE0);
      }
      else
      {
        v65 = v19;
        v66 = v13;
        v30 = (uint64_t)v67;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        v31._countAndFlagsBits = 0xD000000000000049;
        v32._countAndFlagsBits = 0xD00000000000005ALL;
        v31._object = (void *)0x8000000100575C80;
        v32._object = (void *)0x8000000100575CD0;
        v33 = TTRLocalizedString(_:comment:)(v31, v32);
        v34 = v33._object;
        if (v12)
        {
          countAndFlagsBits = v33._countAndFlagsBits;
          if (qword_10063D698 != -1)
            swift_once(&qword_10063D698, sub_100354EEC);
          v35 = type metadata accessor for Logger(0);
          sub_100012DC4(v35, (uint64_t)qword_100656958);
          v36 = v30;
          sub_1003570D8(v30, v12);
          swift_bridgeObjectRetain(v12);
          v38 = Logger.logObject.getter(v37);
          v39 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = swift_slowAlloc(12, -1);
            v62 = v38;
            v41 = (uint8_t *)v40;
            v63 = swift_slowAlloc(32, -1);
            v69 = v63;
            *(_DWORD *)v41 = 136315138;
            v61 = v41 + 4;
            swift_bridgeObjectRetain(v12);
            v68 = sub_100027E40(v36, v12, &v69);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v61, v41 + 12);
            sub_1000B0370(v36, v12);
            sub_1000B0370(v36, v12);
            swift_bridgeObjectRelease(v12);
            v42 = v62;
            _os_log_impl((void *)&_mh_execute_header, v62, v39, "Showing accountBeingUpgradedHint label {accountBeingUpgradedHint: %s}", v41, 0xCu);
            v43 = v63;
            swift_arrayDestroy(v63, 1, &type metadata for Any[8]);
            swift_slowDealloc(v43, -1, -1);
            swift_slowDealloc(v41, -1, -1);

          }
          else
          {
            sub_1000B0370(v36, v12);
            sub_1000B0370(v36, v12);

          }
          v44._countAndFlagsBits = 0xD000000000000062;
          v45._object = (void *)0x8000000100575D30;
          v44._object = (void *)0x8000000100575D50;
          v45._countAndFlagsBits = 0xD000000000000013;
          v46 = TTRLocalizedString(_:comment:)(v45, v44);
          v47 = sub_10002A750((uint64_t *)&unk_100640FD0);
          v48 = swift_allocObject(v47, 72, 7);
          *(_OWORD *)(v48 + 16) = xmmword_100520250;
          *(_QWORD *)(v48 + 56) = &type metadata for String;
          *(_QWORD *)(v48 + 64) = sub_1000770A4();
          *(_QWORD *)(v48 + 32) = v36;
          *(_QWORD *)(v48 + 40) = v12;
          v49 = String.init(format:_:)(v46._countAndFlagsBits, v46._object, v48);
          v51 = v50;
          swift_bridgeObjectRelease(v46._object);
          v69 = v49;
          v70 = v51;
          swift_bridgeObjectRetain(v51);
          v52._countAndFlagsBits = 2570;
          v52._object = (void *)0xE200000000000000;
          String.append(_:)(v52);
          swift_bridgeObjectRelease(v51);
          v53 = v70;
          swift_bridgeObjectRetain(v70);
          v54._countAndFlagsBits = countAndFlagsBits;
          v54._object = v33._object;
          String.append(_:)(v54);
          swift_bridgeObjectRelease(v53);
          swift_bridgeObjectRelease(v33._object);
          v34 = v70;
        }
        v55 = v66;
        v56 = objc_msgSend(v1, "buttonTray");
        v57 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
        URL._bridgeToObjectiveC()(v58);
        v60 = v59;
        objc_msgSend(v56, "setCaptionText:learnMoreURL:", v57, v59);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      break;
  }
}

void sub_1003561F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  Class isa;
  Class v8;
  id v9;
  void *v10;

  v1 = OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_newBottomConstraints);
    if (v3
      && (v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_originalBottomConstraints)) != 0)
    {
      v5 = (void *)objc_opt_self(NSLayoutConstraint);
      sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
      v6 = v2;
      swift_bridgeObjectRetain(v3);
      swift_bridgeObjectRetain(v4);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

      v8 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "activateConstraints:", v8, swift_bridgeObjectRelease(v4).n128_f64[0]);

    }
    else
    {
      v9 = v2;
    }
    objc_msgSend(v2, "stopAnimating");
    objc_msgSend(v2, "removeFromSuperview");

    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;

  }
}

void sub_100356340()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Class isa;
  Class v26;
  void *v27;
  id v28;
  uint64_t v29;

  v1 = OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner);
  if (v2)
  {
    objc_msgSend(v2, "startAnimating");
  }
  else
  {
    v3 = v0;
    v4 = sub_10035667C();
    if (v4)
    {
      v28 = (id)v4;
      v5 = sub_100356780();
      if (v5)
      {
        v7 = (void *)v5;
        v8 = v6;
        v9 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
        objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v9, "startAnimating");
        objc_msgSend(v28, "addSubview:", v9);
        v10 = sub_10002A750((uint64_t *)&unk_1006415A0);
        v11 = swift_allocObject(v10, 40, 7);
        *(_OWORD *)(v11 + 16) = xmmword_100521140;
        *(_QWORD *)(v11 + 32) = v7;
        v29 = v11;
        specialized Array._endMutation()(v11);
        v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_originalBottomConstraints);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_originalBottomConstraints) = v29;
        v13 = v7;
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRelease(v12);
        v14 = swift_allocObject(v10, 48, 7);
        *(_OWORD *)(v14 + 16) = xmmword_10051FF90;
        v15 = objc_msgSend(v28, "centerXAnchor");
        v16 = objc_msgSend(v9, "centerXAnchor");
        v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

        *(_QWORD *)(v14 + 32) = v17;
        v18 = objc_msgSend(v9, "topAnchor");
        v19 = objc_msgSend(v8, "bottomAnchor");
        v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, sub_100356908());

        *(_QWORD *)(v14 + 40) = v20;
        specialized Array._endMutation()(v21);
        v22 = v14;
        v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_newBottomConstraints);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_newBottomConstraints) = v22;
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRelease(v23);
        v24 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v24, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

        v26 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v24, "activateConstraints:", v26, swift_bridgeObjectRelease(v22).n128_f64[0]);

        v27 = *(void **)(v3 + v1);
        *(_QWORD *)(v3 + v1) = v9;

      }
      else
      {

      }
    }
  }
}

uint64_t sub_10035667C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10023D25C((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    if (swift_dynamicCast(&v5, v7, &type metadata for Any[8], v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1000073A0((uint64_t)v7, &qword_100640E50);
    return 0;
  }
}

unint64_t sub_100356780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_100356CA4(0x736D657469, 0xE500000000000000, &qword_100650720);
  v2 = v1;
  if (!v1)
    return v2;
  v3 = (void *)(v1 & 0xFFFFFFFFFFFFFF8);
  if (!((unint64_t)v1 >> 62))
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_4;
LABEL_22:
    v12 = v2;
LABEL_32:
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  if (v1 >= 0)
    v1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = _CocoaArrayWrapper.endIndex.getter(v1);
  if (!v4)
    goto LABEL_22;
LABEL_4:
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(v2 + 8 * v6 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_27;
  }
  v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2);
LABEL_9:
  v3 = v7;
  swift_bridgeObjectRelease(v2);
  v8 = sub_100356CA4(0xD000000000000013, 0x8000000100575DE0, &qword_1006569D0);
  if (!v8)
  {

    return 0;
  }
  v0 = v8;
  v2 = v8 & 0xFFFFFFFFFFFFFF8;
  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_27:
  if (v0 >= 0)
    v13 = v2;
  else
    v13 = v0;
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v9)
  {
LABEL_31:

    v12 = v0;
    goto LABEL_32;
  }
LABEL_12:
  v5 = __OFSUB__(v9, 1);
  result = v9 - 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v0 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v0);
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v2 + 16))
  {
    v11 = *(id *)(v0 + 8 * result + 32);
LABEL_17:
    v2 = (uint64_t)v11;
    swift_bridgeObjectRelease(v0);
    return v2;
  }
  __break(1u);
  return result;
}

double sub_100356908()
{
  void *v0;
  NSString v1;
  id v2;
  double v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10023D25C((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, &type metadata for Any[8], &type metadata for CGFloat, 6))
      return v4;
  }
  else
  {
    sub_1000073A0((uint64_t)v6, &qword_100640E50);
  }
  return 0.0;
}

uint64_t type metadata accessor for TTRIWelcomeViewController()
{
  return objc_opt_self(_TtC9Reminders25TTRIWelcomeViewController);
}

uint64_t destroy for TTRIWelcomeViewController.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if ((unint64_t)(result - 1) >= 4)
    return swift_bridgeObjectRelease(result);
  return result;
}

_QWORD *_s9Reminders25TTRIWelcomeViewControllerC9ViewModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  if ((unint64_t)(v3 - 1) >= 4)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain(v3);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for TTRIWelcomeViewController.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1] - 1;
  if ((unint64_t)(v4 - 1) >= 4)
  {
    if (v5 >= 4)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v4);
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_1006569C8);
    goto LABEL_6;
  }
  if (v5 < 4)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithTake for TTRIWelcomeViewController.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1[1];
  if ((unint64_t)(v4 - 1) >= 4)
  {
    v5 = a2[1];
    if ((unint64_t)(v5 - 1) >= 4)
    {
      *a1 = *a2;
      a1[1] = v5;
      swift_bridgeObjectRelease(v4);
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_1006569C8);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIWelcomeViewController.ViewModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 4);
  v6 = v4 - 4;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIWelcomeViewController.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = a2 - 2147483643;
    *(_QWORD *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIWelcomeViewController.ViewModel()
{
  return &type metadata for TTRIWelcomeViewController.ViewModel;
}

uint64_t sub_100356CA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void *v3;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "valueForKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v10);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_10023D25C((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    v7 = sub_10002A750(a3);
    if (swift_dynamicCast(&v9, v11, &type metadata for Any[8], v7, 6))
      return v9;
    else
      return 0;
  }
  else
  {
    sub_1000073A0((uint64_t)v11, &qword_100640E50);
    return 0;
  }
}

void sub_100356D80(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  _QWORD v8[6];

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v3 = static TTRUserDefaults.WelcomeScreenVersion.current.getter();
  TTRUserDefaults.lastSeenWelcomeScreenVersion.setter(v3);

  v4 = sub_10001413C((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  Strong = swift_unknownObjectWeakLoadStrong(*v4 + 16);
  if (Strong)
  {
    v6 = (void *)Strong;
    v8[4] = sub_1001EAA38;
    v8[5] = a1;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100006378;
    v8[3] = &unk_100602AF0;
    v7 = _Block_copy(v8);
    swift_retain_n(a1, 2);
    objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    swift_release();

  }
}

uint64_t sub_100356E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMGroceryDummyModel(0);
  v5 = static Locale.current.getter(v4);
  v6 = Locale.identifier.getter(v5);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  LOBYTE(v3) = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v6, v8);
  swift_bridgeObjectRelease(v8);
  return v3 & 1;
}

uint64_t sub_1003570D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 4)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t destroy for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

_QWORD *_s9Reminders39TTRIRemindersListNavigationBarViewModelO17FixedTrailingItemOwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain(v3);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *a1 = *a2;
      v11 = a2[1];
      a1[1] = v11;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(v4);
      return a1;
    }
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

_QWORD *assignWithTake for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease(v4);
      return a1;
    }
    swift_bridgeObjectRelease(v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIWelcomeViewController.ButtonConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 3;
  if (v5 >= 5)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIWelcomeViewController.ButtonConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

uint64_t sub_10035732C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_100357350(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIWelcomeViewController.ButtonConfig()
{
  return &type metadata for TTRIWelcomeViewController.ButtonConfig;
}

uint64_t sub_10035738C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  double v39;
  void (*v40)(char *, uint64_t);
  id v41;
  double v42;
  double v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  id v49;
  id v50;
  double v51;
  double v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  double v60;
  double v61;
  double v62;
  id v63;
  double v64;
  BOOL v65;
  BOOL v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t result;
  uint64_t v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  id v102;
  _QWORD *v103;
  id v104;
  _BYTE v105[24];

  v1 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v1);
  v3 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v94 - v5;
  __chkstk_darwin(v7);
  v97 = (char *)&v94 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v94 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v99 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v98 = (char *)&v94 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v94 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v94 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v94 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v94 - v27;
  sub_100358C58();
  v29 = (void *)v0[9];
  if (!v29)
  {
    if (qword_10063D6A0 != -1)
      swift_once(&qword_10063D6A0, sub_100358AE8);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100012DC4(v34, (uint64_t)qword_1006569D8);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "TTRIAppStoreProvider: Failed to fetch REMAppStoreReviewCloudConfiguration properties", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    return 0;
  }
  v95 = v6;
  v94 = v3;
  v102 = v29;
  swift_unknownObjectRetain(v29);
  Date.init()(v30);
  swift_beginAccess(v0 + 4, &v104, 32, 0);
  v100 = v13;
  v32 = v0[7];
  v31 = v0[8];
  v103 = v0;
  v96 = v0 + 4;
  sub_10001413C(v0 + 4, v32);
  v33 = v100;
  (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v32, v31);
  swift_endAccess(&v104);
  v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v101(v11, 1, v12) == 1)
  {
    static Date.distantPast.getter();
    sub_10002FBF4((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v25, v11, v12);
  }
  v39 = Date.timeIntervalSince(_:)(v25);
  v40 = *(void (**)(char *, uint64_t))(v33 + 8);
  v40(v25, v12);
  v40(v28, v12);
  v41 = objc_msgSend(v102, "appStoreReviewTimeIntervalSinceLastPrompt");
  v43 = v42;
  Date.init()(v41);
  v44 = v96;
  swift_beginAccess(v96, &v104, 32, 0);
  v45 = v103[7];
  v46 = v103[8];
  sub_10001413C(v44, v45);
  v47 = (uint64_t)v97;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
  swift_endAccess(&v104);
  if (v101((char *)v47, 1, v12) == 1)
  {
    static Date.distantPast.getter();
    sub_10002FBF4(v47);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v19, v47, v12);
  }
  v48 = Date.timeIntervalSince(_:)(v19);
  v40(v19, v12);
  v40(v22, v12);
  v49 = v102;
  v50 = objc_msgSend(v102, "appStoreReviewTimeIntervalSinceLastFetch");
  v52 = v51;
  v53 = v98;
  Date.init()(v50);
  swift_beginAccess(v44, &v104, 32, 0);
  v54 = v103;
  v55 = v103[7];
  v56 = v103[8];
  sub_10001413C(v44, v55);
  v57 = (uint64_t)v95;
  (*(void (**)(uint64_t, uint64_t))(v56 + 56))(v55, v56);
  swift_endAccess(&v104);
  v58 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v101)(v57, 1, v12);
  v59 = v99;
  if ((_DWORD)v58 == 1)
  {
    static Date.now.getter(v58);
    sub_10002FBF4(v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v99, v57, v12);
  }
  v60 = Date.timeIntervalSince(_:)(v59);
  v40(v59, v12);
  v40(v53, v12);
  objc_msgSend(v49, "appStoreReviewTimeIntervalSinceInitialForeground");
  v62 = v61;
  v63 = objc_msgSend(v49, "appStoreReviewNumberOfForegroundsThreshold");
  objc_msgSend(v49, "appStoreReviewTimeIntervalOfInterest");
  v65 = sub_100358E84((unint64_t)v63, v64);
  v66 = v65;
  if (v39 < v43 || v48 < v52 || v62 >= v60 || !v65)
  {
    if (qword_10063D6A0 != -1)
      swift_once(&qword_10063D6A0, sub_100358AE8);
    v68 = type metadata accessor for Logger(0);
    v69 = sub_100012DC4(v68, (uint64_t)qword_1006569D8);
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc(26, -1);
      *(_DWORD *)v72 = 67109888;
      LODWORD(v104) = v39 < v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v72 + 4, v72 + 8);
      *(_WORD *)(v72 + 8) = 1024;
      LODWORD(v104) = v48 < v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v72 + 10, v72 + 14);
      *(_WORD *)(v72 + 14) = 1024;
      LODWORD(v104) = v62 < v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v72 + 16, v72 + 20);
      *(_WORD *)(v72 + 20) = 1024;
      LODWORD(v104) = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v72 + 22, v72 + 26);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "TTRIAppStoreProvider: Not showing App Store rating prompt: didPromptRecently = %{BOOL}d, didFetchRecently = %{BOOL}d, isPastFirstAppForegroundThreshold = %{BOOL}d, hasEnoughForegroundCount = %{BOOL}d", (uint8_t *)v72, 0x1Au);
      swift_slowDealloc(v72, -1, -1);
      swift_unknownObjectRelease(v49);

    }
    else
    {

      swift_unknownObjectRelease(v49);
    }
    return 0;
  }
  objc_msgSend(v49, "appStoreReviewTimeIntervalOfInterest");
  v73 = sub_100359284(v67);
  v74 = v94;
  static Date.now.getter(v73);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v74, 0, 1, v12);
  swift_beginAccess(v44, &v104, 33, 0);
  v75 = v54[7];
  v76 = v54[8];
  sub_100028D48((uint64_t)v44, v75);
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v74, v75, v76);
  swift_endAccess(&v104);
  v77 = objc_msgSend(v49, "appStoreReviewCreatedOrCompletedRemindersCountThreshold");
  v78 = (unint64_t)objc_msgSend(v73, "integerValue");
  if ((v78 & 0x8000000000000000) != 0 || v78 < (unint64_t)v77)
  {
    if (qword_10063D6A0 != -1)
      swift_once(&qword_10063D6A0, sub_100358AE8);
    v85 = type metadata accessor for Logger(0);
    sub_100012DC4(v85, (uint64_t)qword_1006569D8);
    v86 = v73;
    v87 = Logger.logObject.getter(v86);
    v88 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = swift_slowAlloc(22, -1);
      v90 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v89 = 138412546;
      v104 = v86;
      v91 = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v89 + 4, v89 + 12);
      *v90 = v86;

      *(_WORD *)(v89 + 12) = 2048;
      v104 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v89 + 14, v89 + 22);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "TTRIAppStoreProvider: Not showing App Store rating prompt: only created or completed %@ out of %lu reminders", (uint8_t *)v89, 0x16u);
      v92 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v90, 1, v92);
      swift_slowDealloc(v90, -1, -1);
      swift_slowDealloc(v89, -1, -1);
      swift_unknownObjectRelease(v102);

    }
    else
    {

      swift_unknownObjectRelease(v49);
    }
    return 0;
  }

  if (qword_10063D6A0 != -1)
    swift_once(&qword_10063D6A0, sub_100358AE8);
  v79 = type metadata accessor for Logger(0);
  v80 = sub_100012DC4(v79, (uint64_t)qword_1006569D8);
  v81 = Logger.logObject.getter(v80);
  v82 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v81, v82))
  {
    v83 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v83 = 0;
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "TTRIAppStoreProvider: Determined we should display the App Store rating prompt", v83, 2u);
    swift_slowDealloc(v83, -1, -1);
    swift_unknownObjectRelease(v49);

  }
  else
  {

    swift_unknownObjectRelease(v49);
  }
  v93 = v103;

  result = 1;
  *((_BYTE *)v93 + 16) = 1;
  return result;
}

void sub_100357F3C(char a1)
{
  Class isa;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  Class v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  void **aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  v52 = type metadata accessor for DispatchWorkItemFlags(0);
  isa = v52[-1].isa;
  __chkstk_darwin(v52);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  sub_1003599DC();
  if (v15)
  {
    v16 = v15;
    v48 = isa;
    v49 = v5;
    v17 = a1 & 1;
    v18 = sub_100359CCC();
    v19 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v47 = static OS_dispatch_queue.main.getter(v19);
    static DispatchTime.now()();
    if (v18)
    {
      + infix(_:_:)(v11, 3.0);
      v46 = *(void (**)(char *, uint64_t))(v9 + 8);
      v20 = v8;
      v46(v11, v8);
      v21 = swift_allocObject(&unk_100602C10, 25, 7);
      *(_QWORD *)(v21 + 16) = v50;
      *(_BYTE *)(v21 + 24) = v17;
      v57 = sub_100359EDC;
      v58 = v21;
      aBlock = _NSConcreteStackBlock;
      v54 = 1107296256;
      v55 = sub_100006378;
      v56 = &unk_100602C28;
      v22 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter(v23);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v24 = sub_100005E90();
      v25 = sub_10002A750((uint64_t *)&unk_100640F40);
      v26 = sub_10002D190();
      v27 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v25, v26, v52, v24);
      v28 = (void *)v47;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v22);
      _Block_release(v22);

      (*((void (**)(char *, NSObject *))v48 + 1))(v4, v27);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v49);
      v29 = v14;
      v30 = v20;
    }
    else
    {
      + infix(_:_:)(v11, 1.0);
      v35 = *(void (**)(char *, uint64_t))(v9 + 8);
      v45 = v8;
      v46 = v35;
      v35(v11, v8);
      v36 = swift_allocObject(&unk_100602BC0, 40, 7);
      *(_QWORD *)(v36 + 16) = v50;
      *(_BYTE *)(v36 + 24) = v17;
      *(_QWORD *)(v36 + 32) = v16;
      v57 = sub_100359E2C;
      v58 = v36;
      aBlock = _NSConcreteStackBlock;
      v54 = 1107296256;
      v55 = sub_100006378;
      v56 = &unk_100602BD8;
      v37 = _Block_copy(&aBlock);
      swift_retain();
      v38 = v16;
      swift_release();
      static DispatchQoS.unspecified.getter(v39);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v40 = sub_100005E90();
      v41 = sub_10002A750((uint64_t *)&unk_100640F40);
      v42 = sub_10002D190();
      v43 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v52, v40);
      v44 = (void *)v47;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v37);
      _Block_release(v37);

      (*((void (**)(char *, NSObject *))v48 + 1))(v4, v43);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v49);
      v29 = v14;
      v30 = v45;
    }
    v46(v29, v30);
  }
  else
  {
    if (qword_10063D6A0 != -1)
      swift_once(&qword_10063D6A0, sub_100358AE8);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100012DC4(v31, (uint64_t)qword_1006569D8);
    v52 = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v33, "TTRIAppStoreProvider: Can't prompt user for App Store review. Missing required active window scene.", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

  }
}

void sub_100358410()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, NSObject *);
  uint64_t v36;
  uint64_t v37;
  double v38;
  void (*v39)(uint64_t, NSObject *);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  char *v75;
  id v76;
  char *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, NSObject *);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  NSObject *v84;
  unint64_t v85;
  _QWORD v86[4];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100653A90);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v77 = (char *)&v70 - v6;
  v84 = type metadata accessor for Date(0);
  isa = v84[-1].isa;
  v8 = __chkstk_darwin(v84);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v70 - v12;
  v14 = __chkstk_darwin(v11);
  v82 = (char *)&v70 - v15;
  v16 = __chkstk_darwin(v14);
  v83 = (uint64_t)&v70 - v17;
  __chkstk_darwin(v16);
  v81 = (char *)&v70 - v18;
  sub_100358C58();
  v19 = (void *)v0[9];
  if (v19)
  {
    v75 = v10;
    *(_QWORD *)&v20 = swift_unknownObjectRetain(v19).n128_u64[0];
    v76 = objc_msgSend(v21, "appStoreReviewNumberOfForegroundsThreshold", v20);
    v22 = v0 + 4;
    swift_beginAccess(v0 + 4, v86, 32, 0);
    v24 = v0[7];
    v23 = v0[8];
    sub_10001413C(v0 + 4, v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 80))(v24, v23);
    if (v25)
    {
      v26 = v25;
      v71 = v13;
      v72 = (uint64_t)v22;
      v74 = v1;
      swift_endAccess(v86);
      v73 = v19;
      objc_msgSend(v19, "appStoreReviewTimeIntervalOfInterest");
      v86[0] = _swiftEmptyArrayStorage;
      v80 = *(_QWORD *)(v26 + 16);
      if (v80)
      {
        v28 = v27;
        v29 = 0;
        v30 = (uint64_t)v77;
        v31 = v84;
        v79 = v26;
        v32 = v81;
        while (v29 < *(_QWORD *)(v26 + 16))
        {
          v33 = (*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
          v34 = *((_QWORD *)isa + 9);
          (*((void (**)(uint64_t, unint64_t, NSObject *))isa + 2))(v30, v26 + v33 + v34 * v29, v31);
          v78 = (void (*)(uint64_t, uint64_t, uint64_t, NSObject *))*((_QWORD *)isa + 7);
          v78(v30, 0, 1, v31);
          if ((*((unsigned int (**)(uint64_t, uint64_t, NSObject *))isa + 6))(v30, 1, v31) == 1)
            goto LABEL_22;
          v35 = (uint64_t (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 4);
          v36 = v35(v32, v30, v31);
          v37 = v83;
          Date.init()(v36);
          v38 = Date.timeIntervalSince(_:)(v32);
          v39 = (void (*)(uint64_t, NSObject *))*((_QWORD *)isa + 1);
          v40 = v37;
          v31 = v84;
          v39(v40, v84);
          if (v38 > v28)
          {
            v39((uint64_t)v32, v31);
          }
          else
          {
            v35(v82, (uint64_t)v32, v31);
            v41 = v86[0];
            if ((swift_isUniquelyReferenced_nonNull_native(v86[0]) & 1) == 0)
            {
              sub_1003D84A8(0, *(_QWORD *)(v41 + 16) + 1, 1);
              v41 = v86[0];
            }
            v43 = *(_QWORD *)(v41 + 16);
            v42 = *(_QWORD *)(v41 + 24);
            if (v43 >= v42 >> 1)
            {
              sub_1003D84A8(v42 > 1, v43 + 1, 1);
              v41 = v86[0];
            }
            *(_QWORD *)(v41 + 16) = v43 + 1;
            v44 = v41 + v33 + v43 * v34;
            v31 = v84;
            v35((char *)v44, (uint64_t)v82, v84);
            v86[0] = v41;
            v30 = (uint64_t)v77;
          }
          ++v29;
          v26 = v79;
          if (v80 == v29)
          {
            v78(v30, 1, 1, v31);
            goto LABEL_22;
          }
        }
        __break(1u);
        goto LABEL_32;
      }
      v30 = (uint64_t)v77;
      v31 = v84;
      (*((void (**)(char *, uint64_t, uint64_t, NSObject *))isa + 7))(v77, 1, 1, v84);
LABEL_22:
      swift_bridgeObjectRelease(v26);
      v57 = sub_10002FBF4(v30);
      v58 = v86[0];
      v85 = v86[0];
      if (*(_QWORD *)(v86[0] + 16) >= (unint64_t)v76)
      {
        v60 = v83;
        sub_1002FE6A4(0, v83);
        v61 = (*((uint64_t (**)(uint64_t, NSObject *))isa + 1))(v60, v31);
        v59 = v75;
        static Date.now.getter(v61);
        v58 = v85;
      }
      else
      {
        v59 = v71;
        static Date.now.getter(v57);
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v58);
      v63 = v74;
      v64 = v72;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v58 = sub_100457004(0, *(_QWORD *)(v58 + 16) + 1, 1, v58);
      v65 = v73;
      v67 = *(_QWORD *)(v58 + 16);
      v66 = *(_QWORD *)(v58 + 24);
      if (v67 >= v66 >> 1)
        v58 = sub_100457004(v66 > 1, v67 + 1, 1, v58);
      *(_QWORD *)(v58 + 16) = v67 + 1;
      (*((void (**)(unint64_t, char *, NSObject *))isa + 4))(v58+ ((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80))+ *((_QWORD *)isa + 9) * v67, v59, v84);
      swift_beginAccess(v64, v86, 33, 0);
      v69 = v63[7];
      v68 = v63[8];
      sub_100028D48(v64, v69);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v68 + 88))(v58, v69, v68);
      swift_endAccess(v86);
      v56 = v65;
    }
    else
    {
      v49 = swift_endAccess(v86);
      static Date.now.getter(v49);
      (*((void (**)(char *, _QWORD, uint64_t, NSObject *))isa + 7))(v5, 0, 1, v84);
      swift_beginAccess(v0 + 4, v86, 33, 0);
      v50 = v0[7];
      v51 = v0[8];
      sub_100028D48((uint64_t)(v0 + 4), v50);
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 64))(v5, v50, v51);
      swift_endAccess(v86);
      v52 = sub_10002A750(&qword_100656AC8);
      v53 = swift_allocObject(v52, ((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80))+ *((_QWORD *)isa + 9), *((unsigned __int8 *)isa + 80) | 7);
      *(_OWORD *)(v53 + 16) = xmmword_100520250;
      static Date.now.getter(v53);
      swift_beginAccess(v1 + 4, v86, 33, 0);
      v55 = v1[7];
      v54 = v1[8];
      sub_100028D48((uint64_t)(v1 + 4), v55);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 88))(v53, v55, v54);
      swift_endAccess(v86);
      v56 = v19;
    }
    swift_unknownObjectRelease(v56);
    return;
  }
  if (qword_10063D6A0 != -1)
LABEL_32:
    swift_once(&qword_10063D6A0, sub_100358AE8);
  v45 = type metadata accessor for Logger(0);
  v46 = sub_100012DC4(v45, (uint64_t)qword_1006569D8);
  v84 = Logger.logObject.getter(v46);
  v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v84, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v84, v47, "TTRIAppStoreProvider: Failed to fetch REMAppStoreReviewCloudConfiguration properties", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

}

uint64_t sub_100358AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006569D8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006569D8);
  if (qword_10063D618 != -1)
    swift_once(&qword_10063D618, sub_1002EBB28);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673798);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100358B78(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v8;

  v1 = objc_msgSend(objc_allocWithZone((Class)REMAppStoreDataView), "initWithStore:", a1);
  v8 = 0;
  v2 = objc_msgSend(v1, "fetchAppStoreCloudConfigurationPropertiesWithError:", &v8);
  v3 = v8;
  if (v2)
  {
    v4 = v8;
  }
  else
  {
    v5 = v8;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v6);
  }

  return v2;
}

void sub_100358C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 72))
  {
    v1 = (*(uint64_t (**)(void))(v0 + 80))();
    v2 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v1;
    swift_unknownObjectRelease(v2);
  }
}

BOOL sub_100358E84(unint64_t a1, double a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  double v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  unint64_t v37;
  BOOL v38;
  char *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  _QWORD v46[3];

  v5 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v5);
  v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v45 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v44 = (char *)&v39 - v11;
  __chkstk_darwin(v12);
  v43 = (char *)&v39 - v13;
  swift_beginAccess(v2 + 4, v46, 32, 0);
  v14 = v2[7];
  v15 = v2[8];
  sub_10001413C(v2 + 4, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 80))(v14, v15);
  if (!v16)
  {
    swift_endAccess(v46);
    if (qword_10063D6A0 == -1)
    {
LABEL_16:
      v31 = type metadata accessor for Logger(0);
      v32 = sub_100012DC4(v31, (uint64_t)qword_1006569D8);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "TTRIAppStoreProvider: Failed to save any app foregrounding dates", v35, 2u);
        swift_slowDealloc(v35, -1, -1);
      }

      return 0;
    }
LABEL_30:
    swift_once(&qword_10063D6A0, sub_100358AE8);
    goto LABEL_16;
  }
  v17 = v16;
  swift_endAccess(v46);
  if (*(_QWORD *)(v17 + 16) != a1)
  {
    swift_bridgeObjectRelease(v17);
    return 0;
  }
  v46[0] = _swiftEmptyArrayStorage;
  if (a1)
  {
    v18 = 0;
    v41 = v17;
    v42 = a1;
    v19 = (uint64_t)v39;
    v20 = v43;
    while (v18 < *(_QWORD *)(v17 + 16))
    {
      v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v19, v17 + v21 + v22 * v18, v7);
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v40(v19, 0, 1, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v19, 1, v7) == 1)
        goto LABEL_23;
      v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
      v24 = v23(v20, v19, v7);
      v25 = v44;
      Date.init()(v24);
      v26 = Date.timeIntervalSince(_:)(v20);
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v27(v25, v7);
      if (v26 > a2)
      {
        v27(v20, v7);
        a1 = v42;
      }
      else
      {
        v23(v45, (uint64_t)v20, v7);
        v28 = v46[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v46[0]) & 1) == 0)
        {
          sub_1003D84A8(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v46[0];
        }
        v30 = *(_QWORD *)(v28 + 16);
        v29 = *(_QWORD *)(v28 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1003D84A8(v29 > 1, v30 + 1, 1);
          v28 = v46[0];
        }
        *(_QWORD *)(v28 + 16) = v30 + 1;
        v23((char *)(v28 + v21 + v30 * v22), (uint64_t)v45, v7);
        v46[0] = v28;
        a1 = v42;
        v19 = (uint64_t)v39;
      }
      ++v18;
      v17 = v41;
      if (a1 == v18)
      {
        v40(v19, 1, 1, v7);
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  v19 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v39, 1, 1, v7);
LABEL_23:
  swift_bridgeObjectRelease(v17);
  sub_10002FBF4(v19);
  v37 = *(_QWORD *)(v46[0] + 16);
  swift_release();
  if (v37)
    v38 = v37 > a1;
  else
    v38 = 0;
  return !v38;
}

id sub_100359284(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  Class isa;
  Class v17;
  id v18;
  id v19;
  void (*v20)(char *, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v27;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v27 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v27 - v12;
  v14 = *(void **)(v1 + 24);
  v15 = Date.init()(v11);
  static Date.now.getter(v15);
  Date.init(timeInterval:since:)(v7, -a1);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v17 = Date._bridgeToObjectiveC()().super.isa;
  v27 = 0;
  v18 = objc_msgSend(v14, "fetchCreatedOrCompletedRemindersCountForAppStoreFromDate:toDate:error:", isa, v17, &v27);

  v19 = v27;
  if (v18)
  {
    v20 = *(void (**)(char *, uint64_t))(v4 + 8);
    v21 = v27;
    v20(v10, v3);
    v20(v13, v3);
  }
  else
  {
    v22 = v27;
    _convertNSErrorToError(_:)(v19);

    v24 = swift_willThrow(v23);
    swift_willThrow(v24);
    v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v10, v3);
    v25(v13, v3);
  }
  return v18;
}

uint64_t sub_10035945C(uint64_t a1, char a2, void (*a3)(char *, uint64_t))
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[6];

  v41 = a3;
  v4 = a2 & 1;
  v5 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchTime(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v39 - v19;
  result = sub_100359CCC();
  if ((result & 1) != 0)
  {
    v22 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v40 = static OS_dispatch_queue.main.getter(v22);
    static DispatchTime.now()();
    + infix(_:_:)(v17, 3.0);
    v41 = *(void (**)(char *, uint64_t))(v15 + 8);
    v41(v17, v14);
    v23 = swift_allocObject(&unk_100602C60, 25, 7);
    *(_QWORD *)(v23 + 16) = a1;
    *(_BYTE *)(v23 + 24) = v4;
    aBlock[4] = sub_100359E60;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006378;
    aBlock[3] = &unk_100602C78;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_100005E90();
    v27 = sub_10002A750((uint64_t *)&unk_100640F40);
    v28 = sub_10002D190();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v8, v26);
    v29 = (void *)v40;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v13, v10, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
    return ((uint64_t (*)(char *, uint64_t))v41)(v20, v14);
  }
  else if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (v4)
    {
      if (qword_10063D6A0 != -1)
        swift_once(&qword_10063D6A0, sub_100358AE8);
      v34 = type metadata accessor for Logger(0);
      sub_100012DC4(v34, (uint64_t)qword_1006569D8);
      v31 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v32 = "TTRIAppStoreProvider: Prompted user for App Store review after completing a reminder";
      v33 = 84;
    }
    else
    {
      if (qword_10063D6A0 != -1)
        swift_once(&qword_10063D6A0, sub_100358AE8);
      v30 = type metadata accessor for Logger(0);
      sub_100012DC4(v30, (uint64_t)qword_1006569D8);
      v31 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v32 = "TTRIAppStoreProvider: Prompted user for App Store review after creating a reminder";
      v33 = 82;
    }
    sub_1000143B4((uint64_t)v32, v33, 2, v31);
    swift_bridgeObjectRelease(v31);
    v35 = (void *)objc_opt_self(SKStoreReviewController);
    static Date.now.getter(objc_msgSend(v35, "requestReviewInScene:", v41));
    v36 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 0, 1, v36);
    swift_beginAccess(a1 + 32, aBlock, 33, 0);
    v37 = *(_QWORD *)(a1 + 56);
    v38 = *(_QWORD *)(a1 + 64);
    sub_100028D48(a1 + 32, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 40))(v7, v37, v38);
    result = swift_endAccess(aBlock);
    *(_BYTE *)(a1 + 16) = 0;
  }
  return result;
}

uint64_t sub_100359890(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_10063D6A0 != -1)
    swift_once(&qword_10063D6A0, sub_100358AE8);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100012DC4(v3, (uint64_t)qword_1006569D8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRIAppStoreProvider: Delay showing the App Store review prompt due to user active editing", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return sub_100357F3C(a2 & 1);
}

uint64_t sub_100359978()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release();
  sub_100027F10((_QWORD *)(v0 + 96));
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t type metadata accessor for TTRIAppStoreProvider()
{
  return objc_opt_self(_TtC9Reminders20TTRIAppStoreProvider);
}

void sub_1003599DC()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[5];

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "connectedScenes");

  v2 = sub_100005ED8(0, &qword_100651F50, UIScene_ptr);
  v3 = sub_100359E7C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.makeIterator()(v6);
    v5 = Set.Iterator.init(_cocoa:)(v28, v7, v2, v3);
    v4 = v28[0];
    v25 = v28[1];
    v8 = v28[2];
    v9 = v28[3];
    v10 = v28[4];
  }
  else
  {
    v9 = 0;
    v11 = -1 << *(_BYTE *)(v4 + 32);
    v25 = v4 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v4 + 56);
  }
  v14 = (unint64_t)(v8 + 64) >> 6;
  while (v4 < 0)
  {
    v18 = __CocoaSet.Iterator.next()(v5);
    if (!v18)
      goto LABEL_35;
    v19 = v18;
    v26 = v18;
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v2, 7);
    v20 = v27;
    swift_unknownObjectRelease(v19);
    v17 = v9;
    v15 = v10;
    if (!v20)
      goto LABEL_35;
LABEL_33:
    if (!objc_msgSend(v20, "activationState"))
    {
      v24 = objc_opt_self(UIWindowScene);
      if (swift_dynamicCastObjCClass(v20, v24))
        goto LABEL_35;
    }

    v9 = v17;
    v10 = v15;
  }
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
LABEL_32:
    v20 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_35;
    goto LABEL_33;
  }
  v21 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v21 >= v14)
      goto LABEL_35;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    v17 = v9 + 1;
    if (!v22)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v14)
        goto LABEL_35;
      v22 = *(_QWORD *)(v25 + 8 * v17);
      if (!v22)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v14)
          goto LABEL_35;
        v22 = *(_QWORD *)(v25 + 8 * v17);
        if (!v22)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v14)
            goto LABEL_35;
          v22 = *(_QWORD *)(v25 + 8 * v17);
          if (!v22)
          {
            v23 = v9 + 5;
            while (v14 != v23)
            {
              v22 = *(_QWORD *)(v25 + 8 * v23++);
              if (v22)
              {
                v17 = v23 - 1;
                goto LABEL_31;
              }
            }
LABEL_35:
            sub_10003E410(v4);
            return;
          }
        }
      }
    }
LABEL_31:
    v15 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v17 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

BOOL sub_100359CCC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;

  sub_1003599DC();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "keyWindow");
    if (v2)
    {
      v3 = v2;
      v4 = UIResponder.firstResponder.getter();

      if (v4)
      {
        v5 = type metadata accessor for TTRIRootViewController();
        v6 = swift_dynamicCastClass(v4, v5) == 0;
        goto LABEL_11;
      }
    }
    else
    {

    }
  }
  if (qword_10063D6A0 != -1)
    swift_once(&qword_10063D6A0, sub_100358AE8);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100012DC4(v7, (uint64_t)qword_1006569D8);
  v4 = Logger.logObject.getter(v8);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v9, "TTRIAppStoreProvider: Can't determine if user is actively editing a reminder.", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v6 = 0;
LABEL_11:

  return v6;
}

uint64_t sub_100359E00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100359E2C()
{
  uint64_t v0;

  return sub_10035945C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(char *, uint64_t))(v0 + 32));
}

uint64_t sub_100359E3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100359E60()
{
  uint64_t v0;

  return sub_100359890(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_100359E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100651F58;
  if (!qword_100651F58)
  {
    v1 = sub_100005ED8(255, &qword_100651F50, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100651F58);
  }
  return result;
}

uint64_t type metadata accessor for TTRIGroupDetailRouter()
{
  return objc_opt_self(_TtC9Reminders21TTRIGroupDetailRouter);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarRouter()
{
  return objc_opt_self(_TtC9Reminders36TTRIRemindersListNavigationBarRouter);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100359F70 + 4 * byte_10052F185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100359FA4 + 4 * byte_10052F180[v4]))();
}

uint64_t sub_100359FA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100359FAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100359FB4);
  return result;
}

uint64_t sub_100359FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100359FC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100359FCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100359FD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailPresentationStyle()
{
  return &type metadata for TTRIListDetailPresentationStyle;
}

unint64_t sub_100359FF4()
{
  unint64_t result;

  result = qword_100656C08;
  if (!qword_100656C08)
  {
    result = swift_getWitnessTable(&unk_10052F230, &type metadata for TTRIListDetailPresentationStyle);
    atomic_store(result, (unint64_t *)&qword_100656C08);
  }
  return result;
}

uint64_t sub_10035A038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  NSString v6;
  id v7;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  Class isa;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  id v31;

  if (a2)
  {
    v5 = (void *)objc_opt_self(CNContact);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "predicateForContactsMatchingEmailAddress:", v6);
  }
  else
  {
    if (!a4)
      return 0;
    v9 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain(a4);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v6 = objc_msgSend(v9, "initWithStringValue:", v10);

    v7 = objc_msgSend((id)objc_opt_self(CNContact), "predicateForContactsMatchingPhoneNumber:", v6);
  }
  v11 = v7;

  v12 = *(void **)(v4 + 32);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v14 = Strong;
    v15 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v16 = (_QWORD *)swift_allocObject(v15, 48, 7);
    *((_OWORD *)v16 + 1) = xmmword_10051FF90;
    v16[4] = objc_msgSend((id)objc_opt_self(CNContactViewController), "descriptorForRequiredKeys");
    v17 = objc_msgSend((id)objc_opt_self(CNAvatarView), "descriptorForRequiredKeysWithThreeDTouchEnabled:", 0);
    v16[5] = v17;
    v31 = v16;
    specialized Array._endMutation()(v17);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
  }
  sub_10002A750(&qword_100656CC0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v31 = 0;
  v19 = objc_msgSend(v12, "unifiedContactsMatchingPredicate:keysToFetch:error:", v11, isa, &v31);

  v20 = v31;
  if (!v19)
  {
    v26 = v31;
    v27 = _convertNSErrorToError(_:)(v20);

    swift_willThrow(v28);
    swift_errorRelease(v27);
    return 0;
  }
  v21 = sub_10035A730();
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v21);
  v23 = v20;

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v30 = v22;
    else
      v30 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v24 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v22);
    if (v24)
      goto LABEL_11;
  }
  else
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
    {
LABEL_11:
      if ((v22 & 0xC000000000000001) != 0)
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
      }
      else
      {
        if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          __break(1u);
        v25 = *(id *)(v22 + 32);
      }
      v24 = (uint64_t)v25;
    }
  }
  swift_bridgeObjectRelease(v22);

  return v24;
}

uint64_t sub_10035A334()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TTRListSharingContactProvider()
{
  return objc_opt_self(_TtC9Reminders29TTRListSharingContactProvider);
}

id sub_10035A380(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class v28;
  NSString v29;
  NSString v30;
  _BYTE v32[16];
  _BYTE v33[16];
  _BYTE v34[16];
  _BYTE v35[16];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];

  v2 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "init");
  sub_10035A6E8(a1 + 72, (uint64_t)v35);
  sub_10035A6E8((uint64_t)v35, (uint64_t)v36);
  if (v36[1])
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelWork);
    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_allocWithZone((Class)CNLabeledValue);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    v8 = objc_msgSend(v6, "initWithLabel:value:", v7, v5);

    v9 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100521140;
    *(_QWORD *)(v10 + 32) = v8;
    v39[0] = v10;
    specialized Array._endMutation()(v10);
    v11 = v39[0];
    v12 = v8;
    sub_10002A750(&qword_100656CB8);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v2, "setEmailAddresses:", isa);

  }
  v14 = *(_QWORD *)(a1 + 96);
  if (v14)
  {
    v15 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain(v14);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v17 = objc_msgSend(v15, "initWithStringValue:", v16);

    static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelHome);
    v19 = v18;
    v20 = objc_allocWithZone((Class)CNLabeledValue);
    v21 = v17;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v23 = objc_msgSend(v20, "initWithLabel:value:", v22, v21);

    v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100521140;
    *(_QWORD *)(v25 + 32) = v23;
    v39[0] = v25;
    specialized Array._endMutation()(v25);
    v26 = v39[0];
    v27 = v23;
    sub_10002A750(&qword_100656CB8);
    v28 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v2, "setPhoneNumbers:", v28);

  }
  sub_10035A6E8(a1 + 24, (uint64_t)v34);
  sub_10035A6E8((uint64_t)v34, (uint64_t)v37);
  if (v37[1] || (sub_10035A6E8(a1 + 8, (uint64_t)v33), sub_10035A6E8((uint64_t)v33, (uint64_t)v38), v38[1]))
  {
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setGivenName:", v29);

  }
  sub_10035A6E8(a1 + 40, (uint64_t)v32);
  sub_10035A6E8((uint64_t)v32, (uint64_t)v39);
  if (v39[1])
  {
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setFamilyName:", v30);

  }
  return v2;
}

uint64_t sub_10035A6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100646428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10035A730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100642228;
  if (!qword_100642228)
  {
    v1 = objc_opt_self(CNContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100642228);
  }
  return result;
}

void sub_10035A76C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;

  v1 = v0;
  v56 = *v0;
  v2 = sub_10002A750(&qword_100641980);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100656DA8);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100656DB0);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100656DB8);
  v54 = *(_QWORD *)(v15 - 8);
  v55 = v15;
  __chkstk_darwin(v15);
  v51 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v0[8];
  if (v17)
  {
    v0[8] = 0;
    swift_release(v17);
    if (qword_10063D6A8 != -1)
      swift_once(&qword_10063D6A8, sub_10000758C);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100012DC4(v18, (uint64_t)qword_100656CC8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = v1;
      v23 = v11;
      v24 = v4;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Application visibility change handler did tear down subscription for timeout", v25, 2u);
      v26 = v25;
      v4 = v24;
      v11 = v23;
      v1 = v22;
      swift_slowDealloc(v26, -1, -1);
    }

  }
  v27 = Just.init(_:)();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v27, 20.0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v28 = v11;
  v50 = v8;
  v57 = (id)v1[7];
  v29 = v57;
  v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
  v31 = sub_10002CDD8();
  v32 = sub_100023FEC(&qword_100656DC0, &qword_100656DB0, (uint64_t)&protocol conformance descriptor for Just<A>);
  v33 = sub_10008A95C();
  v34 = v14;
  v49 = v9;
  v35 = v33;
  v36 = v29;
  v37 = v51;
  v38 = v53;
  Publisher.delay<A>(for:tolerance:scheduler:options:)(v28, v7, &v57, v4, v53, v31, v32, v35);
  sub_1000073A0((uint64_t)v4, &qword_100641980);

  sub_1000073A0((uint64_t)v7, &qword_100656DA8);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v38);
  v39 = sub_100023FEC(&qword_100656DC8, &qword_100656DB8, (uint64_t)&protocol conformance descriptor for Publishers.Delay<A, B>);
  v40 = v55;
  v41 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)(v1, sub_10035ABF0, 0, 0, 0, v55, v56, v39);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v40);
  v42 = v1[8];
  v1[8] = v41;
  swift_release(v42);
  if (qword_10063D6A8 != -1)
    swift_once(&qword_10063D6A8, sub_10000758C);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100012DC4(v43, (uint64_t)qword_100656CC8);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Application visibility change handler did set up subscription for timeout", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }

}

void sub_10035ABF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(a1 + 56);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
    sub_100012E1C(0, 0);
  else
    __break(1u);
}

uint64_t sub_10035ACB0()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release();
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_10035ACEC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035AD10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for TTRIShowRemindersChromelessBarStates(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersChromelessBarStates(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10035AE14 + 4 * byte_10052F375[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10035AE48 + 4 * byte_10052F370[v4]))();
}

uint64_t sub_10035AE48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10035AE50(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10035AE58);
  return result;
}

uint64_t sub_10035AE64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10035AE6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10035AE70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10035AE78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersChromelessBarStates()
{
  return &type metadata for TTRIShowRemindersChromelessBarStates;
}

uint64_t destroy for TTRIShowRemindersDeferredItemUpdates(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 49) <= 2u)
    return sub_100027F10((_QWORD *)(result + 8));
  return result;
}

uint64_t initializeWithCopy for TTRIShowRemindersDeferredItemUpdates(uint64_t a1, char *a2)
{
  _OWORD *v4;
  char v5;
  _OWORD *v6;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *a2;
  v4 = a2 + 8;
  *(_BYTE *)a1 = v5;
  v6 = (_OWORD *)(a1 + 8);
  v7 = a2[49];
  if (v7 == 2)
  {
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v6, v4);
    *(_BYTE *)(a1 + 49) = 2;
  }
  else if (v7 == 1)
  {
    v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v6, v4);
    *(_BYTE *)(a1 + 48) = a2[48];
    *(_BYTE *)(a1 + 49) = 1;
  }
  else if (a2[49])
  {
    v11 = v4[1];
    *v6 = *v4;
    v6[1] = v11;
    *(_OWORD *)((char *)v6 + 26) = *(_OWORD *)((char *)v4 + 26);
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v4);
    *(_BYTE *)(a1 + 49) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for TTRIShowRemindersDeferredItemUpdates(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  if (a1 != a2)
  {
    v5 = (__int128 *)(a2 + 8);
    sub_10029A208((_QWORD *)(a1 + 8));
    v6 = *(unsigned __int8 *)(a2 + 49);
    if (v6 == 2)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(_OWORD *, __int128 *))(v8 - 8))(v3, v5);
      *(_BYTE *)(a1 + 49) = 2;
    }
    else if (v6 == 1)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(_OWORD *, __int128 *))(v9 - 8))(v3, v5);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_BYTE *)(a1 + 49) = 1;
    }
    else if (*(_BYTE *)(a2 + 49))
    {
      v10 = *v5;
      v11 = v5[1];
      *(_OWORD *)((char *)v3 + 26) = *(__int128 *)((char *)v5 + 26);
      *v3 = v10;
      v3[1] = v11;
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(_OWORD *, __int128 *))(v7 - 8))(v3, v5);
      *(_BYTE *)(a1 + 49) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for TTRIAccountsListsViewUpdates(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRIShowRemindersDeferredItemUpdates(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (a1 != a2)
  {
    sub_10029A208((_QWORD *)(a1 + 8));
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 34) = *(_OWORD *)(a2 + 34);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIShowRemindersDeferredItemUpdates(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[50])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersDeferredItemUpdates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 50) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersDeferredItemUpdates()
{
  return &type metadata for TTRIShowRemindersDeferredItemUpdates;
}

_QWORD *destroy for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(_QWORD *a1)
{
  unsigned int v1;

  v1 = *((unsigned __int8 *)a1 + 41);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 <= 2)
    return (_QWORD *)sub_100027F10(a1);
  return a1;
}

uint64_t initializeWithCopy for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(unsigned __int8 *)(a2 + 41);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_BYTE *)(a1 + 41) = 2;
  }
  else if (v4 == 1)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_BYTE *)(a1 + 41) = 1;
  }
  else if (v4)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 41) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 41);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 <= 2)
      sub_100027F10((_QWORD *)a1);
    v5 = *((unsigned __int8 *)a2 + 41);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 41) = 2;
    }
    else if (v5 == 1)
    {
      v8 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v8 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      *(_BYTE *)(a1 + 41) = 1;
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 26) = *(__int128 *)((char *)a2 + 26);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 41) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 41);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 <= 2)
      sub_100027F10((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 41);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 41) = 2;
    }
    else if (v5 == 1)
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      *(_BYTE *)(a1 + 41) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 41) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 41);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 26) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = -(char)a2;
  }
  return result;
}

uint64_t sub_10035B534(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 41);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_10035B550(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 41) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction()
{
  return &type metadata for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction;
}

BOOL sub_10035B588(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersChromelessBarStates.ToolbarChromelessState()
{
  return &type metadata for TTRIShowRemindersChromelessBarStates.ToolbarChromelessState;
}

uint64_t _s9Reminders36TTRIShowRemindersChromelessBarStatesV28NavigationBarChromelessStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10035B610 + 4 * byte_10052F37F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10035B644 + 4 * byte_10052F37A[v4]))();
}

uint64_t sub_10035B644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035B64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10035B654);
  return result;
}

uint64_t sub_10035B660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10035B668);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10035B66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035B674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersChromelessBarStates.NavigationBarChromelessState()
{
  return &type metadata for TTRIShowRemindersChromelessBarStates.NavigationBarChromelessState;
}

unint64_t sub_10035B694()
{
  unint64_t result;

  result = qword_100656DD0;
  if (!qword_100656DD0)
  {
    result = swift_getWitnessTable(&unk_10052F540, &type metadata for TTRIShowRemindersChromelessBarStates.NavigationBarChromelessState);
    atomic_store(result, (unint64_t *)&qword_100656DD0);
  }
  return result;
}

unint64_t sub_10035B6DC()
{
  unint64_t result;

  result = qword_100656DD8;
  if (!qword_100656DD8)
  {
    result = swift_getWitnessTable(&unk_10052F5A8, &type metadata for TTRIShowRemindersChromelessBarStates.ToolbarChromelessState);
    atomic_store(result, (unint64_t *)&qword_100656DD8);
  }
  return result;
}

uint64_t AnyListEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001DD7E4(v1, a1);
}

uint64_t AnyListEntity.name.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for AnyListEntity(0) + 20));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t type metadata accessor for AnyListEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_100656EB8;
  if (!qword_100656EB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnyListEntity);
  return result;
}

uint64_t AnyListEntity.listBadge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AnyListEntity(0);
  return sub_10000735C(v1 + *(int *)(v3 + 24), a1, &qword_100656DE0);
}

uint64_t AnyListEntity.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AnyListEntity(0);
  return sub_10000735C(v1 + *(int *)(v3 + 28), a1, &qword_100656DE8);
}

uint64_t AnyListEntity.supportsListAppearance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AnyListEntity(0) + 32));
}

uint64_t AnyListEntity.init(id:name:listBadge:color:supportsListAppearance:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v46 = a5;
  v13 = type metadata accessor for AnyListEntityLazyImage.Parameters(0);
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SmartListType(0);
  v44 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  __chkstk_darwin(v16);
  v43 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001DD7E4(a1, a7);
  v21 = (int *)type metadata accessor for AnyListEntity(0);
  v22 = (_QWORD *)(a7 + v21[5]);
  *v22 = a2;
  v22[1] = a3;
  v23 = a4;
  v24 = v46;
  v25 = a7 + v21[6];
  v48 = v23;
  sub_10000735C(v23, v25, &qword_100656DE0);
  sub_10000735C(v24, a7 + v21[7], &qword_100656DE8);
  v26 = v21[8];
  v47 = a7;
  *(_BYTE *)(a7 + v26) = a6;
  v51 = a1;
  sub_1001DD7E4(a1, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v18);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v28 = (int *)sub_10002A750(&qword_100656DF0);
      v29 = (uint64_t)&v15[v28[12]];
      v30 = (uint64_t)&v15[v28[16]];
      v31 = v28[20];
      *v15 = 1;
    }
    else
    {
      v38 = (int *)sub_10002A750(&qword_100656DF0);
      v29 = (uint64_t)&v15[v38[12]];
      v30 = (uint64_t)&v15[v38[16]];
      v31 = v38[20];
      *v15 = 0;
    }
    v39 = v48;
    sub_10000735C(v48, v29, &qword_100656DE0);
    sub_10000735C(v24, v30, &qword_100656DE8);
    v15[v31] = a6;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v49 + 104))(v15, enum case for AnyListEntityLazyImage.Parameters.list(_:), v50);
    v40 = type metadata accessor for AnyListEntityLazyImage(0);
    swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
    v41 = AnyListEntityLazyImage.init(for:)(v15);
    sub_1000073A0(v24, &qword_100656DE8);
    sub_1000073A0(v39, &qword_100656DE0);
    sub_1001DEF54(v51);
    *(_QWORD *)(v47 + v21[9]) = v41;
    return sub_1001DEF54((uint64_t)v20);
  }
  else
  {
    v33 = v43;
    v32 = v44;
    v34 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v20, v45);
    (*(void (**)(_BYTE *, char *, uint64_t))(v32 + 16))(v15, v33, v34);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v49 + 104))(v15, enum case for AnyListEntityLazyImage.Parameters.smartList(_:), v50);
    v35 = type metadata accessor for AnyListEntityLazyImage(0);
    swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
    v36 = AnyListEntityLazyImage.init(for:)(v15);
    sub_1000073A0(v24, &qword_100656DE8);
    sub_1000073A0(v48, &qword_100656DE0);
    sub_1001DEF54(v51);
    result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    *(_QWORD *)(v47 + v21[9]) = v36;
  }
  return result;
}

uint64_t sub_10035BB98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v0 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v0);
  v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100012DDC(v17, static AnyListEntity.typeDisplayRepresentation);
  sub_100012DC4(v17, (uint64_t)static AnyListEntity.typeDisplayRepresentation);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100576110);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v20[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "AppIntents entity type display representation for Any List Entity", 65, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v2);
}

uint64_t AnyListEntity.typeDisplayRepresentation.unsafeMutableAddressor(double a1)
{
  uint64_t v1;

  if (qword_10063D6B0 != -1)
    swift_once(&qword_10063D6B0, sub_10035BB98);
  v1 = type metadata accessor for TypeDisplayRepresentation(0, a1);
  return sub_100012DC4(v1, (uint64_t)static AnyListEntity.typeDisplayRepresentation);
}

uint64_t static AnyListEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  if (qword_10063D6B0 != -1)
    swift_once(&qword_10063D6B0, sub_10035BB98);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_100012DC4(v3, (uint64_t)static AnyListEntity.typeDisplayRepresentation);
  v5 = swift_beginAccess(v4, v7, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3, v5);
}

uint64_t static AnyListEntity.typeDisplayRepresentation.setter(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE v8[24];

  if (qword_10063D6B0 != -1)
    swift_once(&qword_10063D6B0, sub_10035BB98);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_100012DC4(v3, (uint64_t)static AnyListEntity.typeDisplayRepresentation);
  v5 = swift_beginAccess(v4, v8, 33, 0);
  v6 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 24))(v4, a1, v3, v5);
  swift_endAccess(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v3);
}

uint64_t (*static AnyListEntity.typeDisplayRepresentation.modify(uint64_t a1, double a2))(_QWORD)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10063D6B0 != -1)
    swift_once(&qword_10063D6B0, sub_10035BB98);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_100012DC4(v3, (uint64_t)static AnyListEntity.typeDisplayRepresentation);
  swift_beginAccess(v4, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

uint64_t AnyListEntity.displayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v0 = sub_10002A750(&qword_10063D8E8);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10002A750(&qword_100656DF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - v7;
  v9 = type metadata accessor for LocalizedStringResource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v17 - v14;
  sub_10035C164();
  type metadata accessor for AnyListEntity(0);
  AnyListEntityLazyImage.displayRepresentationImage.getter();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v2, 1, 1, v9);
  sub_10000735C((uint64_t)v8, (uint64_t)v5, &qword_100656DF8);
  DisplayRepresentation.init(title:subtitle:image:)(v12, v2, v5);
  sub_1000073A0((uint64_t)v8, &qword_100656DF8);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_10035C164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - v6;
  v8 = type metadata accessor for SmartListType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001DD7E4(v1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12))
  {
    sub_1001DEF54((uint64_t)v14);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
    v16 = *(Swift::String *)(v1 + *(int *)(type metadata accessor for AnyListEntity(0) + 20));
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
    return LocalizedStringResource.init(stringInterpolation:)(v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    v20 = (void *)SmartListType.remSmartListType.getter();
    v21 = REMSmartListType.title.getter(v20);
    v23 = v22;

    if (v23)
      v24 = v21;
    else
      v24 = 0;
    if (v23)
      v25 = v23;
    else
      v25 = 0xE000000000000000;
    v26 = v25;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v24);
    swift_bridgeObjectRelease(v25);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
    LocalizedStringResource.init(stringInterpolation:)(v7);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_10035C378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _BYTE v4[24];

  if (qword_10063D6B8 != -1)
    swift_once(&qword_10063D6B8, sub_10035C518);
  swift_beginAccess(&static AnyListEntity.defaultQuery, v4, 0, 0);
  v2 = qword_100673888;
  *(_BYTE *)a1 = static AnyListEntity.defaultQuery;
  *(_QWORD *)(a1 + 8) = v2;
  return swift_retain();
}

uint64_t static AnyListEntity.defaultQuery.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  if (qword_10063D6B8 != -1)
    swift_once(&qword_10063D6B8, sub_10035C518);
  swift_beginAccess(&static AnyListEntity.defaultQuery, v2, 0, 0);
  v0 = static AnyListEntity.defaultQuery;
  swift_retain();
  return v0;
}

uint64_t sub_10035C474(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000175C8(&qword_10063D8F8, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10035C4C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000175C8(&qword_100656E38, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10035C518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v12[5];

  v0 = type metadata accessor for AppIntentsDependencyKey(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - v5;
  sub_10002A750(&qword_10063D900);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, enum case for AppIntentsDependencyKey.remStore(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = sub_1000175C8(&qword_10063D908, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey, (uint64_t)&protocol conformance descriptor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)(v12, v3, v0, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  v8 = type metadata accessor for AppDependencyManager(0);
  v9 = static AppDependencyManager.shared.getter(v8);
  result = AppDependency.__allocating_init(key:manager:)(v12, v9);
  static AnyListEntity.defaultQuery = 0;
  qword_100673888 = result;
  return result;
}

char *AnyListEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_10063D6B8 != -1)
    swift_once(&qword_10063D6B8, sub_10035C518);
  return &static AnyListEntity.defaultQuery;
}

double static AnyListEntity.defaultQuery.setter(char a1, uint64_t a2)
{
  double result;
  _BYTE v5[24];

  if (qword_10063D6B8 != -1)
    swift_once(&qword_10063D6B8, sub_10035C518);
  swift_beginAccess(&static AnyListEntity.defaultQuery, v5, 1, 0);
  static AnyListEntity.defaultQuery = a1;
  qword_100673888 = a2;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*static AnyListEntity.defaultQuery.modify(uint64_t a1))(_QWORD)
{
  if (qword_10063D6B8 != -1)
    swift_once(&qword_10063D6B8, sub_10035C518);
  swift_beginAccess(&static AnyListEntity.defaultQuery, a1, 33, 0);
  return j__swift_endAccess_0;
}

uint64_t sub_10035C780()
{
  return sub_1000175C8(&qword_100656E00, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C7AC()
{
  return sub_1000175C8(&qword_100656E08, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C7D8()
{
  return sub_1000175C8(&qword_100656E10, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

unint64_t sub_10035C808()
{
  unint64_t result;

  result = qword_100656E18;
  if (!qword_100656E18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyListEntityQuery, &type metadata for AnyListEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100656E18);
  }
  return result;
}

uint64_t sub_10035C84C()
{
  return sub_1000175C8(&qword_100656E20, type metadata accessor for AnyListEntityID, (uint64_t)&protocol conformance descriptor for AnyListEntityID);
}

uint64_t sub_10035C878()
{
  return sub_1000175C8(&qword_100656E28, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C8A4()
{
  return sub_1000175C8(&qword_100656E30, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C8D0()
{
  return sub_1000175C8(&qword_10064CA48, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C8FC()
{
  return sub_1000175C8(&qword_100656E38, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

uint64_t sub_10035C928()
{
  return sub_1000175C8(&qword_100656E40, type metadata accessor for AnyListEntityID, (uint64_t)&protocol conformance descriptor for AnyListEntityID);
}

unint64_t sub_10035C958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100656E48;
  if (!qword_100656E48)
  {
    v1 = sub_10002CA5C(&qword_100656E50);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100656E48);
  }
  return result;
}

uint64_t sub_10035C9A4()
{
  return sub_1000175C8(&qword_100656E58, type metadata accessor for AnyListEntity, (uint64_t)&protocol conformance descriptor for AnyListEntity);
}

_QWORD *initializeBufferWithCopyOfBuffer for AnyListEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for AnyListEntityID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    v9 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
      v10 = type metadata accessor for UUID(0);
    else
      v10 = type metadata accessor for SmartListType(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    swift_storeEnumTagMultiPayload(a1, v7, v9);
    v12 = a3[5];
    v13 = a3[6];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = type metadata accessor for ListBadgeEntity(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48);
    v22 = swift_bridgeObjectRetain(v16);
    if (v21(v18, 1, v19, v22))
    {
      v23 = sub_10002A750(&qword_100656DE0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for ColorEntity(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_10002A750(&qword_100656DE8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v30 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  }
  swift_retain();
  return a1;
}

double destroy for AnyListEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v4 = type metadata accessor for AnyListEntityID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for UUID(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_7;
    v6 = type metadata accessor for SmartListType(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
LABEL_7:
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  v7 = a1 + a2[6];
  v8 = type metadata accessor for ListBadgeEntity(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for ColorEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for AnyListEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for AnyListEntityID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    v9 = type metadata accessor for UUID(0);
  else
    v9 = type metadata accessor for SmartListType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  swift_storeEnumTagMultiPayload(a1, v6, v8);
  v10 = a3[5];
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v10);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (void *)(a1 + v11);
  v16 = (const void *)(a2 + v11);
  v17 = type metadata accessor for ListBadgeEntity(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v18 + 48);
  v20 = swift_bridgeObjectRetain(v14);
  if (v19(v16, 1, v17, v20))
  {
    v21 = sub_10002A750(&qword_100656DE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v22 = a3[7];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = type metadata accessor for ColorEntity(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_10002A750(&qword_100656DE8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AnyListEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_1001DEF54(a1);
    v6 = type metadata accessor for AnyListEntityID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    v8 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
      v9 = type metadata accessor for UUID(0);
    else
      v9 = type metadata accessor for SmartListType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, v6, v8);
  }
  v10 = a3[5];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v13 = v12[1];
  v14 = v11[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = type metadata accessor for ListBadgeEntity(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = sub_10002A750(&qword_100656DE0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = a3[7];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = type metadata accessor for ColorEntity(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v32 = sub_10002A750(&qword_100656DE8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_19:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AnyListEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for AnyListEntityID(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  v8 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    v9 = type metadata accessor for UUID(0);
  else
    v9 = type metadata accessor for SmartListType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  swift_storeEnumTagMultiPayload(a1, v6, v8);
  v10 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = type metadata accessor for ListBadgeEntity(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_10002A750(&qword_100656DE0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for ColorEntity(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_10002A750(&qword_100656DE8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  return a1;
}

uint64_t assignWithTake for AnyListEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  if (a1 != a2)
  {
    sub_1001DEF54(a1);
    v6 = type metadata accessor for AnyListEntityID(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    v8 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
      v9 = type metadata accessor for UUID(0);
    else
      v9 = type metadata accessor for SmartListType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, v6, v8);
  }
  v10 = a3[5];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  v15 = v11[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease(v15);
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = type metadata accessor for ListBadgeEntity(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = sub_10002A750(&qword_100656DE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  v25 = a3[7];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = type metadata accessor for ColorEntity(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v33 = sub_10002A750(&qword_100656DE8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_19:
  v34 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyListEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035D5E4);
}

uint64_t sub_10035D5E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for AnyListEntityID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_10002A750(&qword_100656DE0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_10002A750(&qword_100656DE8);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[7];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyListEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035D6C8);
}

uint64_t sub_10035D6C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for AnyListEntityID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_10002A750(&qword_100656DE0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_10002A750(&qword_100656DE8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10035D79C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v2 = type metadata accessor for AnyListEntityID(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_10052F7E0;
    sub_100005494(319, &qword_100656EC8, (uint64_t (*)(uint64_t))&type metadata accessor for ListBadgeEntity);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100005494(319, (unint64_t *)&unk_100656ED0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorEntity);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_10052F7F8;
        v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
        swift_initStructMetadata(a1, 256, 6, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10035D87C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[40];

  v4 = sub_10002A750(&qword_100656DE8);
  __chkstk_darwin(v4);
  v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v51 = (char *)&v46 - v7;
  v8 = sub_10002A750(&qword_100656DE0);
  __chkstk_darwin(v8);
  v50 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v54 = (uint64_t)&v46 - v11;
  v12 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v12);
  v49 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - v15;
  v17 = a1[3];
  v18 = a1[4];
  sub_10001413C(a1, v17);
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  v20 = objc_msgSend(v19, "entityName");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = objc_msgSend((id)objc_opt_self(REMSmartList), "cdEntityName");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v53 = a2;
  if (v21 == v25 && v23 == v27)
  {
    v28 = 2;
    swift_bridgeObjectRelease_n(v23, 2);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v27);
    if ((v29 & 1) != 0)
      v28 = 2;
    else
      v28 = 1;
  }
  v48 = v19;
  v30 = objc_msgSend(v19, "uuid");
  v31 = (uint64_t)v16;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

  swift_storeEnumTagMultiPayload(v16, v12, v28);
  sub_100010634((uint64_t)a1, (uint64_t)v55);
  v32 = v54;
  ListBadgeEntity.init(list:)(v55);
  sub_100010634((uint64_t)a1, (uint64_t)v55);
  v33 = (uint64_t)v51;
  ColorEntity.init(list:)(v55);
  v34 = v49;
  sub_1001DD7E4(v31, v49);
  v35 = a1[3];
  v36 = a1[4];
  sub_10001413C(a1, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 32))(v35, v36);
  v47 = v38;
  v39 = v32;
  v40 = v50;
  sub_10000735C(v39, v50, &qword_100656DE0);
  v41 = v52;
  sub_10000735C(v33, v52, &qword_100656DE8);
  v42 = a1[3];
  v43 = a1[4];
  sub_10001413C(a1, v42);
  v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 64))(v42, v43);
  LOBYTE(v42) = objc_msgSend(v44, "supportsListAppearance");

  AnyListEntity.init(id:name:listBadge:color:supportsListAppearance:)(v34, v37, v47, v40, v41, v42, v53);
  sub_1000073A0(v33, &qword_100656DE8);
  sub_1000073A0(v54, &qword_100656DE0);
  sub_1001DEF54(v31);
  return sub_100027F10(a1);
}

uint64_t sub_10035DC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100656F10);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100656F10);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10035DCC4(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v4)(_QWORD *);
  id v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  _BYTE v28[56];
  id v29[7];

  sub_10035E410((uint64_t)a1, (uint64_t)v28);
  sub_10035E410((uint64_t)v28, (uint64_t)v29);
  if (v29[0])
  {
    v4 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)a2 + 160);
    v5 = v29[0];
    v6 = sub_10035E44C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B02B0);
    v7 = v4(v6);
    v8 = v5;
    sub_10035E024(v7, (uint64_t)v8);
    v10 = v9;
    swift_bridgeObjectRelease(v7);

    if (v10)
    {
      (*(void (**)(void *))(*(_QWORD *)a2 + 192))(v10);

      sub_10035E44C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B0308);
    }
    else
    {
      if (qword_10063D6C0 != -1)
        swift_once(&qword_10063D6C0, sub_10035DC34);
      v16 = type metadata accessor for Logger(0);
      sub_100012DC4(v16, (uint64_t)qword_100656F10);
      v17 = v8;
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(12, -1);
        v21 = swift_slowAlloc(32, -1);
        v27[0] = v21;
        *(_DWORD *)v20 = 136446210;
        v22 = objc_msgSend(v17, "stringRepresentation");
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        v26 = sub_100027E40(v23, v25, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v20 + 4, v20 + 12);

        swift_bridgeObjectRelease(v25);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Given account in the upgrade info is no longer eligible for migration currently. Giving up. {accountID: %{public}s}", v20, 0xCu);
        swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        sub_10035E44C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B0308);
      }
      else
      {

        sub_10035E44C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B0308);
      }
    }
  }
  else
  {
    if (qword_10063D6C0 != -1)
      swift_once(&qword_10063D6C0, sub_10035DC34);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100012DC4(v11, (uint64_t)qword_100656F10);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Given upgrade info has no eligible CalDav account ID for upgrade. Giving up.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

uint64_t type metadata accessor for TTRWelcomeNavigationInteractor()
{
  return objc_opt_self(_TtC9Reminders30TTRWelcomeNavigationInteractor);
}

void sub_10035E024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * i);
    sub_10005789C();
    v16 = v15;
    if ((static NSObject.== infix(_:_:)(v16, a2) & 1) != 0)
    {
LABEL_23:
      swift_release();
      return;
    }

    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_23;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_23;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v8)
              goto LABEL_23;
            v13 = *(_QWORD *)(v4 + 8 * v14);
            v9 = v14;
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v4 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

double sub_10035E1C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double result;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = TTRCloudKitMigrationManager.shared.unsafeMutableAddressor(v10);
  v12 = *(_QWORD *)v11;
  v21 = *(_QWORD *)(*(_QWORD *)v11 + 24);
  v13 = swift_allocObject(&unk_100603268, 80, 7);
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v13 + 72) = v12;
  aBlock[4] = sub_10035E404;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_100603280;
  v15 = _Block_copy(aBlock);
  swift_retain_n(v12, 2);
  v16 = sub_10035E44C((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000B02B0);
  static DispatchQoS.unspecified.getter(v16);
  v22 = _swiftEmptyArrayStorage;
  v17 = sub_100005E90();
  v18 = sub_10002A750((uint64_t *)&unk_100640F40);
  v19 = sub_10002D190();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10035E3B4()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if (v1)
  {

    swift_bridgeObjectRelease(v0[4]);
    swift_bridgeObjectRelease(v0[6]);
    swift_bridgeObjectRelease(v0[7]);
    swift_bridgeObjectRelease(v0[8]);
  }
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void sub_10035E404()
{
  uint64_t v0;

  sub_10035DCC4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 72));
}

uint64_t sub_10035E410(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIRemindersListCompletedCellContentConfiguration(a2, a1);
  return a2;
}

_QWORD *sub_10035E44C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint8_t *sub_10035E484(uint64_t a1)
{
  uint8_t *result;
  uint8_t *v3;

  result = (uint8_t *)swift_unknownObjectWeakLoadStrong(a1 + 32);
  if (result)
  {
    v3 = result;
    sub_10035E624(a1, result);
    return (uint8_t *)swift_unknownObjectRelease(v3);
  }
  return result;
}

void sub_10035E4CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  _QWORD v10[6];

  v2 = v1;
  sub_10035E1C4(a1);
  v4 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v3);
  v5 = static TTRUserDefaults.WelcomeScreenVersion.current.getter();
  TTRUserDefaults.lastSeenWelcomeScreenVersion.setter(v5);

  v6 = sub_10001413C((_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 96));
  Strong = swift_unknownObjectWeakLoadStrong(*v6 + 16);
  if (Strong)
  {
    v8 = (void *)Strong;
    v10[4] = sub_1001EAA38;
    v10[5] = v2;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100006378;
    v10[3] = &unk_100603320;
    v9 = _Block_copy(v10);
    swift_retain_n(v2, 2);
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, v9, swift_release().n128_f64[0]);
    _Block_release(v9);
    swift_release();

  }
}

uint64_t sub_10035E5C0()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  sub_10009DDA8(*(id *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  sub_100027F10((_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for TTRIWelcomeNavigationPresenter()
{
  return objc_opt_self(_TtC9Reminders30TTRIWelcomeNavigationPresenter);
}

uint64_t sub_10035E624(uint64_t a1, uint8_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint8_t *, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint8_t *v36;
  os_log_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for REMNavigationSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  __chkstk_darwin(v11);
  v13 = (uint8_t *)&v36 - v12;
  if ((unint64_t)(*(_QWORD *)(a1 + 48) - 1) <= 1)
  {
    v14 = sub_1000578D8();
    v15 = sub_100057BD0(v14);
    swift_bridgeObjectRelease(v14);
    if (v15)
    {
      v16 = (char *)&v13[*(int *)(sub_10002A750((uint64_t *)&unk_100665610) + 48)];
      v39 = v15;
      *(_QWORD *)v13 = -[NSObject objectID](v15, "objectID");
      v17 = enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:);
      v18 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
      (*(void (**)(uint8_t *, _QWORD, uint64_t))(v5 + 104))(v13, enum case for REMNavigationSpecifier.list(_:), v4);
      if (qword_10063D5A8 != -1)
        swift_once(&qword_10063D5A8, sub_100267130);
      v19 = type metadata accessor for Logger(0);
      sub_100012DC4(v19, (uint64_t)qword_100652FF0);
      v20 = *(uint64_t (**)(char *, uint8_t *, uint64_t))(v5 + 16);
      v21 = v20(v10, v13, v4);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc(12, -1);
        v37 = v22;
        v25 = (uint8_t *)v24;
        v38 = swift_slowAlloc(32, -1);
        v41 = v38;
        *(_DWORD *)v25 = 136446210;
        v36 = v25 + 4;
        v20(v7, (uint8_t *)v10, v4);
        v26 = String.init<A>(describing:)(v7, v4);
        v28 = v27;
        v40 = sub_100027E40(v26, v27, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v36, v25 + 12);
        v29 = swift_bridgeObjectRelease(v28);
        v30 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
        v30(v10, v4, v29);
        v31 = v37;
        _os_log_impl((void *)&_mh_execute_header, v37, v23, "Performing post-welcome navigation {navigationSpecifier: %{public}s}", v25, 0xCu);
        v32 = v38;
        swift_arrayDestroy(v38, 1, &type metadata for Any[8]);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v25, -1, -1);

      }
      else
      {
        v30 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
        ((void (*)(char *, uint64_t))v30)(v10, v4);

      }
      __chkstk_darwin(v33);
      *(&v36 - 4) = v13;
      *(&v36 - 3) = a2;
      *(&v36 - 2) = 0;
      firstly<A>(closure:)(sub_100286890, &v36 - 6, &type metadata for Any[8]);

      v34 = swift_release();
      v30((char *)v13, v4, v34);
    }
  }
  return sub_10002F41C();
}

uint64_t sub_10035E988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100657088);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100657088);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10035EA18(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders26TTRIWhatsNewViewController____lazy_storage___continueButton] = 0;
  v5 = &v2[OBJC_IVAR____TtC9Reminders26TTRIWhatsNewViewController_presenter];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = &off_1005F7CC0;
  swift_retain(a1);
  v6._countAndFlagsBits = 0x100000000000001CLL;
  v7._object = (void *)0x8000000100576250;
  v8._object = (void *)0x8000000100576270;
  v6._object = (void *)0x8000000100576290;
  v7._countAndFlagsBits = 0xD000000000000016;
  v8._countAndFlagsBits = 0x1000000000000019;
  object = TTRLocalizedString(_:value:comment:)(v7, v8, v6)._object;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "initWithTitle:detailText:icon:contentLayout:", v10, 0, 0, 2);

  swift_release(a1);
  return v11;
}

void sub_10035EB20(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  id v9;
  NSString v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  const char *v16;
  unint64_t v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  NSString v24;
  __n128 v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  NSString v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  void *v35;
  NSString v36;
  __n128 v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  void *v42;
  NSString v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  void *v47;
  NSString v48;
  __n128 v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void *v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  void *v61;
  NSString v62;
  NSString v63;
  __n128 v64;
  void *v65;
  id v66;
  id v67;
  objc_super v68;

  v68.receiver = v2;
  v68.super_class = (Class)swift_getObjectType(v2, a2);
  v3 = objc_msgSendSuper2(&v68, "viewDidLoad");
  v4 = UIViewController.isIPadIdiom.getter(v3);
  if ((v4 & 1) != 0)
  {
    v5._countAndFlagsBits = 0x1000000000000019;
    v6._countAndFlagsBits = 0x100000000000001CLL;
    v7._countAndFlagsBits = 0xD000000000000014;
    v7._object = (void *)0x8000000100576930;
    v5._object = (void *)0x8000000100576950;
    v6._object = (void *)0x8000000100576290;
    object = TTRLocalizedString(_:value:comment:)(v7, v5, v6)._object;
    v9 = objc_msgSend(v2, "headerView");
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setTitle:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  }
  if ((UIViewController.isIPadIdiom.getter(v4) & 1) != 0)
  {
    v11 = 0xD000000000000028;
    v12 = 0xD000000000000033;
    v13 = 0xD000000000000066;
    v14 = 0x8000000100576850;
    v15 = 0x8000000100576890;
    v16 = "What's new screen bullet 1 body for iPad";
  }
  else
  {
    v11 = 0xD000000000000027;
    v12 = 0xD000000000000034;
    v13 = 0xD000000000000039;
    v14 = 0x80000001005762E0;
    v15 = 0x8000000100576320;
    v16 = "What's new screen bullet 1 body for iOS";
  }
  v17 = (unint64_t)(v16 - 32) | 0x8000000000000000;
  v18 = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v12, *(Swift::String *)&v13, *(Swift::String *)&v11)._object;
  v19._countAndFlagsBits = 0xD000000000000020;
  v20._countAndFlagsBits = 0xD00000000000002CLL;
  v20._object = (void *)0x8000000100576390;
  v21._object = (void *)0x80000001005763C0;
  v19._object = (void *)0x80000001005763E0;
  v21._countAndFlagsBits = 0xD000000000000015;
  v22 = TTRLocalizedString(_:value:comment:)(v20, v21, v19)._object;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = String._bridgeToObjectiveC()();
  v25 = swift_bridgeObjectRelease(v18);
  v26 = (void *)static TTRIAsset.Image.WhatsNewBullet.one.getter(v25);
  objc_msgSend(v2, "addBulletedListItemWithTitle:description:image:", v23, v24, v26);

  v27._countAndFlagsBits = 0xD000000000000017;
  v28._countAndFlagsBits = 0xD000000000000028;
  v28._object = (void *)0x8000000100576410;
  v27._object = (void *)0x8000000100576440;
  v29._object = (void *)0x8000000100576460;
  v29._countAndFlagsBits = 0xD000000000000019;
  v30 = TTRLocalizedString(_:value:comment:)(v28, v27, v29)._object;
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v32._countAndFlagsBits = 0xD00000000000002ALL;
  v33._countAndFlagsBits = 0xD000000000000052;
  v32._object = (void *)0x8000000100576480;
  v33._object = (void *)0x80000001005764B0;
  v34._object = (void *)0x8000000100576510;
  v34._countAndFlagsBits = 0xD00000000000001FLL;
  v35 = TTRLocalizedString(_:value:comment:)(v32, v33, v34)._object;
  v36 = String._bridgeToObjectiveC()();
  v37 = swift_bridgeObjectRelease(v35);
  v38 = (void *)static TTRIAsset.Image.WhatsNewBullet.two.getter(v37);
  objc_msgSend(v2, "addBulletedListItemWithTitle:description:image:", v31, v36, v38);

  v39._countAndFlagsBits = 0xD000000000000027;
  v39._object = (void *)0x8000000100576530;
  v40._object = (void *)0x8000000100576560;
  v41._object = (void *)0x8000000100576580;
  v40._countAndFlagsBits = 0xD000000000000015;
  v41._countAndFlagsBits = 0xD000000000000019;
  v42 = TTRLocalizedString(_:value:comment:)(v39, v40, v41)._object;
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v44._countAndFlagsBits = 0x100000000000002CLL;
  v45._countAndFlagsBits = 0xD000000000000029;
  v45._object = (void *)0x80000001005765A0;
  v44._object = (void *)0x80000001005765D0;
  v46._object = (void *)0x8000000100576600;
  v46._countAndFlagsBits = 0xD00000000000001FLL;
  v47 = TTRLocalizedString(_:value:comment:)(v45, v44, v46)._object;
  v48 = String._bridgeToObjectiveC()();
  v49 = swift_bridgeObjectRelease(v47);
  v50 = (void *)static TTRIAsset.Image.WhatsNewBullet.three.getter(v49);
  objc_msgSend(v2, "addBulletedListItemWithTitle:description:image:", v43, v48, v50);

  if ((sub_10035F320() & 1) != 0)
  {
    v51 = 0xD000000000000022;
    v52 = 0xD00000000000008ALL;
    v53 = 0x8000000100576770;
    v54 = 0x80000001005767A0;
    v55 = 0x8000000100576830;
    v56 = 0xD00000000000001FLL;
  }
  else
  {
    v51 = 0xD000000000000032;
    v56 = 0xD000000000000034;
    v52 = 0xD000000000000050;
    v53 = 0x8000000100576620;
    v54 = 0x8000000100576660;
    v55 = 0x80000001005766C0;
  }
  v57 = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v51, *(Swift::String *)&v52, *(Swift::String *)&v56)._object;
  v58._countAndFlagsBits = 0xD000000000000020;
  v58._object = (void *)0x8000000100576700;
  v59._object = (void *)0x8000000100576730;
  v60._object = (void *)0x8000000100576750;
  v59._countAndFlagsBits = 0x1000000000000010;
  v60._countAndFlagsBits = 0xD000000000000019;
  v61 = TTRLocalizedString(_:value:comment:)(v58, v59, v60)._object;
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v63 = String._bridgeToObjectiveC()();
  v64 = swift_bridgeObjectRelease(v57);
  v65 = (void *)static TTRIAsset.Image.WhatsNewBullet.four.getter(v64);
  objc_msgSend(v2, "addBulletedListItemWithTitle:description:image:", v62, v63, v65);

  v66 = objc_msgSend(v2, "buttonTray");
  v67 = sub_10035F078();
  objc_msgSend(v66, "addButton:", v67);

}

id sub_10035F078()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  id v8;
  NSString v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC9Reminders26TTRIWhatsNewViewController____lazy_storage___continueButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders26TTRIWhatsNewViewController____lazy_storage___continueButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders26TTRIWhatsNewViewController____lazy_storage___continueButton);
  }
  else
  {
    v4._countAndFlagsBits = 0xD000000000000020;
    v5._object = (void *)0x8000000100576970;
    v4._object = (void *)0x8000000100576990;
    v5._countAndFlagsBits = 0xD00000000000001FLL;
    v6._countAndFlagsBits = 0x65756E69746E6F43;
    v6._object = (void *)0xE800000000000000;
    object = TTRLocalizedString(_:value:comment:)(v5, v6, v4)._object;
    v8 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v8, "setTitle:forState:", v9, 0);

    objc_msgSend(v8, "addTarget:action:forControlEvents:", v0, "didTapContinueButton:", 64);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

uint64_t type metadata accessor for TTRIWhatsNewViewController()
{
  return objc_opt_self(_TtC9Reminders26TTRIWhatsNewViewController);
}

uint64_t sub_10035F320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMGroceryDummyModel(0);
  v5 = static Locale.current.getter(v4);
  v6 = Locale.identifier.getter(v5);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  LOBYTE(v3) = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v6, v8);
  swift_bridgeObjectRelease(v8);
  return v3 & 1;
}

void sub_10035F588(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  void *v6;
  void *v7;
  _QWORD v8[6];

  v2 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(a1);
  v3 = static TTRUserDefaults.WelcomeScreenVersion.current.getter();
  TTRUserDefaults.lastSeenWelcomeScreenVersion.setter(v3);

  v4 = sub_10001413C((_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 96));
  Strong = swift_unknownObjectWeakLoadStrong(*v4 + 16);
  if (Strong)
  {
    v6 = (void *)Strong;
    v8[4] = sub_1001EAA38;
    v8[5] = a1;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100006378;
    v8[3] = &unk_100603370;
    v7 = _Block_copy(v8);
    swift_retain_n(a1, 2);
    objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    swift_release();

  }
}

uint64_t sub_10035F678()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned __int8 v4;
  uint64_t result;
  id v6;
  unsigned __int8 v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v1 = v0;
  v2 = (void *)objc_opt_self(REMUserDefaults);
  v3 = objc_msgSend(v2, "daemonUserDefaults");
  v4 = objc_msgSend(v3, "forceShowWelcomeScreen");

  if ((v4 & 1) != 0)
    return 2;
  v6 = objc_msgSend(v2, "daemonUserDefaults");
  v7 = objc_msgSend(v6, "forceShowWhatsNewScreen");

  if ((v7 & 1) != 0)
    return 1;
  v8 = *(void **)(v1 + 16);
  v32 = 0;
  v9 = objc_msgSend(v8, "fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:", &v32);
  v10 = v32;
  if (v9)
  {
    v11 = v9;
    v12 = v32;

    return 1;
  }
  else
  {
    v13 = v32;
    v14 = _convertNSErrorToError(_:)(v10);

    swift_willThrow(v15);
    if (qword_10063D6D0 != -1)
      swift_once(&qword_10063D6D0, sub_10035FBE0);
    v16 = type metadata accessor for Logger(0);
    sub_100012DC4(v16, (uint64_t)qword_1006570D8);
    swift_errorRetain(v14);
    v17 = swift_errorRetain(v14);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = (void *)swift_slowAlloc(32, -1);
      v32 = v21;
      *(_DWORD *)v20 = 136315138;
      v30 = v14;
      swift_errorRetain(v14);
      v22 = sub_10002A750((uint64_t *)&unk_100649C60);
      v23 = String.init<A>(describing:)(&v30, v22);
      v25 = v24;
      v30 = sub_100027E40(v23, v24, (uint64_t *)&v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v25);
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "TTRWelcomeStyle:preferredWelcomeStyle(): Could not find or return any primary active CK account {error: %s}", v20, 0xCu);
      swift_arrayDestroy(v21, 1, &type metadata for Any[8]);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      swift_errorRelease(v14);
    }
    else
    {
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      swift_errorRelease(v14);

    }
    result = (uint64_t)objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
    if (result)
    {
      v26 = (void *)result;
      v27 = ACAccountStore.rem_migrationSets()();

      sub_10035FC70(v27);
      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRelease(v27);
        return 2;
      }
      else if ((sub_10032BD50() & 1) != 0)
      {
        v29 = *(_QWORD *)(v27 + 16);
        swift_bridgeObjectRelease(v27);
        return v29 == 0;
      }
      else
      {
        swift_bridgeObjectRelease(v27);
        return 3;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10035F9E0()
{
  id v0;
  id *v1;
  id v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  sub_1003602B0();
  v0 = sub_10032BD50();
  if ((v0 & 1) == 0)
    return 0;
  v1 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v0);
  v2 = *v1;
  v3 = TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter();

  if ((v3 & 1) == 0)
    return 0;
  v4 = sub_10035F678();
  if (v4 == 3)
    return 0;
  v5 = (void *)v4;
  if (v4 == 1)
  {
    if (qword_10063D6D0 != -1)
      swift_once(&qword_10063D6D0, sub_10035FBE0);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100012DC4(v6, (uint64_t)qword_1006570D8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRWelcomeStyle:shouldShowUpgradeScreen(): Account does not need upgrade after iCloud sync enabled.", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = *v1;
    TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter(0);

    return 0;
  }
  if (qword_10063D6D0 != -1)
    swift_once(&qword_10063D6D0, sub_10035FBE0);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100012DC4(v13, (uint64_t)qword_1006570D8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRWelcomeStyle:shouldShowUpgradeScreen(): Will show upgrade screen after iCloud sync enabled.", v17, 2u);
    swift_slowDealloc(v17, -1, -1);

    sub_10009DDA8(v5);
  }
  else
  {
    sub_10009DDA8(v5);

  }
  return 1;
}

uint64_t sub_10035FBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006570D8);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006570D8);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10035FC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  void *v36;
  void *v37;
  Class isa;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;

  v2 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v2);
  v52 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ACAccountStore.MigrationSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = (char *)&v48 - v16;
    v48 = v7;
    v49 = v5;
    v50 = v4;
    v19 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v20 = *(_QWORD *)(v9 + 72);
    v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v22 = v21(v12, v19, v8);
      if ((ACAccountStore.MigrationSet.eligibleForAutoCloudKitMigration.getter(v22) & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v19 += v20;
      if (!--v17)
      {
        swift_bridgeObjectRelease(a1);
        return;
      }
    }
    swift_bridgeObjectRelease(a1);
    v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v23(v15, v12, v8);
    v24 = v18;
    v25 = ((uint64_t (*)(char *, char *, uint64_t))v23)(v18, v15, v8);
    v26 = (void *)ACAccountStore.MigrationSet.calDAV.getter(v25);
    v27 = objc_msgSend(v26, "identifier");

    if (!v27)
    {
      __break(1u);
      return;
    }
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = (uint64_t)v52;
    UUID.init(uuidString:)(v28, v30);
    swift_bridgeObjectRelease(v30);
    v33 = v49;
    v32 = v50;
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v31, 1, v50);
    v35 = v48;
    if (v34 == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
      sub_1003603E4(v31);
      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v48, v31, v32);
    v36 = *(void **)(v51 + 16);
    v37 = (void *)objc_opt_self(REMAccount);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v37, "objectIDWithUUID:", isa);

    v53 = 0;
    v40 = objc_msgSend(v36, "fetchAccountWithObjectID:error:", v39, &v53);

    v41 = v53;
    if (v40)
    {
      v42 = v53;
      if ((objc_msgSend(v40, "inactive") & 1) != 0)
      {

LABEL_16:
        (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
        return;
      }
      REMAccount.isConsideredEmpty()();
      if (!v47)
      {

        (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
        return;
      }

      v46 = v47;
    }
    else
    {
      v43 = v53;
      v44 = _convertNSErrorToError(_:)(v41);

      swift_willThrow(v45);
      v46 = v44;
    }
    swift_errorRelease(v46);
    goto LABEL_16;
  }
}

uint64_t type metadata accessor for TTRWelcomeStyle()
{
  return objc_opt_self(_TtC9Reminders15TTRWelcomeStyle);
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRWelcomeContentStyle(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void destroy for TTRWelcomeContentStyle(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

void **assignWithCopy for TTRWelcomeContentStyle(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  id v12;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 - 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      v12 = v7;

      return a1;
    }

    v7 = *a2;
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  v9 = v7;
  return a1;
}

void **assignWithTake for TTRWelcomeContentStyle(void **a1, unint64_t *a2)
{
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    v4 = *a1;
  v5 = *a2;
  if ((int)v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }

  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRWelcomeContentStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRWelcomeContentStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

_QWORD *sub_100360278(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeContentStyle()
{
  return &type metadata for TTRWelcomeContentStyle;
}

void sub_1003602B0()
{
  id v0;
  id *v1;
  id v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  v0 = sub_10032BD50();
  if ((v0 & 1) == 0)
  {
    v1 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v0);
    v2 = *v1;
    v3 = TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter();

    if ((v3 & 1) == 0)
    {
      if (qword_10063D6D0 != -1)
        swift_once(&qword_10063D6D0, sub_10035FBE0);
      v4 = type metadata accessor for Logger(0);
      v5 = sub_100012DC4(v4, (uint64_t)qword_1006570D8);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRWelcomeStyle:checkICloudUpgradeState(): Setting showUpgradeWhenICloudSyncEnabled to true.", v8, 2u);
        swift_slowDealloc(v8, -1, -1);
      }

      v9 = *v1;
      TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter(1);

    }
  }
}

uint64_t sub_1003603E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100650718);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100360428(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100360448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100657190);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100657190);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1003604FC()
{
  _BYTE *v0;
  double *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v1 = (double *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_initialFrameForLoadingView];
  if ((v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_initialFrameForLoadingView + 32] & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v2, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

  }
  else
  {
    v8 = v1[2];
    v10 = v1[3];
    v4 = *v1;
    v6 = v1[1];
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v6, v8, v10);
  objc_msgSend(v0, "setView:", v11);

}

void sub_100360608(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  _UNKNOWN **v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  void *v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  id v137;
  uint64_t v138;
  objc_class *v139;
  char *v140;
  void *v141;
  id v142;
  id v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  objc_super v164;
  uint64_t v165;
  _QWORD v166[2];
  char v167;
  objc_super v168;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_10002A750(&qword_100657390);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100657398);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168.receiver = v3;
  v168.super_class = ObjectType;
  objc_msgSendSuper2(&v168, "viewDidLoad", v11);
  v14 = objc_msgSend(v3, "view");
  if (!v14)
  {
    __break(1u);
    goto LABEL_28;
  }
  v15 = v14;
  v161 = v8;
  v162 = v13;
  v163 = v6;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v24 = sub_100361484();
  v25 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v24, v17, v19, v21, v23);

  v26 = (void *)objc_opt_self(UIColor);
  v27 = v25;
  v28 = objc_msgSend(v26, "systemBackgroundColor");
  objc_msgSend(v27, "setBackgroundColor:", v28);

  objc_msgSend(v27, "setDelegate:", v3);
  objc_msgSend(v27, "setAlwaysBounceVertical:", 0);
  objc_msgSend(v27, "setAutoresizingMask:", 18);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  objc_msgSend(v27, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v27, "setAllowsFocus:", 0);
  objc_msgSend(v27, "setContentInsetAdjustmentBehavior:", 2);
  v29 = type metadata accessor for TTRIRemindersBoardBackgroundView();
  v30 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v29)), "init");
  v31 = &v30[OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardBackgroundView_delegate];
  *((_QWORD *)v31 + 1) = &off_100603528;
  objc_msgSend(v27, "setBackgroundView:", v30, swift_unknownObjectWeakAssign(v31, v3).n128_f64[0]);
  v32 = objc_msgSend(v3, "view");
  if (!v32)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v33 = v32;
  objc_msgSend(v32, "addSubview:", v27);

  v34 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView] = v27;
  v35 = v27;

  v166[0] = 0;
  v166[1] = 0;
  v167 = 1;
  v36 = sub_10002A750(&qword_1006573A0);
  swift_allocObject(v36, 48, 7);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_observableScrollViewInsets] = TTRObservableViewModel.init(value:)(v166);
  swift_release();
  sub_100361598();
  v37 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource];
  if (!v37)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v38 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource;
  v158 = v30;
  v39 = swift_allocObject(&unk_100603850, 24, 7);
  v40 = swift_unknownObjectWeakInit(v39 + 16, v3);
  v41 = type metadata accessor for TTRRemindersBoardPresentationTreesManagementViewCapability(0, v40);
  swift_allocObject(v41, 48, 7);
  v42 = TTRRemindersBoardPresentationTreesManagementViewCapability.init(mainDataSource:makeUpdatesForReloadingView:)(v37, sub_100370528, v39);
  v43 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability] = v42;
  v44 = objc_msgSend(v3, "view", swift_release().n128_f64[0]);
  if (!v44)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v45 = v44;
  v159 = v5;
  v160 = v10;
  v46 = type metadata accessor for TTRDeferredViewActionProvider(0);
  swift_allocObject(v46, 33, 7);
  v47 = TTRDeferredViewActionProvider.init(view:)(v45);
  v48 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider] = v47;
  swift_release();
  v49 = *(void **)&v3[v38];
  if (!v49)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v157 = v43;
  v50 = type metadata accessor for TTRIRemindersBoardItemLookupController();
  v51 = swift_allocObject(v50, 32, 7);
  *(_QWORD *)(v51 + 16) = v35;
  *(_QWORD *)(v51 + 24) = v49;
  v52 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController] = v51;
  v53 = v35;
  v54 = v49;
  swift_release();
  v55 = *(void **)&v3[v38];
  if (!v55)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v56 = type metadata accessor for TTRIRemindersBoardSelectionController();
  v57 = swift_allocObject(v56, 64, 7);
  *(_BYTE *)(v57 + 16) = 0;
  *(_QWORD *)(v57 + 40) = 0;
  *(_QWORD *)(v57 + 48) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v57 + 56) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v57 + 24) = v55;
  *(_QWORD *)(v57 + 32) = 0;
  v58 = swift_allocObject(&unk_100603940, 24, 7);
  swift_weakInit(v58 + 16, v57);
  v59 = sub_10002A750(&qword_1006573A8);
  swift_allocObject(v59, 40, 7);
  v60 = v55;
  *(_QWORD *)(v57 + 32) = TTRObservableViewModelCollection.init(makeViewModel:)(sub_100370554, v58);
  swift_release();
  v61 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController] = v57;
  swift_release();
  v62 = *(_QWORD *)&v3[v61];
  if (!v62)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v63 = swift_retain();
  v166[0] = TTRRemindersBoardMainDiffableDataSource.allColumnIDsPublisher.getter(v63);
  v64 = swift_allocObject(&unk_100603940, 24, 7);
  swift_weakInit(v64 + 16, v62);
  v65 = sub_10002A750(&qword_100654760);
  v66 = sub_100023FEC(&qword_100644BB0, &qword_100654760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v67 = Publisher<>.sink(receiveValue:)(sub_10037055C, v64, v65, v66);
  swift_release();
  swift_release();
  *(_QWORD *)(v62 + 40) = v67;
  swift_release();
  swift_release();
  v68 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
  v69 = swift_allocObject(&unk_100603850, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16, v3);
  v70 = type metadata accessor for TTRIRemindersListAutomaticSubtaskSelectionController(0);
  v71 = (_QWORD *)swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
  v72 = (char *)v71
      + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
  v73 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v72, 1, 1, v73);
  v71[2] = v68;
  v71[3] = &off_1005EF2D8;
  v71[4] = sub_100370564;
  v71[5] = v69;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController] = v71;
  swift_unknownObjectRetain(v68);
  swift_release();
  v74 = *(_QWORD *)&v3[v52];
  if (!v74)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v156 = v9;
  v75 = type metadata accessor for TTRIRemindersBoardFocusController(0);
  v76 = swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
  v77 = v76 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem;
  v78 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 1, 1, v78);
  v79 = v76 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_lastFocusedItemID;
  v80 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 1, 1, v80);
  *(_QWORD *)(v76 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_itemLookupController) = v74;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_focusController] = v76;
  swift_retain();
  v81 = objc_msgSend(v3, "view", swift_release().n128_f64[0]);
  if (!v81)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v82 = v81;
  v83 = type metadata accessor for TTRIRemindersBoardDragAndDropCoordinator(0);
  v84 = swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  *(_QWORD *)(v84 + 24) = 0;
  swift_unknownObjectWeakInit(v84 + 16, 0);
  UUID.init()(v85);
  v86 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker;
  v87 = type metadata accessor for TTRIRemindersBoardDragAndDropActivityTracker();
  v88 = (_QWORD *)swift_allocObject(v87, 56, 7);
  v88[3] = 0;
  v88[4] = 0;
  v88[2] = 0;
  v88[5] = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
  v88[6] = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
  *(_QWORD *)(v84 + v86) = v88;
  *(_QWORD *)(v84 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView) = 0;
  *(_QWORD *)(v84 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext) = 0;
  *(_QWORD *)(v84
            + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView) = 0;
  *(_BYTE *)(v84
           + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) = 0;
  *(_QWORD *)(v84 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView) = v82;
  v89 = swift_allocObject(&unk_100603968, 24, 7);
  swift_weakInit(v89 + 16, v84);
  v90 = v88[3];
  v91 = v88[4];
  v88[3] = sub_10037056C;
  v88[4] = v89;
  sub_1000381B8(v90, v91);
  v92 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator] = v84;
  swift_release();
  v93 = *(_QWORD *)&v3[v92];
  if (!v93)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(_QWORD *)(v93 + 24) = &off_100603558;
  swift_unknownObjectWeakAssign(v93 + 16, v3);
  v94 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersBoardRootViewDragInteractionHandler()), "init");
  v95 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_rootViewDragInteractionHandler;
  v96 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_rootViewDragInteractionHandler];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_rootViewDragInteractionHandler] = v94;

  v97 = *(_QWORD *)&v3[v95];
  if (!v97)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v98 = *(_QWORD *)&v3[v92];
  v99 = &off_1005EBE60;
  if (!v98)
    v99 = 0;
  v100 = v97 + OBJC_IVAR____TtC9Reminders48TTRIRemindersBoardRootViewDragInteractionHandler_delegate;
  *(_QWORD *)(v100 + 8) = v99;
  v101 = objc_msgSend(v3, "view", swift_unknownObjectWeakAssign(v100, v98).n128_f64[0]);
  if (!v101)
    goto LABEL_38;
  v102 = *(_QWORD *)&v3[v95];
  if (!v102)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v103 = v101;
  v104 = objc_msgSend(objc_allocWithZone((Class)UIDragInteraction), "initWithDelegate:", v102);
  objc_msgSend(v103, "addInteraction:", v104);

  v105 = *(void **)&v3[v38];
  if (!v105)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v106 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersBoardColumnReorderingController(0));
  v107 = v53;
  v108 = v105;
  v109 = sub_10024B554(v107, v108);

  v110 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController;
  v111 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController] = v109;

  v112 = *(_QWORD *)&v3[v110];
  if (!v112)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v113 = v112 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate;
  *(_QWORD *)(v113 + 8) = &off_100603538;
  swift_unknownObjectWeakAssign(v113, v3);
  v114 = *(_QWORD *)&v3[v48];
  if (!v114)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v115 = type metadata accessor for TTRIRemindersBoardChromelessBarsController();
  v116 = swift_allocObject(v115, 90, 7);
  *(_QWORD *)(v116 + 24) = 0;
  swift_unknownObjectWeakInit(v116 + 16, 0);
  *(_QWORD *)(v116 + 48) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v116 + 56) = &_swiftEmptySetSingleton;
  *(_WORD *)(v116 + 64) = 514;
  v117 = qword_10063D390;
  swift_retain();
  if (v117 != -1)
    swift_once(&qword_10063D390, sub_1000CC754);
  v118 = qword_100644AC8;
  v119 = word_100644AD0;
  v120 = HIBYTE(word_100644AD0);
  *(_BYTE *)(v116 + 72) = byte_100644AC0;
  *(_QWORD *)(v116 + 80) = v118;
  *(_BYTE *)(v116 + 88) = v119;
  *(_BYTE *)(v116 + 89) = v120;
  *(_QWORD *)(v116 + 32) = v114;
  *(_QWORD *)(v116 + 40) = &protocol witness table for TTRDeferredViewActionProvider;
  v121 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController] = v116;
  swift_bridgeObjectRetain(v118);
  swift_release();
  v122 = *(_QWORD *)&v3[v121];
  if (!v122)
    goto LABEL_43;
  *(_QWORD *)(v122 + 24) = &off_1006035B8;
  swift_unknownObjectWeakAssign(v122 + 16, v3);
  if (!*(_QWORD *)&v3[v121])
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v153 = v107;
  v123 = *(void **)&v3[v38];
  v155 = v38;
  if (!v123)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  swift_retain();
  v124 = v123;
  v154 = TTRRemindersBoardMainDiffableDataSource.allColumnIDsPublisher.getter(v124);

  v125 = &v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_eventPublishers];
  v126 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_eventPublishers];
  v165 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_eventPublishers + 8];
  v166[0] = v126;
  swift_retain();
  swift_retain();
  v127 = sub_10002A750(&qword_100646F70);
  v128 = sub_100023FEC(&qword_100646F78, &qword_100646F70, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v129 = v161;
  v152 = v127;
  Publisher.merge(with:)(&v165, v127, v128);
  v130 = sub_100023FEC(&qword_1006573B0, &qword_100657390, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
  v131 = v162;
  v132 = v159;
  Publisher.map<A>(_:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, v159, (char *)&type metadata for () + 8, v130);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v129, v132);
  v133 = sub_100023FEC(&qword_1006573B8, &qword_100657398, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v134 = v156;
  v135 = Publisher.eraseToAnyPublisher()(v156, v133);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v131, v134);
  swift_release();
  swift_release();
  sub_1000CAC50(v154, v135);
  swift_release();
  swift_release();
  swift_release();
  v136 = *(void **)&v3[v155];
  if (!v136)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v166[0] = *(_QWORD *)v125;
  v137 = v136;
  v138 = Publisher.eraseToAnyPublisher()(v152, v128);
  v139 = (objc_class *)type metadata accessor for TTRIRemindersBoardScrollingController();
  v140 = (char *)objc_allocWithZone(v139);
  *(_QWORD *)&v140[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_pendingStartEditingTask] = 0;
  v141 = v153;
  *(_QWORD *)&v140[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainCollectionView] = v153;
  *(_QWORD *)&v140[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_mainDataSource] = v137;
  *(_QWORD *)&v140[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardScrollingController_willDisplayCell] = v138;
  v164.receiver = v140;
  v164.super_class = v139;
  v142 = v141;
  v143 = objc_msgSendSuper2(&v164, "init");
  v144 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController];
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController] = v143;

  v145 = type metadata accessor for TTRIRemindersBoardHeaderViewController(0);
  v146 = swift_allocObject(v145, *(unsigned int *)(v145 + 48), *(unsigned __int16 *)(v145 + 52));
  *(_OWORD *)(v146 + 16) = 0u;
  *(_OWORD *)(v146 + 32) = 0u;
  *(_OWORD *)(v146 + 48) = 0u;
  *(_QWORD *)(v146 + 64) = 0;
  v147 = v146 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip;
  v148 = type metadata accessor for TTRRemindersListTip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 1, 1, v148);
  swift_unknownObjectWeakInit(v146 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainViewController, 0);
  *(_QWORD *)(v146 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackView) = 0;
  *(_QWORD *)(v146
            + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_mainStackHeightDidChangeCancellable) = 0;
  *(_QWORD *)(v146 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_completedHeaderView) = 0;
  *(_QWORD *)(v146 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView) = 0;
  swift_unknownObjectWeakAssign(v149, v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController] = v146;
  swift_release();
  v150 = v158;
  if (*(_QWORD *)&v3[v157])
  {
    swift_retain();
    TTRRemindersBoardPresentationTreesManagementViewCapability.reload()();
    swift_release();
    sub_100361984();
    sub_100361C20();

    return;
  }
LABEL_47:
  __break(1u);
}

id sub_100361484()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v7[6];

  v1 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  objc_msgSend(v1, "setScrollDirection:", 1);
  v2 = swift_allocObject(&unk_100603850, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v7[4] = sub_100370518;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100369AA8;
  v7[3] = &unk_1006038E0;
  v4 = _Block_copy(v7);
  swift_retain();
  v5 = objc_msgSend(v3, "initWithSectionProvider:configuration:", v4, v1);

  _Block_release(v4);
  swift_release();
  swift_release();
  return v5;
}

void sub_100361598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  id v22;
  void (*v23)(_BYTE *, _QWORD);
  void *v24;
  _BYTE v25[32];

  v1 = v0;
  v2 = sub_10002A750(&qword_1006573C0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v25[-v7];
  v9 = swift_allocObject(&unk_100603850, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  v10 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  UICollectionView.CellRegistration.init(handler:)(sub_100370574, v9, v10, v11);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
  if (v12)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    v13 = *(unsigned __int8 *)(v3 + 80);
    v14 = (v13 + 16) & ~v13;
    v15 = swift_allocObject(&unk_100603990, v14 + v4, v13 | 7);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v15 + v14, v5, v2);
    v16 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersBoardMainDiffableDataSource(0));
    v17 = (void *)TTRRemindersBoardMainDiffableDataSource.init(collectionView:cellProvider:)(v12, sub_1003705E0, v15);
    v18 = swift_allocObject(&unk_100603850, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v1);
    v19 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v25);
    v20 = sub_10002A750(&qword_1006573C8);
    UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(sub_100370638, v18, v20);
    v19(v25, 0);
    v21 = swift_allocObject(&unk_100603850, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v1);
    v22 = v17;
    v23 = (void (*)(_BYTE *, _QWORD))UICollectionViewDiffableDataSource.reorderingHandlers.modify(v25);
    UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(sub_100370640, v21, v20);
    v23(v25, 0);

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    v24 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource) = v22;

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100361800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    swift_unknownObjectRetain(v6);

    TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForReloadingView()();
    swift_unknownObjectRelease(v6);
    v7 = type metadata accessor for TTRRemindersBoardPresentationTreeUpdates(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 0, 1, v7);
  }
  else
  {
    v9 = ((uint64_t (*)(void))type metadata accessor for TTRRemindersBoardPresentationTreeUpdates)();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
}

void sub_1003618C0(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
    if ((a2 & 1) != 0)
    {
      if (v10)
      {
        swift_retain();
        sub_100433170(a1, a3 & 1);
LABEL_7:

        swift_release();
        return;
      }
      __break(1u);
    }
    else if (v10)
    {
      swift_retain();
      sub_1004332B0(a1, a3 & 1);
      goto LABEL_7;
    }
    __break(1u);
  }
}

void sub_100361984()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *(*v13)();
  uint64_t (*v14)();
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  unsigned __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState];
    v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState + 16];
    if (v2)
    {
      v3 = *(_QWORD *)v1;
      v4 = *((_DWORD *)v1 + 2) & 0x10101;
      v5 = v2;
      sub_100405B54(v3, v4, (uint64_t)v30);
      v28 = v30[1];
      v29 = v30[0];
      v6 = v32;
      v7 = v33;
      v8 = v34;
      v9 = v35;
      v10 = v31;
      v27 = swift_allocObject(&unk_100603850, 24, 7);
      swift_unknownObjectWeakInit(v27 + 16, v0);
      sub_1000381B8(v6, v7);
      v26 = swift_allocObject(&unk_100603850, 24, 7);
      swift_unknownObjectWeakInit(v26 + 16, v0);
      sub_1000381B8(v8, v9);
      LODWORD(v6) = objc_msgSend(v0, "isEditing");

      v11 = 0x10000;
      if ((_DWORD)v6)
        v11 = 0;
      v12 = v10 | v11;
      v13 = sub_10036AF84;
      v14 = sub_10036AF7C;
    }
    else
    {
      v28 = 0;
      v29 = 0;
      v12 = 0;
      v14 = 0;
      v26 = 0;
      v27 = 0;
      v13 = 0;
    }
    v15 = *(_QWORD **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController];
    if (v15)
    {
      v16 = v15[2];
      v17 = v15[3];
      v18 = v15[4];
      v25 = v15[5];
      v19 = v15[6];
      v20 = v15[7];
      v21 = v15[8];
      v15[2] = v29;
      v15[3] = v28;
      v15[4] = v12;
      v15[5] = v14;
      v15[6] = v27;
      v15[7] = v13;
      v15[8] = v26;
      swift_retain();
      sub_100053E48(v16, v17, v18, v25, v19, v20, v21);
      v24 = (uint64_t)v14;
      v22 = (uint64_t)v14;
      v23 = v17;
      sub_100053E48(v29, v28, v12, v22, v27, (uint64_t)v13, v26);
      sub_100053DF4(v16, v17, v18, v25, v19, v20, v21);
      if (v17 | v15[3])
        sub_100052D74();
      else
        v23 = 0;
      sub_100053DF4(v29, v28, v12, v24, v27, (uint64_t)v13, v26);
      sub_100053DF4(v16, v23, v18, v25, v19, v20, v21);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100361C20()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  id result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  uint64_t *v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  unsigned __int8 *v51;
  char *v52;
  _BYTE *v53;
  __int128 v54;
  uint64_t v55;
  _QWORD v56[5];
  char v57[24];
  char v58[32];

  v1 = v0;
  v50 = sub_10002A750(&qword_100657350);
  __chkstk_darwin(v50);
  v51 = &v46[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for TTRRemindersListTip(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v46[-v8];
  v10 = sub_10002A750(&qword_100657358);
  __chkstk_darwin(v10);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10002A750((uint64_t *)&unk_100657360);
  __chkstk_darwin(v13);
  v15 = (__int128 *)&v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v46[-v17];
  __chkstk_darwin(v19);
  v21 = &v46[-v20];
  v23 = __chkstk_darwin(v22);
  v53 = &v46[-v24];
  result = objc_msgSend(v1, "isViewLoaded", v23);
  if ((_DWORD)result)
  {
    v49 = v6;
    v52 = v1;
    v26 = &v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo];
    swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo], v58, 0, 0);
    v27 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
      result = (id)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v53, 1, 1, v3);
    else
      result = (id)sub_10000735C((uint64_t)&v26[*(int *)(v27 + 40)], (uint64_t)v53, (uint64_t *)&unk_100657360);
    v48 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController;
    v28 = *(_QWORD *)&v52[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController];
    if (!v28)
    {
      __break(1u);
      goto LABEL_25;
    }
    v29 = v28 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip;
    swift_beginAccess(v28 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tip, v57, 0, 0);
    sub_10000735C(v29, (uint64_t)v21, (uint64_t *)&unk_100657360);
    v30 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_10000735C((uint64_t)v21, (uint64_t)v12, (uint64_t *)&unk_100657360);
    sub_10000735C((uint64_t)v53, v30, (uint64_t *)&unk_100657360);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v31((uint64_t)v12, 1, v3) == 1)
    {
      sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100657360);
      v32 = v31(v30, 1, v3);
      v33 = (uint64_t)v49;
      if (v32 == 1)
      {
        sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100657360);
        return (id)sub_1000073A0((uint64_t)v53, (uint64_t *)&unk_100657360);
      }
    }
    else
    {
      sub_10000735C((uint64_t)v12, (uint64_t)v18, (uint64_t *)&unk_100657360);
      if (v31(v30, 1, v3) != 1)
      {
        sub_10001F580(v30, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        v35 = v51;
        v36 = &v51[*(int *)(v50 + 48)];
        sub_10002B1E8((uint64_t)v18, (uint64_t)v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        sub_10002B1E8((uint64_t)v9, (uint64_t)v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        LODWORD(v50) = *v35;
        v47 = *v36;
        sub_10001F544((uint64_t)v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
        sub_10001F544((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTips);
        sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100657360);
        sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
        sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100657360);
        v34 = v52;
        v33 = (uint64_t)v49;
        if ((_DWORD)v50 == v47)
          return (id)sub_1000073A0((uint64_t)v53, (uint64_t *)&unk_100657360);
        goto LABEL_13;
      }
      sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100657360);
      sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
      v33 = (uint64_t)v49;
    }
    sub_1000073A0((uint64_t)v12, &qword_100657358);
    v34 = v52;
LABEL_13:
    sub_10000735C((uint64_t)v53, (uint64_t)v15, (uint64_t *)&unk_100657360);
    if (v31((uint64_t)v15, 1, v3) == 1)
    {
      v37 = (uint64_t *)&unk_100657360;
      v38 = v15;
    }
    else
    {
      sub_10001F580((uint64_t)v15, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
      v39 = *(_QWORD *)&v34[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v34[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter], v40);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8) + 912))(&v54, v33, ObjectType);
      if (v55)
      {
        result = (id)sub_10002E37C(&v54, (uint64_t)v56);
        if (*(_QWORD *)&v34[v48])
        {
          swift_retain();
          sub_1000530A4(v33, (uint64_t)v56);
          swift_release();
          sub_100027F10(v56);
          sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
          return (id)sub_1000073A0((uint64_t)v53, (uint64_t *)&unk_100657360);
        }
LABEL_26:
        __break(1u);
        return result;
      }
      sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListTip);
      v37 = &qword_100654980;
      v38 = &v54;
    }
    result = (id)sub_1000073A0((uint64_t)v38, v37);
    v42 = *(_QWORD *)&v34[v48];
    if (v42)
    {
      v43 = OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView;
      v44 = *(void **)(v42 + OBJC_IVAR____TtC9Reminders38TTRIRemindersBoardHeaderViewController_tipView);
      if (v44)
      {
        swift_retain();
        objc_msgSend(v44, "removeFromSuperview");
        v45 = *(void **)(v42 + v43);
        *(_QWORD *)(v42 + v43) = 0;
        swift_release();

      }
      return (id)sub_1000073A0((uint64_t)v53, (uint64_t *)&unk_100657360);
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  return result;
}

void sub_100362280(void *a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  id v8;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double Width;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[6];
  objc_super v24;
  CGRect v25;

  v24.receiver = v4;
  v24.super_class = (Class)swift_getObjectType(v4, a2);
  objc_msgSendSuper2(&v24, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a3, a4);
  v8 = objc_msgSend(v4, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "bounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v25.origin.x = v11;
    v25.origin.y = v13;
    v25.size.width = v15;
    v25.size.height = v17;
    Width = CGRectGetWidth(v25);
    if ((sub_1003F5628(a3, 0.0000000149011612, Width) & 1) != 0)
    {
LABEL_5:
      v21 = swift_allocObject(&unk_100603850, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16, v4);
      v23[4] = sub_100370520;
      v23[5] = v21;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 1107296256;
      v23[2] = sub_10023C014;
      v23[3] = &unk_100603908;
      v22 = _Block_copy(v23);
      objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v22, swift_release().n128_f64[0]);
      _Block_release(v22);
      return;
    }
    v19 = *(void **)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView];
    if (v19)
    {
      v20 = objc_msgSend(v19, "collectionViewLayout");
      objc_msgSend(v20, "invalidateLayout");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100362430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController);
    swift_retain();

    if (v5)
    {
      sub_1000CC65C();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100362510(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char v4;
  uint64_t v6;
  objc_class *ObjectType;
  __n128 v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *updated;
  _QWORD v18[5];
  char v19[24];
  objc_super v20;

  v3 = v2;
  v4 = a2;
  v6 = a1 & 1;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  if (objc_msgSend(v3, "isEditing") == (_DWORD)v6)
    return;
  v20.receiver = v3;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "setEditing:animated:", v6, v4 & 1);
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController];
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  v10 = *(unsigned __int8 *)(v9 + 16);
  v11 = a1 & 1;
  *(_BYTE *)(v9 + 16) = a1 & 1;
  if (v10 != v11)
  {
    if ((a1 & 1) != 0)
    {
      v12 = swift_retain();
    }
    else
    {
      swift_beginAccess(v9 + 48, v19, 1, 0);
      v13 = *(_QWORD *)(v9 + 48);
      *(_QWORD *)(v9 + 48) = &_swiftEmptySetSingleton;
      swift_retain();
      swift_bridgeObjectRelease(v13);
    }
    if (*(_QWORD *)(v9 + 32))
    {
      __chkstk_darwin(v12);
      v18[2] = v9;
      v18[3] = v14;
      swift_retain();
      TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_100370770, v18);
      swift_release();
      v8 = swift_release();
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return;
  }
LABEL_9:
  v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter];
  if (*(unsigned __int8 *)(v15 + 96) != v11)
  {
    *(_BYTE *)(v15 + 96) = v11;
    v16 = TTRRemindersBoardCellPresentationStatesPresenterCapability.isMultiSelectMode.setter(a1 & 1, v8);
    updated = (_QWORD *)TTRRemindersBoardPresentationTreesManagementPresenterCapability.DeferredUpdateFlags.placeholderReminderVisibilityChange.unsafeMutableAddressor(v16);
    TTRRemindersBoardPresentationTreesManagementPresenterCapability.scheduleUpdate(for:)(*updated);
  }
  sub_100361984();
}

void sub_100362864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability);
    if (v9)
    {
      swift_beginAccess(v9 + 16, v20, 0, 0);
      if (*(_QWORD *)(v9 + 16))
      {
        swift_retain();
        v10 = TTRObservableViewModelCollection.observableViewModel(forItemID:)(a3);
        swift_release();
        v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController];
        if (v11)
        {
          if (*(_QWORD *)(v11 + 32))
          {
            swift_retain();
            swift_retain();
            v12 = TTRObservableViewModelCollection.observableViewModel(forItemID:)(a3);
            swift_release();
            swift_release();
            v13 = *(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator];
            if (v13)
            {
              v14 = *(void **)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController];
              if (v14)
              {
                swift_retain();
                v15 = v14;
                sub_10036A850(a3, v13, (uint64_t)v15, a1);
                swift_release();

                v16 = a1 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_delegate;
                *(_QWORD *)(v16 + 8) = &off_1006035E0;
                swift_unknownObjectWeakAssign(v16, v8);
                v17 = *(_QWORD *)(a1
                                + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_presentationTreesCapability);
                if (v17)
                {
                  swift_beginAccess(v17 + 32, v19, 0, 0);
                  if (*(_QWORD *)(v17 + 32))
                  {
                    swift_retain();
                    TTRViewModelObserver.subscribeIfNeeded(to:)(v10);
                    swift_release();
                    if (*(_QWORD *)(a1
                                   + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_scrollViewInsetsObserver))
                    {
                      if (*(_QWORD *)&v8[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_observableScrollViewInsets])
                      {
                        swift_retain();
                        v18 = swift_retain();
                        TTRViewModelObserver.subscribeIfNeeded(to:)(v18);
                        swift_release();
                        swift_release();
                        if (*(_QWORD *)(a1
                                       + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_selectionRequestObserver))
                        {
                          swift_retain();
                          TTRViewModelObserver.subscribeIfNeeded(to:)(v12);

                          swift_release();
                          swift_release();
                          swift_release();
                          return;
                        }
LABEL_25:
                        __break(1u);
                        return;
                      }
LABEL_24:
                      __break(1u);
                      goto LABEL_25;
                    }
LABEL_23:
                    __break(1u);
                    goto LABEL_24;
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

uint64_t sub_100362AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
  v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v11, v10);
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  return v12;
}

uint64_t sub_100362BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char v6;
  char v7;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100362C18(a1);
    v7 = v6;

  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

void sub_100362C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  char v28[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v10)
  {
    v11 = (uint64_t)&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v28, 0, 0);
    v12 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_5:
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      return;
    }
    v24 = v1;
    sub_100010634(v11, (uint64_t)v25);
    v13 = v26;
    v14 = v27;
    sub_10001413C(v25, v26);
    v15 = a1;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40);
    v17 = v10;
    v16(v15, v13, v14);
    sub_100027F10(v25);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      goto LABEL_5;
    sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v19);
    v21 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v18 + 8) + 472))(v9, ObjectType);
    v22 = v21;
    if ((unint64_t)v21 >> 62)
    {
      if (v21 >= 0)
        v21 &= 0xFFFFFFFFFFFFFF8uLL;
      _CocoaArrayWrapper.endIndex.getter(v21);
    }
    swift_bridgeObjectRelease(v22);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

void sub_100362E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[32];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  a2 += 16;
  swift_beginAccess(a2, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100363258(a1);

  }
}

uint64_t sub_100363258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  NSString v52;
  uint64_t v53;
  uint64_t result;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  void *v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[32];
  uint64_t v102;

  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v90 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v91 = (char *)&v86 - v5;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v93 = *(_QWORD *)(v6 - 8);
  v94 = v6;
  __chkstk_darwin(v6);
  v89 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006573D0);
  __chkstk_darwin(v8);
  v97 = (uint64_t *)((char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v86 - v11;
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v13);
  v95 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v102 = (uint64_t)&v86 - v16;
  v17 = sub_10002A750(&qword_1006573D8);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v96 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v86 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v86 - v24;
  if (qword_10063D6D8 != -1)
    swift_once(&qword_10063D6D8, sub_100360448);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_100012DC4(v26, (uint64_t)qword_100657190);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "TTRIRemindersBoardMainViewController: handle reordering transaction", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

  v31 = sub_10002A750(&qword_1006573E0);
  ((void (*)(void))NSDiffableDataSourceTransaction.difference.getter)();
  v32 = sub_100023FEC(&qword_1006573E8, &qword_1006573D8, (uint64_t)&protocol conformance descriptor for CollectionDifference<A>);
  dispatch thunk of Collection.startIndex.getter(v17, v32);
  dispatch thunk of Collection.endIndex.getter(v17);
  v33 = dispatch thunk of Collection.distance(from:to:)(v98, v101, v17, v32);
  v34 = *(void (**)(char *, uint64_t))(v18 + 8);
  v34(v25, v17);
  if (v33 != 2)
    goto LABEL_17;
  v88 = a1;
  NSDiffableDataSourceTransaction.difference.getter(v31);
  v35 = CollectionDifference.removals.getter(v17);
  v34(v22, v17);
  v36 = *(_QWORD *)(v35 + 16);
  v37 = sub_10002A750(&qword_1006573F0);
  v38 = *(_QWORD *)(v37 - 8);
  if (v36)
  {
    sub_10000735C(v35 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80)), (uint64_t)v12, &qword_1006573F0);
    v39 = 0;
  }
  else
  {
    v39 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v12, v39, 1, v37);
  swift_bridgeObjectRelease(v35);
  v40 = sub_10002A750(&qword_1006573F0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v42(v12, 1, v40) == 1)
  {
    v43 = &qword_1006573D0;
LABEL_15:
    v50 = (uint64_t)v12;
LABEL_16:
    sub_1000073A0(v50, v43);
LABEL_17:
    v51 = (void *)objc_opt_self(REMError);
    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v51, "internalErrorWithDebugDescription:", v52);

    return swift_willThrow(v53);
  }
  if (swift_getEnumCaseMultiPayload(v12, v40) != 1)
  {
    v43 = &qword_1006573F0;
    goto LABEL_15;
  }
  v87 = sub_10002A750(&qword_1006573F8);
  v44 = (uint64_t)&v12[*(int *)(v87 + 48)];
  v45 = v102;
  sub_10001F580(v44, v102, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v46 = v96;
  NSDiffableDataSourceTransaction.difference.getter(v31);
  v47 = CollectionDifference.insertions.getter(v17);
  v34(v46, v17);
  if (*(_QWORD *)(v47 + 16))
  {
    v48 = v97;
    sub_10000735C(v47 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)), (uint64_t)v97, &qword_1006573F0);
    v49 = 0;
  }
  else
  {
    v49 = 1;
    v48 = v97;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v48, v49, 1, v40);
  v55 = swift_bridgeObjectRelease(v47);
  if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t, __n128))v42)(v48, 1, v40, v55) == 1)
  {
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v43 = &qword_1006573D0;
LABEL_23:
    v50 = (uint64_t)v48;
    goto LABEL_16;
  }
  if (swift_getEnumCaseMultiPayload(v48, v40) == 1)
  {
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v43 = &qword_1006573F0;
    goto LABEL_23;
  }
  v56 = *v48;
  v57 = (uint64_t)v48 + *(int *)(v87 + 48);
  v58 = v95;
  sub_10001F580(v57, v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v59 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v45, v58);
  result = sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v59 & 1) == 0)
  {
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    goto LABEL_17;
  }
  v60 = v92;
  v61 = *(char **)(v92 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v61)
  {
    v62 = (uint64_t)&v61[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v61[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v101, 0, 0);
    v63 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63);
    v65 = (uint64_t)v91;
    if (v64)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v91, 1, 1, v94);
      v66 = v102;
LABEL_30:
      sub_1000073A0(v65, (uint64_t *)&unk_100640EB0);
      v72 = (void *)objc_opt_self(REMError);
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v72, "internalErrorWithDebugDescription:", v73);

      swift_willThrow(v74);
      return sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    sub_100010634(v62, (uint64_t)v98);
    v67 = v99;
    v68 = v100;
    sub_10001413C(v98, v99);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 40);
    v70 = v61;
    v66 = v102;
    v69(v102, v67, v68);
    sub_100027F10(v98);

    v71 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v65, 1, v94) == 1)
      goto LABEL_30;
    v75 = v65;
    v76 = v89;
    sub_10001F580(v75, v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v77 = *(_QWORD *)(v60 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v60 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v78);
    v80 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v81 = *(unsigned __int8 *)(v71 + 80);
    v82 = (v81 + 32) & ~v81;
    v83 = v71;
    v84 = swift_allocObject(v80, v82 + *(_QWORD *)(v71 + 72), v81 | 7);
    *(_OWORD *)(v84 + 16) = xmmword_100520250;
    sub_10002B1E8(v76, v84 + v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v85 = (uint64_t)v90;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v90, 1, 1, v94);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 + 8) + 520))(v84, v85, v56, 1, 1, ObjectType);
    swift_bridgeObjectRelease(v84);
    sub_1000073A0(v85, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100363AE8(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability);
  if (v1)
  {
    swift_retain(*(_QWORD *)(result
                           + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability));
    TTRRemindersBoardPresentationTreesManagementViewCapability.reload()();
    return swift_release(v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100363B24(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  unint64_t v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  double v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  Class isa;
  id v53;
  uint64_t v54;
  id v55;
  double v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  _QWORD v61[10];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v60, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "view");

    if (!v7)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v7, "directionalLayoutMargins");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

  }
  else
  {
    v13 = 0.0;
    v15 = 16.0;
    v11 = 16.0;
    v9 = 0.0;
  }
  v16 = objc_msgSend(a2, "traitCollection");
  v17 = (unint64_t)objc_msgSend(v16, "horizontalSizeClass");

  if (v17 > 2)
    v18 = 0.2;
  else
    v18 = dbl_10052FCA0[v17];
  v19 = objc_msgSend(a2, "container");
  objc_msgSend(v19, "contentSize");
  v21 = v20;
  v23 = v22;
  swift_unknownObjectRelease(v19);
  v24 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v24, "displayScale");
  v26 = v25;

  TTRRemindersBoardColumnWidthCalculator.init(contentSize:edgeInsets:interColumnSpacing:displayScale:columnWidthRange:peekPercentage:)(v61, v21, v23, v9, v11, v13, v15, v11, v26, 190.0, 400.0, v18);
  if (qword_10063D6D8 != -1)
    swift_once(&qword_10063D6D8, sub_100360448);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100012DC4(v27, (uint64_t)qword_100657190);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v59 = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = TTRRemindersBoardColumnWidthCalculator.description.getter();
    v35 = v34;
    v58 = sub_100027E40(v33, v34, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[TTRIRemindersBoard] Column Width Calculation: %s", v31, 0xCu);
    swift_arrayDestroy(v32, 1, &type metadata for Any[8]);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }

  v36 = TTRRemindersBoardColumnWidthCalculator.columnWidth(for:)(1);
  if (qword_10063D8C0 != -1)
    swift_once(&qword_10063D8C0, sub_100501724);
  v37 = v36 + *(double *)&qword_100673A88;
  v38 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v39 = objc_msgSend(v38, "fractionalWidthDimension:", 1.0);
  v40 = objc_msgSend(v38, "fractionalHeightDimension:", 1.0);
  v41 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v42 = objc_msgSend(v41, "sizeWithWidthDimension:heightDimension:", v39, v40);

  v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v42);
  v44 = objc_msgSend(v38, "absoluteDimension:", v37);
  v45 = objc_msgSend(v38, "fractionalHeightDimension:", 1.0);
  v46 = objc_msgSend(v41, "sizeWithWidthDimension:heightDimension:", v44, v45);

  v47 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v48 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v49 = swift_allocObject(v48, 40, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100521140;
  *(_QWORD *)(v49 + 32) = v43;
  v59 = v49;
  specialized Array._endMutation()(v49);
  v50 = v59;
  sub_100005ED8(0, &qword_100646FB0, NSCollectionLayoutItem_ptr);
  v51 = v43;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v53 = objc_msgSend(v47, "horizontalGroupWithLayoutSize:subitems:", v46, isa, swift_bridgeObjectRelease(v50).n128_f64[0]);

  v54 = type metadata accessor for TTRIRemindersBoardMainViewController.LayoutSection();
  v55 = objc_msgSend((id)swift_getObjCClassFromMetadata(v54), "sectionWithGroup:", v53);
  v56 = *(double *)&qword_100673A88;
  objc_msgSend(v55, "setInterGroupSpacing:", v11 - *(double *)&qword_100673A88);
  objc_msgSend(v55, "setContentInsets:", 0.0, v11, 0.0, v15 - v56);
  v57 = v55;
  objc_msgSend(v57, "setContentInsetsReference:", 1);

}

uint64_t sub_1003640BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v13);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v12 + 8) + 208))(v21, ObjectType);
  v15 = v22;
  v16 = v23;
  sub_10001413C(v21, v22);
  TTRRemindersListEditingState.editingItem.getter(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
    sub_100027F10(v21);
    return 0;
  }
  sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v18 = sub_100027F10(v21);
  result = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
  {
    swift_retain();
    v17 = sub_1003CE7B4((uint64_t)v4);
    swift_release();
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v17;
  }
  __break(1u);
  return result;
}

void sub_1003642A8(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v13);
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController])
  {
    v16 = a2 & 1;
    swift_retain();
    v17 = (void *)sub_1003CE7B4((uint64_t)v15);
    swift_release();
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (v17)
    {
      if (qword_10063D6D8 != -1)
        swift_once(&qword_10063D6D8, sub_100360448);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_100012DC4(v18, (uint64_t)qword_100657190);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRIRemindersBoardMainViewController: Begin editing title of cell of item-to-edit", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

      v23 = objc_msgSend(v17, "contentView");
      v24 = type metadata accessor for TTRIBoardReminderCellContentView(0);
      if (swift_dynamicCastClass(v23, v24))
        sub_1003F61D4(v16, v25);

    }
    else
    {
      v26 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 1, 1, v26);
      sub_10002B1E8(a1, (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      type metadata accessor for MainActor(0);
      v27 = v2;
      v28 = static MainActor.shared.getter(v27);
      v29 = *(unsigned __int8 *)(v6 + 80);
      v30 = (v29 + 40) & ~v29;
      v31 = v30 + v7;
      v32 = (_QWORD *)swift_allocObject(&unk_100603878, v30 + v7 + 1, v29 | 7);
      v32[2] = v28;
      v32[3] = &protocol witness table for MainActor;
      v32[4] = v27;
      sub_10001F580((uint64_t)v8, (uint64_t)v32 + v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *((_BYTE *)v32 + v31) = v16;
      sub_100148368((uint64_t)v11, (uint64_t)&unk_100657340, (uint64_t)v32);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100364598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + 88) = a6;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a5;
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  *(_QWORD *)(v6 + 32) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 40) = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  *(_QWORD *)(v6 + 48) = v10;
  *(_QWORD *)(v6 + 56) = v11;
  return swift_task_switch(sub_100364628, v10, v11);
}

void sub_100364628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_10063D6D8 != -1)
    swift_once(&qword_10063D6D8, sub_100360448);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100012DC4(v1, (uint64_t)qword_100657190);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRIRemindersBoardMainViewController: scrolling cell of item-to-edit to visible", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 16);

  v7 = *(void **)(v6 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController);
  *(_QWORD *)(v0 + 64) = v7;
  if (v7)
  {
    v8 = *(_BYTE *)(v0 + 88) & 1;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v7);
    v9 = swift_allocObject(&unk_1006038A0, 17, 7);
    *(_QWORD *)(v0 + 72) = v9;
    *(_BYTE *)(v9 + 16) = v8;
    v10 = (_QWORD *)swift_task_alloc(dword_100655A44);
    *(_QWORD *)(v0 + 80) = v10;
    *v10 = v0;
    v10[1] = sub_100364790;
    sub_10031B9C4(*(_QWORD *)(v0 + 32), (uint64_t)sub_10036B40C, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100364790(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(void **)(*v1 + 64);
  v5 = *(_QWORD *)(*v1 + 32);
  swift_task_dealloc(*(_QWORD *)(*v1 + 80));
  swift_release();

  sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return swift_task_switch(sub_100364818, *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_100364818()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100364850(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t ObjectType;

  if (qword_10063D6D8 != -1)
    swift_once(&qword_10063D6D8, sub_100360448);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100012DC4(v6, (uint64_t)qword_100657190);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRIRemindersBoardMainViewController: Begin editing title of cell of item-to-edit", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  ObjectType = swift_getObjectType(a1, v11);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2 + 16))(a3 & 1, ObjectType, a2);
}

uint64_t sub_100364954(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = v3;
  *(_BYTE *)(v4 + 224) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  v5 = sub_10002A750((uint64_t *)&unk_1006572F0);
  *(_QWORD *)(v4 + 72) = v5;
  *(_QWORD *)(v4 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  *(_QWORD *)(v4 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  *(_QWORD *)(v4 + 104) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 112) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 120) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 128) = swift_task_alloc(v10);
  v11 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  *(_QWORD *)(v4 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 144) = static MainActor.shared.getter(v12);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v13);
  *(_QWORD *)(v4 + 152) = v14;
  *(_QWORD *)(v4 + 160) = v15;
  return swift_task_switch(sub_100364A8C, v14, v15);
}

void sub_100364A8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1[17];
  v3 = v1[14];
  v23 = v1[13];
  v4 = v1[12];
  v5 = v1[6];
  v6 = *(_QWORD *)(v1[8] + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter(a1);
  v7 = ((uint64_t (*)(uint64_t, uint64_t (*)(uint64_t), uint64_t))TTRRemindersBoardPresentationTrees.ancestorsToExpand(forRevealing:isCollapsed:))(v5, sub_100369AA0, v6);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  v1[5] = v7;
  swift_retain();
  v8 = sub_10002A750((uint64_t *)&unk_100646F50);
  v9 = sub_100023FEC((unint64_t *)&qword_100642EB8, (uint64_t *)&unk_100646F50, (uint64_t)&protocol conformance descriptor for [A]);
  ((void (*)(_QWORD *, uint64_t, uint64_t))TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:))(v1 + 5, v8, v9);
  swift_release();
  swift_bridgeObjectRelease(v7);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.performPendingUpdatesImmediately()();
  ((void (*)(void))TTRRemindersListHighlightTarget.firstItem.getter)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v23) == 1)
  {
    v10 = v1[12];
    swift_release();
    sub_1000073A0(v10, (uint64_t *)&unk_100640EB0);
    v11 = (void *)objc_opt_self(REMError);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "internalErrorWithDebugDescription:", v12);

    swift_willThrow(v13);
    v18 = v1[16];
    v19 = v1[15];
    v21 = v1[11];
    v20 = v1[12];
    v22 = v1[10];
    swift_task_dealloc(v1[17]);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    __asm { BR              X0 }
  }
  v14 = v1[15];
  v15 = v1[16];
  v16 = v1[13];
  sub_10001F580(v1[12], v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8(v15, v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = (char *)&loc_100364C60 + *((int *)qword_100364F38 + swift_getEnumCaseMultiPayload(v14, v16));
  __asm { BR              X10 }
}

uint64_t sub_100364F68(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(void **)(*v1 + 168);
  v5 = *(_QWORD *)(*v1 + 88);
  swift_task_dealloc(*(_QWORD *)(*v1 + 176));

  sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return swift_task_switch(sub_100364FDC, *(_QWORD *)(v3 + 152), *(_QWORD *)(v3 + 160));
}

uint64_t sub_100364FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release();
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100365080(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *v1;
  v4 = *(void **)(*v1 + 184);
  v3 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 200) = a1;
  swift_task_dealloc(v3);

  sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return swift_task_switch(sub_1003650F8, *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 160));
}

uint64_t sub_1003650F8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  _QWORD *v28;

  v1 = (char *)v0[25];
  if (!v1)
  {
    v8 = v0[16];
    swift_release();
    v9 = (void *)objc_opt_self(REMError);
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "internalErrorWithDebugDescription:", v10);

    swift_willThrow(v11);
    sub_10001F544(v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v12 = v0[16];
    v13 = v0[15];
    v15 = v0[11];
    v14 = v0[12];
    v16 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  v2 = v0[9];
  v3 = v0[10];
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v0 + 2, 0, 0);
  sub_10000735C(v4, v3, (uint64_t *)&unk_1006572F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v3, v2);
  if (!EnumCaseMultiPayload)
  {
    v18 = v0[16];
    v19 = v0[10];
    v20 = v1;
    sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

    swift_release();
    v21 = v0[16];
    v22 = v0[15];
    v24 = v0[11];
    v23 = v0[12];
    v25 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  if (EnumCaseMultiPayload == 1)
  {
    v6 = v0[10];
    v7 = v1;
    sub_1000073A0(v6, (uint64_t *)&unk_1006572F0);
  }
  else
  {
    v27 = v1;
  }
  v28 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to TTRRemindersListItemStateTracker.waitFor(_:of:cancelsExistingPromise:)
                                   + 1));
  v0[26] = v28;
  *v28 = v0;
  v28[1] = sub_100365350;
  return TTRRemindersListItemStateTracker.waitFor(_:of:cancelsExistingPromise:)(0, v0[16], 1);
}

uint64_t sub_100365350()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100365450;
  else
    v4 = sub_1003653B0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 160));
}

uint64_t sub_1003653B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release();

  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100365450()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release();

  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003654F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    swift_unknownObjectRetain(v4);

    ObjectType = swift_getObjectType(v4, v6);
    v8 = (uint64_t *)TTRITipKitSignalContext.RemindersList.keyboardShortcut.unsafeMutableAddressor();
    v9 = *v8;
    v10 = v8[1];
    v11 = *(_QWORD *)(v5 + 8);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 808);
    swift_bridgeObjectRetain(v10);
    v12(v9, v10, ObjectType, v11);
    swift_bridgeObjectRelease(v10);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void *sub_1003655AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = (void *)Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    swift_unknownObjectRetain(v4);

    ObjectType = swift_getObjectType(v4, v6);
    v3 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 160))(ObjectType);
    swift_unknownObjectRelease(v4);
  }
  return v3;
}

uint64_t sub_100365834()
{
  return type metadata accessor for TTRIRemindersBoardMainViewController(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardMainViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1006572A0;
  if (!qword_1006572A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersBoardMainViewController);
  return result;
}

void sub_100365878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[26];

  v4[0] = "!";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_10052FB50;
  v4[4] = &unk_10052FB68;
  v4[5] = &unk_10052FB68;
  v4[6] = &unk_10052FB50;
  v4[7] = &unk_10052FB68;
  v4[8] = &unk_10052FB68;
  v4[9] = &unk_10052FB68;
  v4[10] = &unk_10052FB68;
  v4[11] = &unk_10052FB68;
  v4[12] = &unk_10052FB68;
  v4[13] = &unk_10052FB68;
  v4[14] = &unk_10052FB68;
  v4[15] = &unk_10052FB68;
  v4[16] = &unk_10052FB68;
  v4[17] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[18] = &unk_10052FB68;
  v4[19] = &unk_10052FB68;
  v4[20] = &unk_10052FB68;
  v4[21] = &unk_10052FB68;
  v4[22] = &unk_10052FB68;
  v4[23] = &unk_10052FB80;
  v4[24] = &unk_10052FB98;
  sub_100365954(319);
  if (v3 <= 0x3F)
  {
    v4[25] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 26, v4, a1 + 80);
  }
}

void sub_100365954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006572B0)
  {
    v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1006572B0);
  }
}

void sub_1003659A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v1 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10002A750(&qword_100657380);
  __chkstk_darwin(v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_focusController);
  if (v8)
  {
    v9 = v8 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem;
    swift_beginAccess(v8 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem, v11, 0, 0);
    sub_10000735C(v9, (uint64_t)v7, &qword_100657380);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    {
      sub_1000073A0((uint64_t)v7, &qword_100657380);
    }
    else
    {
      sub_10002B1E8((uint64_t)v7, (uint64_t)v4, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
      if (swift_getEnumCaseMultiPayload(v4, v1) == 1)
      {
        sub_10001F544((uint64_t)v4, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
      }
      else
      {
        sub_10002A750(&qword_100656700);
        sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      }
      sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100365B58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController);
  if (!v1)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext, v7, 0, 0);
  if (*v2)
  {
LABEL_5:
    v5 = 0;
    return v5 & 1;
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator);
  if (!v4)
    goto LABEL_10;
  if ((*(_BYTE *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                 + 16) & 3) != 0)
    goto LABEL_5;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
  if (v6)
  {
    v5 = *(_BYTE *)(v6 + 16) ^ 1;
    return v5 & 1;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_100365C08(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView;
  v5 = *(void **)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView];
  if (v5)
  {
    v6 = *(id *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView];
LABEL_6:
    v21 = v5;
    objc_msgSend(a1, "setContentScrollView:forEdge:", v6, 15);
    v22 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider;
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider])
    {
      v23 = swift_retain();
      TTRDeferredViewActionProvider.trigger.getter(v23);
      swift_release();
      v24 = swift_allocObject(&unk_100603850, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16, v2);
      v25 = swift_allocObject(&unk_1006038C8, 32, 7);
      *(_QWORD *)(v25 + 16) = sub_10036B4A0;
      *(_QWORD *)(v25 + 24) = v24;
      v26 = sub_10002A750((uint64_t *)&unk_100657370);
      v27 = sub_100023FEC(&qword_100644BA8, (uint64_t *)&unk_100657370, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v28 = Publisher<>.sink(receiveValue:)(sub_10001B280, v25, v26, v27);
      swift_release();
      swift_release();
      *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_scrollToTopCancellable] = v28;
      swift_release();
      if (*(_QWORD *)&v2[v22])
      {
        swift_retain();
        TTRDeferredViewActionProvider.schedule()();

        swift_release();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  v7 = objc_msgSend(v2, "view");
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v10, v12, v14, v16);
  objc_msgSend(v17, "setAutoresizingMask:", 16);
  objc_msgSend(v17, "setContentInsetAdjustmentBehavior:", 3);
  objc_msgSend(v17, "setHidden:", 1);
  v18 = objc_msgSend(v2, "view");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "insertSubview:atIndex:", v17, 0);

    v20 = *(void **)&v2[v4];
    *(_QWORD *)&v2[v4] = v17;
    v6 = v17;

    v5 = 0;
    goto LABEL_6;
  }
LABEL_12:
  __break(1u);
}

void sub_100365E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_scrollToTopCancellable);
    *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_scrollToTopCancellable] = 0;
    swift_release(v4);
    v5 = *(void **)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView];
    if (v5)
      objc_msgSend(v5, "_scrollToTopIfPossible:", 0);

  }
}

uint64_t sub_100365F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  CGRect v25;

  v3 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v6 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
  result = sub_10001F580((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
  {
    v19 = swift_retain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
    TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)(v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v24) == 1)
    {
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_1006463C0);
      swift_release();
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    else
    {
      v20 = (uint64_t)v5;
      v21 = v23;
      sub_10001F580(v20, v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v22 = (void *)sub_1003CE8E4(v21);
      sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      swift_release();
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if (v22)
      {
        objc_msgSend(v22, "frame");
        CGRectGetHeight(v25);

        return sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
    return sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003661C8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v2 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_beginAccess(v4 + 48, v15, 33, 0);
  v6 = v3;
  swift_retain();
  v7 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v4, v7);
  swift_endAccess(v15);
  swift_beginAccess(v4 + 56, v15, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v4, v7);
  swift_endAccess(v15);
  v8 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain(v8);
  swift_release();
  v15[0] = v8;
  v9 = sub_100023FEC((unint64_t *)&unk_100640F10, (uint64_t *)&unk_100646F30, (uint64_t)&protocol conformance descriptor for Set<A>);
  v3 = (void *)TTRRemindersBoardMainDiffableDataSource.items<A>(withIDs:)(v15, v7, v9);
  swift_bridgeObjectRelease(v8);

  if ((a1 & 1) == 0)
    return;
  v10 = *(void **)(v1 + v2);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(v3);
    __break(1u);
    return;
  }
  v15[0] = v3;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = v10;
  v13 = sub_10002A750(&qword_100649DF0);
  v14 = sub_100023FEC((unint64_t *)&qword_100649EE0, &qword_100649DF0, (uint64_t)&protocol conformance descriptor for [A]);
  TTRRemindersBoardMainDiffableDataSource.sortByItemVisualLocation<A, B>(_:itemID:)(v15, sub_1003663B0, 0, v11, v13, v14);
  swift_bridgeObjectRelease(v3);

}

uint64_t sub_1003663B0()
{
  return TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
}

void sub_1003663D0(double a1, double a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  unint64_t v7;
  _QWORD v8[2];

  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
  if (v3)
  {
    v6 = v3;
    objc_msgSend(v6, "horizontalScrollIndicatorInsets");
    objc_msgSend(v6, "setHorizontalScrollIndicatorInsets:");

    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_observableScrollViewInsets))
    {
      *(double *)v8 = a1;
      *(double *)&v8[1] = a2;
      v7 = sub_10036B414();
      swift_retain();
      TTRObservableViewModel<A>.update(with:forcePublish:)(v8, 0, v7);
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_100366480(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  _QWORD *v25;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v22 = v2;
    v23 = a2;
    v25 = _swiftEmptyArrayStorage;
    sub_1003D8424(0, v13, 0);
    v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v24 = *(_QWORD *)(v6 + 72);
    v14 = v25;
    do
    {
      v16 = sub_10002B1E8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v16);
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      {
        sub_1003D8424(0, v14[2] + 1, 1);
        v14 = v25;
      }
      v18 = v14[2];
      v17 = v14[3];
      if (v18 >= v17 >> 1)
      {
        sub_1003D8424(v17 > 1, v18 + 1, 1);
        v14 = v25;
      }
      v14[2] = v18 + 1;
      sub_10001F580((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v15 += v24;
      --v13;
    }
    while (v13);
    a2 = v23;
  }
  v25 = v14;
  swift_retain();
  v19 = sub_10002A750((uint64_t *)&unk_100646F50);
  v20 = sub_100023FEC((unint64_t *)&qword_100642EB8, (uint64_t *)&unk_100646F50, (uint64_t)&protocol conformance descriptor for [A]);
  a2(&v25, v19, v20);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1003666AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10000F614(a1, v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_initialFrameForLoadingView, (uint64_t *)&unk_1006547A0);
}

uint64_t sub_1003666D8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_preferredChromelessBarStates));
}

uint64_t sub_1003666E8()
{
  return sub_1003640BC();
}

uint64_t sub_100366710()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0
                                            + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu));
}

uint64_t sub_100366728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002B1E8(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v6 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  v7 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo, v10, 33, 0);
  sub_10036B458((uint64_t)v5, v7);
  swift_endAccess(v10);
  sub_100361C20();
  return sub_1000073A0((uint64_t)v5, &qword_100649CA0);
}

void sub_100366814(unsigned int a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v4;
  id v8;

  v4 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController);
  if (v4)
  {
    v8 = v4;
    sub_10031EDB4(a1, a2, a3 & 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_100366880(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  void *v5;
  id v10;

  v5 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
  if (v5)
  {
    v10 = v5;
    UIScrollView.bottomContentInset(forAvoidingKeyboardFrame:)(a1, a2, a3, a4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1003668F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController))
  {
    swift_retain();
    sub_1000CC65C();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_100366934()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v0 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_retain();
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v3);
  v4 = TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)(v2);
  swift_release();
  sub_10001F544((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return (v4 & 1) == 0;
}

double sub_1003669F0(uint64_t a1)
{
  return sub_100366480(a1, (void (*)(_QWORD, _QWORD, _QWORD))&TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:));
}

double sub_100366A0C(uint64_t a1)
{
  return sub_100366480(a1, (void (*)(_QWORD, _QWORD, _QWORD))&TTRRemindersBoardCollapsedStatesPresenterCapability.collapse<A>(_:));
}

uint64_t sub_100366A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter) + 80);
  swift_retain(v3);
  v4 = swift_retain(a1);
  TTRRemindersBoardCollapsedStatesPresenterCapability.collapsedStatesPersistence.setter(v4);
  return swift_release(v3);
}

void sub_100366F14(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  char *v38;
  void *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  char *v55;
  char *v56;
  char *v57;
  id v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  id v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v60 = a1;
  v2 = sub_10002A750(&qword_100646950);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v69 = (char *)&v55 - v6;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v64 = (char *)&v55 - v12;
  v13 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v72 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v55 - v20;
  v22 = v1;
  v23 = objc_msgSend(v1, "viewIfLoaded");
  if (!v23)
    return;
  v24 = v23;
  v61 = (id)UIView.firstResponderDescendant.getter();

  if (!v61)
    return;
  v55 = v11;
  v25 = v60;
  v26 = *(_QWORD *)(v60 + 16);
  if (!v26)
  {

    return;
  }
  v68 = v8;
  v56 = v5;
  v27 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v28 = v25 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  v70 = *(_QWORD *)(v27 + 72);
  v71 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController;
  swift_bridgeObjectRetain(v25);
  v66 = v21;
  v67 = v7;
  v57 = v22;
  v63 = v16;
  v65 = v17;
  while (1)
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v29);
    if (!*(_QWORD *)&v22[v71])
      break;
    swift_retain();
    TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
LABEL_17:
      swift_release();
      goto LABEL_18;
    }
    v30 = (uint64_t)v15;
    v31 = v22;
    v32 = (char *)v30;
    v33 = v72;
    sub_10001F580(v30, v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v34 = v69;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v33);
    v35 = (uint64_t)v34;
    v36 = v68;
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    if (v37(v35, 1, v7) == 1)
    {
      sub_1000073A0(v35, &qword_100646950);
LABEL_15:
      sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v7 = v67;
      v17 = v65;
      v22 = v31;
LABEL_16:
      v15 = v32;
      v21 = v66;
      goto LABEL_17;
    }
    v38 = v64;
    v62 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
    v62(v64, v35, v7);
    v39 = (void *)UICollectionView.visibleCellForItem(at:)(v38);
    v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v41 = v38;
    v16 = v63;
    v40(v41, v7);
    if (!v39)
      goto LABEL_15;
    v59 = v40;
    v42 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
    v43 = swift_dynamicCastClass(v39, v42);
    if (!v43)
    {

      sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v22 = v57;
      v7 = v67;
      v17 = v65;
      goto LABEL_16;
    }
    v44 = v43;
    v58 = v39;
    sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v45 = *(void **)(v44 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
    if (!v45)
      goto LABEL_33;
    v15 = v32;
    v46 = v45;
    v47 = (uint64_t)v56;
    v21 = v66;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v66);

    v7 = v67;
    if (v37(v47, 1, v67) == 1)
    {
      sub_1000073A0(v47, &qword_100646950);
      v16 = v63;
LABEL_27:
      swift_release();

LABEL_28:
      v22 = v57;
      v17 = v65;
LABEL_18:
      v29 = sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      goto LABEL_19;
    }
    v48 = v55;
    v62(v55, v47, v7);
    v49 = *(void **)(v44 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
    if (!v49)
      goto LABEL_34;
    v50 = v49;
    v51 = (void *)UICollectionView.visibleCellForItem(at:)(v48);

    v59(v48, v7);
    v16 = v63;
    if (!v51)
      goto LABEL_27;
    v52 = type metadata accessor for TTRIBoardReminderCell(0);
    v53 = swift_dynamicCastClass(v51, v52);
    swift_release();

    if (!v53)
    {

      goto LABEL_28;
    }
    sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v54 = objc_msgSend(v61, "isDescendantOfView:", v53);

    v22 = v57;
    v17 = v65;
    if ((v54 & 1) != 0)
    {
      swift_bridgeObjectRelease(v60);
      objc_msgSend(v61, "resignFirstResponder");

      return;
    }
LABEL_19:
    v28 += v70;
    if (!--v26)
    {

      swift_bridgeObjectRelease(v60);
      return;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_10036749C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;
  unsigned __int8 v22;
  void *v23;
  char v24;

  v3 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v4);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
  {
    swift_retain();
    v7 = (void *)sub_1003CE7B4((uint64_t)v6);
    swift_release();
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v8 = 0uLL;
    if (!v7)
    {
      v14 = 0;
      v16 = 0;
      v15 = 254;
      v17 = 0uLL;
      goto LABEL_8;
    }
    v9 = objc_msgSend(v7, "contentView", 0.0);
    v10 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    v11 = swift_dynamicCastClass(v9, v10);
    if (!v11)
    {

      v14 = 0;
      v7 = 0;
      v16 = 0;
      v15 = 254;
      v17 = 0uLL;
      v8 = 0uLL;
      goto LABEL_8;
    }
    if (*(_QWORD *)(v11 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
    {
      LOBYTE(v20[0]) = 4;
      *((_QWORD *)&v18 - 2) = __chkstk_darwin(v11);
      swift_retain();
      v12 = (void *)TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)(v20, sub_1001F8550, &v18 - 2);

      v13 = swift_release();
      static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)(v20, v12, 0, 1, v13);
      v18 = v20[1];
      v19 = v20[0];
      v14 = v21;
      v15 = v22;
      v7 = v23;
      v16 = v24;

      v17 = v18;
      v8 = v19;
LABEL_8:
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v17;
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v7;
      *(_BYTE *)(a1 + 56) = v16;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100367684(uint64_t a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  v37 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v37 + 64);
  __chkstk_darwin(v6);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10002A750(&qword_100649BA0);
  v14 = __chkstk_darwin(v13);
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = TTRRemindersListHighlightTarget.targetItems.getter(v14);
  v18 = v17;
  if (*(_QWORD *)(v17 + 16))
  {
    v19 = *(unsigned __int8 *)(v10 + 80);
    v35 = a2;
    v20 = v17 + ((v19 + 32) & ~v19);
    v36 = sub_10002A750(&qword_100657300);
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 1, 1, v21);
    sub_10002B1E8(v20, (uint64_t)&v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    sub_10002B1E8(a1, (uint64_t)&v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    type metadata accessor for MainActor(0);
    v22 = v3;
    v23 = static MainActor.shared.getter(v22);
    v24 = (v19 + 41) & ~v19;
    v25 = *(unsigned __int8 *)(v37 + 80);
    v26 = (v24 + v11 + v25) & ~v25;
    v27 = v19 | v25 | 7;
    v28 = (v7 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_100603828, v28 + 8, v27);
    *(_QWORD *)(v29 + 16) = v23;
    *(_QWORD *)(v29 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v29 + 32) = v22;
    *(_BYTE *)(v29 + 40) = v35 & 1;
    sub_10001F580((uint64_t)v12, v29 + v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    sub_10001F580((uint64_t)v8, v29 + v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    *(_QWORD *)(v29 + v28) = v18;
    v30 = sub_1001B9C04((uint64_t)v16, (uint64_t)&unk_100657310, v29);
    return Promise.__allocating_init(task:)(v30);
  }
  else
  {
    swift_bridgeObjectRelease(v17);
    v32 = sub_10002A750(&qword_100657300);
    v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    return Promise.init(value:)(v33);
  }
}

uint64_t sub_1003678E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_BYTE *)(v8 + 320) = a5;
  *(_QWORD *)(v8 + 136) = a4;
  *(_QWORD *)(v8 + 144) = a6;
  v9 = sub_10002A750((uint64_t *)&unk_1006572F0);
  *(_QWORD *)(v8 + 168) = v9;
  *(_QWORD *)(v8 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.ItemID(0) - 8);
  *(_QWORD *)(v8 + 184) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 192) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 200) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 208) = swift_task_alloc(v11);
  v12 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v8 + 216) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 224) = v13;
  *(_QWORD *)(v8 + 232) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  *(_QWORD *)(v8 + 240) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 248) = v15;
  *(_QWORD *)(v8 + 256) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 264) = static MainActor.shared.getter(v16);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor, v17);
  *(_QWORD *)(v8 + 272) = v18;
  *(_QWORD *)(v8 + 280) = v19;
  return swift_task_switch(sub_100367A10, v18, v19);
}

uint64_t sub_100367A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 144);
  sub_100362510(0, *(unsigned __int8 *)(v0 + 320));
  if (*(_BYTE *)(v2 + *(int *)(v1 + 20)))
    v3 = 2;
  else
    v3 = 0;
  v4 = (_QWORD *)swift_task_alloc(dword_1006572EC);
  *(_QWORD *)(v0 + 288) = v4;
  *v4 = v0;
  v4[1] = sub_100367A98;
  return sub_100364954(*(_QWORD *)(v0 + 152), v3, *(_BYTE *)(v0 + 320));
}

uint64_t sub_100367A98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10036817C;
  else
    v4 = sub_100367AF8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 272), *(_QWORD *)(v2 + 280));
}

void sub_100367AF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = v0[20];
  v30 = *(_QWORD *)(v1 + 16);
  if (v30)
  {
    v24 = v0 + 5;
    v25 = v0 + 2;
    v2 = v0[31];
    v23 = v0[23];
    v28 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController;
    v29 = v0[17];
    v26 = *(_QWORD *)(v2 + 72);
    v27 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v3 = v0[37];
    swift_bridgeObjectRetain(v1);
    v4 = 0;
    while (1)
    {
      sub_10002B1E8(v27 + v4 * v26, v0[32], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      v5 = *(_QWORD *)(v29 + v28);
      if (!v5)
        break;
      v6 = v0[32];
      v7 = *(_BYTE *)(v6 + *(int *)(v0[30] + 20));
      swift_retain();
      v8 = sub_100433610(v6, v7);
      swift_beginAccess(v5 + 48, v25, 33, 0);
      v9 = sub_10002A750((uint64_t *)&unk_100646F30);
      Set.removeAll(where:)(sub_10036A588, v5, v9);
      swift_endAccess(v25);
      swift_beginAccess(v5 + 56, v24, 33, 0);
      v10 = v9;
      v11 = v8;
      Set.removeAll(where:)(sub_10036A588, v5, v10);
      swift_endAccess(v24);
      v12 = *(_QWORD *)(v5 + 56);
      v13 = *(_QWORD *)(v8 + 16);
      if (v13)
      {
        v31 = v4;
        v32 = v3;
        v14 = v11;
        v15 = v11 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        swift_bridgeObjectRetain(v12);
        v16 = *(_QWORD *)(v23 + 72);
        do
        {
          v17 = v0[24];
          v18 = v0[25];
          sub_10002B1E8(v15, v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1004809C4(v18, v17);
          sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v15 += v16;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease(v14);
        v3 = v32;
        v4 = v31;
      }
      else
      {
        swift_bridgeObjectRetain(v12);
        swift_bridgeObjectRelease(v11);
      }
      v19 = *(_QWORD *)(v5 + 56);
      *(_QWORD *)(v5 + 56) = v12;
      swift_bridgeObjectRelease(v19);
      if (!*(_QWORD *)(v5 + 32))
        goto LABEL_14;
      ++v4;
      v20 = v0[32];
      v21 = swift_task_alloc(32);
      *(_QWORD *)(v21 + 16) = v5;
      *(_QWORD *)(v21 + 24) = 7;
      swift_retain();
      TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_10036A848, v21);
      swift_release();
      swift_release();
      swift_task_dealloc(v21);
      sub_10001F544(v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      if (v4 == v30)
      {
        swift_bridgeObjectRelease(v0[20]);
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_12:
    ContinuousClock.init()();
    v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100657320 + dword_100657320);
    v22 = (_QWORD *)swift_task_alloc(unk_100657324);
    v0[38] = v22;
    *v22 = v0;
    v22[1] = sub_100367DFC;
    v33(1000000000000000000, 0, 0, 0, 1);
  }
}

uint64_t sub_100367DFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[28] + 8))(v2[29], v2[27]);
  if (v0)
    v4 = sub_1003680F8;
  else
    v4 = sub_100367E6C;
  return swift_task_switch(v4, v2[34], v2[35]);
}

void sub_100367E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release();
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v2);
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = *(_QWORD *)(v0 + 208);
  swift_retain();
  v4 = (char *)sub_1003CE7B4(v3);
  swift_release();
  sub_10001F544(v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v7 = (uint64_t)&v4[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState];
    swift_beginAccess(&v4[OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_viewModelState], v0 + 112, 0, 0);
    sub_10000735C(v7, v5, (uint64_t *)&unk_1006572F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1000073A0(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1006572F0);
    }
    else
    {
      sub_10001F544(*(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v4);
    }

  }
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 136)
                 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
  if (!v9)
    goto LABEL_12;
  swift_beginAccess(v9 + 48, v0 + 64, 33, 0);
  swift_retain();
  v10 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v9, v10);
  swift_endAccess(v0 + 64);
  swift_beginAccess(v9 + 56, v0 + 88, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v9, v10);
  v11 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v9 + 56) = &_swiftEmptySetSingleton;
  swift_endAccess(v0 + 88);
  swift_bridgeObjectRelease(v11);
  if (*(_QWORD *)(v9 + 32))
  {
    v12 = *(_QWORD *)(v0 + 256);
    v13 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 176);
    v18 = swift_task_alloc(32);
    *(_QWORD *)(v18 + 16) = v9;
    *(_QWORD *)(v18 + 24) = 7;
    swift_retain();
    TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_100370770, v18);
    swift_release();
    swift_release();
    swift_task_dealloc(v18);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1003680F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 264));
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036817C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 264));
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100368200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v7 + 104) = a7;
  *(_QWORD *)(v7 + 32) = a5;
  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  *(_QWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 64) = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  *(_QWORD *)(v7 + 72) = v11;
  *(_QWORD *)(v7 + 80) = v12;
  return swift_task_switch(sub_100368298, v11, v12);
}

uint64_t sub_100368298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  sub_10002B1E8(*(_QWORD *)(v0 + 32), v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v2, v1, 0);
  v3 = (_QWORD *)swift_task_alloc(dword_1006572EC);
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_100368318;
  return sub_100364954(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 104));
}

uint64_t sub_100368318()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  sub_10001F544(v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
  if (v0)
    v5 = sub_1003683F4;
  else
    v5 = sub_100368394;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100368394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_10002B1E8(v2, v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003683F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100368430(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  void *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  char v75[32];

  v70 = a1;
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v67 - v19;
  v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  result = __chkstk_darwin(v23);
  v27 = (char *)&v67 - v26;
  v28 = *(_QWORD *)(a2 + 16);
  v71 = v4;
  if (v28 != 1)
  {
    v29 = 0;
    if (!v28)
    {
      v30 = *(void **)(v70 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
      if (v30)
      {
        v31 = v30;
        TTRBoardColumnDiffableDataSource.columnItem.getter();

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
        {
          v32 = (uint64_t)v20;
LABEL_17:
          sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
          return 0;
        }
        sub_10001F580((uint64_t)v20, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v42 = *(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v43);
        sub_10002B1E8((uint64_t)v27, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
        v29 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v42 + 8) + 752))(v18, ObjectType);
        sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
        if (!v29)
        {
          sub_10001F544((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          return v29;
        }
        v45 = sub_10002A750((uint64_t *)&unk_1006469C0);
        v46 = *(unsigned __int8 *)(v22 + 80);
        v47 = (v46 + 32) & ~v46;
        v48 = (_OWORD *)swift_allocObject(v45, v47 + *(_QWORD *)(v22 + 72), v46 | 7);
        v48[1] = xmmword_100520250;
        sub_10002B1E8((uint64_t)v27, (uint64_t)v48 + v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_27;
    }
    return v29;
  }
  v68 = v25;
  v69 = v11;
  v33 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
  if (!v33)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  swift_beginAccess(v33 + 48, v72, 33, 0);
  swift_retain();
  v34 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v33, v34);
  swift_endAccess(v72);
  swift_beginAccess(v33 + 56, v72, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v33, v34);
  swift_endAccess(v72);
  v35 = *(_QWORD *)(v33 + 48);
  swift_bridgeObjectRetain(v35);
  swift_release();
  v36 = *((_QWORD *)sub_100120268(a2, v35) + 2);
  swift_release();
  v29 = 0;
  if (v36)
    return v29;
  v37 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v38 = (uint64_t)v69;
  result = sub_10002B1E8(v37, (uint64_t)v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v39 = *(char **)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v39)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v40 = (uint64_t)&v39[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v39[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v75, 0, 0);
  v41 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v15, 1, 1, v21);
LABEL_16:
    sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v32 = (uint64_t)v15;
    goto LABEL_17;
  }
  sub_100010634(v40, (uint64_t)v72);
  v50 = v73;
  v51 = v74;
  sub_10001413C(v72, v73);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 40);
  v53 = v39;
  v52(v69, v50, v51);
  sub_100027F10(v72);

  v38 = (uint64_t)v69;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1)
    goto LABEL_16;
  result = sub_10001F580((uint64_t)v15, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (*(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
  {
    swift_retain();
    v54 = (void *)sub_1003CE7B4(v38);
    swift_release();
    if (!v54)
    {
      sub_10001F544(v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return 0;
    }
    objc_msgSend(v54, "convertPoint:fromCoordinateSpace:", v70, a3, a4);
    v56 = v55;
    v58 = v57;
    v59 = *(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    v61 = swift_getObjectType(*(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v60);
    v62 = v68;
    v29 = (*(uint64_t (**)(uint64_t, void *, _QWORD *, _QWORD, uint64_t, double, double))(*(_QWORD *)(v59 + 8)
                                                                                                + 736))(v68, v54, _swiftEmptyArrayStorage, 0, v61, v56, v58);
    v48 = v63;
    v65 = v64;

    sub_10001F544(v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (!v29)
      return v29;
    if ((v65 & 1) != 0)
    {
      sub_1002DC598(v48, 1);
      v66 = *(_QWORD *)(v71
                      + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu);
      *(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v66);
      return v29;
    }
LABEL_13:
    v49 = *(_QWORD *)(v71
                    + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu);
    *(_QWORD *)(v71 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu) = v48;
    swift_bridgeObjectRelease(v49);
    return v29;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_100368A54(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  char v38[24];

  v5 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(char **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v15)
  {
    v16 = (uint64_t)&v15[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v15[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v38, 0, 0);
    v17 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_5:
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
      v23 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
      return;
    }
    v32 = v14;
    v33 = v7;
    v34 = v2;
    sub_100010634(v16, (uint64_t)v35);
    v18 = v36;
    v19 = v37;
    sub_10001413C(v35, v36);
    v20 = a2;
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    v22 = v15;
    v21(a1, v18, v19);
    a2 = v20;
    sub_100027F10(v35);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      goto LABEL_5;
    v24 = (uint64_t)v32;
    sub_10001F580((uint64_t)v10, (uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v25 = *(_QWORD *)(v34 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v34 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v26);
    v28 = *(_QWORD *)(v25 + 8);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 880))(v24, ObjectType, v28) & 1) != 0)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 776))(v24, ObjectType, v28);
    v29 = (uint64_t)v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 424))(v24, ObjectType, v28);
    v30 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30) != 1)
      TTRRemindersListItemStateTracker.fullfil(_:of:)(0, v24);
    sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10000F614(v29, a2, (uint64_t *)&unk_100646F40);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100368D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002B1E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100368D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v41 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v37 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_10063F1A8);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v8;
  sub_10000735C(a1 + *(int *)(v8 + 52), (uint64_t)v13, (uint64_t *)&unk_1006463C0);
  v38 = a1;
  sub_10000735C(a1, (uint64_t)v10, &qword_10063F1A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10002B1E8((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1000073A0((uint64_t)v10, &qword_10063F1A8);
    result = sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_1006463C0);
  }
  else
  {
    sub_1000073A0((uint64_t)v10, &qword_10063F1A8);
    result = sub_10001F580((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v19 = *(char **)(v42 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v19)
  {
    v20 = (uint64_t)&v19[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v19[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v46, 0, 0);
    v21 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
    {
      v23 = v39;
      v22 = v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v5, 1, 1, v40);
    }
    else
    {
      sub_100010634(v20, (uint64_t)v43);
      v24 = v44;
      v25 = v45;
      sub_10001413C(v43, v44);
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 40);
      v27 = v19;
      v26(v17, v24, v25);
      sub_100027F10(v43);

      v23 = v39;
      v22 = v40;
    }
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22) == 1)
    {
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      v28 = sub_10002A750(&qword_100657418);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v41, 1, 1, v28);
    }
    else
    {
      v29 = (uint64_t)v5;
      v30 = v37;
      sub_10001F580(v29, v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v31 = sub_10002A750(&qword_100657418);
      v32 = *(int *)(v31 + 48);
      v33 = v30;
      v34 = v41;
      sub_10001F580(v33, v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_QWORD *)(v34 + v32) = *(_QWORD *)(v38 + *(int *)(v36 + 56));
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v34, 0, 1, v31);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_100369138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *result;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  char v90[32];

  v2 = v1;
  v4 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (id *)((char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v77 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v78 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v83 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v82 = (uint64_t)&v72 - v15;
  v84 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem(0);
  v16 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v72 - v20;
  result = sub_1000C14BC();
  v23 = result;
  v24 = result[2];
  if (v24)
  {
    v76 = v18;
    v80 = v12;
    v81 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource;
    v25 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
    if (v25)
    {
      v87[0] = result;
      v26 = v25;
      v27 = sub_10002A750(&qword_100657430);
      v28 = sub_100023FEC(&qword_100657438, &qword_100657430, (uint64_t)&protocol conformance descriptor for [A]);
      v29 = TTRRemindersBoardMainDiffableDataSource.sortByItemVisualLocation<A, B>(_:itemID:)(v87, sub_100369830, 0, v84, v27, v28);
      swift_bridgeObjectRelease(v23);

      v30 = *(_QWORD *)(v29 + 16);
      v31 = (uint64_t)v78;
      if (!v30)
      {
        swift_bridgeObjectRelease(v29);
        return _swiftEmptyArrayStorage;
      }
      v74 = v24;
      v32 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v73 = v29;
      v75 = v32;
      v33 = v29 + v32;
      v34 = *(_QWORD *)(v16 + 72);
      v85 = _swiftEmptyArrayStorage;
      v86 = _swiftEmptyArrayStorage;
      v35 = (uint64_t)v77;
      v36 = v79;
      while (1)
      {
        v37 = v34;
        result = (_QWORD *)sub_10002B1E8(v33, (uint64_t)v21, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        v38 = *(char **)(v2 + v81);
        if (!v38)
          break;
        v39 = &v21[*(int *)(v84 + 20)];
        v40 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
        sub_10002B1E8((uint64_t)&v39[*(int *)(v40 + 28)], v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v41 = (uint64_t)&v38[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
        swift_beginAccess(&v38[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v90, 0, 0);
        v42 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
        {
          v43 = v80;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v31, 1, 1, v36);
        }
        else
        {
          sub_100010634(v41, (uint64_t)v87);
          v45 = v88;
          v44 = v89;
          sub_10001413C(v87, v88);
          v46 = v2;
          v47 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 40);
          v48 = v38;
          v49 = v45;
          v50 = v44;
          v31 = (uint64_t)v78;
          v36 = v79;
          v47(v77, v49, v50);
          v2 = v46;
          v35 = (uint64_t)v77;
          sub_100027F10(v87);

          v43 = v80;
        }
        sub_10001F544(v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v31, 1, v36) == 1)
        {
          sub_10001F544((uint64_t)v21, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
          sub_1000073A0(v31, (uint64_t *)&unk_100640EB0);
        }
        else
        {
          v51 = v82;
          sub_10001F580(v31, v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10002B1E8(v51, v83, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) != 0)
            v52 = (unint64_t)v85;
          else
            v52 = sub_100454EEC(0, v85[2] + 1, 1, (unint64_t)v85);
          v54 = *(_QWORD *)(v52 + 16);
          v53 = *(_QWORD *)(v52 + 24);
          if (v54 >= v53 >> 1)
            v52 = sub_100454EEC(v53 > 1, v54 + 1, 1, v52);
          *(_QWORD *)(v52 + 16) = v54 + 1;
          v55 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
          v85 = (_QWORD *)v52;
          sub_10001F580(v83, v52 + v55 + *(_QWORD *)(v43 + 72) * v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v56 = (uint64_t)v76;
          sub_10002B1E8((uint64_t)v21, (uint64_t)v76, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
          if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) != 0)
            v57 = (unint64_t)v86;
          else
            v57 = sub_100455C78(0, v86[2] + 1, 1, (unint64_t)v86);
          v59 = *(_QWORD *)(v57 + 16);
          v58 = *(_QWORD *)(v57 + 24);
          if (v59 >= v58 >> 1)
            v57 = sub_100455C78(v58 > 1, v59 + 1, 1, v57);
          *(_QWORD *)(v57 + 16) = v59 + 1;
          v86 = (_QWORD *)v57;
          sub_10001F580(v56, v57 + v75 + v59 * v37, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
          sub_10001F544(v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10001F544((uint64_t)v21, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
          v36 = v79;
        }
        v33 += v37;
        --v30;
        v34 = v37;
        if (!v30)
        {
          swift_bridgeObjectRelease(v73);
          return v86;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    v60 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator), "items", swift_bridgeObjectRelease(result).n128_f64[0]);
    v61 = sub_10002A750((uint64_t *)&unk_100657420);
    v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

    swift_retain();
    v63 = sub_10036AD74(v62, a1);
    swift_bridgeObjectRelease(v62);
    swift_release();
    v64 = *(_QWORD *)(v63 + 16);
    if (v64)
    {
      v87[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v64);
      v65 = v63 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v66 = *(_QWORD *)(v5 + 72);
      do
      {
        sub_10002B1E8(v65, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
        v67 = *v7;
        v68 = sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v68);
        v69 = *(_QWORD *)(v87[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v69);
        v70 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
        specialized ContiguousArray._endMutation()(v70);
        v65 += v66;
        --v64;
      }
      while (v64);
      v71 = v87[0];
      swift_bridgeObjectRelease(v63);
      return (_QWORD *)v71;
    }
    else
    {
      swift_bridgeObjectRelease(v63);
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_100369830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem(0) + 20);
  v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  return sub_10002B1E8(v3 + *(int *)(v4 + 28), a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

void sub_100369880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  CGRect v16;

  v3 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v4, "convertPoint:fromCoordinateSpace:", a1);
  v6 = *(void **)(v1 + v3);
  if (!v6)
  {
LABEL_6:
    __break(1u);
    return;
  }
  v7 = v5;
  objc_msgSend(v6, "contentSize");
  v16.size.width = v8;
  v16.size.height = v9;
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  if (CGRectGetMaxX(v16) <= v7)
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    v12 = *(_QWORD *)(v11 + 48);
    v13 = *(_QWORD *)(v11 + 64);
    ObjectType = swift_getObjectType(v12, v10);
    v15 = *(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v13 + 296);
    swift_unknownObjectRetain(v12);
    v15(1, 0, 0, ObjectType, v13);
    swift_unknownObjectRelease(v12);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardMainViewController.LayoutSection()
{
  return objc_opt_self(_TtCFC9Reminders36TTRIRemindersBoardMainViewControllerP33_E293260EF7600B96723E612DCC7A6A8114generateLayoutFT_CSo22UICollectionViewLayoutL_13LayoutSection);
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRIRemindersBoardMainViewController.CompletedHeaderViewState(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_retain(v4);
  return a1;
}

uint64_t destroy for TTRIRemindersBoardMainViewController.CompletedHeaderViewState(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for TTRIRemindersBoardMainViewController.CompletedHeaderViewState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersBoardMainViewController.CompletedHeaderViewState(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardMainViewController.CompletedHeaderViewState()
{
  return &type metadata for TTRIRemindersBoardMainViewController.CompletedHeaderViewState;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardMainViewController.EventPublishers()
{
  return &type metadata for TTRIRemindersBoardMainViewController.EventPublishers;
}

uint64_t sub_100369AA0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A4068(a1, v1);
}

id sub_100369AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

uint64_t sub_100369B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 41) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v10 = (_QWORD *)(v0 + v3);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v10, v11))
  {
    case 0u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v10, v12))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v10, v13))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v14 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
          break;
        default:
          break;
      }
LABEL_22:
      v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v26 = (char *)v10 + *(int *)(v25 + 20);
      v27 = *((_QWORD *)v26 + 1);
      if (v27)
      {
        swift_bridgeObjectRelease(v27);
        sub_10003E2EC(*((void **)v26 + 2), *((_QWORD *)v26 + 3), *((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5), *((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7), v26[64]);
        v28 = v26[120];
        if (v28 != 255)
          sub_10002B328(*((void **)v26 + 9), *((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11), *((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13), *((_QWORD *)v26 + 14), v28 & 1);
      }
      v18 = *(id *)((char *)v10 + *(int *)(v25 + 44));
      goto LABEL_26;
    case 2u:

      v10 = (_QWORD *)((char *)v10 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v15 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload(v10, v15))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v10 = (_QWORD *)((char *)v10 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16))
      {
        switch(swift_getEnumCaseMultiPayload(v10, v16))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v10 = (_QWORD *)((char *)v10 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17))
      {
        switch(swift_getEnumCaseMultiPayload(v10, v17))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v18 = (id)*v10;
      goto LABEL_26;
    case 7u:
      v19 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v10, 1, v19))
      {
        swift_bridgeObjectRelease(*v10);
        v20 = (char *)v10 + *(int *)(v19 + 20);
        v21 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      }
      v10 = (_QWORD *)((char *)v10
                     + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v22 = v10[1];
      if (!v22)
        break;
      swift_bridgeObjectRelease(v22);
LABEL_16:
      v18 = (id)v10[2];
LABEL_26:

      break;
    case 8u:
      v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v10, 1, v23))
        break;
LABEL_18:
      v24 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v10, v24);
      break;
    case 9u:
      v10 = (_QWORD *)((char *)v10 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v24 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v29 = (_QWORD *)(v0 + v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v8, v5);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease(*v29);
      break;
    case 1:
      switch(swift_getEnumCaseMultiPayload(v0 + v8, v11))
      {
        case 0u:
          v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v8, v32))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_52;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_51;
            default:
              goto LABEL_53;
          }
          goto LABEL_53;
        case 1u:
          v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v8, v44))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_52:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_51:
              v45 = type metadata accessor for Date(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v0 + v8, v45);
              break;
            default:
              break;
          }
LABEL_53:
          v46 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v47 = (char *)v29 + *(int *)(v46 + 20);
          v48 = *((_QWORD *)v47 + 1);
          if (v48)
          {
            swift_bridgeObjectRelease(v48);
            sub_10003E2EC(*((void **)v47 + 2), *((_QWORD *)v47 + 3), *((_QWORD *)v47 + 4), *((_QWORD *)v47 + 5), *((_QWORD *)v47 + 6), *((_QWORD *)v47 + 7), v47[64]);
            v49 = v47[120];
            if (v49 != 255)
              sub_10002B328(*((void **)v47 + 9), *((_QWORD *)v47 + 10), *((_QWORD *)v47 + 11), *((_QWORD *)v47 + 12), *((_QWORD *)v47 + 13), *((_QWORD *)v47 + 14), v49 & 1);
          }
          v37 = *(id *)((char *)v29 + *(int *)(v46 + 44));
          goto LABEL_66;
        case 2u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v50 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v29, 1, v50))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v50))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          goto LABEL_67;
        case 3u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v51 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v29, 1, v51))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v51))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          goto LABEL_67;
        case 4u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v52 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v29, 1, v52))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v52))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          goto LABEL_67;
        case 5u:
          goto LABEL_39;
        case 6u:
LABEL_65:
          v37 = (id)*v29;
          goto LABEL_66;
        case 7u:
LABEL_35:
          v33 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v0 + v8, 1, v33))
          {
            swift_bridgeObjectRelease(*v29);
            v34 = (char *)v29 + *(int *)(v33 + 20);
            v35 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          }
          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
          v36 = v29[1];
          if (!v36)
            goto LABEL_67;
          swift_bridgeObjectRelease(v36);
LABEL_39:
          v37 = (id)v29[2];
LABEL_66:

          break;
        case 8u:
LABEL_40:
          v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v0 + v8, 1, v38))
          {
            goto LABEL_67;
          }
LABEL_63:
          v39 = type metadata accessor for Date(0);
LABEL_64:
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v29, v39);
          break;
        case 9u:
LABEL_42:
          v29 = (_QWORD *)((char *)v29 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v39 = type metadata accessor for AnyTip(0);
          goto LABEL_64;
        default:
          goto LABEL_67;
      }
      break;
    case 0:
      switch(swift_getEnumCaseMultiPayload(v0 + v8, v11))
      {
        case 0u:
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v8, v31))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_52;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_51;
            default:
              goto LABEL_53;
          }
          goto LABEL_53;
        case 1u:
          v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v8, v40))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_52;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_51;
            default:
              goto LABEL_53;
          }
          goto LABEL_53;
        case 2u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v29, 1, v41))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v41))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          break;
        case 3u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v42 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v29, 1, v42))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v42))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          break;
        case 4u:

          v29 = (_QWORD *)((char *)v29
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v43 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v29, 1, v43))
          {
            switch(swift_getEnumCaseMultiPayload(v29, v43))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_63;
              default:
                goto LABEL_67;
            }
          }
          break;
        case 5u:
          goto LABEL_39;
        case 6u:
          goto LABEL_65;
        case 7u:
          goto LABEL_35;
        case 8u:
          goto LABEL_40;
        case 9u:
          goto LABEL_42;
        default:
          goto LABEL_67;
      }
      break;
  }
LABEL_67:
  v53 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = v53 + 8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v53));
  return swift_deallocObject(v0, v54, v2 | v7 | 7);
}

uint64_t sub_10036A4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + 32);
  v12 = *(_BYTE *)(v1 + 40);
  v13 = v1 + v5;
  v14 = v1 + v8;
  v15 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v16 = (_QWORD *)swift_task_alloc(dword_10065730C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10004A08C;
  return sub_1003678E4(a1, v9, v10, v11, v12, v13, v14, v15);
}

BOOL sub_10036A588(uint64_t a1)
{
  uint64_t v1;

  return sub_100433838(a1, v1);
}

uint64_t sub_10036A5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant(0);
  *(_QWORD *)(v6 + 64) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 72) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 80) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 88) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch(sub_10036A648, 0, 0);
}

uint64_t sub_10036A648()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  v4 = type metadata accessor for ContinuousClock(0);
  v5 = sub_1000175C8(&qword_100657328, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  v6 = sub_1000175C8(&qword_100657330, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_10036A760;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v4, v5);
}

uint64_t sub_10036A760()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 64);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
    return swift_task_switch(sub_10036A80C, 0, 0);
  v8 = *(_QWORD *)(v6 + 80);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10036A80C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036A848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004339A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_10036A850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  objc_class *v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  char *v27;
  double v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _OWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  objc_class *v50;
  char *v51;
  double (**v52)();
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  objc_super v59;
  _BYTE v60[24];
  _QWORD v61[4];
  objc_super v62;

  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - v11;
  v13 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController;
  v14 = *(char **)(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController);
  if (!v14)
  {
    sub_10002B1E8(a1, (uint64_t)&v56 - v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v17 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView;
    v18 = *(void **)(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
    if (v18)
    {
      v56 = a2;
      v58 = a3;
      v19 = *(void **)(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dataSource);
      if (v19)
      {
        v20 = (objc_class *)type metadata accessor for TTRIBoardColumnDragAndDropController(0);
        v21 = (char *)objc_allocWithZone(v20);
        v22 = &v21[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_coordinator];
        *((_QWORD *)v22 + 1) = 0;
        swift_unknownObjectWeakInit(v22, 0);
        sub_10002B1E8((uint64_t)v12, (uint64_t)&v21[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        *(_QWORD *)&v21[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView] = v18;
        *(_QWORD *)&v21[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_dataSource] = v19;
        v62.receiver = v21;
        v62.super_class = v20;
        v23 = v18;
        v24 = v19;
        v25 = objc_msgSendSuper2(&v62, "init");
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v26 = *(void **)(a4 + v13);
        *(_QWORD *)(a4 + v13) = v25;
        v16 = (char *)v25;

        v27 = &v16[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_coordinator];
        *((_QWORD *)v27 + 1) = &off_1005EBE78;
        *(_QWORD *)&v28 = swift_unknownObjectWeakAssign(v27, v56).n128_u64[0];
        v29 = *(void **)(a4 + v17);
        if (v29)
        {
          objc_msgSend(v29, "setDragDelegate:", v16, v28);
          v30 = *(void **)(a4 + v17);
          a3 = v58;
          if (v30)
          {
            objc_msgSend(v30, "setDropDelegate:", v16);
            goto LABEL_8;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  v15 = (uint64_t)&v14[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID];
  swift_beginAccess(&v14[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID], v61, 33, 0);
  v16 = v14;
  sub_1003706D4(a1, v15);
  swift_endAccess(v61);
LABEL_8:

  v31 = OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_chromelessBarsStateContributor;
  v32 = *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_chromelessBarsStateContributor);
  if (v32)
  {
    v33 = v32 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
    swift_beginAccess(v32 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID, v61, 33, 0);
    swift_retain();
    sub_1003706D4(a1, v33);
    swift_endAccess(v61);
    swift_release();
LABEL_12:
    swift_unknownObjectWeakAssign(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnDraggingHandler, a3);
    return;
  }
  v58 = a3;
  v34 = v57;
  sub_10002B1E8(a1, v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v35 = *(void **)(a4 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_collectionView);
  if (v35)
  {
    v36 = type metadata accessor for TTRIBoardColumnChromelessBarsStateContributor(0);
    v37 = swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    v38 = OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_stateChangeSubject;
    v39 = sub_10002A750(&qword_100657400);
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    v40 = v35;
    *(_QWORD *)(v37 + v38) = PassthroughSubject.init()();
    v41 = (_OWORD *)(v37
                   + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_contentSizeObservation);
    *v41 = 0u;
    v41[1] = 0u;
    *(_QWORD *)(v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver) = 0;
    sub_10001F580(v34, v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v42 = (_QWORD *)(v37
                   + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration);
    *v42 = v40;
    v42[1] = 0x3FF0000000000000;
    v42[3] = 0;
    v42[4] = 0;
    v42[2] = 0;
    *(_BYTE *)(v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_isActive) = 1;
    *(_QWORD *)(a4 + v31) = v37;
    swift_retain();
    swift_release();
    v61[0] = *(_QWORD *)(v37
                       + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration);
    v43 = (void *)v61[0];
    KeyPath = swift_getKeyPath(&unk_10052FC78);
    v45 = swift_allocObject(&unk_100603A08, 24, 7);
    swift_weakInit(v45 + 16, v37);
    v46 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 3, sub_1003706C4, v45, &protocol witness table for NSObject);
    swift_release();
    v47 = swift_release();
    v61[3] = type metadata accessor for NSKeyValueObservation(0, v47);
    v61[0] = v46;
    v48 = v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_contentSizeObservation;
    swift_beginAccess(v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_contentSizeObservation, v60, 33, 0);
    sub_100041F2C((uint64_t)v61, v48, &qword_100640E50);
    swift_endAccess(v60);
    v49 = swift_allocObject(&unk_100603A08, 24, 7);
    swift_weakInit(v49 + 16, v37);
    v50 = (objc_class *)type metadata accessor for ScrollOffsetObserver();
    v51 = (char *)objc_allocWithZone(v50);
    v52 = (double (**)())&v51[OBJC_IVAR____TtC9RemindersP33_F0C3DF1C7E2DDC19EDE9BABCDF547B2B20ScrollOffsetObserver_scrollViewDidScroll];
    *v52 = sub_1003706CC;
    v52[1] = (double (*)())v49;
    v59.receiver = v51;
    v59.super_class = v50;
    v53 = objc_msgSendSuper2(&v59, "init");
    v54 = OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver;
    v55 = *(void **)(v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver);
    *(_QWORD *)(v37 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver) = v53;

    objc_msgSend(v43, "_addScrollViewScrollObserver:", *(_QWORD *)(v37 + v54));
    swift_release();
    a3 = v58;
    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_10036AD74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;

  v3 = v2;
  v19 = a2;
  v5 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = _swiftEmptyArrayStorage;
    if (!v9)
      return (uint64_t)v10;
    v21 = _swiftEmptyArrayStorage;
    result = sub_1003D80F4(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v21;
    v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18)
      {
        v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      }
      else
      {
        v13 = *(void **)(a1 + 8 * v12 + 32);
        swift_unknownObjectRetain(v13);
      }
      v20 = v13;
      sub_1000C11F4(&v20, v19, v8);
      if (v3)
      {
        swift_release();
        swift_unknownObjectRelease(v13);
        return (uint64_t)v10;
      }
      v3 = 0;
      swift_unknownObjectRelease(v13);
      v21 = v10;
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1003D80F4(v14 > 1, v15 + 1, 1);
        v10 = v21;
      }
      ++v12;
      v10[2] = v15 + 1;
      sub_10001F580((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
      if (v9 == v12)
        return (uint64_t)v10;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10036AF58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036AF7C()
{
  uint64_t v0;

  return sub_1003654F0(v0);
}

void *sub_10036AF84()
{
  uint64_t v0;

  return sub_1003655AC(v0);
}

uint64_t sub_10036AF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
  }
  return swift_deallocObject(v0, v5 + v4 + 1, v3 | 7);
}

uint64_t sub_10036B358(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *((_BYTE *)v1 + v5 + *(_QWORD *)(v4 + 64));
  v11 = (_QWORD *)swift_task_alloc(dword_10065733C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10004A08C;
  return sub_100364598(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10036B3FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10036B40C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100364850(a1, a2, *(_BYTE *)(v2 + 16));
}

unint64_t sub_10036B414()
{
  unint64_t result;

  result = qword_100657348;
  if (!qword_100657348)
  {
    result = swift_getWitnessTable(&unk_1005301A0, &type metadata for TTRIBoardColumnScrollViewInsets);
    atomic_store(result, (unint64_t *)&qword_100657348);
  }
  return result;
}

uint64_t sub_10036B458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100649CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10036B4A0()
{
  uint64_t v0;

  sub_100365E88(v0);
}

uint64_t sub_10036B4A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10036B4CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  char v31[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(char **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v11)
  {
    v12 = (uint64_t)&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v31, 0, 0);
    v13 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_5:
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
      return;
    }
    v27 = v10;
    sub_100010634(v12, (uint64_t)v28);
    v14 = v29;
    v15 = v30;
    sub_10001413C(v28, v29);
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
    v17 = v11;
    v16(a1, v14, v15);
    sub_100027F10(v28);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      goto LABEL_5;
    v18 = (uint64_t)v6;
    v19 = (uint64_t)v27;
    sub_10001F580(v18, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v21);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 472))(v19, ObjectType);
    v24 = v23;
    if ((unint64_t)v23 >> 62)
    {
      if (v23 >= 0)
        v23 &= 0xFFFFFFFFFFFFFF8uLL;
      if (!_CocoaArrayWrapper.endIndex.getter(v23))
        goto LABEL_14;
    }
    else if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      swift_bridgeObjectRelease(v24);
      sub_10001F544(v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return;
    }
    if ((v24 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
      goto LABEL_14;
    }
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v25 = *(id *)(v24 + 32);
      goto LABEL_14;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10036B754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD v37[4];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a5;
  v37[1] = a4;
  v42 = a3;
  v41 = a2;
  v40 = a1;
  v38 = sub_10002A750(&qword_10063F1A0);
  __chkstk_darwin(v38);
  v48 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v7 = __chkstk_darwin(v6);
  v50 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v45 = (char *)v37 - v10;
  v11 = __chkstk_darwin(v9);
  __chkstk_darwin(v11);
  v37[3] = (char *)v37 - v12;
  v13 = sub_10002A750(&qword_100657408);
  v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v15 = sub_10002A750((uint64_t *)&unk_100654950);
  v16 = __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v53 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v54 = *(_QWORD *)(v53 - 8);
  v17 = __chkstk_darwin(v53);
  v39 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v47 = (char *)v37 - v20;
  v21 = __chkstk_darwin(v19);
  v43 = (char *)v37 - v22;
  v23 = __chkstk_darwin(v21);
  v37[2] = (char *)v37 - v24;
  v25 = __chkstk_darwin(v23);
  v51 = (char *)v37 - v26;
  v27 = __chkstk_darwin(v25);
  v49 = (char *)v37 - v28;
  __chkstk_darwin(v27);
  v44 = (char *)v37 - v29;
  v30 = sub_10002A750(&qword_10063F1A8);
  v31 = __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  v46 = (char *)v37 - v32;
  v33 = sub_10002A750(&qword_100657410);
  __chkstk_darwin(v33);
  v35 = (char *)v37 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(v52, (uint64_t)v35, &qword_100657410);
  v36 = (char *)&loc_10036BB00 + *((int *)qword_10036C6A8 + swift_getEnumCaseMultiPayload(v35, v33));
  __asm { BR              X10 }
}

uint64_t sub_10036BB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)(v5 - 256);
  sub_10000F614(v1, v6, &qword_10063F1A8);
  v7 = *(char **)(v5 - 192);
  sub_100368D7C(v6, v4);
  v8 = sub_10002A750(&qword_100657418);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1000073A0(v4, &qword_100657408);
    sub_1000073A0(v6, &qword_10063F1A8);
    return 0;
  }
  v9 = *(_QWORD *)(v4 + *(int *)(v8 + 48));
  v10 = *(int *)(v0 + 48);
  sub_10001F580(v4, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v2 + v10) = v9;
  v11 = *(_QWORD *)(v2 + *(int *)(v0 + 48));
  v12 = v2;
  v13 = *(_QWORD *)(v5 - 272);
  sub_10001F580(v12, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = *(_QWORD *)(v5 - 296);
  *(_QWORD *)(v5 - 128) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(*(_QWORD *)(v5 - 288));
  sub_10045050C(v15);
  v16 = *(_QWORD *)(v5 - 128);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    *(_QWORD *)(v5 - 248) = v11;
    v18 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    *(_QWORD *)(v5 - 240) = v18;
    v19 = *(_QWORD *)(v18 - 8);
    v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource;
    v22 = *(_QWORD *)(v19 + 72);
    *(_QWORD *)(v5 - 280) = v7;
    *(_QWORD *)(v5 - 264) = v16;
    swift_bridgeObjectRetain(v16);
    *(_QWORD *)(v5 - 224) = _swiftEmptyArrayStorage;
    v23 = *(_QWORD *)(v5 - 200);
    while (1)
    {
      v24 = *(char **)&v7[v21];
      if (!v24)
      {
        __break(1u);
        JUMPOUT(0x10036C6A0);
      }
      v25 = (uint64_t)&v24[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
      swift_beginAccess(&v24[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v5 - 152, 0, 0);
      v26 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 56))(v3, 1, 1, v23);
      }
      else
      {
        *(_QWORD *)(v5 - 208) = v20 + *(int *)(*(_QWORD *)(v5 - 240) + 24);
        sub_100010634(v25, v5 - 128);
        v28 = *(_QWORD *)(v5 - 104);
        v27 = *(_QWORD *)(v5 - 96);
        sub_10001413C((_QWORD *)(v5 - 128), v28);
        v29 = v22;
        v30 = v21;
        v31 = *(void (**)(_QWORD, uint64_t, uint64_t))(v27 + 40);
        v32 = v24;
        v33 = v28;
        v23 = *(_QWORD *)(v5 - 200);
        v34 = v27;
        v7 = *(char **)(v5 - 192);
        v31(*(_QWORD *)(v5 - 208), v33, v34);
        v21 = v30;
        v22 = v29;
        sub_100027F10((_QWORD *)(v5 - 128));

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 48))(v3, 1, v23) != 1)
        {
          v35 = *(_QWORD *)(v5 - 232);
          sub_10001F580(v3, v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10001F580(v35, *(_QWORD *)(v5 - 216), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 - 224)) & 1) == 0)
            *(_QWORD *)(v5 - 224) = sub_100454EEC(0, *(_QWORD *)(*(_QWORD *)(v5 - 224) + 16) + 1, 1, *(_QWORD *)(v5 - 224));
          v36 = *(_QWORD *)(v5 - 224);
          v38 = *(_QWORD *)(v36 + 16);
          v37 = *(_QWORD *)(v36 + 24);
          if (v38 >= v37 >> 1)
            *(_QWORD *)(v5 - 224) = sub_100454EEC(v37 > 1, v38 + 1, 1, *(_QWORD *)(v5 - 224));
          v40 = *(_QWORD *)(v5 - 224);
          v39 = *(_QWORD *)(v5 - 216);
          *(_QWORD *)(v40 + 16) = v38 + 1;
          sub_10001F580(v39, v40+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 184) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 184) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 184) + 72) * v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          goto LABEL_7;
        }
      }
      sub_1000073A0(v3, (uint64_t *)&unk_100640EB0);
LABEL_7:
      v20 += v22;
      if (!--v17)
      {
        v42 = *(char **)(v5 - 280);

        swift_bridgeObjectRelease_n(*(_QWORD *)(v5 - 264), 2);
        v43 = *(_QWORD *)&v42[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
        ObjectType = swift_getObjectType(*(_QWORD *)&v42[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter], v44);
        v46 = *(_QWORD *)(v5 - 272);
        v47 = *(_QWORD *)(v5 - 328);
        sub_10002B1E8(v46, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 184) + 56))(v47, 0, 1, v23);
        v48 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 + 8) + 496);
        v49 = *(_QWORD *)(v5 - 224);
        v50 = v48(v49, v47, *(_QWORD *)(v5 - 248), ObjectType);
        swift_bridgeObjectRelease(v49);
        sub_1000073A0(v47, (uint64_t *)&unk_100640EB0);
        sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0(*(_QWORD *)(v5 - 256), &qword_10063F1A8);
        if ((v50 & 1) != 0)
          return 3;
        else
          return 0;
      }
    }
  }
  v51 = *(_QWORD *)(v5 - 344);
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v16);
  v52 = *(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
  v54 = swift_getObjectType(*(_QWORD *)&v7[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter], v53);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 + 8) + 536))(v51, v54);
  swift_bridgeObjectRelease(v51);
  v55 = *(_QWORD *)(v5 - 104);
  v56 = *(_QWORD *)(v5 - 96);
  sub_10001413C((_QWORD *)(v5 - 128), v55);
  LOBYTE(v55) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8))(v13, v11, v55, v56);
  sub_10001F544(v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0(v6, &qword_10063F1A8);
  if ((v55 & 1) != 0)
    v41 = 2;
  else
    v41 = 0;
  sub_100027F10((_QWORD *)(v5 - 128));
  return v41;
}

void sub_10036C6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v11)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v12 = v11;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100646950);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
  if (!v13)
    goto LABEL_11;
  v14 = v13;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v16)
  {
    v17 = type metadata accessor for TTRIBoardColumnCollectionViewCell();
    v18 = swift_dynamicCastClass(v16, v17);
    if (v18)
    {
      v19 = *(id *)(v18 + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_dragAndDropController);

    }
    else
    {

    }
  }
}

uint64_t sub_10036C890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char *v18;
  _QWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  char v23[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v11)
  {
    v12 = (uint64_t)&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v23, 0, 0);
    v13 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
    }
    v19[1] = v1;
    sub_100010634(v12, (uint64_t)v20);
    v14 = v21;
    v15 = v22;
    sub_10001413C(v20, v21);
    v16 = a1;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
    v18 = v11;
    v17(v16, v14, v15);
    sub_100027F10(v20);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      return sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
    sub_10001F580((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListItemStateTracker.fullfil(_:of:)(1, v10);
    return sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036CA84(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  char *v19;
  char *v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  char v30[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(char **)&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource];
  if (!v13)
  {
    __break(1u);
    JUMPOUT(0x10036CD04);
  }
  v14 = (uint64_t)&v13[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v13[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v30, 0, 0);
  v15 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  else
  {
    v24 = v1;
    v25 = v3;
    v26 = v5;
    sub_100010634(v14, (uint64_t)v27);
    v16 = v28;
    v17 = v29;
    sub_10001413C(v27, v28);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40);
    v19 = v13;
    v18(a1, v16, v17);
    sub_100027F10(v27);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      objc_msgSend(v24, "isEditing");
      v21 = v26;
      TTRRemindersListViewModel.Item.boardViewCasesOnly.getter();
      v22 = (char *)&loc_10036CCC8 + dword_10036CD04[swift_getEnumCaseMultiPayload(v21, v25)];
      __asm { BR              X10 }
    }
  }
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
  return 0;
}

void sub_10036CD18(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t ObjectType;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v2 = v1;
  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v37 - v11;
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v2, "isEditing"))
    return;
  v41 = v4;
  v42 = a1;
  v20 = *(char **)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource];
  if (!v20)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v21 = (uint64_t)&v20[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v20[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v46, 0, 0);
  v22 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_6:
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
    return;
  }
  v38 = v6;
  v39 = v19;
  v40 = v2;
  sub_100010634(v21, (uint64_t)v43);
  v24 = v44;
  v23 = v45;
  sub_10001413C(v43, v44);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  v26 = v20;
  v25(v42, v24, v23);
  sub_100027F10(v43);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    goto LABEL_6;
  v27 = (uint64_t)v39;
  sub_10001F580((uint64_t)v15, (uint64_t)v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v28 = v40;
  v29 = *(_QWORD *)&v40[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController];
  v30 = (uint64_t)v38;
  if (!v29)
    goto LABEL_20;
  sub_10002B1E8(v42, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_beginAccess(v29 + 48, v43, 33, 0);
  swift_retain();
  sub_1004809C4((uint64_t)v12, (uint64_t)v10);
  swift_endAccess(v43);
  v31 = sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (!*(_QWORD *)(v29 + 32))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __chkstk_darwin(v31);
  *(&v37 - 2) = v29;
  *(&v37 - 1) = 0;
  swift_retain();
  TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_100370770, &v37 - 4);
  swift_release();
  swift_release();
  if (!*(_QWORD *)&v28[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController])
  {
LABEL_22:
    __break(1u);
    return;
  }
  sub_10002B1E8(v27, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v30, v41, 0);
  swift_retain();
  sub_100038FD8(v30);
  sub_10001F544(v30, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  v32 = objc_msgSend(v28, "parentViewController", swift_release().n128_f64[0]);
  if (v32)
  {
    v34 = v32;
    ObjectType = swift_getObjectType(v32, v33);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v36 = v34;
    else
      v36 = 0;
    if (v36)
    {
      sub_1002908A0(1, 0);
      sub_100291CAC();
    }

  }
  sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10036D114(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t ObjectType;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char v41[24];

  v2 = v1;
  v4 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v2, "isEditing"))
    return;
  v37 = a1;
  v17 = *(char **)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource];
  if (!v17)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v18 = (uint64_t)&v17[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v17[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v41, 0, 0);
  v19 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_6:
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
    return;
  }
  v34 = v4;
  v35 = v6;
  v36 = v16;
  sub_100010634(v18, (uint64_t)v38);
  v21 = v39;
  v20 = v40;
  sub_10001413C(v38, v39);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40);
  v23 = v17;
  v22(v37, v21, v20);
  sub_100027F10(v38);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_6;
  v24 = (uint64_t)v36;
  sub_10001F580((uint64_t)v12, (uint64_t)v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController];
  v27 = v34;
  v26 = (uint64_t)v35;
  if (!v25)
    goto LABEL_20;
  swift_beginAccess(v25 + 48, v38, 33, 0);
  swift_retain();
  sub_1000F4754(v37, (uint64_t)v9);
  swift_endAccess(v38);
  v28 = sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_1006463C0);
  if (!*(_QWORD *)(v25 + 32))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __chkstk_darwin(v28);
  *(&v34 - 2) = v25;
  *(&v34 - 1) = 0;
  swift_retain();
  TTRObservableViewModelCollection.updateAndPublishAll(using:)(sub_100370770, &v34 - 4);
  swift_release();
  swift_release();
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController])
  {
LABEL_22:
    __break(1u);
    return;
  }
  sub_10002B1E8(v24, v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v26, v27, 1);
  swift_retain();
  sub_100038FD8(v26);
  sub_10001F544(v26, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  v29 = objc_msgSend(v2, "parentViewController", swift_release().n128_f64[0]);
  if (v29)
  {
    v31 = v29;
    ObjectType = swift_getObjectType(v29, v30);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v33 = v31;
    else
      v33 = 0;
    if (v33)
    {
      sub_1002908A0(1, 0);
      sub_100291CAC();
    }

  }
  sub_10001F544(v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10036D4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v12[24];

  v1 = sub_10002A750(qword_100657440);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  UIViewController.endFirstResponderEditing()();
  v4 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController);
  if (v4)
  {
    v5 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
    swift_storeEnumTagMultiPayload(v3, v5, 2);
    v6 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 0, 1, v6);
    v7 = v4
       + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
    swift_beginAccess(v4+ OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession, v12, 33, 0);
    swift_retain();
    sub_100041F2C((uint64_t)v3, v7, qword_100657440);
    swift_endAccess(v12);
    swift_release();
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v9);
    (*(void (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 264))(ObjectType);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036D604()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t ObjectType;
  BOOL v4;
  void *v5;
  id v6;
  id v7;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController])
  {
    swift_retain();
    sub_100039244();
    v1 = objc_msgSend(v0, "parentViewController", swift_release().n128_f64[0]);
    if (v1)
    {
      v7 = v1;
      ObjectType = swift_getObjectType(v1, v2);
      v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType) == 0;
      v5 = v7;
      if (v4)
        v6 = 0;
      else
        v6 = v7;
      if (v6)
      {
        sub_1002908A0(1, 0);
        sub_100291CAC();
        v5 = v7;
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036D6B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  char v34[24];

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v14)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  v15 = (uint64_t)&v14[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v14[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v34, 0, 0);
  v16 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_5:
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  v28 = v1;
  v29 = v3;
  v30 = v13;
  sub_100010634(v15, (uint64_t)v31);
  v17 = v32;
  v18 = v33;
  sub_10001413C(v31, v32);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v20 = v14;
  v27 = a1;
  v19(a1, v17, v18);
  sub_100027F10(v31);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_5;
  v21 = (uint64_t)v30;
  v22 = sub_10001F580((uint64_t)v8, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.boardViewCasesOnly.getter(v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v29);
  if ((EnumCaseMultiPayload - 1) >= 3)
  {
    if (EnumCaseMultiPayload)
    {
      sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    else
    {
      sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem);
    }
    return 0;
  }
  result = sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem);
  if (!*(_QWORD *)(v28 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
    goto LABEL_18;
  swift_retain();
  v24 = (void *)sub_1003CE7B4(v27);
  swift_release();
  if (v24)
  {
    v25 = v24;
    v26 = (void *)UIView.firstResponderDescendant.getter();

    sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v26)
    {

      return 0;
    }
    return 1;
  }
  else
  {
    sub_10001F544(v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 1;
  }
}

void sub_10036D9AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char v26[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v10)
  {
    v11 = (uint64_t)&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v26, 0, 0);
    v12 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_5:
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      return;
    }
    v22 = v1;
    sub_100010634(v11, (uint64_t)v23);
    v13 = v24;
    v14 = v25;
    sub_10001413C(v23, v24);
    v15 = a1;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40);
    v17 = v10;
    v16(v15, v13, v14);
    sub_100027F10(v23);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      goto LABEL_5;
    sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v22 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v19);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 + 8) + 120))(v9, ObjectType);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036DBB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  void *v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  char *v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v11)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = (uint64_t)&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v11[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v44, 0, 0);
  v13 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_5:
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    return;
  }
  v40 = v10;
  sub_100010634(v12, (uint64_t)v41);
  v14 = v42;
  v15 = v43;
  sub_10001413C(v41, v42);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v17 = v11;
  v16(a1, v14, v15);
  sub_100027F10(v41);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    goto LABEL_5;
  v18 = (uint64_t)v40;
  sub_10001F580((uint64_t)v6, (uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
    goto LABEL_17;
  swift_retain();
  v19 = (void *)sub_1003CE7B4(a1);
  *(_QWORD *)&v20 = swift_release().n128_u64[0];
  if (!v19)
  {
LABEL_15:
    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return;
  }
  v21 = objc_msgSend(v19, "contentView", v20);
  v22 = type metadata accessor for TTRIBoardReminderCellContentView(0);
  v23 = swift_dynamicCastClass(v21, v22);
  if (!v23)
  {

    sub_10001F544(v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return;
  }
  if (*(_QWORD *)(v23 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    LOBYTE(v41[0]) = 4;
    __chkstk_darwin(v23);
    *(&v39 - 2) = v24;
    swift_retain();
    v25 = (void *)TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)(v41, sub_100370764, &v39 - 4);

    *(_QWORD *)&v26 = swift_release().n128_u64[0];
    v27 = v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter;
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    v29 = *(_QWORD *)(v27 + 8);
    v30 = objc_msgSend(v19, "contentView", v26);
    if (swift_dynamicCastClass(v30, v22))
    {
      sub_1003F6118();
      v32 = v31;

      v33 = objc_msgSend(v32, "string");
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v36 = v35;

    }
    else
    {

      v34 = 0;
      v36 = 0;
    }
    v18 = (uint64_t)v40;
    ObjectType = swift_getObjectType(v28, v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t))(*(_QWORD *)(v29 + 8) + 96))(v18, v34, v36, v25, ObjectType);

    swift_bridgeObjectRelease(v36);
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
}

void sub_10036DF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char v26[24];

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(char **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v10)
  {
    v11 = (uint64_t)&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v10[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v26, 0, 0);
    v12 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_5:
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      return;
    }
    v22 = v1;
    sub_100010634(v11, (uint64_t)v23);
    v13 = v24;
    v14 = v25;
    sub_10001413C(v23, v24);
    v15 = a1;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40);
    v17 = v10;
    v16(v15, v13, v14);
    sub_100027F10(v23);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      goto LABEL_5;
    sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v18 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v22 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v19);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 + 8) + 144))(v9, ObjectType);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  void *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char v41[24];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(char **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (!v13)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v14 = (uint64_t)&v13[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
  swift_beginAccess(&v13[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v41, 0, 0);
  v15 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_5:
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    return;
  }
  v36 = a2;
  v37 = v12;
  sub_100010634(v14, (uint64_t)v38);
  v16 = v39;
  v17 = v40;
  sub_10001413C(v38, v39);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40);
  v19 = v13;
  v18(a1, v16, v17);
  sub_100027F10(v38);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_5;
  v20 = (uint64_t)v37;
  sub_10001F580((uint64_t)v8, (uint64_t)v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController))
    goto LABEL_14;
  swift_retain();
  v21 = (void *)sub_1003CE7B4(a1);
  *(_QWORD *)&v22 = swift_release().n128_u64[0];
  if (v21)
  {
    v23 = v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter;
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
    v25 = *(_QWORD *)(v23 + 8);
    v26 = objc_msgSend(v21, "contentView", v22);
    v27 = type metadata accessor for TTRIBoardReminderCellContentView(0);
    if (swift_dynamicCastClass(v26, v27))
    {
      sub_1003F6118();
      v29 = v28;

      v30 = objc_msgSend(v29, "string");
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

    }
    else
    {

      v31 = 0;
      v33 = 0;
    }
    ObjectType = swift_getObjectType(v24, v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8) + 128))(v20, v31, v33, v36, ObjectType);

    swift_bridgeObjectRelease(v33);
  }
  sub_10001F544(v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10036E434(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t ObjectType;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  char *v19;
  char *v20;

  v3 = v2;
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter], a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 40))(a2, a1, ObjectType);
  v8 = (char *)objc_msgSend(v3, "parentViewController");
  if (v8)
  {
    v10 = v8;
    v11 = swift_getObjectType(v8, v9);
    if (swift_conformsToProtocol2(v11, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v12 = v10;
    else
      v12 = 0;
    if (v12)
      v13 = *(id *)&v12[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];
    else
      v13 = 0;

  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v13, "impactOccurred");

  v14 = (char *)objc_msgSend(v3, "parentViewController");
  if (v14)
  {
    v20 = v14;
    v16 = swift_getObjectType(v14, v15);
    if (swift_conformsToProtocol2(v16, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v17 = v20;
    else
      v17 = 0;
    if (v17)
    {
      v18 = *(id *)&v17[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];

      objc_msgSend(v18, "prepare");
      v19 = (char *)v18;
    }
    else
    {
      v19 = v20;
    }

  }
}

void sub_10036E5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  char v40[24];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(char **)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
  if (v16)
  {
    v17 = (uint64_t)&v16[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
    swift_beginAccess(&v16[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v40, 0, 0);
    v18 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_5:
      sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100640EB0);
      return;
    }
    v34 = v15;
    v35 = v8;
    v36 = a2;
    sub_100010634(v17, (uint64_t)v37);
    v19 = v38;
    v20 = v39;
    sub_10001413C(v37, v38);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40);
    v22 = v16;
    v21(a1, v19, v20);
    sub_100027F10(v37);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      goto LABEL_5;
    v23 = (uint64_t)v34;
    sub_10001F580((uint64_t)v11, (uint64_t)v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v25);
    v27 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v28 = *(unsigned __int8 *)(v13 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(v27, v29 + *(_QWORD *)(v13 + 72), v28 | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100520250;
    sub_10002B1E8(v23, v30 + v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v32 = (uint64_t)v35;
    v31(v35, 1, 1, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8) + 496))(v30, v32, v36, ObjectType);
    swift_bridgeObjectRelease(v30);
    sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E870()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];

  v1 = v0;
  v2 = sub_10002A750(&qword_100657388);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v5 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v32 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v31 = (uint64_t)&v28 - v8;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController];
  if (!v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_beginAccess(v9 + 48, v34, 33, 0);
  swift_retain();
  v10 = sub_10002A750((uint64_t *)&unk_100646F30);
  Set.removeAll(where:)(sub_10036A588, v9, v10);
  swift_endAccess(v34);
  swift_beginAccess(v9 + 56, v34, 33, 0);
  Set.removeAll(where:)(sub_10036A588, v9, v10);
  swift_endAccess(v34);
  v11 = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain(v11);
  swift_release();
  v12 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource;
  v13 = *(void **)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource];
  if (v13)
  {
    v34[0] = v11;
    v14 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    v15 = sub_100023FEC((unint64_t *)&unk_100640F10, (uint64_t *)&unk_100646F30, (uint64_t)&protocol conformance descriptor for Set<A>);
    v16 = v13;
    v17 = TTRRemindersBoardMainDiffableDataSource.sortByItemVisualLocation<A, B>(_:itemID:)(v34, sub_100368D5C, 0, v14, v10, v15);
    swift_bridgeObjectRelease(v11);

    v18 = *(_QWORD *)(v17 + 16);
    if (!v18)
    {
      swift_bridgeObjectRelease(v17);
      return;
    }
    v19 = *(_QWORD *)(v14 - 8);
    v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    v28 = v1;
    v29 = v17;
    swift_bridgeObjectRetain(v17);
    v22 = _swiftEmptyArrayStorage;
    v30 = v1;
    while (1)
    {
      v23 = *(void **)&v1[v12];
      if (!v23)
        break;
      v24 = v23;
      sub_10046282C(v20, (uint64_t)v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v33) == 1)
      {
        sub_1000073A0((uint64_t)v4, &qword_100657388);
      }
      else
      {
        v25 = v31;
        sub_10001F580((uint64_t)v4, v31, type metadata accessor for TTRIRemindersBoardDragItemInfo);
        sub_10001F580(v25, v32, type metadata accessor for TTRIRemindersBoardDragItemInfo);
        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          v22 = (_QWORD *)sub_100455AC0(0, v22[2] + 1, 1, (unint64_t)v22);
        v27 = v22[2];
        v26 = v22[3];
        if (v27 >= v26 >> 1)
          v22 = (_QWORD *)sub_100455AC0(v26 > 1, v27 + 1, 1, (unint64_t)v22);
        v22[2] = v27 + 1;
        sub_10001F580(v32, (uint64_t)v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, type metadata accessor for TTRIRemindersBoardDragItemInfo);
        v1 = v30;
      }
      v20 += v21;
      if (!--v18)
      {

        swift_bridgeObjectRelease_n(v29, 2);
        return;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

void sub_10036EBF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;

  v2 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(0);
  v42 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v45 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for IndexPath(0);
  v58 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v47 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10002A750(&qword_10063F1A0);
  __chkstk_darwin(v43);
  v53 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v7);
  v51 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v63 = (char *)v39 - v10;
  __chkstk_darwin(v11);
  v61 = (char *)v39 - v12;
  v13 = sub_10002A750(&qword_100654910);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v40 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem(0);
  v39[0] = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39[1] = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v16);
  v48 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v41 = (char *)v39 - v19;
  v20 = sub_10002A750(&qword_100657408);
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  v49 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v49);
  v44 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v55 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v50 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v59 = (char *)v39 - v26;
  __chkstk_darwin(v27);
  v60 = (char *)v39 - v28;
  __chkstk_darwin(v29);
  v46 = (char *)v39 - v30;
  v31 = sub_10002A750(&qword_10063F1A8);
  __chkstk_darwin(v31);
  v56 = (char *)v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v57 = (char *)v39 - v34;
  v35 = sub_10002A750(&qword_100657410);
  __chkstk_darwin(v35);
  v37 = (char *)v39 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a1;
  sub_1000C1914((uint64_t)v37);
  v38 = (char *)&loc_10036F0CC + dword_10036FE54[swift_getEnumCaseMultiPayload(v37, v35)];
  __asm { BR              X10 }
}

uint64_t sub_10036F0DC()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(_QWORD *)(v5 - 240);
  sub_10000F614(v3, v6, &qword_10063F1A8);
  v7 = *(_QWORD *)(v5 - 216);
  sub_100368D7C(v6, v1);
  v8 = sub_10002A750(&qword_100657418);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v1, 1, v8) == 1)
  {
    sub_1000073A0(v1, &qword_100657408);
    return sub_1000073A0(v6, &qword_10063F1A8);
  }
  v9 = *(_QWORD *)(v1 + *(int *)(v8 + 48));
  v10 = *(_QWORD *)(v5 - 312);
  v11 = *(int *)(v10 + 48);
  sub_10001F580(v1, v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v4 + v11) = v9;
  v12 = *(_QWORD *)(v4 + *(int *)(v10 + 48));
  v13 = *(_QWORD *)(v5 - 336);
  sub_10001F580(v4, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = sub_100369138(*(_QWORD *)(v5 - 192));
  v16 = v14;
  if ((v17 & 1) == 0)
  {
    v18 = *(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v14);
    v20 = *(_QWORD *)(v5 - 376);
    sub_10002B1E8(v13, v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5 - 272) + 56))(v20, 0, 1, *(_QWORD *)(v5 - 264));
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(v18 + 8) + 520))(v16, v20, v12, 0, 0, ObjectType);
    swift_bridgeObjectRelease(v16);
    sub_1000073A0(v20, (uint64_t *)&unk_100640EB0);
    v21 = v15[2];
    if (v21)
    {
      v22 = *(_QWORD *)(v5 - 400);
      v23 = (uint64_t)v15 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      v24 = *(_QWORD *)(v22 + 72);
      v25 = *(_QWORD *)(v5 - 384);
      v26 = *(void ***)(v5 - 392);
      do
      {
        sub_10002B1E8(v23, (uint64_t)v26, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        v27 = *v26;
        v28 = (char *)v26 + *(int *)(v25 + 20);
        v29 = (uint64_t)&v28[*(int *)(type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0) + 28)];
        v30 = v27;
        sub_1000C2908((uint64_t)v30, v29);

        sub_10001F544((uint64_t)v26, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        v23 += v24;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease(v15);
      v13 = *(_QWORD *)(v5 - 336);
      v6 = *(_QWORD *)(v5 - 240);
    }
    else
    {
      swift_bridgeObjectRelease(v15);
    }
    sub_10001F544(v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_1000073A0(v6, &qword_10063F1A8);
  }
  v31 = v13;
  v32 = *(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  v33 = swift_getObjectType(*(_QWORD *)(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v14);
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v32 + 8) + 536))(v15, v33);
  sub_100370718((uint64_t)v15, v16, 1);
  v34 = *(_QWORD *)(v5 - 120);
  v35 = *(_QWORD *)(v5 - 112);
  sub_10001413C((_QWORD *)(v5 - 144), v34);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 48))(v31, v12, v34, v35);
  v37 = 0;
  v38 = *(_QWORD *)(v36 + 16);
  v40 = *(_QWORD *)(v5 - 208);
  v39 = *(_QWORD *)(v5 - 200);
  if (v38)
    goto LABEL_10;
LABEL_9:
  v41 = sub_10002A750((uint64_t *)&unk_100654930);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v2, 1, 1, v41);
  v42 = v38;
  while (1)
  {
    sub_10000F614(v2, (uint64_t)v0, &qword_100654910);
    v45 = sub_10002A750((uint64_t *)&unk_100654930);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v0, 1, v45) == 1)
      break;
    v46 = *v0;
    v47 = (uint64_t)v0 + *(int *)(v45 + 48);
    *(_QWORD *)(v5 - 184) = v42;
    v48 = sub_10001F580(v47, v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v48);
    sub_1000C2908((uint64_t)v46, v39);

    sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v37 = *(_QWORD *)(v5 - 184);
    sub_10001F544(v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v37 == v38)
      goto LABEL_9;
LABEL_10:
    if (v37 >= *(_QWORD *)(v36 + 16))
    {
      __break(1u);
      JUMPOUT(0x10036FE38);
    }
    v43 = sub_10002A750((uint64_t *)&unk_100654930);
    v44 = *(_QWORD *)(v43 - 8);
    sub_10000735C(v36+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v37, v2, (uint64_t *)&unk_100654930);
    v42 = v37 + 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v2, 0, 1, v43);
  }
  swift_bridgeObjectRelease(v36);
  sub_10001F544(*(_QWORD *)(v5 - 336), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000073A0(*(_QWORD *)(v5 - 240), &qword_10063F1A8);
  return sub_100027F10((_QWORD *)(v5 - 144));
}

void sub_10036FE64()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  __int16 v15;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_initialFrameForLoadingView];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  v3 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_preferredChromelessBarStates;
  v15 = 0;
  v4 = sub_10002A750((uint64_t *)&unk_1006549B0);
  swift_allocObject(v4, 32, 7);
  *(_QWORD *)&v0[v3] = TTRObservableViewModel.init(value:)(&v15);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_targetItemsForVisibleContextMenu] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource] = 0;
  v5 = (uint64_t *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_eventPublishers];
  v6 = sub_10002A750(&qword_100646F70);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = PassthroughSubject.init()();
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v8 = PassthroughSubject.init()();
  *v5 = v7;
  v5[1] = v8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_deferredViewActionProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_observableScrollViewInsets] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_automaticSubtaskSelectionController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_rootViewDragInteractionHandler] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_chromelessBarsController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainScrollingController] = 0;
  v9 = OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemStateTracker;
  v10 = type metadata accessor for TTRRemindersListItemStateTracker(0);
  swift_allocObject(v10, 24, 7);
  *(_QWORD *)&v0[v9] = TTRRemindersListItemStateTracker.init()();
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_headerViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_itemLookupController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_focusController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dummyContentScrollView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_scrollToTopCancellable] = 0;
  v11 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedHeaderViewState];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *(_QWORD *)v12 = 0;
  v13 = &v0[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_listInfo];
  v14 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersBoardMainViewController.swift", 52, 2, 35, 0);
  __break(1u);
}

void sub_1003700CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  id v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  char v45[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_100657380);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_selectionController);
  if (!v20)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((*(_BYTE *)(v20 + 16) & 1) != 0)
    return;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a1 + 16) != 1)
      return;
LABEL_10:
    swift_bridgeObjectRetain(a1);
    v40 = (id)sub_1000CE804(v22);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(a1).n128_u64[0];
    if (!v40)
      return;
    if (objc_msgSend(v40, "type", v23) != (id)4)
    {
LABEL_14:

      return;
    }
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_focusController);
    if (v24)
    {
      v25 = v24 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem;
      swift_beginAccess(v24 + OBJC_IVAR____TtC9Reminders33TTRIRemindersBoardFocusController_currentFocusedItem, v45, 0, 0);
      sub_10000735C(v25, (uint64_t)v19, &qword_100657380);
      v26 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v19, 1, v26) == 1)
        goto LABEL_14;
      if (swift_getEnumCaseMultiPayload(v19, v26) == 1)
      {

        v27 = type metadata accessor for TTRIRemindersBoardFocusController.FocusedItem;
        v28 = (uint64_t)v19;
LABEL_18:
        sub_10001F544(v28, v27);
        return;
      }

      sub_10001F580((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v29 = *(char **)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
      if (v29)
      {
        v30 = (uint64_t)&v29[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees];
        swift_beginAccess(&v29[direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees], v44, 0, 0);
        v31 = type metadata accessor for TTRRemindersBoardPresentationTrees(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        }
        else
        {
          sub_100010634(v30, (uint64_t)v41);
          v32 = v43;
          v39 = v42;
          sub_10001413C(v41, v42);
          v38 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 40);
          v33 = v29;
          v38(v16, v39, v32);
          sub_100027F10(v41);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
          {
            sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v34 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter);
            v35 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
            ObjectType = swift_getObjectType(v34, v36);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 + 8) + 312))(v13, ObjectType);

            sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
            sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v27 = (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID;
            v28 = (uint64_t)v16;
            goto LABEL_18;
          }
        }
        sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);

        sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
        return;
      }
LABEL_28:
      __break(1u);
      return;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a1 < 0)
    v21 = a1;
  else
    v21 = a1 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v21) == 1)
    goto LABEL_10;
}

void sub_100370518(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100363B24(a1, a2, v2);
}

void sub_100370520(uint64_t a1)
{
  uint64_t v1;

  sub_100362430(a1, v1);
}

uint64_t sub_100370528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100361800(v1, a1);
}

uint64_t sub_100370530()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100370554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004334CC(v1, a1);
}

uint64_t sub_10037055C(uint64_t *a1)
{
  uint64_t v1;

  return sub_100433590(a1, v1);
}

void sub_100370564(uint64_t a1, char a2, char a3)
{
  uint64_t v3;

  sub_1003618C0(a1, a2, a3, v3);
}

uint64_t sub_10037056C()
{
  uint64_t v0;

  return sub_10003E4A8(v0);
}

void sub_100370574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100362864(a1, a2, a3, v3);
}

uint64_t sub_10037057C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10002A750(&qword_1006573C0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003705E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_1006573C0) - 8) + 80);
  return sub_100362AC4(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_100370638(uint64_t a1)
{
  uint64_t v1;

  return sub_100362BB0(a1, v1);
}

void sub_100370640(uint64_t a1)
{
  uint64_t v1;

  sub_100362E64(a1, v1);
}

uint64_t sub_100370648()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037066C()
{
  uint64_t v0;

  return sub_100363AE8(*(_QWORD *)(v0 + 16));
}

const char *sub_100370674()
{
  return "contentSize";
}

id sub_100370680@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1003706B0(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_1003706C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10046593C(a1, a2, v2);
}

double sub_1003706CC()
{
  uint64_t v0;

  return sub_100465A8C(v0);
}

uint64_t sub_1003706D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100370718(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t type metadata accessor for TTRITreeViewCollapsedStates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewCollapsedStates);
}

uint64_t sub_100370780(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3, v4, &unk_1005987EC, &unk_1005987FC);
  v6 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = __chkstk_darwin(v8);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v23 - v16;
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    sub_100029148(v15);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v4, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
    v19 = type metadata accessor for Set(0, AssociatedTypeWitness, AssociatedConformanceWitness);
    Set.insert(_:)(v17, v14, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, AssociatedTypeWitness);
  }
  else
  {
    sub_100029148(v15);
    v21 = swift_getAssociatedConformanceWitness(v3, v4, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
    v22 = type metadata accessor for Set(0, AssociatedTypeWitness, v21);
    Set.remove(_:)(v17, v22);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_100370944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4, v11, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Iterator);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  dispatch thunk of Sequence.makeIterator()(a3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  while (1)
  {
    dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
    if (!v19)
      break;
    sub_100370C70(v19, a2);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
}

uint64_t sub_100370AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v10;

  sub_100370C70(a1, a3);
  v10 = a2;
  v6 = type metadata accessor for TTRITreeViewNode(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v5);
  v7 = type metadata accessor for Array(0, v6);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  return sub_100370944((uint64_t)&v10, a3, v7, WitnessTable);
}

void *sub_100370B1C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  void *v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  Set.init()(AssociatedTypeWitness, AssociatedConformanceWitness);
  v6 = static Array._allocateUninitialized(_:)(0, AssociatedTypeWitness);
  if (Array._getCount()())
    v7 = (void *)sub_1000BFC60(v6, AssociatedTypeWitness, AssociatedConformanceWitness);
  else
    v7 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100370BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  Set.init()(AssociatedTypeWitness, AssociatedConformanceWitness);
  return a1;
}

uint64_t sub_100370C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  v2 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v2, v3, &unk_1005987EC, &unk_1005987FC);
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v16 - v6;
  v8 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v16 - v11;
  sub_100029148(v10);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v2, v3, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  v14 = type metadata accessor for Set(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  Set.remove(_:)(v7, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100370DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a6, a5, &unk_1005987EC, &unk_1005987FC);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a6, a5, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
  if ((static Set.== infix(_:_:)(a1, a3, AssociatedTypeWitness, AssociatedConformanceWitness) & 1) != 0)
    return static Set.== infix(_:_:)(a2, a4, AssociatedTypeWitness, AssociatedConformanceWitness);
  else
    return 0;
}

uint64_t sub_100370E7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100370DA8(*a1, a1[1], *a2, a2[1], *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

Class sub_100370E98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t *v50;
  id v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  void *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  Swift::String v65;
  UIMenu v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  Swift::String v77;
  UIMenu v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  Swift::String v83;
  UIMenu v84;
  uint64_t v85;
  uint64_t v86;
  Swift::OpaquePointer v88;
  uint64_t v89;
  unint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  UIMenuElementSize preferredElementSize;
  UIMenuElementSize v96;
  uint64_t v97[2];
  uint64_t v98[2];
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  unsigned __int8 v103;
  UIImage_optional v104;
  UIImage_optional v105;
  UIImage_optional v106;

  v1 = (uint64_t)a1;
  v2 = *a1;
  v99 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(v2);
    v5 = (_QWORD *)(v4 + 64);
    v6 = _swiftEmptyArrayStorage;
    v92 = v1;
    do
    {
      v7 = (void *)*(v5 - 4);
      v8 = *(v5 - 3);
      v9 = *(v5 - 2);
      v10 = *(v5 - 1);
      v11 = *v5;
      swift_bridgeObjectRetain(*v5);
      v12 = v7;
      swift_bridgeObjectRetain(v9);
      if ((static TTRSectionID.__derived_enum_equals(_:_:)(v7, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v9);

      }
      else
      {
        v102 = (uint64_t)v6;
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        {
          sub_1003D7E74(0, v6[2] + 1, 1);
          v6 = (_QWORD *)v102;
        }
        v14 = v6[2];
        v13 = v6[3];
        v15 = v6;
        if (v14 >= v13 >> 1)
        {
          sub_1003D7E74(v13 > 1, v14 + 1, 1);
          v15 = (_QWORD *)v102;
        }
        v15[2] = v14 + 1;
        v16 = &v15[5 * v14];
        v16[4] = v7;
        v16[5] = v8;
        v16[6] = v9;
        v16[7] = v10;
        v16[8] = v11;
        v1 = v92;
        v6 = v15;
      }
      v5 += 5;
      --v3;
    }
    while (v3);
    sub_1000522B0(&v99);
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  v102 = (uint64_t)_swiftEmptyArrayStorage;
  v17 = v6[2];
  if (v17)
  {
    sub_100371700(v1);
    swift_retain();
    v18 = v6 + 8;
    do
    {
      v32 = (void *)*(v18 - 4);
      if (v32)
      {
        v33 = *(v18 - 3);
        v34 = *(v18 - 2);
        v35 = *v18;
        if (v34)
          v36 = *(v18 - 3);
        else
          v36 = 0;
        v93 = v36;
        v37 = 0xE000000000000000;
        if (v34)
          v37 = *(v18 - 2);
        v89 = *(v18 - 1);
        v90 = v37;
        sub_1003717EC((uint64_t *)(v1 + 16), (uint64_t)v98);
        sub_1003717EC(v98, (uint64_t)&v100);
        if (v101)
        {
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain_n(v34, 2);
          v38 = v32;
          v22 = 0;
        }
        else
        {
          v19 = v100;
          sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain_n(v34, 2);
          v20 = v32;
          sub_1003718C8((uint64_t)v98);
          v21 = static NSObject.== infix(_:_:)(v19, v20);
          sub_1003718F4((uint64_t)v98);
          v22 = v21 & 1;
        }
        sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        v23 = swift_allocObject(&unk_100603B28, 144, 7);
        v24 = *(_OWORD *)(v1 + 48);
        *(_OWORD *)(v23 + 48) = *(_OWORD *)(v1 + 32);
        *(_OWORD *)(v23 + 64) = v24;
        *(_OWORD *)(v23 + 80) = *(_OWORD *)(v1 + 64);
        v25 = *(_QWORD *)(v1 + 80);
        v26 = *(_OWORD *)(v1 + 16);
        *(_OWORD *)(v23 + 16) = *(_OWORD *)v1;
        *(_OWORD *)(v23 + 32) = v26;
        *(_QWORD *)(v23 + 96) = v25;
        *(_QWORD *)(v23 + 104) = v32;
        *(_QWORD *)(v23 + 112) = v33;
        *(_QWORD *)(v23 + 120) = v34;
        *(_QWORD *)(v23 + 128) = v89;
        *(_QWORD *)(v23 + 136) = v35;
        sub_100371700(v1);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
        v27 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v93, v90, 0, 0, 0, 0, 0, 0, 0, 0, v22, sub_1003718A0, v23);
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v34);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
        specialized Array._endMutation()(v31);
      }
      v18 += 5;
      --v17;
    }
    while (v17);
    swift_release();
    v39 = v102;
  }
  else
  {
    sub_100371700(v1);
    v39 = (uint64_t)_swiftEmptyArrayStorage;
  }
  sub_1001808C4((uint64_t *)v1);
  swift_release();
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v85 = v39;
    else
      v85 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v86 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v39);
    if (v86)
      goto LABEL_32;
LABEL_51:
    swift_bridgeObjectRelease(v39);
    return 0;
  }
  if (!*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_51;
LABEL_32:
  v40 = *(unsigned __int8 *)(v1 + 27);
  v41 = static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)(v40);
  v43 = v42;
  v44 = static TTRLocalizableStrings.Sections.moveToSectionText(withSelectedRemindersCount:listLayout:)(*(_QWORD *)(v1 + 32), v40);
  v91 = v45;
  v94 = v44;
  v46 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v47 = swift_allocObject(&unk_100603AD8, 104, 7);
  v48 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v47 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v47 + 64) = v48;
  *(_OWORD *)(v47 + 80) = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v47 + 96) = *(_QWORD *)(v1 + 80);
  v49 = *(_OWORD *)(v1 + 16);
  v50 = (uint64_t *)(v1 + 16);
  *(_OWORD *)(v47 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v47 + 32) = v49;
  sub_100371700(v1);
  v51 = v46;
  v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v41, v43, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100371794, v47);
  v53._object = (void *)0x8000000100576E00;
  v54._countAndFlagsBits = 1701736270;
  v54._object = (void *)0xE400000000000000;
  v53._countAndFlagsBits = 0xD000000000000045;
  v55 = TTRLocalizedString(_:comment:)(v54, v53);
  v56 = v1;
  v57 = swift_allocObject(&unk_100603B00, 104, 7);
  v58 = *(_OWORD *)(v56 + 48);
  *(_OWORD *)(v57 + 48) = *(_OWORD *)(v56 + 32);
  *(_OWORD *)(v57 + 64) = v58;
  *(_OWORD *)(v57 + 80) = *(_OWORD *)(v56 + 64);
  *(_QWORD *)(v57 + 96) = *(_QWORD *)(v56 + 80);
  v59 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)(v57 + 16) = *(_OWORD *)v56;
  *(_OWORD *)(v57 + 32) = v59;
  sub_100371700(v56);
  v60 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v55._countAndFlagsBits, v55._object, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003717C8, v57);
  sub_1003717EC(v50, (uint64_t)v97);
  sub_1003717EC(v97, (uint64_t)&v102);
  objc_msgSend(v60, "setState:", v103 > 1u);
  v61 = *(_BYTE *)(v56 + 26);
  if ((v61 & 1) != 0)
  {
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v62 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v63 = swift_allocObject(v62, 40, 7);
    *(_OWORD *)(v63 + 16) = xmmword_100521140;
    *(_QWORD *)(v63 + 32) = v60;
    preferredElementSize = v63;
    specialized Array._endMutation()(v63);
    v64 = v60;
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    v104.value.super.isa = 0;
    v104.is_nil = 0;
    v66.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v65, (Swift::String_optional)0, v104, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v88).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66.super.super.isa);
    v68 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v67 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v68 >= v67 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
    v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66.super.super.isa);
    specialized Array._endMutation()(v69);
  }
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v72 = v39;
    else
      v72 = v39 & 0xFFFFFFFFFFFFFF8;
    v73 = sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v39);
    v71 = _bridgeCocoaArray<A>(_:)(v72, v73);
    swift_bridgeObjectRelease(v39);
  }
  else
  {
    swift_bridgeObjectRetain(v39);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v70);
    sub_100005ED8(0, (unint64_t *)&unk_100649B90, UIMenuElement_ptr);
    v71 = v39;
  }
  swift_bridgeObjectRelease(v39);
  sub_1004507E0(v71);
  if ((v61 & 1) != 0)
  {
    sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
    v74 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v75 = swift_allocObject(v74, 40, 7);
    *(_OWORD *)(v75 + 16) = xmmword_100521140;
    *(_QWORD *)(v75 + 32) = v52;
    v96 = v75;
    specialized Array._endMutation()(v75);
    v76 = v52;
    v77._countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    v105.value.super.isa = 0;
    v105.is_nil = 0;
    v78.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v77, (Swift::String_optional)0, v105, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v96, v88).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78.super.super.isa);
    v80 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v80 >= v79 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
    v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v78.super.super.isa);
    specialized Array._endMutation()(v81);
  }
  sub_100005ED8(0, &qword_1006415D0, UIMenu_ptr);
  v82 = v51;
  v83._object = v91;
  v83._countAndFlagsBits = v94;
  v106.value.super.isa = (Class)v51;
  v106.is_nil = 0;
  v84.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v83, (Swift::String_optional)0, v106, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v88).super.super.isa;

  return v84.super.super.isa;
}

uint64_t sub_100371700(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_BYTE *)(a1 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)a1);
  swift_bridgeObjectRetain(v2);
  sub_1001BECBC(v3, v8);
  swift_retain();
  sub_100053DE4(v4, v5);
  sub_100053DE4(v6, v7);
  return a1;
}

uint64_t sub_100371794()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD, _QWORD))(v0 + 72);
  if (v1)
    return v1(0, 0);
  return result;
}

uint64_t sub_1003717C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 56))(0);
}

uint64_t sub_1003717EC(uint64_t *a1, uint64_t a2)
{
  initializeBufferWithCopyOfBuffer for TTRIListDetailColorsContentState(a2, a1);
  return a2;
}

uint64_t sub_100371828()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100180954(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1003718A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 56))(*(_QWORD *)(v0 + 104));
}

uint64_t sub_1003718C8(uint64_t a1)
{
  sub_1001BECBC(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_1003718F4(uint64_t a1)
{
  sub_100180954(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

void *sub_100371920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v1 = v0;
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  __chkstk_darwin(updated);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100373260(v1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType, (uint64_t)v7);
  v8 = sub_10002A750(&qword_100642EA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
    return &_swiftEmptySetSingleton;
  v10 = sub_10001F580((uint64_t)v7, (uint64_t)v4, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
  v11 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter(v10);
  swift_retain();
  v12 = sub_100371D60(v11);
  swift_bridgeObjectRelease(v11);
  v13 = sub_10003D3D8(v12);
  swift_bridgeObjectRelease(v12);
  swift_release();
  v19[1] = v13;
  v14 = sub_10002A750(&qword_100649DF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v16 = sub_1002525D4();
  v17 = sub_1000175C8((unint64_t *)&qword_100644970, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.ItemID);
  v9 = Sequence.mapToSet<A>(_:)(sub_1003720F4, 0, v14, v15, v16, v17);
  sub_10001F544((uint64_t)v4, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
  swift_bridgeObjectRelease(v13);
  return (void *)v9;
}

uint64_t sub_100371B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t *v27;
  _QWORD v28[5];
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t updated;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  __chkstk_darwin(updated);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100373260(v1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType, (uint64_t)v7);
  v8 = sub_10002A750(&qword_100642EA8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  if ((_DWORD)result != 1)
  {
    v29 = v7[*(int *)(v8 + 48)];
    v16 = sub_10001F580((uint64_t)v7, (uint64_t)v4, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates);
    v17 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates
                    + 8);
    v19 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates
                    + 16);
    v20 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates
                    + 24);
    v31 = v18;
    v11 = v17;
    v12 = v19;
    v21 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates
                    + 40);
    v13 = v20;
    v14 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates
                    + 32);
    v15 = v21;
    if (v18 == 1)
    {
      v28[1] = v21;
      v28[2] = v20;
      v28[3] = v19;
      v28[4] = v17;
      v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_internalTreeViewModel);
      v30 = v4;
      v23 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter(v16);
      v24 = sub_100371D60(v23);
      swift_bridgeObjectRelease(v23);
      v31 = sub_10037C890(v22, v24);
      v26 = swift_bridgeObjectRelease(v24);
      if ((v29 & 1) != 0)
        v27 = (uint64_t *)TTRTreeViewAnimationByType.fading.unsafeMutableAddressor(v25);
      else
        v27 = (uint64_t *)TTRTreeViewAnimationByType.none.unsafeMutableAddressor(v26);
      v14 = v27[3];
      v15 = v27[4];
      v12 = v27[1];
      v13 = v27[2];
      v11 = *v27;
      v33 = *v27;
      v34 = v12;
      v35 = v13;
      v36 = v14;
      v37 = v15;
      if (v30[*(int *)(updated + 24)] == 1)
      {
        TTRTreeViewAnimationByType.useReloadAnimationForRecurrentReminders()();
        v11 = v33;
        v12 = v34;
        v13 = v35;
        v14 = v36;
        v15 = v37;
      }
      v4 = v30;
    }
    sub_1003732A4(v18);
    result = sub_10001F544((uint64_t)v4, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
    v10 = v31;
  }
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = v14;
  a1[5] = v15;
  return result;
}

uint64_t sub_100371D60(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD v39[5];

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v3 = *(_QWORD *)(a1 + 16);
    if (v3)
      goto LABEL_5;
LABEL_11:
    v4 = &_swiftEmptySetSingleton;
    if (v2)
      goto LABEL_6;
LABEL_12:
    v13 = -1 << *(_BYTE *)(v1 + 32);
    v36 = v1 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain(v1);
    result = swift_retain();
    v11 = 0;
    goto LABEL_16;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v3 = __CocoaSet.count.getter(a1);
  if (!v3)
    goto LABEL_11;
LABEL_5:
  sub_10002A750(&qword_1006576D0);
  v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
  if (!v2)
    goto LABEL_12;
LABEL_6:
  if (v1 < 0)
    v5 = v1;
  else
    v5 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  swift_retain();
  v6 = __CocoaSet.makeIterator()(v5);
  v7 = type metadata accessor for REMObjectID_Codable(0);
  v8 = sub_1000175C8(&qword_1006576D8, (uint64_t (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for NSObject);
  result = (uint64_t)Set.Iterator.init(_cocoa:)(v39, v6, v7, v8);
  v1 = v39[0];
  v36 = v39[1];
  v10 = v39[2];
  v11 = v39[3];
  v12 = v39[4];
LABEL_16:
  v16 = (unint64_t)(v10 + 64) >> 6;
  v17 = (char *)(v4 + 7);
  while (v1 < 0)
  {
    v21 = __CocoaSet.Iterator.next()(result);
    if (!v21)
      goto LABEL_50;
    v37 = v21;
    v22 = type metadata accessor for REMObjectID_Codable(0);
    swift_dynamicCast(&v38, &v37, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
    v23 = v38;
LABEL_41:
    result = NSObject._rawHashValue(seed:)(v4[5]);
    v29 = -1 << *((_BYTE *)v4 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)&v17[8 * (v30 >> 6)]) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)&v17[8 * (v30 >> 6)])) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_51;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)&v17[8 * v31];
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)&v17[(v18 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v18;
    *(_QWORD *)(v4[6] + 8 * v18) = v23;
    ++v4[2];
  }
  if (v12)
  {
    v19 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v20 = v19 | (v11 << 6);
LABEL_40:
    v23 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v20);
    v38 = v23;
    v28 = v23;
    goto LABEL_41;
  }
  v24 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v24 >= v16)
      goto LABEL_50;
    v25 = *(_QWORD *)(v36 + 8 * v24);
    v26 = v11 + 1;
    if (!v25)
    {
      v26 = v11 + 2;
      if (v11 + 2 >= v16)
        goto LABEL_50;
      v25 = *(_QWORD *)(v36 + 8 * v26);
      if (!v25)
      {
        v26 = v11 + 3;
        if (v11 + 3 >= v16)
          goto LABEL_50;
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (!v25)
        {
          v26 = v11 + 4;
          if (v11 + 4 >= v16)
            goto LABEL_50;
          v25 = *(_QWORD *)(v36 + 8 * v26);
          if (!v25)
          {
            v26 = v11 + 5;
            if (v11 + 5 >= v16)
              goto LABEL_50;
            v25 = *(_QWORD *)(v36 + 8 * v26);
            if (!v25)
            {
              v27 = v11 + 6;
              while (v16 != v27)
              {
                v25 = *(_QWORD *)(v36 + 8 * v27++);
                if (v25)
                {
                  v26 = v27 - 1;
                  goto LABEL_39;
                }
              }
LABEL_50:
              v38 = 0;
              swift_release();
              sub_10003E410(v1);
              return (uint64_t)v4;
            }
          }
        }
      }
    }
LABEL_39:
    v12 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v26 << 6);
    v11 = v26;
    goto LABEL_40;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1003720F4()
{
  return TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
}

uint64_t sub_10037211C()
{
  uint64_t v0;

  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing, (uint64_t *)&unk_100649CE0);
  swift_release();
  sub_10001F544(v0 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  sub_1003732B4(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100372198()
{
  return type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100657510, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModelUpdateContext);
}

void sub_1003721B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t updated;
  unint64_t v5;
  _QWORD v6[4];

  sub_100372250(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(updated - 8) + 64;
      v6[3] = "0";
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_100372250(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100657520)
  {
    v2 = sub_10002CA5C((uint64_t *)&unk_100649CF0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100657520);
  }
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100657628, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
}

uint64_t *sub_1003722BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_100642EA8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
      v11 = *(int *)(updated + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for REMRemindersListDataView.Diff(0);
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_retain();
      v15(v12, v13, v14);
      *((_BYTE *)a1 + *(int *)(updated + 24)) = *((_BYTE *)a2 + *(int *)(updated + 24));
      *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(uint64_t a1)
{
  return sub_100007328(a1, qword_100657690, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
}

uint64_t sub_1003723FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_10002A750(&qword_100642EA8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_release();
    v4 = a1
       + *(int *)(type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0)
                + 20);
    v5 = type metadata accessor for REMRemindersListDataView.Diff(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_10037247C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = sub_10002A750(&qword_100642EA8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
    v9 = *(int *)(updated + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for REMRemindersListDataView.Diff(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(updated + 24)) = *((_BYTE *)a2 + *(int *)(updated + 24));
    *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_100372584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t updated;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_10002A750(&qword_100642EA8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_retain();
      swift_release();
      updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
      v19 = *(int *)(updated + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for REMRemindersListDataView.Diff(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
      *((_BYTE *)a1 + *(int *)(updated + 24)) = *((_BYTE *)a2 + *(int *)(updated + 24));
      *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_100642EA8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  v16(v13, v14, v15);
  *((_BYTE *)a1 + *(int *)(v11 + 24)) = *((_BYTE *)a2 + *(int *)(v11 + 24));
  *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

_QWORD *sub_100372724(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_10002A750(&qword_100642EA8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
    v9 = *(int *)(updated + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for REMRemindersListDataView.Diff(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(updated + 24)) = *((_BYTE *)a2 + *(int *)(updated + 24));
    *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_100372818(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = sub_10002A750(&qword_100642EA8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      swift_release();
      updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
      v18 = *(int *)(updated + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for REMRemindersListDataView.Diff(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
      *((_BYTE *)a1 + *(int *)(updated + 24)) = *((_BYTE *)a2 + *(int *)(updated + 24));
      *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_100642EA8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for REMRemindersListDataView.Diff(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *((_BYTE *)a1 + *(int *)(v11 + 24)) = *((_BYTE *)a2 + *(int *)(v11 + 24));
  *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10037299C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003729A8);
}

uint64_t sub_1003729A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10002A750(&qword_100642EA8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1003729F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100372A04);
}

uint64_t sub_100372A04(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_10002A750(&qword_100642EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100372A58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100642EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_100372A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100642EA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_100372AD8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];

  result = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_10052FD88);
    swift_initEnumMetadataSinglePayload(a1, 256, v4, 1);
    return 0;
  }
  return result;
}

_QWORD *sub_100372B48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for REMRemindersListDataView.Diff(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v12(v9, v10, v11);
    *((_BYTE *)v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_100372BFC(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for REMRemindersListDataView.Diff(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_100372C44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for REMRemindersListDataView.Diff(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_100372CD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for REMRemindersListDataView.Diff(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_100372D58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for REMRemindersListDataView.Diff(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_100372DD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for REMRemindersListDataView.Diff(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100372E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100372E5C);
}

uint64_t sub_100372E5C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for REMRemindersListDataView.Diff(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100372ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100372EE4);
}

char *sub_100372EE4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for REMRemindersListDataView.Diff(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100372F58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for REMRemindersListDataView.Diff(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10052FD88;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100372FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  __chkstk_darwin(updated);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v25 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v25 - v18;
  v20 = v4 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_cachedTreeViewUpdates;
  *(_QWORD *)v20 = 1;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_QWORD *)(v20 + 40) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_internalTreeViewModel) = a1;
  v26 = a2;
  sub_100373218(a2, v4 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing);
  sub_100373260(a3, (uint64_t)v17);
  sub_100373260(a3, (uint64_t)v14);
  v21 = sub_10002A750(&qword_100642EA8);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21) == 1)
  {
    swift_retain(a1);
  }
  else
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v10, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
    swift_retain(a1);
    v23 = sub_10037C994();
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
    if ((v23 & 1) != 0)
    {
      sub_10001F544((uint64_t)v17, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v17, 1, 1, v21);
    }
  }
  sub_10001F580((uint64_t)v17, (uint64_t)v19, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  sub_10001F544(a3, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  sub_1000073A0(v26, (uint64_t *)&unk_100649CE0);
  sub_10001F580((uint64_t)v19, v4 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  return v4;
}

uint64_t sub_100373218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100649CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100373260(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_1003732A4(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t sub_1003732B4(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1003732C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006576E0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006576E0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100373354()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t inited;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v14[80];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  _BYTE v26[48];
  _BYTE v27[80];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  _QWORD v32[5];
  char v33;
  uint64_t v34;

  if (qword_10063D898 != -1)
    swift_once(&qword_10063D898, sub_1004FEB88);
  v0 = qword_100673A50;
  v34 = qword_100673A50;
  LOBYTE(v28) = 0;
  v1 = sub_100374750();
  swift_bridgeObjectRetain(v0);
  AnyHashable.init<A>(_:)(v32, &v28, &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem, v1);
  v33 = 1;
  LOBYTE(v28) = 0;
  v31 = 256;
  v2 = sub_10002A750(&qword_1006487F0);
  inited = swift_initStackObject(v2, v27);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  sub_10017C4F0((uint64_t)v32, inited + 32);
  v4 = sub_100254D48();
  v5 = Array<A>.index<A>(forInsertingAt:where:)(&v28, sub_1004FEB84, 0, v0, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v7 = v6;
  sub_100254D8C((uint64_t)&v28, (uint64_t)v26);
  if ((v7 & 1) != 0)
  {
    sub_100254D8C((uint64_t)v26, (uint64_t)&v15);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_100254DD4((uint64_t)&v15, (uint64_t)&v22);
LABEL_13:
        sub_1000073A0((uint64_t)&v22, &qword_100651C48);
        v5 = *(_QWORD *)(v0 + 16);
        goto LABEL_14;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        v24 = 0;
        v22 = 0u;
        v23 = 0u;
        v25 = -1;
        goto LABEL_13;
      }
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      v25 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v15, (uint64_t)&v22);
    }
    sub_1000073A0((uint64_t)&v22, &qword_100651C48);
    v5 = 0;
  }
LABEL_14:
  sub_1000073A0((uint64_t)v26, &qword_100651C40);
  sub_10043AE54(v5, v5, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  sub_1000073A0((uint64_t)&v28, &qword_100651C40);
  sub_100254E10(v32);
  LOBYTE(v28) = 1;
  AnyHashable.init<A>(_:)(v32, &v28, &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem, v1);
  v33 = 1;
  v28 = 1;
  v29 = 0u;
  v30 = 0u;
  v31 = 512;
  v8 = swift_initStackObject(v2, v14);
  *(_OWORD *)(v8 + 16) = xmmword_100520250;
  sub_10017C4F0((uint64_t)v32, v8 + 32);
  v9 = v34;
  v10 = Array<A>.index<A>(forInsertingAt:where:)(&v28, sub_1004FEB84, 0, v34, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, &type metadata for TTRIRemindersListActionMenuItems.MenuItem, v4);
  v12 = v11;
  sub_100254D8C((uint64_t)&v28, (uint64_t)v26);
  if ((v12 & 1) != 0)
  {
    sub_100254D8C((uint64_t)v26, (uint64_t)&v15);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_100254DD4((uint64_t)&v15, (uint64_t)&v22);
LABEL_24:
        sub_1000073A0((uint64_t)&v22, &qword_100651C48);
        v10 = *(_QWORD *)(v9 + 16);
        goto LABEL_25;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        v24 = 0;
        v22 = 0u;
        v23 = 0u;
        v25 = -1;
        goto LABEL_24;
      }
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      v25 = -1;
    }
    else
    {
      sub_100254DD4((uint64_t)&v15, (uint64_t)&v22);
    }
    sub_1000073A0((uint64_t)&v22, &qword_100651C48);
    v10 = 0;
  }
LABEL_25:
  sub_1000073A0((uint64_t)v26, &qword_100651C40);
  sub_10043AE54(v10, v10, v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v8 + 32, *(_QWORD *)(v8 + 16), &type metadata for TTRIRemindersListActionMenuItems.MenuItem);
  sub_1000073A0((uint64_t)&v28, &qword_100651C40);
  sub_100254E10(v32);
  return v34;
}

uint64_t sub_100373758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[4];

  v2 = v1;
  AnyHashable.base.getter(v19, a1);
  if (!swift_dynamicCast(&v18, v19, &type metadata for Any[8], &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem, 6))return 0;
  if ((v18 & 1) != 0)
  {
    v3 = String._bridgeToObjectiveC()();
    v4 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v3);

    v5 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v6 = static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter(v5);
    v8 = v7;
    v9 = swift_allocObject(&unk_100603C28, 24, 7);
    swift_weakInit(v9 + 16, v2);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, v4, 0, 0, 0, 0, 2, 0, sub_100374740, v9);
  }
  else
  {
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v11);

    v13 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    v14 = static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter(v13);
    v16 = v15;
    v17 = swift_allocObject(&unk_100603C28, 24, 7);
    swift_weakInit(v17 + 16, v2);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14, v16, 0, 0, v12, 0, 0, 0, 0, 0, 0, sub_100374748, v17);
  }
}

double sub_100373944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  double result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t, __n128);
  __n128 v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  Swift::String_optional v23;
  _BYTE v24[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v6 = (_QWORD *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource), v4);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    if (v9)
    {
      v11 = (void *)v9;
      v12 = v6[9];
      v13 = v6[10];
      v14 = swift_getObjectType(v12, v10);
      v15 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v13 + 256);
      v16 = swift_unknownObjectRetain(v12);
      v17 = (void *)v15(v11, v14, v13, v16);
      swift_unknownObjectRelease(v12);
      v18 = v6[11];
      swift_unknownObjectRetain(v18);
      swift_retain();
      sub_100374434(v17, (uint64_t)v6, v18);
      swift_unknownObjectRelease(v18);
      v19 = swift_release();
      v20 = (uint64_t *)TTRITipKitSignalContext.RemindersList.MoreMenu.smartList.unsafeMutableAddressor(v19);
      v21 = *v20;
      v22 = (void *)v20[1];
      swift_bridgeObjectRetain(v22);
      v23.value._countAndFlagsBits = v21;
      v23.value._object = v22;
      TTRITipKitSignal.donate(signalContext:)(v23);
      swift_release();

      *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

double sub_100373A84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  if (swift_weakLoadStrong(v2))
  {
    sub_100373B6C();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id sub_100373AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  id v6;
  id v7;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource), a2);
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  v6 = v5;
  if (v5)
  {
    v7 = objc_msgSend(v5, "customContext");

    if (v7)
    {
      v6 = objc_msgSend(v7, "account");

    }
    else
    {
      return 0;
    }
  }
  return v6;
}

void sub_100373B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  unint64_t v24;
  __n128 v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Swift::String v39;
  Swift::String v40;
  void *object;
  NSString v42;
  NSString v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSString v56;
  void *v57;
  id v58;
  void *Strong;
  void *v60;
  __int128 v61;
  id v62;
  _QWORD aBlock[6];
  _BYTE v64[88];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource), v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  if (v9)
  {
    v62 = v9;
    v10 = objc_msgSend(v9, "smartListType");
    v11 = REMSmartListTypeCustom;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    if (v12 == v15 && v14 == v16)
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    else
    {
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);

      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) == 0)
      {

        return;
      }
    }
    if (qword_10063D6E0 != -1)
      swift_once(&qword_10063D6E0, sub_1003732C4);
    v20 = sub_100012DC4(v2, (uint64_t)qword_1006576E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
    v21 = sub_10002A750((uint64_t *)&unk_100640F20);
    inited = swift_initStackObject(v21, v64);
    v61 = xmmword_100520250;
    *(_OWORD *)(inited + 16) = xmmword_100520250;
    *(_QWORD *)(inited + 32) = 0x44497463656A626FLL;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    v23 = objc_msgSend(v62, "objectID");
    *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    *(_QWORD *)(inited + 48) = v23;
    v24 = sub_10002D32C(inited);
    sub_1000143B4((uint64_t)"Reminders List delete custom smart list {smartList.objectID: %@}", 64, 2, v24);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v25);
    v26 = v62;
    v27._object = (void *)0x800000010056D9D0;
    v28._object = (void *)0x800000010056D9F0;
    v27._countAndFlagsBits = 0x100000000000001BLL;
    v28._countAndFlagsBits = 0xD00000000000002ELL;
    v29 = TTRLocalizedString(_:comment:)(v27, v28);
    v30 = sub_10002A750((uint64_t *)&unk_100640FD0);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = v61;
    v32 = objc_msgSend(v26, "name");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_1000770A4();
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    String.init(format:_:)(v29._countAndFlagsBits, v29._object, v31);
    v37 = v36;

    swift_bridgeObjectRelease(v29._object);
    v38 = v26;
    v39._countAndFlagsBits = 0x1000000000000058;
    v40._countAndFlagsBits = 0xD000000000000037;
    v39._object = (void *)0x800000010056D630;
    v40._object = (void *)0x800000010056D690;
    object = TTRLocalizedString(_:comment:)(v39, v40)._object;

    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v44 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v42, v43, 1);

    static TTRLocalizableStrings.Common.alertCancelButton.getter(v45);
    v47 = v46;
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v47);
    v49 = (void *)objc_opt_self(UIAlertAction);
    v50 = objc_msgSend(v49, "actionWithTitle:style:handler:", v48, 1, 0);

    static TTRLocalizableStrings.Common.deleteButton.getter();
    v52 = v51;
    v53 = swift_allocObject(&unk_100603C28, 24, 7);
    swift_weakInit(v53 + 16, v1);
    v54 = swift_allocObject(&unk_100603C50, 32, 7);
    *(_QWORD *)(v54 + 16) = v53;
    *(_QWORD *)(v54 + 24) = v38;
    v55 = v38;
    swift_retain();
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    aBlock[4] = sub_100374798;
    aBlock[5] = v54;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000D4884;
    aBlock[3] = &unk_100603C68;
    v57 = _Block_copy(aBlock);
    v58 = objc_msgSend(v49, "actionWithTitle:style:handler:", v56, 2, v57, swift_release().n128_f64[0]);
    _Block_release(v57);
    swift_release();

    objc_msgSend(v44, "addAction:", v50);
    objc_msgSend(v44, "addAction:", v58);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + 88) + 16);
    if (Strong)
    {
      v60 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v44, 1, 0);

    }
    else
    {

    }
  }
}

void sub_100374120(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD aBlock[6];
  _BYTE v21[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    static TTRLocalizableStrings.RemindersList.deleteList.getter();
    v8 = v7;
    v9 = (void *)objc_opt_self(TTRUndoManager);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v11 = swift_allocObject(&unk_100603CA0, 32, 7);
    *(_QWORD *)(v11 + 16) = v6;
    *(_QWORD *)(v11 + 24) = a3;
    v12 = swift_allocObject(&unk_100603CC8, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_1003747A4;
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100603CE0;
    v13 = _Block_copy(aBlock);
    v14 = a3;
    swift_retain();
    swift_retain();
    objc_msgSend(v9, "withActionName:block:", v10, v13, swift_release().n128_f64[0]);

    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 150, 96, 55, 1);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v16 = *(_QWORD *)(v6 + 88);
      v17 = (void *)swift_unknownObjectWeakLoadStrong(v16 + 16);
      if (v17)
      {
        v18 = v17;
        v19 = objc_msgSend(v17, "presentedViewController", swift_unknownObjectRetain(v16).n128_f64[0]);

        if (v19)
        {
          objc_msgSend(v19, "dismissViewControllerAnimated:completion:", 1, 0);
          swift_release();
          swift_release();
          swift_unknownObjectRelease(v16);

        }
        else
        {
          swift_release();
          swift_release();
          swift_unknownObjectRelease(v16);
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
    }
  }
}

uint64_t sub_100374358()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource));
}

uint64_t sub_100374368()
{
  uint64_t v0;

  v0 = sub_10014866C();
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003743A8()
{
  return type metadata accessor for TTRIShowCustomSmartListPresenter(0);
}

uint64_t type metadata accessor for TTRIShowCustomSmartListPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_100657728;
  if (!qword_100657728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowCustomSmartListPresenter);
  return result;
}

uint64_t sub_1003743EC(uint64_t a1)
{
  void *v2;

  v2 = &unk_10052FE08;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 2296);
}

void sub_100374434(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *Strong;
  void *v13;
  id v14;

  v6 = objc_msgSend(a1, "saveRequest");
  v7 = objc_msgSend(v6, "store");

  v8 = sub_1003497D0(v7, a1, 1, a2, (uint64_t)&off_100603B60);
  v10 = v9;

  v11 = v8;
  swift_retain();
  v14 = sub_100342EF0(v11, v10, 0, 0, 0);

  swift_release_n(v10, 2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
}

void sub_10037453C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v5 = v4;
  static TTRLocalizableStrings.UndoAction.changeList.getter();
  v11 = v10;
  v12 = (void *)objc_opt_self(TTRUndoManager);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = swift_allocObject(&unk_100603BB0, 56, 7);
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = a3;
  *(_BYTE *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a1;
  *(_QWORD *)(v14 + 48) = a2;
  v15 = swift_allocObject(&unk_100603BD8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100134348;
  *(_QWORD *)(v15 + 24) = v14;
  v18[4] = sub_10001B278;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10001B258;
  v18[3] = &unk_100603BF0;
  v16 = _Block_copy(v18);
  swift_retain();
  v17 = a3;
  swift_unknownObjectRetain(a1);
  swift_retain();
  objc_msgSend(v12, "withActionName:block:", v13, v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 150, 138, 51, 1);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

uint64_t sub_1003746D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10037470C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10037471C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100374740(uint64_t a1)
{
  uint64_t v1;

  return sub_100373A84(a1, v1);
}

double sub_100374748(uint64_t a1)
{
  uint64_t v1;

  return sub_100373944(a1, v1);
}

unint64_t sub_100374750()
{
  unint64_t result;

  result = qword_100658060;
  if (!qword_100658060)
  {
    result = swift_getWitnessTable(&unk_10052FE80, &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100658060);
  }
  return result;
}

void sub_100374798(uint64_t a1)
{
  uint64_t v1;

  sub_100374120(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003747A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 72), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 568))(v4, ObjectType, v5);
}

uint64_t sub_1003747E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t storeEnumTagSinglePayload for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100374844 + 4 * byte_10052FDC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100374878 + 4 * asc_10052FDC0[v4]))();
}

uint64_t sub_100374878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100374880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100374888);
  return result;
}

uint64_t sub_100374894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10037489CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003748A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003748A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem;
}

unint64_t sub_1003748C8()
{
  unint64_t result;

  result = qword_100658068;
  if (!qword_100658068)
  {
    result = swift_getWitnessTable("y?\r", &type metadata for TTRIShowCustomSmartListPresenter.ActionMenuCustomItem);
    atomic_store(result, (unint64_t *)&qword_100658068);
  }
  return result;
}

uint64_t sub_10037491C(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  id v69;
  void *v70;
  void (*v71)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _UNKNOWN **);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v86;
  _QWORD *v87;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[4];
  __int128 v103;
  __int128 v104;
  _QWORD v105[16];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;

  v97 = a1;
  v98 = a3;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4);
  v90 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v93);
  v99 = (uint64_t)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v92);
  v91 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v96 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v89 - v12;
  v14 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v17);
  v19 = (void **)((char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002B1E8((uint64_t)a2, (uint64_t)v19, v20);
  v105[0] = _swiftEmptyArrayStorage;
  v21 = sub_100080C90();
  v22 = sub_10002A750(&qword_100641278);
  v23 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v105, v22, v23, v14, v21);
  sub_100041F70(v19, (uint64_t)v16, 0, (uint64_t)v105);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(5);
  v24 = *a2;
  v25 = (uint64_t)a2;
  v95 = v9;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v27 = v96;
  v26(v96, v13, v8);
  v28 = type metadata accessor for TTRShowSiriFoundInAppsDataModelSource(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = TTRShowSiriFoundInAppsDataModelSource.init(store:sortingStyle:canChangeSortingStyle:)(v24, v27, 0);
  v30 = (void *)v105[0];
  v31 = v91;
  v94 = v13;
  v96 = (char *)v8;
  v26(v91, v13, v8);
  v32 = (uint64_t)v31;
  swift_storeEnumTagMultiPayload(v31, v92, 0);
  v33 = type metadata accessor for TTRShowSiriFoundInAppsViewModelSource(0);
  v34 = (uint64_t *)swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v35 = v30;
  v92 = v29;
  v36 = sub_1003750C4(v29, v35, v32, v34);

  sub_10002B1E8(v25, (uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v105, (uint64_t)v102);
  swift_retain(v36);
  sub_100042A94((uint64_t)v19, (uint64_t)v102, v36, (uint64_t)&off_100609110, v99);
  v37 = (uint64_t)v90;
  sub_100042C0C((uint64_t)v90);
  v38 = type metadata accessor for TTRIRemindersCommonPresenter(0);
  v39 = *(unsigned int *)(v38 + 48);
  v40 = *(unsigned __int16 *)(v38 + 52);
  v91 = (char *)v38;
  v41 = swift_allocObject(v38, v39, v40);
  v42 = v98;
  swift_unknownObjectRetain(v98);
  v43 = (_QWORD *)sub_1002A70CC(v37, v42, v41);
  v44 = v43[18];
  ObjectType = swift_getObjectType(v43[17], v45);
  v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 104))(ObjectType, v44);
  if (v47)
  {
    v49 = v47;
    v50 = v48;
    v51 = swift_getObjectType(v47, v48);
    LOBYTE(v50) = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v51, v50);
    swift_unknownObjectRelease(v49);
    LOBYTE(v47) = v50 & 1;
  }
  v52 = sub_100172EB4(v47, (uint64_t)v43);
  v90 = (char *)v53;
  v55 = v54;
  v57 = v56;
  v89 = swift_getObjectType(v54, v53);
  v43[3] = *(_QWORD *)(v57 + 8);
  v98 = v55;
  swift_unknownObjectWeakAssign(v43 + 2, v55);
  v58 = v43[18];
  v60 = swift_getObjectType(v43[17], v59);
  v61 = *(uint64_t (**)(uint64_t, uint64_t))(v58 + 104);
  swift_retain(v43);
  v62 = v52;
  v63 = v61(v60, v58);
  v65 = v63;
  if (v63)
  {
    v66 = v64;
    v67 = swift_getObjectType(v63, v64);
    v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 16))(v67, v66);
    swift_unknownObjectRelease(v65);
    v65 = v68 & 1;
  }
  v69 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v70 = (void *)sub_1002A8974(v43, v62, v90, v65, 0, 1, 0, v69);
  swift_release(v43);

  v71 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v57 + 32);
  v72 = v70;
  v90 = v72;
  v71(v70, &off_1005FCD60, v89, v57);
  v73 = v105[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v105[0] + direct field offset for TTRRemindersListInteractor.delegate, &v101, 1, 0);
  *(_QWORD *)(v73 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v73, v43);
  v74 = v105[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v105[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v100, 1, 0);
  *(_QWORD *)(v74 + 8) = &protocol witness table for TTRShowSiriFoundInAppsDataModelSource;
  v75 = v92;
  swift_unknownObjectWeakAssign(v74, v92);
  swift_unknownObjectWeakAssign(v105[3] + 16, v72);
  v76 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v75 + 360);
  v77 = swift_retain(v36);
  v76(v77, &off_1005F8108);
  swift_retain(v36);
  v78 = swift_retain(v43);
  sub_10048D4EC(v78, (uint64_t)&off_1005F30C0);
  swift_release(v36);
  swift_release(v43);
  v79 = v99;
  v80 = *(_QWORD *)(v99 + *(int *)(v93 + 28));
  *(_QWORD *)(v80 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v80 + 16, v43);
  sub_100028CFC((uint64_t)&v106, (uint64_t)v102);
  v103 = v107;
  v104 = v108;
  v81 = v107 + 32;
  *(_QWORD *)(v107 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v81, v43);
  sub_100027F10(v102);
  sub_100028CFC((uint64_t)&v109, (uint64_t)v102);
  v82 = v110;
  v103 = v110;
  v84 = swift_getObjectType(v110, v83);
  v85 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v82 + 1) + 48);
  swift_retain(v43);
  v86 = swift_unknownObjectRetain(v82);
  v85(v43, &off_1005F2FF0, v84, *((_QWORD *)&v82 + 1), v86);
  swift_unknownObjectRelease(v82);
  sub_100027F10(v102);
  v87 = v97;
  v97[3] = v91;
  v87[4] = &off_100603E08;
  *v87 = v43;
  swift_release(v75);
  swift_release(v36);

  swift_unknownObjectRelease(v98);
  sub_10001F544(v79, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, char *))(v95 + 8))(v94, v96);
  sub_100043844((uint64_t)v105);
  return (uint64_t)v90;
}

id TTRIShowSiriFoundInAppsAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSiriFoundInAppsAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowSiriFoundInAppsAssembly()
{
  return objc_opt_self(_TtC9Reminders31TTRIShowSiriFoundInAppsAssembly);
}

id TTRIShowSiriFoundInAppsAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSiriFoundInAppsAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003750C4(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v8 = *a4;
  v37 = a3;
  v38 = v8;
  v9 = type metadata accessor for REMAnalyticsEvent(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a3, (uint64_t)v18, v19);
  swift_retain(a1);
  v20 = sub_1002A8704(a1, (uint64_t)a2, (uint64_t)v18, (uint64_t)a4);
  swift_retain(v20);
  sub_100239FA4((uint64_t)v15);
  v21 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v15, 0, 1, v21);
  sub_10046ADD4((uint64_t)v15);
  v22 = sub_100080EAC((uint64_t)v15);
  v23 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v22);
  type metadata accessor for REMAnalyticsManager(0);
  v24 = v23;
  v25 = static REMAnalyticsManager.shared.getter();
  v26 = sub_10002A750(&qword_100645348);
  v27 = &v12[*(int *)(v26 + 48)];
  v28 = &v12[*(int *)(v26 + 80)];
  v29 = enum case for REMRemindersOpenUserOperation.SmartListType.siriFoundInApps(_:);
  v30 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v12, v29, v30);
  v31 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v32 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v12, v31, v32);
  *(_QWORD *)v27 = TTRUserDefaults.activitySessionId.getter(v33);
  *((_QWORD *)v27 + 1) = v34;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v28 = _typeName(_:qualified:)(v38, 0);
  *((_QWORD *)v28 + 1) = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMAnalyticsEvent.openListUserOperation(_:), v9);
  REMAnalyticsManager.post(event:)(v12);

  swift_release(v25);
  swift_release(v20);
  sub_10001F544(v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v20;
}

void sub_100375364(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *oslog;

  if (*(_QWORD *)(v3 + 16))
  {
    if (qword_10063D6E8 != -1)
      swift_once(&qword_10063D6E8, sub_1003755B8);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_100658098);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      v8 = "TTRIActivityAlertRouterCapability: trying to present activity alert twice";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, v8, v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }
  }
  else
  {
    if (a3)
    {
      v10 = a3;
      swift_bridgeObjectRetain(a2);
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, 0, 1);

      v13 = type metadata accessor for TTRISpinnerAlertContentViewController();
      v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
      objc_msgSend(v12, "setContentViewController:", v14);
      v15 = *(void **)(v3 + 16);
      *(_QWORD *)(v3 + 16) = v12;
      v16 = v12;

      oslog = UIViewController.topPresentedViewController.getter();
      -[NSObject presentViewController:animated:completion:](oslog, "presentViewController:animated:completion:", v16, 1, 0);

      goto LABEL_13;
    }
    if (qword_10063D6E8 != -1)
      swift_once(&qword_10063D6E8, sub_1003755B8);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100012DC4(v17, (uint64_t)qword_100658098);
    oslog = Logger.logObject.getter(v18);
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      v8 = "TTRIActivityAlertRouterCapability: failed to present activity alert; missing a presentingViewController";
      goto LABEL_6;
    }
  }
LABEL_13:

}

uint64_t sub_1003755B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100658098);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100658098);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100375648(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void **v29;
  void (*v30)(char *, char *, uint64_t);
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  void (*v88)(void *, _UNKNOWN **, uint64_t, uint64_t);
  id v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, _UNKNOWN **);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v102;
  uint64_t v103;
  _QWORD *v104;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  void **v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[4];
  __int128 v122;
  __int128 v123;
  _QWORD v124[16];
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  __int128 v129;

  v110 = a8;
  v111 = a6;
  v116 = a7;
  v117 = a1;
  v109 = a5;
  v106 = a4;
  v118 = (void **)a2;
  v8 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v8);
  v108 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v107 = (uint64_t)&v106 - v11;
  v112 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v112);
  v13 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v14);
  v16 = (void **)((char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v106 - v22;
  v24 = sub_10002A750(&qword_100641270);
  v25 = swift_allocObject(v24, ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72), *(unsigned __int8 *)(v18 + 80) | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100520250;
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v25);
  v124[0] = v25;
  v26 = sub_100080C90();
  v27 = sub_10002A750(&qword_100641278);
  v28 = sub_100080CD8();
  dispatch thunk of SetAlgebra.init<A>(_:)(v124, v27, v28, v17, v26);
  v29 = v118;
  sub_10002B1E8((uint64_t)v118, (uint64_t)v16, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v113 = v23;
  v114 = v18;
  v30 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v115 = v17;
  v30(v20, v23, v17);
  sub_100041F70(v16, (uint64_t)v20, 0, (uint64_t)v124);
  v31 = *v29;
  v32 = type metadata accessor for TTRShowPublicTemplateDataModelSource(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = v106;
  v34 = v111;
  v35 = v116;
  v36 = TTRShowPublicTemplateDataModelSource.init(store:publicTemplateObjectID:fallbackProperties:)(v31, v106, v109, v111, v116);
  v37 = (void *)v124[0];
  v38 = type metadata accessor for TTRShowPublicTemplateViewModelSource(0);
  v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v40 = v35;
  v41 = v31;
  v42 = v33;
  swift_retain();
  v43 = v37;
  swift_bridgeObjectRetain(v34);
  v44 = sub_100080D24(1, v36, v43, v39);
  swift_release();

  sub_10002B1E8((uint64_t)v118, (uint64_t)v16, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v124, (uint64_t)v121);
  swift_retain();
  v109 = v44;
  sub_100042A94((uint64_t)v16, (uint64_t)v121, v44, (uint64_t)&off_100609110, (uint64_t)v13);
  v45 = v107;
  v116 = v13;
  sub_100042C0C(v107);
  v46 = type metadata accessor for TTRIShowPublicTemplatePreviewPresenter(0);
  v47 = *(unsigned int *)(v46 + 48);
  v48 = *(unsigned __int16 *)(v46 + 52);
  v111 = v46;
  v49 = swift_allocObject(v46, v47, v48);
  v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC9Reminders38TTRIShowPublicTemplatePreviewPresenter_dataModelSource);
  *v50 = v36;
  v50[1] = (uint64_t)&protocol witness table for TTRShowPublicTemplateDataModelSource;
  v51 = v108;
  sub_10002B1E8(v45, v108, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain();
  v52 = v110;
  swift_unknownObjectRetain(v110);
  v53 = (_QWORD *)sub_1002A7F9C(v51, v52, v49);
  sub_10001F544(v45, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v54 = v53[18];
  ObjectType = swift_getObjectType(v53[17], v55);
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 104);
  swift_retain();
  v58 = v57(ObjectType, v54);
  if (v58)
  {
    v60 = v58;
    v61 = v59;
    v62 = swift_getObjectType(v58, v59);
    LOBYTE(v61) = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v62, v61);
    swift_release();
    swift_unknownObjectRelease(v60);
    v63 = v61 & 1;
  }
  else
  {
    swift_release();
    v63 = 0;
  }
  v64 = sub_100172EB4(v63, (uint64_t)v53);
  v110 = v65;
  v67 = v66;
  v69 = v68;
  v108 = swift_getObjectType(v66, v65);
  v53[3] = *(_QWORD *)(v69 + 8);
  v118 = (void **)v67;
  swift_unknownObjectWeakAssign(v53 + 2, v67);
  v70 = v53[18];
  v72 = swift_getObjectType(v53[17], v71);
  v73 = *(uint64_t (**)(uint64_t, uint64_t))(v70 + 104);
  swift_retain_n(v53, 2);
  v74 = v64;
  v75 = v73(v72, v70);
  v77 = v75;
  if (v75)
  {
    v78 = v76;
    v79 = swift_getObjectType(v75, v76);
    v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v79, v78);
    swift_release();
    v81 = swift_unknownObjectRelease(v77);
    v77 = v80 & 1;
  }
  else
  {
    v82 = swift_release();
  }
  v83 = static TTRLocalizableStrings.Common.continueButton.getter(v81, v82);
  v85 = v84;
  v86 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v87 = (void *)sub_1002A8974(v53, v74, v110, v77, v83, v85, 0, v86);
  swift_release();

  v88 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v69 + 32);
  v89 = v87;
  v110 = (uint64_t)v89;
  v88(v87, &off_1005FCD60, v108, v69);
  v90 = v124[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v124[0] + direct field offset for TTRRemindersListInteractor.delegate, &v120, 1, 0);
  *(_QWORD *)(v90 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v90, v53);
  v91 = v124[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v124[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v119, 1, 0);
  *(_QWORD *)(v91 + 8) = &protocol witness table for TTRShowPublicTemplateDataModelSource;
  swift_unknownObjectWeakAssign(v91, v36);
  swift_unknownObjectWeakAssign(v124[3] + 16, v89);
  v92 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v36 + 384);
  v93 = swift_retain();
  v92(v93, &off_1005FCA38);
  swift_retain();
  v94 = swift_retain();
  sub_10048D4EC(v94, (uint64_t)&off_1005F30C0);
  swift_release();
  swift_release();
  v95 = (uint64_t)v116;
  v96 = *(_QWORD *)&v116[*(int *)(v112 + 28)];
  *(_QWORD *)(v96 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v96 + 16, v53);
  sub_100028CFC((uint64_t)&v125, (uint64_t)v121);
  v122 = v126;
  v123 = v127;
  v97 = v126 + 32;
  *(_QWORD *)(v126 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v97, v53);
  sub_100027F10(v121);
  sub_100028CFC((uint64_t)&v128, (uint64_t)v121);
  v98 = v129;
  v122 = v129;
  v100 = swift_getObjectType(v129, v99);
  v101 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v98 + 1) + 48);
  swift_retain();
  v102 = swift_unknownObjectRetain(v98);
  v101(v53, &off_1005F2FF0, v100, *((_QWORD *)&v98 + 1), v102);
  swift_unknownObjectRelease(v98);
  v103 = sub_100027F10(v121);
  (*(void (**)(uint64_t))(*(_QWORD *)v36 + 432))(v103);
  v104 = v117;
  v117[3] = v111;
  v104[4] = &off_10060D770;
  *v104 = v53;
  swift_release();
  swift_release();

  swift_unknownObjectRelease(v118);
  sub_10001F544(v95, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100043844((uint64_t)v124);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
  return v110;
}

id sub_100375DCC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  id result;
  char v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10002A750((uint64_t *)&unk_100658300);
  __chkstk_darwin(v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel], v19, 0, 0);
  v14 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_100266D04(a1, (uint64_t)v12);
  sub_100266D04(v13, v14);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1)
      return (id)sub_1000073A0((uint64_t)v12, &qword_1006582E0);
  }
  else
  {
    sub_100266D04((uint64_t)v12, (uint64_t)v9);
    if (v15(v14, 1, v3) != 1)
    {
      sub_1001DAD48(v14, (uint64_t)v6);
      v17 = static TTRTemplatesListViewModel.Template.__derived_struct_equals(_:_:)(v9, v6);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
      result = (id)sub_1000073A0((uint64_t)v12, &qword_1006582E0);
      if ((v17 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  }
  sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100658300);
LABEL_8:
  swift_beginAccess(v13, v18, 33, 0);
  sub_100379B64(a1, v13);
  swift_endAccess(v18);
  return objc_msgSend(v1, "setNeedsUpdateConfiguration");
}

id sub_100376014()
{
  return sub_100378B24(&OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___infoButton, (uint64_t (*)(uint64_t))sub_100377840);
}

uint64_t sub_100376160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  unint64_t v14;
  id v15;
  _OWORD v17[2];
  uint64_t v18;

  v2 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v17 - v10;
  if (qword_10063D6F0 != -1)
    swift_once(&qword_10063D6F0, sub_100378768);
  v12 = (void *)qword_100658150;
  sub_100266D04(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v13 = v12;
    sub_1000073A0((uint64_t)v4, &qword_1006582E0);
    memset(v17, 0, sizeof(v17));
    v18 = 0;
  }
  else
  {
    sub_1001DAD48((uint64_t)v4, (uint64_t)v11);
    sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
    v14 = sub_100379B1C();
    v15 = v12;
    AnyHashable.init<A>(_:)(v17, v8, v5, v14);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  }
  UICellConfigurationState.subscript.setter(v17, v12);
  return sub_1000073A0(a1, &qword_1006582E0);
}

void sub_100376310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_BYTE *, uint64_t);
  int *v32;
  int v33;
  void (*v34)(_BYTE *, _QWORD, uint64_t, int *);
  int *v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t, int *);
  unsigned int (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD *, _QWORD);
  uint64_t v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t inited;
  void *v49;
  NSString *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  void *v61;
  uint64_t *v62;
  id v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _BYTE *v75;
  void *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  _BYTE *v82;
  BOOL v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  int v87;
  BOOL v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  void *v101;
  char isEscapingClosureAtFileLocation;
  _BYTE v103[12];
  int v104;
  unsigned int (*v105)(_BYTE *, uint64_t);
  _BYTE *v106;
  _BYTE *v107;
  void (*v108)(_BYTE *, uint64_t);
  uint64_t v109;
  int v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t *v116;
  uint64_t v117;
  _BYTE *v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  _QWORD aBlock[6];
  _QWORD v130[3];
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  void *v137;
  _BYTE *v138;
  unsigned __int8 v139;
  unsigned __int8 v140;
  char v141;
  _BYTE v142[7];
  char v143;

  v3 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
  __chkstk_darwin(v3);
  v107 = &v103[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v5);
  v106 = &v103[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v124 = &v103[-v8];
  v9 = sub_10002A750(&qword_1006582E0);
  __chkstk_darwin(v9);
  v111 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v116 = (uint64_t *)&v103[-v12];
  __chkstk_darwin(v13);
  v15 = &v103[-v14];
  __chkstk_darwin(v16);
  v18 = &v103[-v17];
  __chkstk_darwin(v19);
  v21 = &v103[-v20];
  v22 = type metadata accessor for UIListContentConfiguration(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = &v103[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v28 = &v103[-v27];
  v117 = v1;
  sub_100376D24();
  static UIListContentConfiguration.subtitleCell()();
  v29 = type metadata accessor for UICellConfigurationState(0);
  v131 = v29;
  v132 = &protocol witness table for UICellConfigurationState;
  v30 = sub_100028D70(v130);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v30, a1, v29);
  v118 = v28;
  UIListContentConfiguration.updated(for:)(v130);
  v126 = v23;
  v31 = *(void (**)(_BYTE *, uint64_t))(v23 + 8);
  v113 = v22;
  v108 = v31;
  v31(v25, v22);
  sub_100027F10(v130);
  if (qword_10063D6F0 != -1)
    swift_once(&qword_10063D6F0, sub_100378768);
  UICellConfigurationState.subscript.getter(v130, qword_100658150);
  if (v131)
  {
    v32 = (int *)type metadata accessor for TTRTemplatesListViewModel.Template(0);
    v33 = swift_dynamicCast(v21, v130, &type metadata for AnyHashable, v32, 6);
    v34 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v32 - 1) + 56);
    v127 = v32;
    v34(v21, v33 ^ 1u, 1, v32);
  }
  else
  {
    sub_1000073A0((uint64_t)v130, (uint64_t *)&unk_1006582E8);
    v35 = (int *)type metadata accessor for TTRTemplatesListViewModel.Template(0);
    v36 = *(void (**)(_BYTE *, uint64_t, uint64_t, int *))(*((_QWORD *)v35 - 1) + 56);
    v127 = v35;
    v36(v21, 1, 1, v35);
  }
  v125 = v21;
  sub_100266D04((uint64_t)v21, (uint64_t)v18);
  type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v37 = *(unsigned int (**)(_BYTE *, uint64_t))(*((_QWORD *)v127 - 1) + 48);
  if (v37(v18, 1) == 1)
  {
    sub_1000073A0((uint64_t)v18, &qword_1006582E0);
    v38 = 0;
    v39 = 0;
  }
  else
  {
    v38 = *((_QWORD *)v18 + 1);
    v39 = *((_QWORD *)v18 + 2);
    swift_bridgeObjectRetain(v39);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
  }
  UIListContentConfiguration.text.setter(v38, v39);
  v40 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v41 = static UIFont.roundedBodyFont.getter(v40);
  v42 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v130);
  UIListContentConfiguration.TextProperties.font.setter(v41);
  v42(v130, 0);
  v43 = v117;
  v44 = sub_100377164();
  UIListContentConfiguration.image.setter(v44);
  sub_100266D04((uint64_t)v125, (uint64_t)v15);
  if (((unsigned int (*)(_BYTE *, uint64_t, int *))v37)(v15, 1, v127) == 1)
  {
    sub_1000073A0((uint64_t)v15, &qword_1006582E0);
    v45 = 0;
  }
  else
  {
    v46 = (uint64_t)v124;
    sub_10002B1E8((uint64_t)&v15[v127[7]], (uint64_t)v124, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
    v47 = sub_10002A750(&qword_10064BB40);
    inited = swift_initStackObject(v47, &v128);
    *(_OWORD *)(inited + 16) = xmmword_1005201E0;
    *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
    v49 = (void *)objc_opt_self(UIColor);
    v50 = NSForegroundColorAttributeName;
    v43 = v117;
    v51 = objc_msgSend(v49, "secondaryLabelColor");
    v52 = sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
    *(_QWORD *)(inited + 40) = v51;
    *(_QWORD *)(inited + 64) = v52;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    v53 = static UIFont.roundedFootnoteFont.getter(NSFontAttributeName);
    *(_QWORD *)(inited + 104) = v40;
    *(_QWORD *)(inited + 80) = v53;
    v54 = sub_100350498(inited);
    v45 = (unint64_t)TTRTemplatePublicLinkData.attributedStatusText(baseAttributes:forAccessibility:)((Swift::OpaquePointer)v54, 0);
    swift_bridgeObjectRelease(v54);
    sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  }
  v55 = v45;
  v56 = v118;
  UIListContentConfiguration.secondaryAttributedText.setter(v55);
  v57 = *(void **)(v43 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView);
  if (!v57)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v58 = v113;
  v131 = v113;
  v132 = &protocol witness table for UIListContentConfiguration;
  v59 = sub_100028D70(v130);
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v126 + 16))(v59, v56, v58);
  v60 = v57;
  UIListContentView.configuration.setter(v130);

  if (*(_QWORD *)(v43 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView))
  {
    v61 = *(void **)(v43 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView);
    v62 = v116;
    sub_100266D04((uint64_t)v125, (uint64_t)v116);
    if (((unsigned int (*)(uint64_t *, uint64_t, int *))v37)(v62, 1, v127) == 1)
    {
      v63 = v61;
      v64 = sub_1000073A0((uint64_t)v116, &qword_1006582E0);
      TTRListDetailBadgeViewModel.init()(v130, v64);
      v110 = v140;
      v65 = v139;
      v123 = (void *)v130[2];
      v124 = v138;
      v126 = v131;
      v114 = v133;
      v115 = v137;
      v121 = v134;
      v122 = (uint64_t)v132;
      v112 = v135;
      v66 = v136;
      v109 = v130[0];
      v120 = v130[1];
    }
    else
    {
      v67 = (uint64_t)v116;
      v68 = v116[4];
      v109 = v116[3];
      v69 = (void *)v116[5];
      v70 = v116[6];
      v105 = v37;
      v72 = v116[7];
      v71 = v116[8];
      v73 = v61;
      v74 = v116[9];
      v112 = v116[10];
      v104 = *((unsigned __int8 *)v116 + 88);
      v76 = (void *)v116[12];
      v75 = (_BYTE *)v116[13];
      v119 = *((unsigned __int8 *)v116 + 112);
      v110 = *((unsigned __int8 *)v116 + 113);
      v120 = v68;
      swift_bridgeObjectRetain(v68);
      v77 = v73;
      v122 = v72;
      v123 = v69;
      v78 = v69;
      v126 = v70;
      v79 = v72;
      v37 = v105;
      v114 = v71;
      v121 = v74;
      v80 = v74;
      v61 = v73;
      v66 = v104;
      sub_10002B764(v78, v70, v79, v71, v80, v112, v104);
      v115 = v76;
      v124 = v75;
      v81 = v75;
      v65 = v119;
      sub_10002B7A0(v76, v81, v119);
      sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
    }
    v82 = v111;
    sub_100266D04((uint64_t)v125, (uint64_t)v111);
    if (((unsigned int (*)(_BYTE *, uint64_t, int *))v37)(v82, 1, v127) == 1)
    {
      sub_1000073A0((uint64_t)v82, &qword_1006582E0);
      v83 = 0;
    }
    else
    {
      v84 = v106;
      sub_10002B1E8((uint64_t)&v82[v127[7]], (uint64_t)v106, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
      sub_10001F544((uint64_t)v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatesListViewModel.Template);
      v85 = v107;
      sub_10002B1E8((uint64_t)v84, (uint64_t)v107, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
      v86 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v87 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v85, 1, v86);
      v88 = v87 != 1;
      if (v87 != 1)
        sub_10001F544((uint64_t)v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
      sub_10001F544((uint64_t)v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
      v83 = v88;
    }
    v89 = v66;
    v143 = v66;
    v119 = v65;
    v141 = v65;
    v127 = (int *)objc_opt_self(UIView);
    v90 = swift_allocObject(&unk_100603FC0, 115, 7);
    v91 = v109;
    *(_QWORD *)(v90 + 16) = v61;
    *(_QWORD *)(v90 + 24) = v91;
    v93 = v120;
    v92 = v121;
    v94 = v123;
    *(_QWORD *)(v90 + 32) = v120;
    *(_QWORD *)(v90 + 40) = v94;
    v95 = v122;
    *(_QWORD *)(v90 + 48) = v126;
    *(_QWORD *)(v90 + 56) = v95;
    *(_QWORD *)(v90 + 64) = v114;
    *(_QWORD *)(v90 + 72) = v92;
    v96 = v112;
    *(_QWORD *)(v90 + 80) = v112;
    *(_BYTE *)(v90 + 88) = v143;
    *(_DWORD *)(v90 + 89) = *(_DWORD *)v142;
    *(_DWORD *)(v90 + 92) = *(_DWORD *)&v142[3];
    v97 = v124;
    *(_QWORD *)(v90 + 96) = v115;
    *(_QWORD *)(v90 + 104) = v97;
    *(_BYTE *)(v90 + 112) = v141;
    *(_BYTE *)(v90 + 113) = v110;
    *(_BYTE *)(v90 + 114) = v83;
    v98 = swift_allocObject(&unk_100603FE8, 32, 7);
    *(_QWORD *)(v98 + 16) = sub_100379A58;
    *(_QWORD *)(v98 + 24) = v90;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v98;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_100604000;
    v99 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(v93);
    v116 = v61;
    v100 = v114;
    sub_10002B764(v123, v126, v122, v114, v92, v96, v89);
    v101 = v115;
    sub_10002B7A0(v115, v124, v119);
    swift_retain();
    objc_msgSend(v127, "performWithoutAnimation:", v99, swift_release().n128_f64[0]);
    _Block_release(v99);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v98, "", 119, 244, 40, 1);
    swift_bridgeObjectRelease(v120);
    swift_release();
    swift_release();
    sub_10002B328(v123, v126, v122, v100, v121, v96, v89);
    sub_10002B318(v101, v124, v119);

    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      sub_100377268();
      sub_100377668();
      sub_1000073A0((uint64_t)v125, &qword_1006582E0);
      v108(v118, v113);
      return;
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_26:
  __break(1u);
}

void sub_100376D24()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView])
  {
    sub_100005ED8(0, (unint64_t *)&unk_10064AA80, UIListContentView_ptr);
    static UIListContentConfiguration.subtitleCell()();
    v6 = (void *)UIListContentView.init(configuration:)(v4);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = objc_msgSend(v1, "contentView");
    objc_msgSend(v7, "addSubview:", v6);

    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeContainerView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

    v10 = *(void **)&v1[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView];
    *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView] = v6;
    v11 = v6;

    v12 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = v8;
    v13 = v8;

    v14 = (void *)objc_opt_self(NSLayoutConstraint);
    v15 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100525680;
    v17 = objc_msgSend(v11, "topAnchor");
    v18 = objc_msgSend(v1, "contentView");
    v19 = objc_msgSend(v18, "topAnchor");

    v20 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
    *(_QWORD *)(v16 + 32) = v20;
    v21 = objc_msgSend(v11, "leadingAnchor");
    v22 = objc_msgSend(v1, "contentView");
    v23 = objc_msgSend(v22, "leadingAnchor");

    v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v16 + 40) = v24;
    v25 = objc_msgSend(v11, "bottomAnchor");
    v26 = objc_msgSend(v1, "contentView");
    v27 = objc_msgSend(v26, "bottomAnchor");

    v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
    *(_QWORD *)(v16 + 48) = v28;
    v29 = objc_msgSend(v11, "trailingAnchor");
    v30 = objc_msgSend(v1, "contentView");
    v31 = objc_msgSend(v30, "trailingAnchor");

    v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
    *(_QWORD *)(v16 + 56) = v32;
    v33 = objc_msgSend(v11, "heightAnchor");
    v34 = objc_msgSend(v33, "constraintGreaterThanOrEqualToConstant:", 56.0);

    *(_QWORD *)(v16 + 64) = v34;
    v39 = v16;
    specialized Array._endMutation()(v35);
    v36 = v39;
    sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  }
}

id sub_100377164()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___placeholderImageForBadge;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___placeholderImageForBadge);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___placeholderImageForBadge);
  }
  else
  {
    v4 = v0;
    sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    if (qword_10063D6F8 != -1)
      swift_once(&qword_10063D6F8, sub_10037879C);
    v6 = (void *)static UIImage.image(color:size:)(v5, *(double *)&xmmword_100658158, *((double *)&xmmword_100658158 + 1));

    v7 = objc_msgSend(v6, "imageWithRenderingMode:", 1);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_100377268()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  void *v13;
  Class v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_28;
  }
  v2 = v0;
  v3 = objc_msgSend(v1, "imageLayoutGuide");
  if (!v3)
    return;
  v4 = v3;
  v5 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeViewConstraints;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeViewConstraints);
  if (!v6)
  {
LABEL_16:
    v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v17 = swift_allocObject(v16, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100520050;
    v18 = objc_msgSend(v4, "topAnchor");
    v19 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView;
    v20 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView);
    if (v20)
    {
      v21 = objc_msgSend(v20, "topAnchor");
      v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);

      *(_QWORD *)(v17 + 32) = v22;
      v23 = objc_msgSend(v4, "leadingAnchor");
      v24 = *(void **)(v2 + v19);
      if (v24)
      {
        v25 = objc_msgSend(v24, "leadingAnchor");
        v26 = objc_msgSend(v23, "constraintEqualToAnchor:", v25);

        *(_QWORD *)(v17 + 40) = v26;
        v27 = objc_msgSend(v4, "bottomAnchor");
        v28 = *(void **)(v2 + v19);
        if (v28)
        {
          v29 = objc_msgSend(v28, "bottomAnchor");
          v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);

          *(_QWORD *)(v17 + 48) = v30;
          v31 = objc_msgSend(v4, "trailingAnchor");
          v32 = *(void **)(v2 + v19);
          if (v32)
          {
            v33 = objc_msgSend(v32, "trailingAnchor");
            v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);

            *(_QWORD *)(v17 + 56) = v34;
            specialized Array._endMutation()(v35);
            v36 = (void *)objc_opt_self(NSLayoutConstraint);
            sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v36, "activateConstraints:", isa);

            v38 = *(_QWORD *)(v2 + v5);
            *(_QWORD *)(v2 + v5) = v17;
            swift_bridgeObjectRelease(v38);
            return;
          }
          goto LABEL_31;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        return;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v7 = v6 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v6 >> 62)
    goto LABEL_22;
  v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeViewConstraints), 2);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v39))
  {
    v40 = v5;
    v9 = 4;
    while (1)
    {
      v10 = (v6 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6)
          : *(id *)(v6 + 8 * v9);
      v11 = v10;
      v5 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v12 = objc_msgSend(v10, "isActive");

      if (!v12)
      {
        swift_bridgeObjectRelease(v6);
        v13 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_100005ED8(0, (unint64_t *)&qword_10064BB60, NSLayoutConstraint_ptr);
        v14 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v13, "deactivateConstraints:", v14, swift_bridgeObjectRelease(v6).n128_f64[0]);

        v5 = v40;
        v15 = *(_QWORD *)(v2 + v40);
        *(_QWORD *)(v2 + v40) = 0;
        swift_bridgeObjectRelease(v15);
        goto LABEL_16;
      }
      ++v9;
      if (v5 == v8)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    if (v6 >= 0)
      v39 = v7;
    else
      v39 = v6;
    swift_bridgeObjectRetain_n(v6, 2);
  }
LABEL_13:

  swift_bridgeObjectRelease_n(v6, 2);
}

void sub_100377668()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView];
  if (v1)
  {
    v2 = objc_msgSend(v1, "textLayoutGuide");
    if (v2)
    {
      v10 = v2;
      v3 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_separatorConstraint;
      v4 = *(void **)&v0[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_separatorConstraint];
      if (v4 && (objc_msgSend(v4, "isActive") & 1) != 0)
      {
        v5 = v10;
      }
      else
      {
        v6 = objc_msgSend(v0, "separatorLayoutGuide");
        v7 = objc_msgSend(v6, "leadingAnchor");

        v8 = objc_msgSend(v10, "leadingAnchor");
        v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

        objc_msgSend(v9, "setActive:", 1);
        v5 = *(void **)&v0[v3];
        *(_QWORD *)&v0[v3] = v9;
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_100377840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(_QWORD *, _QWORD);
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];

  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - v7;
  static UIButton.Configuration.plain()(v9);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v10);

  UIButton.Configuration.image.setter(v11);
  v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 3);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v12);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v14 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(aBlock);
  UIBackgroundConfiguration.backgroundColor.setter(v13);
  v14(aBlock, 0);
  sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v15 = (void *)UIButton.init(configuration:primaryAction:)(v5, 0);
  objc_msgSend(v15, "setShowsMenuAsPrimaryAction:", 1);
  v16 = swift_allocObject(&unk_100603F48, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  aBlock[4] = sub_100379A4C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100081A10;
  aBlock[3] = &unk_100603F88;
  v17 = _Block_copy(aBlock);
  objc_msgSend(v15, "_setMenuProvider:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  objc_msgSend(v15, "setIsAccessibilityElement:", 0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v15;
}

void *sub_100377AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  v5 = Strong;
  if (Strong)
  {
    v6 = *(uint64_t (**)(void))&Strong[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider];
    if (v6)
    {
      v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider + 8];
      sub_100053DE4(*(_QWORD *)&Strong[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider], v7);

      v5 = (void *)v6();
      sub_1000381B8((uint64_t)v6, v7);
    }
    else
    {

      return 0;
    }
  }
  return v5;
}

void sub_100377BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE v53[24];

  v1 = v0;
  v2 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v2);
  v4 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_10002A750((uint64_t *)&unk_10065A230);
  v6 = swift_allocObject(v5, 96, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1005275D0;
  v7 = v1 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel, v53, 0, 0);
  v8 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  v10 = v9(v7, 1, v8);
  v12 = 0;
  v13 = 0;
  if (!v10)
  {
    v12 = *(_QWORD *)(v7 + 8);
    v11 = swift_bridgeObjectRetain(*(_QWORD *)(v7 + 16));
  }
  *(_QWORD *)(v6 + 32) = v12;
  *(_QWORD *)(v6 + 40) = v13;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v9)(v7, 1, v8, v11)
    || (sub_10002B1E8(v7 + *(int *)(v8 + 28), (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData), v14 = sub_100350498((uint64_t)_swiftEmptyArrayStorage), v15 = (void *)TTRTemplatePublicLinkData.attributedStatusText(baseAttributes:forAccessibility:)((Swift::OpaquePointer)v14, 1), swift_bridgeObjectRelease(v14), sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData), !v15))
  {
    *(_QWORD *)(v6 + 48) = 0;
    *(_QWORD *)(v6 + 56) = 0;
  }
  else
  {
    v16 = objc_msgSend(v15, "string");

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    *(_QWORD *)(v6 + 48) = v17;
    *(_QWORD *)(v6 + 56) = v19;
  }
  v20 = OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView;
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView);
  if (!v21)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  v22 = objc_msgSend(*(id *)(v21 + OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_badgeView), "accessibilityLabel");
  if (v22)
  {
    v23 = v22;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  *(_QWORD *)(v6 + 64) = v24;
  *(_QWORD *)(v6 + 72) = v26;
  v27 = *(_QWORD *)(v1 + v20);
  if (!v27)
    goto LABEL_29;
  v28 = objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_badgeView), "accessibilityValue");
  if (v28)
  {
    v29 = v28;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v32 = v31;

  }
  else
  {
    v30 = 0;
    v32 = 0;
  }
  *(_QWORD *)(v6 + 80) = v30;
  *(_QWORD *)(v6 + 88) = v32;
  v52 = (_QWORD *)v6;
  v33 = sub_10002A750((uint64_t *)&unk_1006582D0);
  v34 = sub_100023FEC(&qword_10065A240, (uint64_t *)&unk_1006582D0, (uint64_t)&protocol conformance descriptor for [A]);
  v35 = Sequence.removingNils<A>()(v33, &type metadata for String, v34);
  swift_bridgeObjectRelease(v6);
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = (_QWORD *)(v35 + 40);
    v38 = _swiftEmptyArrayStorage;
    do
    {
      v43 = *(v37 - 1);
      v42 = *v37;
      v44 = HIBYTE(*v37) & 0xFLL;
      if ((*v37 & 0x2000000000000000) == 0)
        v44 = v43 & 0xFFFFFFFFFFFFLL;
      if (v44)
      {
        swift_bridgeObjectRetain(*v37);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
        v52 = v38;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1003D7FFC(0, v38[2] + 1, 1);
          v38 = v52;
        }
        v40 = v38[2];
        v39 = v38[3];
        if (v40 >= v39 >> 1)
        {
          sub_1003D7FFC(v39 > 1, v40 + 1, 1);
          v38 = v52;
        }
        v38[2] = v40 + 1;
        v41 = &v38[2 * v40];
        v41[4] = v43;
        v41[5] = v42;
      }
      v37 += 2;
      --v36;
    }
    while (v36);
  }
  else
  {
    v38 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v35);
  v52 = v38;
  v47 = (uint64_t *)TTRAccesibility.General.Label.Separator.unsafeMutableAddressor(v46);
  v48 = *v47;
  v49 = v47[1];
  swift_bridgeObjectRetain(v49);
  v50 = sub_10002A750(&qword_1006466D0);
  v51 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  BidirectionalCollection<>.joined(separator:)(v48, v49, v50, v51);
  swift_release();
  swift_bridgeObjectRelease(v49);
}

unint64_t sub_100378010(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];
  objc_super v21;
  unint64_t v22;

  v3 = v2;
  v21.receiver = v2;
  v21.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v21, "accessibilityCustomActions");
  if (v4)
  {
    v5 = v4;
    v6 = sub_100005ED8(0, (unint64_t *)&unk_1006466C0, UIAccessibilityCustomAction_ptr);
    v7 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  v22 = (unint64_t)v7;
  v8 = *(_QWORD *)(TTRAccesibility.Templates.Details.unsafeMutableAddressor() + 8);
  sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
  swift_bridgeObjectRetain(v8);
  v9 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)(0x7269632E6F666E69, 0xEB00000000656C63);
  v10 = swift_allocObject(&unk_100603F48, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v3);
  v11 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  aBlock[4] = sub_100379A44;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100341638;
  aBlock[3] = &unk_100603F60;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend(v11, "initWithName:image:actionHandler:", v12, v9, v13);

  _Block_release(v13);
  swift_release();
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
  specialized Array._endMutation()(v18);
  return v22;
}

id sub_1003782D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return 0;
  v4 = (void *)Strong;
  v5 = sub_100378B24(&OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___infoButton, (uint64_t (*)(uint64_t))sub_100377840);

  objc_msgSend(v5, "bounds");
  CGRect.bottomLeftPoint(isFlipped:)(1);
  v6 = objc_msgSend(v5, "ttriAccessibilityShowContextMenuAtPoint:");

  return v6;
}

id sub_10037837C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel];
  v13 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeViewConstraints] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_separatorConstraint] = 0;
  v14 = &v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___infoButton] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___placeholderImageForBadge] = 0;
  v16.receiver = v6;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10037849C(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_viewModel];
  v6 = type metadata accessor for TTRTemplatesListViewModel.Template(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_listContentView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeContainerView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_badgeViewConstraints] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_separatorConstraint] = 0;
  v7 = &v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___infoButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell____lazy_storage___placeholderImageForBadge] = 0;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

uint64_t sub_100378648()
{
  return type metadata accessor for TTRITemplatesListCell(0);
}

uint64_t type metadata accessor for TTRITemplatesListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1006581F0;
  if (!qword_1006581F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRITemplatesListCell);
  return result;
}

void sub_10037868C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  sub_100378714(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    v4[3] = "\b";
    v4[4] = "\b";
    v4[5] = &unk_100530060;
    v4[6] = "\b";
    v4[7] = "\b";
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_100378714(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100658200)
  {
    v2 = type metadata accessor for TTRTemplatesListViewModel.Template(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100658200);
  }
}

NSString sub_100378768()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100658150 = (uint64_t)result;
  return result;
}

int64x2_t sub_10037879C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4040000000000000uLL);
  xmmword_100658158 = (__int128)result;
  return result;
}

void sub_1003787B4(void *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v4 = swift_allocObject(&unk_100604038, 115, 7);
  *(_QWORD *)(v4 + 16) = a1;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 72) = v5;
  *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 99) = *(_OWORD *)(a2 + 75);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 40) = v6;
  v7 = swift_allocObject(&unk_100604060, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100379AC4;
  *(_QWORD *)(v7 + 24) = v4;
  v10[4] = sub_1000381EC;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10001B258;
  v10[3] = &unk_100604078;
  v8 = _Block_copy(v10);
  v9 = a1;
  sub_10021D18C(a2);
  swift_retain();
  objc_msgSend(v9, "performBatchUpdates:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v7, "", 119, 245, 33, 1);
  swift_release();
  swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
}

void sub_100378914(char *a1, __int128 *a2)
{
  void *v4;
  __int128 v5;
  __int128 v6;
  char v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  Class isa;
  id v22;
  __int128 v23;
  _OWORD v24[3];
  _OWORD v25[2];
  _BYTE v26[56];

  v4 = *(void **)&a1[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_badgeView];
  v5 = a2[3];
  v24[1] = a2[2];
  v24[2] = v5;
  v25[0] = a2[4];
  *(_OWORD *)((char *)v25 + 10) = *(__int128 *)((char *)a2 + 74);
  v6 = a2[1];
  v23 = *a2;
  v24[0] = v6;
  TTRListBadgeView.configure(with:customSmartListShape:)(&v23, sub_100378AEC, 0);
  v7 = *((_BYTE *)a2 + 90);
  v8 = objc_msgSend(v4, "layer");
  v9 = v8;
  if ((v7 & 1) != 0)
  {
    v11 = sub_100378B24(&OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView____lazy_storage___badgeOvalClipMask, (uint64_t (*)(uint64_t))sub_1003797F8);
    objc_msgSend(v9, "setMask:", v11);

    sub_100378B80();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = sub_1000AE578((uint64_t)v24, (uint64_t)v26);
    v19 = (void *)TTRListColors.Color.nativeColor.getter(v18);
    v20 = objc_msgSend(a1, "traitCollection");
    isa = UITraitCollection.modifiedToOnlyDarkenColorsForIncreaseContrast()().super.isa;

    v22 = objc_msgSend(v19, "resolvedColorWithTraitCollection:", isa);
    objc_msgSend(v15, "setBackgroundColor:", v22);

    objc_msgSend(v13, "setHidden:", 0);
  }
  else
  {
    objc_msgSend(v8, "setMask:", 0);

    v10 = *(void **)&a1[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView];
    if (v10)
      objc_msgSend(v10, "setHidden:", 1);
  }
}

__n128 sub_100378AEC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v2 = TTRListBadgeView.Shape.customSmartListInListRowView.unsafeMutableAddressor();
  v3 = *(_QWORD *)(v2 + 32);
  v4 = *(_BYTE *)(v2 + 40);
  result = *(__n128 *)v2;
  v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  return result;
}

id sub_100378B24(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void sub_100378B80()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  CGPoint v11;
  CGFloat v12;
  CGFloat v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  Class isa;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  CGRect v37;

  v1 = &v0[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView];
  v2 = *(void **)&v0[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView];
  v3 = *(void **)&v0[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView
                   + 8];
  v4 = *(void **)&v0[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView
                   + 16];
  if (v2)
  {
LABEL_6:
    sub_100379AE0(v2, v3, v4);
    return;
  }
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  if (v6)
  {
    v34 = v0;
    v35 = v3;
    v7 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 8.0);
    v8 = objc_msgSend(v6, "imageWithConfiguration:", v7);

    v33 = v8;
    v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);
    objc_msgSend(v9, "setContentMode:", 4);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v9, "setTintColor:", v10);

    if (qword_10063D700 != -1)
      swift_once(&qword_10063D700, sub_10037919C);
    v11 = (CGPoint)xmmword_100658168;
    v12 = *(double *)&qword_100658178;
    v13 = unk_100658180;
    v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v15 = objc_msgSend(v14, "layer");
    v37.origin = v11;
    v37.size.width = v12;
    v37.size.height = v13;
    objc_msgSend(v15, "setCornerRadius:", CGRectGetWidth(v37) * 0.5);

    v16 = objc_msgSend(v14, "layer");
    objc_msgSend(v16, "setCornerCurve:", kCACornerCurveCircular);

    v17 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v18 = swift_allocObject(v17, 48, 7);
    *(_OWORD *)(v18 + 16) = xmmword_10051FF90;
    *(_QWORD *)(v18 + 32) = v14;
    *(_QWORD *)(v18 + 40) = v9;
    v36 = v18;
    specialized Array._endMutation()(v18);
    v19 = objc_allocWithZone((Class)type metadata accessor for UnanimatedContainerBoxView());
    sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
    v20 = v14;
    v21 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v19, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

    objc_msgSend(v23, "setAlignment:forView:inAxis:", 3, v21, 0);
    objc_msgSend(v23, "setAlignment:forView:inAxis:", 3, v21, 1);
    v24 = *(void **)v1;
    v25 = (void *)*((_QWORD *)v1 + 1);
    v26 = (void *)*((_QWORD *)v1 + 2);
    *(_QWORD *)v1 = v23;
    *((_QWORD *)v1 + 1) = v20;
    *((_QWORD *)v1 + 2) = v21;
    v27 = v20;
    v28 = v21;
    v29 = v23;
    v30 = v27;
    v31 = v28;
    v32 = v29;
    sub_100254288(v24, v25, v26);
    objc_msgSend(v34, "addArrangedSubview:", v32);

    v3 = v35;
    goto LABEL_6;
  }
  __break(1u);
}

id sub_100378F54(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  uint64_t v26;
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView____lazy_storage___badgeOvalClipMask] = 0;
  v13 = type metadata accessor for TTRListBadgeView(0);
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
  v15 = v6;
  v16 = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_badgeView] = v16;
  v17 = v16;

  v27.receiver = v15;
  v27.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  v19 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100521140;
  *(_QWORD *)(v20 + 32) = v17;
  v26 = v20;
  specialized Array._endMutation()(v20);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v21 = v18;
  v22 = v17;
  v23 = v21;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  objc_msgSend(v23, "setDelegate:", v23);
  return v23;
}

__n128 sub_10037919C()
{
  __n128 result;

  __asm
  {
    FMOV            V0.2D, #18.0
    FMOV            V1.2D, #15.0
  }
  xmmword_100658168 = (__int128)result;
  *(_OWORD *)&qword_100658178 = _Q1;
  return result;
}

void sub_1003791E0()
{
  uint64_t v0;

  sub_100254288(*(void **)(v0 + OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView), *(void **)(v0+ OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView+ 8), *(void **)(v0+ OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView+ 16));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView____lazy_storage___badgeOvalClipMask));
}

uint64_t type metadata accessor for BadgeContainerView()
{
  return objc_opt_self(_TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView);
}

void sub_100379338()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_100603ED0, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100603EF8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1003797A8;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_10001B278;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10001B258;
  v7[3] = &unk_100603F10;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 119, 349, 40, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

id sub_1003795F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UnanimatedContainerBoxView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UnanimatedContainerBoxView()
{
  return objc_opt_self(_TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4226UnanimatedContainerBoxView);
}

_QWORD *initializeBufferWithCopyOfBuffer for BadgeContainerView.SharingIconView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for BadgeContainerView.SharingIconView(id *a1)
{

}

uint64_t assignWithCopy for BadgeContainerView.SharingIconView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for BadgeContainerView.SharingIconView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for BadgeContainerView.SharingIconView()
{
  return &type metadata for BadgeContainerView.SharingIconView;
}

uint64_t sub_100379784()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003797A8()
{
  uint64_t v0;
  objc_super v2;

  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)type metadata accessor for UnanimatedContainerBoxView();
  return objc_msgSendSuper2(&v2, "layoutSubviews");
}

uint64_t sub_1003797E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003797F8(void *a1)
{
  __int128 v2;
  void *v3;
  id v4;
  double x;
  double y;
  double width;
  double height;
  id v9;
  id v10;
  id v11;
  id v12;
  CGRect v14;

  if (qword_10063D6F8 != -1)
    swift_once(&qword_10063D6F8, sub_10037879C);
  v2 = xmmword_100658158;
  v3 = (void *)objc_opt_self(UIBezierPath);
  v4 = objc_msgSend(v3, "bezierPathWithRect:", 0.0, 0.0, v2);
  if (qword_10063D700 != -1)
    swift_once(&qword_10063D700, sub_10037919C);
  v14 = CGRectInset(*(CGRect *)ymmword_100658168, -1.0, -1.0);
  x = v14.origin.x;
  y = v14.origin.y;
  width = v14.size.width;
  height = v14.size.height;
  v9 = objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
  v10 = objc_msgSend(v3, "bezierPathWithOvalInRect:", CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)(v9, *(double *)&xmmword_100658158, x, y, width, height));
  objc_msgSend(v4, "appendPath:", v10);

  v11 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v12 = objc_msgSend(v4, "CGPath");
  objc_msgSend(v11, "setPath:", v12);

  objc_msgSend(v11, "setFillRule:", kCAFillRuleEvenOdd);
  return v11;
}

double sub_1003799C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  double result;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_867866E3C408EC8E125699C6A4109C4218BadgeContainerView_sharingIconView);
  if (v2)
    v3 = v2 == a1;
  else
    v3 = 0;
  if (v3)
  {
    if (qword_10063D700 != -1)
      swift_once(&qword_10063D700, sub_10037919C);
    return *(double *)ymmword_100658168;
  }
  return result;
}

uint64_t sub_100379A20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_100379A44(uint64_t a1)
{
  uint64_t v1;

  return sub_1003782D4(a1, v1);
}

void *sub_100379A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100377AA8(a1, a2, v2);
}

void sub_100379A58()
{
  uint64_t v0;

  sub_1003787B4(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_100379A64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100379A78()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_10002B328(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_10002B318(*(void **)(v0 + 96), *(id *)(v0 + 104), *(_BYTE *)(v0 + 112));
  return swift_deallocObject(v0, 115, 7);
}

void sub_100379AC4()
{
  uint64_t v0;

  sub_100378914(*(char **)(v0 + 16), (__int128 *)(v0 + 24));
}

uint64_t sub_100379AD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100379AE0(id result, void *a2, void *a3)
{
  id v4;
  id v5;

  if (result)
  {
    v4 = result;
    v5 = a2;
    return a3;
  }
  return result;
}

unint64_t sub_100379B1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006582F8;
  if (!qword_1006582F8)
  {
    v1 = type metadata accessor for TTRTemplatesListViewModel.Template(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRTemplatesListViewModel.Template, v1);
    atomic_store(result, (unint64_t *)&qword_1006582F8);
  }
  return result;
}

uint64_t sub_100379B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_1006582E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TTRIDebugMenuRouter()
{
  return objc_opt_self(_TtC9Reminders19TTRIDebugMenuRouter);
}

uint64_t sub_100379BF0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  char *v16;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (id *)((char *)&v17.receiver - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView;
  v9 = objc_allocWithZone((Class)WKWebView);
  v10 = v2;
  *(_QWORD *)&v2[v8] = objc_msgSend(v9, "init");
  v11 = OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_finishedNavigationPublisher;
  v12 = sub_10002A750(&qword_100658448);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)&v10[v11] = PassthroughSubject.init()();

  v13 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v14 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v14 & 1) != 0)
  {
    v17.receiver = v10;
    v17.super_class = ObjectType;
    v16 = (char *)objc_msgSendSuper2(&v17, "init");
    objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView], "setNavigationDelegate:", v16);
    return (uint64_t)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100379D8C(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  objc_super v5;
  char v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = 1;
  PassthroughSubject.send(completion:)(&v6);
  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t type metadata accessor for TTRWebViewLoadingStateHelper()
{
  return objc_opt_self(_TtC9Reminders28TTRWebViewLoadingStateHelper);
}

uint64_t sub_100379EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t result;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  void *v45;
  void *v46;
  void *v47;
  NSURL *v48;
  void *v49;
  void *v50;
  id v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSURL *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  id v92;
  uint64_t ObjectType;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112[2];

  v94 = a1;
  ObjectType = swift_getObjectType(v2, a2);
  v3 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v3);
  v101 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10002A750(&qword_100658450);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_100658458);
  v104 = *(_QWORD *)(v6 - 8);
  v105 = v6;
  __chkstk_darwin(v6);
  v103 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_10002A750(&qword_100658460);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100658468);
  v110 = *(_QWORD *)(v9 - 8);
  v111 = v9;
  __chkstk_darwin(v9);
  v108 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v95 = *(_QWORD *)(v11 - 8);
  v96 = v11;
  v12 = __chkstk_darwin(v11);
  v90 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v89 = (char *)&v88 - v14;
  v15 = sub_10002A750((uint64_t *)&unk_100640EE0);
  v16 = __chkstk_darwin(v15);
  v88 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v91 = (uint64_t)&v88 - v18;
  v19 = type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10002A750(&qword_100658478);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10002A750((uint64_t *)&unk_100658480);
  v97 = *(_QWORD *)(v26 - 8);
  v98 = v26;
  __chkstk_darwin(v26);
  v28 = (char *)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DispatchPredicate(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (uint64_t *)((char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  *v32 = static OS_dispatch_queue.main.getter(v33);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v29);
  v34 = _dispatchPreconditionTest(_:)(v32);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v34 & 1) != 0)
  {
    v112[0] = v92;
    v36 = (char *)v92;
    Just.init(_:)(v112, ObjectType);
    v37 = sub_10002A750((uint64_t *)&unk_100649C60);
    Just.setFailureType<A>(to:)(v37, v22, v37, &protocol self-conformance witness table for Error);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    sub_10037A964(v94, (uint64_t)v21);
    v38 = v28;
    if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
    {
      v39 = &v21[*(int *)(sub_10002A750(&qword_100658490) + 48)];
      v41 = v95;
      v40 = v96;
      v42 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
      v43 = v89;
      v42(v89, v21, v96);
      v44 = v90;
      v42(v90, v39, v40);
      v45 = *(void **)&v36[OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView];
      URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView);
      v47 = v46;
      URL._bridgeToObjectiveC()(v48);
      v50 = v49;
      v51 = objc_msgSend(v45, "loadFileURL:allowingReadAccessToURL:", v47, v49);

      v52 = *(void (**)(char *, uint64_t))(v41 + 8);
      v52(v44, v40);
      v52(v43, v40);
    }
    else
    {
      v53 = *((_QWORD *)v21 + 1);
      v54 = (uint64_t)&v21[*(int *)(sub_10002A750(&qword_1006584E0) + 48)];
      v55 = v91;
      sub_10005FE98(v54, v91);
      v56 = *(void **)&v36[OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView];
      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v53);
      v58 = v88;
      sub_1001D705C(v55, v88);
      v60 = v95;
      v59 = v96;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v58, 1, v96) == 1)
      {
        v62 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v61);
        v62 = v63;
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
      }
      v51 = objc_msgSend(v56, "loadHTMLString:baseURL:", v57, v62);

      sub_1000073A0(v55, (uint64_t *)&unk_100640EE0);
    }
    v112[0] = *(id *)&v36[OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_finishedNavigationPublisher];
    v64 = swift_allocObject(&unk_1006040C0, 24, 7);
    *(_QWORD *)(v64 + 16) = v51;
    swift_retain();
    v65 = v51;
    v66 = sub_10002A750(&qword_100658448);
    v67 = sub_100023FEC((unint64_t *)&unk_100658498, &qword_100658448, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    v68 = v99;
    Publisher.tryFirst(where:)(sub_10037A9CC, v64, v66, v67);
    swift_release();
    swift_release();
    v112[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v69 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v70 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v101, 1, 1, v69);
    v71 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
    v72 = sub_100023FEC((unint64_t *)&unk_1006584A8, &qword_100658450, (uint64_t)&protocol conformance descriptor for Publishers.TryFirstWhere<A>);
    v73 = sub_1000A2B9C();
    v75 = v102;
    v74 = v103;
    Publisher.receive<A>(on:options:)(v112, v70, v102, v71, v72, v73);
    sub_1000073A0(v70, &qword_1006547E0);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v68, v75);
    v76 = sub_100023FEC(&qword_1006584B8, &qword_100658458, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v77 = sub_100023FEC(&qword_1006584C0, (uint64_t *)&unk_100658480, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
    v78 = v105;
    v79 = v106;
    v80 = v98;
    Publisher.combineLatest<A>(_:)(v38, v105, v98, v76, v77);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v74, v78);
    v81 = sub_100005ED8(0, &qword_1006584C8, WKWebView_ptr);
    v82 = sub_100023FEC(&qword_1006584D0, &qword_100658460, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
    v84 = v108;
    v83 = v109;
    Publisher.map<A>(_:)(sub_10037A810, 0, v109, v81, v82);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v79, v83);
    v85 = sub_100023FEC(&qword_1006584D8, (uint64_t *)&unk_100658468, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v86 = v111;
    v87 = Publisher.eraseToAnyPublisher()(v111, v85);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v84, v86);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v80);
    return v87;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037A744(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  char v8;

  if (a2)
  {
    v2 = a2;
    v4 = *(void **)a1;
    v3 = *(_QWORD *)(a1 + 8);
    sub_100005ED8(0, &qword_1006584E8, WKNavigation_ptr);
    v5 = v4;
    swift_errorRetain(v3);
    v6 = v2;
    LOBYTE(v2) = static NSObject.== infix(_:_:)(v5, v6);

    if ((v2 & 1) != 0)
    {
      if (v3)
      {
        swift_willThrow(v7);

      }
      else
      {

        v8 = 1;
      }
    }
    else
    {
      swift_errorRelease(v3);

      v8 = 0;
    }
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

id sub_10037A810@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC9Reminders28TTRWebViewLoadingStateHelper_webView);
  *a2 = v2;
  return v2;
}

uint64_t type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource(uint64_t a1)
{
  uint64_t result;

  result = qword_100658560;
  if (!qword_100658560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRWebViewLoadingStateHelper.HTMLSource);
  return result;
}

uint64_t sub_10037A964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037A9A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037A9CC(uint64_t a1)
{
  uint64_t v1;

  return sub_10037A744(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t *sub_10037A9E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = sub_10002A750(&qword_100658490);
      v8((uint64_t *)((char *)a1 + *(int *)(v9 + 48)), (uint64_t *)((char *)a2 + *(int *)(v9 + 48)), v7);
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      swift_bridgeObjectRetain(v14);
      v15 = *(int *)(sub_10002A750(&qword_1006584E0) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10002A750((uint64_t *)&unk_100640EE0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_10037AB60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v9(a1, v3);
    v4 = a1 + *(int *)(sub_10002A750(&qword_100658490) + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v6 = a1 + *(int *)(sub_10002A750(&qword_1006584E0) + 48);
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return result;
}

_QWORD *sub_10037AC44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = sub_10002A750(&qword_100658490);
    v7((_QWORD *)((char *)a1 + *(int *)(v8 + 48)), (_QWORD *)((char *)a2 + *(int *)(v8 + 48)), v6);
    v9 = a1;
    v10 = a3;
    v11 = 1;
  }
  else
  {
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    swift_bridgeObjectRetain(v12);
    v13 = *(int *)(sub_10002A750(&qword_1006584E0) + 48);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10002A750((uint64_t *)&unk_100640EE0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v9 = a1;
    v10 = a3;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

_QWORD *sub_10037AD90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_10037AEF4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = sub_10002A750(&qword_100658490);
      v7((_QWORD *)((char *)a1 + *(int *)(v8 + 48)), (_QWORD *)((char *)a2 + *(int *)(v8 + 48)), v6);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      v12 = a2[1];
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v13 = *(int *)(sub_10002A750(&qword_1006584E0) + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for URL(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10002A750((uint64_t *)&unk_100640EE0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_10037AEF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10037AF30(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    v7 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = sub_10002A750(&qword_100658490);
    v7((_OWORD *)((char *)a1 + *(int *)(v8 + 48)), (_OWORD *)((char *)a2 + *(int *)(v8 + 48)), v6);
    v9 = a1;
    v10 = a3;
    v11 = 1;
  }
  else
  {
    *a1 = *a2;
    v12 = *(int *)(sub_10002A750(&qword_1006584E0) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_10002A750((uint64_t *)&unk_100640EE0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v9 = a1;
    v10 = a3;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

_OWORD *sub_10037B078(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_10037AEF4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      v7 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = sub_10002A750(&qword_100658490);
      v7((_OWORD *)((char *)a1 + *(int *)(v8 + 48)), (_OWORD *)((char *)a2 + *(int *)(v8 + 48)), v6);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      v12 = *(int *)(sub_10002A750(&qword_1006584E0) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_10002A750((uint64_t *)&unk_100640EE0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void sub_10037B1D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _BYTE v7[32];
  _QWORD v8[2];

  sub_1001BA92C(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v7, &unk_100530168, *(_QWORD *)(v2 - 8) + 64);
    v8[0] = v7;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, *(_QWORD *)(v4 - 8) + 64, *(_QWORD *)(v4 - 8) + 64);
      v8[1] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v8);
    }
  }
}

ValueMetadata *type metadata accessor for TTRIBoardColumnScrollViewInsets()
{
  return &type metadata for TTRIBoardColumnScrollViewInsets;
}

BOOL sub_10037B284(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_10037B2B4(uint64_t a1, uint64_t a2)
{
  return sub_10037B718(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
}

uint64_t sub_10037B2D0(uint64_t a1, uint64_t a2)
{
  return sub_10037B718(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID, (void (*)(_QWORD *))&TTRRemindersListViewModel.SectionID.hash(into:), (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:));
}

uint64_t sub_10037B2EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  char v6;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  id v17;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
      v9 = -1 << *(_BYTE *)(a2 + 32);
      v10 = v8 & ~v9;
      v11 = a2 + 56;
      if (((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v10);
        v13 = static NSObject.== infix(_:_:)(v12, a1);

        if ((v13 & 1) != 0)
        {
          v14 = 1;
          return v14 & 1;
        }
        v15 = ~v9;
        v16 = (v10 + 1) & v15;
        if (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
        {
          do
          {
            v17 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v16);
            v14 = static NSObject.== infix(_:_:)(v17, a1);

            if ((v14 & 1) != 0)
              break;
            v16 = (v16 + 1) & v15;
          }
          while (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
          return v14 & 1;
        }
      }
    }
    v14 = 0;
    return v14 & 1;
  }
  if (a2 < 0)
    v4 = a2;
  else
    v4 = a2 & 0xFFFFFFFFFFFFFF8;
  v5 = a1;
  v6 = __CocoaSet.contains(_:)(v5, v4);

  return v6 & 1;
}

uint64_t sub_10037B448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_1000175C8(&qword_100658998, (uint64_t (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SortingStyle), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_1000175C8((unint64_t *)&unk_100649FB0, (uint64_t (*)(uint64_t))&type metadata accessor for REMRemindersListDataView.SortingStyle, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SortingStyle);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

BOOL sub_10037B5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BOOL8 result;
  Swift::UInt v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[9];

  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v4 = a2;
    else
      v4 = a2 & 0xFFFFFFFFFFFFFF8;
    v5 = swift_retain(a1);
    v6 = __CocoaSet.contains(_:)(v5, v4);
    swift_release(a1);
    return v6 & 1;
  }
  else
  {
    if (!*(_QWORD *)(a2 + 16))
      return 0;
    Hasher.init(_seed:)(v17, *(_QWORD *)(a2 + 40));
    v8 = *(_QWORD *)(a1 + 16);
    Hasher._combine(_:)(v8);
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(a2 + 32);
    v11 = v9 & ~v10;
    v12 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      return 0;
    v13 = *(_QWORD *)(a2 + 48);
    if (*(_QWORD *)(*(_QWORD *)(v13 + 8 * v11) + 16) == v8)
      return 1;
    v14 = ~v10;
    v15 = (v11 + 1) & v14;
    if (((*(_QWORD *)(v12 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      do
      {
        v16 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v15) + 16);
        result = v16 == v8;
        if (v16 == v8)
          break;
        v15 = (v15 + 1) & v14;
      }
      while (((*(_QWORD *)(v12 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10037B6FC(uint64_t a1, uint64_t a2)
{
  return sub_10037B718(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
}

uint64_t sub_10037B718(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD *), uint64_t (*a5)(char *, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v22[9];

  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v22[-1] - v12;
  if (*(_QWORD *)(a2 + 16)
    && (Hasher.init(_seed:)(v22, *(_QWORD *)(a2 + 40)),
        a4(v22),
        v14 = Hasher._finalize()(),
        v15 = -1 << *(_BYTE *)(a2 + 32),
        v16 = v14 & ~v15,
        ((*(_QWORD *)(a2 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0))
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_10002B1E8(*(_QWORD *)(a2 + 48) + v18 * v16, (uint64_t)v13, a3);
      v19 = a5(v13, a1);
      sub_10001F544((uint64_t)v13, a3);
      if ((v19 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_10037B850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_1000175C8((unint64_t *)&qword_1006463A0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_1000175C8((unint64_t *)&qword_10063F648, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10037B9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10037BB08(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  _QWORD v16[9];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  Hasher.init(_seed:)(v16, *(_QWORD *)(a2 + 40));
  TTRSectionID.hash(into:)(v16, a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
  v9 = v8;
  LOBYTE(v8) = static TTRSectionID.__derived_enum_equals(_:_:)(v8, a1);

  if ((v8 & 1) != 0)
  {
    v10 = 1;
    return v10 & 1;
  }
  v11 = ~v5;
  v12 = (v6 + 1) & v11;
  if (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_9:
    v10 = 0;
    return v10 & 1;
  }
  do
  {
    v13 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v12);
    v14 = v13;
    v10 = static TTRSectionID.__derived_enum_equals(_:_:)(v13, a1);

    if ((v10 & 1) != 0)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return v10 & 1;
}

uint64_t sub_10037BC38(char a1, uint64_t a2)
{
  _QWORD v4[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v4, *(_QWORD *)(a2 + 40));
    __asm { BR              X10 }
  }
  return 0;
}

BOOL sub_10037BF58(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10037C044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  __n128 v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[9];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v26 - v12;
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_7;
  v14 = Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v14);
  TTRRemindersListViewModel.ItemID.hash(into:)(v29, v15);
  sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(a2 + 32);
  v18 = v16 & ~v17;
  v19 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v28 = a1;
    v20 = a2;
    v27 = ~v17;
    v21 = *(_QWORD *)(v5 + 72);
    do
    {
      v22 = sub_10002B1E8(*(_QWORD *)(v20 + 48) + v21 * v18, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v23 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v23);
      v24 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v13, v11);
      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((v24 & 1) != 0)
        break;
      v18 = (v18 + 1) & v27;
    }
    while (((*(_QWORD *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
  }
  else
  {
LABEL_7:
    v24 = 0;
  }
  return v24 & 1;
}

BOOL sub_10037C230(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == (_DWORD)v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == (_DWORD)v3;
    if (v12 == (_DWORD)v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10037C31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_1000175C8((unint64_t *)&qword_1006463B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10037C4A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34;

  v34 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v32 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v32 - v13;
  v15 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v1;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v32(v17, 1, 1, v5);
  swift_retain();
  v18 = TTRMutableTreeStorage.children(of:)(v17);
  swift_release();
  v19 = (uint64_t)v17;
  v20 = (_QWORD *)v18;
  sub_1000073A0(v19, (uint64_t *)&unk_100640EB0);
  if (*(_QWORD *)(v18 + 16))
  {
    sub_10002B1E8(v18 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v5);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v22 = (uint64_t)v33;
      swift_retain();
      v23 = sub_100393344((uint64_t)v20, v22);
      swift_bridgeObjectRelease(v20);
      swift_release();
      v20 = v23;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    v20 = _swiftEmptyArrayStorage;
  }
  v24 = v34;
  v25 = v20[2];
  v33 = v20;
  if (v25)
  {
    v26 = (uint64_t)v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = 1;
    while (1)
    {
      sub_10002B1E8(v26, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v9, v5) == 1)
        break;
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v29 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
      sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100649B50);
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v26 += v27;
      if (!--v25)
      {
        v24 = v34;
        goto LABEL_12;
      }
    }
    sub_10001F580((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v30 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 0, 1, v30);
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100649B50);
    v24 = v34;
    sub_10001F580((uint64_t)v12, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
LABEL_12:
  v32((char *)v24, v28, 1, v5);
  return swift_bridgeObjectRelease(v33);
}

uint64_t sub_10037C800(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(sub_10002A750(a2) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_10037C890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  uint64_t v16;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  ObjectType = swift_getObjectType(v5, a2);
  v16 = v5;
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v15[3] = swift_getObjectType(v8, v10);
  v15[4] = *(_QWORD *)(v9 + 8);
  v15[0] = v8;
  v11 = (_QWORD *)swift_allocObject(&unk_1006043E0, 40, 7);
  v11[2] = a2;
  v11[3] = v2;
  v11[4] = a1;
  v12 = *(_QWORD *)(v6 + 8);
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRetain(v8);
  swift_bridgeObjectRetain(a2);
  swift_retain();
  swift_retain();
  v13 = TTRTreeContentsQueryable<>.diff(with:contentEqualityChecker:)(v15, sub_10039B7A8, v11, ObjectType, v12, &protocol witness table for TTRRemindersListViewModel.Item);
  swift_release();
  swift_unknownObjectRelease(v16);
  sub_100027F10(v15);
  return v13;
}

uint64_t sub_10037C994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v26[2];

  v1 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v1);
  v26[1] = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v26 - v14;
  v16 = *(_QWORD *)(v0 + 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)v26 - v14, 1, 1, v6);
  swift_retain(v16);
  v17 = TTRMutableTreeStorage.descendants(of:)(v15);
  swift_release(v16);
  v18 = (uint64_t)v15;
  v19 = v17;
  sub_1000073A0(v18, (uint64_t *)&unk_100640EB0);
  v20 = swift_retain(v17);
  v21 = dispatch thunk of _AnySequenceBox._makeIterator()(v20);
  v22 = swift_release(v19);
  dispatch thunk of _AnyIteratorBoxBase.next()(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
  {
    v26[0] = v19;
    v23 = sub_10001F580((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter(v23);
    v24 = (char *)&loc_10037CB54 + 4 * byte_1005301E2[swift_getEnumCaseMultiPayload(v5, v3)];
    __asm { BR              X9 }
  }
  swift_release(v19);
  swift_release(v21);
  return 1;
}

uint64_t sub_10037CC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006585A0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006585A0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10037CD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  id v26;
  void *v27;
  void *v28;
  id v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint8_t *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id *v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  id v53;
  id v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  id *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;

  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v14);
  v61 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v60 = (id *)((char *)&v57 - v17);
  __chkstk_darwin(v18);
  v20 = (void **)((char *)&v57 - v19);
  v62 = a1;
  sub_10000735C(a1, a4, &qword_10064B6B0);
  v21 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  sub_10002B1E8(a2, a4 + *(int *)(v21 + 20), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v22 = *(int *)(v21 + 24);
  v23 = a2;
  *(_QWORD *)(a4 + v22) = a3;
  v24 = swift_retain();
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload)
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    if (qword_10063D708 != -1)
      swift_once(&qword_10063D708, sub_10037CC94);
    v32 = type metadata accessor for Logger(0);
    sub_100012DC4(v32, (uint64_t)qword_1006585A0);
    v33 = sub_10002B1E8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.fault.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(12, -1);
      v59 = v23;
      v37 = (uint8_t *)v36;
      v38 = (void *)swift_slowAlloc(32, -1);
      v64 = v38;
      *(_DWORD *)v37 = 136315138;
      v39 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v40 = TTRTreeStorageItem.treeItemDescription.getter(v8, v39);
      v42 = v41;
      v63 = sub_100027E40(v40, v41, (uint64_t *)&v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v42);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Invalid item type {item: %s}", v37, 0xCu);
      swift_arrayDestroy(v38, 1, &type metadata for Any[8]);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      swift_release();
      v43 = v59;
    }
    else
    {

      swift_release();
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v43 = v23;
    }
  }
  else
  {
    sub_10001F580((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    if (!a3)
    {
LABEL_7:
      sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v62, &qword_10064B6B0);
      return sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    }
    v26 = objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "objectID");
    if (!v26)
    {
LABEL_6:
      swift_release();
      goto LABEL_7;
    }
    v27 = v26;
    v28 = *v20;
    sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v29 = v28;
    v30 = static NSObject.== infix(_:_:)(v27, v29);

    if ((v30 & 1) != 0)
    {

      goto LABEL_6;
    }
    if (qword_10063D708 != -1)
      swift_once(&qword_10063D708, sub_10037CC94);
    v44 = type metadata accessor for Logger(0);
    sub_100012DC4(v44, (uint64_t)qword_1006585A0);
    v45 = v60;
    sub_10002B1E8((uint64_t)v20, (uint64_t)v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v46 = v61;
    sub_10001F580((uint64_t)v20, v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v47 = v27;
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.fault.getter(v48);
    v58 = v48;
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v51 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v50 = 138412546;
      v64 = v47;
      v59 = v23;
      v52 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v50 + 4, v50 + 12);
      *v51 = v27;

      *(_WORD *)(v50 + 12) = 2112;
      v64 = *v45;
      v53 = v64;
      v54 = v64;
      v23 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v50 + 14, v50 + 22);
      v51[1] = v53;
      sub_10001F544(v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F544((uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v55 = v58;
      _os_log_impl((void *)&_mh_execute_header, v58, v49, "reminderChangeItem.objectID does not match item objectID {reminderChangeItem.objectID: %@, item.reminderID.objectID: %@}", (uint8_t *)v50, 0x16u);
      v56 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v51, 2, v56);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      sub_10001F544(v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F544((uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    }
    v43 = v23;
  }
  sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  return sub_1000073A0(v62, &qword_10064B6B0);
}

uint64_t sub_10037D3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, a3, &qword_10064B6B0);
  v16 = type metadata accessor for TTRRemindersListUncommittedSection(0);
  v17 = sub_10002B1E8(a2, a3 + *(int *)(v16 + 20), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) != 1)
  {
    v18 = sub_10001F580((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v19 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v18);
    v21 = v20;
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (v21 >= 2u)
    {
      if (v21 == 2)
      {

        v22 = a2;
LABEL_11:
        sub_10001F544(v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v34 = a1;
        return sub_1000073A0(v34, &qword_10064B6B0);
      }
    }
    else
    {

    }
  }
  if (qword_10063D708 != -1)
    swift_once(&qword_10063D708, sub_10037CC94);
  v23 = type metadata accessor for Logger(0);
  sub_100012DC4(v23, (uint64_t)qword_1006585A0);
  v24 = sub_10002B1E8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.fault.getter(v25);
  if (!os_log_type_enabled(v25, v26))
  {

    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22 = a2;
    goto LABEL_11;
  }
  v27 = (uint8_t *)swift_slowAlloc(12, -1);
  v28 = swift_slowAlloc(32, -1);
  v37 = a1;
  v29 = v28;
  v39 = v28;
  *(_DWORD *)v27 = 136315138;
  v30 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v31 = TTRTreeStorageItem.treeItemDescription.getter(v6, v30);
  v33 = v32;
  v38 = sub_100027E40(v31, v32, &v39);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v27 + 4, v27 + 12);
  swift_bridgeObjectRelease(v33);
  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  _os_log_impl((void *)&_mh_execute_header, v25, v26, "TTRRemindersListUncommittedSection: Invalid item type {item: %s}", v27, 0xCu);
  swift_arrayDestroy(v29, 1, &type metadata for Any[8]);
  swift_slowDealloc(v29, -1, -1);
  swift_slowDealloc(v27, -1, -1);

  sub_10001F544(a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v34 = v37;
  return sub_1000073A0(v34, &qword_10064B6B0);
}

void sub_10037D724(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

uint64_t sub_10037D73C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  _BYTE v20[24];
  __int128 v21[3];
  _BYTE v22[24];
  _QWORD v23[3];

  v3 = v2;
  v6 = *v3;
  if (a1)
  {
    v7 = swift_allocObject(&unk_1006042F0, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = a2;
    v8 = sub_100390120;
  }
  else
  {
    v7 = 0;
    v8 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))sub_10037D944;
  }
  v9 = swift_allocObject(&unk_1006042C8, 32, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = v3[10];
  sub_100053DE4(a1, a2);
  swift_retain(v7);
  v11 = swift_retain(v10);
  v12 = TTRMutableTreeStorage.copy()(v11);
  swift_release(v10);
  v23[0] = v12;
  ((void (*)(__int128 *__return_ptr, _QWORD *))v8)(v21, v23);
  v19 = v21[0];
  swift_beginAccess(v3 + 12, v23, 0, 0);
  v13 = v3[12];
  swift_beginAccess(v3 + 11, v22, 0, 0);
  v14 = v3[11];
  v15 = v3[2];
  sub_100010634((uint64_t)(v3 + 5), (uint64_t)v21);
  v16 = swift_allocObject(v6, 120, 7);
  *(_QWORD *)(v16 + 88) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v16 + 80) = v12;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 96) = v13;
  *(_QWORD *)(v16 + 104) = sub_10039011C;
  *(_QWORD *)(v16 + 112) = v9;
  swift_beginAccess(v16 + 88, v20, 1, 0);
  v17 = *(_QWORD *)(v16 + 88);
  *(_QWORD *)(v16 + 88) = v14;
  swift_bridgeObjectRetain(v13);
  swift_retain(v9);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(v16 + 16) = v15;
  sub_10002E37C(v21, v16 + 40);
  swift_release(v7);
  swift_release(v9);
  return v16;
}

uint64_t sub_10037D918@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = a2(*a1);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10037D948(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;

  v4 = a1;
  a2(&v3, &v4);
  return v3;
}

_QWORD *sub_10037D980(uint64_t (*a1)(uint64_t, __n128), uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = v2;
  v6 = *v2;
  v7 = swift_retain();
  v8 = TTRMutableTreeStorage.copy()(v7);
  v9 = swift_release();
  v10 = a1(v8, v9);
  v12 = v11;
  swift_beginAccess(v3 + 12, v22, 0, 0);
  v13 = v3[12];
  swift_beginAccess(v3 + 11, v21, 0, 0);
  v14 = v3[11];
  v15 = v3[2];
  sub_100010634((uint64_t)(v3 + 5), (uint64_t)v20);
  v16 = (_QWORD *)swift_allocObject(v6, 120, 7);
  v16[11] = &_swiftEmptySetSingleton;
  v16[10] = v8;
  v16[3] = v10;
  v16[4] = v12;
  v16[12] = v13;
  v16[13] = a1;
  v16[14] = a2;
  swift_beginAccess(v16 + 11, &v19, 1, 0);
  v17 = v16[11];
  v16[11] = v14;
  swift_bridgeObjectRetain(v13);
  swift_retain();
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v17);
  v16[2] = v15;
  sub_10002E37C(v20, (uint64_t)(v16 + 5));
  return v16;
}

uint64_t sub_10037DAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;

  v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002B1E8(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v13 = type metadata accessor for TTRRemindersListTreeViewModel();
  v14 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTreeViewModel.Section(0) + 20));
  v21 = a2;
  v22 = a3;
  v23 = v12;
  v24 = a4;
  v15 = sub_100393AD0(v14, (void (*)(uint64_t))sub_10039360C, (uint64_t)v20, v13);
  sub_10002B1E8(a1, a5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  swift_storeEnumTagMultiPayload(a5, v16, 1);
  v17 = sub_10002A750(&qword_100658908);
  v18 = a5 + *(int *)(v17 + 52);
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  *(_QWORD *)(a5 + *(int *)(v17 + 56)) = v15;
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 0, 1, v17);
}

uint64_t sub_10037DC2C@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X2>, unint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _BYTE v51[24];
  char v52[24];

  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v49 = (char *)&v45 - v17;
  v18 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1, v52, 1, 0);
  v21 = *a1 + 1;
  if (__OFADD__(*a1, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v46 = v10;
  v47 = v12;
  v48 = a5;
  *a1 = v21;
  a5 = a2[3];
  v22 = a2[4];
  sub_10001413C(a2, a5);
  v23 = (void *)REMRemindersListDataView.ReminderLite.objectID.getter();
  (*(void (**)(void *, unint64_t, uint64_t, uint64_t))(v22 + 8))(v23, a3, a5, v22);

  a1 = (uint64_t *)REMRemindersListDataView.ReminderLite.objectID.getter();
  sub_10002B1E8(a3, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_beginAccess(a4, v51, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
  v50 = *a4;
  v25 = v50;
  *a4 = 0x8000000000000000;
  a3 = sub_1002AA364((uint64_t)a1);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = (v26 & 1) == 0;
  v29 = v27 + v28;
  if (__OFADD__(v27, v28))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  LOBYTE(a5) = v26;
  if (*(_QWORD *)(v25 + 24) >= v29)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_7;
LABEL_15:
    sub_1002B16E4();
    v25 = v50;
    goto LABEL_7;
  }
  sub_10045C920(v29, isUniquelyReferenced_nonNull_native);
  v25 = v50;
  v30 = sub_1002AA364((uint64_t)a1);
  if ((a5 & 1) != (v31 & 1))
  {
    v44 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v44);
    __break(1u);
    return result;
  }
  a3 = v30;
LABEL_7:
  v32 = (uint64_t)v49;
  v33 = *a4;
  *a4 = v25;
  swift_bridgeObjectRelease(v33);
  if ((a5 & 1) == 0)
  {
    sub_10045DFD4(a3, (uint64_t)a1, (uint64_t)&_swiftEmptySetSingleton, (_QWORD *)*a4);
    v34 = a1;
  }
  sub_1004809A0(v32, (uint64_t)v16);
  swift_endAccess(v51);

  v35 = sub_10001F544(v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v36 = REMRemindersListDataView.ReminderLite.subtaskCount.getter(v35);
  v37 = v36;
  if (v36 < 1)
    v38 = 0;
  else
    v38 = REMRemindersListDataView.ReminderLite.subtaskCount.getter(v36);
  v39 = (uint64_t)v47;
  sub_10002B1E8((uint64_t)v20, (uint64_t)v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload(v39, v46, 2);
  sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v40 = sub_10002A750(&qword_100658908);
  v41 = v48;
  v42 = v48 + *(int *)(v40 + 52);
  *(_QWORD *)v42 = 0;
  *(_QWORD *)(v42 + 8) = v38;
  *(_BYTE *)(v42 + 16) = v37 < 1;
  sub_10001F580(v39, v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v41 + *(int *)(v40 + 56)) = _swiftEmptyArrayStorage;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v41, 0, 1, v40);
}

uint64_t sub_10037DFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD v18[5];
  _BYTE v19[24];

  v12 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) + 20));
  swift_beginAccess(a2 + 16, v19, 33, 0);
  v13 = swift_bridgeObjectRetain(v12);
  sub_1004504C0(v13);
  swift_endAccess(v19);
  v18[2] = a3 + 16;
  v18[3] = a4;
  v18[4] = a5 + 16;
  v14 = sub_10047648C((void (*)(_QWORD))sub_10039534C, (uint64_t)v18, v12);
  sub_10002B1E8(a1, a6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  swift_storeEnumTagMultiPayload(a6, v15, 0);
  result = sub_10002A750(&qword_100658908);
  v17 = a6 + *(int *)(result + 52);
  *(_QWORD *)v17 = 0;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  *(_QWORD *)(a6 + *(int *)(result + 56)) = v14;
  return result;
}

uint64_t sub_10037E0F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = sub_10002A750(&qword_100641CD0);
  v5 = swift_allocObject(v4, 24, 7);
  *(_QWORD *)(v5 + 16) = v3;
  v6 = sub_100023FEC(&qword_1006588E0, &qword_100641CD0, (uint64_t)&protocol conformance descriptor for TTRTreeStorageDerivedUntouchedTree<A>);
  *a2 = v5;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_10037E15C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[3]);
  sub_100027F10(v0 + 5);
  swift_release();
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModel()
{
  return objc_opt_self(_TtC9Reminders29TTRRemindersListTreeViewModel);
}

uint64_t sub_10037E1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[2];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10002B1E8((uint64_t)v9, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
  else
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
}

uint64_t sub_10037E330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  v12 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v8, 1, v2, v12) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
    v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  sub_10002B1E8((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload(v5, v2) == 1)
  {
    sub_10001F580((uint64_t)v5, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
  }
  else
  {
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  }
  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v15 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14) == 1)
    goto LABEL_7;
LABEL_8:
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100649B50);
  return v15;
}

uint64_t sub_10037E56C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;

  v92 = sub_10002A750(&qword_10064B6A0);
  __chkstk_darwin(v92);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin(v5);
  v84 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100644980);
  v8 = __chkstk_darwin(v7);
  v83 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v74 - v11;
  __chkstk_darwin(v10);
  v89 = (uint64_t)&v74 - v13;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v80 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v91 = (uint64_t)&v74 - v19;
  v20 = __chkstk_darwin(v18);
  v93 = (uint64_t)&v74 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v74 - v22;
  v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v90 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v82 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (uint64_t *)((char *)&v74 - v27);
  v29 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v79 = (uint64_t)&v74 - v33;
  v34 = sub_10002A750((uint64_t *)&unk_100649B50);
  __chkstk_darwin(v34);
  v75 = (uint64_t)&v74 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v28 = a1;
  v85 = v28;
  v88 = v24;
  swift_storeEnumTagMultiPayload(v28, v24, 1);
  v87 = v1;
  v36 = *(_QWORD *)(v1 + 80);
  v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v78(v32, 1, 1, v14);
  v37 = a1;
  swift_retain(v36);
  v38 = TTRMutableTreeStorage.children(of:)(v32);
  swift_release(v36);
  sub_1000073A0((uint64_t)v32, (uint64_t *)&unk_100640EB0);
  if (*(_QWORD *)(v38 + 16))
  {
    sub_10002B1E8(v38 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v14);
    sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (EnumCaseMultiPayload)
    {
      v41 = (_QWORD *)v38;
    }
    else
    {
      v42 = v87;
      swift_retain(v87);
      v41 = sub_100393344(v38, v42);
      swift_bridgeObjectRelease(v38);
      v40 = swift_release(v42);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v38);
    v41 = _swiftEmptyArrayStorage;
  }
  v43 = v41[2];
  v44 = (uint64_t)v85;
  v81 = v41;
  if (!v43)
  {
    v62 = 1;
    v64 = v79;
    v63 = (uint64_t)v80;
    goto LABEL_24;
  }
  v45 = (uint64_t)v41 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v74 = v15;
  v86 = *(_QWORD *)(v15 + 72);
  v87 = v14;
  v46 = v93;
  v94 = v12;
  v95 = v4;
  while (1)
  {
    sub_10002B1E8(v45, v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v48 = v46;
    v49 = v91;
    sub_10002B1E8(v48, v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v49, v14) == 1)
    {
      v50 = v49;
      v51 = v84;
      sub_10001F580(v50, v84, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v52 = v89;
      sub_10002B1E8(v51, v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v53 = v90;
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      v55 = v88;
      v54(v52, 0, 1, v88);
    }
    else
    {
      sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v52 = v89;
      v53 = v90;
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      v55 = v88;
      v54(v89, 1, 1, v88);
    }
    v56 = (uint64_t)v94;
    sub_10002B1E8(v44, (uint64_t)v94, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v54(v56, 0, 1, v55);
    v57 = (uint64_t)&v4[*(int *)(v92 + 48)];
    sub_10000735C(v52, (uint64_t)v4, &qword_100644980);
    sub_10000735C(v56, v57, &qword_100644980);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v58(v4, 1, v55) == 1)
      break;
    v59 = v83;
    sub_10000735C((uint64_t)v4, v83, &qword_100644980);
    if (v58((char *)v57, 1, v55) == 1)
    {
      sub_1000073A0(v56, &qword_100644980);
      sub_1000073A0(v52, &qword_100644980);
      sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v14 = v87;
      v44 = (uint64_t)v85;
      goto LABEL_9;
    }
    v60 = v82;
    sub_10001F580(v57, v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v61 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v59, v60);
    sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0((uint64_t)v94, &qword_100644980);
    sub_1000073A0(v52, &qword_100644980);
    sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000073A0((uint64_t)v4, &qword_100644980);
    v14 = v87;
    v44 = (uint64_t)v85;
    if ((v61 & 1) != 0)
      goto LABEL_22;
LABEL_10:
    v46 = v93;
    sub_10001F544(v93, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v45 += v86;
    if (!--v43)
    {
      v62 = 1;
      v64 = v79;
      v63 = (uint64_t)v80;
      goto LABEL_23;
    }
  }
  sub_1000073A0(v56, &qword_100644980);
  sub_1000073A0(v52, &qword_100644980);
  v47 = v58((char *)v57, 1, v55);
  v14 = v87;
  if (v47 != 1)
  {
LABEL_9:
    sub_1000073A0((uint64_t)v95, &qword_10064B6A0);
    goto LABEL_10;
  }
  sub_1000073A0((uint64_t)v95, &qword_100644980);
LABEL_22:
  v64 = v79;
  sub_10001F580(v93, v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v62 = 0;
  v63 = (uint64_t)v80;
LABEL_23:
  v15 = v74;
LABEL_24:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v78)(v64, v62, 1, v14, v40);
  swift_bridgeObjectRelease(v81);
  sub_10001F544(v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v64, 1, v14) == 1)
  {
    sub_1000073A0(v64, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10002B1E8(v64, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v63, v14) == 1)
    {
      v65 = v75;
      sub_10001F580(v63, v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v66 = 0;
    }
    else
    {
      sub_10001F544(v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v66 = 1;
      v65 = v75;
    }
    v68 = v76;
    v67 = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v65, v66, 1, v77);
    sub_10001F544(v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v65, 1, v67) != 1)
    {
      v69 = v82;
      sub_10002B1E8(v65, v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      v70 = sub_10001F544(v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter(v70);
      v72 = v71;
      sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      __asm { BR              X10 }
    }
    sub_1000073A0(v65, (uint64_t *)&unk_100649B50);
  }
  return 0;
}

void sub_10037EDE8()
{
  void *v0;

  JUMPOUT(0x10037EDC8);
}

void sub_10037EDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  void (*v22)(uint64_t *);
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v1 + 80);
  sub_10002B1E8(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  swift_retain();
  v16 = sub_10002A750(&qword_1006445E8);
  v17 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
  v18 = TTRTreeContentsQueryable.childrenCollection(of:)(v15, v16, v17);
  v20 = v19;
  v22 = v21;
  sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
  swift_release();
  if (v18 == v20)
  {
LABEL_11:
    swift_release();
  }
  else
  {
    if (v20 >= v18)
    {
      swift_retain();
      while (v18 < v20)
      {
        v26 = v18;
        v22(&v26);
        v23 = sub_10001F580((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v23);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
        if ((EnumCaseMultiPayload - 1) < 2)
        {
          sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        }
        else if (EnumCaseMultiPayload != 3)
        {
          sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_10:
          swift_release();
          goto LABEL_11;
        }
        ++v18;
        sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (v20 == v18)
          goto LABEL_10;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10037F094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v11;

  v3 = type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 24), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, ObjectType, v6);
  if ((v9 & 1) != 0)
    return 0;
  TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter(v9);
  if (swift_getEnumCaseMultiPayload(v5, v3) > 4)
    return 0;
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem);
  return 1;
}

uint64_t sub_10037F160(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  __n128 v30;
  unsigned int (*v31)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  unsigned int EnumCaseMultiPayload;
  _BYTE *v35;
  _BYTE *v36;
  char v37;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _BYTE v54[4];
  int v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;

  v55 = a2;
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v59 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v60 = &v54[-v7];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem(0);
  __chkstk_darwin(v8);
  v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v54[-v15];
  __chkstk_darwin(v17);
  v57 = &v54[-v18];
  __chkstk_darwin(v19);
  v21 = &v54[-v20];
  v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v58 = &v54[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  v56 = &v54[-v26];
  __chkstk_darwin(v27);
  v29 = &v54[-v28];
  v62 = v2;
  swift_retain();
  v61 = a1;
  TTRMutableTreeStorage.parent(of:)(a1);
  v30 = swift_release();
  v31 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v23 + 48);
  if (v31(v21, 1, v22, v30) == 1)
  {
    v32 = (uint64_t)v21;
LABEL_10:
    sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
LABEL_11:
    v37 = 0;
    return v37 & 1;
  }
  v33 = sub_10001F580((uint64_t)v21, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter(v33);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload - 2 < 3)
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem);
LABEL_8:
    sub_10002B1E8((uint64_t)v29, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
    sub_1003806CC((uint64_t)v16, v62, (uint64_t)v13);
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v31)(v13, 1, v22) == 1)
    {
      sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v32 = (uint64_t)v13;
      goto LABEL_10;
    }
    v39 = v58;
    v40 = sub_10001F580((uint64_t)v13, (uint64_t)v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v41 = (uint64_t)v60;
    v42 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v40);
    v43 = (uint64_t)v59;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v42);
    v44 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v41, v43);
    sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v44 & 1) != 0)
    {
      v37 = sub_10037F160(v29, 0);
      sub_10001F544((uint64_t)v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v37 & 1;
    }
    v45 = (uint64_t)v39;
LABEL_20:
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload >= 2)
    goto LABEL_8;
  sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem);
  sub_10002B1E8((uint64_t)v29, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v35 = *(_BYTE **)(v23 + 56);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v35)(v16, 0, 1, v22);
  v36 = v57;
  sub_1003806CC((uint64_t)v16, v62, (uint64_t)v57);
  sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v31)(v36, 1, v22) == 1)
  {
    sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v32 = (uint64_t)v36;
    goto LABEL_10;
  }
  v58 = v35;
  v46 = v56;
  v47 = sub_10001F580((uint64_t)v36, (uint64_t)v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v49 = (uint64_t)v60;
  v48 = v61;
  v50 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v47);
  v51 = (uint64_t)v59;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v50);
  v52 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v49, v51);
  sub_10001F544(v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v52 & 1) == 0)
  {
    v45 = (uint64_t)v46;
    goto LABEL_20;
  }
  if ((v55 & 1) != 0)
  {
    sub_10002B1E8(v48, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v58)(v16, 0, 1, v22);
    swift_retain();
    v53 = TTRMutableTreeStorage.numberOfChildren(of:)(v16);
    swift_release();
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v37 = v53 == 0;
  }
  else
  {
    sub_10001F544((uint64_t)v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544((uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v37 = 1;
  }
  return v37 & 1;
}

uint64_t sub_10037F70C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;

  v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  __chkstk_darwin(v18);
  v2 = type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v5);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  v13 = swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v13) != 1)
  {
    v14 = sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter(v14);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = (char *)&loc_10037F8F4 + 4 * byte_1005301F0[swift_getEnumCaseMultiPayload(v4, v2)];
    __asm { BR              X10 }
  }
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
  return 0;
}

uint64_t sub_10037F928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;

  sub_10001F580(v1, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_10002B1E8(v2, v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0, *(_QWORD *)(v3 - 88));
  return ((uint64_t (*)(uint64_t))((char *)&loc_10037F908 + 4 * byte_1005301F6[EnumCaseMultiPayload]))(1);
}

void sub_10037F990()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  JUMPOUT(0x10037F908);
}

void sub_10037F9A8()
{
  JUMPOUT(0x10037F900);
}

uint64_t sub_10037F9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v42 = sub_10002A750(&qword_100647B00);
  v4 = __chkstk_darwin(v42);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v43 = (uint64_t)&v40 - v7;
  v8 = sub_10002A750(&qword_1006554F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v40 - v18;
  v41 = v2;
  v45 = *(_QWORD *)(v2 + 80);
  swift_retain();
  TTRMutableTreeStorage.parent(of:)(a1);
  v20 = sub_10002A750(&qword_1006445E8);
  v21 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
  v22 = TTRTreeContentsQueryable.childIndex(of:inParent:)(a1, v17, v20, v21);
  if ((v23 & 1) != 0)
  {
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
    v27 = sub_10002A750(&qword_100655500);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  }
  else
  {
    v24 = v22;
    v25 = sub_10002A750(&qword_100655500);
    v26 = *(int *)(v25 + 48);
    sub_10000F614((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)&v10[v26] = v24;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
  }
  swift_release();
  v28 = sub_10002A750(&qword_100655500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v10, 1, v28) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_1006554F0);
    v29 = sub_10002A750(&qword_100654860);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v44, 1, 1, v29);
  }
  else
  {
    v31 = *(_QWORD *)&v10[*(int *)(v28 + 48)];
    v32 = *(int *)(v11 + 48);
    sub_10000F614((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)&v13[v32] = v31;
    v33 = *(_QWORD *)&v13[*(int *)(v11 + 48)];
    sub_10000F614((uint64_t)v13, (uint64_t)v19, (uint64_t *)&unk_100640EB0);
    v34 = *(_QWORD *)(v41 + 32);
    ObjectType = swift_getObjectType(*(_QWORD *)(v41 + 24), v35);
    v37 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v6, 1, 1, v37);
    sub_1000B5F7C((uint64_t)v19, (uint64_t)v6);
    *(_QWORD *)&v6[*(int *)(v42 + 36)] = v33;
    v38 = (uint64_t)v6;
    v39 = v43;
    sub_10000F614(v38, v43, &qword_100647B00);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v39, ObjectType, v34);
    sub_1000073A0(v39, &qword_100647B00);
    return sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_100640EB0);
  }
}

double sub_10037FD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  const char *v43;
  id *v44;
  id v45;
  id v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id *v75;
  _BYTE v76[24];

  v4 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  v5 = __chkstk_darwin(v4);
  v74 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v71 = (char *)&v69 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v69 - v9;
  v11 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v12 = __chkstk_darwin(v11);
  v69 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v70 = (uint64_t)&v69 - v15;
  v16 = __chkstk_darwin(v14);
  v75 = (id *)((char *)&v69 - v17);
  __chkstk_darwin(v16);
  v19 = (id *)((char *)&v69 - v18);
  v20 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v69 - v25;
  v27 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  v73 = a1;
  v28 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v24);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v28);
  LOBYTE(a1) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v26, v23);
  sub_10001F544((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v29 = sub_10001F544((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((a1 & 1) == 0)
  {
    if (qword_10063D708 != -1)
      swift_once(&qword_10063D708, sub_10037CC94);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100012DC4(v38, (uint64_t)qword_1006585A0);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.fault.getter(v40);
    if (!os_log_type_enabled(v40, v41))
      goto LABEL_32;
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    v43 = "Invalid editingSessionState.item";
    goto LABEL_31;
  }
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v29);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v4);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      if (qword_10063D708 != -1)
        swift_once(&qword_10063D708, sub_10037CC94);
      v59 = type metadata accessor for Logger(0);
      v60 = sub_100012DC4(v59, (uint64_t)qword_1006585A0);
      v40 = Logger.logObject.getter(v60);
      v41 = static os_log_type_t.fault.getter(v40);
      if (!os_log_type_enabled(v40, v41))
        goto LABEL_32;
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      v43 = "Invalid item type";
      goto LABEL_31;
    }
    v44 = v75;
    sub_10001F580((uint64_t)v10, (uint64_t)v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
    v45 = objc_msgSend(v27, "objectID");
    v46 = *v44;
    v47 = static NSObject.== infix(_:_:)(v45, v46);

    if ((v47 & 1) != 0)
    {
      v49 = (uint64_t)v71;
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v48);
      v50 = swift_getEnumCaseMultiPayload(v49, v4);
      if ((v50 - 1) >= 2)
      {
        if (!v50)
          sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        v66 = v69;
        sub_10002B1E8((uint64_t)v44, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        v37 = v72;
        swift_beginAccess(v72 + 88, v76, 33, 0);
        v67 = v70;
        sub_1004810FC(v70, v66);
        swift_endAccess(v76);
        sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        sub_10001F544((uint64_t)v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        goto LABEL_42;
      }
      sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (qword_10063D708 != -1)
        swift_once(&qword_10063D708, sub_10037CC94);
      v51 = type metadata accessor for Logger(0);
      v52 = sub_100012DC4(v51, (uint64_t)qword_1006585A0);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.fault.getter(v53);
      if (!os_log_type_enabled(v53, v54))
      {
LABEL_38:

        sub_10001F544((uint64_t)v44, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        return result;
      }
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      v56 = "isForNewReminder is set to true for editing an existing reminder, expect false";
    }
    else
    {
      if (qword_10063D708 != -1)
        swift_once(&qword_10063D708, sub_10037CC94);
      v64 = type metadata accessor for Logger(0);
      v65 = sub_100012DC4(v64, (uint64_t)qword_1006585A0);
      v53 = Logger.logObject.getter(v65);
      v54 = static os_log_type_t.fault.getter(v53);
      if (!os_log_type_enabled(v53, v54))
        goto LABEL_38;
      v55 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v55 = 0;
      v56 = "Invalid reminderID";
    }
    _os_log_impl((void *)&_mh_execute_header, v53, v54, v56, v55, 2u);
    swift_slowDealloc(v55, -1, -1);
    goto LABEL_38;
  }
  sub_10001F580((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  sub_100005ED8(0, (unint64_t *)&qword_100649E10, NSObject_ptr);
  v31 = objc_msgSend(v27, "objectID");
  v32 = *v19;
  sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v33 = static NSObject.== infix(_:_:)(v31, v32);

  if ((v33 & 1) == 0)
  {
    if (qword_10063D708 != -1)
      swift_once(&qword_10063D708, sub_10037CC94);
    v57 = type metadata accessor for Logger(0);
    v58 = sub_100012DC4(v57, (uint64_t)qword_1006585A0);
    v40 = Logger.logObject.getter(v58);
    v41 = static os_log_type_t.fault.getter(v40);
    if (!os_log_type_enabled(v40, v41))
      goto LABEL_32;
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    v43 = "Invalid objectID";
    goto LABEL_31;
  }
  v35 = (uint64_t)v74;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v34);
  v36 = swift_getEnumCaseMultiPayload(v35, v4);
  if ((v36 - 1) >= 2)
  {
    if (!v36)
      sub_10001F544(v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    if (qword_10063D708 != -1)
      swift_once(&qword_10063D708, sub_10037CC94);
    v61 = type metadata accessor for Logger(0);
    v62 = sub_100012DC4(v61, (uint64_t)qword_1006585A0);
    v40 = Logger.logObject.getter(v62);
    v41 = static os_log_type_t.fault.getter(v40);
    if (!os_log_type_enabled(v40, v41))
      goto LABEL_32;
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    v43 = "isForNewReminder is set to false for editing a new reminder, expect true";
LABEL_31:
    _os_log_impl((void *)&_mh_execute_header, v40, v41, v43, v42, 2u);
    swift_slowDealloc(v42, -1, -1);
LABEL_32:

    return result;
  }
  sub_10001F544(v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  v37 = v72;
LABEL_42:
  v68 = *(_QWORD *)(v37 + 80);
  swift_retain(v68);
  TTRMutableTreeStorage.editAuxiliaryData(for:using:)(a2, sub_1003935D0, v73);
  *(_QWORD *)&result = swift_release(v68).n128_u64[0];
  return result;
}

uint64_t sub_100380564(_QWORD *a1)
{
  uint64_t result;

  result = swift_release(*a1);
  *a1 = 0;
  return result;
}

uint64_t sub_10038058C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload(v11, v8, 2);
  v16[1] = *(_QWORD *)(a2 + 80);
  v12 = sub_10002A750(&qword_1006445E8);
  v13 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
  if ((TTRTreeContentsQueryable.contains(_:inSubtreeAtRoot:)(v11, a3, v12, v13) & 1) != 0)
  {
    sub_10001F580((uint64_t)v11, a4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = 0;
  }
  else
  {
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, v14, 1, v8);
}

uint64_t sub_1003806CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + 24), a2);
  v7 = *(_QWORD *)(v5 + 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, ObjectType, v7);
  v9 = v8 < 1;
  v10 = v8 - 1;
  if (v9)
  {
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, a1, ObjectType, v7);
    v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
  }
}

BOOL sub_1003807A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v75 = (uint64_t)&v57 - v8;
  v79 = sub_10002A750(&qword_100658920);
  v9 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v60 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v68 = (char *)&v57 - v12;
  __chkstk_darwin(v13);
  v59 = (char *)&v57 - v14;
  __chkstk_darwin(v15);
  v77 = (uint64_t)&v57 - v16;
  __chkstk_darwin(v17);
  v78 = (uint64_t)&v57 - v18;
  __chkstk_darwin(v19);
  v67 = (char *)&v57 - v20;
  v21 = sub_10002A750(&qword_100647B50);
  __chkstk_darwin(v21);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v57 - v25;
  v66 = v2;
  v27 = *(_QWORD *)(a2 + *(int *)(sub_10002A750(&qword_100647B00) + 36));
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v23, 1, 1, v28);
  swift_retain();
  sub_1000B5F7C(a2, (uint64_t)v23);
  v29 = v21;
  *(_QWORD *)&v23[*(int *)(v21 + 36)] = v27;
  sub_10000F614((uint64_t)v23, (uint64_t)v26, &qword_100647B50);
  v30 = TTRMutableTreeStorage.steps(forMoving:to:)(a1, v26);
  swift_release();
  sub_1000073A0((uint64_t)v26, &qword_100647B50);
  if (v30)
  {
    v58 = v30;
    v31 = *(_QWORD *)(v30 + 16);
    v32 = v79;
    v33 = v59;
    v34 = (uint64_t)v60;
    v35 = (uint64_t)v67;
    v36 = (uint64_t)v68;
    v64 = v29;
    if (v31)
    {
      v63 = &v67[*(int *)(v79 + 48)];
      v62 = &v67[*(int *)(v79 + 64)];
      v37 = v58 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v61 = *(_QWORD *)(v9 + 72);
      do
      {
        v76 = v37;
        v74 = v31;
        sub_10000735C(v37, v35, &qword_100658920);
        v38 = (uint64_t)v33;
        v39 = v34;
        v40 = v78 + *(int *)(v32 + 48);
        v41 = v78 + *(int *)(v32 + 64);
        sub_10001F580(v35, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000F614((uint64_t)v63, v40, &qword_100647B50);
        sub_10000F614((uint64_t)v62, v41, &qword_100647B50);
        v71 = *(_QWORD *)(v66 + 80);
        v42 = v77 + *(int *)(v79 + 48);
        v73 = v77 + *(int *)(v79 + 64);
        v43 = v73;
        sub_10002B1E8(v78, v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000735C(v40, v42, &qword_100647B50);
        sub_10000735C(v41, v43, &qword_100647B50);
        v44 = v64;
        v70 = *(_QWORD *)(v42 + *(int *)(v64 + 36));
        swift_retain();
        sub_1000073A0(v42, &qword_100647B50);
        v45 = v38 + *(int *)(v79 + 48);
        v72 = v38 + *(int *)(v79 + 64);
        v46 = v72;
        sub_10002B1E8(v78, v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000735C(v40, v45, &qword_100647B50);
        sub_10000735C(v41, v46, &qword_100647B50);
        sub_10000735C(v45, v75, (uint64_t *)&unk_100640EB0);
        sub_1000073A0(v45, &qword_100647B50);
        v69 = v36 + *(int *)(v79 + 48);
        v47 = v69;
        v48 = v36 + *(int *)(v79 + 64);
        sub_10002B1E8(v78, v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000735C(v40, v47, &qword_100647B50);
        sub_10000735C(v41, v48, &qword_100647B50);
        v49 = *(_QWORD *)(v48 + *(int *)(v44 + 36));
        sub_1000073A0(v48, &qword_100647B50);
        v50 = v39 + *(int *)(v79 + 48);
        v51 = (uint64_t)v65;
        v52 = v39 + *(int *)(v79 + 64);
        sub_10002B1E8(v78, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v53 = v40;
        v34 = v39;
        v33 = (char *)v38;
        sub_10000735C(v53, v50, &qword_100647B50);
        sub_10000735C(v41, v52, &qword_100647B50);
        sub_10000735C(v52, v51, (uint64_t *)&unk_100640EB0);
        v54 = v75;
        sub_1000073A0(v52, &qword_100647B50);
        v36 = (uint64_t)v68;
        TTRMutableTreeStorage.moveItem(at:in:to:in:)(v70, v54, v49, v51);
        v32 = v79;
        swift_release();
        sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
        sub_1000073A0(v54, (uint64_t *)&unk_100640EB0);
        sub_1000073A0(v78, &qword_100658920);
        v55 = v50;
        v35 = (uint64_t)v67;
        sub_1000073A0(v55, &qword_100647B50);
        sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0(v69, &qword_100647B50);
        sub_10001F544(v36, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0(v72, &qword_100647B50);
        sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000073A0(v73, &qword_100647B50);
        sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v37 = v76 + v61;
        v31 = v74 - 1;
      }
      while (v74 != 1);
    }
    v30 = v58;
    swift_bridgeObjectRelease(v58);
  }
  return v30 != 0;
}

void sub_100380D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  __n128 v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v66 = a2;
  v60 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v60);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v65 = (char *)&v57 - v8;
  v9 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - v13;
  v15 = sub_10002A750(&qword_100647B00);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v58 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v64 = (uint64_t)&v57 - v19;
  v20 = *(_QWORD *)(v2 + 24);
  v59 = v3;
  v21 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType(v20, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 24);
  v62 = a1;
  v25 = v24(a1, 0, ObjectType, v21);
  v26 = v25;
  v27 = *(_QWORD *)(v25 + 16);
  v63 = v6;
  if (v27)
  {
    sub_10000735C(v25 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v14, &qword_100647B00);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v29 = v14;
    v30 = 0;
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v29 = v14;
    v30 = 1;
  }
  v61 = v28;
  v28(v29, v30, 1, v15);
  v31 = swift_bridgeObjectRelease(v26);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
  if (v32(v14, 1, v15, v31) == 1)
  {
    v11 = v14;
    v33 = (uint64_t)v65;
  }
  else
  {
    sub_10000F614((uint64_t)v14, v64, &qword_100647B00);
    v34 = 1;
    v35 = v24(v66, 1, ObjectType, v21);
    v36 = v35;
    if (*(_QWORD *)(v35 + 16))
    {
      sub_10000735C(v35 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v11, &qword_100647B00);
      v34 = 0;
    }
    v33 = (uint64_t)v65;
    v61(v11, v34, 1, v15);
    v37 = swift_bridgeObjectRelease(v36);
    if (v32(v11, 1, v15, v37) != 1)
    {
      v52 = v58;
      sub_10000F614((uint64_t)v11, v58, &qword_100647B00);
      v53 = *(int *)(v15 + 36);
      v54 = v64;
      v55 = *(_QWORD *)(v64 + v53);
      v56 = *(_QWORD *)(v52 + v53);
      swift_retain();
      TTRMutableTreeStorage.moveItem(at:in:to:in:)(v55, v54, v56, v52);
      swift_release();
      sub_1000073A0(v52, &qword_100647B00);
      sub_1000073A0(v54, &qword_100647B00);
      return;
    }
    sub_1000073A0(v64, &qword_100647B00);
  }
  sub_1000073A0((uint64_t)v11, &qword_100647AF8);
  v38 = (uint64_t)v63;
  if (qword_10063D708 != -1)
    swift_once(&qword_10063D708, sub_10037CC94);
  v39 = type metadata accessor for Logger(0);
  sub_100012DC4(v39, (uint64_t)qword_1006585A0);
  sub_10000735C(v62, v33, &qword_100654860);
  v40 = sub_10000735C(v66, v38, &qword_100654860);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.fault.getter(v41);
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc(22, -1);
    v44 = swift_slowAlloc(64, -1);
    v68 = v44;
    *(_DWORD *)v43 = 136315394;
    v45 = v60;
    v46 = TTRDerivedTreeLocation.description.getter(v60);
    v48 = v47;
    v67 = sub_100027E40(v46, v47, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v43 + 4, v43 + 12);
    swift_bridgeObjectRelease(v48);
    sub_1000073A0(v33, &qword_100654860);
    *(_WORD *)(v43 + 12) = 2080;
    v49 = TTRDerivedTreeLocation.description.getter(v45);
    v51 = v50;
    v67 = sub_100027E40(v49, v50, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v43 + 14, v43 + 22);
    swift_bridgeObjectRelease(v51);
    sub_1000073A0(v38, &qword_100654860);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Failed to convert from derived tree's source/destination locations. This move is probably not supported {source: %s, destination: %s}", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy(v44, 2, &type metadata for Any[8]);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v43, -1, -1);
  }
  else
  {
    sub_1000073A0(v33, &qword_100654860);
    sub_1000073A0(v38, &qword_100654860);
  }

}

uint64_t sub_1003812C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_10002A750(&qword_100658938);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100654860);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10037F9B8(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100658938);
    v11 = sub_10002A750(&qword_1006445E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  else
  {
    sub_10000F614((uint64_t)v6, (uint64_t)v10, &qword_100654860);
    v13 = sub_10002A750(&qword_1006445E0);
    v14 = a2 + *(int *)(v13 + 48);
    sub_10002B1E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10000F614((uint64_t)v10, v14, &qword_100654860);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
}

uint64_t sub_100381454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_10002A750(&qword_100647B00);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006588E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  TTRMutableTreeStorage.insertTemporaryItem(with:)(a1);
  swift_release();
  v17 = sub_10002A750(&qword_100658930);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_1006588E8);
    v18 = 1;
  }
  else
  {
    v19 = *(_QWORD *)&v10[*(int *)(v17 + 48)];
    v20 = a2;
    v21 = *(int *)(v11 + 48);
    sub_10000F614((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)&v13[v21] = v19;
    v22 = *(_QWORD *)&v13[*(int *)(v11 + 48)];
    sub_10000F614((uint64_t)v13, (uint64_t)v16, (uint64_t *)&unk_100640EB0);
    v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
    sub_1000B5F7C((uint64_t)v16, (uint64_t)v7);
    *(_QWORD *)&v7[*(int *)(v4 + 36)] = v22;
    a2 = v20;
    sub_10000F614((uint64_t)v7, v20, &qword_100647B00);
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v18, 1, v4);
}

void sub_1003816A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t (*v60)(_QWORD);
  char *v61;
  _QWORD v62[14];
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;

  v73 = a1;
  v74 = a2;
  v2 = sub_10002A750(&qword_1006554F0);
  v3 = __chkstk_darwin(v2);
  v69 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v68 = (char *)v62 - v5;
  v6 = sub_10002A750(&qword_100655500);
  v7 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  v71 = v7;
  v8 = __chkstk_darwin(v6);
  v62[3] = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v62[7] = (char *)v62 - v11;
  v12 = __chkstk_darwin(v10);
  v62[11] = (char *)v62 - v13;
  v14 = __chkstk_darwin(v12);
  v62[6] = (char *)v62 - v15;
  __chkstk_darwin(v14);
  v62[5] = (char *)v62 - v16;
  v80 = sub_10002A750(&qword_10064B6A0);
  __chkstk_darwin(v80);
  v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v17);
  v77 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_100644980);
  v20 = __chkstk_darwin(v19);
  v76 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  __chkstk_darwin(v22);
  v78 = (char *)v62 - v23;
  v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v75 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v62[2] = (char *)v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v67 = (char *)v62 - v28;
  v29 = __chkstk_darwin(v27);
  v62[1] = (char *)v62 - v30;
  v31 = __chkstk_darwin(v29);
  v66 = (char *)v62 - v32;
  v33 = __chkstk_darwin(v31);
  v79 = (char *)v62 - v34;
  v35 = __chkstk_darwin(v33);
  v83 = (char *)v62 - v36;
  v37 = __chkstk_darwin(v35);
  v62[9] = (char *)v62 - v38;
  __chkstk_darwin(v37);
  v62[8] = (char *)v62 - v39;
  v40 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v41 = *(_QWORD *)(v40 - 8);
  v81 = v40;
  v82 = v41;
  v42 = __chkstk_darwin(v40);
  v72 = (char *)v62 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v84 = (char *)v62 - v44;
  v45 = sub_10002A750(&qword_100647AF8);
  __chkstk_darwin(v45);
  v65 = (char *)v62 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10002A750(&qword_100654860);
  v47 = __chkstk_darwin(v63);
  v62[12] = (char *)v62 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v62[13] = (char *)v62 - v49;
  v64 = sub_10002A750(&qword_100647B00);
  __chkstk_darwin(v64);
  v62[4] = (char *)v62 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v52 = __chkstk_darwin(v51);
  v53 = __chkstk_darwin(v52);
  v54 = __chkstk_darwin(v53);
  v55 = __chkstk_darwin(v54);
  v62[10] = (char *)v62 - v56;
  __chkstk_darwin(v55);
  v57 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v57);
  v59 = (char *)v62 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v73, (uint64_t)v59, v60);
  v61 = (char *)&loc_100381C8C + dword_1003828D4[swift_getEnumCaseMultiPayload(v59, v57)];
  __asm { BR              X10 }
}

uint64_t sub_100381C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_10002A750(&qword_1006588F8);
  *(_QWORD *)(v4 - 112) = v5;
  v6 = *(_QWORD *)(v1 + *(int *)(v5 + 48));
  sub_10000F614(v1, v3, (uint64_t *)&unk_100640EB0);
  v7 = *(_QWORD *)(v4 - 176);
  v8 = v2;
  v9 = *(_QWORD *)(v7 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v7 + 24), v10);
  v12 = 1;
  v13 = *(_QWORD *)(v4 - 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 56))(v13, 1, 1, v8);
  sub_1000B5F7C(v3, v13);
  *(_QWORD *)(v13 + *(int *)(*(_QWORD *)(v4 - 304) + 36)) = v6;
  v14 = *(_QWORD *)(v4 - 312);
  sub_10000F614(v13, v14, &qword_100654860);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(v14, 1, ObjectType, v9);
  sub_1000073A0(v14, &qword_100654860);
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = *(_QWORD *)(v4 - 288);
    sub_10000735C(v15 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80)), v16, &qword_100647B00);
    v12 = 0;
    v17 = *(_QWORD *)(v4 - 216);
  }
  else
  {
    v17 = *(_QWORD *)(v4 - 216);
    v16 = *(_QWORD *)(v4 - 288);
  }
  v18 = v12;
  v19 = *(_QWORD *)(v4 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 56))(v16, v18, 1, v19);
  swift_bridgeObjectRelease(v15);
  sub_1000073A0(v3, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v16, 1, v19) == 1)
  {
    sub_1000073A0(v16, &qword_100647AF8);
    v20 = sub_10002A750(&qword_10064B6B0);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v22 = v17;
    v28 = 1;
  }
  else
  {
    v23 = v16;
    v24 = *(_QWORD *)(v4 - 384);
    sub_10000F614(v23, v24, &qword_100647B00);
    v25 = *(int *)(*(_QWORD *)(v4 - 112) + 48);
    sub_10000735C(v24, v17, (uint64_t *)&unk_100640EB0);
    v26 = *(_QWORD *)(v24 + *(int *)(v19 + 36));
    sub_1000073A0(v24, &qword_100647B00);
    *(_QWORD *)(v17 + v25) = v26;
    v27 = sub_10002A750(&qword_10064B6B0);
    swift_storeEnumTagMultiPayload(v17, v27, 1);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v22 = v17;
    v28 = 0;
    v20 = v27;
  }
  return v21(v22, v28, 1, v20);
}

uint64_t sub_1003828E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v71 - v7;
  v9 = sub_10002A750(&qword_1006554F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v71 - v13;
  v15 = sub_10002A750(&qword_100655500);
  v76 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v73 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v72 = (uint64_t)&v71 - v18;
  __chkstk_darwin(v19);
  v74 = (uint64_t)&v71 - v20;
  __chkstk_darwin(v21);
  v71 = (uint64_t)&v71 - v22;
  v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v71 - v27;
  v29 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v31, v32);
  if (swift_getEnumCaseMultiPayload(v31, v29) == 1)
  {
    sub_10001F580((uint64_t)v31, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v78 = *(_QWORD *)(v75 + 80);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v25);
    v33 = sub_10002A750(&qword_1006445E8);
    v34 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
    v35 = TTRTreeContentsQueryable.childIndex(of:inParent:)(v25, v5, v33, v34);
    if ((v36 & 1) != 0)
    {
      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      v39 = 1;
    }
    else
    {
      v37 = v35;
      v38 = *(int *)(v15 + 48);
      sub_10000F614((uint64_t)v5, (uint64_t)v11, (uint64_t *)&unk_100640EB0);
      v39 = 0;
      *(_QWORD *)&v11[v38] = v37;
    }
    v47 = v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v11, v39, 1, v15);
    swift_release();
    sub_10001F544((uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v11, 1, v15) == 1)
    {
      v48 = (uint64_t)v11;
LABEL_12:
      sub_1000073A0(v48, &qword_1006554F0);
      v50 = sub_10002A750(&qword_10064B6B0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v77, 1, 1, v50);
    }
    v52 = *(int *)(v15 + 48);
    v53 = v72;
    sub_10000F614((uint64_t)v11, v72, (uint64_t *)&unk_100640EB0);
    v54 = *(_QWORD *)&v11[v52];
    *(_QWORD *)(v53 + v52) = v54;
    v55 = *(int *)(sub_10002A750(&qword_1006588F8) + 48);
    v56 = *(int *)(v15 + 48);
    v57 = v74;
    sub_10000735C(v53, v74, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)(v57 + v56) = v54;
    v58 = v77;
    sub_10000F614(v57, v77, (uint64_t *)&unk_100640EB0);
    v59 = *(int *)(v15 + 48);
    v60 = v73;
    sub_10000F614(v53, v73, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)(v60 + v59) = v54;
    *(_QWORD *)(v58 + v55) = v54;
    v61 = sub_10002A750(&qword_10064B6B0);
    swift_storeEnumTagMultiPayload(v58, v61, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v58, 0, 1, v61);
    return sub_1000073A0(v60, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10001F580((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v78 = *(_QWORD *)(v75 + 80);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)(v28);
    v40 = sub_10002A750(&qword_1006445E8);
    v41 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
    v42 = TTRTreeContentsQueryable.childIndex(of:inParent:)(v28, v8, v40, v41);
    if ((v43 & 1) != 0)
    {
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
      v46 = 1;
    }
    else
    {
      v44 = v42;
      v45 = *(int *)(v15 + 48);
      sub_10000F614((uint64_t)v8, (uint64_t)v14, (uint64_t *)&unk_100640EB0);
      v46 = 0;
      *(_QWORD *)&v14[v45] = v44;
    }
    v49 = v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v14, v46, 1, v15);
    swift_release();
    sub_10001F544((uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v14, 1, v15) == 1)
    {
      v48 = (uint64_t)v14;
      goto LABEL_12;
    }
    v62 = *(int *)(v15 + 48);
    v63 = v71;
    sub_10000F614((uint64_t)v14, v71, (uint64_t *)&unk_100640EB0);
    v64 = *(_QWORD *)&v14[v62];
    v65 = *(int *)(sub_10002A750(&qword_1006588F8) + 48);
    v66 = v63;
    v67 = v74;
    sub_10000F614(v66, v74, (uint64_t *)&unk_100640EB0);
    v68 = v67;
    v69 = v77;
    result = sub_10000F614(v68, v77, (uint64_t *)&unk_100640EB0);
    if (__OFADD__(v64, 1))
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v69 + v65) = v64 + 1;
      v70 = sub_10002A750(&qword_10064B6B0);
      swift_storeEnumTagMultiPayload(v69, v70, 1);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
    }
  }
  return result;
}

uint64_t sub_100382EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_10002A750(&qword_100647B00);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100658928);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  TTRMutableTreeStorage.resolve(_:)(a1);
  swift_release();
  v17 = sub_10002A750(&qword_1006588F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17) == 1)
  {
    sub_1000073A0((uint64_t)v10, &qword_100658928);
    v18 = 1;
  }
  else
  {
    v19 = *(_QWORD *)&v10[*(int *)(v17 + 48)];
    v20 = a2;
    v21 = *(int *)(v11 + 48);
    sub_10000F614((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
    *(_QWORD *)&v13[v21] = v19;
    v22 = *(_QWORD *)&v13[*(int *)(v11 + 48)];
    sub_10000F614((uint64_t)v13, (uint64_t)v16, (uint64_t *)&unk_100640EB0);
    v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
    sub_1000B5F7C((uint64_t)v16, (uint64_t)v7);
    *(_QWORD *)&v7[*(int *)(v4 + 36)] = v22;
    a2 = v20;
    sub_10000F614((uint64_t)v7, v20, &qword_100647B00);
    sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v18, 1, v4);
}

_QWORD *sub_100383144()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v0 = sub_10002A750(&qword_1006589A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v29 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v30 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v28 = (uint64_t)&v25 - v6;
  v7 = sub_10002A750(&qword_1006588F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - v12;
  v14 = swift_retain();
  v15 = TTRMutableTreeStorage.temporaryNodeValues.getter(v14);
  swift_release();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v18 = *(_QWORD *)(v8 + 72);
    v26 = v15;
    swift_bridgeObjectRetain(v15);
    v19 = _swiftEmptyArrayStorage;
    v27 = v3;
    v20 = v29;
    do
    {
      sub_10000735C(v17, (uint64_t)v13, &qword_1006588F0);
      sub_10000735C((uint64_t)v13, (uint64_t)v10, &qword_1006588F0);
      sub_100383420((uint64_t)v10, (uint64_t)v2);
      sub_1000073A0((uint64_t)v13, &qword_1006588F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v2, 1, v3) == 1)
      {
        sub_1000073A0((uint64_t)v2, &qword_1006589A0);
      }
      else
      {
        v21 = v28;
        sub_10001F580((uint64_t)v2, v28, type metadata accessor for TTRRemindersListUncommittedReminder);
        sub_10001F580(v21, v30, type metadata accessor for TTRRemindersListUncommittedReminder);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = (_QWORD *)sub_100455A70(0, v19[2] + 1, 1, (unint64_t)v19);
        v23 = v19[2];
        v22 = v19[3];
        if (v23 >= v22 >> 1)
          v19 = (_QWORD *)sub_100455A70(v22 > 1, v23 + 1, 1, (unint64_t)v19);
        v19[2] = v23 + 1;
        v20 = v29;
        sub_10001F580(v30, (uint64_t)v19+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v29 + 72) * v23, type metadata accessor for TTRRemindersListUncommittedReminder);
        v3 = v27;
      }
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n(v26, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    return _swiftEmptyArrayStorage;
  }
  return v19;
}

uint64_t sub_100383420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a2;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v64 = (uint64_t)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v59 - v9;
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v59 - v15;
  v17 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v17);
  v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v20);
  v22 = (void **)((char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  v25 = (char *)v59 - v24;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v26);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_10001F580((uint64_t)v19, (uint64_t)v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v28 = sub_10002A750(&qword_1006588F0);
    v29 = *(_QWORD *)(a1 + *(int *)(v28 + 52));
    v30 = a1;
    v62 = v29;
    if (v29)
    {
      v61 = a1;
      v31 = *(id *)(v29 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      sub_10001F580((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if (v31)
      {
        swift_retain();
        v60 = v31;
        v32 = objc_msgSend(v31, "objectID");
        if (v32)
        {
          v33 = v32;
          v34 = *v22;
          v59[1] = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
          v35 = v34;
          v36 = v33;
          LOBYTE(v33) = static NSObject.== infix(_:_:)(v36, v35);
          sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

          v30 = v61;
          if ((v33 & 1) != 0)
          {
            v37 = v60;
LABEL_13:
            v39 = v30 + *(int *)(v28 + 56);
            sub_10000735C(v39, (uint64_t)v10, &qword_10064B6B0);
            sub_10000F614((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
            sub_10000F614((uint64_t)v13, (uint64_t)v16, (uint64_t *)&unk_100640EB0);
            v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v16, 1, v3);
            sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
            if (v40 != 1)
            {
              v46 = v63;
              sub_10000735C(v39, v63, &qword_10064B6B0);
              v47 = v64;
              sub_10002B1E8(v30, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v48 = v65;
              sub_10037CD24(v46, v47, v62, v65);

              sub_1000073A0(v30, &qword_1006588F0);
              v49 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
              return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
            }
            if (qword_10063D708 != -1)
              swift_once(&qword_10063D708, sub_10037CC94);
            v41 = type metadata accessor for Logger(0);
            v42 = sub_100012DC4(v41, (uint64_t)qword_1006585A0);
            v43 = Logger.logObject.getter(v42);
            v44 = static os_log_type_t.fault.getter(v43);
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v45 = 0;
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "TTRRemindersListUncommittedReminder: parent should be non-nil", v45, 2u);
              swift_slowDealloc(v45, -1, -1);
            }

            swift_release();
            goto LABEL_26;
          }
        }
        else
        {
          sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v30 = v61;
        }
        v51 = v60;
        if (qword_10063D708 != -1)
          swift_once(&qword_10063D708, sub_10037CC94);
        v52 = type metadata accessor for Logger(0);
        v53 = sub_100012DC4(v52, (uint64_t)qword_1006585A0);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.fault.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v56 = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "TTRRemindersListUncommittedReminder: invalid reminderChangeItem", v56, 2u);
          swift_slowDealloc(v56, -1, -1);
        }
        swift_release();

LABEL_26:
        v38 = v30;
        goto LABEL_27;
      }
      v30 = v61;
    }
    else
    {
      sub_10001F580((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    }
    swift_retain();
    sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v37 = 0;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload)
  {
    v38 = a1;
LABEL_27:
    sub_1000073A0(v38, &qword_1006588F0);
    goto LABEL_28;
  }
  sub_1000073A0(a1, &qword_1006588F0);
  sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_28:
  v57 = v65;
  v58 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
}

_QWORD *sub_100383A18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v2 = v1;
  v33 = sub_10002A750(&qword_1006589A8);
  v4 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v31 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v30 = (char *)v28 - v7;
  v8 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v32 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) < 2uLL)
  {
    swift_bridgeObjectRetain(a1);
  }
  else
  {
    swift_retain();
    v11 = sub_1003937F0(a1, v2);
    swift_release();
    v34 = v11;
    swift_bridgeObjectRetain(v11);
    sub_10037C800((uint64_t *)&v34, &qword_1006589A8, (uint64_t (*)(uint64_t))sub_1003932F4, (uint64_t (*)(_QWORD *))sub_100390134);
    swift_bridgeObjectRelease(v11);
    v12 = v34;
    v13 = v34[2];
    if (v13)
    {
      v34 = _swiftEmptyArrayStorage;
      sub_1003D7FD0(0, v13, 0);
      v14 = (uint64_t)v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v15 = *(_QWORD *)(v4 + 72);
      v28[1] = v12;
      v29 = v15;
      v16 = (uint64_t)v30;
      do
      {
        v17 = (uint64_t)v10;
        sub_10000735C(v14, v16, &qword_1006589A8);
        v18 = *(int *)(v33 + 48);
        v19 = v31;
        v20 = v31 + v18;
        v21 = v16 + v18;
        sub_10002B1E8(v16, v31, type metadata accessor for TTRRemindersListUncommittedReminder);
        v22 = type metadata accessor for IndexPath(0);
        v23 = *(_QWORD *)(v22 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v21, v22);
        v24 = v19;
        v10 = (char *)v17;
        sub_10001F580(v24, v17, type metadata accessor for TTRRemindersListUncommittedReminder);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v22);
        sub_1000073A0(v16, &qword_1006589A8);
        a1 = (uint64_t)v34;
        if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
        {
          sub_1003D7FD0(0, *(_QWORD *)(a1 + 16) + 1, 1);
          a1 = (uint64_t)v34;
        }
        v26 = *(_QWORD *)(a1 + 16);
        v25 = *(_QWORD *)(a1 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1003D7FD0(v25 > 1, v26 + 1, 1);
          a1 = (uint64_t)v34;
        }
        *(_QWORD *)(a1 + 16) = v26 + 1;
        sub_10001F580(v17, a1+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v26, type metadata accessor for TTRRemindersListUncommittedReminder);
        v14 += v29;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      return _swiftEmptyArrayStorage;
    }
  }
  return (_QWORD *)a1;
}

uint64_t sub_100383D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v34 = a2;
  v32 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v32);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v31 - v17;
  sub_10000735C(a1, (uint64_t)v12, &qword_10064B6B0);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v19 = *(_QWORD *)&v12[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
    sub_10000F614((uint64_t)v12, (uint64_t)v18, (uint64_t *)&unk_100640EB0);
  }
  else
  {
    sub_10000F614((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_100640EB0);
    v20 = *(_QWORD *)(v3 + 80);
    swift_retain(v20);
    v21 = TTRMutableTreeStorage.numberOfChildren(of:)(v16);
    swift_release(v20);
    result = sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_100640EB0);
    v19 = v21 - 1;
    if (__OFSUB__(v21, 1))
      goto LABEL_16;
  }
  v23 = *(_QWORD *)(v3 + 80);
  swift_retain(v23);
  v24 = TTRMutableTreeStorage.numberOfChildren(of:)(v18);
  result = swift_release(v23);
  if ((v24 & 0x8000000000000000) == 0)
  {
    if ((v19 & 0x8000000000000000) == 0 && v19 < v24)
    {
      v25 = *(_QWORD *)(v3 + 80);
      swift_retain(v25);
      TTRMutableTreeStorage.child(_:of:)(v19, v18);
      swift_release(v25);
      v26 = *(_QWORD *)(v3 + 80);
      swift_retain(v26);
      v27 = TTRMutableTreeStorage.isTemporary(_:)(v9);
      v28 = swift_release(v26);
      if ((v27 & 1) != 0)
      {
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v28);
        sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
        if (swift_getEnumCaseMultiPayload(v6, v32) <= 2)
        {
          sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          v30 = v34;
          sub_10001F580((uint64_t)v9, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v29 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v30, v29, 1, v33);
        }
        sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_10:
        v29 = 1;
        v30 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v30, v29, 1, v33);
      }
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
    goto LABEL_10;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100384054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  v16 = sub_10002A750(&qword_10064B6B0);
  __chkstk_darwin(v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v18, &qword_10064B6B0);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    v19 = *(_QWORD *)&v18[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
    sub_10000F614((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100640EB0);
    v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v12, 1, v20) == 1)
    {
      sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
      v21 = (uint64_t)v12;
LABEL_15:
      sub_1000073A0(v21, (uint64_t *)&unk_100640EB0);
      goto LABEL_16;
    }
    if (swift_getEnumCaseMultiPayload(v12, v20) == 1)
    {
      sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_retain();
      v22 = TTRMutableTreeStorage.numberOfChildren(of:)(v15);
      swift_release();
      if (v19 != v22)
      {
        v21 = (uint64_t)v15;
        goto LABEL_15;
      }
      v23 = (uint64_t)v15;
      return sub_10000F614(v23, a2, (uint64_t *)&unk_100640EB0);
    }
    sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_10000F614((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
    sub_10000735C((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100640EB0);
    v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20) == 1)
    {
      sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
      v21 = (uint64_t)v6;
      goto LABEL_15;
    }
    if (swift_getEnumCaseMultiPayload(v6, v20) == 1)
    {
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v23 = (uint64_t)v9;
      return sub_10000F614(v23, a2, (uint64_t *)&unk_100640EB0);
    }
    sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
LABEL_16:
  type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

void *sub_100384390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __n128 v58;
  _QWORD *v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id *v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int EnumCaseMultiPayload;
  uint64_t v84;
  void **v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  char *v90;
  void *v91;
  id v92;
  uint64_t v93;
  char *v94;
  _QWORD v96[4];
  __n128 v97;
  char *v98;
  void **v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  __n128 v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  _QWORD *v118;
  _BYTE *v119;
  uint64_t v120;
  _QWORD *v121;
  void *v122;

  v106 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v106);
  v105 = (char *)v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v4);
  v116 = (char *)v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v115 = (char *)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v113 = *(_QWORD *)(v8 - 8);
  v114 = v8;
  __chkstk_darwin(v8);
  v100 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_1006588E8);
  __chkstk_darwin(v10);
  v12 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v13);
  v104.n128_u64[0] = (unint64_t)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem(0);
  __chkstk_darwin(v15);
  v17 = (char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v112 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v99 = (void **)((char *)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = __chkstk_darwin(v19);
  v23 = (id *)((char *)v96 - v22);
  v24 = __chkstk_darwin(v21);
  v111 = (uint64_t)v96 - v25;
  __chkstk_darwin(v24);
  v103 = (char *)v96 - v26;
  v27 = sub_10002A750(&qword_1006588F0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v29);
  v110 = (char *)v96 - v33;
  v34 = __chkstk_darwin(v32);
  v98 = (char *)v96 - v35;
  __chkstk_darwin(v34);
  v37 = (char *)v96 - v36;
  v122 = &_swiftEmptySetSingleton;
  v121 = _swiftEmptyArrayStorage;
  v107 = v1;
  v38 = *(_QWORD *)(v1 + 80);
  v39 = swift_retain(v38);
  v40 = TTRMutableTreeStorage.temporaryNodeValues.getter(v39);
  v41 = swift_release(v38);
  v42 = v40;
  v43 = *(_QWORD *)(v40 + 16);
  v108 = a1;
  if (v43)
  {
    v96[3] = v31;
    v102 = a1 + 96;
    v44 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v96[1] = v42;
    v101 = v44;
    v96[2] = v28;
    v118 = *(_QWORD **)(v28 + 72);
    v41.n128_u64[0] = 138412290;
    v97 = v41;
    v109 = v15;
    v117 = v17;
    v45 = sub_10000735C(v42 + v44, (uint64_t)v37, &qword_1006588F0);
    TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter(v45);
    v46 = (char *)&loc_1003847A0 + dword_1003854EC[swift_getEnumCaseMultiPayload(v17, v15)];
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v42);
  sub_10037C800((uint64_t *)&v121, &qword_1006588F0, (uint64_t (*)(uint64_t))sub_1002B3784, sub_100390B34);
  v47 = v121[2];
  if (v47)
  {
    v48 = (uint64_t)v121 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v49 = *(_QWORD *)(v28 + 72);
    v118 = v121;
    swift_bridgeObjectRetain(v121);
    v50 = v108;
    do
    {
      sub_10000735C(v48, (uint64_t)v31, &qword_1006588F0);
      v51 = *(_QWORD *)(v50 + 80);
      swift_retain(v51);
      TTRMutableTreeStorage.insertTemporaryItem(with:)(v31);
      swift_release(v51);
      sub_1000073A0((uint64_t)v12, &qword_1006588E8);
      sub_1000073A0((uint64_t)v31, &qword_1006588F0);
      v48 += v49;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease(v118);
  }
  v52 = v107;
  swift_beginAccess(v107 + 88, &v120, 0, 0);
  v53 = *(char **)(v52 + 88);
  v54 = *((_QWORD *)v53 + 7);
  v109 = (uint64_t)(v53 + 56);
  v55 = 1 << v53[32];
  v56 = -1;
  if (v55 < 64)
    v56 = ~(-1 << v55);
  v57 = v56 & v54;
  v110 = (char *)((unint64_t)(v55 + 63) >> 6);
  v117 = v53;
  v58 = swift_bridgeObjectRetain(v53);
  v59 = 0;
  v60 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID;
  v58.n128_u64[0] = 138412290;
  v104 = v58;
  v61 = v108;
  v62 = (uint64_t)v100;
  while (v57)
  {
    v63 = __clz(__rbit64(v57));
    v57 &= v57 - 1;
    v118 = v59;
    v64 = v63 | ((_QWORD)v59 << 6);
LABEL_27:
    v69 = v111;
    sub_10002B1E8(*((_QWORD *)v117 + 6) + *(_QWORD *)(v112 + 72) * v64, v111, v60);
    sub_10001F580(v69, (uint64_t)v23, v60);
    sub_10002B1E8((uint64_t)v23, v62, v60);
    v70 = v23;
    v71 = v114;
    swift_storeEnumTagMultiPayload(v62, v114, 2);
    v72 = v60;
    v73 = *(_QWORD *)(v61 + 80);
    v74 = swift_retain(v73);
    v75 = (uint64_t)v116;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v74);
    v76 = v62;
    v77 = (uint64_t)v115;
    TTRMutableTreeStorage.item(withID:)(v75);
    sub_10001F544(v75, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    LODWORD(v69) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v77, 1, v71);
    sub_1000073A0(v77, (uint64_t *)&unk_100640EB0);
    swift_release(v73);
    if ((_DWORD)v69 == 1)
    {
      sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v70, v72);
      v23 = v70;
      v62 = v76;
      v60 = v72;
      v59 = v118;
    }
    else
    {
      v78 = *(_QWORD *)(v107 + 80);
      swift_retain(v78);
      TTRMutableTreeStorage.auxiliaryData(for:)(&v119, v76);
      swift_release(v78);
      v79 = v119;
      v62 = v76;
      if (v119 == (_BYTE *)1)
      {
        sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v23 = v70;
        v80 = (uint64_t)v70;
        goto LABEL_34;
      }
      v23 = v70;
      if (v119)
      {
        v81 = swift_retain(v119);
        v82 = (uint64_t)v105;
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v81);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v82, v106);
        if ((EnumCaseMultiPayload - 1) < 2)
        {
          sub_10001F544(v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          v60 = v72;
          goto LABEL_39;
        }
        if (!EnumCaseMultiPayload)
          sub_10001F544(v82, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        v60 = v72;
        if (v79[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState] != 1)
        {
          if (!v79[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState])
LABEL_39:
            sub_10037FD64((uint64_t)v79, v62);
          sub_100390124((uint64_t)v79);
          goto LABEL_41;
        }
        sub_1000176A0((Swift::Int *)&v119, *v70);

        if (qword_10063D708 != -1)
          swift_once(&qword_10063D708, sub_10037CC94);
        v84 = type metadata accessor for Logger(0);
        sub_100012DC4(v84, (uint64_t)qword_1006585A0);
        v85 = v99;
        v86 = sub_10002B1E8((uint64_t)v70, (uint64_t)v99, v72);
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = swift_slowAlloc(12, -1);
          v90 = (char *)swift_slowAlloc(8, -1);
          v103 = v90;
          *(_DWORD *)v89 = v104.n128_u32[0];
          v91 = *v85;
          *(_QWORD *)(v89 + 4) = *v85;
          *(_QWORD *)v90 = v91;
          v92 = v91;
          sub_10001F544((uint64_t)v85, v60);
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Removing disposable editingSessionState at model update {objectID: %@}", (uint8_t *)v89, 0xCu);
          v93 = sub_10002A750(&qword_100642D60);
          v94 = v103;
          swift_arrayDestroy(v103, 1, v93);
          swift_slowDealloc(v94, -1, -1);
          swift_slowDealloc(v89, -1, -1);

          sub_100390124((uint64_t)v79);
        }
        else
        {

          sub_100390124((uint64_t)v79);
          sub_10001F544((uint64_t)v85, v72);
        }
        v62 = (uint64_t)v100;
LABEL_41:
        v59 = v118;
        sub_100390124((uint64_t)v79);
        sub_10001F544(v62, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544((uint64_t)v70, v60);
        v61 = v108;
      }
      else
      {
        sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v80 = (uint64_t)v70;
LABEL_34:
        v60 = v72;
        sub_10001F544(v80, v72);
        v61 = v108;
        v59 = v118;
      }
    }
  }
  v65 = (uint64_t)v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v65 >= (uint64_t)v110)
    goto LABEL_48;
  v66 = *(_QWORD *)(v109 + 8 * v65);
  v67 = (uint64_t)v59 + 1;
  if (v66)
    goto LABEL_26;
  v67 = (uint64_t)v59 + 2;
  if ((uint64_t)((char *)v59 + 2) >= (uint64_t)v110)
    goto LABEL_48;
  v66 = *(_QWORD *)(v109 + 8 * v67);
  if (v66)
    goto LABEL_26;
  v67 = (uint64_t)v59 + 3;
  if ((uint64_t)((char *)v59 + 3) >= (uint64_t)v110)
    goto LABEL_48;
  v66 = *(_QWORD *)(v109 + 8 * v67);
  if (v66)
  {
LABEL_26:
    v57 = (v66 - 1) & v66;
    v118 = (_QWORD *)v67;
    v64 = __clz(__rbit64(v66)) + (v67 << 6);
    goto LABEL_27;
  }
  v68 = (uint64_t)v59 + 4;
  if ((uint64_t)((char *)v59 + 4) < (uint64_t)v110)
  {
    v66 = *(_QWORD *)(v109 + 8 * v68);
    if (!v66)
    {
      while (1)
      {
        v67 = v68 + 1;
        if (__OFADD__(v68, 1))
          break;
        if (v67 >= (uint64_t)v110)
          goto LABEL_48;
        v66 = *(_QWORD *)(v109 + 8 * v67);
        ++v68;
        if (v66)
          goto LABEL_26;
      }
LABEL_50:
      __break(1u);
      JUMPOUT(0x1003854ECLL);
    }
    v67 = (uint64_t)v59 + 4;
    goto LABEL_26;
  }
LABEL_48:
  swift_release(v117);
  swift_bridgeObjectRelease(v121);
  return v122;
}

BOOL sub_100385514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _BOOL8 result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10002A750(&qword_100658940);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v11[*(int *)(v12 + 48)];
  sub_10002B1E8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8(a2, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  if (swift_getEnumCaseMultiPayload(v11, v14) == 2
    && swift_getEnumCaseMultiPayload(v13, v14) == 2)
  {
    sub_10001F580(v13, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    v15 = *v8;
    v16 = sub_10037B2EC(v15, a3);

    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((v16 & 1) != 0)
      return 0;
  }
  else
  {
    v17 = static TTRRemindersListViewModel.Item.contentsEqual(_:_:)(a1, a2);
    sub_1000073A0((uint64_t)v11, &qword_100658940);
    if ((v17 & 1) == 0)
      return 0;
  }
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(&v26, a1);
  swift_release();
  v18 = v26;
  if (v26 == 1)
    return 1;
  v19 = v27;
  v20 = v28;
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)(&v26, a2);
  swift_release();
  v21 = v26;
  if (v26 == 1)
  {
    sub_100390124(v18);
    return 1;
  }
  v23 = v27;
  v24 = v28;
  sub_100390124(v18);
  sub_100390124(v21);
  if ((v20 & 1) != 0)
    return (v24 & 1) != 0;
  result = 0;
  if ((v24 & 1) == 0 && v19 == v23)
    return 1;
  return result;
}

uint64_t sub_100385778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = swift_retain(v1);
  v3 = TTRMutableTreeStorage.debugTreeDescription.getter(v2);
  swift_release(v1);
  return v3;
}

uint64_t type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider()
{
  return objc_opt_self(_TtC9Reminders46TTRRemindersListObjectIDOnlyReminderIDProvider);
}

id sub_1003857E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  id v7;

  v7 = a1;
  v1 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v7, v3);
  return v7;
}

uint64_t type metadata accessor for TTRRemindersListObjectIDAndSectionIDCombinedReminderIDProvider()
{
  return objc_opt_self(_TtC9Reminders62TTRRemindersListObjectIDAndSectionIDCombinedReminderIDProvider);
}

void **sub_10038589C(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  void *v17;
  id v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(void **, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(void **, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(void **, uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  __n128 v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  int v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  void *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  id v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  id v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  void **v194;
  void **v195;
  uint64_t v196;
  void *v197;
  id v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  id v204;
  void **v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  void **v210;
  void **v211;
  uint64_t v212;
  uint64_t v213;
  unsigned int (*v214)(void **, uint64_t, uint64_t);
  id v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  void **v219;
  void **v220;
  uint64_t v221;
  uint64_t v222;
  unsigned int (*v223)(void **, uint64_t, uint64_t);
  id v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  void **v228;
  void **v229;
  uint64_t v230;
  uint64_t v231;
  unsigned int (*v232)(void **, uint64_t, uint64_t);
  id v233;
  uint64_t v234;
  void *v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  id v250;
  void **v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  id v255;
  void **v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  id v260;
  void **v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  char *v266;
  void **v267;
  uint64_t v268;
  void (*v269)(char *, char *, uint64_t, __n128);
  __n128 v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  _QWORD *v274;
  uint64_t v275;
  void *v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  id v286;
  void *v287;
  id v288;
  int *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  void *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unsigned __int8 v299;
  int v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void *v313;
  id v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  id v321;
  void *v322;
  id v323;
  int *v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  void *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  int v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  uint64_t v340;
  void *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  id v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  void *v355;
  id v356;
  void *v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  id v364;
  void *v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  id v373;
  void *v374;
  id v375;
  uint64_t v376;
  char *v377;
  unsigned __int8 v378;
  char v379;
  void **v380;
  uint64_t v381;
  char v382;
  unsigned __int8 v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  void **v388;
  void **v389;
  void **v390;
  void **v391;
  void **v392;
  void **v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(v3, v7))
    {
      case 0u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v394 = v7;
        v385 = v6;
        switch(swift_getEnumCaseMultiPayload(v3, v8))
        {
          case 1u:
            v9 = *v3;
            *a1 = *v3;
            v10 = v9;
            v11 = a1;
            v12 = v8;
            v13 = 1;
            goto LABEL_44;
          case 2u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, v3, v96);
            v11 = a1;
            v12 = v8;
            v13 = 2;
            goto LABEL_44;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, v3, v97);
            v11 = a1;
            v12 = v8;
            v13 = 3;
            goto LABEL_44;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, v3, v98);
            v11 = a1;
            v12 = v8;
            v13 = 4;
            goto LABEL_44;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, v3, v99);
            v11 = a1;
            v12 = v8;
            v13 = 5;
            goto LABEL_44;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, v3, v100);
            v11 = a1;
            v12 = v8;
            v13 = 6;
            goto LABEL_44;
          case 8u:
            v101 = *v3;
            *a1 = *v3;
            v102 = v101;
            v11 = a1;
            v12 = v8;
            v13 = 8;
            goto LABEL_44;
          case 9u:
            v103 = *v3;
            *a1 = *v3;
            v104 = v103;
            v11 = a1;
            v12 = v8;
            v13 = 9;
LABEL_44:
            swift_storeEnumTagMultiPayload(v11, v12, v13);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
        v105 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v106 = v105[5];
        v107 = (char *)a1 + v106;
        v108 = (char *)v3 + v106;
        v109 = *(uint64_t *)((char *)v3 + v106 + 8);
        if (v109)
        {
          v390 = a1;
          *(_QWORD *)v107 = *(_QWORD *)v108;
          *((_QWORD *)v107 + 1) = v109;
          v110 = (void *)*((_QWORD *)v108 + 2);
          v111 = *((_QWORD *)v108 + 3);
          v112 = *((_QWORD *)v108 + 4);
          v113 = *((_QWORD *)v108 + 5);
          v114 = *((_QWORD *)v108 + 6);
          v115 = *((_QWORD *)v108 + 7);
          v378 = v108[64];
          swift_bridgeObjectRetain(v109);
          sub_10003E1F0(v110, v111, v112, v113, v114, v115, v378);
          *((_QWORD *)v107 + 2) = v110;
          *((_QWORD *)v107 + 3) = v111;
          *((_QWORD *)v107 + 4) = v112;
          *((_QWORD *)v107 + 5) = v113;
          *((_QWORD *)v107 + 6) = v114;
          *((_QWORD *)v107 + 7) = v115;
          v107[64] = v378;
          *(_DWORD *)(v107 + 65) = *(_DWORD *)(v108 + 65);
          v116 = v108[120];
          if (v116 == 255)
          {
            v117 = *(_OWORD *)(v108 + 88);
            *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
            *(_OWORD *)(v107 + 88) = v117;
            *(_OWORD *)(v107 + 104) = *(_OWORD *)(v108 + 104);
            v107[120] = v108[120];
          }
          else
          {
            v379 = v116 & 1;
            v121 = (void *)*((_QWORD *)v108 + 9);
            v122 = *((_QWORD *)v108 + 10);
            v123 = *((_QWORD *)v108 + 11);
            v124 = *((_QWORD *)v108 + 12);
            v125 = *((_QWORD *)v108 + 13);
            v126 = *((_QWORD *)v108 + 14);
            sub_10002B764(v121, v122, v123, v124, v125, v126, v116 & 1);
            *((_QWORD *)v107 + 9) = v121;
            *((_QWORD *)v107 + 10) = v122;
            *((_QWORD *)v107 + 11) = v123;
            *((_QWORD *)v107 + 12) = v124;
            *((_QWORD *)v107 + 13) = v125;
            *((_QWORD *)v107 + 14) = v126;
            v107[120] = v379;
          }
          a1 = v390;
          v7 = v394;
          v6 = v385;
          v107[121] = v108[121];
        }
        else
        {
          v118 = *((_OWORD *)v108 + 5);
          *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
          *((_OWORD *)v107 + 5) = v118;
          *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
          *(_OWORD *)(v107 + 106) = *(_OWORD *)(v108 + 106);
          v119 = *((_OWORD *)v108 + 1);
          *(_OWORD *)v107 = *(_OWORD *)v108;
          *((_OWORD *)v107 + 1) = v119;
          v120 = *((_OWORD *)v108 + 3);
          *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
          *((_OWORD *)v107 + 3) = v120;
        }
        *((_BYTE *)a1 + v105[6]) = *((_BYTE *)v3 + v105[6]);
        *((_BYTE *)a1 + v105[7]) = *((_BYTE *)v3 + v105[7]);
        *((_BYTE *)a1 + v105[8]) = *((_BYTE *)v3 + v105[8]);
        *((_BYTE *)a1 + v105[9]) = *((_BYTE *)v3 + v105[9]);
        *((_BYTE *)a1 + v105[10]) = *((_BYTE *)v3 + v105[10]);
        v127 = v105[11];
        v128 = *(void **)((char *)v3 + v127);
        *(void **)((char *)a1 + v127) = v128;
        v129 = v128;
        v51 = a1;
        v52 = v7;
        v53 = 0;
        goto LABEL_101;
      case 1u:
        v16 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v395 = v7;
        v386 = v6;
        switch(swift_getEnumCaseMultiPayload(v3, v16))
        {
          case 1u:
            v17 = *v3;
            *a1 = *v3;
            v18 = v17;
            v19 = a1;
            v20 = v16;
            v21 = 1;
            goto LABEL_60;
          case 2u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(a1, v3, v130);
            v19 = a1;
            v20 = v16;
            v21 = 2;
            goto LABEL_60;
          case 3u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(a1, v3, v131);
            v19 = a1;
            v20 = v16;
            v21 = 3;
            goto LABEL_60;
          case 4u:
            v132 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, v3, v132);
            v19 = a1;
            v20 = v16;
            v21 = 4;
            goto LABEL_60;
          case 5u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, v3, v133);
            v19 = a1;
            v20 = v16;
            v21 = 5;
            goto LABEL_60;
          case 6u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, v3, v134);
            v19 = a1;
            v20 = v16;
            v21 = 6;
            goto LABEL_60;
          case 8u:
            v135 = *v3;
            *a1 = *v3;
            v136 = v135;
            v19 = a1;
            v20 = v16;
            v21 = 8;
            goto LABEL_60;
          case 9u:
            v137 = *v3;
            *a1 = *v3;
            v138 = v137;
            v19 = a1;
            v20 = v16;
            v21 = 9;
LABEL_60:
            swift_storeEnumTagMultiPayload(v19, v20, v21);
            break;
          default:
            memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        v139 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v140 = v139[5];
        v141 = (char *)a1 + v140;
        v142 = (char *)v3 + v140;
        v143 = *(uint64_t *)((char *)v3 + v140 + 8);
        if (v143)
        {
          v380 = v3;
          v391 = a1;
          *(_QWORD *)v141 = *(_QWORD *)v142;
          *((_QWORD *)v141 + 1) = v143;
          v144 = (void *)*((_QWORD *)v142 + 2);
          v145 = *((_QWORD *)v142 + 3);
          v146 = *((_QWORD *)v142 + 4);
          v147 = *((_QWORD *)v142 + 5);
          v148 = *((_QWORD *)v142 + 6);
          v149 = *((_QWORD *)v142 + 7);
          v150 = v142[64];
          swift_bridgeObjectRetain(v143);
          sub_10003E1F0(v144, v145, v146, v147, v148, v149, v150);
          *((_QWORD *)v141 + 2) = v144;
          *((_QWORD *)v141 + 3) = v145;
          *((_QWORD *)v141 + 4) = v146;
          *((_QWORD *)v141 + 5) = v147;
          *((_QWORD *)v141 + 6) = v148;
          *((_QWORD *)v141 + 7) = v149;
          v141[64] = v150;
          *(_DWORD *)(v141 + 65) = *(_DWORD *)(v142 + 65);
          v151 = v142[120];
          if (v151 == 255)
          {
            v152 = *(_OWORD *)(v142 + 88);
            *(_OWORD *)(v141 + 72) = *(_OWORD *)(v142 + 72);
            *(_OWORD *)(v141 + 88) = v152;
            *(_OWORD *)(v141 + 104) = *(_OWORD *)(v142 + 104);
            v141[120] = v142[120];
          }
          else
          {
            v156 = (void *)*((_QWORD *)v142 + 9);
            v157 = *((_QWORD *)v142 + 10);
            v158 = *((_QWORD *)v142 + 11);
            v159 = *((_QWORD *)v142 + 12);
            v160 = *((_QWORD *)v142 + 13);
            v161 = *((_QWORD *)v142 + 14);
            v162 = v151 & 1;
            sub_10002B764(v156, v157, v158, v159, v160, v161, v151 & 1);
            *((_QWORD *)v141 + 9) = v156;
            *((_QWORD *)v141 + 10) = v157;
            *((_QWORD *)v141 + 11) = v158;
            *((_QWORD *)v141 + 12) = v159;
            *((_QWORD *)v141 + 13) = v160;
            *((_QWORD *)v141 + 14) = v161;
            v141[120] = v162;
          }
          a1 = v391;
          v7 = v395;
          v3 = v380;
          v6 = v386;
          v141[121] = v142[121];
        }
        else
        {
          v153 = *((_OWORD *)v142 + 5);
          *((_OWORD *)v141 + 4) = *((_OWORD *)v142 + 4);
          *((_OWORD *)v141 + 5) = v153;
          *((_OWORD *)v141 + 6) = *((_OWORD *)v142 + 6);
          *(_OWORD *)(v141 + 106) = *(_OWORD *)(v142 + 106);
          v154 = *((_OWORD *)v142 + 1);
          *(_OWORD *)v141 = *(_OWORD *)v142;
          *((_OWORD *)v141 + 1) = v154;
          v155 = *((_OWORD *)v142 + 3);
          *((_OWORD *)v141 + 2) = *((_OWORD *)v142 + 2);
          *((_OWORD *)v141 + 3) = v155;
        }
        *((_BYTE *)a1 + v139[6]) = *((_BYTE *)v3 + v139[6]);
        *((_BYTE *)a1 + v139[7]) = *((_BYTE *)v3 + v139[7]);
        *((_BYTE *)a1 + v139[8]) = *((_BYTE *)v3 + v139[8]);
        *((_BYTE *)a1 + v139[9]) = *((_BYTE *)v3 + v139[9]);
        *((_BYTE *)a1 + v139[10]) = *((_BYTE *)v3 + v139[10]);
        v163 = v139[11];
        v164 = *(void **)((char *)v3 + v163);
        *(void **)((char *)a1 + v163) = v164;
        v165 = v164;
        v51 = a1;
        v52 = v7;
        v53 = 1;
        goto LABEL_101;
      case 2u:
        v22 = *v3;
        *a1 = *v3;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (void **)((char *)a1 + v23);
        v25 = (void **)((char *)v3 + v23);
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
        v29 = v22;
        if (v28(v25, 1, v26))
        {
          v30 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 1u:
              v66 = *v25;
              *v24 = *v25;
              v67 = v66;
              v68 = v24;
              v69 = v26;
              v70 = 1;
              goto LABEL_76;
            case 2u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v24, v25, v166);
              v68 = v24;
              v69 = v26;
              v70 = 2;
              goto LABEL_76;
            case 3u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v24, v25, v167);
              v68 = v24;
              v69 = v26;
              v70 = 3;
              goto LABEL_76;
            case 4u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v24, v25, v168);
              v68 = v24;
              v69 = v26;
              v70 = 4;
              goto LABEL_76;
            case 5u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v24, v25, v169);
              v68 = v24;
              v69 = v26;
              v70 = 5;
              goto LABEL_76;
            case 6u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v24, v25, v170);
              v68 = v24;
              v69 = v26;
              v70 = 6;
              goto LABEL_76;
            case 8u:
              v171 = *v25;
              *v24 = *v25;
              v172 = v171;
              v68 = v24;
              v69 = v26;
              v70 = 8;
              goto LABEL_76;
            case 9u:
              v173 = *v25;
              *v24 = *v25;
              v174 = v173;
              v68 = v24;
              v69 = v26;
              v70 = 9;
LABEL_76:
              swift_storeEnumTagMultiPayload(v68, v69, v70);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v51 = a1;
        v52 = v7;
        v53 = 2;
        goto LABEL_101;
      case 3u:
        v31 = *v3;
        *a1 = *v3;
        v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v33 = (void **)((char *)a1 + v32);
        v34 = (void **)((char *)v3 + v32);
        v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v36 = *(_QWORD *)(v35 - 8);
        v37 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v36 + 48);
        v38 = v31;
        if (v37(v34, 1, v35))
        {
          v39 = sub_10002A750(&qword_100644980);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v34, v35))
          {
            case 1u:
              v71 = *v34;
              *v33 = *v34;
              v72 = v71;
              v73 = v33;
              v74 = v35;
              v75 = 1;
              goto LABEL_98;
            case 2u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v33, v34, v175);
              v73 = v33;
              v74 = v35;
              v75 = 2;
              goto LABEL_98;
            case 3u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v33, v34, v176);
              v73 = v33;
              v74 = v35;
              v75 = 3;
              goto LABEL_98;
            case 4u:
              v177 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v33, v34, v177);
              v73 = v33;
              v74 = v35;
              v75 = 4;
              goto LABEL_98;
            case 5u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v33, v34, v192);
              v73 = v33;
              v74 = v35;
              v75 = 5;
              goto LABEL_98;
            case 6u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v33, v34, v178);
              v73 = v33;
              v74 = v35;
              v75 = 6;
              goto LABEL_98;
            case 8u:
              v179 = *v34;
              *v33 = *v34;
              v180 = v179;
              v73 = v33;
              v74 = v35;
              v75 = 8;
              goto LABEL_98;
            case 9u:
              v181 = *v34;
              *v33 = *v34;
              v182 = v181;
              v73 = v33;
              v74 = v35;
              v75 = 9;
LABEL_98:
              swift_storeEnumTagMultiPayload(v73, v74, v75);
              break;
            default:
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v51 = a1;
        v52 = v7;
        v53 = 3;
        goto LABEL_101;
      case 4u:
        v40 = *v3;
        *a1 = *v3;
        v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v42 = (void **)((char *)a1 + v41);
        v43 = (void **)((char *)v3 + v41);
        v44 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
        v47 = v40;
        if (v46(v43, 1, v44))
        {
          v48 = sub_10002A750(&qword_100644980);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v43, v44))
          {
            case 1u:
              v76 = *v43;
              *v42 = *v43;
              v77 = v76;
              v78 = v42;
              v79 = v44;
              v80 = 1;
              goto LABEL_94;
            case 2u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v42, v43, v183);
              v78 = v42;
              v79 = v44;
              v80 = 2;
              goto LABEL_94;
            case 3u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v42, v43, v184);
              v78 = v42;
              v79 = v44;
              v80 = 3;
              goto LABEL_94;
            case 4u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v42, v43, v185);
              v78 = v42;
              v79 = v44;
              v80 = 4;
              goto LABEL_94;
            case 5u:
              v186 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v42, v43, v186);
              v78 = v42;
              v79 = v44;
              v80 = 5;
              goto LABEL_94;
            case 6u:
              v187 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v42, v43, v187);
              v78 = v42;
              v79 = v44;
              v80 = 6;
              goto LABEL_94;
            case 8u:
              v188 = *v43;
              *v42 = *v43;
              v189 = v188;
              v78 = v42;
              v79 = v44;
              v80 = 8;
              goto LABEL_94;
            case 9u:
              v190 = *v43;
              *v42 = *v43;
              v191 = v190;
              v78 = v42;
              v79 = v44;
              v80 = 9;
LABEL_94:
              swift_storeEnumTagMultiPayload(v78, v79, v80);
              break;
            default:
              memcpy(v42, v43, *(_QWORD *)(v45 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        v51 = a1;
        v52 = v7;
        v53 = 4;
        goto LABEL_101;
      case 5u:
        *a1 = *v3;
        *((_BYTE *)a1 + 8) = *((_BYTE *)v3 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
        v49 = v3[2];
        a1[2] = v49;
        v50 = v49;
        v51 = a1;
        v52 = v7;
        v53 = 5;
        goto LABEL_101;
      case 6u:
        v61 = *v3;
        *a1 = *v3;
        v62 = v61;
        v51 = a1;
        v52 = v7;
        v53 = 6;
        goto LABEL_101;
      case 7u:
        v54 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v55 = *(_QWORD *)(v54 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v55 + 48))(v3, 1, v54))
        {
          v56 = sub_10002A750(&qword_100644600);
          memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v81 = *v3;
          *a1 = *v3;
          v82 = *(int *)(v54 + 20);
          v377 = (char *)a1 + v82;
          v83 = (char *)v3 + v82;
          v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v85 = v6;
          v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
          v87 = swift_bridgeObjectRetain(v81);
          v86(v377, v83, v84, v87);
          v6 = v85;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v55 + 56))(a1, 0, 1, v54);
        }
        v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v89 = (void **)((char *)a1 + v88);
        v90 = (void **)((char *)v3 + v88);
        v91 = v90[1];
        if (v91)
        {
          *v89 = *v90;
          v89[1] = v91;
          v92 = (void *)v90[2];
          v89[2] = v92;
          swift_bridgeObjectRetain(v91);
          v93 = v92;
        }
        else
        {
          *(_OWORD *)v89 = *(_OWORD *)v90;
          v89[2] = v90[2];
        }
        v51 = a1;
        v52 = v7;
        v53 = 7;
        goto LABEL_101;
      case 8u:
        v63 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48))(v3, 1, v63))
        {
          v65 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v94 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, v3, v94);
          *((_BYTE *)a1 + *(int *)(v63 + 20)) = *((_BYTE *)v3 + *(int *)(v63 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v64 + 56))(a1, 0, 1, v63);
        }
        v95 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)a1 + *(int *)(v95 + 20)) = *(void **)((char *)v3 + *(int *)(v95 + 20));
        v51 = a1;
        v52 = v7;
        v53 = 8;
        goto LABEL_101;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)v3;
        v57 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v58 = (char *)a1 + v57;
        v59 = (char *)v3 + v57;
        v60 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
        v51 = a1;
        v52 = v7;
        v53 = 9;
LABEL_101:
        swift_storeEnumTagMultiPayload(v51, v52, v53);
        break;
      default:
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v193 = *(int *)(v6 + 20);
    v194 = (void **)((char *)a1 + v193);
    v195 = (void **)((char *)v3 + v193);
    switch(swift_getEnumCaseMultiPayload(v195, v7))
    {
      case 0u:
        v196 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v392 = a1;
        v396 = v7;
        switch(swift_getEnumCaseMultiPayload(v195, v196))
        {
          case 1u:
            v197 = *v195;
            *v194 = *v195;
            v198 = v197;
            v199 = v194;
            v200 = v196;
            v201 = 1;
            goto LABEL_142;
          case 2u:
            v280 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(v194, v195, v280);
            v199 = v194;
            v200 = v196;
            v201 = 2;
            goto LABEL_142;
          case 3u:
            v281 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v281 - 8) + 16))(v194, v195, v281);
            v199 = v194;
            v200 = v196;
            v201 = 3;
            goto LABEL_142;
          case 4u:
            v282 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v282 - 8) + 16))(v194, v195, v282);
            v199 = v194;
            v200 = v196;
            v201 = 4;
            goto LABEL_142;
          case 5u:
            v283 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v283 - 8) + 16))(v194, v195, v283);
            v199 = v194;
            v200 = v196;
            v201 = 5;
            goto LABEL_142;
          case 6u:
            v284 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(v194, v195, v284);
            v199 = v194;
            v200 = v196;
            v201 = 6;
            goto LABEL_142;
          case 8u:
            v285 = *v195;
            *v194 = *v195;
            v286 = v285;
            v199 = v194;
            v200 = v196;
            v201 = 8;
            goto LABEL_142;
          case 9u:
            v287 = *v195;
            *v194 = *v195;
            v288 = v287;
            v199 = v194;
            v200 = v196;
            v201 = 9;
LABEL_142:
            swift_storeEnumTagMultiPayload(v199, v200, v201);
            break;
          default:
            memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
            break;
        }
        v289 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v290 = v289[5];
        v291 = (char *)v194 + v290;
        v292 = (char *)v195 + v290;
        v293 = *(uint64_t *)((char *)v195 + v290 + 8);
        if (v293)
        {
          v388 = v194;
          *(_QWORD *)v291 = *(_QWORD *)v292;
          *((_QWORD *)v291 + 1) = v293;
          v294 = (void *)*((_QWORD *)v292 + 2);
          v295 = *((_QWORD *)v292 + 3);
          v296 = *((_QWORD *)v292 + 4);
          v297 = *((_QWORD *)v292 + 5);
          v298 = *((_QWORD *)v292 + 6);
          v381 = *((_QWORD *)v292 + 7);
          v299 = v292[64];
          swift_bridgeObjectRetain(v293);
          sub_10003E1F0(v294, v295, v296, v297, v298, v381, v299);
          *((_QWORD *)v291 + 2) = v294;
          *((_QWORD *)v291 + 3) = v295;
          *((_QWORD *)v291 + 4) = v296;
          *((_QWORD *)v291 + 5) = v297;
          *((_QWORD *)v291 + 6) = v298;
          *((_QWORD *)v291 + 7) = v381;
          v291[64] = v299;
          *(_DWORD *)(v291 + 65) = *(_DWORD *)(v292 + 65);
          v300 = v292[120];
          if (v300 == 255)
          {
            v301 = *(_OWORD *)(v292 + 88);
            *(_OWORD *)(v291 + 72) = *(_OWORD *)(v292 + 72);
            *(_OWORD *)(v291 + 88) = v301;
            *(_OWORD *)(v291 + 104) = *(_OWORD *)(v292 + 104);
            v291[120] = v292[120];
          }
          else
          {
            v382 = v300 & 1;
            v306 = (void *)*((_QWORD *)v292 + 9);
            v307 = *((_QWORD *)v292 + 10);
            v308 = *((_QWORD *)v292 + 11);
            v309 = *((_QWORD *)v292 + 12);
            v310 = *((_QWORD *)v292 + 13);
            v311 = *((_QWORD *)v292 + 14);
            sub_10002B764(v306, v307, v308, v309, v310, v311, v300 & 1);
            *((_QWORD *)v291 + 9) = v306;
            *((_QWORD *)v291 + 10) = v307;
            *((_QWORD *)v291 + 11) = v308;
            *((_QWORD *)v291 + 12) = v309;
            *((_QWORD *)v291 + 13) = v310;
            *((_QWORD *)v291 + 14) = v311;
            v291[120] = v382;
          }
          a1 = v392;
          v305 = v396;
          v291[121] = v292[121];
          v194 = v388;
        }
        else
        {
          v302 = *((_OWORD *)v292 + 5);
          *((_OWORD *)v291 + 4) = *((_OWORD *)v292 + 4);
          *((_OWORD *)v291 + 5) = v302;
          *((_OWORD *)v291 + 6) = *((_OWORD *)v292 + 6);
          *(_OWORD *)(v291 + 106) = *(_OWORD *)(v292 + 106);
          v303 = *((_OWORD *)v292 + 1);
          *(_OWORD *)v291 = *(_OWORD *)v292;
          *((_OWORD *)v291 + 1) = v303;
          v304 = *((_OWORD *)v292 + 3);
          *((_OWORD *)v291 + 2) = *((_OWORD *)v292 + 2);
          *((_OWORD *)v291 + 3) = v304;
          v305 = v7;
        }
        *((_BYTE *)v194 + v289[6]) = *((_BYTE *)v195 + v289[6]);
        *((_BYTE *)v194 + v289[7]) = *((_BYTE *)v195 + v289[7]);
        *((_BYTE *)v194 + v289[8]) = *((_BYTE *)v195 + v289[8]);
        *((_BYTE *)v194 + v289[9]) = *((_BYTE *)v195 + v289[9]);
        *((_BYTE *)v194 + v289[10]) = *((_BYTE *)v195 + v289[10]);
        v312 = v289[11];
        v313 = *(void **)((char *)v195 + v312);
        *(void **)((char *)v194 + v312) = v313;
        v314 = v313;
        swift_storeEnumTagMultiPayload(v194, v305, 0);
        break;
      case 1u:
        v202 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v393 = a1;
        v397 = v7;
        switch(swift_getEnumCaseMultiPayload(v195, v202))
        {
          case 1u:
            v203 = *v195;
            *v194 = *v195;
            v204 = v203;
            v205 = v194;
            v206 = v202;
            v207 = 1;
            goto LABEL_158;
          case 2u:
            v315 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v315 - 8) + 16))(v194, v195, v315);
            v205 = v194;
            v206 = v202;
            v207 = 2;
            goto LABEL_158;
          case 3u:
            v316 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v316 - 8) + 16))(v194, v195, v316);
            v205 = v194;
            v206 = v202;
            v207 = 3;
            goto LABEL_158;
          case 4u:
            v317 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v194, v195, v317);
            v205 = v194;
            v206 = v202;
            v207 = 4;
            goto LABEL_158;
          case 5u:
            v318 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v318 - 8) + 16))(v194, v195, v318);
            v205 = v194;
            v206 = v202;
            v207 = 5;
            goto LABEL_158;
          case 6u:
            v319 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v319 - 8) + 16))(v194, v195, v319);
            v205 = v194;
            v206 = v202;
            v207 = 6;
            goto LABEL_158;
          case 8u:
            v320 = *v195;
            *v194 = *v195;
            v321 = v320;
            v205 = v194;
            v206 = v202;
            v207 = 8;
            goto LABEL_158;
          case 9u:
            v322 = *v195;
            *v194 = *v195;
            v323 = v322;
            v205 = v194;
            v206 = v202;
            v207 = 9;
LABEL_158:
            swift_storeEnumTagMultiPayload(v205, v206, v207);
            break;
          default:
            memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
            break;
        }
        v324 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v325 = v324[5];
        v326 = (char *)v194 + v325;
        v327 = (char *)v195 + v325;
        v328 = *(uint64_t *)((char *)v195 + v325 + 8);
        if (v328)
        {
          v389 = v194;
          *(_QWORD *)v326 = *(_QWORD *)v327;
          *((_QWORD *)v326 + 1) = v328;
          v329 = (void *)*((_QWORD *)v327 + 2);
          v330 = *((_QWORD *)v327 + 3);
          v331 = *((_QWORD *)v327 + 4);
          v332 = *((_QWORD *)v327 + 5);
          v333 = *((_QWORD *)v327 + 6);
          v334 = *((_QWORD *)v327 + 7);
          v383 = v327[64];
          swift_bridgeObjectRetain(v328);
          sub_10003E1F0(v329, v330, v331, v332, v333, v334, v383);
          *((_QWORD *)v326 + 2) = v329;
          *((_QWORD *)v326 + 3) = v330;
          *((_QWORD *)v326 + 4) = v331;
          *((_QWORD *)v326 + 5) = v332;
          *((_QWORD *)v326 + 6) = v333;
          *((_QWORD *)v326 + 7) = v334;
          v326[64] = v383;
          *(_DWORD *)(v326 + 65) = *(_DWORD *)(v327 + 65);
          v335 = v327[120];
          if (v335 == 255)
          {
            v336 = *(_OWORD *)(v327 + 88);
            *(_OWORD *)(v326 + 72) = *(_OWORD *)(v327 + 72);
            *(_OWORD *)(v326 + 88) = v336;
            *(_OWORD *)(v326 + 104) = *(_OWORD *)(v327 + 104);
            v326[120] = v327[120];
          }
          else
          {
            v384 = v335 & 1;
            v341 = (void *)*((_QWORD *)v327 + 9);
            v342 = *((_QWORD *)v327 + 10);
            v343 = *((_QWORD *)v327 + 11);
            v344 = *((_QWORD *)v327 + 12);
            v345 = *((_QWORD *)v327 + 13);
            v346 = *((_QWORD *)v327 + 14);
            sub_10002B764(v341, v342, v343, v344, v345, v346, v335 & 1);
            *((_QWORD *)v326 + 9) = v341;
            *((_QWORD *)v326 + 10) = v342;
            *((_QWORD *)v326 + 11) = v343;
            *((_QWORD *)v326 + 12) = v344;
            *((_QWORD *)v326 + 13) = v345;
            *((_QWORD *)v326 + 14) = v346;
            v326[120] = v384;
          }
          a1 = v393;
          v340 = v397;
          v326[121] = v327[121];
          v194 = v389;
        }
        else
        {
          v337 = *((_OWORD *)v327 + 5);
          *((_OWORD *)v326 + 4) = *((_OWORD *)v327 + 4);
          *((_OWORD *)v326 + 5) = v337;
          *((_OWORD *)v326 + 6) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 106) = *(_OWORD *)(v327 + 106);
          v338 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *((_OWORD *)v326 + 1) = v338;
          v339 = *((_OWORD *)v327 + 3);
          *((_OWORD *)v326 + 2) = *((_OWORD *)v327 + 2);
          *((_OWORD *)v326 + 3) = v339;
          v340 = v7;
        }
        *((_BYTE *)v194 + v324[6]) = *((_BYTE *)v195 + v324[6]);
        *((_BYTE *)v194 + v324[7]) = *((_BYTE *)v195 + v324[7]);
        *((_BYTE *)v194 + v324[8]) = *((_BYTE *)v195 + v324[8]);
        *((_BYTE *)v194 + v324[9]) = *((_BYTE *)v195 + v324[9]);
        *((_BYTE *)v194 + v324[10]) = *((_BYTE *)v195 + v324[10]);
        v347 = v324[11];
        v348 = *(void **)((char *)v195 + v347);
        *(void **)((char *)v194 + v347) = v348;
        v349 = v348;
        swift_storeEnumTagMultiPayload(v194, v340, 1);
        break;
      case 2u:
        v208 = *v195;
        *v194 = *v195;
        v209 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v210 = (void **)((char *)v194 + v209);
        v211 = (void **)((char *)v195 + v209);
        v212 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v213 = *(_QWORD *)(v212 - 8);
        v214 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v213 + 48);
        v215 = v208;
        if (v214(v211, 1, v212))
        {
          v216 = sub_10002A750(&qword_100644980);
          memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v211, v212))
          {
            case 1u:
              v249 = *v211;
              *v210 = *v211;
              v250 = v249;
              v251 = v210;
              v252 = v212;
              v253 = 1;
              goto LABEL_174;
            case 2u:
              v350 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v350 - 8) + 16))(v210, v211, v350);
              v251 = v210;
              v252 = v212;
              v253 = 2;
              goto LABEL_174;
            case 3u:
              v351 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v351 - 8) + 16))(v210, v211, v351);
              v251 = v210;
              v252 = v212;
              v253 = 3;
              goto LABEL_174;
            case 4u:
              v352 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v210, v211, v352);
              v251 = v210;
              v252 = v212;
              v253 = 4;
              goto LABEL_174;
            case 5u:
              v353 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v353 - 8) + 16))(v210, v211, v353);
              v251 = v210;
              v252 = v212;
              v253 = 5;
              goto LABEL_174;
            case 6u:
              v354 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v210, v211, v354);
              v251 = v210;
              v252 = v212;
              v253 = 6;
              goto LABEL_174;
            case 8u:
              v355 = *v211;
              *v210 = *v211;
              v356 = v355;
              v251 = v210;
              v252 = v212;
              v253 = 8;
              goto LABEL_174;
            case 9u:
              v357 = *v211;
              *v210 = *v211;
              v358 = v357;
              v251 = v210;
              v252 = v212;
              v253 = 9;
LABEL_174:
              swift_storeEnumTagMultiPayload(v251, v252, v253);
              break;
            default:
              memcpy(v210, v211, *(_QWORD *)(v213 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
        }
        swift_storeEnumTagMultiPayload(v194, v7, 2);
        break;
      case 3u:
        v217 = *v195;
        *v194 = *v195;
        v218 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v219 = (void **)((char *)v194 + v218);
        v220 = (void **)((char *)v195 + v218);
        v221 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v222 = *(_QWORD *)(v221 - 8);
        v223 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v222 + 48);
        v224 = v217;
        if (v223(v220, 1, v221))
        {
          v225 = sub_10002A750(&qword_100644980);
          memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v220, v221))
          {
            case 1u:
              v254 = *v220;
              *v219 = *v220;
              v255 = v254;
              v256 = v219;
              v257 = v221;
              v258 = 1;
              goto LABEL_196;
            case 2u:
              v359 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v219, v220, v359);
              v256 = v219;
              v257 = v221;
              v258 = 2;
              goto LABEL_196;
            case 3u:
              v360 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v219, v220, v360);
              v256 = v219;
              v257 = v221;
              v258 = 3;
              goto LABEL_196;
            case 4u:
              v361 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v219, v220, v361);
              v256 = v219;
              v257 = v221;
              v258 = 4;
              goto LABEL_196;
            case 5u:
              v376 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v219, v220, v376);
              v256 = v219;
              v257 = v221;
              v258 = 5;
              goto LABEL_196;
            case 6u:
              v362 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v219, v220, v362);
              v256 = v219;
              v257 = v221;
              v258 = 6;
              goto LABEL_196;
            case 8u:
              v363 = *v220;
              *v219 = *v220;
              v364 = v363;
              v256 = v219;
              v257 = v221;
              v258 = 8;
              goto LABEL_196;
            case 9u:
              v365 = *v220;
              *v219 = *v220;
              v366 = v365;
              v256 = v219;
              v257 = v221;
              v258 = 9;
LABEL_196:
              swift_storeEnumTagMultiPayload(v256, v257, v258);
              break;
            default:
              memcpy(v219, v220, *(_QWORD *)(v222 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
        }
        swift_storeEnumTagMultiPayload(v194, v7, 3);
        break;
      case 4u:
        v226 = *v195;
        *v194 = *v195;
        v227 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v228 = (void **)((char *)v194 + v227);
        v229 = (void **)((char *)v195 + v227);
        v230 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v231 = *(_QWORD *)(v230 - 8);
        v232 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v231 + 48);
        v233 = v226;
        if (v232(v229, 1, v230))
        {
          v234 = sub_10002A750(&qword_100644980);
          memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v229, v230))
          {
            case 1u:
              v259 = *v229;
              *v228 = *v229;
              v260 = v259;
              v261 = v228;
              v262 = v230;
              v263 = 1;
              goto LABEL_192;
            case 2u:
              v367 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v228, v229, v367);
              v261 = v228;
              v262 = v230;
              v263 = 2;
              goto LABEL_192;
            case 3u:
              v368 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v228, v229, v368);
              v261 = v228;
              v262 = v230;
              v263 = 3;
              goto LABEL_192;
            case 4u:
              v369 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v228, v229, v369);
              v261 = v228;
              v262 = v230;
              v263 = 4;
              goto LABEL_192;
            case 5u:
              v370 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v228, v229, v370);
              v261 = v228;
              v262 = v230;
              v263 = 5;
              goto LABEL_192;
            case 6u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v228, v229, v371);
              v261 = v228;
              v262 = v230;
              v263 = 6;
              goto LABEL_192;
            case 8u:
              v372 = *v229;
              *v228 = *v229;
              v373 = v372;
              v261 = v228;
              v262 = v230;
              v263 = 8;
              goto LABEL_192;
            case 9u:
              v374 = *v229;
              *v228 = *v229;
              v375 = v374;
              v261 = v228;
              v262 = v230;
              v263 = 9;
LABEL_192:
              swift_storeEnumTagMultiPayload(v261, v262, v263);
              break;
            default:
              memcpy(v228, v229, *(_QWORD *)(v231 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v231 + 56))(v228, 0, 1, v230);
        }
        swift_storeEnumTagMultiPayload(v194, v7, 4);
        break;
      case 5u:
        *v194 = *v195;
        *((_BYTE *)v194 + 8) = *((_BYTE *)v195 + 8);
        *(_WORD *)((char *)v194 + 9) = *(_WORD *)((char *)v195 + 9);
        v235 = v195[2];
        v194[2] = v235;
        v236 = v235;
        swift_storeEnumTagMultiPayload(v194, v7, 5);
        break;
      case 6u:
        v244 = *v195;
        *v194 = *v195;
        v245 = v244;
        swift_storeEnumTagMultiPayload(v194, v7, 6);
        break;
      case 7u:
        v237 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v238 = *(_QWORD *)(v237 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v238 + 48))(v195, 1, v237))
        {
          v239 = sub_10002A750(&qword_100644600);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
        }
        else
        {
          v264 = *v195;
          *v194 = *v195;
          v265 = *(int *)(v237 + 20);
          v387 = (char *)v194 + v265;
          v266 = (char *)v195 + v265;
          v267 = v194;
          v268 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v269 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v268 - 8) + 16);
          v270 = swift_bridgeObjectRetain(v264);
          v271 = v268;
          v194 = v267;
          v269(v387, v266, v271, v270);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v238 + 56))(v267, 0, 1, v237);
        }
        v272 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v273 = (void **)((char *)v194 + v272);
        v274 = (void **)((char *)v195 + v272);
        v275 = v274[1];
        if (v275)
        {
          *v273 = *v274;
          v273[1] = v275;
          v276 = (void *)v274[2];
          v273[2] = v276;
          swift_bridgeObjectRetain(v275);
          v277 = v276;
        }
        else
        {
          *(_OWORD *)v273 = *(_OWORD *)v274;
          v273[2] = v274[2];
        }
        swift_storeEnumTagMultiPayload(v194, v7, 7);
        break;
      case 8u:
        v246 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v247 = *(_QWORD *)(v246 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v247 + 48))(v195, 1, v246))
        {
          v248 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          v278 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(v194, v195, v278);
          *((_BYTE *)v194 + *(int *)(v246 + 20)) = *((_BYTE *)v195 + *(int *)(v246 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v247 + 56))(v194, 0, 1, v246);
        }
        v279 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v194 + *(int *)(v279 + 20)) = *(void **)((char *)v195 + *(int *)(v279 + 20));
        swift_storeEnumTagMultiPayload(v194, v7, 8);
        break;
      case 9u:
        *(_BYTE *)v194 = *(_BYTE *)v195;
        v240 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v241 = (char *)v194 + v240;
        v242 = (char *)v195 + v240;
        v243 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v241, v242, v243);
        swift_storeEnumTagMultiPayload(v194, v7, 9);
        break;
      default:
        memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_100387800(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
      v5 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v5))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_22;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_23;
      }
      goto LABEL_23;
    case 1u:
      v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a1, v6))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_22:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v7 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
          break;
        default:
          break;
      }
LABEL_23:
      v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v22 = (char *)a1 + *(int *)(v21 + 20);
      v23 = *((_QWORD *)v22 + 1);
      if (v23)
      {
        swift_bridgeObjectRelease(v23);
        sub_10003E2EC(*((void **)v22 + 2), *((_QWORD *)v22 + 3), *((_QWORD *)v22 + 4), *((_QWORD *)v22 + 5), *((_QWORD *)v22 + 6), *((_QWORD *)v22 + 7), v22[64]);
        v24 = v22[120];
        if (v24 != 255)
          sub_10002B328(*((void **)v22 + 9), *((_QWORD *)v22 + 10), *((_QWORD *)v22 + 11), *((_QWORD *)v22 + 12), *((_QWORD *)v22 + 13), *((_QWORD *)v22 + 14), v24 & 1);
      }
      v13 = *(id *)((char *)a1 + *(int *)(v21 + 44));
      goto LABEL_27;
    case 2u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v9))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_28;
        }
      }
      goto LABEL_28;
    case 3u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_28;
        }
      }
      goto LABEL_28;
    case 4u:

      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v8, v11))
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_55:
            v13 = *v8;
            goto LABEL_27;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            v12 = type metadata accessor for Date(0);
            goto LABEL_21;
          default:
            goto LABEL_28;
        }
      }
      goto LABEL_28;
    case 5u:
      v13 = (id)a1[2];
      goto LABEL_27;
    case 6u:
      v13 = (id)*a1;
      goto LABEL_27;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(a1, 1, v14))
      {
        swift_bridgeObjectRelease(*a1);
        v15 = (char *)a1 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v17 = (char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v18 = *((_QWORD *)v17 + 1);
      if (!v18)
        goto LABEL_28;
      swift_bridgeObjectRelease(v18);
      v13 = (id)*((_QWORD *)v17 + 2);
LABEL_27:

LABEL_28:
      v25 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
      switch(swift_getEnumCaseMultiPayload(v25, v4))
      {
        case 0u:
          v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_49;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_31;
            default:
              goto LABEL_50;
          }
          goto LABEL_50;
        case 1u:
          v27 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v25, v27))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_49:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_31:
              v28 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v25, v28);
              break;
            default:
              break;
          }
LABEL_50:
          v39 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v40 = (char *)v25 + *(int *)(v39 + 20);
          v41 = *((_QWORD *)v40 + 1);
          if (v41)
          {
            swift_bridgeObjectRelease(v41);
            sub_10003E2EC(*((void **)v40 + 2), *((_QWORD *)v40 + 3), *((_QWORD *)v40 + 4), *((_QWORD *)v40 + 5), *((_QWORD *)v40 + 6), *((_QWORD *)v40 + 7), v40[64]);
            v42 = v40[120];
            if (v42 != 255)
              sub_10002B328(*((void **)v40 + 9), *((_QWORD *)v40 + 10), *((_QWORD *)v40 + 11), *((_QWORD *)v40 + 12), *((_QWORD *)v40 + 13), *((_QWORD *)v40 + 14), v42 & 1);
          }
          v32 = *(id *)((char *)v25 + *(int *)(v39 + 44));
          goto LABEL_54;
        case 2u:

          v25 = (_QWORD *)((char *)v25
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v25, 1, v29))
          {
            switch(swift_getEnumCaseMultiPayload(v25, v29))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_38;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_47;
              default:
                return;
            }
          }
          return;
        case 3u:

          v25 = (_QWORD *)((char *)v25
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v25, 1, v30))
          {
            switch(swift_getEnumCaseMultiPayload(v25, v30))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_38;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_47;
              default:
                return;
            }
          }
          return;
        case 4u:

          v25 = (_QWORD *)((char *)v25
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v25, 1, v31))
          {
            switch(swift_getEnumCaseMultiPayload(v25, v31))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_38;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_47;
              default:
                return;
            }
          }
          return;
        case 5u:
          goto LABEL_43;
        case 6u:
LABEL_38:
          v32 = (id)*v25;
          goto LABEL_54;
        case 7u:
          v33 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v25, 1, v33))
          {
            swift_bridgeObjectRelease(*v25);
            v34 = (char *)v25 + *(int *)(v33 + 20);
            v35 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          }
          v25 = (_QWORD *)((char *)v25
                         + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
          v36 = v25[1];
          if (!v36)
            return;
          swift_bridgeObjectRelease(v36);
LABEL_43:
          v32 = (id)v25[2];
LABEL_54:

          break;
        case 8u:
          v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v25, 1, v37))
            return;
LABEL_47:
          v38 = type metadata accessor for Date(0);
LABEL_48:
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v25, v38);
          break;
        case 9u:
          v25 = (_QWORD *)((char *)v25 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v38 = type metadata accessor for AnyTip(0);
          goto LABEL_48;
        default:
          return;
      }
      return;
    case 8u:
      v19 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a1, 1, v19))
      {
        v20 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
      }
      goto LABEL_28;
    case 9u:
      v8 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v12 = type metadata accessor for AnyTip(0);
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
      goto LABEL_28;
    default:
      goto LABEL_28;
  }
}

void **sub_100387F3C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t, __n128);
  __n128 v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  void *v103;
  id v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  int v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  char v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  int *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unsigned __int8 v152;
  int v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  char v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  id v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  id v182;
  void *v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  id v191;
  void *v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  void **v196;
  void **v197;
  uint64_t v198;
  void *v199;
  id v200;
  void **v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  id v206;
  void **v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  void **v212;
  void **v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(void **, uint64_t, uint64_t);
  id v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  void **v221;
  void **v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int (*v225)(void **, uint64_t, uint64_t);
  id v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  void **v230;
  void **v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int (*v234)(void **, uint64_t, uint64_t);
  id v235;
  uint64_t v236;
  void *v237;
  id v238;
  void **v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  void *v249;
  id v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  id v255;
  void **v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  id v260;
  void **v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  id v265;
  void **v266;
  uint64_t v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  char *v271;
  void **v272;
  uint64_t v273;
  uint64_t v274;
  void (*v275)(char *, char *, uint64_t, __n128);
  __n128 v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  _QWORD *v280;
  uint64_t v281;
  void *v282;
  id v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  id v292;
  void *v293;
  id v294;
  int *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  uint64_t v311;
  void *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  void *v319;
  id v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  void *v326;
  id v327;
  void *v328;
  id v329;
  int *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  uint64_t v346;
  void *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  void *v354;
  id v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  id v362;
  void *v363;
  id v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void *v369;
  id v370;
  void *v371;
  id v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  void *v378;
  id v379;
  void *v380;
  id v381;
  uint64_t v382;
  void **v384;
  void **v385;
  unsigned __int8 v386;
  char v387;
  unsigned __int8 v388;
  char v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  void **v394;
  void **v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  void **v400;
  void **v401;
  void **v402;
  void **v403;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v390 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 1u:
          v8 = *a2;
          *a1 = *a2;
          v9 = v8;
          v10 = a1;
          v11 = v7;
          v12 = 1;
          goto LABEL_41;
        case 2u:
          v96 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(a1, a2, v96);
          v10 = a1;
          v11 = v7;
          v12 = 2;
          goto LABEL_41;
        case 3u:
          v97 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(a1, a2, v97);
          v10 = a1;
          v11 = v7;
          v12 = 3;
          goto LABEL_41;
        case 4u:
          v98 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
          v10 = a1;
          v11 = v7;
          v12 = 4;
          goto LABEL_41;
        case 5u:
          v99 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
          v10 = a1;
          v11 = v7;
          v12 = 5;
          goto LABEL_41;
        case 6u:
          v100 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
          v10 = a1;
          v11 = v7;
          v12 = 6;
          goto LABEL_41;
        case 8u:
          v101 = *a2;
          *a1 = *a2;
          v102 = v101;
          v10 = a1;
          v11 = v7;
          v12 = 8;
          goto LABEL_41;
        case 9u:
          v103 = *a2;
          *a1 = *a2;
          v104 = v103;
          v10 = a1;
          v11 = v7;
          v12 = 9;
LABEL_41:
          swift_storeEnumTagMultiPayload(v10, v11, v12);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v105 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v106 = v105[5];
      v107 = (char *)a1 + v106;
      v108 = (char *)a2 + v106;
      v109 = *(uint64_t *)((char *)a2 + v106 + 8);
      if (v109)
      {
        v384 = a2;
        v396 = v6;
        v400 = a1;
        *(_QWORD *)v107 = *(_QWORD *)v108;
        *((_QWORD *)v107 + 1) = v109;
        v110 = (void *)*((_QWORD *)v108 + 2);
        v111 = *((_QWORD *)v108 + 3);
        v112 = *((_QWORD *)v108 + 4);
        v113 = *((_QWORD *)v108 + 5);
        v115 = *((_QWORD *)v108 + 6);
        v114 = *((_QWORD *)v108 + 7);
        v116 = v108[64];
        swift_bridgeObjectRetain(v109);
        sub_10003E1F0(v110, v111, v112, v113, v115, v114, v116);
        *((_QWORD *)v107 + 2) = v110;
        *((_QWORD *)v107 + 3) = v111;
        *((_QWORD *)v107 + 4) = v112;
        *((_QWORD *)v107 + 5) = v113;
        *((_QWORD *)v107 + 6) = v115;
        *((_QWORD *)v107 + 7) = v114;
        v107[64] = v116;
        *(_DWORD *)(v107 + 65) = *(_DWORD *)(v108 + 65);
        v117 = v108[120];
        if (v117 == 255)
        {
          v118 = *(_OWORD *)(v108 + 88);
          *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
          *(_OWORD *)(v107 + 88) = v118;
          *(_OWORD *)(v107 + 104) = *(_OWORD *)(v108 + 104);
          v107[120] = v108[120];
        }
        else
        {
          v122 = v117 & 1;
          v123 = (void *)*((_QWORD *)v108 + 9);
          v124 = *((_QWORD *)v108 + 10);
          v125 = *((_QWORD *)v108 + 11);
          v126 = *((_QWORD *)v108 + 12);
          v127 = *((_QWORD *)v108 + 13);
          v128 = *((_QWORD *)v108 + 14);
          sub_10002B764(v123, v124, v125, v126, v127, v128, v117 & 1);
          *((_QWORD *)v107 + 9) = v123;
          *((_QWORD *)v107 + 10) = v124;
          *((_QWORD *)v107 + 11) = v125;
          *((_QWORD *)v107 + 12) = v126;
          *((_QWORD *)v107 + 13) = v127;
          *((_QWORD *)v107 + 14) = v128;
          v107[120] = v122;
        }
        a3 = v390;
        v6 = v396;
        v107[121] = v108[121];
        a1 = v400;
        a2 = v384;
      }
      else
      {
        v119 = *((_OWORD *)v108 + 5);
        *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
        *((_OWORD *)v107 + 5) = v119;
        *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
        *(_OWORD *)(v107 + 106) = *(_OWORD *)(v108 + 106);
        v120 = *((_OWORD *)v108 + 1);
        *(_OWORD *)v107 = *(_OWORD *)v108;
        *((_OWORD *)v107 + 1) = v120;
        v121 = *((_OWORD *)v108 + 3);
        *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
        *((_OWORD *)v107 + 3) = v121;
      }
      *((_BYTE *)a1 + v105[6]) = *((_BYTE *)a2 + v105[6]);
      *((_BYTE *)a1 + v105[7]) = *((_BYTE *)a2 + v105[7]);
      *((_BYTE *)a1 + v105[8]) = *((_BYTE *)a2 + v105[8]);
      *((_BYTE *)a1 + v105[9]) = *((_BYTE *)a2 + v105[9]);
      *((_BYTE *)a1 + v105[10]) = *((_BYTE *)a2 + v105[10]);
      v129 = v105[11];
      v130 = *(void **)((char *)a2 + v129);
      *(void **)((char *)a1 + v129) = v130;
      v131 = v130;
      v48 = a1;
      v49 = v6;
      v50 = 0;
      goto LABEL_98;
    case 1u:
      v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v391 = a3;
      switch(swift_getEnumCaseMultiPayload(a2, v13))
      {
        case 1u:
          v14 = *a2;
          *a1 = *a2;
          v15 = v14;
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_57;
        case 2u:
          v132 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(a1, a2, v132);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_57;
        case 3u:
          v133 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(a1, a2, v133);
          v16 = a1;
          v17 = v13;
          v18 = 3;
          goto LABEL_57;
        case 4u:
          v134 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
          v16 = a1;
          v17 = v13;
          v18 = 4;
          goto LABEL_57;
        case 5u:
          v135 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
          v16 = a1;
          v17 = v13;
          v18 = 5;
          goto LABEL_57;
        case 6u:
          v136 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
          v16 = a1;
          v17 = v13;
          v18 = 6;
          goto LABEL_57;
        case 8u:
          v137 = *a2;
          *a1 = *a2;
          v138 = v137;
          v16 = a1;
          v17 = v13;
          v18 = 8;
          goto LABEL_57;
        case 9u:
          v139 = *a2;
          *a1 = *a2;
          v140 = v139;
          v16 = a1;
          v17 = v13;
          v18 = 9;
LABEL_57:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v141 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v142 = v141[5];
      v143 = (char *)a1 + v142;
      v144 = (char *)a2 + v142;
      v145 = *(uint64_t *)((char *)a2 + v142 + 8);
      if (v145)
      {
        v385 = a2;
        v397 = v6;
        v401 = a1;
        *(_QWORD *)v143 = *(_QWORD *)v144;
        *((_QWORD *)v143 + 1) = v145;
        v146 = (void *)*((_QWORD *)v144 + 2);
        v147 = *((_QWORD *)v144 + 3);
        v148 = *((_QWORD *)v144 + 4);
        v149 = *((_QWORD *)v144 + 5);
        v150 = *((_QWORD *)v144 + 6);
        v151 = *((_QWORD *)v144 + 7);
        v152 = v144[64];
        swift_bridgeObjectRetain(v145);
        sub_10003E1F0(v146, v147, v148, v149, v150, v151, v152);
        *((_QWORD *)v143 + 2) = v146;
        *((_QWORD *)v143 + 3) = v147;
        *((_QWORD *)v143 + 4) = v148;
        *((_QWORD *)v143 + 5) = v149;
        *((_QWORD *)v143 + 6) = v150;
        *((_QWORD *)v143 + 7) = v151;
        v143[64] = v152;
        *(_DWORD *)(v143 + 65) = *(_DWORD *)(v144 + 65);
        v153 = v144[120];
        if (v153 == 255)
        {
          v154 = *(_OWORD *)(v144 + 88);
          *(_OWORD *)(v143 + 72) = *(_OWORD *)(v144 + 72);
          *(_OWORD *)(v143 + 88) = v154;
          *(_OWORD *)(v143 + 104) = *(_OWORD *)(v144 + 104);
          v143[120] = v144[120];
        }
        else
        {
          v158 = v153 & 1;
          v159 = (void *)*((_QWORD *)v144 + 9);
          v160 = *((_QWORD *)v144 + 10);
          v161 = *((_QWORD *)v144 + 11);
          v162 = *((_QWORD *)v144 + 12);
          v163 = *((_QWORD *)v144 + 13);
          v164 = *((_QWORD *)v144 + 14);
          sub_10002B764(v159, v160, v161, v162, v163, v164, v153 & 1);
          *((_QWORD *)v143 + 9) = v159;
          *((_QWORD *)v143 + 10) = v160;
          *((_QWORD *)v143 + 11) = v161;
          *((_QWORD *)v143 + 12) = v162;
          *((_QWORD *)v143 + 13) = v163;
          *((_QWORD *)v143 + 14) = v164;
          v143[120] = v158;
        }
        a3 = v391;
        v6 = v397;
        v143[121] = v144[121];
        a1 = v401;
        a2 = v385;
      }
      else
      {
        v155 = *((_OWORD *)v144 + 5);
        *((_OWORD *)v143 + 4) = *((_OWORD *)v144 + 4);
        *((_OWORD *)v143 + 5) = v155;
        *((_OWORD *)v143 + 6) = *((_OWORD *)v144 + 6);
        *(_OWORD *)(v143 + 106) = *(_OWORD *)(v144 + 106);
        v156 = *((_OWORD *)v144 + 1);
        *(_OWORD *)v143 = *(_OWORD *)v144;
        *((_OWORD *)v143 + 1) = v156;
        v157 = *((_OWORD *)v144 + 3);
        *((_OWORD *)v143 + 2) = *((_OWORD *)v144 + 2);
        *((_OWORD *)v143 + 3) = v157;
      }
      *((_BYTE *)a1 + v141[6]) = *((_BYTE *)a2 + v141[6]);
      *((_BYTE *)a1 + v141[7]) = *((_BYTE *)a2 + v141[7]);
      *((_BYTE *)a1 + v141[8]) = *((_BYTE *)a2 + v141[8]);
      *((_BYTE *)a1 + v141[9]) = *((_BYTE *)a2 + v141[9]);
      *((_BYTE *)a1 + v141[10]) = *((_BYTE *)a2 + v141[10]);
      v165 = v141[11];
      v166 = *(void **)((char *)a2 + v165);
      *(void **)((char *)a1 + v165) = v166;
      v167 = v166;
      v48 = a1;
      v49 = v6;
      v50 = 1;
      goto LABEL_98;
    case 2u:
      v19 = *a2;
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v21 = (void **)((char *)a1 + v20);
      v22 = (void **)((char *)a2 + v20);
      v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
      v26 = v19;
      if (v25(v22, 1, v23))
      {
        v27 = sub_10002A750(&qword_100644980);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v22, v23))
        {
          case 1u:
            v65 = *v22;
            *v21 = *v22;
            v66 = v65;
            v67 = v21;
            v68 = v23;
            v69 = 1;
            goto LABEL_73;
          case 2u:
            v168 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v21, v22, v168);
            v67 = v21;
            v68 = v23;
            v69 = 2;
            goto LABEL_73;
          case 3u:
            v169 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v21, v22, v169);
            v67 = v21;
            v68 = v23;
            v69 = 3;
            goto LABEL_73;
          case 4u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v21, v22, v170);
            v67 = v21;
            v68 = v23;
            v69 = 4;
            goto LABEL_73;
          case 5u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v21, v22, v171);
            v67 = v21;
            v68 = v23;
            v69 = 5;
            goto LABEL_73;
          case 6u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
            v67 = v21;
            v68 = v23;
            v69 = 6;
            goto LABEL_73;
          case 8u:
            v173 = *v22;
            *v21 = *v22;
            v174 = v173;
            v67 = v21;
            v68 = v23;
            v69 = 8;
            goto LABEL_73;
          case 9u:
            v175 = *v22;
            *v21 = *v22;
            v176 = v175;
            v67 = v21;
            v68 = v23;
            v69 = 9;
LABEL_73:
            swift_storeEnumTagMultiPayload(v67, v68, v69);
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(v24 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v48 = a1;
      v49 = v6;
      v50 = 2;
      goto LABEL_98;
    case 3u:
      v28 = *a2;
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (void **)((char *)a1 + v29);
      v31 = (void **)((char *)a2 + v29);
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
      v35 = v28;
      if (v34(v31, 1, v32))
      {
        v36 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 1u:
            v70 = *v31;
            *v30 = *v31;
            v71 = v70;
            v72 = v30;
            v73 = v32;
            v74 = 1;
            goto LABEL_95;
          case 2u:
            v177 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v30, v31, v177);
            v72 = v30;
            v73 = v32;
            v74 = 2;
            goto LABEL_95;
          case 3u:
            v178 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v30, v31, v178);
            v72 = v30;
            v73 = v32;
            v74 = 3;
            goto LABEL_95;
          case 4u:
            v179 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v30, v31, v179);
            v72 = v30;
            v73 = v32;
            v74 = 4;
            goto LABEL_95;
          case 5u:
            v194 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v30, v31, v194);
            v72 = v30;
            v73 = v32;
            v74 = 5;
            goto LABEL_95;
          case 6u:
            v180 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v30, v31, v180);
            v72 = v30;
            v73 = v32;
            v74 = 6;
            goto LABEL_95;
          case 8u:
            v181 = *v31;
            *v30 = *v31;
            v182 = v181;
            v72 = v30;
            v73 = v32;
            v74 = 8;
            goto LABEL_95;
          case 9u:
            v183 = *v31;
            *v30 = *v31;
            v184 = v183;
            v72 = v30;
            v73 = v32;
            v74 = 9;
LABEL_95:
            swift_storeEnumTagMultiPayload(v72, v73, v74);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v48 = a1;
      v49 = v6;
      v50 = 3;
      goto LABEL_98;
    case 4u:
      v37 = *a2;
      *a1 = *a2;
      v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v39 = (void **)((char *)a1 + v38);
      v40 = (void **)((char *)a2 + v38);
      v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
      v44 = v37;
      if (v43(v40, 1, v41))
      {
        v45 = sub_10002A750(&qword_100644980);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v40, v41))
        {
          case 1u:
            v75 = *v40;
            *v39 = *v40;
            v76 = v75;
            v77 = v39;
            v78 = v41;
            v79 = 1;
            goto LABEL_91;
          case 2u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v39, v40, v185);
            v77 = v39;
            v78 = v41;
            v79 = 2;
            goto LABEL_91;
          case 3u:
            v186 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v39, v40, v186);
            v77 = v39;
            v78 = v41;
            v79 = 3;
            goto LABEL_91;
          case 4u:
            v187 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v39, v40, v187);
            v77 = v39;
            v78 = v41;
            v79 = 4;
            goto LABEL_91;
          case 5u:
            v188 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v39, v40, v188);
            v77 = v39;
            v78 = v41;
            v79 = 5;
            goto LABEL_91;
          case 6u:
            v189 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v39, v40, v189);
            v77 = v39;
            v78 = v41;
            v79 = 6;
            goto LABEL_91;
          case 8u:
            v190 = *v40;
            *v39 = *v40;
            v191 = v190;
            v77 = v39;
            v78 = v41;
            v79 = 8;
            goto LABEL_91;
          case 9u:
            v192 = *v40;
            *v39 = *v40;
            v193 = v192;
            v77 = v39;
            v78 = v41;
            v79 = 9;
LABEL_91:
            swift_storeEnumTagMultiPayload(v77, v78, v79);
            break;
          default:
            memcpy(v39, v40, *(_QWORD *)(v42 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      v48 = a1;
      v49 = v6;
      v50 = 4;
      goto LABEL_98;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      v46 = a2[2];
      a1[2] = v46;
      v47 = v46;
      v48 = a1;
      v49 = v6;
      v50 = 5;
      goto LABEL_98;
    case 6u:
      v60 = *a2;
      *a1 = *a2;
      v61 = v60;
      v48 = a1;
      v49 = v6;
      v50 = 6;
      goto LABEL_98;
    case 7u:
      v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
      {
        v53 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        v80 = *a2;
        *a1 = *a2;
        v81 = *(int *)(v51 + 20);
        v392 = a3;
        v82 = (char *)a1 + v81;
        v83 = (char *)a2 + v81;
        v84 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v85 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v84 - 8) + 16);
        v86 = swift_bridgeObjectRetain(v80);
        v87 = v82;
        a3 = v392;
        v85(v87, v83, v84, v86);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(a1, 0, 1, v51);
      }
      v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v89 = (void **)((char *)a1 + v88);
      v90 = (void **)((char *)a2 + v88);
      v91 = v90[1];
      if (v91)
      {
        *v89 = *v90;
        v89[1] = v91;
        v92 = (void *)v90[2];
        v89[2] = v92;
        swift_bridgeObjectRetain(v91);
        v93 = v92;
      }
      else
      {
        *(_OWORD *)v89 = *(_OWORD *)v90;
        v89[2] = v90[2];
      }
      v48 = a1;
      v49 = v6;
      v50 = 7;
      goto LABEL_98;
    case 8u:
      v62 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v63 = *(_QWORD *)(v62 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v63 + 48))(a2, 1, v62))
      {
        v64 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v94 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
        *((_BYTE *)a1 + *(int *)(v62 + 20)) = *((_BYTE *)a2 + *(int *)(v62 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v63 + 56))(a1, 0, 1, v62);
      }
      v95 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)a1 + *(int *)(v95 + 20)) = *(void **)((char *)a2 + *(int *)(v95 + 20));
      v48 = a1;
      v49 = v6;
      v50 = 8;
      goto LABEL_98;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = a3;
      v57 = (char *)a2 + v54;
      v58 = type metadata accessor for AnyTip(0);
      v59 = v57;
      a3 = v56;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v59, v58);
      v48 = a1;
      v49 = v6;
      v50 = 9;
LABEL_98:
      swift_storeEnumTagMultiPayload(v48, v49, v50);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v195 = *(int *)(a3 + 20);
  v196 = (void **)((char *)a1 + v195);
  v197 = (void **)((char *)a2 + v195);
  switch(swift_getEnumCaseMultiPayload((char *)a2 + v195, v6))
  {
    case 0u:
      v198 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v398 = v6;
      v402 = a1;
      switch(swift_getEnumCaseMultiPayload(v197, v198))
      {
        case 1u:
          v199 = *v197;
          *v196 = *v197;
          v200 = v199;
          v201 = v196;
          v202 = v198;
          v203 = 1;
          goto LABEL_139;
        case 2u:
          v286 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(v196, v197, v286);
          v201 = v196;
          v202 = v198;
          v203 = 2;
          goto LABEL_139;
        case 3u:
          v287 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(v196, v197, v287);
          v201 = v196;
          v202 = v198;
          v203 = 3;
          goto LABEL_139;
        case 4u:
          v288 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(v196, v197, v288);
          v201 = v196;
          v202 = v198;
          v203 = 4;
          goto LABEL_139;
        case 5u:
          v289 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v196, v197, v289);
          v201 = v196;
          v202 = v198;
          v203 = 5;
          goto LABEL_139;
        case 6u:
          v290 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v196, v197, v290);
          v201 = v196;
          v202 = v198;
          v203 = 6;
          goto LABEL_139;
        case 8u:
          v291 = *v197;
          *v196 = *v197;
          v292 = v291;
          v201 = v196;
          v202 = v198;
          v203 = 8;
          goto LABEL_139;
        case 9u:
          v293 = *v197;
          *v196 = *v197;
          v294 = v293;
          v201 = v196;
          v202 = v198;
          v203 = 9;
LABEL_139:
          swift_storeEnumTagMultiPayload(v201, v202, v203);
          break;
        default:
          memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
          break;
      }
      v295 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v296 = v295[5];
      v297 = (char *)v196 + v296;
      v298 = (char *)v197 + v296;
      v299 = *(uint64_t *)((char *)v197 + v296 + 8);
      if (v299)
      {
        v394 = v196;
        *(_QWORD *)v297 = *(_QWORD *)v298;
        *((_QWORD *)v297 + 1) = v299;
        v300 = (void *)*((_QWORD *)v298 + 2);
        v301 = *((_QWORD *)v298 + 3);
        v302 = *((_QWORD *)v298 + 4);
        v303 = *((_QWORD *)v298 + 5);
        v305 = *((_QWORD *)v298 + 6);
        v304 = *((_QWORD *)v298 + 7);
        v386 = v298[64];
        swift_bridgeObjectRetain(v299);
        sub_10003E1F0(v300, v301, v302, v303, v305, v304, v386);
        *((_QWORD *)v297 + 2) = v300;
        *((_QWORD *)v297 + 3) = v301;
        *((_QWORD *)v297 + 4) = v302;
        *((_QWORD *)v297 + 5) = v303;
        *((_QWORD *)v297 + 6) = v305;
        *((_QWORD *)v297 + 7) = v304;
        v297[64] = v386;
        *(_DWORD *)(v297 + 65) = *(_DWORD *)(v298 + 65);
        v306 = v298[120];
        if (v306 == 255)
        {
          v307 = *(_OWORD *)(v298 + 88);
          *(_OWORD *)(v297 + 72) = *(_OWORD *)(v298 + 72);
          *(_OWORD *)(v297 + 88) = v307;
          *(_OWORD *)(v297 + 104) = *(_OWORD *)(v298 + 104);
          v297[120] = v298[120];
        }
        else
        {
          v387 = v306 & 1;
          v312 = (void *)*((_QWORD *)v298 + 9);
          v313 = *((_QWORD *)v298 + 10);
          v314 = *((_QWORD *)v298 + 11);
          v315 = *((_QWORD *)v298 + 12);
          v316 = *((_QWORD *)v298 + 13);
          v317 = *((_QWORD *)v298 + 14);
          sub_10002B764(v312, v313, v314, v315, v316, v317, v306 & 1);
          *((_QWORD *)v297 + 9) = v312;
          *((_QWORD *)v297 + 10) = v313;
          *((_QWORD *)v297 + 11) = v314;
          *((_QWORD *)v297 + 12) = v315;
          *((_QWORD *)v297 + 13) = v316;
          *((_QWORD *)v297 + 14) = v317;
          v297[120] = v387;
        }
        v311 = v398;
        a1 = v402;
        v297[121] = v298[121];
        v196 = v394;
      }
      else
      {
        v308 = *((_OWORD *)v298 + 5);
        *((_OWORD *)v297 + 4) = *((_OWORD *)v298 + 4);
        *((_OWORD *)v297 + 5) = v308;
        *((_OWORD *)v297 + 6) = *((_OWORD *)v298 + 6);
        *(_OWORD *)(v297 + 106) = *(_OWORD *)(v298 + 106);
        v309 = *((_OWORD *)v298 + 1);
        *(_OWORD *)v297 = *(_OWORD *)v298;
        *((_OWORD *)v297 + 1) = v309;
        v310 = *((_OWORD *)v298 + 3);
        *((_OWORD *)v297 + 2) = *((_OWORD *)v298 + 2);
        *((_OWORD *)v297 + 3) = v310;
        v311 = v6;
      }
      *((_BYTE *)v196 + v295[6]) = *((_BYTE *)v197 + v295[6]);
      *((_BYTE *)v196 + v295[7]) = *((_BYTE *)v197 + v295[7]);
      *((_BYTE *)v196 + v295[8]) = *((_BYTE *)v197 + v295[8]);
      *((_BYTE *)v196 + v295[9]) = *((_BYTE *)v197 + v295[9]);
      *((_BYTE *)v196 + v295[10]) = *((_BYTE *)v197 + v295[10]);
      v318 = v295[11];
      v319 = *(void **)((char *)v197 + v318);
      *(void **)((char *)v196 + v318) = v319;
      v320 = v319;
      v239 = v196;
      v240 = v311;
      v241 = 0;
      goto LABEL_196;
    case 1u:
      v204 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v399 = v6;
      v403 = a1;
      switch(swift_getEnumCaseMultiPayload(v197, v204))
      {
        case 1u:
          v205 = *v197;
          *v196 = *v197;
          v206 = v205;
          v207 = v196;
          v208 = v204;
          v209 = 1;
          goto LABEL_155;
        case 2u:
          v321 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v196, v197, v321);
          v207 = v196;
          v208 = v204;
          v209 = 2;
          goto LABEL_155;
        case 3u:
          v322 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v322 - 8) + 16))(v196, v197, v322);
          v207 = v196;
          v208 = v204;
          v209 = 3;
          goto LABEL_155;
        case 4u:
          v323 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v323 - 8) + 16))(v196, v197, v323);
          v207 = v196;
          v208 = v204;
          v209 = 4;
          goto LABEL_155;
        case 5u:
          v324 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v324 - 8) + 16))(v196, v197, v324);
          v207 = v196;
          v208 = v204;
          v209 = 5;
          goto LABEL_155;
        case 6u:
          v325 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v196, v197, v325);
          v207 = v196;
          v208 = v204;
          v209 = 6;
          goto LABEL_155;
        case 8u:
          v326 = *v197;
          *v196 = *v197;
          v327 = v326;
          v207 = v196;
          v208 = v204;
          v209 = 8;
          goto LABEL_155;
        case 9u:
          v328 = *v197;
          *v196 = *v197;
          v329 = v328;
          v207 = v196;
          v208 = v204;
          v209 = 9;
LABEL_155:
          swift_storeEnumTagMultiPayload(v207, v208, v209);
          break;
        default:
          memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
          break;
      }
      v330 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v331 = v330[5];
      v332 = (char *)v196 + v331;
      v333 = (char *)v197 + v331;
      v334 = *(uint64_t *)((char *)v197 + v331 + 8);
      if (v334)
      {
        v395 = v196;
        *(_QWORD *)v332 = *(_QWORD *)v333;
        *((_QWORD *)v332 + 1) = v334;
        v335 = (void *)*((_QWORD *)v333 + 2);
        v336 = *((_QWORD *)v333 + 3);
        v337 = *((_QWORD *)v333 + 4);
        v338 = *((_QWORD *)v333 + 5);
        v339 = *((_QWORD *)v333 + 6);
        v340 = *((_QWORD *)v333 + 7);
        v388 = v333[64];
        swift_bridgeObjectRetain(v334);
        sub_10003E1F0(v335, v336, v337, v338, v339, v340, v388);
        *((_QWORD *)v332 + 2) = v335;
        *((_QWORD *)v332 + 3) = v336;
        *((_QWORD *)v332 + 4) = v337;
        *((_QWORD *)v332 + 5) = v338;
        *((_QWORD *)v332 + 6) = v339;
        *((_QWORD *)v332 + 7) = v340;
        v332[64] = v388;
        *(_DWORD *)(v332 + 65) = *(_DWORD *)(v333 + 65);
        v341 = v333[120];
        if (v341 == 255)
        {
          v342 = *(_OWORD *)(v333 + 88);
          *(_OWORD *)(v332 + 72) = *(_OWORD *)(v333 + 72);
          *(_OWORD *)(v332 + 88) = v342;
          *(_OWORD *)(v332 + 104) = *(_OWORD *)(v333 + 104);
          v332[120] = v333[120];
        }
        else
        {
          v389 = v341 & 1;
          v347 = (void *)*((_QWORD *)v333 + 9);
          v348 = *((_QWORD *)v333 + 10);
          v349 = *((_QWORD *)v333 + 11);
          v350 = *((_QWORD *)v333 + 12);
          v351 = *((_QWORD *)v333 + 13);
          v352 = *((_QWORD *)v333 + 14);
          sub_10002B764(v347, v348, v349, v350, v351, v352, v341 & 1);
          *((_QWORD *)v332 + 9) = v347;
          *((_QWORD *)v332 + 10) = v348;
          *((_QWORD *)v332 + 11) = v349;
          *((_QWORD *)v332 + 12) = v350;
          *((_QWORD *)v332 + 13) = v351;
          *((_QWORD *)v332 + 14) = v352;
          v332[120] = v389;
        }
        v346 = v399;
        a1 = v403;
        v332[121] = v333[121];
        v196 = v395;
      }
      else
      {
        v343 = *((_OWORD *)v333 + 5);
        *((_OWORD *)v332 + 4) = *((_OWORD *)v333 + 4);
        *((_OWORD *)v332 + 5) = v343;
        *((_OWORD *)v332 + 6) = *((_OWORD *)v333 + 6);
        *(_OWORD *)(v332 + 106) = *(_OWORD *)(v333 + 106);
        v344 = *((_OWORD *)v333 + 1);
        *(_OWORD *)v332 = *(_OWORD *)v333;
        *((_OWORD *)v332 + 1) = v344;
        v345 = *((_OWORD *)v333 + 3);
        *((_OWORD *)v332 + 2) = *((_OWORD *)v333 + 2);
        *((_OWORD *)v332 + 3) = v345;
        v346 = v6;
      }
      *((_BYTE *)v196 + v330[6]) = *((_BYTE *)v197 + v330[6]);
      *((_BYTE *)v196 + v330[7]) = *((_BYTE *)v197 + v330[7]);
      *((_BYTE *)v196 + v330[8]) = *((_BYTE *)v197 + v330[8]);
      *((_BYTE *)v196 + v330[9]) = *((_BYTE *)v197 + v330[9]);
      *((_BYTE *)v196 + v330[10]) = *((_BYTE *)v197 + v330[10]);
      v353 = v330[11];
      v354 = *(void **)((char *)v197 + v353);
      *(void **)((char *)v196 + v353) = v354;
      v355 = v354;
      v239 = v196;
      v240 = v346;
      v241 = 1;
      goto LABEL_196;
    case 2u:
      v210 = *v197;
      *v196 = *v197;
      v211 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v212 = (void **)((char *)v196 + v211);
      v213 = (void **)((char *)v197 + v211);
      v214 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v215 = *(_QWORD *)(v214 - 8);
      v216 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v215 + 48);
      v217 = v210;
      if (v216(v213, 1, v214))
      {
        v218 = sub_10002A750(&qword_100644980);
        memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v213, v214))
        {
          case 1u:
            v254 = *v213;
            *v212 = *v213;
            v255 = v254;
            v256 = v212;
            v257 = v214;
            v258 = 1;
            goto LABEL_171;
          case 2u:
            v356 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v212, v213, v356);
            v256 = v212;
            v257 = v214;
            v258 = 2;
            goto LABEL_171;
          case 3u:
            v357 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v212, v213, v357);
            v256 = v212;
            v257 = v214;
            v258 = 3;
            goto LABEL_171;
          case 4u:
            v358 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v358 - 8) + 16))(v212, v213, v358);
            v256 = v212;
            v257 = v214;
            v258 = 4;
            goto LABEL_171;
          case 5u:
            v359 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v359 - 8) + 16))(v212, v213, v359);
            v256 = v212;
            v257 = v214;
            v258 = 5;
            goto LABEL_171;
          case 6u:
            v360 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v212, v213, v360);
            v256 = v212;
            v257 = v214;
            v258 = 6;
            goto LABEL_171;
          case 8u:
            v361 = *v213;
            *v212 = *v213;
            v362 = v361;
            v256 = v212;
            v257 = v214;
            v258 = 8;
            goto LABEL_171;
          case 9u:
            v363 = *v213;
            *v212 = *v213;
            v364 = v363;
            v256 = v212;
            v257 = v214;
            v258 = 9;
LABEL_171:
            swift_storeEnumTagMultiPayload(v256, v257, v258);
            break;
          default:
            memcpy(v212, v213, *(_QWORD *)(v215 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
      }
      v239 = v196;
      v240 = v6;
      v241 = 2;
      goto LABEL_196;
    case 3u:
      v219 = *v197;
      *v196 = *v197;
      v220 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v221 = (void **)((char *)v196 + v220);
      v222 = (void **)((char *)v197 + v220);
      v223 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v224 = *(_QWORD *)(v223 - 8);
      v225 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v224 + 48);
      v226 = v219;
      if (v225(v222, 1, v223))
      {
        v227 = sub_10002A750(&qword_100644980);
        memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v222, v223))
        {
          case 1u:
            v259 = *v222;
            *v221 = *v222;
            v260 = v259;
            v261 = v221;
            v262 = v223;
            v263 = 1;
            goto LABEL_193;
          case 2u:
            v365 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v221, v222, v365);
            v261 = v221;
            v262 = v223;
            v263 = 2;
            goto LABEL_193;
          case 3u:
            v366 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v366 - 8) + 16))(v221, v222, v366);
            v261 = v221;
            v262 = v223;
            v263 = 3;
            goto LABEL_193;
          case 4u:
            v367 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v367 - 8) + 16))(v221, v222, v367);
            v261 = v221;
            v262 = v223;
            v263 = 4;
            goto LABEL_193;
          case 5u:
            v382 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v221, v222, v382);
            v261 = v221;
            v262 = v223;
            v263 = 5;
            goto LABEL_193;
          case 6u:
            v368 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v368 - 8) + 16))(v221, v222, v368);
            v261 = v221;
            v262 = v223;
            v263 = 6;
            goto LABEL_193;
          case 8u:
            v369 = *v222;
            *v221 = *v222;
            v370 = v369;
            v261 = v221;
            v262 = v223;
            v263 = 8;
            goto LABEL_193;
          case 9u:
            v371 = *v222;
            *v221 = *v222;
            v372 = v371;
            v261 = v221;
            v262 = v223;
            v263 = 9;
LABEL_193:
            swift_storeEnumTagMultiPayload(v261, v262, v263);
            break;
          default:
            memcpy(v221, v222, *(_QWORD *)(v224 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
      }
      v239 = v196;
      v240 = v6;
      v241 = 3;
      goto LABEL_196;
    case 4u:
      v228 = *v197;
      *v196 = *v197;
      v229 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v230 = (void **)((char *)v196 + v229);
      v231 = (void **)((char *)v197 + v229);
      v232 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v233 = *(_QWORD *)(v232 - 8);
      v234 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v233 + 48);
      v235 = v228;
      if (v234(v231, 1, v232))
      {
        v236 = sub_10002A750(&qword_100644980);
        memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v231, v232))
        {
          case 1u:
            v264 = *v231;
            *v230 = *v231;
            v265 = v264;
            v266 = v230;
            v267 = v232;
            v268 = 1;
            goto LABEL_189;
          case 2u:
            v373 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v230, v231, v373);
            v266 = v230;
            v267 = v232;
            v268 = 2;
            goto LABEL_189;
          case 3u:
            v374 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v230, v231, v374);
            v266 = v230;
            v267 = v232;
            v268 = 3;
            goto LABEL_189;
          case 4u:
            v375 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v230, v231, v375);
            v266 = v230;
            v267 = v232;
            v268 = 4;
            goto LABEL_189;
          case 5u:
            v376 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v376 - 8) + 16))(v230, v231, v376);
            v266 = v230;
            v267 = v232;
            v268 = 5;
            goto LABEL_189;
          case 6u:
            v377 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v377 - 8) + 16))(v230, v231, v377);
            v266 = v230;
            v267 = v232;
            v268 = 6;
            goto LABEL_189;
          case 8u:
            v378 = *v231;
            *v230 = *v231;
            v379 = v378;
            v266 = v230;
            v267 = v232;
            v268 = 8;
            goto LABEL_189;
          case 9u:
            v380 = *v231;
            *v230 = *v231;
            v381 = v380;
            v266 = v230;
            v267 = v232;
            v268 = 9;
LABEL_189:
            swift_storeEnumTagMultiPayload(v266, v267, v268);
            break;
          default:
            memcpy(v230, v231, *(_QWORD *)(v233 + 64));
            break;
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v233 + 56))(v230, 0, 1, v232);
      }
      v239 = v196;
      v240 = v6;
      v241 = 4;
      goto LABEL_196;
    case 5u:
      *v196 = *v197;
      *((_BYTE *)v196 + 8) = *((_BYTE *)v197 + 8);
      *(_WORD *)((char *)v196 + 9) = *(_WORD *)((char *)v197 + 9);
      v237 = v197[2];
      v196[2] = v237;
      v238 = v237;
      v239 = v196;
      v240 = v6;
      v241 = 5;
      goto LABEL_196;
    case 6u:
      v249 = *v197;
      *v196 = *v197;
      v250 = v249;
      v239 = v196;
      v240 = v6;
      v241 = 6;
      goto LABEL_196;
    case 7u:
      v242 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v243 = *(_QWORD *)(v242 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v243 + 48))(v197, 1, v242))
      {
        v244 = sub_10002A750(&qword_100644600);
        memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
      }
      else
      {
        v269 = *v197;
        *v196 = *v197;
        v270 = *(int *)(v242 + 20);
        v393 = (char *)v196 + v270;
        v271 = (char *)v197 + v270;
        v272 = v196;
        v273 = type metadata accessor for REMHashtagLabelSpecifier(0);
        v274 = v6;
        v275 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v273 - 8) + 16);
        v276 = swift_bridgeObjectRetain(v269);
        v277 = v273;
        v196 = v272;
        v275(v393, v271, v277, v276);
        v6 = v274;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v243 + 56))(v272, 0, 1, v242);
      }
      v278 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v279 = (void **)((char *)v196 + v278);
      v280 = (void **)((char *)v197 + v278);
      v281 = v280[1];
      if (v281)
      {
        *v279 = *v280;
        v279[1] = v281;
        v282 = (void *)v280[2];
        v279[2] = v282;
        swift_bridgeObjectRetain(v281);
        v283 = v282;
      }
      else
      {
        *(_OWORD *)v279 = *(_OWORD *)v280;
        v279[2] = v280[2];
      }
      v239 = v196;
      v240 = v6;
      v241 = 7;
      goto LABEL_196;
    case 8u:
      v251 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v252 = *(_QWORD *)(v251 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v252 + 48))(v197, 1, v251))
      {
        v253 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
      }
      else
      {
        v284 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(v196, v197, v284);
        *((_BYTE *)v196 + *(int *)(v251 + 20)) = *((_BYTE *)v197 + *(int *)(v251 + 20));
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v252 + 56))(v196, 0, 1, v251);
      }
      v285 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(void **)((char *)v196 + *(int *)(v285 + 20)) = *(void **)((char *)v197 + *(int *)(v285 + 20));
      v239 = v196;
      v240 = v6;
      v241 = 8;
      goto LABEL_196;
    case 9u:
      *(_BYTE *)v196 = *(_BYTE *)v197;
      v245 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v246 = (char *)v196 + v245;
      v247 = (char *)v197 + v245;
      v248 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(v246, v247, v248);
      v239 = v196;
      v240 = v6;
      v241 = 9;
LABEL_196:
      swift_storeEnumTagMultiPayload(v239, v240, v241);
      break;
    default:
      memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_100389E40(uint64_t a1, void **a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  __n128 v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  void *v89;
  id v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  void *v140;
  id v141;
  int *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  void **v200;
  void **v201;
  uint64_t v202;
  void *v203;
  id v204;
  void **v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  id v210;
  void **v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  uint64_t v215;
  void **v216;
  void **v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int (*v220)(void **, uint64_t, uint64_t);
  id v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  void **v225;
  void **v226;
  uint64_t v227;
  uint64_t v228;
  unsigned int (*v229)(void **, uint64_t, uint64_t);
  id v230;
  uint64_t v231;
  void *v232;
  uint64_t v233;
  void **v234;
  void **v235;
  uint64_t v236;
  uint64_t v237;
  unsigned int (*v238)(void **, uint64_t, uint64_t);
  id v239;
  uint64_t v240;
  void *v241;
  id v242;
  void **v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  void *v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void *v258;
  id v259;
  void **v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  id v264;
  void **v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  id v269;
  void **v270;
  uint64_t v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(char *, char *, uint64_t, __n128);
  __n128 v279;
  uint64_t v280;
  _QWORD *v281;
  _QWORD *v282;
  uint64_t v283;
  void *v284;
  id v285;
  __int128 v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  void *v294;
  id v295;
  void *v296;
  id v297;
  int *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  int v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  void *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  id v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  void *v334;
  id v335;
  void *v336;
  id v337;
  int *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  int v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void *v367;
  id v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  void *v374;
  id v375;
  void *v376;
  id v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  void *v385;
  id v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  void *v392;
  id v393;
  void *v394;
  id v395;
  char *v397;
  unsigned __int8 v398;
  char v399;
  unsigned __int8 v400;
  char v401;
  unsigned __int8 v402;
  char v403;
  unsigned __int8 v404;
  char v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  void **v409;
  void **v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  _QWORD *v415;
  _QWORD *v416;
  _QWORD *v417;
  _QWORD *v418;

  v3 = (_QWORD *)a1;
  if ((void **)a1 != a2)
  {
    sub_10001F544(a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v406 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 1u:
            v8 = *a2;
            *v3 = *a2;
            v9 = v8;
            v10 = v3;
            v11 = v7;
            v12 = 1;
            goto LABEL_42;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v3, a2, v94);
            v10 = v3;
            v11 = v7;
            v12 = 2;
            goto LABEL_42;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v3, a2, v95);
            v10 = v3;
            v11 = v7;
            v12 = 3;
            goto LABEL_42;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v3, a2, v96);
            v10 = v3;
            v11 = v7;
            v12 = 4;
            goto LABEL_42;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v3, a2, v97);
            v10 = v3;
            v11 = v7;
            v12 = 5;
            goto LABEL_42;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v3, a2, v98);
            v10 = v3;
            v11 = v7;
            v12 = 6;
            goto LABEL_42;
          case 8u:
            v99 = *a2;
            *v3 = *a2;
            v100 = v99;
            v10 = v3;
            v11 = v7;
            v12 = 8;
            goto LABEL_42;
          case 9u:
            v101 = *a2;
            *v3 = *a2;
            v102 = v101;
            v10 = v3;
            v11 = v7;
            v12 = 9;
LABEL_42:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)v3 + v104;
        v106 = (char *)a2 + v104;
        if (*(void **)((char *)a2 + v104 + 8))
        {
          v411 = v6;
          v415 = v3;
          *(_QWORD *)v105 = *(_QWORD *)v106;
          v107 = *((_QWORD *)v106 + 1);
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v110 = *((_QWORD *)v106 + 4);
          v111 = *((_QWORD *)v106 + 5);
          v112 = *((_QWORD *)v106 + 6);
          v113 = *((_QWORD *)v106 + 7);
          v398 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v110, v111, v112, v113, v398);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v110;
          *((_QWORD *)v105 + 5) = v111;
          *((_QWORD *)v105 + 6) = v112;
          *((_QWORD *)v105 + 7) = v113;
          v105[64] = v398;
          v105[65] = v106[65];
          v105[66] = v106[66];
          v105[67] = v106[67];
          v105[68] = v106[68];
          v114 = v106[120];
          if (v114 == 255)
          {
            v115 = *(_OWORD *)(v106 + 72);
            v116 = *(_OWORD *)(v106 + 88);
            v117 = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
            *(_OWORD *)(v105 + 88) = v116;
            *(_OWORD *)(v105 + 104) = v117;
            *(_OWORD *)(v105 + 72) = v115;
          }
          else
          {
            v399 = v114 & 1;
            v124 = (void *)*((_QWORD *)v106 + 9);
            v125 = *((_QWORD *)v106 + 10);
            v126 = *((_QWORD *)v106 + 11);
            v127 = *((_QWORD *)v106 + 12);
            v128 = *((_QWORD *)v106 + 13);
            v129 = *((_QWORD *)v106 + 14);
            sub_10002B764(v124, v125, v126, v127, v128, v129, v114 & 1);
            *((_QWORD *)v105 + 9) = v124;
            *((_QWORD *)v105 + 10) = v125;
            *((_QWORD *)v105 + 11) = v126;
            *((_QWORD *)v105 + 12) = v127;
            *((_QWORD *)v105 + 13) = v128;
            *((_QWORD *)v105 + 14) = v129;
            v105[120] = v399;
          }
          a3 = v406;
          v6 = v411;
          v105[121] = v106[121];
          v3 = v415;
        }
        else
        {
          v118 = *(_OWORD *)v106;
          v119 = *((_OWORD *)v106 + 1);
          v120 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v120;
          *(_OWORD *)v105 = v118;
          *((_OWORD *)v105 + 1) = v119;
          v121 = *((_OWORD *)v106 + 4);
          v122 = *((_OWORD *)v106 + 5);
          v123 = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          *((_OWORD *)v105 + 5) = v122;
          *((_OWORD *)v105 + 6) = v123;
          *((_OWORD *)v105 + 4) = v121;
        }
        *((_BYTE *)v3 + v103[6]) = *((_BYTE *)a2 + v103[6]);
        *((_BYTE *)v3 + v103[7]) = *((_BYTE *)a2 + v103[7]);
        *((_BYTE *)v3 + v103[8]) = *((_BYTE *)a2 + v103[8]);
        *((_BYTE *)v3 + v103[9]) = *((_BYTE *)a2 + v103[9]);
        *((_BYTE *)v3 + v103[10]) = *((_BYTE *)a2 + v103[10]);
        v130 = v103[11];
        v131 = *(void **)((char *)a2 + v130);
        *(_QWORD *)((char *)v3 + v130) = v131;
        v132 = v131;
        v48 = v3;
        v49 = v6;
        v50 = 0;
        goto LABEL_99;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v407 = a3;
        switch(swift_getEnumCaseMultiPayload(a2, v13))
        {
          case 1u:
            v14 = *a2;
            *v3 = *a2;
            v15 = v14;
            v16 = v3;
            v17 = v13;
            v18 = 1;
            goto LABEL_58;
          case 2u:
            v133 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v3, a2, v133);
            v16 = v3;
            v17 = v13;
            v18 = 2;
            goto LABEL_58;
          case 3u:
            v134 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v3, a2, v134);
            v16 = v3;
            v17 = v13;
            v18 = 3;
            goto LABEL_58;
          case 4u:
            v135 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v3, a2, v135);
            v16 = v3;
            v17 = v13;
            v18 = 4;
            goto LABEL_58;
          case 5u:
            v136 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v3, a2, v136);
            v16 = v3;
            v17 = v13;
            v18 = 5;
            goto LABEL_58;
          case 6u:
            v137 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v3, a2, v137);
            v16 = v3;
            v17 = v13;
            v18 = 6;
            goto LABEL_58;
          case 8u:
            v138 = *a2;
            *v3 = *a2;
            v139 = v138;
            v16 = v3;
            v17 = v13;
            v18 = 8;
            goto LABEL_58;
          case 9u:
            v140 = *a2;
            *v3 = *a2;
            v141 = v140;
            v16 = v3;
            v17 = v13;
            v18 = 9;
LABEL_58:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v142 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v143 = v142[5];
        v144 = (char *)v3 + v143;
        v145 = (char *)a2 + v143;
        if (*(void **)((char *)a2 + v143 + 8))
        {
          v412 = v6;
          v416 = v3;
          *(_QWORD *)v144 = *(_QWORD *)v145;
          v146 = *((_QWORD *)v145 + 1);
          *((_QWORD *)v144 + 1) = v146;
          v147 = (void *)*((_QWORD *)v145 + 2);
          v148 = *((_QWORD *)v145 + 3);
          v149 = *((_QWORD *)v145 + 4);
          v150 = *((_QWORD *)v145 + 5);
          v151 = *((_QWORD *)v145 + 6);
          v152 = *((_QWORD *)v145 + 7);
          v400 = v145[64];
          swift_bridgeObjectRetain(v146);
          sub_10003E1F0(v147, v148, v149, v150, v151, v152, v400);
          *((_QWORD *)v144 + 2) = v147;
          *((_QWORD *)v144 + 3) = v148;
          *((_QWORD *)v144 + 4) = v149;
          *((_QWORD *)v144 + 5) = v150;
          *((_QWORD *)v144 + 6) = v151;
          *((_QWORD *)v144 + 7) = v152;
          v144[64] = v400;
          v144[65] = v145[65];
          v144[66] = v145[66];
          v144[67] = v145[67];
          v144[68] = v145[68];
          v153 = v145[120];
          if (v153 == 255)
          {
            v154 = *(_OWORD *)(v145 + 72);
            v155 = *(_OWORD *)(v145 + 88);
            v156 = *(_OWORD *)(v145 + 104);
            v144[120] = v145[120];
            *(_OWORD *)(v144 + 88) = v155;
            *(_OWORD *)(v144 + 104) = v156;
            *(_OWORD *)(v144 + 72) = v154;
          }
          else
          {
            v401 = v153 & 1;
            v163 = (void *)*((_QWORD *)v145 + 9);
            v164 = *((_QWORD *)v145 + 10);
            v165 = *((_QWORD *)v145 + 11);
            v166 = *((_QWORD *)v145 + 12);
            v167 = *((_QWORD *)v145 + 13);
            v168 = *((_QWORD *)v145 + 14);
            sub_10002B764(v163, v164, v165, v166, v167, v168, v153 & 1);
            *((_QWORD *)v144 + 9) = v163;
            *((_QWORD *)v144 + 10) = v164;
            *((_QWORD *)v144 + 11) = v165;
            *((_QWORD *)v144 + 12) = v166;
            *((_QWORD *)v144 + 13) = v167;
            *((_QWORD *)v144 + 14) = v168;
            v144[120] = v401;
          }
          a3 = v407;
          v6 = v412;
          v144[121] = v145[121];
          v3 = v416;
        }
        else
        {
          v157 = *(_OWORD *)v145;
          v158 = *((_OWORD *)v145 + 1);
          v159 = *((_OWORD *)v145 + 3);
          *((_OWORD *)v144 + 2) = *((_OWORD *)v145 + 2);
          *((_OWORD *)v144 + 3) = v159;
          *(_OWORD *)v144 = v157;
          *((_OWORD *)v144 + 1) = v158;
          v160 = *((_OWORD *)v145 + 4);
          v161 = *((_OWORD *)v145 + 5);
          v162 = *((_OWORD *)v145 + 6);
          *(_OWORD *)(v144 + 106) = *(_OWORD *)(v145 + 106);
          *((_OWORD *)v144 + 5) = v161;
          *((_OWORD *)v144 + 6) = v162;
          *((_OWORD *)v144 + 4) = v160;
        }
        *((_BYTE *)v3 + v142[6]) = *((_BYTE *)a2 + v142[6]);
        *((_BYTE *)v3 + v142[7]) = *((_BYTE *)a2 + v142[7]);
        *((_BYTE *)v3 + v142[8]) = *((_BYTE *)a2 + v142[8]);
        *((_BYTE *)v3 + v142[9]) = *((_BYTE *)a2 + v142[9]);
        *((_BYTE *)v3 + v142[10]) = *((_BYTE *)a2 + v142[10]);
        v169 = v142[11];
        v170 = *(void **)((char *)a2 + v169);
        *(_QWORD *)((char *)v3 + v169) = v170;
        v171 = v170;
        v48 = v3;
        v49 = v6;
        v50 = 1;
        goto LABEL_99;
      case 2u:
        v19 = *a2;
        *v3 = *a2;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)v3 + v20);
        v22 = (void **)((char *)a2 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_74;
            case 2u:
              v172 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v21, v22, v172);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_74;
            case 3u:
              v173 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v21, v22, v173);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_74;
            case 4u:
              v174 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v21, v22, v174);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_74;
            case 5u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v21, v22, v175);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_74;
            case 6u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v21, v22, v176);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_74;
            case 8u:
              v177 = *v22;
              *v21 = *v22;
              v178 = v177;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_74;
            case 9u:
              v179 = *v22;
              *v21 = *v22;
              v180 = v179;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_74:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v48 = v3;
        v49 = v6;
        v50 = 2;
        goto LABEL_99;
      case 3u:
        v28 = *a2;
        *v3 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)v3 + v29);
        v31 = (void **)((char *)a2 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_85;
            case 2u:
              v181 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v30, v31, v181);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_85;
            case 3u:
              v182 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v30, v31, v182);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_85;
            case 4u:
              v183 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v30, v31, v183);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_85;
            case 5u:
              v184 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v30, v31, v184);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_85;
            case 6u:
              v185 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v30, v31, v185);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_85;
            case 8u:
              v186 = *v31;
              *v30 = *v31;
              v187 = v186;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_85;
            case 9u:
              v188 = *v31;
              *v30 = *v31;
              v189 = v188;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_85:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v48 = v3;
        v49 = v6;
        v50 = 3;
        goto LABEL_99;
      case 4u:
        v37 = *a2;
        *v3 = *a2;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)v3 + v38);
        v40 = (void **)((char *)a2 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_96;
            case 2u:
              v190 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v39, v40, v190);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_96;
            case 3u:
              v191 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v39, v40, v191);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_96;
            case 4u:
              v192 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v39, v40, v192);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_96;
            case 5u:
              v193 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v39, v40, v193);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_96;
            case 6u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v39, v40, v194);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_96;
            case 8u:
              v195 = *v40;
              *v39 = *v40;
              v196 = v195;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_96;
            case 9u:
              v197 = *v40;
              *v39 = *v40;
              v198 = v197;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_96:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v48 = v3;
        v49 = v6;
        v50 = 4;
        goto LABEL_99;
      case 5u:
        *v3 = *a2;
        *((_BYTE *)v3 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)v3 + 9) = *((_BYTE *)a2 + 9);
        *((_BYTE *)v3 + 10) = *((_BYTE *)a2 + 10);
        v46 = a2[2];
        v3[2] = v46;
        v47 = v46;
        v48 = v3;
        v49 = v6;
        v50 = 5;
        goto LABEL_99;
      case 6u:
        v58 = *a2;
        *v3 = *a2;
        v59 = v58;
        v48 = v3;
        v49 = v6;
        v50 = 6;
        goto LABEL_99;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(a2, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *a2;
          *v3 = *a2;
          v79 = *(int *)(v51 + 20);
          v397 = (char *)v3 + v79;
          v80 = (char *)a2 + v79;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = a3;
          v83 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v84 = swift_bridgeObjectRetain(v78);
          v83(v397, v80, v81, v84);
          a3 = v82;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v3, 0, 1, v51);
        }
        v85 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v86 = (_QWORD *)((char *)v3 + v85);
        v87 = (void **)((char *)a2 + v85);
        if (v87[1])
        {
          *v86 = *v87;
          v88 = v87[1];
          v86[1] = v88;
          v89 = (void *)v87[2];
          v86[2] = v89;
          swift_bridgeObjectRetain(v88);
          v90 = v89;
        }
        else
        {
          v91 = *(_OWORD *)v87;
          v86[2] = v87[2];
          *(_OWORD *)v86 = v91;
        }
        v48 = v3;
        v49 = v6;
        v50 = 7;
        goto LABEL_99;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(a2, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v3, a2, v92);
          *((_BYTE *)v3 + *(int *)(v60 + 20)) = *((_BYTE *)a2 + *(int *)(v60 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v3, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v3 + *(int *)(v93 + 20)) = *(void **)((char *)a2 + *(int *)(v93 + 20));
        v48 = v3;
        v49 = v6;
        v50 = 8;
        goto LABEL_99;
      case 9u:
        *(_BYTE *)v3 = *(_BYTE *)a2;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)v3 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = v3;
        v49 = v6;
        v50 = 9;
LABEL_99:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(v3, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v199 = *(int *)(a3 + 20);
    v200 = (void **)((char *)v3 + v199);
    v201 = (void **)((char *)a2 + v199);
    sub_10001F544((uint64_t)v3 + v199, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v201, v6))
    {
      case 0u:
        v202 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v413 = v6;
        v417 = v3;
        switch(swift_getEnumCaseMultiPayload(v201, v202))
        {
          case 1u:
            v203 = *v201;
            *v200 = *v201;
            v204 = v203;
            v205 = v200;
            v206 = v202;
            v207 = 1;
            goto LABEL_140;
          case 2u:
            v289 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v200, v201, v289);
            v205 = v200;
            v206 = v202;
            v207 = 2;
            goto LABEL_140;
          case 3u:
            v290 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(v200, v201, v290);
            v205 = v200;
            v206 = v202;
            v207 = 3;
            goto LABEL_140;
          case 4u:
            v291 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v200, v201, v291);
            v205 = v200;
            v206 = v202;
            v207 = 4;
            goto LABEL_140;
          case 5u:
            v292 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(v200, v201, v292);
            v205 = v200;
            v206 = v202;
            v207 = 5;
            goto LABEL_140;
          case 6u:
            v293 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v293 - 8) + 16))(v200, v201, v293);
            v205 = v200;
            v206 = v202;
            v207 = 6;
            goto LABEL_140;
          case 8u:
            v294 = *v201;
            *v200 = *v201;
            v295 = v294;
            v205 = v200;
            v206 = v202;
            v207 = 8;
            goto LABEL_140;
          case 9u:
            v296 = *v201;
            *v200 = *v201;
            v297 = v296;
            v205 = v200;
            v206 = v202;
            v207 = 9;
LABEL_140:
            swift_storeEnumTagMultiPayload(v205, v206, v207);
            break;
          default:
            memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
            break;
        }
        v298 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v299 = v298[5];
        v300 = (char *)v200 + v299;
        v301 = (char *)v201 + v299;
        if (*(void **)((char *)v201 + v299 + 8))
        {
          v409 = v200;
          *(_QWORD *)v300 = *(_QWORD *)v301;
          v302 = *((_QWORD *)v301 + 1);
          *((_QWORD *)v300 + 1) = v302;
          v303 = (void *)*((_QWORD *)v301 + 2);
          v304 = *((_QWORD *)v301 + 3);
          v305 = *((_QWORD *)v301 + 4);
          v306 = *((_QWORD *)v301 + 5);
          v308 = *((_QWORD *)v301 + 6);
          v307 = *((_QWORD *)v301 + 7);
          v402 = v301[64];
          swift_bridgeObjectRetain(v302);
          sub_10003E1F0(v303, v304, v305, v306, v308, v307, v402);
          *((_QWORD *)v300 + 2) = v303;
          *((_QWORD *)v300 + 3) = v304;
          *((_QWORD *)v300 + 4) = v305;
          *((_QWORD *)v300 + 5) = v306;
          *((_QWORD *)v300 + 6) = v308;
          *((_QWORD *)v300 + 7) = v307;
          v300[64] = v402;
          v300[65] = v301[65];
          v300[66] = v301[66];
          v300[67] = v301[67];
          v300[68] = v301[68];
          v309 = v301[120];
          if (v309 == 255)
          {
            v310 = *(_OWORD *)(v301 + 72);
            v311 = *(_OWORD *)(v301 + 88);
            v312 = *(_OWORD *)(v301 + 104);
            v300[120] = v301[120];
            *(_OWORD *)(v300 + 88) = v311;
            *(_OWORD *)(v300 + 104) = v312;
            *(_OWORD *)(v300 + 72) = v310;
          }
          else
          {
            v403 = v309 & 1;
            v321 = (void *)*((_QWORD *)v301 + 9);
            v320 = *((_QWORD *)v301 + 10);
            v322 = *((_QWORD *)v301 + 11);
            v323 = *((_QWORD *)v301 + 12);
            v324 = *((_QWORD *)v301 + 13);
            v325 = *((_QWORD *)v301 + 14);
            sub_10002B764(v321, v320, v322, v323, v324, v325, v309 & 1);
            *((_QWORD *)v300 + 9) = v321;
            *((_QWORD *)v300 + 10) = v320;
            *((_QWORD *)v300 + 11) = v322;
            *((_QWORD *)v300 + 12) = v323;
            *((_QWORD *)v300 + 13) = v324;
            *((_QWORD *)v300 + 14) = v325;
            v300[120] = v403;
          }
          v319 = v413;
          v3 = v417;
          v300[121] = v301[121];
          v200 = v409;
        }
        else
        {
          v313 = *(_OWORD *)v301;
          v314 = *((_OWORD *)v301 + 1);
          v315 = *((_OWORD *)v301 + 3);
          *((_OWORD *)v300 + 2) = *((_OWORD *)v301 + 2);
          *((_OWORD *)v300 + 3) = v315;
          *(_OWORD *)v300 = v313;
          *((_OWORD *)v300 + 1) = v314;
          v316 = *((_OWORD *)v301 + 4);
          v317 = *((_OWORD *)v301 + 5);
          v318 = *((_OWORD *)v301 + 6);
          *(_OWORD *)(v300 + 106) = *(_OWORD *)(v301 + 106);
          *((_OWORD *)v300 + 5) = v317;
          *((_OWORD *)v300 + 6) = v318;
          *((_OWORD *)v300 + 4) = v316;
          v319 = v6;
        }
        *((_BYTE *)v200 + v298[6]) = *((_BYTE *)v201 + v298[6]);
        *((_BYTE *)v200 + v298[7]) = *((_BYTE *)v201 + v298[7]);
        *((_BYTE *)v200 + v298[8]) = *((_BYTE *)v201 + v298[8]);
        *((_BYTE *)v200 + v298[9]) = *((_BYTE *)v201 + v298[9]);
        *((_BYTE *)v200 + v298[10]) = *((_BYTE *)v201 + v298[10]);
        v326 = v298[11];
        v327 = *(void **)((char *)v201 + v326);
        *(void **)((char *)v200 + v326) = v327;
        v328 = v327;
        v243 = v200;
        v244 = v319;
        v245 = 0;
        goto LABEL_197;
      case 1u:
        v208 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v414 = v6;
        v418 = v3;
        switch(swift_getEnumCaseMultiPayload(v201, v208))
        {
          case 1u:
            v209 = *v201;
            *v200 = *v201;
            v210 = v209;
            v211 = v200;
            v212 = v208;
            v213 = 1;
            goto LABEL_156;
          case 2u:
            v329 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v200, v201, v329);
            v211 = v200;
            v212 = v208;
            v213 = 2;
            goto LABEL_156;
          case 3u:
            v330 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v200, v201, v330);
            v211 = v200;
            v212 = v208;
            v213 = 3;
            goto LABEL_156;
          case 4u:
            v331 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v331 - 8) + 16))(v200, v201, v331);
            v211 = v200;
            v212 = v208;
            v213 = 4;
            goto LABEL_156;
          case 5u:
            v332 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v200, v201, v332);
            v211 = v200;
            v212 = v208;
            v213 = 5;
            goto LABEL_156;
          case 6u:
            v333 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v200, v201, v333);
            v211 = v200;
            v212 = v208;
            v213 = 6;
            goto LABEL_156;
          case 8u:
            v334 = *v201;
            *v200 = *v201;
            v335 = v334;
            v211 = v200;
            v212 = v208;
            v213 = 8;
            goto LABEL_156;
          case 9u:
            v336 = *v201;
            *v200 = *v201;
            v337 = v336;
            v211 = v200;
            v212 = v208;
            v213 = 9;
LABEL_156:
            swift_storeEnumTagMultiPayload(v211, v212, v213);
            break;
          default:
            memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
            break;
        }
        v338 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v339 = v338[5];
        v340 = (char *)v200 + v339;
        v341 = (char *)v201 + v339;
        if (*(void **)((char *)v201 + v339 + 8))
        {
          v410 = v200;
          *(_QWORD *)v340 = *(_QWORD *)v341;
          v342 = *((_QWORD *)v341 + 1);
          *((_QWORD *)v340 + 1) = v342;
          v343 = (void *)*((_QWORD *)v341 + 2);
          v344 = *((_QWORD *)v341 + 3);
          v345 = *((_QWORD *)v341 + 4);
          v346 = *((_QWORD *)v341 + 5);
          v348 = *((_QWORD *)v341 + 6);
          v347 = *((_QWORD *)v341 + 7);
          v404 = v341[64];
          swift_bridgeObjectRetain(v342);
          sub_10003E1F0(v343, v344, v345, v346, v348, v347, v404);
          *((_QWORD *)v340 + 2) = v343;
          *((_QWORD *)v340 + 3) = v344;
          *((_QWORD *)v340 + 4) = v345;
          *((_QWORD *)v340 + 5) = v346;
          *((_QWORD *)v340 + 6) = v348;
          *((_QWORD *)v340 + 7) = v347;
          v340[64] = v404;
          v340[65] = v341[65];
          v340[66] = v341[66];
          v340[67] = v341[67];
          v340[68] = v341[68];
          v349 = v341[120];
          if (v349 == 255)
          {
            v350 = *(_OWORD *)(v341 + 72);
            v351 = *(_OWORD *)(v341 + 88);
            v352 = *(_OWORD *)(v341 + 104);
            v340[120] = v341[120];
            *(_OWORD *)(v340 + 88) = v351;
            *(_OWORD *)(v340 + 104) = v352;
            *(_OWORD *)(v340 + 72) = v350;
          }
          else
          {
            v405 = v349 & 1;
            v361 = (void *)*((_QWORD *)v341 + 9);
            v360 = *((_QWORD *)v341 + 10);
            v362 = *((_QWORD *)v341 + 11);
            v363 = *((_QWORD *)v341 + 12);
            v364 = *((_QWORD *)v341 + 13);
            v365 = *((_QWORD *)v341 + 14);
            sub_10002B764(v361, v360, v362, v363, v364, v365, v349 & 1);
            *((_QWORD *)v340 + 9) = v361;
            *((_QWORD *)v340 + 10) = v360;
            *((_QWORD *)v340 + 11) = v362;
            *((_QWORD *)v340 + 12) = v363;
            *((_QWORD *)v340 + 13) = v364;
            *((_QWORD *)v340 + 14) = v365;
            v340[120] = v405;
          }
          v359 = v414;
          v3 = v418;
          v340[121] = v341[121];
          v200 = v410;
        }
        else
        {
          v353 = *(_OWORD *)v341;
          v354 = *((_OWORD *)v341 + 1);
          v355 = *((_OWORD *)v341 + 3);
          *((_OWORD *)v340 + 2) = *((_OWORD *)v341 + 2);
          *((_OWORD *)v340 + 3) = v355;
          *(_OWORD *)v340 = v353;
          *((_OWORD *)v340 + 1) = v354;
          v356 = *((_OWORD *)v341 + 4);
          v357 = *((_OWORD *)v341 + 5);
          v358 = *((_OWORD *)v341 + 6);
          *(_OWORD *)(v340 + 106) = *(_OWORD *)(v341 + 106);
          *((_OWORD *)v340 + 5) = v357;
          *((_OWORD *)v340 + 6) = v358;
          *((_OWORD *)v340 + 4) = v356;
          v359 = v6;
        }
        *((_BYTE *)v200 + v338[6]) = *((_BYTE *)v201 + v338[6]);
        *((_BYTE *)v200 + v338[7]) = *((_BYTE *)v201 + v338[7]);
        *((_BYTE *)v200 + v338[8]) = *((_BYTE *)v201 + v338[8]);
        *((_BYTE *)v200 + v338[9]) = *((_BYTE *)v201 + v338[9]);
        *((_BYTE *)v200 + v338[10]) = *((_BYTE *)v201 + v338[10]);
        v366 = v338[11];
        v367 = *(void **)((char *)v201 + v366);
        *(void **)((char *)v200 + v366) = v367;
        v368 = v367;
        v243 = v200;
        v244 = v359;
        v245 = 1;
        goto LABEL_197;
      case 2u:
        v214 = *v201;
        *v200 = *v201;
        v215 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v216 = (void **)((char *)v200 + v215);
        v217 = (void **)((char *)v201 + v215);
        v218 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v219 = *(_QWORD *)(v218 - 8);
        v220 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v219 + 48);
        v221 = v214;
        if (v220(v217, 1, v218))
        {
          v222 = sub_10002A750(&qword_100644980);
          memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v217, v218))
          {
            case 1u:
              v258 = *v217;
              *v216 = *v217;
              v259 = v258;
              v260 = v216;
              v261 = v218;
              v262 = 1;
              goto LABEL_172;
            case 2u:
              v369 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v216, v217, v369);
              v260 = v216;
              v261 = v218;
              v262 = 2;
              goto LABEL_172;
            case 3u:
              v370 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v216, v217, v370);
              v260 = v216;
              v261 = v218;
              v262 = 3;
              goto LABEL_172;
            case 4u:
              v371 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v216, v217, v371);
              v260 = v216;
              v261 = v218;
              v262 = 4;
              goto LABEL_172;
            case 5u:
              v372 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v372 - 8) + 16))(v216, v217, v372);
              v260 = v216;
              v261 = v218;
              v262 = 5;
              goto LABEL_172;
            case 6u:
              v373 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v373 - 8) + 16))(v216, v217, v373);
              v260 = v216;
              v261 = v218;
              v262 = 6;
              goto LABEL_172;
            case 8u:
              v374 = *v217;
              *v216 = *v217;
              v375 = v374;
              v260 = v216;
              v261 = v218;
              v262 = 8;
              goto LABEL_172;
            case 9u:
              v376 = *v217;
              *v216 = *v217;
              v377 = v376;
              v260 = v216;
              v261 = v218;
              v262 = 9;
LABEL_172:
              swift_storeEnumTagMultiPayload(v260, v261, v262);
              break;
            default:
              memcpy(v216, v217, *(_QWORD *)(v219 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v219 + 56))(v216, 0, 1, v218);
        }
        v243 = v200;
        v244 = v6;
        v245 = 2;
        goto LABEL_197;
      case 3u:
        v223 = *v201;
        *v200 = *v201;
        v224 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v225 = (void **)((char *)v200 + v224);
        v226 = (void **)((char *)v201 + v224);
        v227 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v228 = *(_QWORD *)(v227 - 8);
        v229 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v228 + 48);
        v230 = v223;
        if (v229(v226, 1, v227))
        {
          v231 = sub_10002A750(&qword_100644980);
          memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v226, v227))
          {
            case 1u:
              v263 = *v226;
              *v225 = *v226;
              v264 = v263;
              v265 = v225;
              v266 = v227;
              v267 = 1;
              goto LABEL_183;
            case 2u:
              v378 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v378 - 8) + 16))(v225, v226, v378);
              v265 = v225;
              v266 = v227;
              v267 = 2;
              goto LABEL_183;
            case 3u:
              v379 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v379 - 8) + 16))(v225, v226, v379);
              v265 = v225;
              v266 = v227;
              v267 = 3;
              goto LABEL_183;
            case 4u:
              v380 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v225, v226, v380);
              v265 = v225;
              v266 = v227;
              v267 = 4;
              goto LABEL_183;
            case 5u:
              v381 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v225, v226, v381);
              v265 = v225;
              v266 = v227;
              v267 = 5;
              goto LABEL_183;
            case 6u:
              v382 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v225, v226, v382);
              v265 = v225;
              v266 = v227;
              v267 = 6;
              goto LABEL_183;
            case 8u:
              v383 = *v226;
              *v225 = *v226;
              v384 = v383;
              v265 = v225;
              v266 = v227;
              v267 = 8;
              goto LABEL_183;
            case 9u:
              v385 = *v226;
              *v225 = *v226;
              v386 = v385;
              v265 = v225;
              v266 = v227;
              v267 = 9;
LABEL_183:
              swift_storeEnumTagMultiPayload(v265, v266, v267);
              break;
            default:
              memcpy(v225, v226, *(_QWORD *)(v228 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
        }
        v243 = v200;
        v244 = v6;
        v245 = 3;
        goto LABEL_197;
      case 4u:
        v232 = *v201;
        *v200 = *v201;
        v233 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v234 = (void **)((char *)v200 + v233);
        v235 = (void **)((char *)v201 + v233);
        v236 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v237 = *(_QWORD *)(v236 - 8);
        v238 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v237 + 48);
        v239 = v232;
        if (v238(v235, 1, v236))
        {
          v240 = sub_10002A750(&qword_100644980);
          memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v235, v236))
          {
            case 1u:
              v268 = *v235;
              *v234 = *v235;
              v269 = v268;
              v270 = v234;
              v271 = v236;
              v272 = 1;
              goto LABEL_194;
            case 2u:
              v387 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v234, v235, v387);
              v270 = v234;
              v271 = v236;
              v272 = 2;
              goto LABEL_194;
            case 3u:
              v388 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v234, v235, v388);
              v270 = v234;
              v271 = v236;
              v272 = 3;
              goto LABEL_194;
            case 4u:
              v389 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v234, v235, v389);
              v270 = v234;
              v271 = v236;
              v272 = 4;
              goto LABEL_194;
            case 5u:
              v390 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v234, v235, v390);
              v270 = v234;
              v271 = v236;
              v272 = 5;
              goto LABEL_194;
            case 6u:
              v391 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v234, v235, v391);
              v270 = v234;
              v271 = v236;
              v272 = 6;
              goto LABEL_194;
            case 8u:
              v392 = *v235;
              *v234 = *v235;
              v393 = v392;
              v270 = v234;
              v271 = v236;
              v272 = 8;
              goto LABEL_194;
            case 9u:
              v394 = *v235;
              *v234 = *v235;
              v395 = v394;
              v270 = v234;
              v271 = v236;
              v272 = 9;
LABEL_194:
              swift_storeEnumTagMultiPayload(v270, v271, v272);
              break;
            default:
              memcpy(v234, v235, *(_QWORD *)(v237 + 64));
              break;
          }
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
        }
        v243 = v200;
        v244 = v6;
        v245 = 4;
        goto LABEL_197;
      case 5u:
        *v200 = *v201;
        *((_BYTE *)v200 + 8) = *((_BYTE *)v201 + 8);
        *((_BYTE *)v200 + 9) = *((_BYTE *)v201 + 9);
        *((_BYTE *)v200 + 10) = *((_BYTE *)v201 + 10);
        v241 = v201[2];
        v200[2] = v241;
        v242 = v241;
        v243 = v200;
        v244 = v6;
        v245 = 5;
        goto LABEL_197;
      case 6u:
        v253 = *v201;
        *v200 = *v201;
        v254 = v253;
        v243 = v200;
        v244 = v6;
        v245 = 6;
        goto LABEL_197;
      case 7u:
        v246 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v247 = *(_QWORD *)(v246 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v247 + 48))(v201, 1, v246))
        {
          v248 = sub_10002A750(&qword_100644600);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
        }
        else
        {
          v273 = *v201;
          *v200 = *v201;
          v274 = *(int *)(v246 + 20);
          v408 = (char *)v200 + v274;
          v275 = (char *)v201 + v274;
          v276 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v277 = v6;
          v278 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v276 - 8) + 16);
          v279 = swift_bridgeObjectRetain(v273);
          v278(v408, v275, v276, v279);
          v6 = v277;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v247 + 56))(v200, 0, 1, v246);
        }
        v280 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v281 = (void **)((char *)v200 + v280);
        v282 = (void **)((char *)v201 + v280);
        if (v282[1])
        {
          *v281 = *v282;
          v283 = v282[1];
          v281[1] = v283;
          v284 = (void *)v282[2];
          v281[2] = v284;
          swift_bridgeObjectRetain(v283);
          v285 = v284;
        }
        else
        {
          v286 = *(_OWORD *)v282;
          v281[2] = v282[2];
          *(_OWORD *)v281 = v286;
        }
        v243 = v200;
        v244 = v6;
        v245 = 7;
        goto LABEL_197;
      case 8u:
        v255 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v256 = *(_QWORD *)(v255 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v256 + 48))(v201, 1, v255))
        {
          v257 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
        }
        else
        {
          v287 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(v200, v201, v287);
          *((_BYTE *)v200 + *(int *)(v255 + 20)) = *((_BYTE *)v201 + *(int *)(v255 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v256 + 56))(v200, 0, 1, v255);
        }
        v288 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v200 + *(int *)(v288 + 20)) = *(void **)((char *)v201 + *(int *)(v288 + 20));
        v243 = v200;
        v244 = v6;
        v245 = 8;
        goto LABEL_197;
      case 9u:
        *(_BYTE *)v200 = *(_BYTE *)v201;
        v249 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v250 = (char *)v200 + v249;
        v251 = (char *)v201 + v249;
        v252 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(v250, v251, v252);
        v243 = v200;
        v244 = v6;
        v245 = 9;
LABEL_197:
        swift_storeEnumTagMultiPayload(v243, v244, v245);
        break;
      default:
        memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  return v3;
}

_QWORD *sub_10038BE20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  _OWORD *v176;
  _OWORD *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  _OWORD *v188;
  _OWORD *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v7))
      {
        case 2u:
          v8 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
          v9 = a1;
          v10 = v7;
          v11 = 2;
          goto LABEL_33;
        case 3u:
          v69 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
          v9 = a1;
          v10 = v7;
          v11 = 3;
          goto LABEL_33;
        case 4u:
          v70 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
          v9 = a1;
          v10 = v7;
          v11 = 4;
          goto LABEL_33;
        case 5u:
          v71 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v9 = a1;
          v10 = v7;
          v11 = 5;
          goto LABEL_33;
        case 6u:
          v72 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
          v9 = a1;
          v10 = v7;
          v11 = 6;
LABEL_33:
          swift_storeEnumTagMultiPayload(v9, v10, v11);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v74 = v73[5];
      v75 = (_OWORD *)((char *)a1 + v74);
      v76 = (_OWORD *)((char *)a2 + v74);
      v77 = v76[3];
      v75[2] = v76[2];
      v75[3] = v77;
      v78 = v76[1];
      *v75 = *v76;
      v75[1] = v78;
      *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
      v79 = v76[6];
      v80 = v76[4];
      v75[5] = v76[5];
      v75[6] = v79;
      v75[4] = v80;
      *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
      *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
      *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
      *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
      *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
      *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
      v45 = a1;
      v46 = v6;
      v47 = 0;
      goto LABEL_66;
    case 1u:
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(a2, v12))
      {
        case 2u:
          v13 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          v14 = a1;
          v15 = v12;
          v16 = 2;
          goto LABEL_40;
        case 3u:
          v81 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
          v14 = a1;
          v15 = v12;
          v16 = 3;
          goto LABEL_40;
        case 4u:
          v82 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
          v14 = a1;
          v15 = v12;
          v16 = 4;
          goto LABEL_40;
        case 5u:
          v83 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
          v14 = a1;
          v15 = v12;
          v16 = 5;
          goto LABEL_40;
        case 6u:
          v84 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
          v14 = a1;
          v15 = v12;
          v16 = 6;
LABEL_40:
          swift_storeEnumTagMultiPayload(v14, v15, v16);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v86 = v85[5];
      v87 = (_OWORD *)((char *)a1 + v86);
      v88 = (_OWORD *)((char *)a2 + v86);
      v89 = v88[3];
      v87[2] = v88[2];
      v87[3] = v89;
      v90 = v88[1];
      *v87 = *v88;
      v87[1] = v90;
      *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
      v91 = v88[6];
      v92 = v88[4];
      v87[5] = v88[5];
      v87[6] = v91;
      v87[4] = v92;
      *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
      *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
      *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
      *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
      *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
      *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
      v45 = a1;
      v46 = v6;
      v47 = 1;
      goto LABEL_66;
    case 2u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_10002A750(&qword_100644980);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v19, v20))
        {
          case 2u:
            v48 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
            v49 = v18;
            v50 = v20;
            v51 = 2;
            goto LABEL_47;
          case 3u:
            v93 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
            v49 = v18;
            v50 = v20;
            v51 = 3;
            goto LABEL_47;
          case 4u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
            v49 = v18;
            v50 = v20;
            v51 = 4;
            goto LABEL_47;
          case 5u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
            v49 = v18;
            v50 = v20;
            v51 = 5;
            goto LABEL_47;
          case 6u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
            v49 = v18;
            v50 = v20;
            v51 = 6;
LABEL_47:
            swift_storeEnumTagMultiPayload(v49, v50, v51);
            break;
          default:
            memcpy(v18, v19, *(_QWORD *)(v21 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v45 = a1;
      v46 = v6;
      v47 = 2;
      goto LABEL_66;
    case 3u:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_10002A750(&qword_100644980);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v25, v26))
        {
          case 2u:
            v52 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
            v53 = v24;
            v54 = v26;
            v55 = 2;
            goto LABEL_55;
          case 3u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
            v53 = v24;
            v54 = v26;
            v55 = 3;
            goto LABEL_55;
          case 4u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
            v53 = v24;
            v54 = v26;
            v55 = 4;
            goto LABEL_55;
          case 5u:
            v99 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
            v53 = v24;
            v54 = v26;
            v55 = 5;
            goto LABEL_55;
          case 6u:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
            v53 = v24;
            v54 = v26;
            v55 = 6;
LABEL_55:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
            break;
          default:
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      v45 = a1;
      v46 = v6;
      v47 = 3;
      goto LABEL_66;
    case 4u:
      *a1 = *a2;
      v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10002A750(&qword_100644980);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v31, v32))
        {
          case 2u:
            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
            v57 = v30;
            v58 = v32;
            v59 = 2;
            goto LABEL_63;
          case 3u:
            v101 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
            v57 = v30;
            v58 = v32;
            v59 = 3;
            goto LABEL_63;
          case 4u:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
            v57 = v30;
            v58 = v32;
            v59 = 4;
            goto LABEL_63;
          case 5u:
            v103 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
            v57 = v30;
            v58 = v32;
            v59 = 5;
            goto LABEL_63;
          case 6u:
            v104 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
            v57 = v30;
            v58 = v32;
            v59 = 6;
LABEL_63:
            swift_storeEnumTagMultiPayload(v57, v58, v59);
            break;
          default:
            memcpy(v30, v31, *(_QWORD *)(v33 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v45 = a1;
      v46 = v6;
      v47 = 4;
      goto LABEL_66;
    case 7u:
      v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
      {
        v37 = sub_10002A750(&qword_100644600);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v60 = *(int *)(v35 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
      }
      v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v45 = a1;
      v46 = v6;
      v47 = 7;
      goto LABEL_66;
    case 8u:
      v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
      {
        v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v67 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
        *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
      }
      v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
      v45 = a1;
      v46 = v6;
      v47 = 8;
      goto LABEL_66;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      v45 = a1;
      v46 = v6;
      v47 = 9;
LABEL_66:
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v105 = *(int *)(a3 + 20);
  v106 = (_QWORD *)((char *)a1 + v105);
  v107 = (_QWORD *)((char *)a2 + v105);
  switch(swift_getEnumCaseMultiPayload(v107, v6))
  {
    case 0u:
      v108 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v107, v108))
      {
        case 2u:
          v109 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v106, v107, v109);
          v110 = v106;
          v111 = v108;
          v112 = 2;
          goto LABEL_99;
        case 3u:
          v170 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v106, v107, v170);
          v110 = v106;
          v111 = v108;
          v112 = 3;
          goto LABEL_99;
        case 4u:
          v171 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v106, v107, v171);
          v110 = v106;
          v111 = v108;
          v112 = 4;
          goto LABEL_99;
        case 5u:
          v172 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v106, v107, v172);
          v110 = v106;
          v111 = v108;
          v112 = 5;
          goto LABEL_99;
        case 6u:
          v173 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v106, v107, v173);
          v110 = v106;
          v111 = v108;
          v112 = 6;
LABEL_99:
          swift_storeEnumTagMultiPayload(v110, v111, v112);
          break;
        default:
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          break;
      }
      v174 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v175 = v174[5];
      v176 = (_OWORD *)((char *)v106 + v175);
      v177 = (_OWORD *)((char *)v107 + v175);
      v178 = v177[3];
      v176[2] = v177[2];
      v176[3] = v178;
      v179 = v177[1];
      *v176 = *v177;
      v176[1] = v179;
      *(_OWORD *)((char *)v176 + 106) = *(_OWORD *)((char *)v177 + 106);
      v180 = v177[6];
      v181 = v177[4];
      v176[5] = v177[5];
      v176[6] = v180;
      v176[4] = v181;
      *((_BYTE *)v106 + v174[6]) = *((_BYTE *)v107 + v174[6]);
      *((_BYTE *)v106 + v174[7]) = *((_BYTE *)v107 + v174[7]);
      *((_BYTE *)v106 + v174[8]) = *((_BYTE *)v107 + v174[8]);
      *((_BYTE *)v106 + v174[9]) = *((_BYTE *)v107 + v174[9]);
      *((_BYTE *)v106 + v174[10]) = *((_BYTE *)v107 + v174[10]);
      *(_QWORD *)((char *)v106 + v174[11]) = *(_QWORD *)((char *)v107 + v174[11]);
      v146 = v106;
      v147 = v6;
      v148 = 0;
      goto LABEL_132;
    case 1u:
      v113 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v107, v113))
      {
        case 2u:
          v114 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v106, v107, v114);
          v115 = v106;
          v116 = v113;
          v117 = 2;
          goto LABEL_106;
        case 3u:
          v182 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v106, v107, v182);
          v115 = v106;
          v116 = v113;
          v117 = 3;
          goto LABEL_106;
        case 4u:
          v183 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v106, v107, v183);
          v115 = v106;
          v116 = v113;
          v117 = 4;
          goto LABEL_106;
        case 5u:
          v184 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v106, v107, v184);
          v115 = v106;
          v116 = v113;
          v117 = 5;
          goto LABEL_106;
        case 6u:
          v185 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v106, v107, v185);
          v115 = v106;
          v116 = v113;
          v117 = 6;
LABEL_106:
          swift_storeEnumTagMultiPayload(v115, v116, v117);
          break;
        default:
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          break;
      }
      v186 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v187 = v186[5];
      v188 = (_OWORD *)((char *)v106 + v187);
      v189 = (_OWORD *)((char *)v107 + v187);
      v190 = v189[3];
      v188[2] = v189[2];
      v188[3] = v190;
      v191 = v189[1];
      *v188 = *v189;
      v188[1] = v191;
      *(_OWORD *)((char *)v188 + 106) = *(_OWORD *)((char *)v189 + 106);
      v192 = v189[6];
      v193 = v189[4];
      v188[5] = v189[5];
      v188[6] = v192;
      v188[4] = v193;
      *((_BYTE *)v106 + v186[6]) = *((_BYTE *)v107 + v186[6]);
      *((_BYTE *)v106 + v186[7]) = *((_BYTE *)v107 + v186[7]);
      *((_BYTE *)v106 + v186[8]) = *((_BYTE *)v107 + v186[8]);
      *((_BYTE *)v106 + v186[9]) = *((_BYTE *)v107 + v186[9]);
      *((_BYTE *)v106 + v186[10]) = *((_BYTE *)v107 + v186[10]);
      *(_QWORD *)((char *)v106 + v186[11]) = *(_QWORD *)((char *)v107 + v186[11]);
      v146 = v106;
      v147 = v6;
      v148 = 1;
      goto LABEL_132;
    case 2u:
      *v106 = *v107;
      v118 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v119 = (char *)v106 + v118;
      v120 = (char *)v107 + v118;
      v121 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v122 = *(_QWORD *)(v121 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
      {
        v123 = sub_10002A750(&qword_100644980);
        memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v120, v121))
        {
          case 2u:
            v149 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v119, v120, v149);
            v150 = v119;
            v151 = v121;
            v152 = 2;
            goto LABEL_113;
          case 3u:
            v194 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v119, v120, v194);
            v150 = v119;
            v151 = v121;
            v152 = 3;
            goto LABEL_113;
          case 4u:
            v195 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v119, v120, v195);
            v150 = v119;
            v151 = v121;
            v152 = 4;
            goto LABEL_113;
          case 5u:
            v196 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v119, v120, v196);
            v150 = v119;
            v151 = v121;
            v152 = 5;
            goto LABEL_113;
          case 6u:
            v197 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v119, v120, v197);
            v150 = v119;
            v151 = v121;
            v152 = 6;
LABEL_113:
            swift_storeEnumTagMultiPayload(v150, v151, v152);
            break;
          default:
            memcpy(v119, v120, *(_QWORD *)(v122 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
      }
      v146 = v106;
      v147 = v6;
      v148 = 2;
      goto LABEL_132;
    case 3u:
      *v106 = *v107;
      v124 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v125 = (char *)v106 + v124;
      v126 = (char *)v107 + v124;
      v127 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v128 = *(_QWORD *)(v127 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
      {
        v129 = sub_10002A750(&qword_100644980);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v126, v127))
        {
          case 2u:
            v153 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v125, v126, v153);
            v154 = v125;
            v155 = v127;
            v156 = 2;
            goto LABEL_121;
          case 3u:
            v198 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v125, v126, v198);
            v154 = v125;
            v155 = v127;
            v156 = 3;
            goto LABEL_121;
          case 4u:
            v199 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v125, v126, v199);
            v154 = v125;
            v155 = v127;
            v156 = 4;
            goto LABEL_121;
          case 5u:
            v200 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v125, v126, v200);
            v154 = v125;
            v155 = v127;
            v156 = 5;
            goto LABEL_121;
          case 6u:
            v201 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v125, v126, v201);
            v154 = v125;
            v155 = v127;
            v156 = 6;
LABEL_121:
            swift_storeEnumTagMultiPayload(v154, v155, v156);
            break;
          default:
            memcpy(v125, v126, *(_QWORD *)(v128 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
      }
      v146 = v106;
      v147 = v6;
      v148 = 3;
      goto LABEL_132;
    case 4u:
      *v106 = *v107;
      v130 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v131 = (char *)v106 + v130;
      v132 = (char *)v107 + v130;
      v133 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v134 = *(_QWORD *)(v133 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
      {
        v135 = sub_10002A750(&qword_100644980);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload(v132, v133))
        {
          case 2u:
            v157 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v131, v132, v157);
            v158 = v131;
            v159 = v133;
            v160 = 2;
            goto LABEL_129;
          case 3u:
            v202 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v131, v132, v202);
            v158 = v131;
            v159 = v133;
            v160 = 3;
            goto LABEL_129;
          case 4u:
            v203 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v131, v132, v203);
            v158 = v131;
            v159 = v133;
            v160 = 4;
            goto LABEL_129;
          case 5u:
            v204 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v131, v132, v204);
            v158 = v131;
            v159 = v133;
            v160 = 5;
            goto LABEL_129;
          case 6u:
            v205 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v131, v132, v205);
            v158 = v131;
            v159 = v133;
            v160 = 6;
LABEL_129:
            swift_storeEnumTagMultiPayload(v158, v159, v160);
            break;
          default:
            memcpy(v131, v132, *(_QWORD *)(v134 + 64));
            break;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
      }
      v146 = v106;
      v147 = v6;
      v148 = 4;
      goto LABEL_132;
    case 7u:
      v136 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v137 = *(_QWORD *)(v136 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v137 + 48))(v107, 1, v136))
      {
        v138 = sub_10002A750(&qword_100644600);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        *v106 = *v107;
        v161 = *(int *)(v136 + 20);
        v162 = (char *)v106 + v161;
        v163 = (char *)v107 + v161;
        v164 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v162, v163, v164);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v106, 0, 1, v136);
      }
      v165 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v166 = (char *)v106 + v165;
      v167 = (char *)v107 + v165;
      *(_OWORD *)v166 = *(_OWORD *)v167;
      *((_QWORD *)v166 + 2) = *((_QWORD *)v167 + 2);
      v146 = v106;
      v147 = v6;
      v148 = 7;
      goto LABEL_132;
    case 8u:
      v139 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v140 = *(_QWORD *)(v139 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48))(v107, 1, v139))
      {
        v141 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        v168 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v106, v107, v168);
        *((_BYTE *)v106 + *(int *)(v139 + 20)) = *((_BYTE *)v107 + *(int *)(v139 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v106, 0, 1, v139);
      }
      v169 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)v106 + *(int *)(v169 + 20)) = *(_QWORD *)((char *)v107 + *(int *)(v169 + 20));
      v146 = v106;
      v147 = v6;
      v148 = 8;
      goto LABEL_132;
    case 9u:
      *(_BYTE *)v106 = *(_BYTE *)v107;
      v142 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v143 = (char *)v106 + v142;
      v144 = (char *)v107 + v142;
      v145 = type metadata accessor for AnyTip(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
      v146 = v106;
      v147 = v6;
      v148 = 9;
LABEL_132:
      swift_storeEnumTagMultiPayload(v146, v147, v148);
      break;
    default:
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_10038D490(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _OWORD *v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _OWORD *v87;
  _OWORD *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  _OWORD *v176;
  _OWORD *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int *v186;
  uint64_t v187;
  _OWORD *v188;
  _OWORD *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v7))
        {
          case 2u:
            v8 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
            v9 = a1;
            v10 = v7;
            v11 = 2;
            goto LABEL_34;
          case 3u:
            v69 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(a1, a2, v69);
            v9 = a1;
            v10 = v7;
            v11 = 3;
            goto LABEL_34;
          case 4u:
            v70 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
            v9 = a1;
            v10 = v7;
            v11 = 4;
            goto LABEL_34;
          case 5u:
            v71 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
            v9 = a1;
            v10 = v7;
            v11 = 5;
            goto LABEL_34;
          case 6u:
            v72 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(a1, a2, v72);
            v9 = a1;
            v10 = v7;
            v11 = 6;
LABEL_34:
            swift_storeEnumTagMultiPayload(v9, v10, v11);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v73 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v74 = v73[5];
        v75 = (_OWORD *)((char *)a1 + v74);
        v76 = (_OWORD *)((char *)a2 + v74);
        v77 = v76[3];
        v75[2] = v76[2];
        v75[3] = v77;
        v78 = v76[1];
        *v75 = *v76;
        v75[1] = v78;
        *(_OWORD *)((char *)v75 + 106) = *(_OWORD *)((char *)v76 + 106);
        v79 = v76[6];
        v80 = v76[4];
        v75[5] = v76[5];
        v75[6] = v79;
        v75[4] = v80;
        *((_BYTE *)a1 + v73[6]) = *((_BYTE *)a2 + v73[6]);
        *((_BYTE *)a1 + v73[7]) = *((_BYTE *)a2 + v73[7]);
        *((_BYTE *)a1 + v73[8]) = *((_BYTE *)a2 + v73[8]);
        *((_BYTE *)a1 + v73[9]) = *((_BYTE *)a2 + v73[9]);
        *((_BYTE *)a1 + v73[10]) = *((_BYTE *)a2 + v73[10]);
        *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)a2 + v73[11]);
        v45 = a1;
        v46 = v6;
        v47 = 0;
        goto LABEL_67;
      case 1u:
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(a2, v12))
        {
          case 2u:
            v13 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
            v14 = a1;
            v15 = v12;
            v16 = 2;
            goto LABEL_41;
          case 3u:
            v81 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(a1, a2, v81);
            v14 = a1;
            v15 = v12;
            v16 = 3;
            goto LABEL_41;
          case 4u:
            v82 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(a1, a2, v82);
            v14 = a1;
            v15 = v12;
            v16 = 4;
            goto LABEL_41;
          case 5u:
            v83 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
            v14 = a1;
            v15 = v12;
            v16 = 5;
            goto LABEL_41;
          case 6u:
            v84 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(a1, a2, v84);
            v14 = a1;
            v15 = v12;
            v16 = 6;
LABEL_41:
            swift_storeEnumTagMultiPayload(v14, v15, v16);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        v85 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v86 = v85[5];
        v87 = (_OWORD *)((char *)a1 + v86);
        v88 = (_OWORD *)((char *)a2 + v86);
        v89 = v88[3];
        v87[2] = v88[2];
        v87[3] = v89;
        v90 = v88[1];
        *v87 = *v88;
        v87[1] = v90;
        *(_OWORD *)((char *)v87 + 106) = *(_OWORD *)((char *)v88 + 106);
        v91 = v88[6];
        v92 = v88[4];
        v87[5] = v88[5];
        v87[6] = v91;
        v87[4] = v92;
        *((_BYTE *)a1 + v85[6]) = *((_BYTE *)a2 + v85[6]);
        *((_BYTE *)a1 + v85[7]) = *((_BYTE *)a2 + v85[7]);
        *((_BYTE *)a1 + v85[8]) = *((_BYTE *)a2 + v85[8]);
        *((_BYTE *)a1 + v85[9]) = *((_BYTE *)a2 + v85[9]);
        *((_BYTE *)a1 + v85[10]) = *((_BYTE *)a2 + v85[10]);
        *(_QWORD *)((char *)a1 + v85[11]) = *(_QWORD *)((char *)a2 + v85[11]);
        v45 = a1;
        v46 = v6;
        v47 = 1;
        goto LABEL_67;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = sub_10002A750(&qword_100644980);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v19, v20))
          {
            case 2u:
              v48 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v18, v19, v48);
              v49 = v18;
              v50 = v20;
              v51 = 2;
              goto LABEL_48;
            case 3u:
              v93 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v18, v19, v93);
              v49 = v18;
              v50 = v20;
              v51 = 3;
              goto LABEL_48;
            case 4u:
              v94 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v18, v19, v94);
              v49 = v18;
              v50 = v20;
              v51 = 4;
              goto LABEL_48;
            case 5u:
              v95 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v18, v19, v95);
              v49 = v18;
              v50 = v20;
              v51 = 5;
              goto LABEL_48;
            case 6u:
              v96 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v18, v19, v96);
              v49 = v18;
              v50 = v20;
              v51 = 6;
LABEL_48:
              swift_storeEnumTagMultiPayload(v49, v50, v51);
              break;
            default:
              memcpy(v18, v19, *(_QWORD *)(v21 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v45 = a1;
        v46 = v6;
        v47 = 2;
        goto LABEL_67;
      case 3u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10002A750(&qword_100644980);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v25, v26))
          {
            case 2u:
              v52 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v24, v25, v52);
              v53 = v24;
              v54 = v26;
              v55 = 2;
              goto LABEL_56;
            case 3u:
              v97 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v24, v25, v97);
              v53 = v24;
              v54 = v26;
              v55 = 3;
              goto LABEL_56;
            case 4u:
              v98 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v24, v25, v98);
              v53 = v24;
              v54 = v26;
              v55 = 4;
              goto LABEL_56;
            case 5u:
              v99 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v24, v25, v99);
              v53 = v24;
              v54 = v26;
              v55 = 5;
              goto LABEL_56;
            case 6u:
              v100 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v24, v25, v100);
              v53 = v24;
              v54 = v26;
              v55 = 6;
LABEL_56:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v45 = a1;
        v46 = v6;
        v47 = 3;
        goto LABEL_67;
      case 4u:
        *a1 = *a2;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          v34 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 2u:
              v56 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v30, v31, v56);
              v57 = v30;
              v58 = v32;
              v59 = 2;
              goto LABEL_64;
            case 3u:
              v101 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v30, v31, v101);
              v57 = v30;
              v58 = v32;
              v59 = 3;
              goto LABEL_64;
            case 4u:
              v102 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v30, v31, v102);
              v57 = v30;
              v58 = v32;
              v59 = 4;
              goto LABEL_64;
            case 5u:
              v103 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v30, v31, v103);
              v57 = v30;
              v58 = v32;
              v59 = 5;
              goto LABEL_64;
            case 6u:
              v104 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v30, v31, v104);
              v57 = v30;
              v58 = v32;
              v59 = 6;
LABEL_64:
              swift_storeEnumTagMultiPayload(v57, v58, v59);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v45 = a1;
        v46 = v6;
        v47 = 4;
        goto LABEL_67;
      case 7u:
        v35 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          v37 = sub_10002A750(&qword_100644600);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v60 = *(int *)(v35 + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        *(_OWORD *)v65 = *(_OWORD *)v66;
        *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
        v45 = a1;
        v46 = v6;
        v47 = 7;
        goto LABEL_67;
      case 8u:
        v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38))
        {
          v40 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v67 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(a1, a2, v67);
          *((_BYTE *)a1 + *(int *)(v38 + 20)) = *((_BYTE *)a2 + *(int *)(v38 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(a1, 0, 1, v38);
        }
        v68 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v68 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v68 + 20));
        v45 = a1;
        v46 = v6;
        v47 = 8;
        goto LABEL_67;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v41 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        v45 = a1;
        v46 = v6;
        v47 = 9;
LABEL_67:
        swift_storeEnumTagMultiPayload(v45, v46, v47);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v105 = *(int *)(a3 + 20);
    v106 = (_QWORD *)((char *)a1 + v105);
    v107 = (_QWORD *)((char *)a2 + v105);
    sub_10001F544((uint64_t)a1 + v105, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload(v107, v6))
    {
      case 0u:
        v108 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v107, v108))
        {
          case 2u:
            v109 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v106, v107, v109);
            v110 = v106;
            v111 = v108;
            v112 = 2;
            goto LABEL_100;
          case 3u:
            v170 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v106, v107, v170);
            v110 = v106;
            v111 = v108;
            v112 = 3;
            goto LABEL_100;
          case 4u:
            v171 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v106, v107, v171);
            v110 = v106;
            v111 = v108;
            v112 = 4;
            goto LABEL_100;
          case 5u:
            v172 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v106, v107, v172);
            v110 = v106;
            v111 = v108;
            v112 = 5;
            goto LABEL_100;
          case 6u:
            v173 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v106, v107, v173);
            v110 = v106;
            v111 = v108;
            v112 = 6;
LABEL_100:
            swift_storeEnumTagMultiPayload(v110, v111, v112);
            break;
          default:
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            break;
        }
        v174 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v175 = v174[5];
        v176 = (_OWORD *)((char *)v106 + v175);
        v177 = (_OWORD *)((char *)v107 + v175);
        v178 = v177[3];
        v176[2] = v177[2];
        v176[3] = v178;
        v179 = v177[1];
        *v176 = *v177;
        v176[1] = v179;
        *(_OWORD *)((char *)v176 + 106) = *(_OWORD *)((char *)v177 + 106);
        v180 = v177[6];
        v181 = v177[4];
        v176[5] = v177[5];
        v176[6] = v180;
        v176[4] = v181;
        *((_BYTE *)v106 + v174[6]) = *((_BYTE *)v107 + v174[6]);
        *((_BYTE *)v106 + v174[7]) = *((_BYTE *)v107 + v174[7]);
        *((_BYTE *)v106 + v174[8]) = *((_BYTE *)v107 + v174[8]);
        *((_BYTE *)v106 + v174[9]) = *((_BYTE *)v107 + v174[9]);
        *((_BYTE *)v106 + v174[10]) = *((_BYTE *)v107 + v174[10]);
        *(_QWORD *)((char *)v106 + v174[11]) = *(_QWORD *)((char *)v107 + v174[11]);
        v146 = v106;
        v147 = v6;
        v148 = 0;
        goto LABEL_133;
      case 1u:
        v113 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload(v107, v113))
        {
          case 2u:
            v114 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v106, v107, v114);
            v115 = v106;
            v116 = v113;
            v117 = 2;
            goto LABEL_107;
          case 3u:
            v182 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v106, v107, v182);
            v115 = v106;
            v116 = v113;
            v117 = 3;
            goto LABEL_107;
          case 4u:
            v183 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v106, v107, v183);
            v115 = v106;
            v116 = v113;
            v117 = 4;
            goto LABEL_107;
          case 5u:
            v184 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v106, v107, v184);
            v115 = v106;
            v116 = v113;
            v117 = 5;
            goto LABEL_107;
          case 6u:
            v185 = type metadata accessor for Date(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v106, v107, v185);
            v115 = v106;
            v116 = v113;
            v117 = 6;
LABEL_107:
            swift_storeEnumTagMultiPayload(v115, v116, v117);
            break;
          default:
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            break;
        }
        v186 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v187 = v186[5];
        v188 = (_OWORD *)((char *)v106 + v187);
        v189 = (_OWORD *)((char *)v107 + v187);
        v190 = v189[3];
        v188[2] = v189[2];
        v188[3] = v190;
        v191 = v189[1];
        *v188 = *v189;
        v188[1] = v191;
        *(_OWORD *)((char *)v188 + 106) = *(_OWORD *)((char *)v189 + 106);
        v192 = v189[6];
        v193 = v189[4];
        v188[5] = v189[5];
        v188[6] = v192;
        v188[4] = v193;
        *((_BYTE *)v106 + v186[6]) = *((_BYTE *)v107 + v186[6]);
        *((_BYTE *)v106 + v186[7]) = *((_BYTE *)v107 + v186[7]);
        *((_BYTE *)v106 + v186[8]) = *((_BYTE *)v107 + v186[8]);
        *((_BYTE *)v106 + v186[9]) = *((_BYTE *)v107 + v186[9]);
        *((_BYTE *)v106 + v186[10]) = *((_BYTE *)v107 + v186[10]);
        *(_QWORD *)((char *)v106 + v186[11]) = *(_QWORD *)((char *)v107 + v186[11]);
        v146 = v106;
        v147 = v6;
        v148 = 1;
        goto LABEL_133;
      case 2u:
        *v106 = *v107;
        v118 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v119 = (char *)v106 + v118;
        v120 = (char *)v107 + v118;
        v121 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v122 = *(_QWORD *)(v121 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
        {
          v123 = sub_10002A750(&qword_100644980);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v120, v121))
          {
            case 2u:
              v149 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v119, v120, v149);
              v150 = v119;
              v151 = v121;
              v152 = 2;
              goto LABEL_114;
            case 3u:
              v194 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v119, v120, v194);
              v150 = v119;
              v151 = v121;
              v152 = 3;
              goto LABEL_114;
            case 4u:
              v195 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v119, v120, v195);
              v150 = v119;
              v151 = v121;
              v152 = 4;
              goto LABEL_114;
            case 5u:
              v196 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v119, v120, v196);
              v150 = v119;
              v151 = v121;
              v152 = 5;
              goto LABEL_114;
            case 6u:
              v197 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32))(v119, v120, v197);
              v150 = v119;
              v151 = v121;
              v152 = 6;
LABEL_114:
              swift_storeEnumTagMultiPayload(v150, v151, v152);
              break;
            default:
              memcpy(v119, v120, *(_QWORD *)(v122 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
        }
        v146 = v106;
        v147 = v6;
        v148 = 2;
        goto LABEL_133;
      case 3u:
        *v106 = *v107;
        v124 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v125 = (char *)v106 + v124;
        v126 = (char *)v107 + v124;
        v127 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v128 = *(_QWORD *)(v127 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
        {
          v129 = sub_10002A750(&qword_100644980);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v126, v127))
          {
            case 2u:
              v153 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v125, v126, v153);
              v154 = v125;
              v155 = v127;
              v156 = 2;
              goto LABEL_122;
            case 3u:
              v198 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v125, v126, v198);
              v154 = v125;
              v155 = v127;
              v156 = 3;
              goto LABEL_122;
            case 4u:
              v199 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v125, v126, v199);
              v154 = v125;
              v155 = v127;
              v156 = 4;
              goto LABEL_122;
            case 5u:
              v200 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v125, v126, v200);
              v154 = v125;
              v155 = v127;
              v156 = 5;
              goto LABEL_122;
            case 6u:
              v201 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v125, v126, v201);
              v154 = v125;
              v155 = v127;
              v156 = 6;
LABEL_122:
              swift_storeEnumTagMultiPayload(v154, v155, v156);
              break;
            default:
              memcpy(v125, v126, *(_QWORD *)(v128 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
        }
        v146 = v106;
        v147 = v6;
        v148 = 3;
        goto LABEL_133;
      case 4u:
        *v106 = *v107;
        v130 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v131 = (char *)v106 + v130;
        v132 = (char *)v107 + v130;
        v133 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v134 = *(_QWORD *)(v133 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
        {
          v135 = sub_10002A750(&qword_100644980);
          memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v132, v133))
          {
            case 2u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v131, v132, v157);
              v158 = v131;
              v159 = v133;
              v160 = 2;
              goto LABEL_130;
            case 3u:
              v202 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v131, v132, v202);
              v158 = v131;
              v159 = v133;
              v160 = 3;
              goto LABEL_130;
            case 4u:
              v203 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v131, v132, v203);
              v158 = v131;
              v159 = v133;
              v160 = 4;
              goto LABEL_130;
            case 5u:
              v204 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v131, v132, v204);
              v158 = v131;
              v159 = v133;
              v160 = 5;
              goto LABEL_130;
            case 6u:
              v205 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v131, v132, v205);
              v158 = v131;
              v159 = v133;
              v160 = 6;
LABEL_130:
              swift_storeEnumTagMultiPayload(v158, v159, v160);
              break;
            default:
              memcpy(v131, v132, *(_QWORD *)(v134 + 64));
              break;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
        }
        v146 = v106;
        v147 = v6;
        v148 = 4;
        goto LABEL_133;
      case 7u:
        v136 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v137 = *(_QWORD *)(v136 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v137 + 48))(v107, 1, v136))
        {
          v138 = sub_10002A750(&qword_100644600);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
        }
        else
        {
          *v106 = *v107;
          v161 = *(int *)(v136 + 20);
          v162 = (char *)v106 + v161;
          v163 = (char *)v107 + v161;
          v164 = type metadata accessor for REMHashtagLabelSpecifier(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v162, v163, v164);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v106, 0, 1, v136);
        }
        v165 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v166 = (char *)v106 + v165;
        v167 = (char *)v107 + v165;
        *(_OWORD *)v166 = *(_OWORD *)v167;
        *((_QWORD *)v166 + 2) = *((_QWORD *)v167 + 2);
        v146 = v106;
        v147 = v6;
        v148 = 7;
        goto LABEL_133;
      case 8u:
        v139 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v140 = *(_QWORD *)(v139 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48))(v107, 1, v139))
        {
          v141 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          v168 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v106, v107, v168);
          *((_BYTE *)v106 + *(int *)(v139 + 20)) = *((_BYTE *)v107 + *(int *)(v139 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v106, 0, 1, v139);
        }
        v169 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)v106 + *(int *)(v169 + 20)) = *(_QWORD *)((char *)v107 + *(int *)(v169 + 20));
        v146 = v106;
        v147 = v6;
        v148 = 8;
        goto LABEL_133;
      case 9u:
        *(_BYTE *)v106 = *(_BYTE *)v107;
        v142 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v143 = (char *)v106 + v142;
        v144 = (char *)v107 + v142;
        v145 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
        v146 = v106;
        v147 = v6;
        v148 = 9;
LABEL_133:
        swift_storeEnumTagMultiPayload(v146, v147, v148);
        break;
      default:
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10038EB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038EB34);
}

uint64_t sub_10038EB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10038EB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038EB7C);
}

uint64_t sub_10038EB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(uint64_t a1)
{
  return sub_100007328(a1, qword_100658810, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
}

uint64_t sub_10038EBD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListTreeViewModel.AuxiliaryData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t destroy for TTRRemindersListTreeViewModel.AuxiliaryData(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t *assignWithCopy for TTRRemindersListTreeViewModel.AuxiliaryData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[1] = v6;
  return a1;
}

uint64_t *assignWithTake for TTRRemindersListTreeViewModel.AuxiliaryData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListTreeViewModel.AuxiliaryData(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListTreeViewModel.AuxiliaryData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListTreeViewModel.AuxiliaryData()
{
  return &type metadata for TTRRemindersListTreeViewModel.AuxiliaryData;
}

void **sub_10038EDCC(void **a1, void **a2, uint64_t a3)
{
  void **v3;
  int v5;
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void **v54;
  void **v55;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v3, v6))
    {
      case 1u:
        v7 = *v3;
        *a1 = *v3;
        v8 = v7;
        v9 = a1;
        v10 = v6;
        v11 = 1;
        goto LABEL_13;
      case 2u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v3, v13);
        v9 = a1;
        v10 = v6;
        v11 = 2;
        goto LABEL_13;
      case 3u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v3, v14);
        v9 = a1;
        v10 = v6;
        v11 = 3;
        goto LABEL_13;
      case 4u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, v3, v15);
        v9 = a1;
        v10 = v6;
        v11 = 4;
        goto LABEL_13;
      case 5u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v3, v16);
        v9 = a1;
        v10 = v6;
        v11 = 5;
        goto LABEL_13;
      case 6u:
        v17 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, v3, v17);
        v9 = a1;
        v10 = v6;
        v11 = 6;
        goto LABEL_13;
      case 8u:
        v18 = *v3;
        *a1 = *v3;
        v19 = v18;
        v9 = a1;
        v10 = v6;
        v11 = 8;
        goto LABEL_13;
      case 9u:
        v20 = *v3;
        *a1 = *v3;
        v21 = v20;
        v9 = a1;
        v10 = v6;
        v11 = 9;
LABEL_13:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    v22 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
    v23 = v22[5];
    v24 = (char *)a1 + v23;
    v25 = (char *)v3 + v23;
    v26 = *(uint64_t *)((char *)v3 + v23 + 8);
    if (v26)
    {
      v54 = a1;
      v55 = v3;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = (void *)*((_QWORD *)v25 + 2);
      v28 = *((_QWORD *)v25 + 3);
      v29 = *((_QWORD *)v25 + 4);
      v30 = *((_QWORD *)v25 + 5);
      v32 = *((_QWORD *)v25 + 6);
      v31 = *((_QWORD *)v25 + 7);
      v33 = v25[64];
      swift_bridgeObjectRetain(v26);
      sub_10003E1F0(v27, v28, v29, v30, v32, v31, v33);
      *((_QWORD *)v24 + 2) = v27;
      *((_QWORD *)v24 + 3) = v28;
      *((_QWORD *)v24 + 4) = v29;
      *((_QWORD *)v24 + 5) = v30;
      *((_QWORD *)v24 + 6) = v32;
      *((_QWORD *)v24 + 7) = v31;
      v24[64] = v33;
      *(_DWORD *)(v24 + 65) = *(_DWORD *)(v25 + 65);
      v34 = v25[120];
      if (v34 == 255)
      {
        v35 = *(_OWORD *)(v25 + 88);
        *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
        *(_OWORD *)(v24 + 88) = v35;
        *(_OWORD *)(v24 + 104) = *(_OWORD *)(v25 + 104);
        v24[120] = v25[120];
      }
      else
      {
        v40 = (void *)*((_QWORD *)v25 + 9);
        v41 = *((_QWORD *)v25 + 10);
        v42 = *((_QWORD *)v25 + 11);
        v43 = *((_QWORD *)v25 + 12);
        v44 = *((_QWORD *)v25 + 13);
        v45 = *((_QWORD *)v25 + 14);
        v46 = v34 & 1;
        sub_10002B764(v40, v41, v42, v43, v44, v45, v34 & 1);
        *((_QWORD *)v24 + 9) = v40;
        *((_QWORD *)v24 + 10) = v41;
        *((_QWORD *)v24 + 11) = v42;
        *((_QWORD *)v24 + 12) = v43;
        *((_QWORD *)v24 + 13) = v44;
        *((_QWORD *)v24 + 14) = v45;
        v24[120] = v46;
      }
      v3 = v55;
      v39 = a3;
      a1 = v54;
      v24[121] = v25[121];
    }
    else
    {
      v36 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v36;
      *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
      *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
      v37 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v37;
      v38 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v38;
      v39 = a3;
    }
    *((_BYTE *)a1 + v22[6]) = *((_BYTE *)v3 + v22[6]);
    *((_BYTE *)a1 + v22[7]) = *((_BYTE *)v3 + v22[7]);
    *((_BYTE *)a1 + v22[8]) = *((_BYTE *)v3 + v22[8]);
    *((_BYTE *)a1 + v22[9]) = *((_BYTE *)v3 + v22[9]);
    *((_BYTE *)a1 + v22[10]) = *((_BYTE *)v3 + v22[10]);
    v47 = v22[11];
    v48 = *(void **)((char *)v3 + v47);
    *(void **)((char *)a1 + v47) = v48;
    v49 = *(int *)(v39 + 20);
    v50 = *(int *)(v39 + 24);
    v51 = *(void **)((char *)v3 + v49);
    *(void **)((char *)a1 + v49) = v51;
    *((_BYTE *)a1 + v50) = *((_BYTE *)v3 + v50);
    v52 = v48;
    swift_bridgeObjectRetain(v51);
  }
  return a1;
}

void **sub_10038F174(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v52;
  void **v53;
  void **v54;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 1u:
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = v6;
      v11 = 1;
      goto LABEL_11;
    case 2u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = v6;
      v11 = 2;
      goto LABEL_11;
    case 3u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = v6;
      v11 = 3;
      goto LABEL_11;
    case 4u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = v6;
      v11 = 4;
      goto LABEL_11;
    case 5u:
      v15 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v9 = a1;
      v10 = v6;
      v11 = 5;
      goto LABEL_11;
    case 6u:
      v16 = type metadata accessor for Date(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v9 = a1;
      v10 = v6;
      v11 = 6;
      goto LABEL_11;
    case 8u:
      v17 = *a2;
      *a1 = *a2;
      v18 = v17;
      v9 = a1;
      v10 = v6;
      v11 = 8;
      goto LABEL_11;
    case 9u:
      v19 = *a2;
      *a1 = *a2;
      v20 = v19;
      v9 = a1;
      v10 = v6;
      v11 = 9;
LABEL_11:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v21 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v22 = v21[5];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t *)((char *)a2 + v22 + 8);
  if (v25)
  {
    v52 = a3;
    v53 = a2;
    v54 = a1;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = (void *)*((_QWORD *)v24 + 2);
    v27 = *((_QWORD *)v24 + 3);
    v28 = *((_QWORD *)v24 + 4);
    v29 = *((_QWORD *)v24 + 5);
    v30 = *((_QWORD *)v24 + 6);
    v31 = *((_QWORD *)v24 + 7);
    v32 = v24[64];
    swift_bridgeObjectRetain(v25);
    sub_10003E1F0(v26, v27, v28, v29, v30, v31, v32);
    *((_QWORD *)v23 + 2) = v26;
    *((_QWORD *)v23 + 3) = v27;
    *((_QWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 5) = v29;
    *((_QWORD *)v23 + 6) = v30;
    *((_QWORD *)v23 + 7) = v31;
    v23[64] = v32;
    *(_DWORD *)(v23 + 65) = *(_DWORD *)(v24 + 65);
    v33 = v24[120];
    if (v33 == 255)
    {
      v34 = *(_OWORD *)(v24 + 88);
      *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
      *(_OWORD *)(v23 + 88) = v34;
      *(_OWORD *)(v23 + 104) = *(_OWORD *)(v24 + 104);
      v23[120] = v24[120];
    }
    else
    {
      v38 = v33 & 1;
      v39 = (void *)*((_QWORD *)v24 + 9);
      v40 = *((_QWORD *)v24 + 10);
      v41 = *((_QWORD *)v24 + 11);
      v42 = *((_QWORD *)v24 + 12);
      v43 = *((_QWORD *)v24 + 13);
      v44 = *((_QWORD *)v24 + 14);
      sub_10002B764(v39, v40, v41, v42, v43, v44, v33 & 1);
      *((_QWORD *)v23 + 9) = v39;
      *((_QWORD *)v23 + 10) = v40;
      *((_QWORD *)v23 + 11) = v41;
      *((_QWORD *)v23 + 12) = v42;
      *((_QWORD *)v23 + 13) = v43;
      *((_QWORD *)v23 + 14) = v44;
      v23[120] = v38;
    }
    a2 = v53;
    a1 = v54;
    a3 = v52;
    v23[121] = v24[121];
  }
  else
  {
    v35 = *((_OWORD *)v24 + 5);
    *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
    *((_OWORD *)v23 + 5) = v35;
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    *(_OWORD *)(v23 + 106) = *(_OWORD *)(v24 + 106);
    v36 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v36;
    v37 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v37;
  }
  *((_BYTE *)a1 + v21[6]) = *((_BYTE *)a2 + v21[6]);
  *((_BYTE *)a1 + v21[7]) = *((_BYTE *)a2 + v21[7]);
  *((_BYTE *)a1 + v21[8]) = *((_BYTE *)a2 + v21[8]);
  *((_BYTE *)a1 + v21[9]) = *((_BYTE *)a2 + v21[9]);
  *((_BYTE *)a1 + v21[10]) = *((_BYTE *)a2 + v21[10]);
  v45 = v21[11];
  v46 = *(void **)((char *)a2 + v45);
  *(void **)((char *)a1 + v45) = v46;
  v47 = *(int *)(a3 + 20);
  v48 = *(int *)(a3 + 24);
  v49 = *(void **)((char *)a2 + v47);
  *(void **)((char *)a1 + v47) = v49;
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  v50 = v46;
  swift_bridgeObjectRetain(v49);
  return a1;
}

void **sub_10038F4EC(void **a1, void **a2, uint64_t a3)
{
  void **v4;
  uint64_t v6;
  void *v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  _OWORD *v43;
  __int128 *v44;
  int v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  int *v104;
  uint64_t v105;
  void **v106;

  v4 = a2;
  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(v4, v6))
    {
      case 1u:
        v7 = *v4;
        *a1 = *v4;
        v8 = v7;
        v9 = a1;
        v10 = v6;
        v11 = 1;
        goto LABEL_12;
      case 2u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, v4, v12);
        v9 = a1;
        v10 = v6;
        v11 = 2;
        goto LABEL_12;
      case 3u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v4, v13);
        v9 = a1;
        v10 = v6;
        v11 = 3;
        goto LABEL_12;
      case 4u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v4, v14);
        v9 = a1;
        v10 = v6;
        v11 = 4;
        goto LABEL_12;
      case 5u:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, v4, v15);
        v9 = a1;
        v10 = v6;
        v11 = 5;
        goto LABEL_12;
      case 6u:
        v16 = type metadata accessor for Date(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v4, v16);
        v9 = a1;
        v10 = v6;
        v11 = 6;
        goto LABEL_12;
      case 8u:
        v17 = *v4;
        *a1 = *v4;
        v18 = v17;
        v9 = a1;
        v10 = v6;
        v11 = 8;
        goto LABEL_12;
      case 9u:
        v19 = *v4;
        *a1 = *v4;
        v20 = v19;
        v9 = a1;
        v10 = v6;
        v11 = 9;
LABEL_12:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, v4, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v22 = (int *)v21;
  v23 = *(int *)(v21 + 20);
  v24 = (uint64_t)a1 + v23;
  v25 = (char *)v4 + v23;
  v26 = *(uint64_t *)((char *)a1 + v23 + 8);
  v27 = *(uint64_t *)((char *)v4 + v23 + 8);
  if (v26)
  {
    if (v27)
    {
      v104 = (int *)v21;
      v105 = a3;
      v106 = v4;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v28 = *((_QWORD *)v25 + 1);
      *(_QWORD *)(v24 + 8) = v28;
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRelease(v26);
      v29 = (void *)*((_QWORD *)v25 + 2);
      v30 = *((_QWORD *)v25 + 3);
      v31 = *((_QWORD *)v25 + 4);
      v32 = *((_QWORD *)v25 + 5);
      v34 = *((_QWORD *)v25 + 6);
      v33 = *((_QWORD *)v25 + 7);
      v35 = v25[64];
      sub_10003E1F0(v29, v30, v31, v32, v34, v33, v35);
      v36 = *(void **)(v24 + 16);
      v37 = *(_QWORD *)(v24 + 24);
      v38 = *(_QWORD *)(v24 + 32);
      v39 = *(_QWORD *)(v24 + 40);
      v40 = *(_QWORD *)(v24 + 48);
      v41 = *(_QWORD *)(v24 + 56);
      *(_QWORD *)(v24 + 16) = v29;
      *(_QWORD *)(v24 + 24) = v30;
      *(_QWORD *)(v24 + 32) = v31;
      *(_QWORD *)(v24 + 40) = v32;
      *(_QWORD *)(v24 + 48) = v34;
      *(_QWORD *)(v24 + 56) = v33;
      v42 = *(_BYTE *)(v24 + 64);
      *(_BYTE *)(v24 + 64) = v35;
      sub_10003E2EC(v36, v37, v38, v39, v40, v41, v42);
      *(_BYTE *)(v24 + 65) = v25[65];
      *(_BYTE *)(v24 + 66) = v25[66];
      *(_BYTE *)(v24 + 67) = v25[67];
      *(_BYTE *)(v24 + 68) = v25[68];
      v43 = (_OWORD *)(v24 + 72);
      v44 = (__int128 *)(v25 + 72);
      v45 = v25[120];
      if (*(unsigned __int8 *)(v24 + 120) != 255)
      {
        if (v45 == 255)
        {
          sub_100227BF8(v24 + 72);
          v47 = *(_OWORD *)(v25 + 88);
          v46 = *(_OWORD *)(v25 + 104);
          v48 = *v44;
          *(_BYTE *)(v24 + 120) = v25[120];
          *(_OWORD *)(v24 + 88) = v47;
          *(_OWORD *)(v24 + 104) = v46;
          *v43 = v48;
        }
        else
        {
          v82 = v45 & 1;
          v83 = (void *)*((_QWORD *)v25 + 9);
          v84 = *((_QWORD *)v25 + 10);
          v85 = *((_QWORD *)v25 + 11);
          v86 = *((_QWORD *)v25 + 12);
          v87 = *((_QWORD *)v25 + 13);
          v88 = *((_QWORD *)v25 + 14);
          sub_10002B764(v83, v84, v85, v86, v87, v88, v45 & 1);
          v89 = *(void **)(v24 + 72);
          v90 = *(_QWORD *)(v24 + 80);
          v91 = *(_QWORD *)(v24 + 88);
          v92 = *(_QWORD *)(v24 + 96);
          v93 = *(_QWORD *)(v24 + 104);
          v94 = *(_QWORD *)(v24 + 112);
          v95 = *(_BYTE *)(v24 + 120);
          *(_QWORD *)(v24 + 72) = v83;
          *(_QWORD *)(v24 + 80) = v84;
          *(_QWORD *)(v24 + 88) = v85;
          *(_QWORD *)(v24 + 96) = v86;
          *(_QWORD *)(v24 + 104) = v87;
          *(_QWORD *)(v24 + 112) = v88;
          *(_BYTE *)(v24 + 120) = v82;
          sub_10002B328(v89, v90, v91, v92, v93, v94, v95);
        }
        goto LABEL_27;
      }
      if (v45 == 255)
      {
        v66 = *v44;
        v67 = *(_OWORD *)(v25 + 88);
        v68 = *(_OWORD *)(v25 + 104);
        *(_BYTE *)(v24 + 120) = v25[120];
        *(_OWORD *)(v24 + 88) = v67;
        *(_OWORD *)(v24 + 104) = v68;
        *v43 = v66;
        goto LABEL_27;
      }
      goto LABEL_24;
    }
    sub_100227C2C(v24);
    v60 = *((_OWORD *)v25 + 3);
    v62 = *(_OWORD *)v25;
    v61 = *((_OWORD *)v25 + 1);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v60;
    *(_OWORD *)v24 = v62;
    *(_OWORD *)(v24 + 16) = v61;
    v64 = *((_OWORD *)v25 + 5);
    v63 = *((_OWORD *)v25 + 6);
    v65 = *((_OWORD *)v25 + 4);
    *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
    *(_OWORD *)(v24 + 80) = v64;
    *(_OWORD *)(v24 + 96) = v63;
    *(_OWORD *)(v24 + 64) = v65;
  }
  else
  {
    if (v27)
    {
      v104 = (int *)v21;
      v105 = a3;
      v106 = v4;
      *(_QWORD *)v24 = *(_QWORD *)v25;
      v49 = *((_QWORD *)v25 + 1);
      *(_QWORD *)(v24 + 8) = v49;
      v50 = (void *)*((_QWORD *)v25 + 2);
      v51 = *((_QWORD *)v25 + 3);
      v52 = *((_QWORD *)v25 + 4);
      v53 = *((_QWORD *)v25 + 5);
      v54 = *((_QWORD *)v25 + 6);
      v55 = *((_QWORD *)v25 + 7);
      v56 = v25[64];
      swift_bridgeObjectRetain(v49);
      sub_10003E1F0(v50, v51, v52, v53, v54, v55, v56);
      *(_QWORD *)(v24 + 16) = v50;
      *(_QWORD *)(v24 + 24) = v51;
      *(_QWORD *)(v24 + 32) = v52;
      *(_QWORD *)(v24 + 40) = v53;
      *(_QWORD *)(v24 + 48) = v54;
      *(_QWORD *)(v24 + 56) = v55;
      *(_BYTE *)(v24 + 64) = v56;
      *(_BYTE *)(v24 + 65) = v25[65];
      *(_BYTE *)(v24 + 66) = v25[66];
      *(_BYTE *)(v24 + 67) = v25[67];
      *(_BYTE *)(v24 + 68) = v25[68];
      v45 = v25[120];
      if (v45 == 255)
      {
        v57 = *(_OWORD *)(v25 + 72);
        v58 = *(_OWORD *)(v25 + 88);
        v59 = *(_OWORD *)(v25 + 104);
        *(_BYTE *)(v24 + 120) = v25[120];
        *(_OWORD *)(v24 + 88) = v58;
        *(_OWORD *)(v24 + 104) = v59;
        *(_OWORD *)(v24 + 72) = v57;
LABEL_27:
        a3 = v105;
        v4 = v106;
        v22 = v104;
        *(_BYTE *)(v24 + 121) = v25[121];
        goto LABEL_28;
      }
LABEL_24:
      v69 = v45 & 1;
      v70 = (void *)*((_QWORD *)v25 + 9);
      v71 = *((_QWORD *)v25 + 10);
      v72 = *((_QWORD *)v25 + 11);
      v73 = *((_QWORD *)v25 + 12);
      v74 = *((_QWORD *)v25 + 13);
      v75 = *((_QWORD *)v25 + 14);
      sub_10002B764(v70, v71, v72, v73, v74, v75, v45 & 1);
      *(_QWORD *)(v24 + 72) = v70;
      *(_QWORD *)(v24 + 80) = v71;
      *(_QWORD *)(v24 + 88) = v72;
      *(_QWORD *)(v24 + 96) = v73;
      *(_QWORD *)(v24 + 104) = v74;
      *(_QWORD *)(v24 + 112) = v75;
      *(_BYTE *)(v24 + 120) = v69;
      goto LABEL_27;
    }
    v76 = *(_OWORD *)v25;
    v77 = *((_OWORD *)v25 + 1);
    v78 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v78;
    *(_OWORD *)v24 = v76;
    *(_OWORD *)(v24 + 16) = v77;
    v79 = *((_OWORD *)v25 + 4);
    v80 = *((_OWORD *)v25 + 5);
    v81 = *((_OWORD *)v25 + 6);
    *(_OWORD *)(v24 + 106) = *(_OWORD *)(v25 + 106);
    *(_OWORD *)(v24 + 80) = v80;
    *(_OWORD *)(v24 + 96) = v81;
    *(_OWORD *)(v24 + 64) = v79;
  }
LABEL_28:
  *((_BYTE *)a1 + v22[6]) = *((_BYTE *)v4 + v22[6]);
  *((_BYTE *)a1 + v22[7]) = *((_BYTE *)v4 + v22[7]);
  *((_BYTE *)a1 + v22[8]) = *((_BYTE *)v4 + v22[8]);
  *((_BYTE *)a1 + v22[9]) = *((_BYTE *)v4 + v22[9]);
  *((_BYTE *)a1 + v22[10]) = *((_BYTE *)v4 + v22[10]);
  v96 = v22[11];
  v97 = *(void **)((char *)a1 + v96);
  v98 = *(void **)((char *)v4 + v96);
  *(void **)((char *)a1 + v96) = v98;
  v99 = v98;

  v100 = *(int *)(a3 + 20);
  v101 = *(void **)((char *)v4 + v100);
  v102 = *(uint64_t *)((char *)a1 + v100);
  *(void **)((char *)a1 + v100) = v101;
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRelease(v102);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)v4 + *(int *)(a3 + 24));
  return a1;
}

char *sub_10038FA48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  switch(swift_getEnumCaseMultiPayload(a2, v6))
  {
    case 2u:
      v7 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 2;
      goto LABEL_8;
    case 3u:
      v11 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v8 = a1;
      v9 = v6;
      v10 = 3;
      goto LABEL_8;
    case 4u:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v8 = a1;
      v9 = v6;
      v10 = 4;
      goto LABEL_8;
    case 5u:
      v13 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v8 = a1;
      v9 = v6;
      v10 = 5;
      goto LABEL_8;
    case 6u:
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v8 = a1;
      v9 = v6;
      v10 = 6;
LABEL_8:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
  v21 = *((_OWORD *)v18 + 6);
  v22 = *((_OWORD *)v18 + 4);
  *((_OWORD *)v17 + 5) = *((_OWORD *)v18 + 5);
  *((_OWORD *)v17 + 6) = v21;
  *((_OWORD *)v17 + 4) = v22;
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
  v23 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  a1[v23] = a2[v23];
  return a1;
}

char *sub_10038FC54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unsigned __int8 v29;
  int v30;
  int v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    switch(swift_getEnumCaseMultiPayload(a2, v6))
    {
      case 2u:
        v7 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = a1;
        v9 = v6;
        v10 = 2;
        goto LABEL_9;
      case 3u:
        v11 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v8 = a1;
        v9 = v6;
        v10 = 3;
        goto LABEL_9;
      case 4u:
        v12 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v8 = a1;
        v9 = v6;
        v10 = 4;
        goto LABEL_9;
      case 5u:
        v13 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v8 = a1;
        v9 = v6;
        v10 = 5;
        goto LABEL_9;
      case 6u:
        v14 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v8 = a1;
        v9 = v6;
        v10 = 6;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v15 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  v16 = v15[5];
  v17 = (uint64_t)&a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)&a1[v16 + 8];
  if (v19)
  {
    v20 = *((_QWORD *)v18 + 1);
    if (v20)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v20;
      swift_bridgeObjectRelease(v19);
      v21 = v18[64];
      v22 = *(void **)(v17 + 16);
      v23 = *(_QWORD *)(v17 + 24);
      v24 = *(_QWORD *)(v17 + 32);
      v25 = *(_QWORD *)(v17 + 40);
      v26 = *(_QWORD *)(v17 + 48);
      v27 = *(_QWORD *)(v17 + 56);
      v28 = *((_OWORD *)v18 + 2);
      *(_OWORD *)(v17 + 16) = *((_OWORD *)v18 + 1);
      *(_OWORD *)(v17 + 32) = v28;
      *(_OWORD *)(v17 + 48) = *((_OWORD *)v18 + 3);
      v29 = *(_BYTE *)(v17 + 64);
      *(_BYTE *)(v17 + 64) = v21;
      sub_10003E2EC(v22, v23, v24, v25, v26, v27, v29);
      *(_WORD *)(v17 + 65) = *(_WORD *)(v18 + 65);
      *(_BYTE *)(v17 + 67) = v18[67];
      *(_BYTE *)(v17 + 68) = v18[68];
      v30 = *(unsigned __int8 *)(v17 + 120);
      if (v30 != 255)
      {
        v31 = v18[120];
        if (v31 != 255)
        {
          v36 = *(void **)(v17 + 72);
          v37 = *(_QWORD *)(v17 + 80);
          v38 = *(_QWORD *)(v17 + 88);
          v39 = *(_QWORD *)(v17 + 96);
          v40 = *(_QWORD *)(v17 + 104);
          v41 = *(_QWORD *)(v17 + 112);
          *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
          *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
          *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
          *(_BYTE *)(v17 + 120) = v31 & 1;
          sub_10002B328(v36, v37, v38, v39, v40, v41, v30 & 1);
          goto LABEL_19;
        }
        sub_100227BF8(v17 + 72);
      }
      v32 = *(_OWORD *)(v18 + 88);
      *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
      *(_OWORD *)(v17 + 88) = v32;
      *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
      *(_BYTE *)(v17 + 120) = v18[120];
LABEL_19:
      *(_BYTE *)(v17 + 121) = v18[121];
      goto LABEL_20;
    }
    sub_100227C2C(v17);
  }
  v33 = *((_OWORD *)v18 + 5);
  *(_OWORD *)(v17 + 64) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v17 + 80) = v33;
  *(_OWORD *)(v17 + 96) = *((_OWORD *)v18 + 6);
  *(_OWORD *)(v17 + 106) = *(_OWORD *)(v18 + 106);
  v34 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v34;
  v35 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v17 + 32) = *((_OWORD *)v18 + 2);
  *(_OWORD *)(v17 + 48) = v35;
LABEL_20:
  a1[v15[6]] = a2[v15[6]];
  a1[v15[7]] = a2[v15[7]];
  a1[v15[8]] = a2[v15[8]];
  a1[v15[9]] = a2[v15[9]];
  a1[v15[10]] = a2[v15[10]];
  v42 = v15[11];
  v43 = *(void **)&a1[v42];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];

  v44 = *(int *)(a3 + 20);
  v45 = *(_QWORD *)&a1[v44];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
  swift_bridgeObjectRelease(v45);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_10038FF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038FF98);
}

uint64_t sub_10038FF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038FFA8);
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModel.Section(uint64_t a1)
{
  return sub_100007328(a1, qword_1006588A0, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModel.Section);
}

uint64_t sub_10038FFC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRRemindersListViewModel.SectionHeader(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = &unk_100531F08;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_100390040(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  id v9;

  v9 = a1;
  v3 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)(v9, v5);
  return v9;
}

uint64_t sub_1003900F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100390124(uint64_t result)
{
  if (result != 1)
    return swift_release(result);
  return result;
}

void sub_100390134(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  unint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  Swift::Int v36;
  uint64_t v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Swift::Int v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  _QWORD *v119;
  char *v120;
  _QWORD *v121;
  Swift::Int v122;
  Swift::Int v123;
  uint64_t v124;
  Swift::Int v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Swift::Int v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v134 = sub_10002A750(&qword_1006589A8);
  v127 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v124 = (uint64_t)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v135 = (uint64_t)&v120 - v5;
  __chkstk_darwin(v6);
  v132 = (uint64_t)&v120 - v7;
  __chkstk_darwin(v8);
  v131 = (uint64_t)&v120 - v9;
  v10 = a1[1];
  v11 = _minimumMergeRunLength(_:)(v10);
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      sub_100391934(0, v10, 1, a1);
    return;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v133 = a1;
  v122 = v11;
  v128 = v1;
  if (v10 < 2)
  {
    v16 = (char *)_swiftEmptyArrayStorage;
    v126 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    v121 = _swiftEmptyArrayStorage;
    if (v10 != 1)
    {
      v18 = _swiftEmptyArrayStorage[2];
LABEL_105:
      v105 = v16;
      if (v18 >= 2)
      {
        v112 = *v133;
        do
        {
          v113 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v112)
            goto LABEL_146;
          v114 = *(_QWORD *)&v105[16 * v113 + 32];
          v115 = *(_QWORD *)&v105[16 * v18 + 24];
          v116 = v128;
          sub_100391EB4(v112 + *(_QWORD *)(v127 + 72) * v114, v112 + *(_QWORD *)(v127 + 72) * *(_QWORD *)&v105[16 * v18 + 16], v112 + *(_QWORD *)(v127 + 72) * v115, v126);
          v128 = v116;
          if (v116)
            break;
          if (v115 < v114)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
            v105 = sub_100392EE4((uint64_t)v105);
          if (v113 >= *((_QWORD *)v105 + 2))
            goto LABEL_136;
          v117 = &v105[16 * v113 + 32];
          *(_QWORD *)v117 = v114;
          *((_QWORD *)v117 + 1) = v115;
          v118 = *((_QWORD *)v105 + 2);
          if (v18 > v118)
            goto LABEL_137;
          memmove(&v105[16 * v18 + 16], &v105[16 * v18 + 32], 16 * (v118 - v18));
          *((_QWORD *)v105 + 2) = v118 - 1;
          v18 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease(v105);
      v119 = v121;
      v121[2] = 0;
      swift_bridgeObjectRelease(v119);
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = static Array._allocateBufferUninitialized(minimumCapacity:)(v12 >> 1, v134);
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v127 + 80);
    v121 = (_QWORD *)v14;
    v126 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v133;
    v22 = *(_QWORD *)(v127 + 72);
    v23 = v131;
    sub_10000735C(*v133 + v22 * v20, v131, &qword_1006589A8);
    v24 = v21 + v22 * v17;
    v25 = v132;
    sub_10000735C(v24, v132, &qword_1006589A8);
    LODWORD(v130) = static IndexPath.< infix(_:_:)(v23 + *(int *)(v134 + 48), v25 + *(int *)(v134 + 48));
    sub_1000073A0(v25, &qword_1006589A8);
    sub_1000073A0(v23, &qword_1006589A8);
    v17 = v19 + 2;
    v129 = v21;
    v136 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v125 = v19;
    v26 = v16;
    v27 = v22 * v20;
    v28 = v21;
    v29 = v19 + 2;
    v30 = v22 * v29;
    do
    {
      v31 = v10;
      v32 = v131;
      sub_10000735C(v28 + v30, v131, &qword_1006589A8);
      v33 = v132;
      sub_10000735C(v28 + v27, v132, &qword_1006589A8);
      v34 = static IndexPath.< infix(_:_:)(v32 + *(int *)(v134 + 48), v33 + *(int *)(v134 + 48));
      sub_1000073A0(v33, &qword_1006589A8);
      sub_1000073A0(v32, &qword_1006589A8);
      if (((v130 ^ v34) & 1) != 0)
      {
        v16 = v26;
        v17 = v29;
        v19 = v125;
        v10 = v31;
        if ((v130 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v28 += v136;
      ++v29;
      v10 = v31;
    }
    while (v31 != v29);
    v16 = v26;
    v17 = v31;
    v19 = v125;
LABEL_21:
    if ((v130 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v51 = v136;
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v35 = v133;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100392A60(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_100392A60((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_122;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_123;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_125;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_128;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_132;
            v92 = v67 < v102;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_88;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_127;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_130;
        if (__OFADD__(v86, v91))
          goto LABEL_131;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_94:
          if (v92)
            v64 = v76;
          goto LABEL_96;
        }
LABEL_88:
        if ((v87 & 1) != 0)
          goto LABEL_126;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_129;
        if (v98 < v86)
          goto LABEL_14;
LABEL_96:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v133)
          goto LABEL_144;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v128;
        sub_100391EB4(*v133 + *(_QWORD *)(v127 + 72) * *(_QWORD *)v106, *v133 + *(_QWORD *)(v127 + 72) * *(_QWORD *)v108, *v133 + *(_QWORD *)(v127 + 72) * v109, v126);
        v128 = v110;
        if (v110)
          goto LABEL_116;
        if (v109 < v107)
          goto LABEL_119;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_120;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_121;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v133[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v130 = v10;
  v120 = v16;
  v52 = 0;
  v53 = v136 * (v17 - 1);
  v54 = v17 * v136;
  v55 = v19;
  v56 = v19 * v136;
  v35 = v133;
  v125 = v19;
  do
  {
    if (v55 != v17 + v52 - 1)
    {
      v57 = v129;
      if (!v129)
        goto LABEL_145;
      v58 = v129 + v56;
      v59 = v129 + v53;
      sub_10000F614(v129 + v56, v124, &qword_1006589A8);
      if (v56 < v53 || v58 >= v57 + v54)
      {
        swift_arrayInitWithTakeFrontToBack(v57 + v56, v57 + v53, 1, v134);
        v51 = v136;
      }
      else
      {
        v51 = v136;
        if (v56 != v53)
          swift_arrayInitWithTakeBackToFront(v58, v59);
      }
      sub_10000F614(v124, v59, &qword_1006589A8);
      v35 = v133;
      v19 = v125;
    }
    ++v55;
    --v52;
    v53 -= v51;
    v54 -= v51;
    v56 += v51;
  }
  while (v55 < v17 + v52);
  v16 = v120;
  v10 = v130;
  if (v17 >= v130)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v122)
    goto LABEL_57;
  if (__OFADD__(v19, v122))
    goto LABEL_141;
  if (v19 + v122 >= v10)
    v36 = v10;
  else
    v36 = v19 + v122;
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      v120 = v16;
      v37 = *(_QWORD *)(v127 + 72);
      v136 = v37 * (v17 - 1);
      v129 = v37;
      v38 = v17 * v37;
      v125 = v19;
      v123 = v36;
      do
      {
        v40 = 0;
        v41 = v19;
        v130 = v17;
        while (1)
        {
          v42 = *v35;
          v43 = v38;
          v44 = v38 + v40 + *v35;
          v45 = v131;
          v46 = v35;
          sub_10000735C(v44, v131, &qword_1006589A8);
          v47 = v132;
          sub_10000735C(v136 + v40 + v42, v132, &qword_1006589A8);
          LOBYTE(v42) = static IndexPath.< infix(_:_:)(v45 + *(int *)(v134 + 48), v47 + *(int *)(v134 + 48));
          sub_1000073A0(v47, &qword_1006589A8);
          sub_1000073A0(v45, &qword_1006589A8);
          if ((v42 & 1) == 0)
            break;
          v48 = *v46;
          if (!*v46)
            goto LABEL_143;
          v38 = v43;
          v49 = v48 + v43 + v40;
          v50 = v48 + v136 + v40;
          sub_10000F614(v49, v135, &qword_1006589A8);
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v134);
          sub_10000F614(v135, v50, &qword_1006589A8);
          v39 = v130;
          v40 -= v129;
          ++v41;
          v35 = v133;
          if (v130 == v41)
            goto LABEL_35;
        }
        v39 = v130;
        v38 = v43;
        v35 = v46;
LABEL_35:
        v17 = v39 + 1;
        v136 += v129;
        v38 += v129;
        v19 = v125;
      }
      while (v17 != v123);
      v17 = v123;
      v16 = v120;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

Swift::Int sub_100390B34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Swift::Int v68;
  Swift::Int v69;
  Swift::Int v70;
  uint64_t v71;
  uint64_t v72;
  Swift::Int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  _QWORD *v142;
  char *v143;
  _QWORD *v144;
  Swift::Int v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  Swift::Int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  Swift::Int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  v168 = sub_10002A750(&qword_10064B6B0);
  v2 = __chkstk_darwin(v168);
  v161 = (uint64_t)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v143 - v5;
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v143 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v143 - v11;
  v13 = __chkstk_darwin(v10);
  v148 = (uint64_t)&v143 - v14;
  __chkstk_darwin(v13);
  v147 = (uint64_t)&v143 - v15;
  v169 = sub_10002A750(&qword_1006588F0);
  v158 = *(_QWORD *)(v169 - 8);
  v16 = __chkstk_darwin(v169);
  v152 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v164 = (uint64_t)&v143 - v19;
  v20 = __chkstk_darwin(v18);
  v170 = (uint64_t)&v143 - v21;
  v22 = __chkstk_darwin(v20);
  v165 = (uint64_t)&v143 - v23;
  v24 = __chkstk_darwin(v22);
  v159 = (uint64_t)&v143 - v25;
  v26 = __chkstk_darwin(v24);
  v156 = (uint64_t)&v143 - v27;
  v28 = __chkstk_darwin(v26);
  v150 = (uint64_t)&v143 - v29;
  __chkstk_darwin(v28);
  v149 = (uint64_t)&v143 - v30;
  v167 = a1;
  v31 = a1[1];
  result = _minimumMergeRunLength(_:)(v31);
  if (result >= v31)
  {
    if (v31 < 0)
      goto LABEL_160;
    if (v31)
      return sub_100391B74(0, v31, 1, v167);
    return result;
  }
  if (v31 >= 0)
    v33 = v31;
  else
    v33 = v31 + 1;
  if (v31 < -1)
    goto LABEL_168;
  v162 = v6;
  v145 = result;
  if (v31 < 2)
  {
    v37 = _swiftEmptyArrayStorage;
    v157 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    if (v31 != 1)
    {
      v40 = _swiftEmptyArrayStorage[2];
      v39 = (char *)_swiftEmptyArrayStorage;
LABEL_126:
      v128 = v39;
      v144 = v37;
      v135 = v160;
      if (v40 >= 2)
      {
        v136 = *v167;
        do
        {
          v137 = v40 - 2;
          if (v40 < 2)
            goto LABEL_155;
          if (!v136)
            goto LABEL_167;
          v138 = *(_QWORD *)&v128[16 * v137 + 32];
          v139 = *(_QWORD *)&v128[16 * v40 + 24];
          sub_100392370(v136 + *(_QWORD *)(v158 + 72) * v138, v136 + *(_QWORD *)(v158 + 72) * *(_QWORD *)&v128[16 * v40 + 16], v136 + *(_QWORD *)(v158 + 72) * v139, v157);
          if (v135)
            break;
          if (v139 < v138)
            goto LABEL_156;
          if ((swift_isUniquelyReferenced_nonNull_native(v128) & 1) == 0)
            v128 = sub_100392EE4((uint64_t)v128);
          if (v137 >= *((_QWORD *)v128 + 2))
            goto LABEL_157;
          v140 = &v128[16 * v137 + 32];
          *(_QWORD *)v140 = v138;
          *((_QWORD *)v140 + 1) = v139;
          v141 = *((_QWORD *)v128 + 2);
          if (v40 > v141)
            goto LABEL_158;
          memmove(&v128[16 * v40 + 16], &v128[16 * v40 + 32], 16 * (v141 - v40));
          *((_QWORD *)v128 + 2) = v141 - 1;
          v40 = v141 - 1;
        }
        while (v141 > 2);
      }
LABEL_137:
      swift_bridgeObjectRelease(v128);
      v142 = v144;
      v144[2] = 0;
      return swift_bridgeObjectRelease(v142);
    }
    v144 = _swiftEmptyArrayStorage;
  }
  else
  {
    v34 = v33 >> 1;
    v35 = static Array._allocateBufferUninitialized(minimumCapacity:)(v33 >> 1, v169);
    *(_QWORD *)(v35 + 16) = v34;
    v36 = *(unsigned __int8 *)(v158 + 80);
    v144 = (_QWORD *)v35;
    v157 = v35 + ((v36 + 32) & ~v36);
  }
  v38 = 0;
  v39 = (char *)_swiftEmptyArrayStorage;
  v153 = v12;
  while (1)
  {
    v41 = v38;
    v42 = v38 + 1;
    v155 = v38;
    if (v38 + 1 >= v31)
    {
      v48 = v38 + 1;
      v49 = (uint64_t)v162;
      v50 = v160;
    }
    else
    {
      v163 = v31;
      v43 = *v167;
      v44 = *(_QWORD *)(v158 + 72);
      v45 = v149;
      sub_10000735C(*v167 + v44 * v42, v149, &qword_1006588F0);
      v166 = v44;
      sub_10000735C(v43 + v44 * v41, v150, &qword_1006588F0);
      v46 = v45 + *(int *)(v169 + 56);
      v47 = v147;
      sub_10000735C(v46, v147, &qword_10064B6B0);
      if (swift_getEnumCaseMultiPayload(v47, v168) == 1)
        v154 = *(_QWORD *)(v47 + *(int *)(sub_10002A750(&qword_1006588F8) + 48));
      else
        v154 = 0;
      sub_1000073A0(v47, (uint64_t *)&unk_100640EB0);
      v51 = v148;
      sub_10000735C(v150 + *(int *)(v169 + 56), v148, &qword_10064B6B0);
      if (swift_getEnumCaseMultiPayload(v51, v168) == 1)
        v52 = *(_QWORD *)(v51 + *(int *)(sub_10002A750(&qword_1006588F8) + 48));
      else
        v52 = 0;
      sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
      sub_1000073A0(v150, &qword_1006588F0);
      sub_1000073A0(v149, &qword_1006588F0);
      v48 = v41 + 2;
      v151 = v43;
      if (v41 + 2 < v163)
      {
        v146 = v39;
        v53 = v166 * v42;
        v54 = v43;
        v55 = v166 * v48;
        while (1)
        {
          v56 = v48;
          v57 = v156;
          sub_10000735C(v54 + v55, v156, &qword_1006588F0);
          sub_10000735C(v54 + v53, v159, &qword_1006588F0);
          sub_10000735C(v57 + *(int *)(v169 + 56), (uint64_t)v12, &qword_10064B6B0);
          v58 = swift_getEnumCaseMultiPayload(v12, v168) == 1
              ? *(_QWORD *)&v12[*(int *)(sub_10002A750(&qword_1006588F8) + 48)]
              : 0;
          sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
          sub_10000735C(v159 + *(int *)(v169 + 56), (uint64_t)v9, &qword_10064B6B0);
          if (swift_getEnumCaseMultiPayload(v9, v168) == 1)
          {
            v59 = *(int *)(sub_10002A750(&qword_1006588F8) + 48);
            v60 = (uint64_t)v9;
            v61 = *(_QWORD *)&v9[v59];
          }
          else
          {
            v60 = (uint64_t)v9;
            v61 = 0;
          }
          v62 = v154 < v52;
          v9 = (char *)v60;
          sub_1000073A0(v60, (uint64_t *)&unk_100640EB0);
          sub_1000073A0(v159, &qword_1006588F0);
          sub_1000073A0(v156, &qword_1006588F0);
          if (v62 == v58 >= v61)
            break;
          v48 = v56 + 1;
          v54 += v166;
          v12 = v153;
          if (v163 == v56 + 1)
          {
            v48 = v163;
            v39 = v146;
            goto LABEL_36;
          }
        }
        v39 = v146;
        v48 = v56;
LABEL_36:
        v41 = v155;
        v43 = v151;
      }
      v49 = (uint64_t)v162;
      v50 = v160;
      if (v154 >= v52)
        goto LABEL_51;
      v31 = v163;
      if (v48 < v41)
        goto LABEL_161;
      if (v41 < v48)
      {
        v146 = v39;
        v143 = v9;
        v63 = 0;
        v64 = v166 * (v48 - 1);
        v65 = v48 * v166;
        v66 = v41;
        v67 = v41 * v166;
        do
        {
          if (v66 != v48 + v63 - 1)
          {
            if (!v43)
              goto LABEL_166;
            sub_10000F614(v43 + v67, v152, &qword_1006588F0);
            if (v67 < v64 || v43 + v67 >= (unint64_t)(v43 + v65))
            {
              swift_arrayInitWithTakeFrontToBack(v43 + v67, v43 + v64, 1, v169);
            }
            else if (v67 != v64)
            {
              swift_arrayInitWithTakeBackToFront(v43 + v67, v43 + v64);
            }
            sub_10000F614(v152, v43 + v64, &qword_1006588F0);
            v41 = v155;
            v43 = v151;
          }
          ++v66;
          --v63;
          v64 -= v166;
          v65 -= v166;
          v67 += v166;
        }
        while (v66 < v48 + v63);
        v49 = (uint64_t)v162;
        v9 = v143;
        v39 = v146;
        v50 = v160;
LABEL_51:
        v31 = v163;
      }
    }
    if (v48 < v31)
    {
      if (__OFSUB__(v48, v41))
        goto LABEL_159;
      if (v48 - v41 < v145)
        break;
    }
LABEL_76:
    if (v48 < v41)
      goto LABEL_154;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v39);
    v166 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v39 = sub_100392A60(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
    v84 = *((_QWORD *)v39 + 2);
    v83 = *((_QWORD *)v39 + 3);
    v40 = v84 + 1;
    if (v84 >= v83 >> 1)
      v39 = sub_100392A60((char *)(v83 > 1), v84 + 1, 1, v39);
    v160 = v50;
    *((_QWORD *)v39 + 2) = v40;
    v85 = v39 + 32;
    v86 = &v39[16 * v84 + 32];
    v87 = v166;
    *(_QWORD *)v86 = v41;
    *((_QWORD *)v86 + 1) = v87;
    if (v84)
    {
      while (1)
      {
        v88 = v40 - 1;
        if (v40 >= 4)
        {
          v93 = &v85[16 * v40];
          v94 = *((_QWORD *)v93 - 8);
          v95 = *((_QWORD *)v93 - 7);
          v99 = __OFSUB__(v95, v94);
          v96 = v95 - v94;
          if (v99)
            goto LABEL_143;
          v98 = *((_QWORD *)v93 - 6);
          v97 = *((_QWORD *)v93 - 5);
          v99 = __OFSUB__(v97, v98);
          v91 = v97 - v98;
          v92 = v99;
          if (v99)
            goto LABEL_144;
          v100 = v40 - 2;
          v101 = &v85[16 * v40 - 32];
          v103 = *(_QWORD *)v101;
          v102 = *((_QWORD *)v101 + 1);
          v99 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          if (v99)
            goto LABEL_146;
          v99 = __OFADD__(v91, v104);
          v105 = v91 + v104;
          if (v99)
            goto LABEL_149;
          if (v105 >= v96)
          {
            v123 = &v85[16 * v88];
            v125 = *(_QWORD *)v123;
            v124 = *((_QWORD *)v123 + 1);
            v99 = __OFSUB__(v124, v125);
            v126 = v124 - v125;
            if (v99)
              goto LABEL_153;
            v116 = v91 < v126;
            goto LABEL_113;
          }
        }
        else
        {
          if (v40 != 3)
          {
            v117 = *((_QWORD *)v39 + 4);
            v118 = *((_QWORD *)v39 + 5);
            v99 = __OFSUB__(v118, v117);
            v110 = v118 - v117;
            v111 = v99;
            goto LABEL_107;
          }
          v90 = *((_QWORD *)v39 + 4);
          v89 = *((_QWORD *)v39 + 5);
          v99 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          v92 = v99;
        }
        if ((v92 & 1) != 0)
          goto LABEL_145;
        v100 = v40 - 2;
        v106 = &v85[16 * v40 - 32];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v109 = __OFSUB__(v107, v108);
        v110 = v107 - v108;
        v111 = v109;
        if (v109)
          goto LABEL_148;
        v112 = &v85[16 * v88];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v99 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v99)
          goto LABEL_151;
        if (__OFADD__(v110, v115))
          goto LABEL_152;
        if (v110 + v115 >= v91)
        {
          v116 = v91 < v115;
LABEL_113:
          if (v116)
            v88 = v100;
          goto LABEL_115;
        }
LABEL_107:
        if ((v111 & 1) != 0)
          goto LABEL_147;
        v119 = &v85[16 * v88];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v99 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v99)
          goto LABEL_150;
        if (v122 < v110)
          goto LABEL_15;
LABEL_115:
        v127 = v88 - 1;
        if (v88 - 1 >= v40)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!*v167)
          goto LABEL_165;
        v128 = v39;
        v129 = &v85[16 * v127];
        v130 = *(_QWORD *)v129;
        v131 = &v85[16 * v88];
        v132 = *((_QWORD *)v131 + 1);
        v133 = v160;
        sub_100392370(*v167 + *(_QWORD *)(v158 + 72) * *(_QWORD *)v129, *v167 + *(_QWORD *)(v158 + 72) * *(_QWORD *)v131, *v167 + *(_QWORD *)(v158 + 72) * v132, v157);
        v160 = v133;
        if (v133)
          goto LABEL_137;
        if (v132 < v130)
          goto LABEL_140;
        if (v88 > *((_QWORD *)v128 + 2))
          goto LABEL_141;
        *(_QWORD *)v129 = v130;
        *(_QWORD *)&v85[16 * v127 + 8] = v132;
        v134 = *((_QWORD *)v128 + 2);
        if (v88 >= v134)
          goto LABEL_142;
        v39 = v128;
        v40 = v134 - 1;
        memmove(&v85[16 * v88], v131 + 16, 16 * (v134 - 1 - v88));
        *((_QWORD *)v128 + 2) = v134 - 1;
        if (v134 <= 2)
          goto LABEL_15;
      }
    }
    v40 = 1;
LABEL_15:
    v31 = v167[1];
    v38 = v166;
    v12 = v153;
    if (v166 >= v31)
    {
      v37 = v144;
      goto LABEL_126;
    }
  }
  if (__OFADD__(v41, v145))
    goto LABEL_162;
  if (v41 + v145 >= v31)
    v68 = v31;
  else
    v68 = v41 + v145;
  if (v68 >= v41)
  {
    if (v48 != v68)
    {
      v146 = v39;
      v143 = v9;
      v160 = v50;
      v69 = *(_QWORD *)(v158 + 72);
      v166 = v69 * (v48 - 1);
      v163 = v69;
      v70 = v48 * v69;
      v154 = v68;
      do
      {
        v71 = 0;
        v72 = v41;
        while (1)
        {
          v73 = v48;
          v74 = *v167;
          v75 = v165;
          sub_10000735C(v70 + v71 + *v167, v165, &qword_1006588F0);
          sub_10000735C(v166 + v71 + v74, v170, &qword_1006588F0);
          sub_10000735C(v75 + *(int *)(v169 + 56), v49, &qword_10064B6B0);
          v76 = swift_getEnumCaseMultiPayload(v49, v168) == 1
              ? *(_QWORD *)(v49 + *(int *)(sub_10002A750(&qword_1006588F8) + 48))
              : 0;
          sub_1000073A0(v49, (uint64_t *)&unk_100640EB0);
          v77 = v161;
          sub_10000735C(v170 + *(int *)(v169 + 56), v161, &qword_10064B6B0);
          v78 = swift_getEnumCaseMultiPayload(v77, v168) == 1
              ? *(_QWORD *)(v77 + *(int *)(sub_10002A750(&qword_1006588F8) + 48))
              : 0;
          sub_1000073A0(v77, (uint64_t *)&unk_100640EB0);
          sub_1000073A0(v170, &qword_1006588F0);
          sub_1000073A0(v165, &qword_1006588F0);
          if (v76 >= v78)
            break;
          v79 = *v167;
          v49 = (uint64_t)v162;
          if (!*v167)
            goto LABEL_164;
          v80 = v79 + v70 + v71;
          v81 = v79 + v166 + v71;
          sub_10000F614(v80, v164, &qword_1006588F0);
          swift_arrayInitWithTakeFrontToBack(v80, v81, 1, v169);
          sub_10000F614(v164, v81, &qword_1006588F0);
          v71 -= v163;
          ++v72;
          v48 = v73;
          if (v73 == v72)
            goto LABEL_63;
        }
        v49 = (uint64_t)v162;
        v48 = v73;
LABEL_63:
        ++v48;
        v166 += v163;
        v70 += v163;
        v41 = v155;
      }
      while (v48 != v154);
      v48 = v154;
      v50 = v160;
      v9 = v143;
      v39 = v146;
    }
    goto LABEL_76;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

void sub_100391934(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v29 = sub_10002A750(&qword_1006589A8);
  __chkstk_darwin(v29);
  v30 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v26 = (uint64_t)&v23 - v9;
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - v12;
  v28 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v32 = v14 * (v28 - 1);
    v27 = v14;
    v31 = v14 * v28;
LABEL_5:
    v15 = 0;
    v16 = v25;
    while (1)
    {
      v17 = *a4;
      sub_10000735C(v31 + v15 + *a4, (uint64_t)v13, &qword_1006589A8);
      v18 = v26;
      sub_10000735C(v32 + v15 + v17, v26, &qword_1006589A8);
      LOBYTE(v17) = static IndexPath.< infix(_:_:)(&v13[*(int *)(v29 + 48)], v18 + *(int *)(v29 + 48));
      sub_1000073A0(v18, &qword_1006589A8);
      sub_1000073A0((uint64_t)v13, &qword_1006589A8);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v24)
          return;
        goto LABEL_5;
      }
      v19 = *a4;
      if (!*a4)
        break;
      v20 = a4;
      v21 = v19 + v31 + v15;
      v22 = v19 + v32 + v15;
      sub_10000F614(v21, v30, &qword_1006589A8);
      swift_arrayInitWithTakeFrontToBack(v21, v22, 1, v29);
      sub_10000F614(v30, v22, &qword_1006589A8);
      v15 -= v27;
      ++v16;
      a4 = v20;
      if (v28 == v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100391B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a4;
  v29 = a1;
  v35 = sub_10002A750(&qword_10064B6B0);
  v6 = __chkstk_darwin(v35);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v27 - v9;
  v38 = sub_10002A750(&qword_1006588F0);
  v11 = __chkstk_darwin(v38);
  v32 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v39 = (uint64_t)&v27 - v14;
  result = __chkstk_darwin(v13);
  v34 = (uint64_t)&v27 - v17;
  v31 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v30 = *(_QWORD *)(v16 + 72);
    v36 = v30 * v31;
    v37 = v30 * (v31 - 1);
LABEL_5:
    v18 = 0;
    v19 = v29;
    while (1)
    {
      v20 = v34;
      v21 = *v33;
      sub_10000735C(v36 + v18 + *v33, v34, &qword_1006588F0);
      sub_10000735C(v37 + v18 + v21, v39, &qword_1006588F0);
      sub_10000735C(v20 + *(int *)(v38 + 56), (uint64_t)v10, &qword_10064B6B0);
      if (swift_getEnumCaseMultiPayload(v10, v35) == 1)
        v22 = *(_QWORD *)&v10[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
      else
        v22 = 0;
      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
      sub_10000735C(v39 + *(int *)(v38 + 56), (uint64_t)v8, &qword_10064B6B0);
      if (swift_getEnumCaseMultiPayload(v8, v35) == 1)
        v23 = *(_QWORD *)&v8[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
      else
        v23 = 0;
      sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
      sub_1000073A0(v39, &qword_1006588F0);
      result = sub_1000073A0(v34, &qword_1006588F0);
      if (v22 >= v23)
      {
LABEL_4:
        v37 += v30;
        v36 += v30;
        if (++v31 == v28)
          return result;
        goto LABEL_5;
      }
      v24 = *v33;
      if (!*v33)
        break;
      v25 = v24 + v36 + v18;
      v26 = v24 + v37 + v18;
      sub_10000F614(v25, v32, &qword_1006588F0);
      swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v38);
      result = sub_10000F614(v32, v26, &qword_1006588F0);
      v18 -= v30;
      if (v31 == ++v19)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100391EB4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v45 = sub_10002A750(&qword_1006589A8);
  __chkstk_darwin(v45);
  v44 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v48 = a1;
  v47 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v45);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v25 = a4 + v18;
      v46 = a4 + v18;
      v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v42 = a4;
        v43 = a1;
        do
        {
          v28 = a3 + v27;
          sub_10000735C(v25 + v27, (uint64_t)v11, &qword_1006589A8);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_10000735C(a2 + v27, v44, &qword_1006589A8);
          v33 = static IndexPath.< infix(_:_:)(v31 + *(int *)(v45 + 48), v32 + *(int *)(v45 + 48));
          v34 = v32;
          v11 = (char *)v31;
          sub_1000073A0(v34, &qword_1006589A8);
          sub_1000073A0(v31, &qword_1006589A8);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v28, a2 + v27, 1, v45);
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28, a2 + v27);
            }
            v48 += v27;
          }
          else
          {
            v38 = v46;
            v39 = v46 + v27;
            v46 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v39, 1, v45);
              v29 = a2;
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28, v39);
              v29 = a2;
            }
          }
          v25 = v46;
          if (v46 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v45);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v43 = a4 + v17;
    v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_10000735C(a2, (uint64_t)v11, &qword_1006589A8);
        sub_10000735C(a4, v20, &qword_1006589A8);
        v21 = static IndexPath.< infix(_:_:)(&v11[*(int *)(v45 + 48)], v20 + *(int *)(v45 + 48));
        sub_1000073A0(v20, &qword_1006589A8);
        sub_1000073A0((uint64_t)v11, &qword_1006589A8);
        v22 = v48;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v48 < a2 || v48 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack(v48, a2, 1, v45);
          }
          else if (v48 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v48, a2);
          }
        }
        else
        {
          v24 = v47 + v13;
          if (v48 < v47 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack(v48, v47, 1, v45);
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront(v48, v47);
          }
          v47 = v24;
          v23 = a2;
        }
        v48 = v22 + v13;
        a4 = v47;
        if (v47 >= v43)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_100392DD8(&v48, &v47, (uint64_t *)&v46, &qword_1006589A8);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100392370(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;

  v62 = sub_10002A750(&qword_10064B6B0);
  v8 = __chkstk_darwin(v62);
  v58 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v56 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v56 - v16;
  v63 = sub_10002A750(&qword_1006588F0);
  v18 = __chkstk_darwin(v63);
  v61 = (unint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v60 = (uint64_t)&v56 - v21;
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v56 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v56 - v25;
  v59 = *(_QWORD *)(v27 + 72);
  if (!v59)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v28 = a2 - a1;
  v29 = a2 - a1 == 0x8000000000000000;
  v30 = a1;
  v31 = v59;
  if (v29 && v59 == -1)
    goto LABEL_74;
  v32 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v59 == -1)
    goto LABEL_75;
  v33 = v28 / v59;
  v66 = v30;
  v65 = a4;
  v34 = v32 / v59;
  if (v33 >= v32 / v59)
  {
    if ((v34 & 0x8000000000000000) == 0)
    {
      v57 = v30;
      v36 = v34 * v59;
      if (a4 < a2 || a2 + v36 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v34, v63);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v44 = a4 + v36;
      v64 = a4 + v36;
      v66 = a2;
      if (v36 >= 1 && v57 < a2)
      {
        v46 = -v31;
        v59 = (uint64_t)v12;
        do
        {
          v47 = v60;
          sub_10000735C(v44 + v46, v60, &qword_1006588F0);
          v48 = a2 + v46;
          sub_10000735C(a2 + v46, v61, &qword_1006588F0);
          sub_10000735C(v47 + *(int *)(v63 + 56), (uint64_t)v12, &qword_10064B6B0);
          if (swift_getEnumCaseMultiPayload(v12, v62) == 1)
            v49 = *(_QWORD *)&v12[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
          else
            v49 = 0;
          v50 = (uint64_t)v58;
          sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
          sub_10000735C(v61 + *(int *)(v63 + 56), v50, &qword_10064B6B0);
          if (swift_getEnumCaseMultiPayload(v50, v62) == 1)
            v51 = *(_QWORD *)(v50 + *(int *)(sub_10002A750(&qword_1006588F8) + 48));
          else
            v51 = 0;
          sub_1000073A0(v50, (uint64_t *)&unk_100640EB0);
          v52 = a3 + v46;
          sub_1000073A0(v61, &qword_1006588F0);
          sub_1000073A0(v60, &qword_1006588F0);
          if (v49 >= v51)
          {
            v53 = v64;
            v54 = v64 + v46;
            v64 += v46;
            if (a3 < v53 || v52 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack(a3 + v46, v54, 1, v63);
              v48 = a2;
              v12 = (char *)v59;
            }
            else
            {
              v12 = (char *)v59;
              if (a3 != v53)
                swift_arrayInitWithTakeBackToFront(a3 + v46, v54);
              v48 = a2;
            }
          }
          else
          {
            if (a3 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(a3 + v46, a2 + v46, 1, v63);
              v12 = (char *)v59;
            }
            else
            {
              v12 = (char *)v59;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(a3 + v46, a2 + v46);
            }
            v66 += v46;
          }
          v44 = v64;
          if (v64 <= a4)
            break;
          a2 = v48;
          a3 += v46;
        }
        while (v48 > v57);
      }
      goto LABEL_72;
    }
  }
  else if ((v33 & 0x8000000000000000) == 0)
  {
    v35 = v33 * v59;
    if (a4 < v30 || v30 + v35 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, v30, v33, v63);
    }
    else if (a4 != v30)
    {
      swift_arrayInitWithTakeBackToFront(a4, v30);
    }
    v61 = a4 + v35;
    v64 = a4 + v35;
    if (v35 >= 1 && a2 < a3)
    {
      do
      {
        sub_10000735C(a2, (uint64_t)v26, &qword_1006588F0);
        sub_10000735C(a4, (uint64_t)v24, &qword_1006588F0);
        sub_10000735C((uint64_t)&v26[*(int *)(v63 + 56)], (uint64_t)v17, &qword_10064B6B0);
        if (swift_getEnumCaseMultiPayload(v17, v62) == 1)
          v38 = *(_QWORD *)&v17[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
        else
          v38 = 0;
        sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
        sub_10000735C((uint64_t)&v24[*(int *)(v63 + 56)], (uint64_t)v15, &qword_10064B6B0);
        if (swift_getEnumCaseMultiPayload(v15, v62) == 1)
          v39 = *(_QWORD *)&v15[*(int *)(sub_10002A750(&qword_1006588F8) + 48)];
        else
          v39 = 0;
        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
        sub_1000073A0((uint64_t)v24, &qword_1006588F0);
        sub_1000073A0((uint64_t)v26, &qword_1006588F0);
        v40 = v66;
        if (v38 >= v39)
        {
          v41 = v59;
          v43 = v65 + v59;
          if (v66 < v65 || v66 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack(v66, v65, 1, v63);
          }
          else if (v66 != v65)
          {
            swift_arrayInitWithTakeBackToFront(v66, v65);
          }
          v65 = v43;
          v42 = a2;
        }
        else
        {
          v41 = v59;
          v42 = a2 + v59;
          if (v66 < a2 || v66 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack(v66, a2, 1, v63);
          }
          else if (v66 == a2)
          {
            v40 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v66, a2);
          }
        }
        v66 = v40 + v41;
        a4 = v65;
        if (v65 >= v61)
          break;
        a2 = v42;
      }
      while (v42 < a3);
    }
LABEL_72:
    sub_100392DD8(&v66, &v65, (uint64_t *)&v64, &qword_1006588F0);
    return 1;
  }
LABEL_76:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100392A60(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10002A750(&qword_100658900);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_100392B58(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  v10 = v8 / v7;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v10 * v7)
    return swift_arrayInitWithTakeFrontToBack(v3, v4, v10, result);
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront(v3, v4);
  return result;
}

uint64_t sub_100392C64(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100392DD8(a1, a2, a3, &qword_100641008);
}

char *sub_100392C70(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -56)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
      return (char *)memmove(result, v3, 56 * v6);
  }
  return result;
}

char *sub_100392D30(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

uint64_t sub_100392DC0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100392DD8(a1, a2, a3, (uint64_t *)&unk_100654920);
}

uint64_t sub_100392DCC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100392DD8(a1, a2, a3, &qword_100654148);
}

uint64_t sub_100392DD8(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = sub_10002A750(a4);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  v11 = v9 / v8;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v11 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5, v11, result);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4, v5);
  return result;
}

char *sub_100392EE4(uint64_t a1)
{
  return sub_100392A60(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100392EF8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[16];
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  __int128 v48[2];
  char v49[24];
  _QWORD v50[3];
  char v51[24];
  _QWORD v52[6];

  v46 = a6;
  v45 = a5;
  v52[3] = a8;
  v52[4] = a9;
  v15 = sub_100028D70(v52);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v15, a3, a8);
  v16 = swift_allocObject(&unk_100604318, 24, 7);
  *(_QWORD *)(v16 + 16) = 0;
  v17 = swift_allocObject(&unk_100604340, 24, 7);
  *(_QWORD *)(v17 + 16) = &_swiftEmptyDictionarySingleton;
  v18 = swift_allocObject(&unk_100604368, 24, 7);
  *(_QWORD *)(v18 + 16) = _swiftEmptyArrayStorage;
  v19 = (uint64_t *)(v18 + 16);
  v44 = a7;
  v43 = v18;
  if ((a2 & 1) != 0)
  {
    v38 = __chkstk_darwin(v18);
    v39 = (_QWORD *)v16;
    v40 = v52;
    v41 = v17;
    v22 = sub_10046A1D0((void (*)(uint64_t))sub_10039B6F0, (uint64_t)v37, a1);
  }
  else
  {
    swift_beginAccess(v18 + 16, v48, 33, 0);
    v20 = swift_bridgeObjectRetain(a1);
    sub_1004504C0(v20);
    v21 = swift_endAccess(v48);
    __chkstk_darwin(v21);
    v38 = v16 + 16;
    v39 = v52;
    v40 = (_QWORD *)(v17 + 16);
    v22 = sub_10047648C((void (*)(_QWORD))sub_1003CE66C, (uint64_t)v37, a1);
  }
  v23 = v22;
  swift_bridgeObjectRelease(a1);
  sub_10002A750(&qword_1006445E8);
  v24 = (_QWORD *)TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)(v23);
  sub_100393E8C(a4, v24);
  swift_bridgeObjectRelease(a4);
  swift_beginAccess(v19, v51, 0, 0);
  v25 = *v19;
  swift_bridgeObjectRetain(*v19);
  sub_100394F90((uint64_t)v24, v25);
  swift_bridgeObjectRelease(v25);
  v26 = v45;
  if (v45)
  {
    v27 = swift_allocObject(&unk_1006043B8, 32, 7);
    v28 = v46;
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = v28;
    v29 = sub_100390120;
  }
  else
  {
    v27 = 0;
    v29 = (uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>))sub_10037D944;
    v28 = v46;
  }
  v30 = swift_allocObject(&unk_100604390, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v27;
  v50[0] = v24;
  sub_100053DE4(v26, v28);
  swift_retain(v27);
  ((void (*)(__int128 *__return_ptr, _QWORD *))v29)(v48, v50);
  swift_release(v27);
  v42 = v48[0];
  swift_beginAccess(v17 + 16, v50, 0, 0);
  v31 = *(_QWORD *)(v17 + 16);
  swift_beginAccess(v16 + 16, v49, 0, 0);
  v32 = *(_QWORD *)(v16 + 16);
  sub_100010634((uint64_t)v52, (uint64_t)v48);
  v33 = v28;
  v34 = swift_allocObject(v44, 120, 7);
  v46 = v17;
  *(_QWORD *)(v34 + 88) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v34 + 80) = v24;
  *(_OWORD *)(v34 + 24) = v42;
  *(_QWORD *)(v34 + 96) = v31;
  *(_QWORD *)(v34 + 104) = sub_10039011C;
  *(_QWORD *)(v34 + 112) = v30;
  swift_beginAccess(v34 + 88, v47, 1, 0);
  v35 = *(_QWORD *)(v34 + 88);
  *(_QWORD *)(v34 + 88) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)(v34 + 16) = v32;
  sub_10002E37C(v48, v34 + 40);
  sub_1000381B8(v26, v33);
  sub_100027F10(v52);
  swift_release(v16);
  swift_release(v46);
  swift_release(v43);
  return v34;
}

uint64_t sub_1003932E0(_QWORD *a1)
{
  return sub_1003D8968(0, a1[2], 0, a1);
}

uint64_t sub_1003932F4(_QWORD *a1)
{
  return sub_1003D8F40(0, a1[2], 0, a1);
}

uint64_t sub_100393308(uint64_t a1)
{
  return sub_1003D9FB0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10039331C(uint64_t a1)
{
  return sub_1003DA138(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100393330(_QWORD *a1)
{
  return sub_1003DA424(0, a1[2], 0, a1);
}

_QWORD *sub_100393344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  int isUniquelyReferenced_nonNull_native;
  int64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return _swiftEmptyArrayStorage;
  v28 = v2;
  v32 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v32 - 8);
  v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = v8;
  v9 = a1 + v29;
  v10 = *(_QWORD *)(v8 + 72);
  v27 = a1;
  swift_bridgeObjectRetain(a1);
  v11 = _swiftEmptyArrayStorage;
  while (1)
  {
    v12 = *(_QWORD *)(v31 + 80);
    sub_10002B1E8(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v6, 0, 1, v32);
    swift_retain(v12);
    v13 = TTRMutableTreeStorage.children(of:)(v6);
    swift_release(v12);
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v11[2];
    v16 = v15 + v14;
    if (__OFADD__(v15, v14))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    if (isUniquelyReferenced_nonNull_native && v16 <= v11[3] >> 1)
    {
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v15 <= v16)
        v18 = v15 + v14;
      else
        v18 = v15;
      v11 = (_QWORD *)sub_100454EEC(isUniquelyReferenced_nonNull_native, v18, 1, (unint64_t)v11);
      if (*(_QWORD *)(v13 + 16))
      {
LABEL_14:
        v19 = v11[2];
        if ((v11[3] >> 1) - v19 < v14)
          goto LABEL_28;
        v20 = (char *)v11 + v29 + v19 * v10;
        if (v13 + v29 < (unint64_t)&v20[v14 * v10] && (unint64_t)v20 < v13 + v29 + v14 * v10)
          goto LABEL_30;
        swift_arrayInitWithCopy(v20);
        if (v14)
        {
          v22 = v11[2];
          v23 = __OFADD__(v22, v14);
          v24 = v22 + v14;
          if (v23)
            goto LABEL_29;
          v11[2] = v24;
        }
        goto LABEL_4;
      }
    }
    if (v14)
      goto LABEL_27;
LABEL_4:
    swift_bridgeObjectRelease(v13);
    v9 += v10;
    if (!--v7)
    {
      swift_bridgeObjectRelease(v27);
      return v11;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  swift_release(v31);
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003935D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain(v1);
  result = swift_release(v3);
  *a1 = v1;
  return result;
}

uint64_t sub_10039360C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10037DC2C(*(uint64_t **)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), a1);
}

uint64_t sub_100393618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v4 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - v8;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v23 - v14;
  v17 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v16);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v17);
  v18 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v15, v12);
  sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10002B1E8(a1, (uint64_t)v9, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
  v19 = sub_10002B1E8(a2, (uint64_t)v6, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
  if ((v18 & 1) != 0)
  {
    v20 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v20);
    v21 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v15, v12);
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  else
  {
    v21 = 0;
  }
  sub_10001F544((uint64_t)v6, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
  sub_10001F544((uint64_t)v9, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
  return v21 & 1;
}

_QWORD *sub_1003937F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v32 = a2;
  v4 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_1006589A8);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    v25[1] = v2;
    v34 = _swiftEmptyArrayStorage;
    sub_1003D8018(0, v14, 0);
    v16 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v27 = *(_QWORD *)(v17 + 72);
    v28 = v16;
    v26 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
    v29 = v10;
    do
    {
      v33 = *(_QWORD *)(v32 + 80);
      v19 = v18 + *(int *)(v28 + 20);
      v20 = sub_10002A750(&qword_1006445E8);
      TTRTreeContentsQueryable.indexPath(for:)(v19, v20, v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        IndexPath.init(indexes:)(&off_1005EA1F0);
        sub_1000073A0((uint64_t)v6, &qword_100646950);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      }
      v21 = &v13[*(int *)(v31 + 48)];
      sub_10002B1E8(v18, (uint64_t)v13, type metadata accessor for TTRRemindersListUncommittedReminder);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v10, v7);
      v15 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
      {
        sub_1003D8018(0, v15[2] + 1, 1);
        v15 = v34;
      }
      v23 = v15[2];
      v22 = v15[3];
      if (v23 >= v22 >> 1)
      {
        sub_1003D8018(v22 > 1, v23 + 1, 1);
        v15 = v34;
      }
      v15[2] = v23 + 1;
      sub_10000F614((uint64_t)v13, (uint64_t)v15+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v23, &qword_1006589A8);
      v18 += v27;
      --v14;
      v10 = v29;
    }
    while (v14);
  }
  return v15;
}

_QWORD *sub_100393AD0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(uint64_t);

  v46 = a4;
  v55 = a2;
  v7 = sub_10002A750(&qword_100658910);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v43 - v11;
  v13 = sub_10002A750(&qword_100658908);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v50 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v49 = (uint64_t)&v43 - v18;
  __chkstk_darwin(v17);
  v45 = (uint64_t)&v43 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v51 = v4;
    v21 = *(_QWORD *)(type metadata accessor for REMRemindersListDataView.ReminderLite(0) - 8);
    v22 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v54 = *(_QWORD *)(v21 + 72);
    v44 = a1;
    swift_bridgeObjectRetain(a1);
    v52 = v12;
    v53 = _swiftEmptyArrayStorage;
    v47 = v10;
    v48 = a3;
    while (1)
    {
      v55(v22);
      v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      if (v23((uint64_t)v10, 1, v13) == 1)
      {
        sub_1000073A0((uint64_t)v10, &qword_100658910);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      }
      else
      {
        v24 = v13;
        v25 = v14;
        v26 = v49;
        v27 = sub_10000F614((uint64_t)v10, v49, &qword_100658908);
        v28 = REMRemindersListDataView.ReminderLite.subtasks.getter(v27);
        if (v28)
        {
          v29 = v28;
          v30 = v51;
          v31 = sub_100393AD0(v28, v55, a3, v46);
          v51 = v30;
          swift_bridgeObjectRelease(v29);
          v32 = v24;
          v33 = *(int *)(v24 + 56);
          swift_bridgeObjectRelease(*(_QWORD *)(v26 + v33));
          *(_QWORD *)(v26 + v33) = v31;
        }
        else
        {
          v32 = v24;
        }
        v34 = (uint64_t)v52;
        sub_10000735C(v26, (uint64_t)v52, &qword_100658908);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v34, 0, 1, v32);
        sub_1000073A0(v26, &qword_100658908);
        if (v23(v34, 1, v32) != 1)
        {
          v35 = v34;
          v36 = v45;
          sub_10000F614(v35, v45, &qword_100658908);
          sub_10000F614(v36, v50, &qword_100658908);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v53);
          v10 = v47;
          a3 = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v14 = v25;
            v38 = (unint64_t)v53;
          }
          else
          {
            v38 = sub_100455334(0, v53[2] + 1, 1, (unint64_t)v53);
            v14 = v25;
          }
          v40 = *(_QWORD *)(v38 + 16);
          v39 = *(_QWORD *)(v38 + 24);
          v13 = v24;
          if (v40 >= v39 >> 1)
            v38 = sub_100455334(v39 > 1, v40 + 1, 1, v38);
          v12 = v52;
          *(_QWORD *)(v38 + 16) = v40 + 1;
          v41 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
          v53 = (_QWORD *)v38;
          sub_10000F614(v50, v38 + v41 + *(_QWORD *)(v14 + 72) * v40, &qword_100658908);
          goto LABEL_5;
        }
        v10 = v47;
        a3 = v48;
        v14 = v25;
        v13 = v24;
        v12 = (char *)v34;
      }
      sub_1000073A0((uint64_t)v12, &qword_100658910);
LABEL_5:
      v22 += v54;
      if (!--v20)
      {
        swift_bridgeObjectRelease(v44);
        return v53;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100393E8C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(uint64_t, uint64_t, uint64_t);
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  __int128 v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;

  v153 = a2;
  v151 = *a2;
  v125 = type metadata accessor for IndexSet(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v135 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v119 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10002A750((uint64_t *)&unk_100651D90);
  __chkstk_darwin(v130);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v117 - v13;
  __chkstk_darwin(v12);
  v140 = (uint64_t)&v117 - v15;
  v16 = sub_10002A750(&qword_1006554F0);
  v17 = __chkstk_darwin(v16);
  v137 = (uint64_t)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v149 = (uint64_t)&v117 - v19;
  v143 = sub_10002A750(&qword_1006554F8);
  v20 = __chkstk_darwin(v143);
  v129 = (uint64_t)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v138 = (uint64_t)&v117 - v22;
  v23 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v24 = __chkstk_darwin(v23);
  v126 = (uint64_t)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v128 = (uint64_t)&v117 - v27;
  v28 = __chkstk_darwin(v26);
  v148 = (uint64_t)&v117 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v117 - v31;
  v33 = __chkstk_darwin(v30);
  v139 = (char *)&v117 - v34;
  __chkstk_darwin(v33);
  v142 = (uint64_t)&v117 - v35;
  v136 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v127 = *(_QWORD *)(v136 - 8);
  v36 = __chkstk_darwin(v136);
  v38 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v40 = (char *)&v117 - v39;
  v41 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  result = __chkstk_darwin(v41);
  v45 = (char *)&v117 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v154 = *(_QWORD *)(a1 + 16);
    v131 = v14;
    v120 = v11;
    v132 = v7;
    v147 = &v45[*(int *)(result + 20)];
    v46 = a1 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    v144 = *(_QWORD *)(v43 + 72);
    v118 = a1;
    swift_bridgeObjectRetain(a1);
    v47 = (uint64_t *)&unk_100640EB0;
    v121 = xmmword_100520250;
    v48 = (uint64_t)v139;
    v145 = v45;
    v146 = v38;
    v134 = v4;
    v122 = v32;
    v150 = v40;
    while (1)
    {
      v49 = v47;
      sub_10002B1E8(v46, (uint64_t)v45, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      sub_10002B1E8((uint64_t)v45, (uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v147, (uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v45, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
      v155 = (uint64_t)v153;
      TTRMutableTreeStorage.parent(of:)(v38);
      v50 = sub_100023FEC(&qword_100658918, &qword_1006445E8, (uint64_t)&protocol conformance descriptor for TTRMutableTreeStorage<A, B>);
      v51 = TTRTreeContentsQueryable.childIndex(of:inParent:)(v38, v48, v151, v50);
      v152 = v46;
      if ((v52 & 1) != 0)
      {
        sub_1000073A0(v48, v47);
        v60 = sub_10002A750(&qword_100655500);
        v59 = v149;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v149, 1, 1, v60);
      }
      else
      {
        v53 = v51;
        v54 = sub_10002A750(&qword_100655500);
        v55 = *(int *)(v54 + 48);
        v56 = v149;
        sub_10000F614(v48, v149, v47);
        *(_QWORD *)(v56 + v55) = v53;
        v57 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
        v58 = v54;
        v59 = v56;
        v57(v56, 0, 1, v58);
      }
      v61 = sub_10002A750(&qword_100655500);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
      if (v63(v59, 1, v61) == 1)
      {
        sub_1000073A0(v59, &qword_1006554F0);
        v38 = v146;
        v40 = v150;
      }
      else
      {
        v64 = v59;
        v65 = *(_QWORD *)(v59 + *(int *)(v61 + 48));
        v66 = v143;
        v67 = *(int *)(v143 + 48);
        v68 = v138;
        v69 = v49;
        sub_10000F614(v64, v138, v49);
        *(_QWORD *)(v68 + v67) = v65;
        v70 = v153;
        v141 = *(_QWORD *)(v68 + *(int *)(v66 + 48));
        v71 = v68;
        v72 = v148;
        v73 = v142;
        sub_10000F614(v71, v142, v49);
        v155 = (uint64_t)v70;
        v74 = v150;
        TTRMutableTreeStorage.parent(of:)(v150);
        v75 = TTRTreeContentsQueryable.childIndex(of:inParent:)(v74, v72, v151, v50);
        if ((v76 & 1) != 0)
        {
          sub_1000073A0(v148, v69);
          v80 = 1;
          v81 = v134;
          v79 = v137;
        }
        else
        {
          v77 = v75;
          v78 = *(int *)(v61 + 48);
          v79 = v137;
          sub_10000F614(v148, v137, v69);
          v80 = 0;
          *(_QWORD *)(v79 + v78) = v77;
          v81 = v134;
        }
        v47 = v69;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v79, v80, 1, v61);
        v82 = v63(v79, 1, v61);
        v48 = (uint64_t)v139;
        if (v82 != 1)
        {
          v83 = *(_QWORD *)(v79 + *(int *)(v61 + 48));
          v84 = v143;
          v85 = *(int *)(v143 + 48);
          v86 = v79;
          v87 = v73;
          v88 = v129;
          sub_10000F614(v86, v129, v69);
          *(_QWORD *)(v88 + v85) = v83;
          v133 = *(_QWORD *)(v88 + *(int *)(v84 + 48));
          v89 = v88;
          v90 = (uint64_t)v122;
          sub_10000F614(v89, (uint64_t)v122, v69);
          v91 = v128;
          sub_10000735C(v87, v128, v69);
          v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
          if (v92(v91, 1, v136) == 1)
          {
            sub_1000073A0(v91, v69);
            v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
            v93(v140, 1, 1, v81);
          }
          else
          {
            v94 = v140;
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            sub_10001F544(v91, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
            v93(v94, 0, 1, v81);
          }
          v95 = v126;
          sub_10000735C(v90, v126, v69);
          if (v92(v95, 1, v136) == 1)
          {
            sub_1000073A0(v95, v69);
            v96 = 1;
            v97 = (uint64_t)v131;
          }
          else
          {
            v97 = (uint64_t)v131;
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            sub_10001F544(v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v96 = 0;
          }
          v93(v97, v96, 1, v81);
          v98 = (uint64_t)v132;
          v99 = (uint64_t)&v132[*(int *)(v130 + 48)];
          v100 = v140;
          sub_10000735C(v140, (uint64_t)v132, (uint64_t *)&unk_1006463C0);
          sub_10000735C(v97, v99, (uint64_t *)&unk_1006463C0);
          v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
          if (v101(v98, 1, v81) == 1)
          {
            sub_1000073A0(v97, (uint64_t *)&unk_1006463C0);
            sub_1000073A0(v100, (uint64_t *)&unk_1006463C0);
            v102 = v101(v99, 1, v81);
            v103 = v133;
            if (v102 == 1)
            {
              sub_1000073A0((uint64_t)v132, (uint64_t *)&unk_1006463C0);
              v38 = v146;
              goto LABEL_31;
            }
LABEL_25:
            result = sub_1000073A0((uint64_t)v132, (uint64_t *)&unk_100651D90);
            v38 = v146;
            goto LABEL_26;
          }
          v104 = (uint64_t)v120;
          sub_10000735C(v98, (uint64_t)v120, (uint64_t *)&unk_1006463C0);
          if (v101(v99, 1, v81) == 1)
          {
            sub_1000073A0((uint64_t)v131, (uint64_t *)&unk_1006463C0);
            sub_1000073A0(v140, (uint64_t *)&unk_1006463C0);
            sub_10001F544(v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            v103 = v133;
            goto LABEL_25;
          }
          v115 = v119;
          sub_10001F580(v99, v119, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v116 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v104, v115);
          sub_10001F544(v115, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0((uint64_t)v131, (uint64_t *)&unk_1006463C0);
          sub_1000073A0(v140, (uint64_t *)&unk_1006463C0);
          sub_10001F544(v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          result = sub_1000073A0(v98, (uint64_t *)&unk_1006463C0);
          v38 = v146;
          v103 = v133;
          if ((v116 & 1) != 0)
          {
LABEL_31:
            v106 = v141;
            if (v141 == v103)
            {
              v107 = v142;
              goto LABEL_29;
            }
            if (v141 >= v103)
            {
              v105 = v103 + 1;
              if (__OFADD__(v103, 1))
              {
                __break(1u);
                return swift_bridgeObjectRelease(v118);
              }
            }
            else
            {
              v105 = v103--;
            }
          }
          else
          {
LABEL_26:
            v105 = v103 + 1;
            if (__OFADD__(v103, 1))
            {
              __break(1u);
              return result;
            }
            v106 = v141;
          }
          v107 = v142;
          TTRMutableTreeStorage.moveItem(at:in:to:in:)(v106, v142, v105, v90);
          v106 = v103;
LABEL_29:
          v108 = sub_10002A750((uint64_t *)&unk_10064FA40);
          v109 = swift_allocObject(v108, 40, 7);
          *(_OWORD *)(v109 + 16) = v121;
          *(_QWORD *)(v109 + 32) = v106;
          v155 = v109;
          v110 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
          v111 = sub_10002A750(&qword_100641150);
          v112 = sub_100023FEC((unint64_t *)&qword_100646380, &qword_100641150, (uint64_t)&protocol conformance descriptor for [A]);
          v113 = v123;
          v114 = v125;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v155, v111, v112, v125, v110);
          TTRMutableTreeStorage.deleteItems(at:in:)(v113, v90);
          (*(void (**)(char *, uint64_t))(v124 + 8))(v113, v114);
          sub_1000073A0(v90, v47);
          sub_1000073A0(v107, v47);
          v40 = v150;
          goto LABEL_4;
        }
        sub_1000073A0(v79, &qword_1006554F0);
        sub_1000073A0(v73, v69);
        v38 = v146;
        v40 = v150;
      }
LABEL_4:
      sub_10001F544((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544((uint64_t)v40, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v45 = v145;
      v46 = v152 + v144;
      if (!--v154)
        return swift_bridgeObjectRelease(v118);
    }
  }
  return result;
}

uint64_t sub_100394A40(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD v69[10];
  _QWORD *v70;

  v68 = a4;
  v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v10);
  v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v64 = (uint64_t)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v61 = *(_QWORD *)(v63 - 8);
  v15 = __chkstk_darwin(v63);
  result = __chkstk_darwin(v15);
  if (v19 == a2)
    return (uint64_t)_swiftEmptyArrayStorage;
  if (a2 >= v19)
  {
    v67 = v68 + 7;
    v51 = _swiftEmptyArrayStorage;
    v20 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
    v21 = v19;
    v50[1] = v4;
    v55 = a3;
    v54 = a2;
    v56 = v19;
    v58 = v18;
    v53 = v12;
    v66 = (uint64_t)v50 - v17;
    while (1)
    {
      v22 = v21;
      if (v21 <= a2)
        v21 = a2;
      v59 = v21;
      v60 = v22;
      v23 = v22;
      while (1)
      {
        if (v60 < v19)
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v23 == v59)
          goto LABEL_29;
        v24 = v19;
        v65 = v23 + 1;
        v25 = v64;
        v26 = v20;
        v27 = v63;
        v28 = v23;
        v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v62(v64, 1, 1, v63);
        v57 = v28;
        v29 = v28;
        v30 = a3;
        TTRMutableTreeStorage.child(_:of:)(v29, v25);
        v31 = v25;
        v32 = v66;
        sub_1000073A0(v31, (uint64_t *)&unk_100640EB0);
        v33 = v58;
        sub_10002B1E8(v32, v58, v26);
        if (swift_getEnumCaseMultiPayload(v33, v27) != 1)
        {
          sub_10001F544(v32, v26);
          v42 = v33;
          v20 = v26;
          goto LABEL_18;
        }
        v34 = (uint64_t)v53;
        sub_10001F580(v33, (uint64_t)v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (v68[2])
        {
          v35 = v68;
          Hasher.init(_seed:)(v69, v68[5]);
          TTRRemindersListViewModel.SectionID.hash(into:)(v69);
          v36 = Hasher._finalize()();
          v37 = -1 << *((_BYTE *)v35 + 32);
          v38 = v36 & ~v37;
          if (((*(_QWORD *)((char *)v67 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
            break;
        }
LABEL_16:
        sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        v42 = v66;
        v30 = v55;
        a2 = v54;
        v24 = v56;
        v20 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
LABEL_18:
        result = sub_10001F544(v42, v20);
        v19 = v24;
LABEL_19:
        v23 = v65;
        a3 = v30;
        if (v65 == a2)
          return (uint64_t)v51;
      }
      v39 = ~v37;
      v40 = *(_QWORD *)(v52 + 72);
      while (1)
      {
        sub_10002B1E8(v68[6] + v40 * v38, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v41 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)(v9, v34);
        sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if ((v41 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)((char *)v67 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_16;
      }
      v43 = v66;
      v44 = v64;
      v20 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
      sub_10002B1E8(v66, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v62(v44, 0, 1, v63);
      v30 = v55;
      v45 = TTRMutableTreeStorage.numberOfChildren(of:)(v44);
      sub_1000073A0(v44, (uint64_t *)&unk_100640EB0);
      sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      result = sub_10001F544(v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      a2 = v54;
      v19 = v56;
      if (v45)
        goto LABEL_19;
      v46 = v51;
      result = swift_isUniquelyReferenced_nonNull_native(v51);
      v70 = v46;
      if ((result & 1) == 0)
      {
        result = sub_1003D7E10(0, v46[2] + 1, 1);
        v46 = v70;
      }
      a3 = v30;
      v47 = v46;
      v48 = v46[2];
      v49 = v47[3];
      if (v48 >= v49 >> 1)
      {
        result = sub_1003D7E10(v49 > 1, v48 + 1, 1);
        a3 = v30;
        v47 = v70;
      }
      v47[2] = v48 + 1;
      v51 = v47;
      v47[v48 + 4] = v57;
      v21 = v65;
      v19 = v56;
      if (v65 == a2)
        return (uint64_t)v51;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100394F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;

  v45 = a1;
  v3 = type metadata accessor for IndexSet(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v4 = __chkstk_darwin(v3);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (char *)&v40 - v6;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &_swiftEmptySetSingleton;
  v48 = &_swiftEmptySetSingleton;
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v21 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v22 = *(_QWORD *)(v16 + 72);
    v40 = a2;
    swift_bridgeObjectRetain(a2);
    do
    {
      sub_10002B1E8(v21, (uint64_t)v18, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      if (v18[*(int *)(v15 + 24)] == 1)
      {
        sub_10002B1E8((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        sub_1004809A0((uint64_t)v14, (uint64_t)v12);
        sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      }
      sub_10001F544((uint64_t)v18, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v21 += v22;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease(v40);
    v19 = v48;
  }
  v24 = v44;
  v23 = v45;
  if (!v19[2])
  {
    v39 = v19;
    return swift_bridgeObjectRelease(v39);
  }
  v25 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v27 = (uint64_t)v46;
  v26(v46, 1, 1, v25);
  v28 = TTRMutableTreeStorage.numberOfChildren(of:)(v27);
  result = sub_1000073A0(v27, (uint64_t *)&unk_100640EB0);
  v30 = v43;
  if (v28 < 0)
  {
    __break(1u);
    return result;
  }
  swift_retain(v23);
  v31 = sub_100394A40(0, v28, v23, v19);
  swift_release(v23);
  swift_bridgeObjectRelease(v19);
  v32 = *(_QWORD *)(v31 + 16);
  if (!v32)
  {
    v39 = (_QWORD *)v31;
    return swift_bridgeObjectRelease(v39);
  }
  v33 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of SetAlgebra.init()(v30, v33);
  for (i = 0; i != v32; ++i)
  {
    v35 = *(_QWORD *)(v31 + 8 * i + 32);
    v47 = v35;
    dispatch thunk of SetAlgebra.insert(_:)(&v48, &v47, v30, v33);
  }
  swift_bridgeObjectRelease(v31);
  v37 = v41;
  v36 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v24, v30);
  v38 = (uint64_t)v46;
  v26(v46, 1, 1, v25);
  TTRMutableTreeStorage.deleteItems(at:in:)(v37, v38);
  sub_1000073A0(v38, (uint64_t *)&unk_100640EB0);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v30);
}

uint64_t type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(uint64_t a1)
{
  return sub_100007328(a1, qword_100658C88, (uint64_t)&nominal type descriptor for TTRRemindersListTreeViewModel.SectionsContainer);
}

uint64_t sub_10039534C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10037DAC4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for TTRRemindersListSectionCreationLocation(uint64_t a1)
{
  return sub_100007328(a1, qword_100658BF8, (uint64_t)&nominal type descriptor for TTRRemindersListSectionCreationLocation);
}

uint64_t type metadata accessor for TTRRemindersListUncommittedSection(uint64_t a1)
{
  return sub_100007328(a1, qword_100658B50, (uint64_t)&nominal type descriptor for TTRRemindersListUncommittedSection);
}

uint64_t sub_100395390(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int EnumCaseMultiPayload;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t Strong;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t ObjectType;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  Swift::Int *v132;
  uint64_t v133;
  uint64_t (*v134)(_QWORD);
  void (*v135)(unint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  unsigned int (*v138)(uint64_t *, uint64_t, uint64_t);
  Swift::Int v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  uint64_t v143;
  __n128 v144;
  Swift::Int v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint64_t v158;
  uint8_t *v159;
  uint8_t *v160;
  uint64_t v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  uint8_t *v166;
  uint8_t *v167;
  __int128 v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t *, _QWORD);
  uint64_t *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(Swift::Int *, uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(uint64_t, char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(Swift::Int *, uint64_t, uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t *v235;
  unint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  unint64_t v262;
  _BYTE *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  NSObject *v270;
  os_log_type_t v271;
  uint8_t *v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  _BYTE *v278;
  unint64_t v279;
  _BYTE *v280;
  unint64_t v281;
  _BYTE *v282;
  unint64_t v283;
  _BYTE *v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  _QWORD *v336;
  uint64_t v337;
  Swift::Int *v338;
  Swift::Int *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  Swift::Int *v350;
  uint64_t v351;
  void (*v352)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v353)(uint64_t, uint64_t, uint64_t);
  void (*v354)(uint64_t, char *, uint64_t);
  char *v355;
  uint64_t v356;
  void (*v357)(Swift::Int *, uint64_t, uint64_t, uint64_t);
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  Swift::Int *v364;
  char *v365;
  unint64_t *v366;
  uint64_t v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  _QWORD v376[3];
  char v377[8];
  __int128 v378;
  __int128 v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;

  v328 = a4;
  v335 = a3;
  LODWORD(v336) = a2;
  v357 = (void (*)(Swift::Int *, uint64_t, uint64_t, uint64_t))type metadata accessor for REMFeatureFlags(0);
  v356 = *((_QWORD *)v357 - 1);
  __chkstk_darwin(v357);
  v355 = (char *)&v285 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v334 = sub_10002A750(&qword_100654870);
  v296 = *(_QWORD *)(v334 - 8);
  v6 = __chkstk_darwin(v334);
  v349 = (uint64_t)&v285 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v310 = (uint64_t)&v285 - v8;
  v293 = sub_10002A750(&qword_10064A838);
  v292 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin(v293);
  v300 = (uint64_t)&v285 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v340 = sub_10002A750(&qword_100647B00);
  v10 = __chkstk_darwin(v340);
  v339 = (char *)&v285 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v338 = (uint64_t *)((char *)&v285 - v12);
  v13 = sub_10002A750(&qword_100658938);
  v14 = __chkstk_darwin(v13);
  v331 = (char *)&v285 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v298 = (char *)&v285 - v17;
  __chkstk_darwin(v16);
  v302 = (char *)&v285 - v18;
  v337 = sub_10002A750(&qword_100654860);
  v301 = *(_QWORD *)(v337 - 8);
  v19 = __chkstk_darwin(v337);
  v348 = (uint64_t)&v285 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v309 = (uint64_t)&v285 - v22;
  __chkstk_darwin(v21);
  v341 = (uint64_t)&v285 - v23;
  v24 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v295 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v347 = (uint64_t)&v285 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v360 = (uint64_t)&v285 - v28;
  v29 = __chkstk_darwin(v27);
  v294 = (char *)&v285 - v30;
  v31 = __chkstk_darwin(v29);
  v297 = (uint64_t)&v285 - v32;
  v33 = __chkstk_darwin(v31);
  v312 = (uint64_t)&v285 - v34;
  __chkstk_darwin(v33);
  v316 = (uint64_t)&v285 - v35;
  v36 = sub_10002A750((uint64_t *)&unk_1006463C0);
  v37 = __chkstk_darwin(v36);
  __chkstk_darwin(v37);
  v318 = (uint64_t)&v285 - v38;
  v317 = type metadata accessor for IndexSet.RangeView(0);
  v315 = *(_QWORD *)(v317 - 8);
  __chkstk_darwin(v317);
  v314 = (char *)&v285 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = sub_10002A750(&qword_100658988);
  __chkstk_darwin(v308);
  v320 = (uint64_t)&v285 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v370 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  v41 = __chkstk_darwin(v370);
  v43 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v285 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __chkstk_darwin(v41);
  v299 = (char *)&v285 - v45;
  __chkstk_darwin(v44);
  v346 = (char *)&v285 - v46;
  v358 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v47 = *(_QWORD *)(v358 - 8);
  v48 = __chkstk_darwin(v358);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v285 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = __chkstk_darwin(v48);
  v365 = (char *)&v285 - v52;
  v53 = __chkstk_darwin(v51);
  v371 = (uint64_t)&v285 - v54;
  __chkstk_darwin(v53);
  v372 = (uint64_t)&v285 - v55;
  v351 = sub_10002A750(&qword_100658960);
  v345 = *(_QWORD *)(v351 - 8);
  __chkstk_darwin(v351);
  v362 = (char *)&v285 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10002A750(&qword_100658968);
  v58 = __chkstk_darwin(v57);
  v333 = (char *)&v285 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __chkstk_darwin(v58);
  v343 = (char *)&v285 - v61;
  v62 = __chkstk_darwin(v60);
  v64 = (unint64_t *)((char *)&v285 - v63);
  __chkstk_darwin(v62);
  v364 = (uint64_t *)((char *)&v285 - v65);
  v307 = type metadata accessor for IndexSet(0);
  v306 = *(_QWORD *)(v307 - 8);
  __chkstk_darwin(v307);
  v330 = (char *)&v285 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v67);
  v69 = (char *)&v285 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v359 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v70 = *(_QWORD *)(v359 - 8);
  v71 = __chkstk_darwin(v359);
  v73 = (char *)&v285 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __chkstk_darwin(v71);
  v332 = (uint64_t)&v285 - v75;
  v76 = __chkstk_darwin(v74);
  v361 = (uint64_t)&v285 - v77;
  v78 = __chkstk_darwin(v76);
  v342 = (uint64_t)&v285 - v79;
  v80 = __chkstk_darwin(v78);
  v303 = (uint64_t)&v285 - v81;
  v82 = __chkstk_darwin(v80);
  v313 = (uint64_t)&v285 - v83;
  v84 = __chkstk_darwin(v82);
  v369 = (uint64_t)&v285 - v85;
  v86 = __chkstk_darwin(v84);
  v344 = (uint64_t)&v285 - v87;
  v88 = __chkstk_darwin(v86);
  v329 = (uint64_t)&v285 - v89;
  __chkstk_darwin(v88);
  v327 = (unint64_t)&v285 - v90;
  v91 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v91);
  v350 = (uint64_t *)((char *)&v285 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = *(_QWORD *)(a1 + 16);
  v367 = v47;
  v363 = v70;
  v321 = v69;
  v366 = v64;
  if (v93)
  {
    v94 = a1 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    v368 = *(_QWORD **)(v70 + 72);
    LODWORD(v354) = enum case for REMFeatureFlags.indentOutdentUncommittedReminder(_:);
    v326 = a1;
    swift_bridgeObjectRetain(a1);
    v353 = v50;
    v352 = v43;
    v95 = sub_10002B1E8(v94, (uint64_t)v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v95);
    v96 = (char *)&loc_100395D9C + dword_100397FCC[swift_getEnumCaseMultiPayload(v43, v370)];
    __asm { BR              X9 }
  }
  v97 = v69;
  v98 = sub_1003E7C4C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v382 = v98;
  v99 = v363;
  v100 = (uint64_t)v350;
  v101 = v359;
  v357 = *(void (**)(Swift::Int *, uint64_t, uint64_t, uint64_t))(v363 + 56);
  v357(v350, 1, 1, v359);
  swift_retain();
  v102 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v100);
  swift_release();
  sub_1000073A0(v100, (uint64_t *)&unk_100640EB0);
  v103 = v329;
  v104 = v351;
  if (v102[2])
  {
    v105 = (uint64_t)v102 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    v106 = v327;
    sub_10002B1E8(v105, v327, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v106, v101);
    sub_10001F544(v106, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      v108 = v335;
      swift_retain();
      v109 = sub_100393344((uint64_t)v102, v108);
      swift_bridgeObjectRelease(v102);
      swift_release();
      v102 = v109;
    }
    v101 = v359;
  }
  else
  {
    swift_bridgeObjectRelease(v102);
    v102 = _swiftEmptyArrayStorage;
  }
  v110 = (uint64_t)v97;
  v381 = v102;
  if (!*(_QWORD *)(v98 + 16) || !v102[2])
  {
    v355 = 0;
    v336 = _swiftEmptyArrayStorage;
    v368 = _swiftEmptyArrayStorage;
LABEL_98:
    swift_bridgeObjectRelease(v98);
    swift_bridgeObjectRelease(v102);
    return sub_100071850((unint64_t)v368);
  }
  v289 = 0;
  v355 = 0;
  v322 = v328 + 16;
  v111 = (*(unsigned __int8 *)(v363 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v363 + 80);
  v336 = _swiftEmptyArrayStorage;
  v368 = _swiftEmptyArrayStorage;
  v319 = v111;
  while (1)
  {
    sub_10002B1E8((uint64_t)v102 + v111, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10043AB24(0, 1);
    v112 = v344;
    sub_10002B1E8(v103, v344, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v112, v101) != 1)
    {
      sub_10001F544(v112, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (qword_10063D708 != -1)
        swift_once(&qword_10063D708, sub_10037CC94);
      v154 = type metadata accessor for Logger(0);
      v155 = sub_100012DC4(v154, (uint64_t)qword_1006585A0);
      v156 = Logger.logObject.getter(v155);
      v157 = static os_log_type_t.fault.getter(v156);
      if (os_log_type_enabled(v156, v157))
      {
        v158 = v110;
        v159 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v159 = 0;
        _os_log_impl((void *)&_mh_execute_header, v156, v157, "Unexpected item type", v159, 2u);
        v160 = v159;
        v110 = v158;
        swift_slowDealloc(v160, -1, -1);
      }

      goto LABEL_49;
    }
    sub_10001F580(v112, v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    Strong = swift_unknownObjectWeakLoadStrong(v322);
    if (!Strong)
    {
      if (qword_10063D748 != -1)
        swift_once(&qword_10063D748, sub_1003E9A78);
      v161 = type metadata accessor for Logger(0);
      v162 = sub_100012DC4(v161, (uint64_t)qword_100659C50);
      v163 = Logger.logObject.getter(v162);
      v164 = static os_log_type_t.fault.getter(v163);
      if (os_log_type_enabled(v163, v164))
      {
        v165 = v110;
        v166 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v166 = 0;
        _os_log_impl((void *)&_mh_execute_header, v163, v164, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v166, 2u);
        v167 = v166;
        v110 = v165;
        swift_slowDealloc(v167, -1, -1);
      }

      v380 = 0;
      v378 = 0u;
      v379 = 0u;
LABEL_47:
      sub_1000073A0((uint64_t)&v378, &qword_100658980);
      goto LABEL_48;
    }
    v115 = Strong;
    v116 = v328;
    v117 = *(_QWORD *)(v328 + 24);
    ObjectType = swift_getObjectType(Strong, v114);
    v119 = v116;
    v111 = v319;
    v101 = v359;
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 32))(&v378, v119, v110, ObjectType, v117);
    swift_unknownObjectRelease(v115);
    if (!*((_QWORD *)&v379 + 1))
      goto LABEL_47;
    sub_10002E37C(&v378, (uint64_t)&v373);
    v120 = v110;
    v121 = v374;
    v122 = v375;
    sub_10001413C(&v373, v374);
    v123 = *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8);
    v124 = v122;
    v110 = v120;
    LOBYTE(v121) = v123(v121, v124);
    v125 = sub_100027F10(&v373);
    if ((v121 & 1) != 0)
      break;
LABEL_48:
    sub_10001F544(v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
LABEL_49:
    sub_10001F544(v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v102 = v381;
    v98 = v382;
    if (!*(_QWORD *)(v382 + 16) || !v381[2])
      goto LABEL_98;
  }
  IndexSet.init()(v125);
  v126 = (uint64_t)v350;
  sub_10002B1E8(v103, (uint64_t)v350, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v357((Swift::Int *)v126, 0, 1, v101);
  swift_retain();
  v127 = TTRMutableTreeStorage.children(of:)(v126);
  swift_release();
  sub_1000073A0(v126, (uint64_t *)&unk_100640EB0);
  v128 = 0;
  v129 = *(_QWORD *)(v127 + 16);
  v365 = (char *)v127;
  v358 = v127 + v111;
  v130 = (uint64_t)v346;
  v131 = v345;
  v132 = v364;
  v356 = v129;
  if (!v129)
  {
LABEL_19:
    v135 = *(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v131 + 56);
    v135(v64, 1, 1, v104);
    v128 = v129;
    goto LABEL_23;
  }
  while ((v128 & 0x8000000000000000) == 0)
  {
    if (v128 >= *((_QWORD *)v365 + 2))
      goto LABEL_117;
    v136 = (uint64_t)&v362[*(int *)(v104 + 48)];
    sub_10002B1E8(v358 + *(_QWORD *)(v363 + 72) * v128, v136, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v137 = (uint64_t)v64 + *(int *)(v104 + 48);
    *v64 = v128;
    sub_10001F580(v136, v137, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v135 = *(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v131 + 56);
    v135(v64, 0, 1, v104);
    ++v128;
    v132 = v364;
LABEL_23:
    sub_10000F614((uint64_t)v64, (uint64_t)v132, &qword_100658968);
    v138 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v131 + 48);
    if (v138(v132, 1, v104) == 1)
    {
      v352 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v135;
      swift_bridgeObjectRelease(v365);
      *(Swift::Int_optional *)&v168 = IndexSet.remove(_:)(0);
      v169 = v314;
      v170 = IndexSet.rangeView.getter(v168, *((_QWORD *)&v168 + 1));
      v171 = v320;
      IndexSet.RangeView.makeIterator()(v170);
      v172 = v317;
      v290 = *(void (**)(char *, uint64_t))(v315 + 8);
      v290(v169, v317);
      v173 = (_QWORD *)(v171 + *(int *)(v308 + 36));
      v174 = sub_1000175C8(&qword_100658990, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.RangeView, (uint64_t)&protocol conformance descriptor for IndexSet.RangeView);
      v175 = *v173;
      dispatch thunk of Collection.endIndex.getter(v172);
      if (v175 != v373)
      {
        v176 = v355;
        v288 = v173;
        v287 = v174;
        while (1)
        {
          v177 = v320;
          v178 = v317;
          v179 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v373, v173, v317, v174);
          v181 = *v180;
          v291 = v180[1];
          v179(&v373, 0);
          v182 = v314;
          (*(void (**)(char *, uint64_t, uint64_t))(v315 + 16))(v314, v177, v178);
          dispatch thunk of Collection.formIndex(after:)(v173, v178, v174);
          v290(v182, v178);
          v304 = v181;
          v132 = (Swift::Int *)(v181 - 1);
          if (__OFSUB__(v181, 1))
            goto LABEL_119;
          v355 = v176;
          v183 = v335;
          v184 = (uint64_t)v350;
          sub_10002B1E8(v329, (uint64_t)v350, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v185 = v359;
          v186 = v357;
          v357((Swift::Int *)v184, 0, 1, v359);
          swift_retain();
          v187 = v313;
          TTRMutableTreeStorage.child(_:of:)(v132, v184);
          swift_release();
          sub_1000073A0(v184, (uint64_t *)&unk_100640EB0);
          sub_10002B1E8(v187, v184, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v186((Swift::Int *)v184, 0, 1, v185);
          swift_retain();
          v188 = TTRMutableTreeStorage.numberOfChildren(of:)(v184);
          swift_release();
          sub_1000073A0(v184, (uint64_t *)&unk_100640EB0);
          v189 = v303;
          sub_10002B1E8(v187, v303, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v189, v185) != 2)
            break;
          sub_10001F580(v189, v316, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v191 = *(_QWORD *)(v183 + 24);
          v190 = *(_QWORD *)(v183 + 32);
          v365 = (char *)swift_getObjectType(v191, v192);
          sub_10002B1E8(v187, v184, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v186((Swift::Int *)v184, 0, 1, v185);
          v193 = (uint64_t)v339;
          v186((Swift::Int *)v339, 1, 1, v185);
          sub_10029A148(v184, v193);
          *(_QWORD *)(v193 + *(int *)(v340 + 36)) = v188;
          v132 = v338;
          sub_10000F614(v193, (uint64_t)v338, &qword_100647B00);
          v194 = *(void (**)(uint64_t, char *, uint64_t))(v190 + 32);
          v195 = (uint64_t)v302;
          v358 = v191;
          v356 = v190;
          v354 = v194;
          v194((uint64_t)v132, v365, v190);
          sub_1000073A0((uint64_t)v132, &qword_100647B00);
          v353 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v301 + 48);
          if (v353(v195, 1, v337) == 1)
          {
            swift_bridgeObjectRelease(v368);
            swift_bridgeObjectRelease(v336);
            swift_bridgeObjectRelease(v381);
            swift_bridgeObjectRelease(v382);
            sub_1000073A0(v195, &qword_100658938);
            v279 = sub_10039B7B4();
            v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v279, 0, 0);
            *v280 = 0;
            swift_willThrow(v132);
            sub_10001F544(v316, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            v266 = v313;
            goto LABEL_109;
          }
          sub_10000F614(v195, v341, &qword_100654860);
          v196 = v304;
          v197 = v291;
          if (v304 == v291)
          {
            v198 = _swiftEmptyArrayStorage;
            v101 = v359;
            v111 = v319;
            v110 = (uint64_t)v321;
          }
          else
          {
            v101 = v359;
            v206 = (uint64_t)v350;
            if (v291 < v304)
              goto LABEL_122;
            v286 = &v355[v291 - v304];
            v198 = _swiftEmptyArrayStorage;
            while (2)
            {
              if (v196 >= v197)
                goto LABEL_120;
              v207 = v101;
              v208 = v196;
              v209 = v329;
              sub_10002B1E8(v329, v206, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v210 = v207;
              v211 = v357;
              v357((Swift::Int *)v206, 0, 1, v207);
              swift_retain();
              TTRMutableTreeStorage.child(_:of:)(v208, v206);
              swift_release();
              v212 = sub_1000073A0(v206, (uint64_t *)&unk_100640EB0);
              v213 = (uint64_t)v299;
              TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v212);
              v214 = swift_getEnumCaseMultiPayload(v213, v370);
              if (v214 >= 2)
              {
                if (v214 == 2)
                {
                  swift_bridgeObjectRelease(v368);
                  swift_bridgeObjectRelease(v336);
                  swift_bridgeObjectRelease(v198);
                  swift_bridgeObjectRelease(v381);
                  swift_bridgeObjectRelease(v382);
                  sub_10001F544(v213, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
                }
                else
                {
                  swift_bridgeObjectRelease(v368);
                  swift_bridgeObjectRelease(v336);
                  swift_bridgeObjectRelease(v198);
                  swift_bridgeObjectRelease(v381);
                  swift_bridgeObjectRelease(v382);
                }
                v266 = v313;
                v267 = (_QWORD *)&unk_10063D000;
                v283 = sub_10039B7B4();
                v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v283, 0, 0);
                *v284 = 1;
                swift_willThrow(v132);
                sub_10001F544(v342, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1000073A0(v341, &qword_100654860);
                sub_10001F544(v316, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v265 = v329;
LABEL_115:
                v264 = (uint64_t)v321;
LABEL_102:
                sub_10001F544(v266, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1000073A0(v320, &qword_100658988);
                (*(void (**)(char *, uint64_t))(v306 + 8))(v330, v307);
                sub_10001F544(v264, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
                sub_10001F544(v265, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                if (v267[225] != -1)
                  goto LABEL_123;
                goto LABEL_103;
              }
              v215 = v297;
              sub_10001F580(v213, v297, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10001F580(v215, v312, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10002B1E8(v209, v206, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v211((Swift::Int *)v206, 0, 1, v210);
              v216 = (uint64_t)v339;
              v211((Swift::Int *)v339, 1, 1, v210);
              sub_10029A148(v206, v216);
              v217 = *(int *)(v340 + 36);
              v304 = v208;
              *(_QWORD *)(v216 + v217) = v208;
              v218 = (uint64_t)v338;
              sub_10000F614(v216, (uint64_t)v338, &qword_100647B00);
              v219 = (uint64_t)v298;
              v354(v218, v365, v356);
              sub_1000073A0(v218, &qword_100647B00);
              v220 = v353(v219, 1, v337);
              v221 = (unint64_t)v368;
              v222 = (unint64_t)v198;
              if (v220 == 1)
              {
                swift_bridgeObjectRelease(v368);
                swift_bridgeObjectRelease(v336);
                swift_bridgeObjectRelease(v198);
                swift_bridgeObjectRelease(v381);
                swift_bridgeObjectRelease(v382);
                sub_1000073A0(v219, &qword_100658938);
                v281 = sub_10039B7B4();
                v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v281, 0, 0);
                *v282 = 0;
                swift_willThrow(v132);
                sub_10001F544(v312, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                sub_10001F544(v342, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1000073A0(v341, &qword_100654860);
                sub_10001F544(v316, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v265 = v329;
                v266 = v313;
                v267 = (_QWORD *)&unk_10063D000;
                goto LABEL_115;
              }
              v223 = v309;
              sub_10000F614(v219, v309, &qword_100654860);
              v224 = v310 + *(int *)(v334 + 48);
              v225 = v310 + *(int *)(v334 + 64);
              sub_10002B1E8(v342, v310, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10000735C(v223, v224, &qword_100654860);
              sub_10000735C(v341, v225, &qword_100654860);
              if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0)
                v221 = sub_100456150(0, *(_QWORD *)(v221 + 16) + 1, 1, v221);
              v226 = (uint64_t)v294;
              v228 = *(_QWORD *)(v221 + 16);
              v227 = *(_QWORD *)(v221 + 24);
              if (v228 >= v227 >> 1)
                v221 = sub_100456150(v227 > 1, v228 + 1, 1, v221);
              *(_QWORD *)(v221 + 16) = v228 + 1;
              v327 = (*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80);
              v326 = *(_QWORD *)(v296 + 72);
              sub_10000F614(v310, v221 + v327 + v326 * v228, &qword_100654870);
              sub_10002B1E8(v312, v226, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              if ((swift_isUniquelyReferenced_nonNull_native(v198) & 1) == 0)
                v222 = sub_100456178(0, v198[2] + 1, 1, (unint64_t)v198);
              v230 = *(_QWORD *)(v222 + 16);
              v229 = *(_QWORD *)(v222 + 24);
              v132 = (Swift::Int *)(v230 + 1);
              if (v230 >= v229 >> 1)
                v222 = sub_100456178(v229 > 1, v230 + 1, 1, v222);
              *(_QWORD *)(v222 + 16) = v132;
              v325 = (*(unsigned __int8 *)(v295 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v295 + 80);
              v324 = *(_QWORD *)(v295 + 72);
              sub_10001F580(v226, v222 + v325 + v324 * v230, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              if (__OFADD__(v355++, 1))
                goto LABEL_121;
              ++v304;
              v132 = v350;
              sub_10002B1E8(v342, (uint64_t)v350, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v357(v132, 0, 1, v359);
              swift_retain();
              v232 = TTRMutableTreeStorage.children(of:)(v132);
              swift_release();
              sub_1000073A0((uint64_t)v132, (uint64_t *)&unk_100640EB0);
              v233 = 0;
              v234 = *(_QWORD *)(v232 + 16);
              v311 = v232;
              v305 = v232 + v319;
              v235 = (uint64_t *)v343;
              v323 = v234;
              while (1)
              {
                v236 = (unint64_t *)v333;
                if (v233 == v234)
                {
                  v352(v333, 1, 1, v104);
                  v233 = v234;
                }
                else
                {
                  if (v233 >= *(_QWORD *)(v311 + 16))
                    goto LABEL_118;
                  v237 = (uint64_t)&v362[*(int *)(v104 + 48)];
                  v132 = (Swift::Int *)&type metadata accessor for TTRRemindersListViewModel.Item;
                  sub_10002B1E8(v305 + *(_QWORD *)(v363 + 72) * v233, v237, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  v238 = (uint64_t)v236 + *(int *)(v104 + 48);
                  *v236 = v233;
                  sub_10001F580(v237, v238, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  v352((char *)v236, 0, 1, v104);
                  ++v233;
                  v235 = (uint64_t *)v343;
                }
                v198 = (_QWORD *)v222;
                v368 = (_QWORD *)v221;
                sub_10000F614((uint64_t)v236, (uint64_t)v235, &qword_100658968);
                if (v138(v235, 1, v104) == 1)
                  break;
                v239 = *v235;
                v240 = (uint64_t)v235 + *(int *)(v104 + 48);
                v241 = v361;
                sub_10001F580(v240, v361, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v242 = v241;
                v243 = v332;
                sub_10002B1E8(v242, v332, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v244 = v359;
                if (swift_getEnumCaseMultiPayload(v243, v359) != 2)
                {
                  swift_bridgeObjectRelease(v368);
                  swift_bridgeObjectRelease(v336);
                  swift_bridgeObjectRelease(v222);
                  swift_bridgeObjectRelease(v311);
                  swift_bridgeObjectRelease(v381);
                  swift_bridgeObjectRelease(v382);
                  sub_10001F544(v243, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  v259 = sub_10039B7B4();
                  v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v259, 0, 0);
                  *v260 = 1;
                  swift_willThrow(v132);
                  sub_10001F544(v361, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_1000073A0(v309, &qword_100654860);
                  sub_10001F544(v312, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                  sub_10001F544(v342, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_1000073A0(v341, &qword_100654860);
                  v261 = v316;
LABEL_101:
                  sub_10001F544(v261, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                  v264 = (uint64_t)v321;
                  v265 = v329;
                  v266 = v313;
                  v267 = &unk_10063D000;
                  goto LABEL_102;
                }
                sub_10001F580(v243, v360, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v245 = (uint64_t)v350;
                sub_10002B1E8(v342, (uint64_t)v350, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v246 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v357;
                v357((Swift::Int *)v245, 0, 1, v244);
                v247 = (uint64_t)v339;
                v246(v339, 1, 1, v244);
                sub_10029A148(v245, v247);
                *(_QWORD *)(v247 + *(int *)(v340 + 36)) = v239;
                v248 = (uint64_t)v338;
                sub_10000F614(v247, (uint64_t)v338, &qword_100647B00);
                v249 = (uint64_t)v331;
                v354(v248, v365, v356);
                sub_1000073A0(v248, &qword_100647B00);
                if (v353(v249, 1, v337) == 1)
                {
                  swift_bridgeObjectRelease(v368);
                  swift_bridgeObjectRelease(v336);
                  swift_bridgeObjectRelease(v222);
                  swift_bridgeObjectRelease(v311);
                  swift_bridgeObjectRelease(v381);
                  swift_bridgeObjectRelease(v382);
                  sub_1000073A0(v249, &qword_100658938);
                  v262 = sub_10039B7B4();
                  v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v262, 0, 0);
                  *v263 = 0;
                  swift_willThrow(v132);
                  sub_10001F544(v360, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                  sub_10001F544(v361, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_1000073A0(v309, &qword_100654860);
                  sub_10001F544(v312, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                  sub_10001F544(v342, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_1000073A0(v341, &qword_100654860);
                  v261 = v316;
                  goto LABEL_101;
                }
                v250 = v249;
                v251 = v348;
                sub_10000F614(v250, v348, &qword_100654860);
                v252 = v349 + *(int *)(v334 + 48);
                v253 = v349 + *(int *)(v334 + 64);
                sub_10002B1E8(v361, v349, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_10000735C(v251, v252, &qword_100654860);
                sub_10000735C(v341, v253, &qword_100654860);
                v221 = (unint64_t)v368;
                v255 = v368[2];
                v254 = v368[3];
                if (v255 >= v254 >> 1)
                  v221 = sub_100456150(v254 > 1, v255 + 1, 1, (unint64_t)v368);
                *(_QWORD *)(v221 + 16) = v255 + 1;
                sub_10000F614(v349, v221 + v327 + v255 * v326, &qword_100654870);
                sub_10002B1E8(v360, v347, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v257 = *(_QWORD *)(v222 + 16);
                v256 = *(_QWORD *)(v222 + 24);
                v234 = v323;
                if (v257 >= v256 >> 1)
                  v222 = sub_100456178(v256 > 1, v257 + 1, 1, v222);
                *(_QWORD *)(v222 + 16) = v257 + 1;
                v132 = (Swift::Int *)&type metadata accessor for TTRRemindersListViewModel.ReminderID;
                sub_10001F580(v347, v222 + v325 + v257 * v324, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                sub_1000073A0(v348, &qword_100654860);
                sub_10001F544(v360, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                sub_10001F544(v361, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v235 = (uint64_t *)v343;
              }
              swift_bridgeObjectRelease(v311);
              sub_1000073A0(v309, &qword_100654860);
              sub_10001F544(v312, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10001F544(v342, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v196 = v304;
              v197 = v291;
              v110 = (uint64_t)v321;
              v101 = v359;
              v206 = (uint64_t)v350;
              v111 = v319;
              if (v304 != v291)
                continue;
              break;
            }
            v355 = v286;
          }
          v199 = *(int *)(v293 + 48);
          v200 = v300;
          sub_10002B1E8(v316, v300, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(_QWORD *)(v200 + v199) = v198;
          if ((swift_isUniquelyReferenced_nonNull_native(v336) & 1) != 0)
          {
            v176 = v355;
            v201 = (unint64_t)v336;
          }
          else
          {
            v201 = sub_100456164(0, v336[2] + 1, 1, (unint64_t)v336);
            v176 = v355;
          }
          v203 = *(_QWORD *)(v201 + 16);
          v202 = *(_QWORD *)(v201 + 24);
          if (v203 >= v202 >> 1)
            v201 = sub_100456164(v202 > 1, v203 + 1, 1, v201);
          *(_QWORD *)(v201 + 16) = v203 + 1;
          v204 = (*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80);
          v336 = (_QWORD *)v201;
          sub_10000F614(v300, v201 + v204 + *(_QWORD *)(v292 + 72) * v203, &qword_10064A838);
          sub_1000073A0(v341, &qword_100654860);
          sub_10001F544(v316, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_10001F544(v313, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v173 = v288;
          v205 = *v288;
          v174 = v287;
          dispatch thunk of Collection.endIndex.getter(v317);
          if (v205 == v373)
            goto LABEL_54;
        }
        swift_bridgeObjectRelease(v368);
        swift_bridgeObjectRelease(v336);
        swift_bridgeObjectRelease(v381);
        swift_bridgeObjectRelease(v382);
        sub_10001F544(v189, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v277 = sub_10039B7B4();
        v132 = (Swift::Int *)swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v277, 0, 0);
        *v278 = 1;
        swift_willThrow(v132);
        v266 = v187;
LABEL_109:
        v267 = (_QWORD *)&unk_10063D000;
        v264 = (uint64_t)v321;
        v265 = v329;
        goto LABEL_102;
      }
      v110 = (uint64_t)v321;
      v101 = v359;
      v176 = v355;
      v111 = v319;
LABEL_54:
      v355 = v176;
      sub_1000073A0(v320, &qword_100658988);
      (*(void (**)(char *, uint64_t))(v306 + 8))(v330, v307);
      sub_10001F544(v110, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      v64 = v366;
      v103 = v329;
      goto LABEL_49;
    }
    v139 = *v132;
    v140 = sub_10001F580((uint64_t)v132 + *(int *)(v104 + 48), v369, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v141 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v140);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v141);
    v142 = swift_getEnumCaseMultiPayload(v130, v370);
    if (v142 >= 2)
    {
      if (v142 != 2)
        goto LABEL_33;
      sub_10001F544(v372, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10001F544(v369, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v133 = v130;
      v134 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem;
LABEL_18:
      sub_10001F544(v133, v134);
      v64 = v366;
      if (v128 == v129)
        goto LABEL_19;
      continue;
    }
    sub_10001F544(v130, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v143 = v382;
    if (!*(_QWORD *)(v382 + 16))
      goto LABEL_33;
    Hasher.init(_seed:)(&v373, *(_QWORD *)(v382 + 40));
    v144 = swift_bridgeObjectRetain(v143);
    TTRRemindersListViewModel.ItemID.hash(into:)(&v373, v144);
    v145 = Hasher._finalize()();
    v146 = -1 << *(_BYTE *)(v143 + 32);
    v147 = v145 & ~v146;
    if (((*(_QWORD *)(v143 + 56 + ((v147 >> 3) & 0xFFFFFFFFFFFFF8)) >> v147) & 1) == 0)
    {
LABEL_30:
      swift_bridgeObjectRelease(v143);
      v130 = (uint64_t)v346;
      v104 = v351;
      v131 = v345;
      v132 = v364;
      v129 = v356;
LABEL_33:
      sub_10001F544(v372, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v133 = v369;
      v134 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
      goto LABEL_18;
    }
    v148 = ~v146;
    v149 = *(_QWORD *)(v367 + 72);
    while (1)
    {
      v150 = v371;
      sub_10002B1E8(*(_QWORD *)(v143 + 48) + v149 * v147, v371, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v151 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v150, v372);
      sub_10001F544(v150, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if ((v151 & 1) != 0)
        break;
      v147 = (v147 + 1) & v148;
      if (((*(_QWORD *)(v143 + 56 + ((v147 >> 3) & 0xFFFFFFFFFFFFF8)) >> v147) & 1) == 0)
        goto LABEL_30;
    }
    swift_bridgeObjectRelease(v143);
    IndexSet.insert(_:)(v139);
    v152 = v318;
    v153 = v372;
    sub_1000F4754(v372, v318);
    sub_1000073A0(v152, (uint64_t *)&unk_1006463C0);
    sub_10001F544(v153, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544(v369, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v130 = (uint64_t)v346;
    v104 = v351;
    v131 = v345;
    v64 = v366;
    v132 = v364;
    v129 = v356;
    if (v128 == v356)
      goto LABEL_19;
  }
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  swift_once(&qword_10063D708, sub_10037CC94);
LABEL_103:
  v268 = type metadata accessor for Logger(0);
  sub_100012DC4(v268, (uint64_t)qword_1006585A0);
  swift_errorRetain(v132);
  v269 = swift_errorRetain(v132);
  v270 = Logger.logObject.getter(v269);
  v271 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v270, v271))
  {
    v272 = (uint8_t *)swift_slowAlloc(12, -1);
    v273 = swift_slowAlloc(32, -1);
    v373 = v273;
    *(_DWORD *)v272 = 136315138;
    swift_getErrorValue(v132, v377, v376);
    v274 = Error.localizedDescription.getter(v376[1], v376[2]);
    v276 = v275;
    *(_QWORD *)&v378 = sub_100027E40(v274, v275, &v373);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v378, (char *)&v378 + 8, v272 + 4, v272 + 12);
    swift_bridgeObjectRelease(v276);
    swift_errorRelease(v132);
    swift_errorRelease(v132);
    _os_log_impl((void *)&_mh_execute_header, v270, v271, "Cannot compute move steps for indenting items {error: %s}", v272, 0xCu);
    swift_arrayDestroy(v273, 1, &type metadata for Any[8]);
    swift_slowDealloc(v273, -1, -1);
    swift_slowDealloc(v272, -1, -1);

    swift_errorRelease(v132);
  }
  else
  {
    swift_errorRelease(v132);
    swift_errorRelease(v132);
    swift_errorRelease(v132);

  }
  return 0;
}

_QWORD *sub_100397FDC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::Int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int EnumCaseMultiPayload;
  uint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  uint64_t Strong;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t ObjectType;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  __int128 *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  os_log_type_t v165;
  uint8_t *v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  os_log_type_t v170;
  uint8_t *v171;
  uint8_t *v172;
  _QWORD *v173;
  uint64_t v174;
  unint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t (*v195)(_QWORD);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  Swift::Int v200;
  uint64_t v201;
  uint64_t v202;
  unsigned int v203;
  uint64_t v204;
  __n128 v205;
  Swift::Int v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(uint64_t, char *, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _BOOL4 v230;
  char *v231;
  uint64_t v232;
  void (*v233)(char *, uint64_t, uint64_t, uint64_t);
  char *v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v250;
  void (*v251)(uint64_t, char *, uint64_t);
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(uint64_t, char *, uint64_t);
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  unint64_t v266;
  BOOL v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  unint64_t v280;
  unint64_t v281;
  unint64_t v282;
  void (*v283)(char *, uint64_t);
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  unint64_t v305;
  uint64_t v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t v309;
  unint64_t v311;
  _BYTE *v312;
  uint64_t v313;
  void (*v314)(char *, uint64_t);
  uint64_t v315;
  unint64_t v316;
  _BYTE *v317;
  uint64_t v318;
  void (*v319)(char *, uint64_t);
  uint64_t v320;
  unint64_t v321;
  _BYTE *v322;
  unint64_t v323;
  _BYTE *v324;
  unint64_t v325;
  _BYTE *v326;
  unint64_t v327;
  _BYTE *v328;
  uint64_t v329;
  uint64_t v330;
  NSObject *v331;
  os_log_type_t v332;
  uint8_t *v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  _BYTE *v340;
  void (*v341)(char *, uint64_t, uint64_t, uint64_t);
  void (*v342)(uint64_t, char *, uint64_t);
  uint64_t v343;
  uint64_t v344;
  char *v345;
  _BOOL4 v346;
  uint64_t v347;
  uint64_t v348;
  void (*v349)(char *, uint64_t);
  uint64_t v350;
  int *v351;
  void (*v352)(char *, uint64_t, uint64_t);
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  _QWORD *v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  char *v375;
  unint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  int *v391;
  uint64_t v392;
  unint64_t v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  _QWORD *v411;
  _QWORD *v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  uint64_t v416;
  char *v417;
  Swift::Int *v418;
  uint64_t v419;
  char *v420;
  void (*v421)(uint64_t, char *, uint64_t);
  char *v422;
  unsigned int (*v423)(uint64_t, uint64_t, uint64_t);
  uint64_t v424;
  char *v425;
  uint64_t v426;
  char *v427;
  _QWORD *v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  uint64_t v433;
  void (*v434)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  __int128 v441;
  __int128 v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  _QWORD v447[3];
  char v448[8];
  uint64_t v449;

  v410 = a4;
  v433 = a3;
  LODWORD(v394) = a2;
  v421 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for REMFeatureFlags(0);
  v420 = (char *)*((_QWORD *)v421 - 1);
  __chkstk_darwin(v421);
  v417 = (char *)&v341 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v6);
  v416 = (uint64_t)&v341 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v351 = (int *)sub_10002A750(&qword_10064A828);
  v350 = *((_QWORD *)v351 - 1);
  __chkstk_darwin(v351);
  v367 = (uint64_t)&v341 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v397 = sub_10002A750(&qword_100654870);
  v354 = *(_QWORD *)(v397 - 8);
  v9 = __chkstk_darwin(v397);
  v407 = (uint64_t)&v341 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v371 = (uint64_t)&v341 - v11;
  v402 = sub_10002A750(&qword_100647B00);
  v12 = __chkstk_darwin(v402);
  v401 = (char *)&v341 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v400 = (uint64_t)&v341 - v14;
  v15 = sub_10002A750(&qword_100658938);
  v16 = __chkstk_darwin(v15);
  v389 = (char *)&v341 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v395 = (char *)&v341 - v19;
  v20 = __chkstk_darwin(v18);
  v355 = (char *)&v341 - v21;
  __chkstk_darwin(v20);
  v357 = (char *)&v341 - v22;
  v23 = sub_10002A750(&qword_100654860);
  v356 = *(_QWORD *)(v23 - 8);
  v24 = __chkstk_darwin(v23);
  v406 = (uint64_t)&v341 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v413 = (uint64_t)&v341 - v27;
  v28 = __chkstk_darwin(v26);
  v370 = (uint64_t)&v341 - v29;
  __chkstk_darwin(v28);
  v378 = (uint64_t)&v341 - v30;
  v31 = sub_10002A750((uint64_t *)&unk_1006463C0);
  v32 = __chkstk_darwin(v31);
  __chkstk_darwin(v32);
  v385 = (uint64_t)&v341 - v33;
  v34 = sub_10002A750(&qword_100658948);
  __chkstk_darwin(v34);
  v369 = (char *)&v341 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v379 = type metadata accessor for IndexSet.Index(0);
  v384 = *(_QWORD *)(v379 - 8);
  v36 = __chkstk_darwin(v379);
  v375 = (char *)&v341 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v380 = (char *)&v341 - v39;
  __chkstk_darwin(v38);
  v373 = (char *)&v341 - v40;
  v362 = sub_10002A750(&qword_100658950);
  __chkstk_darwin(v362);
  v361 = (char *)&v341 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v360 = sub_10002A750(&qword_100658958);
  v42 = __chkstk_darwin(v360);
  v359 = (uint64_t)&v341 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v383 = (uint64_t)&v341 - v44;
  v429 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  v45 = __chkstk_darwin(v429);
  v47 = (char *)&v341 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __chkstk_darwin(v45);
  v363 = (char *)&v341 - v49;
  __chkstk_darwin(v48);
  v422 = (char *)&v341 - v50;
  v423 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v426 = *((_QWORD *)v423 - 1);
  v51 = __chkstk_darwin(v423);
  v53 = (char *)&v341 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __chkstk_darwin(v51);
  v425 = (char *)&v341 - v55;
  v56 = __chkstk_darwin(v54);
  v436 = (uint64_t)&v341 - v57;
  __chkstk_darwin(v56);
  v440 = (uint64_t)&v341 - v58;
  v59 = sub_10002A750(&qword_100658960);
  v439 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v427 = (char *)&v341 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10002A750(&qword_100658968);
  v62 = __chkstk_darwin(v61);
  v432 = (char *)&v341 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin(v62);
  v66 = (uint64_t *)((char *)&v341 - v65);
  v67 = __chkstk_darwin(v64);
  v415 = (char *)&v341 - v68;
  __chkstk_darwin(v67);
  v70 = (Swift::Int *)((char *)&v341 - v69);
  v382 = type metadata accessor for IndexSet(0);
  v374 = *(_QWORD *)(v382 - 8);
  __chkstk_darwin(v382);
  v408 = (char *)&v341 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v387 = *(_QWORD *)(v72 - 8);
  v73 = __chkstk_darwin(v72);
  v405 = (uint64_t)&v341 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __chkstk_darwin(v73);
  v398 = (uint64_t)&v341 - v76;
  v77 = __chkstk_darwin(v75);
  v358 = (uint64_t)&v341 - v78;
  v79 = __chkstk_darwin(v77);
  v377 = (uint64_t)&v341 - v80;
  v81 = __chkstk_darwin(v79);
  v386 = (uint64_t)&v341 - v82;
  __chkstk_darwin(v81);
  v381 = (uint64_t)&v341 - v83;
  v391 = (int *)sub_10002A750(&qword_100658970);
  v390 = *((_QWORD *)v391 - 1);
  v84 = __chkstk_darwin(v391);
  v399 = (uint64_t)&v341 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __chkstk_darwin(v84);
  v366 = (uint64_t)&v341 - v87;
  __chkstk_darwin(v86);
  v365 = (uint64_t)&v341 - v88;
  v437 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v89 = *(_QWORD *)(v437 - 8);
  v90 = __chkstk_darwin(v437);
  v434 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v341 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = __chkstk_darwin(v90);
  v431 = (uint64_t)&v341 - v93;
  v94 = __chkstk_darwin(v92);
  v96 = (char *)&v341 - v95;
  v97 = __chkstk_darwin(v94);
  v428 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v341 - v98);
  v99 = __chkstk_darwin(v97);
  v396 = (uint64_t)&v341 - v100;
  v101 = __chkstk_darwin(v99);
  v414 = (uint64_t)&v341 - v102;
  v103 = __chkstk_darwin(v101);
  v403 = (uint64_t)&v341 - v104;
  v105 = __chkstk_darwin(v103);
  v419 = (uint64_t)&v341 - v106;
  v107 = __chkstk_darwin(v105);
  v364 = (uint64_t)&v341 - v108;
  v109 = __chkstk_darwin(v107);
  v404 = (uint64_t)&v341 - v110;
  v111 = __chkstk_darwin(v109);
  v392 = (uint64_t)&v341 - v112;
  __chkstk_darwin(v111);
  v393 = (unint64_t)&v341 - v113;
  sub_10002A750((uint64_t *)&unk_100640EB0);
  v114 = __chkstk_darwin(a1);
  v435 = (uint64_t)&v341 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = *(_QWORD *)(a1 + 16);
  v409 = v23;
  v438 = v59;
  v418 = v70;
  v424 = v89;
  v388 = v96;
  if (v116)
  {
    v117 = v114 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    v430 = *(_QWORD *)(v89 + 72);
    LODWORD(v412) = enum case for REMFeatureFlags.indentOutdentUncommittedReminder(_:);
    v376 = v114;
    swift_bridgeObjectRetain(v114);
    v411 = v53;
    v118 = sub_10002B1E8(v117, (uint64_t)v434, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v118);
    v119 = (char *)&loc_100398C08 + dword_10039B5F4[swift_getEnumCaseMultiPayload(v47, v429)];
    __asm { BR              X9 }
  }
  v120 = sub_1003E7C4C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v449 = v120;
  v121 = v424;
  v122 = v435;
  v123 = v437;
  v434 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v424 + 56);
  v434(v435, 1, 1, v437);
  swift_retain();
  v124 = (_QWORD *)TTRMutableTreeStorage.children(of:)(v122);
  swift_release();
  sub_1000073A0(v122, (uint64_t *)&unk_100640EB0);
  v125 = v416;
  if (v124[2])
  {
    v126 = (uint64_t)v124
         + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
    v121 = (uint64_t)&type metadata accessor for TTRRemindersListViewModel.Item;
    v127 = v393;
    sub_10002B1E8(v126, v393, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v127, v123);
    sub_10001F544(v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (EnumCaseMultiPayload)
    {
      v344 = 0;
    }
    else
    {
      v129 = v433;
      swift_retain();
      v121 = (uint64_t)sub_100393344((uint64_t)v124, v129);
      v344 = 0;
      swift_bridgeObjectRelease(v124);
      swift_release();
      v124 = (_QWORD *)v121;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v124);
    v344 = 0;
    v124 = _swiftEmptyArrayStorage;
  }
  v421 = (void (*)(uint64_t, char *, uint64_t))v124[2];
  if (v421)
  {
    v130 = 0;
    v376 = (*(unsigned __int8 *)(v424 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v424 + 80);
    v420 = (char *)v124 + v376;
    v411 = _swiftEmptyArrayStorage;
    v417 = (char *)(v410 + 16);
    v412 = v124;
    while (1)
    {
      if (v130 >= v124[2])
      {
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
        goto LABEL_166;
      }
      v430 = *(_QWORD *)(v424 + 72);
      v131 = v428;
      sub_10002B1E8((uint64_t)&v420[v430 * v130], (uint64_t)v428, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8((uint64_t)v131, (uint64_t)v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v96, v123) != 1)
      {
        sub_10001F544((uint64_t)v96, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (qword_10063D708 != -1)
          swift_once(&qword_10063D708, sub_10037CC94);
        v163 = type metadata accessor for Logger(0);
        v164 = sub_100012DC4(v163, (uint64_t)qword_1006585A0);
        v121 = Logger.logObject.getter(v164);
        v165 = static os_log_type_t.fault.getter(v121);
        if (os_log_type_enabled((os_log_t)v121, v165))
        {
          v166 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v166 = 0;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v121, v165, "Unexpected item type", v166, 2u);
          v167 = v166;
          v123 = v437;
          swift_slowDealloc(v167, -1, -1);
        }

        goto LABEL_11;
      }
      sub_10001F580((uint64_t)v96, v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      Strong = swift_unknownObjectWeakLoadStrong(v417);
      if (Strong)
      {
        v134 = Strong;
        v135 = v410;
        v121 = *(_QWORD *)(v410 + 24);
        ObjectType = swift_getObjectType(Strong, v133);
        v137 = v135;
        v124 = v412;
        v125 = v416;
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 32))(&v441, v137, v416, ObjectType, v121);
        swift_unknownObjectRelease(v134);
        if (*((_QWORD *)&v442 + 1))
        {
          sub_10002E37C(&v441, (uint64_t)&v444);
          v138 = v445;
          v139 = v446;
          sub_10001413C(&v444, v445);
          v140 = *(uint64_t (**)(uint64_t, uint64_t))(v139 + 8);
          v141 = v139;
          v123 = v437;
          v121 = v140(v138, v141);
          sub_100027F10(&v444);
          if ((v121 & 1) != 0)
          {
            v142 = v435;
            sub_10002B1E8((uint64_t)v428, v435, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v434(v142, 0, 1, v123);
            swift_retain();
            v143 = TTRMutableTreeStorage.children(of:)(v142);
            swift_release();
            sub_1000073A0(v142, (uint64_t *)&unk_100640EB0);
            v144 = 0;
            v145 = *(_QWORD *)(v143 + 16);
            v425 = (char *)v143;
            v423 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v143 + v376);
LABEL_30:
            v159 = v432;
            while (1)
            {
              if (v144 == v145)
              {
                v146 = 1;
                v144 = v145;
              }
              else
              {
                v147 = (__int128 *)*((_QWORD *)v425 + 2);
                if (v144 >= (unint64_t)v147)
                {
                  __break(1u);
LABEL_149:
                  swift_bridgeObjectRelease(*((_QWORD *)v147 - 32));
                  swift_bridgeObjectRelease(v428);
                  swift_bridgeObjectRelease(v368);
                  swift_bridgeObjectRelease(v431);
                  swift_bridgeObjectRelease(v449);
                  goto LABEL_150;
                }
                v148 = (uint64_t)&v427[*(int *)(v59 + 48)];
                sub_10002B1E8((uint64_t)v423 + v144 * v430, v148, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v149 = (uint64_t)v159 + *(int *)(v59 + 48);
                *v159 = v144;
                sub_10001F580(v148, v149, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v146 = 0;
                ++v144;
              }
              v121 = v439;
              (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v439 + 56))(v159, v146, 1, v59);
              sub_10000F614((uint64_t)v159, (uint64_t)v66, &qword_100658968);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v121 + 48))(v66, 1, v59) == 1)
              {
                swift_bridgeObjectRelease(v425);
                v125 = v416;
                sub_10001F544(v416, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
                v123 = v437;
                v96 = v388;
                v124 = v412;
                goto LABEL_11;
              }
              v150 = v59;
              v151 = *v66;
              v152 = v431;
              sub_10001F580((uint64_t)v66 + *(int *)(v150 + 48), v431, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v153 = v435;
              sub_10002B1E8(v152, v435, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v434(v153, 0, 1, v437);
              swift_retain();
              v154 = TTRMutableTreeStorage.numberOfChildren(of:)(v153);
              swift_release();
              sub_1000073A0(v153, (uint64_t *)&unk_100640EB0);
              if (v154 <= 0)
              {
                sub_10001F544(v152, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v59 = v438;
                goto LABEL_30;
              }
              v155 = v435;
              sub_10002B1E8(v152, v435, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v434(v155, 0, 1, v437);
              swift_retain();
              v394 = TTRMutableTreeStorage.children(of:)(v155);
              swift_release();
              sub_1000073A0(v155, (uint64_t *)&unk_100640EB0);
              v156 = v399;
              v157 = v399 + v391[12];
              v158 = v391[16];
              v393 = v391[20];
              sub_10002B1E8((uint64_t)v428, v399, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10002B1E8(v152, v157, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              *(_QWORD *)(v156 + v158) = v151;
              *(_QWORD *)(v156 + v393) = v394;
              if ((swift_isUniquelyReferenced_nonNull_native(v411) & 1) == 0)
                v411 = (_QWORD *)sub_1004561B4(0, v411[2] + 1, 1, (unint64_t)v411);
              v59 = v438;
              v159 = v432;
              v161 = v411[2];
              v160 = v411[3];
              if (v161 >= v160 >> 1)
                v411 = (_QWORD *)sub_1004561B4(v160 > 1, v161 + 1, 1, (unint64_t)v411);
              v162 = v411;
              v411[2] = v161 + 1;
              sub_10000F614(v399, (uint64_t)v162+ ((*(unsigned __int8 *)(v390 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80))+ *(_QWORD *)(v390 + 72) * v161, &qword_100658970);
              sub_10001F544(v431, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            }
          }
          goto LABEL_41;
        }
      }
      else
      {
        if (qword_10063D748 != -1)
          swift_once(&qword_10063D748, sub_1003E9A78);
        v168 = type metadata accessor for Logger(0);
        v169 = sub_100012DC4(v168, (uint64_t)qword_100659C50);
        v121 = Logger.logObject.getter(v169);
        v170 = static os_log_type_t.fault.getter(v121);
        if (os_log_type_enabled((os_log_t)v121, v170))
        {
          v171 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v171 = 0;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v121, v170, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v171, 2u);
          v172 = v171;
          v123 = v437;
          swift_slowDealloc(v172, -1, -1);
        }

        v443 = 0;
        v441 = 0u;
        v442 = 0u;
      }
      sub_1000073A0((uint64_t)&v441, &qword_100658980);
LABEL_41:
      sub_10001F544(v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
LABEL_11:
      ++v130;
      sub_10001F544((uint64_t)v428, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((void (*)(uint64_t, char *, uint64_t))v130 == v421)
      {
        swift_bridgeObjectRelease(v124);
        v70 = v418;
        v173 = v411;
        goto LABEL_45;
      }
    }
  }
  swift_bridgeObjectRelease(v124);
  v173 = _swiftEmptyArrayStorage;
LABEL_45:
  v174 = v449;
  v175 = (unint64_t *)v415;
  v176 = v424;
  if (*(_QWORD *)(v449 + 16) && v173[2])
  {
    v368 = _swiftEmptyArrayStorage;
    v428 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v173) & 1) != 0)
      {
        v177 = v173[2];
        if (!v177)
          goto LABEL_127;
      }
      else
      {
        v173 = (_QWORD *)sub_1002B37C0((unint64_t)v173);
        v177 = v173[2];
        if (!v177)
        {
LABEL_127:
          __break(1u);
          goto LABEL_128;
        }
      }
      v178 = v177 - 1;
      v179 = (uint64_t)v173
           + ((*(unsigned __int8 *)(v390 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80))
           + *(_QWORD *)(v390 + 72) * (v177 - 1);
      v180 = v173;
      v181 = v366;
      sub_10000F614(v179, v366, &qword_100658970);
      v411 = v180;
      v180[2] = v178;
      v182 = v181;
      v183 = v365;
      sub_10000F614(v182, v365, &qword_100658970);
      v184 = v183 + v391[12];
      v425 = *(char **)(v183 + v391[16]);
      v185 = *(_QWORD *)(v183 + v391[20]);
      sub_10001F580(v183, v392, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v186 = v184;
      v187 = v404;
      sub_10001F580(v186, v404, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v188 = v187;
      v189 = v364;
      sub_10002B1E8(v188, v364, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v189, v437) != 2)
      {
        swift_bridgeObjectRelease(v174);
        swift_bridgeObjectRelease(v411);
        swift_bridgeObjectRelease(v428);
        swift_bridgeObjectRelease(v368);
        swift_bridgeObjectRelease(v185);
        sub_10001F544(v189, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v323 = sub_10039B7B4();
        v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v323, 0, 0);
        *v324 = 1;
        swift_willThrow(v121);
        goto LABEL_143;
      }
      v190 = sub_10001F580(v189, v381, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      IndexSet.init()(v190);
      v121 = *(_QWORD *)(v185 + 16);
      v431 = v185;
      swift_bridgeObjectRetain(v185);
      v191 = 0;
      v192 = v419;
      v432 = (char *)v121;
LABEL_55:
      v193 = (uint64_t)v422;
      if (v191 == v121)
      {
LABEL_64:
        v198 = 1;
        v191 = v121;
        goto LABEL_65;
      }
      while (1)
      {
        if ((v191 & 0x8000000000000000) != 0)
          goto LABEL_152;
        if (v191 >= *(_QWORD *)(v431 + 16))
          goto LABEL_153;
        v196 = (uint64_t)&v427[*(int *)(v59 + 48)];
        sub_10002B1E8(v431+ ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80))+ *(_QWORD *)(v176 + 72) * v191, v196, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v197 = (uint64_t)v175 + *(int *)(v59 + 48);
        *v175 = v191;
        sub_10001F580(v196, v197, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v198 = 0;
        ++v191;
        v193 = (uint64_t)v422;
LABEL_65:
        v199 = v439;
        (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v439 + 56))(v175, v198, 1, v59);
        sub_10000F614((uint64_t)v175, (uint64_t)v70, &qword_100658968);
        if ((*(unsigned int (**)(Swift::Int *, uint64_t, uint64_t))(v199 + 48))(v70, 1, v59) == 1)
          break;
        v200 = *v70;
        v201 = sub_10001F580((uint64_t)v70 + *(int *)(v59 + 48), v192, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v202 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v201);
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v202);
        v203 = swift_getEnumCaseMultiPayload(v193, v429);
        if (v203 < 2)
        {
          sub_10001F544(v193, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
          v204 = v449;
          if (*(_QWORD *)(v449 + 16))
          {
            Hasher.init(_seed:)(&v444, *(_QWORD *)(v449 + 40));
            v205 = swift_bridgeObjectRetain(v204);
            TTRRemindersListViewModel.ItemID.hash(into:)(&v444, v205);
            v206 = Hasher._finalize()();
            v207 = -1 << *(_BYTE *)(v204 + 32);
            v208 = v206 & ~v207;
            if (((*(_QWORD *)(v204 + 56 + ((v208 >> 3) & 0xFFFFFFFFFFFFF8)) >> v208) & 1) != 0)
            {
              v209 = ~v207;
              v210 = *(_QWORD *)(v426 + 72);
              while (1)
              {
                v211 = v436;
                sub_10002B1E8(*(_QWORD *)(v204 + 48) + v210 * v208, v436, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                v212 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v211, v440);
                sub_10001F544(v211, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                if ((v212 & 1) != 0)
                  break;
                v208 = (v208 + 1) & v209;
                if (((*(_QWORD *)(v204 + 56 + ((v208 >> 3) & 0xFFFFFFFFFFFFF8)) >> v208) & 1) == 0)
                  goto LABEL_52;
              }
              swift_bridgeObjectRelease(v204);
              IndexSet.insert(_:)(v200);
              v213 = v385;
              v214 = v440;
              sub_1000F4754(v440, v385);
              sub_1000073A0(v213, (uint64_t *)&unk_1006463C0);
              sub_10001F544(v214, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
              v192 = v419;
              sub_10001F544(v419, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v59 = v438;
              v175 = (unint64_t *)v415;
              v70 = v418;
              v176 = v424;
              goto LABEL_54;
            }
LABEL_52:
            swift_bridgeObjectRelease(v204);
            v59 = v438;
            v175 = (unint64_t *)v415;
            v70 = v418;
            v176 = v424;
          }
          sub_10001F544(v440, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v192 = v419;
          sub_10001F544(v419, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_54:
          v121 = (uint64_t)v432;
          goto LABEL_55;
        }
        if (v203 == 2)
        {
          sub_10001F544(v440, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_10001F544(v192, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v194 = v193;
          v195 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem;
        }
        else
        {
          sub_10001F544(v440, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          v194 = v192;
          v195 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item;
        }
        sub_10001F544(v194, v195);
        v121 = (uint64_t)v432;
        if ((char *)v191 == v432)
          goto LABEL_64;
      }
      swift_bridgeObjectRelease(v431);
      sub_10002B1E8(v381, v386, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v215 = (uint64_t)v361;
      v216 = v382;
      (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v361, v408, v382);
      v217 = v362;
      v218 = v215 + *(int *)(v362 + 36);
      v219 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      dispatch thunk of Collection.startIndex.getter(v216, v219);
      v353 = v219;
      dispatch thunk of Collection.endIndex.getter(v216);
      v220 = v359;
      sub_10000735C(v215, v359, &qword_100658950);
      v221 = v384;
      v222 = v373;
      v223 = v218;
      v121 = v379;
      v352 = *(void (**)(char *, uint64_t, uint64_t))(v384 + 16);
      v352(v373, v223, v379);
      sub_1000073A0(v215, &qword_100658950);
      v224 = v360;
      v225 = *(void (**)(uint64_t, char *, uint64_t))(v221 + 32);
      v225(v220 + *(int *)(v360 + 36), v222, v121);
      v226 = v383;
      sub_10000F614(v220, v383, &qword_100658958);
      v227 = v226 + *(int *)(v224 + 36);
      v228 = v226 + *(int *)(v217 + 40);
      v229 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
      v348 = v228;
      v347 = v229;
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v227, v228, v121, v229) & 1) == 0)
        break;
      v70 = v418;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v221 + 56))(v369, 1, 1, v121);
LABEL_76:
      v173 = v411;
      swift_bridgeObjectRelease(v431);
      sub_1000073A0(v383, &qword_100658958);
      sub_10001F544(v386, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      (*(void (**)(char *, uint64_t))(v374 + 8))(v408, v382);
      sub_10001F544(v381, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F544(v404, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10001F544(v392, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v174 = v449;
      if (!*(_QWORD *)(v449 + 16) || !v173[2])
      {
        swift_bridgeObjectRelease(v449);
        swift_bridgeObjectRelease(v173);
        return v428;
      }
    }
    v430 = 0;
    v372 = 0;
    v345 = v425 + 1;
    v230 = __OFADD__(v425, 1);
    v346 = v230;
    v70 = v418;
    v342 = v225;
    v343 = v227;
    while (1)
    {
      v231 = v369;
      v352(v369, v227, v121);
      dispatch thunk of Collection.formIndex(after:)(v227, v382, v353);
      v232 = v384;
      v233 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v384 + 56);
      v233(v231, 0, 1, v121);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v232 + 48))(v231, 1, v121) == 1)
        goto LABEL_76;
      v234 = v380;
      v225((uint64_t)v380, v231, v121);
      v235 = IndexSet.subscript.getter(v234);
      if ((v235 & 0x8000000000000000) != 0)
        goto LABEL_158;
      v236 = v235;
      if (v235 >= *(_QWORD *)(v431 + 16))
        goto LABEL_159;
      v237 = (*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80);
      v394 = *(_QWORD *)(v176 + 72);
      v238 = sub_10002B1E8(v431 + v237 + v394 * v235, v403, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v239 = (uint64_t)v363;
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v238);
      v240 = swift_getEnumCaseMultiPayload(v239, v429);
      if (v240 >= 2)
        break;
      v341 = v233;
      v417 = (char *)v237;
      v241 = v239;
      v242 = v358;
      sub_10001F580(v241, v358, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F580(v242, v377, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v244 = *(_QWORD *)(v433 + 24);
      v243 = *(_QWORD *)(v433 + 32);
      v246 = swift_getObjectType(v244, v245);
      v247 = v435;
      sub_10002B1E8(v404, v435, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v248 = v437;
      v249 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v434;
      v434(v247, 0, 1, v437);
      v121 = v236 - v430;
      if (__OFSUB__(v236, v430))
        goto LABEL_160;
      v420 = (char *)v236;
      v250 = (uint64_t)v401;
      v249(v401, 1, 1, v248);
      sub_10029A148(v247, v250);
      *(_QWORD *)(v250 + *(int *)(v402 + 36)) = v121;
      v121 = v400;
      sub_10000F614(v250, v400, &qword_100647B00);
      v251 = *(void (**)(uint64_t, char *, uint64_t))(v243 + 32);
      v252 = v243;
      v253 = (uint64_t)v357;
      v410 = v244;
      v425 = (char *)v246;
      v254 = v246;
      v255 = v251;
      v399 = v252;
      ((void (*)(uint64_t, uint64_t))v251)(v121, v254);
      sub_1000073A0(v121, &qword_100647B00);
      v423 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v356 + 48);
      if (v423(v253, 1, v409) == 1)
      {
        swift_bridgeObjectRelease(v411);
        swift_bridgeObjectRelease(v428);
        swift_bridgeObjectRelease(v368);
        swift_bridgeObjectRelease(v431);
        swift_bridgeObjectRelease(v449);
        sub_1000073A0(v253, &qword_100658938);
        v325 = sub_10039B7B4();
        v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v325, 0, 0);
        *v326 = 0;
        swift_willThrow(v121);
        goto LABEL_139;
      }
      sub_10000F614(v253, v378, &qword_100654860);
      sub_10002B1E8(v392, v247, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v249((char *)v247, 0, 1, v248);
      if (v346)
        goto LABEL_161;
      v121 = (uint64_t)&v345[v372];
      if (__OFADD__(v345, v372))
        goto LABEL_162;
      v256 = (uint64_t)v401;
      v434((uint64_t)v401, 1, 1, v248);
      sub_10029A148(v435, v256);
      *(_QWORD *)(v256 + *(int *)(v402 + 36)) = v121;
      v257 = v400;
      sub_10000F614(v256, v400, &qword_100647B00);
      v258 = (uint64_t)v355;
      v255(v257, v425, v399);
      sub_1000073A0(v257, &qword_100647B00);
      if (v423(v258, 1, v409) == 1)
      {
        swift_bridgeObjectRelease(v411);
        swift_bridgeObjectRelease(v428);
        swift_bridgeObjectRelease(v368);
        swift_bridgeObjectRelease(v431);
        swift_bridgeObjectRelease(v449);
        sub_1000073A0(v258, &qword_100658938);
        v327 = sub_10039B7B4();
        v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v327, 0, 0);
        *v328 = 0;
        swift_willThrow(v121);
        sub_1000073A0(v378, &qword_100654860);
LABEL_139:
        sub_10001F544(v377, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        sub_10001F544(v403, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(char *, uint64_t))(v384 + 8))(v380, v379);
LABEL_140:
        sub_1000073A0(v383, &qword_100658958);
        goto LABEL_141;
      }
      v421 = v255;
      v259 = v370;
      sub_10000F614(v258, v370, &qword_100654860);
      v260 = v371 + *(int *)(v397 + 48);
      v261 = v371 + *(int *)(v397 + 64);
      sub_10002B1E8(v403, v371, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10000735C(v378, v260, &qword_100654860);
      sub_10000735C(v259, v261, &qword_100654860);
      v262 = v428;
      if ((swift_isUniquelyReferenced_nonNull_native(v428) & 1) == 0)
        v262 = (_QWORD *)sub_100456150(0, v262[2] + 1, 1, (unint64_t)v262);
      v263 = v430;
      v176 = v424;
      v264 = (uint64_t)v420;
      v266 = v262[2];
      v265 = v262[3];
      v121 = v266 + 1;
      if (v266 >= v265 >> 1)
        v262 = (_QWORD *)sub_100456150(v265 > 1, v266 + 1, 1, (unint64_t)v262);
      v262[2] = v121;
      v393 = (*(unsigned __int8 *)(v354 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v354 + 80);
      v388 = *(char **)(v354 + 72);
      sub_10000F614(v371, (uint64_t)v262 + v393 + (_QWORD)v388 * v266, &qword_100654870);
      v267 = __OFADD__(v372++, 1);
      if (v267)
        goto LABEL_163;
      v267 = __OFADD__(v263, 1);
      v268 = v263 + 1;
      if (v267)
        goto LABEL_164;
      v269 = v375;
      v270 = IndexSet.index(after:)(v380);
      v271 = v373;
      IndexSet.endIndex.getter(v270);
      v121 = static IndexSet.Index.== infix(_:_:)(v269, v271);
      v349 = *(void (**)(char *, uint64_t))(v384 + 8);
      v349(v271, v379);
      v272 = (uint64_t)v432;
      if ((v121 & 1) == 0)
        v272 = IndexSet.subscript.getter(v375);
      v273 = v398;
      if (v272 <= v264)
        goto LABEL_165;
      v121 = v264 + 1;
      if (v264 + 1 != v272)
      {
        v285 = v431;
        v286 = (uint64_t)&v417[v394 * v121 + v431];
        v287 = (char *)_swiftEmptyArrayStorage;
        v376 = v272;
        while (1)
        {
          if (v121 >= v272)
            goto LABEL_154;
          if ((unint64_t)v121 >= *(_QWORD *)(v285 + 16))
            goto LABEL_155;
          v416 = v286;
          v288 = v414;
          sub_10002B1E8(v286, v414, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v420 = (char *)*((_QWORD *)v287 + 2);
          v289 = v396;
          sub_10002B1E8(v288, v396, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v290 = v437;
          if (swift_getEnumCaseMultiPayload(v289, v437) != 2)
          {
            swift_bridgeObjectRelease(v411);
            swift_bridgeObjectRelease(v262);
            swift_bridgeObjectRelease(v368);
            swift_bridgeObjectRelease(v287);
            swift_bridgeObjectRelease(v431);
            swift_bridgeObjectRelease(v449);
            sub_10001F544(v289, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v311 = sub_10039B7B4();
            v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v311, 0, 0);
            *v312 = 1;
            swift_willThrow(v121);
            sub_10001F544(v414, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v313 = v379;
            v314 = v349;
            v349(v375, v379);
            sub_1000073A0(v370, &qword_100654860);
            sub_1000073A0(v378, &qword_100654860);
            sub_10001F544(v377, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            sub_10001F544(v403, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v314(v380, v313);
            sub_1000073A0(v383, &qword_100658958);
            sub_10001F544(v386, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            (*(void (**)(char *, uint64_t))(v374 + 8))(v408, v382);
            v315 = v381;
            goto LABEL_142;
          }
          v417 = v287;
          v428 = v262;
          sub_10001F580(v289, v273, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          v291 = v435;
          sub_10002B1E8(v404, v435, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v292 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v434;
          v434(v291, 0, 1, v290);
          v293 = v121 - v268;
          if (__OFSUB__(v121, v268))
            goto LABEL_156;
          v412 = (_QWORD *)v121;
          v430 = v268;
          v294 = (uint64_t)v401;
          v292(v401, 1, 1, v290);
          sub_10029A148(v291, v294);
          v295 = v402;
          *(_QWORD *)(v294 + *(int *)(v402 + 36)) = v293;
          v296 = v290;
          v297 = v400;
          sub_10000F614(v294, v400, &qword_100647B00);
          v298 = (uint64_t)v395;
          v299 = v399;
          v421(v297, v425, v399);
          sub_1000073A0(v297, &qword_100647B00);
          if (v423(v298, 1, v409) == 1)
            break;
          sub_10000F614(v298, v413, &qword_100654860);
          sub_10002B1E8(v403, v291, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v292((char *)v291, 0, 1, v296);
          v292((char *)v294, 1, 1, v296);
          sub_10029A148(v291, v294);
          *(_QWORD *)(v294 + *(int *)(v295 + 36)) = v420;
          sub_10000F614(v294, v297, &qword_100647B00);
          v300 = (uint64_t)v389;
          v421(v297, v425, v299);
          sub_1000073A0(v297, &qword_100647B00);
          if (v423(v300, 1, v409) == 1)
          {
            swift_bridgeObjectRelease(v411);
            swift_bridgeObjectRelease(v428);
            swift_bridgeObjectRelease(v368);
            swift_bridgeObjectRelease(v417);
            swift_bridgeObjectRelease(v431);
            swift_bridgeObjectRelease(v449);
            sub_1000073A0(v300, &qword_100658938);
            v321 = sub_10039B7B4();
            v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v321, 0, 0);
            *v322 = 0;
            swift_willThrow(v121);
            sub_1000073A0(v413, &qword_100654860);
            sub_10001F544(v398, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            sub_10001F544(v414, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v318 = v379;
            v319 = v349;
            v349(v375, v379);
            sub_1000073A0(v370, &qword_100654860);
            sub_1000073A0(v378, &qword_100654860);
            sub_10001F544(v377, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            v320 = v403;
            goto LABEL_132;
          }
          v301 = v406;
          sub_10000F614(v300, v406, &qword_100654860);
          v302 = v407 + *(int *)(v397 + 48);
          v303 = v407 + *(int *)(v397 + 64);
          sub_10002B1E8(v414, v407, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10000735C(v413, v302, &qword_100654860);
          sub_10000735C(v301, v303, &qword_100654860);
          v262 = v428;
          v305 = v428[2];
          v304 = v428[3];
          v287 = v417;
          if (v305 >= v304 >> 1)
            v262 = (_QWORD *)sub_100456150(v304 > 1, v305 + 1, 1, (unint64_t)v428);
          v273 = v398;
          v176 = v424;
          v306 = v430;
          v262[2] = v305 + 1;
          sub_10000F614(v407, (uint64_t)v262 + v393 + v305 * (_QWORD)v388, &qword_100654870);
          sub_10002B1E8(v273, v405, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          if ((swift_isUniquelyReferenced_nonNull_native(v287) & 1) == 0)
            v287 = (char *)sub_100456178(0, *((_QWORD *)v287 + 2) + 1, 1, (unint64_t)v287);
          v308 = *((_QWORD *)v287 + 2);
          v307 = *((_QWORD *)v287 + 3);
          if (v308 >= v307 >> 1)
            v287 = (char *)sub_100456178(v307 > 1, v308 + 1, 1, (unint64_t)v287);
          *((_QWORD *)v287 + 2) = v308 + 1;
          v121 = (uint64_t)&type metadata accessor for TTRRemindersListViewModel.ReminderID;
          sub_10001F580(v405, (uint64_t)&v287[((*(unsigned __int8 *)(v387 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v387 + 80))+ *(_QWORD *)(v387 + 72) * v308], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_1000073A0(v406, &qword_100654860);
          sub_1000073A0(v413, &qword_100654860);
          sub_10001F544(v273, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_10001F544(v414, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v309 = v306 + 1;
          if (__OFADD__(v306, 1))
            goto LABEL_157;
          v121 = (uint64_t)v412 + 1;
          v268 = v306 + 1;
          v286 = v416 + v394;
          v272 = v376;
          v285 = v431;
          if ((_QWORD *)v376 == (_QWORD *)((char *)v412 + 1))
          {
            v428 = v262;
            v268 = v309;
            v274 = v287;
            goto LABEL_103;
          }
        }
        swift_bridgeObjectRelease(v411);
        swift_bridgeObjectRelease(v428);
        swift_bridgeObjectRelease(v368);
        swift_bridgeObjectRelease(v417);
        swift_bridgeObjectRelease(v431);
        swift_bridgeObjectRelease(v449);
        sub_1000073A0(v298, &qword_100658938);
        v316 = sub_10039B7B4();
        v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v316, 0, 0);
        *v317 = 0;
        swift_willThrow(v121);
        sub_10001F544(v398, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        sub_10001F544(v414, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v318 = v379;
        v319 = v349;
        v349(v375, v379);
        sub_1000073A0(v370, &qword_100654860);
        sub_1000073A0(v378, &qword_100654860);
        sub_10001F544(v377, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        v320 = v403;
LABEL_132:
        sub_10001F544(v320, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v319(v380, v318);
        goto LABEL_140;
      }
      v428 = v262;
      v274 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      v275 = v367;
      v276 = v367 + v351[12];
      v277 = v367 + v351[16];
      v278 = v351[20];
      sub_10002B1E8(v392, v367, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10002B1E8(v386, v276, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10002B1E8(v377, v277, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      *(_QWORD *)(v275 + v278) = v274;
      if ((swift_isUniquelyReferenced_nonNull_native(v368) & 1) != 0)
      {
        v175 = (unint64_t *)v415;
        v70 = v418;
        v279 = (unint64_t)v368;
      }
      else
      {
        v279 = sub_1004561A0(0, v368[2] + 1, 1, (unint64_t)v368);
        v175 = (unint64_t *)v415;
        v70 = v418;
      }
      v225 = v342;
      v281 = *(_QWORD *)(v279 + 16);
      v280 = *(_QWORD *)(v279 + 24);
      v430 = v268;
      if (v281 >= v280 >> 1)
        v279 = sub_1004561A0(v280 > 1, v281 + 1, 1, v279);
      *(_QWORD *)(v279 + 16) = v281 + 1;
      v282 = (*(unsigned __int8 *)(v350 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v350 + 80);
      v368 = (_QWORD *)v279;
      sub_10000F614(v367, v279 + v282 + *(_QWORD *)(v350 + 72) * v281, &qword_10064A828);
      v121 = v379;
      v283 = v349;
      v349(v375, v379);
      sub_1000073A0(v370, &qword_100654860);
      sub_1000073A0(v378, &qword_100654860);
      sub_10001F544(v403, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v283(v380, v121);
      v284 = v386;
      sub_10001F544(v386, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_10001F580(v377, v284, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      v227 = v343;
      if ((dispatch thunk of static Equatable.== infix(_:_:)(v343, v348, v121, v347) & 1) != 0)
      {
        v341(v369, 1, 1, v121);
        goto LABEL_76;
      }
    }
    v147 = &v442;
    if (v240 != 2)
      goto LABEL_149;
    swift_bridgeObjectRelease(v411);
    swift_bridgeObjectRelease(v428);
    swift_bridgeObjectRelease(v368);
    swift_bridgeObjectRelease(v431);
    swift_bridgeObjectRelease(v449);
    sub_10001F544(v239, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_150:
    v338 = v384;
    v339 = sub_10039B7B4();
    v121 = swift_allocError(&type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError, v339, 0, 0);
    *v340 = 1;
    swift_willThrow(v121);
    sub_10001F544(v403, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, uint64_t))(v338 + 8))(v380, v379);
    sub_1000073A0(v383, &qword_100658958);
LABEL_141:
    sub_10001F544(v386, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    (*(void (**)(char *, uint64_t))(v374 + 8))(v408, v382);
    v315 = v381;
LABEL_142:
    sub_10001F544(v315, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
LABEL_143:
    sub_10001F544(v404, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F544(v392, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (qword_10063D708 != -1)
LABEL_166:
      swift_once(&qword_10063D708, sub_10037CC94);
    v329 = type metadata accessor for Logger(0);
    sub_100012DC4(v329, (uint64_t)qword_1006585A0);
    swift_errorRetain(v121);
    v330 = swift_errorRetain(v121);
    v331 = Logger.logObject.getter(v330);
    v332 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v331, v332))
    {
      v333 = (uint8_t *)swift_slowAlloc(12, -1);
      v334 = swift_slowAlloc(32, -1);
      v444 = v334;
      *(_DWORD *)v333 = 136315138;
      swift_getErrorValue(v121, v448, v447);
      v335 = Error.localizedDescription.getter(v447[1], v447[2]);
      v337 = v336;
      *(_QWORD *)&v441 = sub_100027E40(v335, v336, &v444);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v441, (char *)&v441 + 8, v333 + 4, v333 + 12);
      swift_bridgeObjectRelease(v337);
      swift_errorRelease(v121);
      swift_errorRelease(v121);
      _os_log_impl((void *)&_mh_execute_header, v331, v332, "Cannot compute move steps for indenting items {error: %s}", v333, 0xCu);
      swift_arrayDestroy(v334, 1, &type metadata for Any[8]);
      swift_slowDealloc(v334, -1, -1);
      swift_slowDealloc(v333, -1, -1);

      swift_errorRelease(v121);
    }
    else
    {
      swift_errorRelease(v121);
      swift_errorRelease(v121);
      swift_errorRelease(v121);

    }
    return 0;
  }
  else
  {
LABEL_128:
    swift_bridgeObjectRelease(v174);
    swift_bridgeObjectRelease(v173);
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_10039B604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  __chkstk_darwin(a1);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  return sub_100392EF8(a1, 0, (uint64_t)v16, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10039B6BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039B6CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039B6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10037DFCC(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10039B710(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_10039B748@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_10039B774()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

BOOL sub_10039B7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100385514(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_10039B7B4()
{
  unint64_t result;

  result = qword_100658978;
  if (!qword_100658978)
  {
    result = swift_getWitnessTable(&unk_10053211C, &type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError);
    atomic_store(result, (unint64_t *)&qword_100658978);
  }
  return result;
}

uint64_t type metadata accessor for TTRRemindersListReminderCreationLocation(uint64_t a1)
{
  return sub_100007328(a1, qword_100658A20, (uint64_t)&nominal type descriptor for TTRRemindersListReminderCreationLocation);
}

uint64_t type metadata accessor for TTRRemindersListUncommittedReminder(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100658AB0, (uint64_t)&nominal type descriptor for TTRRemindersListUncommittedReminder);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListTreeViewModel.IndentationMoveCalculationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10039B86C + 4 * byte_1005305FC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10039B8A0 + 4 * byte_1005305F7[v4]))();
}

uint64_t sub_10039B8A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039B8A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10039B8B0);
  return result;
}

uint64_t sub_10039B8BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10039B8C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10039B8C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039B8D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListTreeViewModel.IndentationMoveCalculationError()
{
  return &type metadata for TTRRemindersListTreeViewModel.IndentationMoveCalculationError;
}

uint64_t sub_10039B8EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_10039B94C + 4 * byte_100530601[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_10039EA30(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload(v2, v3))
        {
          case 0u:
            v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(v2, v10))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_37;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_36;
              default:
                goto LABEL_38;
            }
            goto LABEL_38;
          case 1u:
            v25 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            switch(swift_getEnumCaseMultiPayload(v2, v25))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_37;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_36;
              default:
                goto LABEL_38;
            }
            goto LABEL_38;
          case 2u:

            v2 = (_QWORD *)((char *)v2
                          + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
            v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v2, 1, v31))
            {
              switch(swift_getEnumCaseMultiPayload(v2, v31))
              {
                case 1u:
                case 8u:
                case 9u:
                  goto LABEL_48;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  goto LABEL_5;
                default:
                  return;
              }
            }
            break;
          case 3u:

            v2 = (_QWORD *)((char *)v2
                          + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
            v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v2, 1, v32))
            {
              switch(swift_getEnumCaseMultiPayload(v2, v32))
              {
                case 1u:
                case 8u:
                case 9u:
                  goto LABEL_48;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  goto LABEL_5;
                default:
                  return;
              }
            }
            break;
          case 4u:

            v2 = (_QWORD *)((char *)v2
                          + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
            v33 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v2, 1, v33))
            {
              switch(swift_getEnumCaseMultiPayload(v2, v33))
              {
                case 1u:
                case 8u:
                case 9u:
                  goto LABEL_48;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  goto LABEL_5;
                default:
                  return;
              }
            }
            break;
          case 5u:
            goto LABEL_16;
          case 6u:
            goto LABEL_48;
          case 7u:
            goto LABEL_12;
          case 8u:
            goto LABEL_17;
          case 9u:
            goto LABEL_19;
          default:
            return;
        }
      }
      break;
    case 1u:
      v4 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v2, v4))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_48;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_5;
        default:
          return;
      }
    case 2u:
      v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v2, v6))
      {
        case 0u:
          v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v2, v7))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              goto LABEL_38;
          }
          goto LABEL_38;
        case 1u:
          v17 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v2, v17))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              goto LABEL_38;
          }
          goto LABEL_38;
        case 2u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v18 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v2, 1, v18))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v18))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          break;
        case 3u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v2, 1, v19))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v19))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          break;
        case 4u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v2, 1, v20))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v20))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          break;
        case 5u:
          goto LABEL_16;
        case 6u:
          goto LABEL_48;
        case 7u:
          goto LABEL_12;
        case 8u:
          goto LABEL_17;
        case 9u:
          goto LABEL_19;
        default:
          return;
      }
      break;
    case 3u:
      v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v2, v8))
      {
        case 0u:
          v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v2, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_37;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_36;
            default:
              goto LABEL_38;
          }
          goto LABEL_38;
        case 1u:
          v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v2, v21))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_37:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_36:
              v26 = type metadata accessor for Date(0);
              (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v2, v26);
              break;
            default:
              break;
          }
LABEL_38:
          v27 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v28 = (char *)v2 + *(int *)(v27 + 20);
          v29 = *((_QWORD *)v28 + 1);
          if (v29)
          {
            swift_bridgeObjectRelease(v29);
            sub_10003E2EC(*((void **)v28 + 2), *((_QWORD *)v28 + 3), *((_QWORD *)v28 + 4), *((_QWORD *)v28 + 5), *((_QWORD *)v28 + 6), *((_QWORD *)v28 + 7), v28[64]);
            v30 = v28[120];
            if (v30 != 255)
              sub_10002B328(*((void **)v28 + 9), *((_QWORD *)v28 + 10), *((_QWORD *)v28 + 11), *((_QWORD *)v28 + 12), *((_QWORD *)v28 + 13), *((_QWORD *)v28 + 14), v30 & 1);
          }
          v15 = *(id *)((char *)v2 + *(int *)(v27 + 44));
          goto LABEL_49;
        case 2u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v2, 1, v22))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v22))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          return;
        case 3u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v2, 1, v23))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v23))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          return;
        case 4u:

          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v24 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v2, 1, v24))
          {
            switch(swift_getEnumCaseMultiPayload(v2, v24))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_48;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_5;
              default:
                return;
            }
          }
          return;
        case 5u:
          goto LABEL_16;
        case 6u:
LABEL_48:
          v15 = (id)*v2;
          goto LABEL_49;
        case 7u:
LABEL_12:
          v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v2, 1, v11))
          {
            swift_bridgeObjectRelease(*v2);
            v12 = (char *)v2 + *(int *)(v11 + 20);
            v13 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          }
          v2 = (_QWORD *)((char *)v2
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
          v14 = v2[1];
          if (!v14)
            return;
          swift_bridgeObjectRelease(v14);
LABEL_16:
          v15 = (id)v2[2];
LABEL_49:

          break;
        case 8u:
LABEL_17:
          v16 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16))
            return;
LABEL_5:
          v5 = type metadata accessor for Date(0);
LABEL_20:
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
          break;
        case 9u:
LABEL_19:
          v2 = (_QWORD *)((char *)v2 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v5 = type metadata accessor for AnyTip(0);
          goto LABEL_20;
        default:
          return;
      }
      break;
    default:
      return;
  }
}

void sub_10039F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_10039F294 + 4 * byte_100530884[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

void **sub_10039F294()
{
  void **v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(void **, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(void **, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(void **, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t, __n128);
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  void **v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  id v133;
  void *v134;
  id v135;
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  void *v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  id v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  id v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned __int8 v190;
  uint64_t v191;
  unsigned __int8 v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4))
  {
    v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(v1, v4))
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v5;
        v203 = v3;
        v206 = v2;
        switch(swift_getEnumCaseMultiPayload(v1, v7))
        {
          case 1u:
            v8 = *v1;
            *v0 = *v1;
            v9 = v8;
            v10 = v0;
            v11 = v7;
            v12 = 1;
            goto LABEL_43;
          case 2u:
            v94 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v0, v1, v94);
            v10 = v0;
            v11 = v7;
            v12 = 2;
            goto LABEL_43;
          case 3u:
            v95 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v0, v1, v95);
            v10 = v0;
            v11 = v7;
            v12 = 3;
            goto LABEL_43;
          case 4u:
            v96 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v0, v1, v96);
            v10 = v0;
            v11 = v7;
            v12 = 4;
            goto LABEL_43;
          case 5u:
            v97 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v0, v1, v97);
            v10 = v0;
            v11 = v7;
            v12 = 5;
            goto LABEL_43;
          case 6u:
            v98 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v0, v1, v98);
            v10 = v0;
            v11 = v7;
            v12 = 6;
            goto LABEL_43;
          case 8u:
            v99 = *v1;
            *v0 = *v1;
            v100 = v99;
            v10 = v0;
            v11 = v7;
            v12 = 8;
            goto LABEL_43;
          case 9u:
            v101 = *v1;
            *v0 = *v1;
            v102 = v101;
            v10 = v0;
            v11 = v7;
            v12 = 9;
LABEL_43:
            swift_storeEnumTagMultiPayload(v10, v11, v12);
            break;
          default:
            memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        v103 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v104 = v103[5];
        v105 = (char *)v0 + v104;
        v106 = (char *)v1 + v104;
        v107 = *(uint64_t *)((char *)v1 + v104 + 8);
        if (v107)
        {
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = v107;
          v108 = (void *)*((_QWORD *)v106 + 2);
          v109 = *((_QWORD *)v106 + 3);
          v111 = *((_QWORD *)v106 + 4);
          v110 = *((_QWORD *)v106 + 5);
          v195 = *((_QWORD *)v106 + 6);
          v186 = *((_QWORD *)v106 + 7);
          v190 = v106[64];
          swift_bridgeObjectRetain(v107);
          sub_10003E1F0(v108, v109, v111, v110, v195, v186, v190);
          *((_QWORD *)v105 + 2) = v108;
          *((_QWORD *)v105 + 3) = v109;
          *((_QWORD *)v105 + 4) = v111;
          *((_QWORD *)v105 + 5) = v110;
          *((_QWORD *)v105 + 6) = v195;
          *((_QWORD *)v105 + 7) = v186;
          v105[64] = v190;
          *(_DWORD *)(v105 + 65) = *(_DWORD *)(v106 + 65);
          v112 = v106[120];
          if (v112 == 255)
          {
            v113 = *(_OWORD *)(v106 + 88);
            *(_OWORD *)(v105 + 72) = *(_OWORD *)(v106 + 72);
            *(_OWORD *)(v105 + 88) = v113;
            *(_OWORD *)(v105 + 104) = *(_OWORD *)(v106 + 104);
            v105[120] = v106[120];
          }
          else
          {
            v196 = v112 & 1;
            v117 = (void *)*((_QWORD *)v106 + 9);
            v118 = *((_QWORD *)v106 + 10);
            v120 = *((_QWORD *)v106 + 11);
            v119 = *((_QWORD *)v106 + 12);
            v187 = *((_QWORD *)v106 + 14);
            v191 = *((_QWORD *)v106 + 13);
            sub_10002B764(v117, v118, v120, v119, v191, v187, v112 & 1);
            *((_QWORD *)v105 + 9) = v117;
            *((_QWORD *)v105 + 10) = v118;
            *((_QWORD *)v105 + 11) = v120;
            *((_QWORD *)v105 + 12) = v119;
            *((_QWORD *)v105 + 13) = v191;
            *((_QWORD *)v105 + 14) = v187;
            v105[120] = v196;
          }
          v3 = v203;
          v2 = v206;
          v105[121] = v106[121];
        }
        else
        {
          v114 = *((_OWORD *)v106 + 5);
          *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
          *((_OWORD *)v105 + 5) = v114;
          *((_OWORD *)v105 + 6) = *((_OWORD *)v106 + 6);
          *(_OWORD *)(v105 + 106) = *(_OWORD *)(v106 + 106);
          v115 = *((_OWORD *)v106 + 1);
          *(_OWORD *)v105 = *(_OWORD *)v106;
          *((_OWORD *)v105 + 1) = v115;
          v116 = *((_OWORD *)v106 + 3);
          *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
          *((_OWORD *)v105 + 3) = v116;
          v2 = v2;
        }
        *((_BYTE *)v0 + v103[6]) = *((_BYTE *)v1 + v103[6]);
        *((_BYTE *)v0 + v103[7]) = *((_BYTE *)v1 + v103[7]);
        *((_BYTE *)v0 + v103[8]) = *((_BYTE *)v1 + v103[8]);
        *((_BYTE *)v0 + v103[9]) = *((_BYTE *)v1 + v103[9]);
        *((_BYTE *)v0 + v103[10]) = *((_BYTE *)v1 + v103[10]);
        v121 = v103[11];
        v122 = *(void **)((char *)v1 + v121);
        *(void **)((char *)v0 + v121) = v122;
        v123 = v122;
        v124 = v0;
        v125 = v4;
        v126 = 0;
        goto LABEL_67;
      case 1u:
        v13 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v199 = v5;
        v204 = v3;
        v207 = v2;
        switch(swift_getEnumCaseMultiPayload(v1, v13))
        {
          case 1u:
            v14 = *v1;
            *v0 = *v1;
            v15 = v14;
            v16 = v0;
            v17 = v13;
            v18 = 1;
            goto LABEL_59;
          case 2u:
            v127 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v0, v1, v127);
            v16 = v0;
            v17 = v13;
            v18 = 2;
            goto LABEL_59;
          case 3u:
            v128 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v0, v1, v128);
            v16 = v0;
            v17 = v13;
            v18 = 3;
            goto LABEL_59;
          case 4u:
            v129 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v0, v1, v129);
            v16 = v0;
            v17 = v13;
            v18 = 4;
            goto LABEL_59;
          case 5u:
            v130 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v0, v1, v130);
            v16 = v0;
            v17 = v13;
            v18 = 5;
            goto LABEL_59;
          case 6u:
            v131 = type metadata accessor for Date(0);
            (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v0, v1, v131);
            v16 = v0;
            v17 = v13;
            v18 = 6;
            goto LABEL_59;
          case 8u:
            v132 = *v1;
            *v0 = *v1;
            v133 = v132;
            v16 = v0;
            v17 = v13;
            v18 = 8;
            goto LABEL_59;
          case 9u:
            v134 = *v1;
            *v0 = *v1;
            v135 = v134;
            v16 = v0;
            v17 = v13;
            v18 = 9;
LABEL_59:
            swift_storeEnumTagMultiPayload(v16, v17, v18);
            break;
          default:
            memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        v136 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v137 = v136[5];
        v138 = (char *)v0 + v137;
        v139 = (char *)v1 + v137;
        v140 = *(uint64_t *)((char *)v1 + v137 + 8);
        if (v140)
        {
          *(_QWORD *)v138 = *(_QWORD *)v139;
          *((_QWORD *)v138 + 1) = v140;
          v141 = (void *)*((_QWORD *)v139 + 2);
          v142 = *((_QWORD *)v139 + 3);
          v144 = *((_QWORD *)v139 + 4);
          v143 = *((_QWORD *)v139 + 5);
          v197 = *((_QWORD *)v139 + 6);
          v188 = *((_QWORD *)v139 + 7);
          v192 = v139[64];
          swift_bridgeObjectRetain(v140);
          sub_10003E1F0(v141, v142, v144, v143, v197, v188, v192);
          *((_QWORD *)v138 + 2) = v141;
          *((_QWORD *)v138 + 3) = v142;
          *((_QWORD *)v138 + 4) = v144;
          *((_QWORD *)v138 + 5) = v143;
          *((_QWORD *)v138 + 6) = v197;
          *((_QWORD *)v138 + 7) = v188;
          v138[64] = v192;
          *(_DWORD *)(v138 + 65) = *(_DWORD *)(v139 + 65);
          v145 = v139[120];
          if (v145 == 255)
          {
            v146 = *(_OWORD *)(v139 + 88);
            *(_OWORD *)(v138 + 72) = *(_OWORD *)(v139 + 72);
            *(_OWORD *)(v138 + 88) = v146;
            *(_OWORD *)(v138 + 104) = *(_OWORD *)(v139 + 104);
            v138[120] = v139[120];
          }
          else
          {
            v198 = v145 & 1;
            v150 = (void *)*((_QWORD *)v139 + 9);
            v151 = *((_QWORD *)v139 + 10);
            v153 = *((_QWORD *)v139 + 11);
            v152 = *((_QWORD *)v139 + 12);
            v189 = *((_QWORD *)v139 + 14);
            v193 = *((_QWORD *)v139 + 13);
            sub_10002B764(v150, v151, v153, v152, v193, v189, v145 & 1);
            *((_QWORD *)v138 + 9) = v150;
            *((_QWORD *)v138 + 10) = v151;
            *((_QWORD *)v138 + 11) = v153;
            *((_QWORD *)v138 + 12) = v152;
            *((_QWORD *)v138 + 13) = v193;
            *((_QWORD *)v138 + 14) = v189;
            v138[120] = v198;
          }
          v3 = v204;
          v2 = v207;
          v138[121] = v139[121];
        }
        else
        {
          v147 = *((_OWORD *)v139 + 5);
          *((_OWORD *)v138 + 4) = *((_OWORD *)v139 + 4);
          *((_OWORD *)v138 + 5) = v147;
          *((_OWORD *)v138 + 6) = *((_OWORD *)v139 + 6);
          *(_OWORD *)(v138 + 106) = *(_OWORD *)(v139 + 106);
          v148 = *((_OWORD *)v139 + 1);
          *(_OWORD *)v138 = *(_OWORD *)v139;
          *((_OWORD *)v138 + 1) = v148;
          v149 = *((_OWORD *)v139 + 3);
          *((_OWORD *)v138 + 2) = *((_OWORD *)v139 + 2);
          *((_OWORD *)v138 + 3) = v149;
          v2 = v2;
        }
        *((_BYTE *)v0 + v136[6]) = *((_BYTE *)v1 + v136[6]);
        *((_BYTE *)v0 + v136[7]) = *((_BYTE *)v1 + v136[7]);
        *((_BYTE *)v0 + v136[8]) = *((_BYTE *)v1 + v136[8]);
        *((_BYTE *)v0 + v136[9]) = *((_BYTE *)v1 + v136[9]);
        *((_BYTE *)v0 + v136[10]) = *((_BYTE *)v1 + v136[10]);
        v154 = v136[11];
        v155 = *(void **)((char *)v1 + v154);
        *(void **)((char *)v0 + v154) = v155;
        v156 = v155;
        v124 = v0;
        v125 = v4;
        v126 = 1;
LABEL_67:
        swift_storeEnumTagMultiPayload(v124, v125, v126);
        v5 = v199;
        break;
      case 2u:
        v200 = v5;
        v208 = v2;
        v19 = *v1;
        *v0 = *v1;
        v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v21 = (void **)((char *)v0 + v20);
        v22 = (void **)((char *)v1 + v20);
        v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v24 = *(_QWORD *)(v23 - 8);
        v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48);
        v26 = v19;
        if (v25(v22, 1, v23))
        {
          v27 = sub_10002A750(&qword_100644980);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          v2 = v208;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v22, v23))
          {
            case 1u:
              v63 = *v22;
              *v21 = *v22;
              v64 = v63;
              v65 = v21;
              v66 = v23;
              v67 = 1;
              goto LABEL_76;
            case 2u:
              v157 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v21, v22, v157);
              v65 = v21;
              v66 = v23;
              v67 = 2;
              goto LABEL_76;
            case 3u:
              v158 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v21, v22, v158);
              v65 = v21;
              v66 = v23;
              v67 = 3;
              goto LABEL_76;
            case 4u:
              v159 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v21, v22, v159);
              v65 = v21;
              v66 = v23;
              v67 = 4;
              goto LABEL_76;
            case 5u:
              v160 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v21, v22, v160);
              v65 = v21;
              v66 = v23;
              v67 = 5;
              goto LABEL_76;
            case 6u:
              v161 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v21, v22, v161);
              v65 = v21;
              v66 = v23;
              v67 = 6;
              goto LABEL_76;
            case 8u:
              v162 = *v22;
              *v21 = *v22;
              v163 = v162;
              v65 = v21;
              v66 = v23;
              v67 = 8;
              goto LABEL_76;
            case 9u:
              v164 = *v22;
              *v21 = *v22;
              v165 = v164;
              v65 = v21;
              v66 = v23;
              v67 = 9;
LABEL_76:
              swift_storeEnumTagMultiPayload(v65, v66, v67);
              break;
            default:
              memcpy(v21, v22, *(_QWORD *)(v24 + 64));
              break;
          }
          v2 = v208;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        v5 = v200;
        v48 = v0;
        v49 = v4;
        v50 = 2;
        goto LABEL_101;
      case 3u:
        v201 = v5;
        v209 = v2;
        v28 = *v1;
        *v0 = *v1;
        v29 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v30 = (void **)((char *)v0 + v29);
        v31 = (void **)((char *)v1 + v29);
        v32 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48);
        v35 = v28;
        if (v34(v31, 1, v32))
        {
          v36 = sub_10002A750(&qword_100644980);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          v2 = v209;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v31, v32))
          {
            case 1u:
              v68 = *v31;
              *v30 = *v31;
              v69 = v68;
              v70 = v30;
              v71 = v32;
              v72 = 1;
              goto LABEL_87;
            case 2u:
              v166 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v30, v31, v166);
              v70 = v30;
              v71 = v32;
              v72 = 2;
              goto LABEL_87;
            case 3u:
              v167 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v30, v31, v167);
              v70 = v30;
              v71 = v32;
              v72 = 3;
              goto LABEL_87;
            case 4u:
              v168 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v30, v31, v168);
              v70 = v30;
              v71 = v32;
              v72 = 4;
              goto LABEL_87;
            case 5u:
              v169 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v30, v31, v169);
              v70 = v30;
              v71 = v32;
              v72 = 5;
              goto LABEL_87;
            case 6u:
              v170 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v30, v31, v170);
              v70 = v30;
              v71 = v32;
              v72 = 6;
              goto LABEL_87;
            case 8u:
              v171 = *v31;
              *v30 = *v31;
              v172 = v171;
              v70 = v30;
              v71 = v32;
              v72 = 8;
              goto LABEL_87;
            case 9u:
              v173 = *v31;
              *v30 = *v31;
              v174 = v173;
              v70 = v30;
              v71 = v32;
              v72 = 9;
LABEL_87:
              swift_storeEnumTagMultiPayload(v70, v71, v72);
              break;
            default:
              memcpy(v30, v31, *(_QWORD *)(v33 + 64));
              break;
          }
          v2 = v209;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        v5 = v201;
        v48 = v0;
        v49 = v4;
        v50 = 3;
        goto LABEL_101;
      case 4u:
        v202 = v5;
        v210 = v2;
        v37 = *v1;
        *v0 = *v1;
        v38 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v39 = (void **)((char *)v0 + v38);
        v40 = (void **)((char *)v1 + v38);
        v41 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v42 + 48);
        v44 = v37;
        if (v43(v40, 1, v41))
        {
          v45 = sub_10002A750(&qword_100644980);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          v2 = v210;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload(v40, v41))
          {
            case 1u:
              v73 = *v40;
              *v39 = *v40;
              v74 = v73;
              v75 = v39;
              v76 = v41;
              v77 = 1;
              goto LABEL_98;
            case 2u:
              v175 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v39, v40, v175);
              v75 = v39;
              v76 = v41;
              v77 = 2;
              goto LABEL_98;
            case 3u:
              v176 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v39, v40, v176);
              v75 = v39;
              v76 = v41;
              v77 = 3;
              goto LABEL_98;
            case 4u:
              v177 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v39, v40, v177);
              v75 = v39;
              v76 = v41;
              v77 = 4;
              goto LABEL_98;
            case 5u:
              v178 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v39, v40, v178);
              v75 = v39;
              v76 = v41;
              v77 = 5;
              goto LABEL_98;
            case 6u:
              v179 = type metadata accessor for Date(0);
              (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v39, v40, v179);
              v75 = v39;
              v76 = v41;
              v77 = 6;
              goto LABEL_98;
            case 8u:
              v180 = *v40;
              *v39 = *v40;
              v181 = v180;
              v75 = v39;
              v76 = v41;
              v77 = 8;
              goto LABEL_98;
            case 9u:
              v182 = *v40;
              *v39 = *v40;
              v183 = v182;
              v75 = v39;
              v76 = v41;
              v77 = 9;
LABEL_98:
              swift_storeEnumTagMultiPayload(v75, v76, v77);
              break;
            default:
              memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              break;
          }
          v2 = v210;
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v5 = v202;
        v48 = v0;
        v49 = v4;
        v50 = 4;
        goto LABEL_101;
      case 5u:
        *v0 = *v1;
        *((_BYTE *)v0 + 8) = *((_BYTE *)v1 + 8);
        *(_WORD *)((char *)v0 + 9) = *(_WORD *)((char *)v1 + 9);
        v46 = v1[2];
        v0[2] = v46;
        v47 = v46;
        v48 = v0;
        v49 = v4;
        v50 = 5;
        goto LABEL_101;
      case 6u:
        v58 = *v1;
        *v0 = *v1;
        v59 = v58;
        v48 = v0;
        v49 = v4;
        v50 = 6;
        goto LABEL_101;
      case 7u:
        v51 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48))(v1, 1, v51))
        {
          v53 = sub_10002A750(&qword_100644600);
          memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v78 = *v1;
          *v0 = *v1;
          v79 = *(int *)(v51 + 20);
          v194 = (char *)v0 + v79;
          v211 = v2;
          v80 = (char *)v1 + v79;
          v205 = v3;
          v81 = type metadata accessor for REMHashtagLabelSpecifier(0);
          v82 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v81 - 8) + 16);
          v83 = swift_bridgeObjectRetain(v78);
          v84 = v80;
          v2 = v211;
          v85 = v81;
          v3 = v205;
          v82(v194, v84, v85, v83);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v52 + 56))(v0, 0, 1, v51);
        }
        v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v87 = (void **)((char *)v0 + v86);
        v88 = (void **)((char *)v1 + v86);
        v89 = v88[1];
        if (v89)
        {
          *v87 = *v88;
          v87[1] = v89;
          v90 = (void *)v88[2];
          v87[2] = v90;
          swift_bridgeObjectRetain(v89);
          v91 = v90;
        }
        else
        {
          *(_OWORD *)v87 = *(_OWORD *)v88;
          v87[2] = v88[2];
        }
        v48 = v0;
        v49 = v4;
        v50 = 7;
        goto LABEL_101;
      case 8u:
        v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v61 = *(_QWORD *)(v60 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v61 + 48))(v1, 1, v60))
        {
          v62 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v0, v1, v92);
          *((_BYTE *)v0 + *(int *)(v60 + 20)) = *((_BYTE *)v1 + *(int *)(v60 + 20));
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v61 + 56))(v0, 0, 1, v60);
        }
        v93 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(void **)((char *)v0 + *(int *)(v93 + 20)) = *(void **)((char *)v1 + *(int *)(v93 + 20));
        v48 = v0;
        v49 = v4;
        v50 = 8;
        goto LABEL_101;
      case 9u:
        *(_BYTE *)v0 = *(_BYTE *)v1;
        v54 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v55 = (char *)v0 + v54;
        v56 = (char *)v1 + v54;
        v57 = type metadata accessor for AnyTip(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        v48 = v0;
        v49 = v4;
        v50 = 9;
LABEL_101:
        swift_storeEnumTagMultiPayload(v48, v49, v50);
        break;
      default:
        memcpy(v0, v1, *(_QWORD *)(v5 + 64));
        break;
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v5 + 56))(v0, 0, 1, v4);
  }
  v184 = sub_10002A750(&qword_1006588F8);
  *(void **)((char *)v0 + *(int *)(v184 + 48)) = *(void **)((char *)v1 + *(int *)(v184 + 48));
  swift_storeEnumTagMultiPayload(v0, v3, v2);
  return v0;
}

