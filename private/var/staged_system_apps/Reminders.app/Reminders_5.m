uint64_t sub_100294C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v11 = *(_QWORD *)(v9 + 8);
  ObjectType = swift_getObjectType(v10, v12);
  v14 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v14, v16 + *(_QWORD *)(v5 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100520250;
  v18 = v17 + v16;
  sub_10002B1E8((uint64_t)v7, v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 208);
  v20 = v10;
  v19(v17, ObjectType, v11);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, *(_QWORD *)(v17 + 16), v4);
  swift_deallocClassInstance(v17, 32, 7);

  return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100294E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v11 = *(_QWORD *)(v9 + 8);
  ObjectType = swift_getObjectType(v10, v12);
  v14 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v14, v16 + *(_QWORD *)(v5 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100520250;
  v18 = v17 + v16;
  sub_10002B1E8((uint64_t)v7, v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 200);
  v20 = v10;
  v19(v17, ObjectType, v11);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, *(_QWORD *)(v17 + 16), v4);
  swift_deallocClassInstance(v17, 32, 7);

  return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_100295194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  id argument;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), a2);
  sub_10015A92C(0, ObjectType, v3);
  LODWORD(v3) = UIAccessibilityLayoutChangedNotification;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  v8 = swift_getObjectType(v5, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 64);
  v10 = v5;
  argument = (id)v9(v8, v6);

  UIAccessibilityPostNotification(v3, argument);
}

void sub_100295254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 64);
  v8 = v4;
  v19 = (id)v7(ObjectType, v5);
  v10 = v9;

  v11 = v19;
  if (v19)
    goto LABEL_3;
  v12 = (void *)*v3;
  v13 = v3[1];
  v14 = swift_getObjectType(*v3, 0);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 72);
  v16 = v12;
  v20 = (id)v15(v14, v13);
  v10 = v17;

  v11 = v20;
  if (v20)
  {
LABEL_3:
    v21 = v11;
    v18 = swift_getObjectType(v11, v11);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v10 + 8) + 16))(0, v18);

  }
}

void sub_100295524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v11 = v9[1];
  ObjectType = swift_getObjectType(v10, v12);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 64);
  v15 = v10;
  v16 = (void *)v14(ObjectType, v11);
  v18 = v17;

  if (v16)
    goto LABEL_3;
  v20 = (void *)*v9;
  v21 = v9[1];
  v22 = swift_getObjectType(*v9, v19);
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 72);
  v24 = v20;
  v16 = (void *)v23(v22, v21);
  v18 = v25;

  if (v16)
  {
LABEL_3:
    sub_100293C70((uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {

      sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
    }
    else
    {
      sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v27 = swift_getObjectType(v16, v26);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v27, v18);
      if (v28)
      {
        v29 = (void *)v28;
        v30 = v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter;
        v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
        v32 = *(_QWORD *)(v30 + 8);
        v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v27, v18);
        v35 = v33;
        if (v33)
        {
          v36 = objc_msgSend(v33, "string");

          v35 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v38 = v37;

        }
        else
        {
          v38 = 0;
        }
        v39 = swift_getObjectType(v31, v34);
        (*(void (**)(char *, void *, uint64_t, void *, uint64_t, uint64_t))(v32 + 96))(v8, v35, v38, v29, v39, v32);

        swift_bridgeObjectRelease(v38);
        sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

      }
    }
  }
}

uint64_t sub_1002957A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v7 = v5[1];
  ObjectType = swift_getObjectType(v6, v8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 64);
  v11 = v6;
  v12 = (void *)v10(ObjectType, v7);
  v14 = v13;

  if (v12)
    goto LABEL_3;
  v16 = (void *)*v5;
  v17 = v5[1];
  v18 = swift_getObjectType(*v5, v15);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 72);
  v20 = v16;
  v12 = (void *)v19(v18, v17);
  v14 = v21;

  if (v12)
  {
LABEL_3:
    v22 = swift_getObjectType(v12, v15);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v14 + 16))(&v31, v22, v14);

    if (*((_QWORD *)&v32 + 1))
    {
      sub_10002E37C(&v31, (uint64_t)v34);
      v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      v25 = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v24);
      v26 = v35;
      v27 = v36;
      sub_10001413C(v34, v35);
      LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 40))(v26, v27);
      v28 = v35;
      v29 = v36;
      sub_10001413C(v34, v35);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      (*(void (**)(BOOL, char *, uint64_t, uint64_t))(v23 + 40))((v26 & 1) == 0, v4, v25, v23);
      sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return sub_100027F10(v34);
    }
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  return sub_1000073A0((uint64_t)&v31, (uint64_t *)&unk_1006547B0);
}

uint64_t sub_100295994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v10);
  v12 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v12, v14 + *(_QWORD *)(v5 + 72), v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v7, v15 + v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 664))(v15, ObjectType, v9);
  swift_bridgeObjectRelease(v15);
  return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100295B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v10);
  v12 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v12, v14 + *(_QWORD *)(v5 + 72), v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100520250;
  sub_10002B1E8((uint64_t)v7, v15 + v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 672))(v15, ObjectType, v9);
  swift_bridgeObjectRelease(v15);
  return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100295CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;
  uint64_t v13;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v10);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 72))(v7, ObjectType, v9);
  if (v12 != 2)
    (*(void (**)(_QWORD, char *, uint64_t, uint64_t))(v9 + 88))(v12 & 1, v7, ObjectType, v9);
  return sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100295F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100293C70((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter), v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 624))(v10, a2, ObjectType, v12);
  return sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002960D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  _OWORD v10[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v10);
    v8 = (id)swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v8 = a1;
  }
  sub_100295F84((uint64_t)v8, a4);

  return sub_1000073A0((uint64_t)v10, &qword_100640E50);
}

uint64_t sub_1002963F0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  if (objc_msgSend(v0, "isEditing"))
  {
    v4 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType(v5, v3);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 152);
    v9 = v5;
    v10 = (_QWORD *)v8(1, ObjectType, v6);

  }
  else
  {
    v10 = _swiftEmptyArrayStorage;
  }
  v11 = swift_getObjectType(v1, v3);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 904))(v10, v11, v2);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1002964B8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v7;
  id v8;
  _OWORD v10[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v10);
    v8 = (id)swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v8 = a1;
  }
  a4(v8);

  return sub_1000073A0((uint64_t)v10, &qword_100640E50);
}

void sub_100296534()
{
  qword_1006538C8 = 0x4046000000000000;
}

void sub_100296544()
{
  qword_1006538D0 = 0x4059000000000000;
}

uint64_t sub_100296554(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  double v54;
  double v55;
  void *v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  id v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];

  v2 = v1;
  v67 = type metadata accessor for TTRTemplatePublicLinkData(0);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v63 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10002A750(&qword_100653A18);
  __chkstk_darwin(v64);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100653A00);
  v8 = __chkstk_darwin(v7);
  v66 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - v10;
  v12 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  v13 = __chkstk_darwin(v12);
  v69 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v68 = (uint64_t)&v63 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - v17;
  v19 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v70, 0, 0);
  v20 = *(_QWORD *)(v19 + v12[5] + 8);
  swift_bridgeObjectRetain(v20);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v2, "setTitle:", v21);

  v22 = v12[6];
  v23 = *(void **)(v19 + v22);
  v24 = *(void **)(a1 + v22);
  sub_100005ED8(0, (unint64_t *)&qword_1006466A0, UIColor_ptr);
  v25 = v23;
  v26 = v24;
  LOBYTE(v21) = static NSObject.== infix(_:_:)(v25, v26);

  if ((v21 & 1) == 0)
    sub_10028EFE4();
  v27 = v12[19];
  v28 = *(unsigned __int8 *)(v19 + v27);
  v29 = *(unsigned __int8 *)(a1 + v27);
  sub_10002B1E8(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v28 == v29)
  {
    v31 = v12[28];
    v32 = *(unsigned __int8 *)(v19 + v31);
    v33 = v18[v31];
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    v30 = (uint64_t)v66;
    if (v32 == v33)
      goto LABEL_7;
  }
  else
  {
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    v30 = (uint64_t)v66;
  }
  sub_1002908A0(1, 0);
LABEL_7:
  v34 = v12[22];
  v35 = (_QWORD *)(v19 + v34);
  v36 = *(_QWORD *)(v19 + v34 + 8);
  v37 = (_QWORD *)(a1 + v34);
  v38 = v37[1];
  if (!v36)
  {
    if (!v38)
      goto LABEL_15;
    goto LABEL_14;
  }
  if (!v38
    || (*v35 != *v37 || v36 != v38) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v35, v36, *v37, v38, 0) & 1) == 0)
  {
LABEL_14:
    sub_100296B38();
  }
LABEL_15:
  v39 = v12[25];
  v40 = v19 + v39;
  sub_10000735C(a1 + v39, (uint64_t)v11, (uint64_t *)&unk_100653A00);
  v41 = (uint64_t)&v6[*(int *)(v64 + 48)];
  sub_10000735C(v40, (uint64_t)v6, (uint64_t *)&unk_100653A00);
  sub_10000735C((uint64_t)v11, v41, (uint64_t *)&unk_100653A00);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v43 = v67;
  if (v42((uint64_t)v6, 1, v67) == 1)
  {
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100653A00);
    if (v42(v41, 1, v43) == 1)
    {
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100653A00);
      v44 = a1;
      v45 = v68;
      sub_10002B1E8(v44, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  sub_10000735C((uint64_t)v6, v30, (uint64_t *)&unk_100653A00);
  if (v42(v41, 1, v43) == 1)
  {
    sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100653A00);
    sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
LABEL_20:
    sub_1000073A0((uint64_t)v6, &qword_100653A18);
    v46 = a1;
    v45 = v68;
    sub_10002B1E8(v46, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_21:
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_24:
    sub_10028F950();
    goto LABEL_25;
  }
  v47 = v63;
  sub_10001F580(v41, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  v48 = static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)(v30, v47);
  sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100653A00);
  sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRTemplatePublicLinkData);
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100653A00);
  v49 = a1;
  v45 = v68;
  sub_10002B1E8(v49, v68, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if ((v48 & 1) == 0)
    goto LABEL_21;
LABEL_23:
  v50 = v12[28];
  v51 = *(unsigned __int8 *)(v19 + v50);
  v52 = *(unsigned __int8 *)(v45 + v50);
  sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v51 != v52)
    goto LABEL_24;
LABEL_25:
  sub_10028F4A0();
  if (objc_msgSend((id)objc_opt_self(TTRIDeviceSupport), "deviceSupportsPencil")
    && (*(_BYTE *)(v19 + v12[30] + 1) & 1) != 0)
  {
    v54 = 176.0;
  }
  else
  {
    v54 = 0.0;
  }
  v55 = *(double *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight];
  *(double *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = v54;
  if (v54 != v55)
    sub_100296D10();
  v56 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v57 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  ObjectType = swift_getObjectType(v56, v53);
  v59 = v69;
  sub_10002B1E8(v19, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 128);
  v61 = v56;
  v60(v59, ObjectType, v57);

  sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  return sub_10028FC14();
}

double sub_100296B38()
{
  char *v0;
  char *v1;
  double result;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  _QWORD v24[5];
  char v25[24];

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v3 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v25, 0, 0);
    v4 = &v3[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 88)];
    v5 = *((_QWORD *)v4 + 1);
    if (v5)
    {
      v6 = *(_QWORD *)v4;
      v7 = sub_10002A750(&qword_100653A38);
      swift_bridgeObjectRetain(v5);
      v9 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v8);
      v24[3] = type metadata accessor for TTRUserDefaults(0);
      v24[4] = &protocol witness table for TTRUserDefaults;
      v24[0] = v9;
      v10 = v9;
      v24[0] = TTRTreeViewCollapsedStatesUserDefaultsPersistence.__allocating_init(autosaveName:userDefaults:)(v6, v5, v24);
      v11 = sub_10002A750(&qword_100654780);
      swift_allocObject(v11, 64, 7);
      v12 = sub_100023FEC((unint64_t *)&unk_100653A40, &qword_100653A38, (uint64_t)&protocol conformance descriptor for TTRTreeViewCollapsedStatesUserDefaultsPersistence<A>);
      v13 = v7;
    }
    else
    {
      v14 = sub_10002A750((uint64_t *)&unk_100653A20);
      swift_allocObject(v14, 24, 7);
      v24[0] = TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
      v15 = sub_10002A750(&qword_100654780);
      swift_allocObject(v15, 64, 7);
      v12 = sub_100023FEC(&qword_100653A30, (uint64_t *)&unk_100653A20, (uint64_t)&protocol conformance descriptor for TTRTreeViewCollapsedStatesInMemoryPersistence<A>);
      v13 = v14;
    }
    v16 = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)(v24, v13, v12);
    v17 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v18 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v19 = *((_QWORD *)v17 + 1);
    ObjectType = swift_getObjectType(v18, v20);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 216);
    v23 = v18;
    v22(v16, ObjectType, v19);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100296D10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  double (*v15)(char *, uint64_t, uint64_t);
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, double, double);
  id v26;
  double v27;
  char v28[24];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v6 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight;
    v7 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight];
    if (v7 <= 0.0)
    {
      v7 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
    }
    else
    {
      if (qword_10063D5D8 != -1)
        swift_once(&qword_10063D5D8, sub_100296544);
      if (v7 >= *(double *)&qword_1006538D0)
      {
        v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
        ObjectType = swift_getObjectType(*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v5);
        v10 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
        swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance], v28, 0, 0);
        sub_10000735C(v10, (uint64_t)v4, (uint64_t *)&unk_100640EB0);
        v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 280))(v4, ObjectType, v8);
        sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
        if ((v11 & 1) == 0)
        {
          v20 = v7;
          goto LABEL_17;
        }
        v12 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
        v14 = swift_getObjectType(v12, v5);
        sub_10000735C(v10, (uint64_t)v4, (uint64_t *)&unk_100640EB0);
        v15 = *(double (**)(char *, uint64_t, uint64_t))(v13 + 136);
        v16 = v12;
        v17 = v15(v4, v14, v13);

        sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
        v18 = v17 - *(double *)&v1[v6];
        v19 = v18 * 0.2;
        if (qword_10063D5D0 != -1)
        {
          v27 = v18 * 0.2;
          swift_once(&qword_10063D5D0, sub_100296534);
          v19 = v27;
        }
        if (v18 < 0.0)
          v19 = 0.0;
        if (v19 >= *(double *)&qword_1006538C8 * 3.0)
          v19 = *(double *)&qword_1006538C8 * 3.0;
LABEL_16:
        v20 = v7 + v19;
LABEL_17:
        v21 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        v22 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        v23 = *((_QWORD *)v21 + 1);
        v24 = swift_getObjectType(*(_QWORD *)v21, v5);
        v25 = *(void (**)(uint64_t, uint64_t, double, double))(v23 + 176);
        v26 = v22;
        v25(v24, v23, v20, v7);

        return;
      }
    }
    v19 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight];
    goto LABEL_16;
  }
}

void sub_100296F98(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v2 = v1;
  v4 = type metadata accessor for REMFeatureFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight;
  if ((sub_1003F5628(a1, 0.0000000149011612, *(double *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight]) & 1) == 0)
  {
    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v9 = type metadata accessor for Logger(0);
    sub_100012DC4(v9, (uint64_t)qword_1006538B0);
    v10 = v1;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v29 = v4;
      v14 = v13;
      v27 = swift_slowAlloc(64, -1);
      v31[0] = v27;
      *(_DWORD *)v14 = 136315394;
      v15 = Double.description.getter(a1);
      v17 = v16;
      v30 = sub_100027E40(v15, v16, v31);
      v28 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease(v17);
      *(_WORD *)(v14 + 12) = 2080;
      v18 = Double.description.getter(*(double *)&v2[v8]);
      v20 = v19;
      v30 = sub_100027E40(v18, v19, v31);
      v5 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v14 + 14, v14 + 22);

      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Update keyboardHeight from %s to %s", (uint8_t *)v14, 0x16u);
      v21 = v27;
      swift_arrayDestroy(v27, 2, &type metadata for Any[8]);
      swift_slowDealloc(v21, -1, -1);
      v22 = v14;
      v4 = v29;
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

    }
    sub_100296D10();
    if (objc_msgSend(v10, "isViewLoaded"))
    {
      v23 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for REMFeatureFlags.groceryToast(_:), v4);
      v24 = REMFeatureFlags.isEnabled.getter(v23);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v24 & 1) != 0)
      {
        v25 = &v10[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
        swift_beginAccess(&v10[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], v31, 0, 0);
        if (v25[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo(0) + 112)] == 1)
        {
          sub_100297290();
          sub_1000D49D8();
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_100297290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController);
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for TTRIAutoCategorizationOverlayController(0);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v2 = sub_1000D52B8();
    *(_QWORD *)(v2 + 24) = &off_1005FCEA8;
    swift_unknownObjectWeakAssign(v2 + 16, v3);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100297324(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[7];

  v2 = sub_10002A750((uint64_t *)&unk_10064BB30);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1005201E0;
  v4 = *(void **)&a1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView];
  *(_QWORD *)(v3 + 32) = v4;
  v5 = v4;
  v6 = sub_10028EF28();
  *(_QWORD *)(v3 + 40) = v6;
  aBlock[0] = v3;
  specialized Array._endMutation()(v6);
  v7 = sub_10002A750((uint64_t *)&unk_100653A60);
  v8 = sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v9 = sub_100023FEC(&qword_100653A70, (uint64_t *)&unk_100653A60, (uint64_t)&protocol conformance descriptor for [A]);
  v10 = Sequence.removingNils<A>()(v7, v8, v9);
  swift_bridgeObjectRelease(v3);
  isEscapingClosureAtFileLocation = a1;
  v12 = (uint64_t)sub_100299E3C(v10, (void *)isEscapingClosureAtFileLocation);
  swift_bridgeObjectRelease(v10);

  if ((unint64_t)v12 >> 62)
    goto LABEL_5;
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    while (1)
    {
      v13 = (void *)objc_opt_self(UIView);
      v14 = swift_allocObject(&unk_1005FD008, 32, 7);
      *(_QWORD *)(v14 + 16) = v12;
      *(_QWORD *)(v14 + 24) = isEscapingClosureAtFileLocation;
      v12 = swift_allocObject(&unk_1005FD030, 32, 7);
      *(_QWORD *)(v12 + 16) = sub_10029A008;
      *(_QWORD *)(v12 + 24) = v14;
      aBlock[4] = sub_10001B278;
      aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005FD048;
      v15 = _Block_copy(aBlock);
      v16 = (id)isEscapingClosureAtFileLocation;
      swift_retain();
      objc_msgSend(v13, "performWithoutAnimation:", v15, swift_release().n128_f64[0]);
      _Block_release(v15);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 133, 923, 48, 1);
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        break;
      __break(1u);
LABEL_5:
      if (v12 < 0)
        v17 = v12;
      else
        v17 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v18 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease(v12);
      if (!v18)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease(v12);
  }
}

id sub_100297590(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id result;
  void *v10;
  uint64_t v11;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return (id)swift_bridgeObjectRelease(a1);
  }
LABEL_12:
  if (a1 < 0)
    v11 = a1;
  else
    v11 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v4)
    return (id)swift_bridgeObjectRelease(a1);
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
    else
      v6 = *(id *)(a1 + 8 * i);
    v7 = v6;
    v8 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    result = objc_msgSend(a2, "view");
    if (!result)
      break;
    v10 = result;
    objc_msgSend(result, "bringSubviewToFront:", v7);

    if (v8 == v4)
      return (id)swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_100297698(uint64_t a1, uint64_t a2)
{
  unsigned __int16 v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *(_WORD *)(a1 + 1);
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002976F0(v2);

  }
}

void sub_1002976F0(unsigned __int16 a1)
{
  char *v1;
  uint64_t v2;
  double v4;
  __int16 v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  id v10;
  id v11;
  id v12;
  char **v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char **v18;
  id v19;
  id v20;
  _BYTE v21[24];

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver];
  if (v2)
  {
    *(_QWORD *)&v4 = swift_beginAccess(v2 + 16, v21, 0, 0).n128_u64[0];
    v5 = *(_WORD *)(v2 + 16);
    if (v5 != 2)
    {
      v6 = a1;
      v7 = v5 & 1;
      v8 = v5 & 0x100;
      v9 = a1;
      if (a1 == 2 || v7 != (a1 & 1))
      {
        v10 = objc_msgSend(v1, "navigationItem", v4);
        v11 = objc_msgSend(v10, "scrollEdgeAppearance");

        if (v11)
        {
          v12 = objc_msgSend(v11, "copy");

          v13 = &selRef_configureWithTransparentBackground;
          if (v7)
            v13 = &selRef_configureWithDefaultBackground;
          objc_msgSend(v12, *v13);
          v14 = objc_msgSend(v1, "navigationItem");
          objc_msgSend(v14, "setScrollEdgeAppearance:", v12);

        }
        if (v9 == 2)
          goto LABEL_11;
      }
      if (((v6 >> 8) & 1) != v8 >> 8)
      {
LABEL_11:
        v15 = sub_10028EF28();
        v16 = objc_msgSend(v15, "standardAppearance");

        v17 = objc_msgSend(v16, "copy");
        v18 = &selRef_configureWithDefaultBackground;
        if (v8)
          v18 = &selRef_configureWithTransparentBackground;
        objc_msgSend(v17, *v18);
        v19 = sub_10028EF28();
        objc_msgSend(v19, "setStandardAppearance:", v17);

        v20 = sub_10028EF28();
        objc_msgSend(v20, "setNeedsLayout");

      }
    }
  }
}

void sub_1002978D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD v8[2];
  id v9[5];
  __int128 v10;
  __int128 v11;

  v0 = Notification.userInfo.getter();
  if (!v0)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_13:
    sub_1000073A0((uint64_t)&v10, &qword_100640E50);
    goto LABEL_14;
  }
  v1 = v0;
  v8[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(_UIApplicationDeactivationReasonUserInfoKey);
  v8[1] = v2;
  AnyHashable.init<A>(_:)(v9, v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v1 + 16) && (v3 = sub_1002AA7E4((uint64_t)v9), (v4 & 1) != 0))
  {
    sub_100028CFC(*(_QWORD *)(v1 + 56) + 32 * v3, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  swift_bridgeObjectRelease(v1);
  sub_100041DDC((uint64_t)v9);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_13;
  v5 = sub_100005ED8(0, (unint64_t *)&qword_100650740, NSNumber_ptr);
  if ((swift_dynamicCast(v9, &v10, &type metadata for Any[8], v5, 6) & 1) == 0)
  {
LABEL_14:
    UIViewController.endFirstResponderEditing()();
    return;
  }
  v6 = v9[0];
  v7 = (uint64_t)objc_msgSend(v9[0], "integerValue");

  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    return;
  }
  if ((v7 & 0xFFFFFFFE) != 0xC)
    goto LABEL_14;
}

void sub_100297A40(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  id v19[5];
  __int128 v20;
  __int128 v21;

  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v20 = 0u;
    v21 = 0u;
LABEL_10:
    sub_1000073A0((uint64_t)&v20, &qword_100640E50);
    goto LABEL_11;
  }
  v3 = v2;
  v18[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v18[1] = v4;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v5 = sub_1002AA7E4((uint64_t)v19), (v6 & 1) != 0))
  {
    sub_100028CFC(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_100041DDC((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_10;
  v7 = sub_100005ED8(0, (unint64_t *)&unk_100653AA0, NSValue_ptr);
  if ((swift_dynamicCast(v19, &v20, &type metadata for Any[8], v7, 6) & 1) == 0)
  {
LABEL_11:
    v17 = 1;
    v10 = 0;
    v12 = 0;
    v14 = 0;
    v16 = 0;
    goto LABEL_12;
  }
  v8 = v19[0];
  objc_msgSend(v19[0], "CGRectValue");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = 0;
LABEL_12:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v16;
  *(_BYTE *)(a1 + 32) = v17;
}

void sub_100297B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  uint64_t v13;
  uint64_t ObjectType;
  double (*v15)(uint64_t, uint64_t, double, double, double, double);
  id v16;
  double v17;
  double v18;
  double v19;
  _BYTE v20[40];
  _QWORD v21[4];
  char v22;

  v1 = v0;
  sub_100297A40((uint64_t)v20);
  sub_10029A308((uint64_t)v20, (uint64_t)v21);
  if ((v22 & 1) != 0)
  {
    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100012DC4(v3, (uint64_t)qword_1006538B0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "can't get keyboardFrameEnd in keyboard change notification", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

  }
  else
  {
    v8 = *(double *)v21;
    v9 = *(double *)&v21[1];
    v10 = *(double *)&v21[2];
    v11 = *(double *)&v21[3];
    v12 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController), v2);
    v15 = *(double (**)(uint64_t, uint64_t, double, double, double, double))(v13 + 168);
    v16 = v12;
    v17 = v15(ObjectType, v13, v8, v9, v10, v11);

    if ((static TTRIKeyboard.isInFloatingKeyboardMode.getter() & 1) != 0)
      v18 = 0.0;
    else
      v18 = v17;
    v19 = *(double *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight);
    *(double *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight) = v18;
    sub_100296F98(v19);
  }
}

uint64_t sub_100297EA8(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v16;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  sub_100290E04(a4);
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v13);
  (*(void (**)(uint64_t, uint64_t))(v12 + 832))(ObjectType, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100297F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  _BYTE v19[8];
  uint64_t v20;
  _QWORD v21[5];
  char v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight;
  v3 = *(double *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight);
  sub_100297B9C();
  v5 = *(double *)(v0 + v2);
  if (v5 > 0.0 && v3 > 0.0 && v5 != v3)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController), v4);
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 64);
    v11 = v7;
    v12 = (void *)v10(ObjectType, v8);
    v14 = v13;

    if (v12)
    {
      v21[3] = swift_getObjectType(v12, v15);
      v21[4] = *(_QWORD *)(*(_QWORD *)(v14 + 8) + 8);
      v21[0] = v12;
      v22 = 2;
      v16 = (char *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates);
      swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates, &v18, 0, 0);
      sub_10029A0D0(v16, (uint64_t)v19);
      v17 = v12;
      sub_10029A10C((uint64_t)v21, (uint64_t)&v20);
      sub_10028E39C((uint64_t)v19);

    }
  }
  sub_1002908A0(0, 1);
}

uint64_t sub_1002980B4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10029831C()
{
  return type metadata accessor for TTRIShowRemindersViewController(0);
}

uint64_t type metadata accessor for TTRIShowRemindersViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1006539B8;
  if (!qword_1006539B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIShowRemindersViewController);
  return result;
}

void sub_100298360(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[23];

  v8[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v8[1] = &unk_10052C640;
  v8[2] = &unk_10052C658;
  v8[3] = &unk_10052C658;
  v8[4] = &unk_10052C670;
  v8[5] = &unk_10052C688;
  v8[6] = &unk_10052C688;
  v8[7] = &unk_10052C6A0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo(319);
  if (v3 <= 0x3F)
  {
    v8[8] = *(_QWORD *)(v2 - 8) + 64;
    v8[9] = &unk_10052C6B8;
    v8[10] = &unk_10052C6D0;
    v8[11] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[12] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[14] = &unk_10052C658;
    v8[15] = &unk_10052C658;
    v8[16] = &unk_10052C658;
    v8[17] = &unk_10052C658;
    v8[18] = &unk_10052C658;
    v8[19] = &unk_10052C658;
    v8[20] = &unk_10052C658;
    sub_100005494(319, &qword_1006539C8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRSharedWithYouHighlight);
    if (v5 <= 0x3F)
    {
      v8[21] = *(_QWORD *)(v4 - 8) + 64;
      sub_100005494(319, (unint64_t *)&qword_1006539D0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v7 <= 0x3F)
      {
        v8[22] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 23, v8, a1 + 80);
      }
    }
  }
}

void sub_100298498(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  id v7;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 160);
  v7 = v3;
  v6(0, a2, 1, ObjectType, v4);

}

id sub_100298518(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id result;
  char *v10;
  uint64_t v11;

  v2 = v1;
  if (objc_msgSend(v1, "isViewLoaded"))
  {
    if (qword_10063D5C8 != -1)
      swift_once(&qword_10063D5C8, sub_10028E2E8);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_1006538B0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.fault.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRIShowRemindersViewController: prepareForModalPresentation is called after viewDidLoad", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

  }
  result = objc_msgSend(a1, "setDelegate:", v2);
  v10 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions + 8] == 1)
  {
    v11 = *(_QWORD *)v10;
    *(_QWORD *)v10 = 0;
    *((_QWORD *)v10 + 1) = 0;
    v10[16] = 0;
    return (id)sub_10004E038(v11, 1);
  }
  return result;
}

void sub_10029865C(char a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(__n128);
  __n128 v32;
  char *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  id v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  void **v47;
  unsigned int v48;
  os_log_type_t type;
  uint64_t v50;
  void **aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD *v56;

  v3 = v2;
  v5 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout))
    v6 = 0x736E6D756C6F63;
  else
    v6 = 1953720684;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout))
    v7 = 0xE700000000000000;
  else
    v7 = 0xE400000000000000;
  v8 = a1 & 1;
  if ((a1 & 1) != 0)
    v9 = 0x736E6D756C6F63;
  else
    v9 = 1953720684;
  if ((a1 & 1) != 0)
    v10 = 0xE700000000000000;
  else
    v10 = 0xE400000000000000;
  if (v6 == v9 && v7 == v10)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
    if ((v13 & 1) == 0)
    {
      if (qword_10063D5C8 != -1)
        swift_once(&qword_10063D5C8, sub_10028E2E8);
      v14 = type metadata accessor for Logger(0);
      sub_100012DC4(v14, (uint64_t)qword_1006538B0);
      v15 = v3;
      v16 = Logger.logObject.getter(v15);
      type = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, type))
      {
        v48 = v8;
        v17 = swift_slowAlloc(22, -1);
        v47 = (void **)swift_slowAlloc(64, -1);
        aBlock = v47;
        *(_DWORD *)v17 = 136315394;
        if (*((_BYTE *)v3 + v5))
          v18 = 0x736E6D756C6F63;
        else
          v18 = 1953720684;
        if (*((_BYTE *)v3 + v5))
          v19 = 0xE700000000000000;
        else
          v19 = 0xE400000000000000;
        v50 = sub_100027E40(v18, v19, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &aBlock, v17 + 4, v17 + 12);

        swift_bridgeObjectRelease(v19);
        *(_WORD *)(v17 + 12) = 2080;
        v50 = sub_100027E40(v9, v10, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &aBlock, v17 + 14, v17 + 22);
        swift_bridgeObjectRelease(v10);
        _os_log_impl((void *)&_mh_execute_header, v16, type, "TTRIShowRemindersViewController: replace content view controller {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy(v47, 2, &type metadata for Any[8]);
        swift_slowDealloc(v47, -1, -1);
        v20 = v17;
        v8 = v48;
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {

      }
      *((_BYTE *)v3 + v5) = v8;
      v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], v21);
      v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(v8, ObjectType, v22);
      v26 = v25;
      v28 = v27;
      v30 = v29;
      swift_getObjectType(v27, v25);
      v31 = *(void (**)(__n128))(v30 + 32);
      v32 = swift_unknownObjectRetain(v15);
      v31(v32);
      v33 = &v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      v34 = *(void **)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      if (v24 == v34)
      {

        swift_unknownObjectRelease(v28);
      }
      else
      {
        v35 = *((_QWORD *)v33 + 1);
        *(_QWORD *)v33 = v24;
        *((_QWORD *)v33 + 1) = v26;
        v36 = v24;
        objc_msgSend(v34, "willMoveToParentViewController:", 0);
        sub_10028EC18();
        if ((a2 & 1) != 0)
          v37 = 5242880;
        else
          v37 = 0;
        v38 = swift_allocObject(&unk_1005FCF40, 24, 7);
        *(_QWORD *)(v38 + 16) = v15;
        v55 = sub_100299D88;
        v56 = (_QWORD *)v38;
        aBlock = _NSConcreteStackBlock;
        v52 = 1107296256;
        v53 = sub_100006378;
        v54 = &unk_1005FCF58;
        v39 = _Block_copy(&aBlock);
        v40 = v15;
        v41 = v34;
        swift_release();
        v42 = (_QWORD *)swift_allocObject(&unk_1005FCF90, 56, 7);
        v42[2] = v41;
        v42[3] = v35;
        v42[4] = v36;
        v42[5] = v26;
        v42[6] = v40;
        v55 = sub_100299DC4;
        v56 = v42;
        aBlock = _NSConcreteStackBlock;
        v52 = 1107296256;
        v53 = sub_1000D3A2C;
        v54 = &unk_1005FCFA8;
        v43 = _Block_copy(&aBlock);
        v44 = v40;
        v45 = v41;
        v46 = v36;
        swift_release();
        objc_msgSend(v44, "transitionFromViewController:toViewController:duration:options:animations:completion:", v45, v46, v37, v39, v43, 0.25);
        _Block_release(v43);
        _Block_release(v39);

        swift_unknownObjectRelease(v28);
      }
    }
  }
}

id sub_100298B04(void *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id result;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  unint64_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for AppEntityID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMFeatureFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v3, "isViewLoaded");
  if ((_DWORD)result)
  {
    v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for REMFeatureFlags.viewAnnotation(_:), v10);
    v16 = REMFeatureFlags.isEnabled.getter(v15);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v16 & 1) != 0)
    {
      result = objc_msgSend(v3, "view");
      v17 = result;
      if ((a2 & 1) != 0)
      {
        if (result)
        {
          v18 = type metadata accessor for GroupEntity(0);
          v19 = (uint64_t (*)(uint64_t))&type metadata accessor for GroupEntity;
          AppEntityID.init(objectID:)(a1);
          v20 = (unint64_t *)&qword_1006539F0;
          v21 = &protocol conformance descriptor for GroupEntity;
LABEL_8:
          v22 = sub_1000175C8(v20, v19, (uint64_t)v21);
          UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v18, v9, v18, v22);

          return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        __break(1u);
      }
      else if (result)
      {
        v18 = type metadata accessor for ListEntity(0);
        v19 = (uint64_t (*)(uint64_t))&type metadata accessor for ListEntity;
        AppEntityID.init(objectID:)(a1);
        v20 = (unint64_t *)&unk_100646690;
        v21 = &protocol conformance descriptor for ListEntity;
        goto LABEL_8;
      }
      __break(1u);
    }
  }
  return result;
}

id sub_100298CCC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v2 = v1;
  v4 = type metadata accessor for SmartListType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMFeatureFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    v13 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for REMFeatureFlags.viewAnnotation(_:), v8);
    v14 = REMFeatureFlags.isEnabled.getter(v13);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((v14 & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *(unsigned int *)*(&off_1005FD0E8 + a1), v4);
      result = objc_msgSend(v2, "view");
      if (result)
      {
        v15 = result;
        v16 = type metadata accessor for SmartListEntity(0);
        v17 = SmartListType.id.getter();
        v19 = v18;
        v21[0] = v17;
        v21[1] = v18;
        v20 = sub_1000175C8((unint64_t *)&unk_1006539E0, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListEntity, (uint64_t)&protocol conformance descriptor for SmartListEntity);
        UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v16, v21, v16, v20);
        swift_bridgeObjectRelease(v19);

        return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersViewController.KeyboardAppearState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002992C4 + 4 * byte_10052C5C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002992F8 + 4 * byte_10052C5C4[v4]))();
}

uint64_t sub_1002992F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100299300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100299308);
  return result;
}

uint64_t sub_100299314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029931CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100299320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100299328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersViewController.KeyboardAppearState()
{
  return &type metadata for TTRIShowRemindersViewController.KeyboardAppearState;
}

unint64_t sub_100299348()
{
  unint64_t result;

  result = qword_1006539D8;
  if (!qword_1006539D8)
  {
    result = swift_getWitnessTable(&unk_10052C744, &type metadata for TTRIShowRemindersViewController.KeyboardAppearState);
    atomic_store(result, (unint64_t *)&qword_1006539D8);
  }
  return result;
}

uint64_t sub_10029938C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[4];

  v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v5);
  v13[2] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v13[3] = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v13[1] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  swift_getObjectType(a1, v11);
  result = TTRIReminderCellTitleModuleInterface.editableReminderCell.getter();
  if (result)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1002998EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88);
  v7 = v3;
  LOBYTE(v3) = v6(ObjectType, v4);

  return v3 & 1;
}

void sub_100299958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  id v7;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  ObjectType = swift_getObjectType(v3, a2);
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 144);
  v7 = v3;
  v6(ObjectType, v4);

}

uint64_t sub_1002999C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  char *v9;
  _BYTE v10[24];
  _BYTE v11[56];

  v4 = v3;
  ObjectType = swift_getObjectType(a1, a2);
  result = TTRIReminderCellNotesModuleInterface.editableReminderCell.getter(ObjectType, a2);
  if (result)
  {
    v9 = (char *)(v4 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates);
    swift_beginAccess(v4 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates, v10, 0, 0);
    sub_10029A0D0(v9, (uint64_t)v11);
    v11[0] = 1;
    sub_10028E39C((uint64_t)v11);
    __asm { BR              X10 }
  }
  return result;
}

void sub_100299B00(uint64_t a1, uint64_t a2, char a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  _BYTE v32[24];
  _BYTE v33[56];

  v22 = v21;
  ObjectType = swift_getObjectType(a1, a2);
  v26 = TTRIReminderCellHashtagModuleInterface.tableCell.getter(ObjectType, a2);
  if (v26)
  {
    v31 = (id)v26;
    v28 = swift_getObjectType(v26, v27);
    if (swift_conformsToProtocol2(v28, &protocol descriptor for TTRIShowRemindersEditableCell))
      v29 = v31;
    else
      v29 = 0;
    if (v29)
    {
      v30 = (char *)(v22 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates);
      swift_beginAccess(v22 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates, v32, 0, 0);
      sub_10029A0D0(v30, (uint64_t)v33);
      v33[0] = 1;
      sub_10028E39C((uint64_t)v33);
      __asm { BR              X10 }
    }

  }
}

void sub_100299C58()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_10028EFE4();
  v1 = (void *)UIViewController.effectiveNavigationControllerForBars.getter(v0);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setToolbarHidden:animated:", 1, 1);

  }
}

uint64_t sub_100299CB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t ObjectType;

  v3 = (_QWORD *)(*v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter);
  v4 = v3[1];
  ObjectType = swift_getObjectType(*v3, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 720))(ObjectType, v4) & 1;
}

uint64_t sub_100299CF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100299D1C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = sub_10028EF28();
  objc_msgSend(v2, "setHidden:", v1);

}

uint64_t sub_100299D64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100299D88()
{
  uint64_t v0;

  sub_100297324(*(char **)(v0 + 16));
}

uint64_t sub_100299D90()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

double sub_100299DC4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)v0[2];
  v2 = (void *)v0[4];
  v3 = v0[6];
  objc_msgSend(v1, "removeFromParentViewController");
  objc_msgSend(v2, "didMoveToParentViewController:", v3);
  return sub_100290008(0, v4);
}

uint64_t sub_100299E10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100299E34(uint64_t a1)
{
  uint64_t v1;

  sub_100297698(a1, v1);
}

_QWORD *sub_100299E3C(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_9:
        v8 = v7;
        v9 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_20;
        v10 = objc_msgSend(v7, "superview");
        v11 = objc_msgSend(a2, "view");
        v12 = v11;
        if (v10)
        {
          if (!v11)
          {

            goto LABEL_5;
          }

          if (v10 != v12)
          {

            goto LABEL_5;
          }
        }
        else if (v11)
        {

          goto LABEL_5;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v5 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
        v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
        specialized ContiguousArray._endMutation()(v6);
LABEL_5:
        ++v4;
        if (v9 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v14);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100299FDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

id sub_10029A008()
{
  uint64_t v0;

  return sub_100297590(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10029A010()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10029A020()
{
  id v0;
  double v1;
  double v2;
  double v3;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;

  v3 = ceil(v2 / 44.0);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= 9.22337204e18)
LABEL_7:
    __break(1u);
}

uint64_t sub_10029A0D0(char *a1, uint64_t a2)
{
  initializeWithCopy for TTRIShowRemindersDeferredItemUpdates(a2, a1);
  return a2;
}

uint64_t sub_10029A10C(uint64_t a1, uint64_t a2)
{
  assignWithTake for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(a2, a1);
  return a2;
}

uint64_t sub_10029A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029A190(uint64_t a1, uint64_t a2)
{
  assignWithCopy for TTRIShowRemindersDeferredItemUpdates(a2, a1);
  return a2;
}

uint64_t sub_10029A1CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(a2, a1);
  return a2;
}

_QWORD *sub_10029A208(_QWORD *a1)
{
  destroy for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(a1);
  return a1;
}

uint64_t sub_10029A23C(uint64_t a1)
{
  destroy for TTRIShowRemindersDeferredItemUpdates(a1);
  return a1;
}

uint64_t sub_10029A270()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10029A29C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100648794);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10004A08C;
  return sub_100133DF0();
}

uint64_t sub_10029A308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_1006547A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10029A350(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  char *v5;
  UIAccessibilityNotifications v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  id argument;

  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter], a2);
  v5 = v2;
  sub_10015A92C(0, ObjectType, v3);
  v6 = UIAccessibilityLayoutChangedNotification;
  v7 = *(void **)&v5[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  v10 = swift_getObjectType(v7, v9);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 64);
  v12 = v7;
  argument = (id)v11(v10, v8);

  UIAccessibilityPostNotification(v6, argument);
}

void sub_10029A414()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = 0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  *(_OWORD *)v2 = xmmword_1005205B0;
  v2[16] = 0;
  v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging] = 0x80;
  v3 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  *v3 = 0;
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 33) = 0u;
  v3[49] = 3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController] = 0;
  v4 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
  v5 = type metadata accessor for TTRSharedWithYouHighlight(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x8000000100571AE0, "Reminders/TTRIShowRemindersViewController.swift", 47, 2, 58, 0);
  __break(1u);
}

void sub_10029A5EC()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  id v19;
  Class v20;
  id v21;
  id v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging;
  v3 = v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging];
  v4 = (v3 & 0xC0) != 0x40 || (v3 & 0x3E) == 0;
  if (v4
    || (v5 = TTRRemindersListViewModel.EmptyListMessagingType.localizedSubtitle(currentLayout:)(v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout])) == 0)
  {
    v12 = 0;
  }
  else
  {
    v6 = (void *)v5;
    v21 = objc_msgSend((id)objc_opt_self(TTRIContentUnavailableConfiguration), "emptyProminentConfiguration");
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v7);

    objc_msgSend(v21, "setImage:", v8);
    TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)(0, v1[v2]);
    if (v9)
    {
      v10 = v9;
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v21, "setText:", v11);

    v13 = objc_msgSend(v21, "textProperties");
    v14 = objc_msgSend(v21, "textProperties");
    v15 = objc_msgSend(v14, "font");

    isa = UIFont.withRoundedDesign()().super.isa;
    objc_msgSend(v13, "setFont:", isa);

    v17 = objc_msgSend(v21, "secondaryTextProperties");
    v18 = objc_msgSend(v21, "secondaryTextProperties");
    v19 = objc_msgSend(v18, "font");

    v20 = UIFont.withRoundedDesign()().super.isa;
    objc_msgSend(v17, "setFont:", v20);

    objc_msgSend(v21, "setSecondaryAttributedText:", v6);
    v12 = v21;
  }
  v22 = v12;
  objc_msgSend(v1, "ttr_setContentUnavailableConfiguration:");

}

uint64_t sub_10029A85C(uint64_t a1, uint64_t a2)
{
  assignWithTake for TTRIShowRemindersDeferredItemUpdates(a2, a1);
  return a2;
}

uint64_t sub_10029A898()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10029A8C4()
{
  uint64_t v0;

  sub_100298498(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_10029A8D0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TTRIShowRemindersDeferredItemUpdates.PendingScrollAction(a2, a1);
  return a2;
}

uint64_t sub_10029A924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100653B00);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100653B00);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10029A9B4(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  NSString v31;
  id v32;
  uint64_t v33;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v1 + 24);
      v8 = sub_10000B410(a1 & 1);
      v9 = swift_allocObject(&unk_1005FD540, 32, 7);
      *(_QWORD *)(v9 + 16) = v6;
      *(_QWORD *)(v9 + 24) = v7;
      swift_unknownObjectRetain(v6);
      v11 = (void *)zalgo.getter(v10);
      v12 = sub_10002A750(&qword_100653BF0);
      v13 = dispatch thunk of Promise.then<A>(on:closure:)(v11, sub_10029FD70, v9, v12);
      swift_release(v8);
      swift_release(v9);

      v14 = dispatch thunk of Promise.cast<A>(as:)(&type metadata for Any[8], &type metadata for Any[8]);
      swift_unknownObjectRelease(v6);
      swift_release(v13);
    }
    else
    {
      if (qword_10063D5E0 != -1)
        swift_once(&qword_10063D5E0, sub_10029A924);
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100012DC4(v25, (uint64_t)qword_100653B00);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.fault.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Root Router has a nil delegate. Navigation failed", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      v30 = (void *)objc_opt_self(REMError);
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v30, "internalErrorWithDebugDescription:", v31);

      v33 = sub_10002A750(&qword_100654820);
      swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
      v14 = Promise.init(error:)(v32);

    }
    return v14;
  }
  else
  {
    if (qword_10063D5E0 != -1)
      swift_once(&qword_10063D5E0, sub_10029A924);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_100653B00);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Root Router has a nil view controller. Navigation failed", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = (void *)objc_opt_self(REMError);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "internalErrorWithDebugDescription:", v21);

    v23 = sub_10002A750(&qword_100654820);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    return Promise.init(error:)(v22);
  }
}

uint64_t sub_10029AD10(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD6F8, (uint64_t)sub_10002F7BC, (uint64_t *)&unk_100649CC0, &qword_100653120);
}

uint64_t sub_10029AD34(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD6D0, (uint64_t)sub_10002F7BC, &qword_100651F40, &qword_100653128);
}

uint64_t sub_10029AD58(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD720, (uint64_t)sub_10002F7BC, &qword_100653150, &qword_100653158);
}

uint64_t sub_10029AD7C(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD748, (uint64_t)sub_10002F7BC, &qword_100653160, &qword_100653168);
}

uint64_t sub_10029ADA0(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD770, (uint64_t)sub_10002F7BC, &qword_100653170, &qword_100653178);
}

uint64_t sub_10029ADC4(char a1)
{
  return sub_10000D63C(a1, (uint64_t)&unk_1005FD798, (uint64_t)sub_10002F7BC, &qword_100653180, &qword_100653188);
}

uint64_t sub_10029ADE8(int a1, uint64_t a2, id a3, char a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];
  char v20;
  id v21;
  char v22;

  v7 = objc_msgSend(a3, "objectID");
  v8 = objc_msgSend(v7, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v21 = a3;
  v22 = a4;
  v19[2] = sub_10029FD90;
  v19[3] = &v20;
  v19[4] = a2;
  v12 = firstly<A>(closure:)(sub_10029FC6C, v19, &type metadata for Bool);
  v13 = (_QWORD *)swift_allocObject(&unk_1005FD568, 40, 7);
  v13[2] = v9;
  v13[3] = v11;
  v13[4] = a2;
  swift_bridgeObjectRetain(v11);
  v14 = swift_retain(a2);
  v15 = (void *)zalgo.getter(v14);
  v16 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v17 = dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_100289DE8, v13, v16);
  swift_bridgeObjectRelease(v11);
  swift_release(v12);
  swift_release(v13);

  return v17;
}

uint64_t sub_10029AF38(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 40);
  v8 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v8 + 16, a1);
  v9 = swift_allocObject(&unk_1005FD590, 33, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a3;
  *(_BYTE *)(v9 + 32) = a4;
  swift_retain(v7);
  v10 = (void *)zalgo.getter(a3);
  v11 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_1002A0218, v9, &type metadata for Bool);
  swift_release(v7);
  swift_release(v9);

  return v11;
}

uint64_t sub_10029B008(int a1, uint64_t a2, id a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  id v19;

  v5 = objc_msgSend(a3, "objectID");
  v6 = objc_msgSend(v5, "description");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v19 = a3;
  v17[2] = sub_10029FDD0;
  v17[3] = &v18;
  v17[4] = a2;
  v10 = firstly<A>(closure:)(sub_10029FC6C, v17, &type metadata for Bool);
  v11 = (_QWORD *)swift_allocObject(&unk_1005FD608, 40, 7);
  v11[2] = v7;
  v11[3] = v9;
  v11[4] = a2;
  swift_bridgeObjectRetain(v9);
  v12 = swift_retain(a2);
  v13 = (void *)zalgo.getter(v12);
  v14 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v15 = dispatch thunk of Promise.then<A>(on:closure:)(v13, sub_100289DE8, v11, v14);
  swift_bridgeObjectRelease(v9);
  swift_release(v10);
  swift_release(v11);

  return v15;
}

uint64_t sub_10029B150(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 40);
  v6 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v6 + 16, a1);
  v7 = swift_allocObject(&unk_1005FD630, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = a3;
  swift_retain(v5);
  v8 = (void *)zalgo.getter(a3);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v8, sub_1002A0200, v7, &type metadata for Bool);
  swift_release(v5);
  swift_release(v7);

  return v9;
}

uint64_t sub_10029B214(uint64_t a1, int a2, void *a3)
{
  return sub_10029B23C(a1, a2, a3, (uint64_t)&unk_1005FD4A0, (uint64_t)sub_10029FC7C);
}

uint64_t sub_10029B228(uint64_t a1, int a2, void *a3)
{
  return sub_10029B23C(a1, a2, a3, (uint64_t)&unk_1005FD5B8, (uint64_t)sub_1002A0218);
}

uint64_t sub_10029B23C(uint64_t a1, int a2, id a3, uint64_t a4, uint64_t a5)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;

  v8 = objc_msgSend(a3, "list");
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 40);
  v10 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v10 + 16, a1);
  v11 = swift_allocObject(a4, 33, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v8;
  *(_BYTE *)(v11 + 32) = 0;
  swift_retain(v9);
  v12 = v8;
  v13 = (void *)zalgo.getter();
  v14 = dispatch thunk of Promise.then<A>(on:closure:)(v13, a5, v11, &type metadata for Bool);

  swift_release(v9);
  swift_release(v11);

  return v14;
}

uint64_t sub_10029B320(uint64_t a1, int a2, id a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  v4 = objc_msgSend(a3, "smartList");
  v5 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v5 + 16, a1);
  v6 = swift_allocObject(&unk_1005FD5E0, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  swift_retain();
  v7 = v4;
  v8 = (void *)zalgo.getter(v7);
  v9 = dispatch thunk of Promise.then<A>(on:closure:)(v8, sub_10029FDB8, v6, &type metadata for Bool);

  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_10029B400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v8 + 16, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 24) & ~v9;
  v11 = swift_allocObject(&unk_1005FD680, v10 + v7, v9 | 7);
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v12 = swift_retain();
  v13 = (void *)zalgo.getter(v12);
  v14 = dispatch thunk of Promise.then<A>(on:closure:)(v13, sub_10029FEEC, v11, &type metadata for Bool);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_10029B534@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v12;
  uint64_t v13;
  void **v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t Strong;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;
  _OWORD v34[3];
  __int128 v35;
  uint64_t v36;
  __int128 v37[2];
  char v38;

  v6 = v5;
  v12 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v34[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = objc_msgSend(a1, "store");
  v16 = *(void **)(v6 + 56);
  sub_10000735C(a2, (uint64_t)v14 + v12[5], (uint64_t *)&unk_1006463C0);
  *v14 = v15;
  *(void **)((char *)v14 + v12[6]) = v16;
  v17 = v12[7];
  v33 = *(_OWORD *)(v6 + 64);
  *(_OWORD *)((char *)v14 + v17) = v33;
  *((_BYTE *)v14 + v12[8]) = 0;
  type metadata accessor for TTRIShowRemindersInListAssembly();
  swift_retain(v16);
  swift_unknownObjectRetain(v33);
  v18 = (void *)sub_1004AF820(a5, v14, a1, a3, a4, 1);
  sub_100010634((uint64_t)a5, (uint64_t)v37);
  v38 = 0;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 48);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
    v22 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v23 = swift_allocObject(v22, 40, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100521140;
    *(_QWORD *)(v23 + 32) = v18;
    *(_QWORD *)&v34[0] = v23;
    specialized Array._endMutation()(v23);
    v24 = *(_QWORD *)&v34[0];
    sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
    v25 = v18;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v21, "setViewControllers:animated:", isa, 0);

    sub_10023C05C(0);
  }
  v27 = swift_unknownObjectWeakLoadStrong(v6 + 48);
  if (v27)
  {
    v28 = (void *)v27;
    sub_10023C2C8(a1);

  }
  sub_10000AEFC();
  if (v36)
  {
    sub_10002E37C(&v35, (uint64_t)v34);
    v29 = swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (v29)
    {
      v30 = v29;
      swift_retain(v6);

      sub_10001F544((uint64_t)v14, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      swift_unknownObjectRelease(v30);
      sub_100027F10(v34);
      swift_release(v6);
    }
    else
    {

      sub_100027F10(v34);
      sub_10001F544((uint64_t)v14, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v14, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);

    sub_1000073A0((uint64_t)&v35, (uint64_t *)&unk_1006655F0);
  }
  sub_1002A0060(v37, v34);
  v31 = v6 + 96;
  swift_beginAccess(v31, &v35, 33, 0);
  sub_1002A0078((uint64_t)v34, v31);
  return swift_endAccess(&v35);
}

uint64_t sub_10029B830@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_10029B860(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TTRIShowCustomSmartListAssembly, (uint64_t (*)(uint64_t, _QWORD *, void *, uint64_t, uint64_t, uint64_t, __n128))sub_10042E46C, 1, a5);
}

uint64_t sub_10029B848@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_10029B860(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TTRIShowGroupAssembly, (uint64_t (*)(uint64_t, _QWORD *, void *, uint64_t, uint64_t, uint64_t, __n128))sub_1002A68A4, 2, a5);
}

uint64_t sub_10029B860@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(_QWORD)@<X4>, uint64_t (*a6)(uint64_t, _QWORD *, void *, uint64_t, uint64_t, uint64_t, __n128)@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t Strong;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, _QWORD *, void *, uint64_t, uint64_t, uint64_t, __n128);
  int v38;
  _OWORD v39[3];
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  char v43;

  v38 = a7;
  v36 = a4;
  v37 = a6;
  v10 = v8;
  v15 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v15);
  v17 = (_QWORD *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = objc_msgSend(a1, "store");
  v19 = *(_QWORD *)(v8 + 56);
  sub_10000735C(a2, (uint64_t)v17 + v15[5], (uint64_t *)&unk_1006463C0);
  *v17 = v18;
  *(_QWORD *)((char *)v17 + v15[6]) = v19;
  v20 = v15[7];
  v35 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)((char *)v17 + v20) = v35;
  *((_BYTE *)v17 + v15[8]) = 0;
  a5(0);
  swift_retain(v19);
  v21 = swift_unknownObjectRetain(v35);
  v22 = (void *)v37(a8, v17, a1, a3, v36, 1, v21);
  sub_100010634(a8, (uint64_t)v42);
  v43 = v38;
  Strong = swift_unknownObjectWeakLoadStrong(v10 + 48);
  if (Strong)
  {
    v24 = (void *)Strong;
    v25 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
    v26 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v27 = swift_allocObject(v26, 40, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100521140;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)&v39[0] = v27;
    specialized Array._endMutation()(v27);
    v28 = *(_QWORD *)&v39[0];
    sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
    v29 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v28);
    objc_msgSend(v25, "setViewControllers:animated:", isa, 0);

    sub_10023C05C(0);
  }
  sub_10000AEFC();
  if (v41)
  {
    sub_10002E37C(&v40, (uint64_t)v39);
    v31 = swift_unknownObjectWeakLoadStrong(v10 + 16);
    if (v31)
    {
      v32 = v31;
      swift_retain(v10);

      sub_10001F544((uint64_t)v17, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      swift_unknownObjectRelease(v32);
      sub_100027F10(v39);
      swift_release(v10);
    }
    else
    {

      sub_100027F10(v39);
      sub_10001F544((uint64_t)v17, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    }
  }
  else
  {
    sub_10001F544((uint64_t)v17, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);

    sub_1000073A0((uint64_t)&v40, (uint64_t *)&unk_1006655F0);
  }
  sub_1002A0060(v42, v39);
  v33 = v10 + 96;
  swift_beginAccess(v33, &v40, 33, 0);
  sub_1002A0078((uint64_t)v39, v33);
  return swift_endAccess(&v40);
}

uint64_t sub_10029BB50@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  void **v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  char v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, __n128);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _BYTE v69[24];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;

  v6 = v5;
  v12 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v15);
  v17 = (void **)((char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(v6 + 96, v69, 0, 0);
  sub_10000AC28(v6 + 96, (uint64_t)&v65);
  if (v68)
  {
    sub_10000AEA4(&v65);
    v18 = objc_msgSend(a1, "store");
    v19 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
    v64 = a2;
    v20 = (_QWORD *)a5;
    v21 = *(void **)(v6 + 56);
    sub_10000735C((uint64_t)v14, (uint64_t)v17 + v15[5], (uint64_t *)&unk_1006463C0);
    *v17 = v18;
    *(void **)((char *)v17 + v15[6]) = v21;
    v22 = v15[7];
    v63 = *(_OWORD *)(v6 + 64);
    *(_OWORD *)((char *)v17 + v22) = v63;
    *((_BYTE *)v17 + v15[8]) = a4 & 1;
    swift_retain(v21);
    swift_unknownObjectRetain(v63);
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_1006463C0);
    type metadata accessor for TTRIShowRemindersInListAssembly();
    v23 = (void *)sub_1004AF820(v20, v17, a1, v64, a3, 0);
    sub_100010634((uint64_t)v20, (uint64_t)&v65);
    v68 = 0;
    sub_10029CB74(&v65, v23);

    sub_10000AEA4(&v65);
    return sub_10001F544((uint64_t)v17, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
  v25 = a1;
  sub_10002E37C(&v65, (uint64_t)&v70);
  v26 = (_QWORD *)(*sub_10001413C(&v70, v71)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v27 = v26[1];
  ObjectType = swift_getObjectType(*v26, v28);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(ObjectType, v27);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, "objectID");

  }
  else
  {
    v32 = 0;
  }
  v33 = objc_msgSend(a1, "objectID");
  v34 = v33;
  if (v32)
  {
    if (v33)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v35 = v32;
      v36 = static NSObject.== infix(_:_:)(v35, v34);

      if ((v36 & 1) != 0)
        goto LABEL_16;
      goto LABEL_14;
    }
    v34 = v32;
  }
  else if (!v33)
  {
    goto LABEL_16;
  }

LABEL_14:
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 16);
  if (Strong)
  {
    v38 = Strong;
    v40 = v71;
    v39 = v72;
    v41 = sub_10001413C(&v70, v71);
    v66 = v40;
    v67 = *(_QWORD *)(v39 + 8);
    v42 = sub_100028D70(&v65);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v42, v41, v40);
    swift_retain(v6);
    swift_unknownObjectRelease(v38);
    sub_100027F10(&v65);
    swift_release(v6);
  }
LABEL_16:
  v44 = v71;
  v43 = v72;
  sub_10001413C(&v70, v71);
  (*(void (**)(uint64_t))(*(_QWORD *)(v43 + 8) + 24))(v44);
  v45 = sub_10001413C(&v70, v71);
  v46 = *v45;
  v47 = *(_QWORD *)(*v45 + 232);
  v48 = *(_QWORD *)(v47 + 96);
  swift_beginAccess(v48 + 40, &v65, 0, 0);
  v50 = *(_QWORD *)(v48 + 40);
  if (v50)
  {
    v51 = *(_QWORD *)(v48 + 48);
    v52 = swift_getObjectType(v50, v49);
    v53 = *(void (**)(uint64_t, uint64_t, __n128))(v51 + 24);
    v54 = swift_unknownObjectRetain(v50);
    v53(v52, v51, v54);
    swift_unknownObjectRelease(v50);
  }
  sub_10041C214(v47);
  v55 = *(_QWORD *)(v46 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  v57 = swift_getObjectType(*(_QWORD *)(v46 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource), v56);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v55 + 24))(v25, 1, v57, v55);
  v58 = swift_unknownObjectWeakLoadStrong(v6 + 48);
  if (!v58)
    return sub_10002E37C(&v70, a5);
  v59 = (char *)v58;
  sub_10023C05C(1);
  sub_10001413C((_QWORD *)(*(_QWORD *)&v59[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v59[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  v60 = sub_10029ECC0();
  if (v61 == -1)
    goto LABEL_22;
  v62 = v60;
  if ((v61 & 1) != 0)
  {
    sub_1000760F4(v60, v61);
LABEL_22:
    v62 = 0;
  }
  sub_10023C2C8(v62);

  return sub_10002E37C(&v70, a5);
}

uint64_t sub_10029C000@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  char v51;
  id v52;
  void *v53;
  id v54;
  char v55;
  uint64_t Strong;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, __n128);
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char v80;
  char *v81;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[5];
  __int128 v94;
  uint64_t v95;
  char v96;
  _BYTE v97[24];
  __int128 v98;
  uint64_t v99;
  uint64_t v100;

  v5 = v4;
  v10 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(v4 + 96, v97, 0, 0);
  sub_10000AC28(v4 + 96, (uint64_t)&v94);
  if (v96 == 1)
  {
    sub_10002E37C(&v94, (uint64_t)&v98);
    v16 = (_QWORD *)(*sub_10001413C(&v98, v99)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v17 = v16[1];
    ObjectType = swift_getObjectType(*v16, v18);
    v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
    v89 = a4;
    if (!v20)
    {
      sub_100010634((uint64_t)&v98, (uint64_t)&v94);
      goto LABEL_11;
    }
    v21 = v20;
    v91 = a2;
    v92 = a3;
    v22 = objc_msgSend(v20, "smartListType");

    v23 = (void *)REMSmartListTypeCustom;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    if (v24 == v27 && v26 == v28)
    {
      v40 = v23;

      swift_bridgeObjectRelease_n(v26, 2);
      sub_100010634((uint64_t)&v98, (uint64_t)&v94);
    }
    else
    {
      v30 = v28;
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v27, v28, 0);
      v32 = v23;

      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v30);
      sub_100010634((uint64_t)&v98, (uint64_t)&v94);
      if ((v31 & 1) == 0)
        goto LABEL_11;
    }
    v41 = (_QWORD *)(*sub_10001413C(&v94, v95)
                   + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
    v42 = v41[1];
    v44 = swift_getObjectType(*v41, v43);
    v45 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 16))(v44, v42);
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "objectID");

    }
    else
    {
      v47 = 0;
    }
    v52 = objc_msgSend(a1, "objectID");
    v53 = v52;
    if (v47)
    {
      if (v52)
      {
        sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
        v54 = v47;
        v55 = static NSObject.== infix(_:_:)(v54, v53);

        sub_100027F10(&v94);
        a4 = v89;
        if ((v55 & 1) == 0)
          goto LABEL_46;
LABEL_12:
        v33 = (_QWORD *)(*sub_10001413C(&v98, v99)
                       + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
        v34 = v33[1];
        v36 = swift_getObjectType(*v33, v35);
        v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v36, v34);
        if (v37)
        {
          v38 = v37;
          v39 = objc_msgSend(v37, "objectID");

        }
        else
        {
          v39 = 0;
        }
        v48 = objc_msgSend(a1, "objectID");
        v49 = v48;
        if (v39)
        {
          if (v48)
          {
            sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
            v50 = v39;
            v51 = static NSObject.== infix(_:_:)(v50, v49);

            if ((v51 & 1) != 0)
              goto LABEL_35;
            goto LABEL_33;
          }
          v49 = v39;
        }
        else if (!v48)
        {
          goto LABEL_35;
        }

LABEL_33:
        Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
        if (Strong)
        {
          v57 = Strong;
          v58 = v99;
          v59 = v100;
          v60 = sub_10001413C(&v98, v99);
          v93[3] = v58;
          v93[4] = *(_QWORD *)(v59 + 8);
          v61 = sub_100028D70(v93);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v61, v60, v58);
          swift_retain(v5);
          swift_unknownObjectRelease(v57);
          sub_100027F10(v93);
          swift_release(v5);
        }
LABEL_35:
        v62 = v99;
        v63 = v100;
        sub_10001413C(&v98, v99);
        (*(void (**)(uint64_t))(*(_QWORD *)(v63 + 8) + 24))(v62);
        v64 = sub_10001413C(&v98, v99);
        v65 = *v64;
        v66 = *(_QWORD *)(*v64 + 232);
        v67 = *(_QWORD *)(v66 + 96);
        swift_beginAccess(v67 + 40, v93, 0, 0);
        v69 = *(_QWORD *)(v67 + 40);
        if (v69)
        {
          v70 = *(_QWORD *)(v67 + 48);
          v71 = swift_getObjectType(v69, v68);
          v72 = *(void (**)(uint64_t, uint64_t, __n128))(v70 + 24);
          v73 = swift_unknownObjectRetain(v69);
          v72(v71, v70, v73);
          swift_unknownObjectRelease(v69);
        }
        sub_10041C214(v66);
        v74 = *(_QWORD *)(v65 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource + 8);
        v76 = swift_getObjectType(*(_QWORD *)(v65 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource), v75);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v74 + 24))(a1, 1, v76, v74);
        v77 = swift_unknownObjectWeakLoadStrong(v5 + 48);
        if (!v77)
          return sub_10002E37C(&v98, (uint64_t)a4);
        v78 = (char *)v77;
        sub_10023C05C(1);
        sub_10001413C((_QWORD *)(*(_QWORD *)&v78[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v78[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
        v79 = sub_10029ECC0();
        if (v80 != -1)
        {
          v81 = v79;
          if ((v80 & 1) == 0)
          {
LABEL_42:
            sub_10023C2C8(v81);

            return sub_10002E37C(&v98, (uint64_t)a4);
          }
          sub_1000760F4(v79, v80);
        }
        v81 = 0;
        goto LABEL_42;
      }
      v53 = v47;
LABEL_45:

      sub_100027F10(&v94);
      a4 = v89;
LABEL_46:
      sub_100027F10(&v98);
      goto LABEL_47;
    }
    if (v52)
      goto LABEL_45;
LABEL_11:
    sub_100027F10(&v94);
    a4 = v89;
    goto LABEL_12;
  }
  v91 = a2;
  v92 = a3;
  sub_10000AEA4(&v94);
LABEL_47:
  v83 = objc_msgSend(a1, "store");
  v84 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v12, 1, 1, v84);
  v85 = *(_QWORD *)(v5 + 56);
  sub_10000735C((uint64_t)v12, (uint64_t)v15 + v13[5], (uint64_t *)&unk_1006463C0);
  *v15 = v83;
  *(_QWORD *)((char *)v15 + v13[6]) = v85;
  v86 = v13[7];
  v90 = *(_OWORD *)(v5 + 64);
  *(_OWORD *)((char *)v15 + v86) = v90;
  *((_BYTE *)v15 + v13[8]) = 0;
  swift_retain(v85);
  swift_unknownObjectRetain(v90);
  sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_1006463C0);
  type metadata accessor for TTRIShowCustomSmartListAssembly();
  v87 = (void *)sub_10042E46C(a4, (uint64_t)v15, a1, v91, v92, 0);
  sub_100010634((uint64_t)a4, (uint64_t)&v94);
  v96 = 1;
  sub_10029CB74(&v94, v87);

  sub_10000AEA4(&v94);
  return sub_10001F544((uint64_t)v15, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_10029C6D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  void **v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v29;
  void *v30;
  id v31;
  char v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  _BYTE v64[24];
  __int128 v65;
  uint64_t v66;
  uint64_t v67;

  v4 = v3;
  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess(v3 + 96, v64, 0, 0);
  sub_10000AC28(v3 + 96, (uint64_t)&v60);
  if (v63 != 2)
  {
    sub_10000AEA4(&v60);
    v21 = objc_msgSend(a1, "store");
    v22 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 1, 1, v22);
    v23 = a1;
    v24 = (_QWORD *)a3;
    v25 = *(void **)(v4 + 56);
    sub_10000735C((uint64_t)v10, (uint64_t)v13 + v11[5], (uint64_t *)&unk_1006463C0);
    *v13 = v21;
    *(void **)((char *)v13 + v11[6]) = v25;
    v26 = v11[7];
    v59 = *(_OWORD *)(v4 + 64);
    *(_OWORD *)((char *)v13 + v26) = v59;
    *((_BYTE *)v13 + v11[8]) = 0;
    swift_retain(v25);
    swift_unknownObjectRetain(v59);
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_1006463C0);
    type metadata accessor for TTRIShowGroupAssembly();
    v27 = (void *)sub_1002A68A4(v24, v13, v23, a2);
    sub_100010634((uint64_t)v24, (uint64_t)&v60);
    v63 = 2;
    sub_10029CB74(&v60, v27);

    sub_10000AEA4(&v60);
    return sub_10001F544((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
  sub_10002E37C(&v60, (uint64_t)&v65);
  v14 = (_QWORD *)(*sub_10001413C(&v65, v66) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  v15 = v14[1];
  ObjectType = swift_getObjectType(*v14, v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, "objectID");

  }
  else
  {
    v20 = 0;
  }
  v29 = objc_msgSend(a1, "objectID");
  v30 = v29;
  if (v20)
  {
    if (v29)
    {
      sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
      v31 = v20;
      v32 = static NSObject.== infix(_:_:)(v31, v30);

      if ((v32 & 1) != 0)
        goto LABEL_16;
      goto LABEL_14;
    }
    v30 = v20;
  }
  else if (!v29)
  {
    goto LABEL_16;
  }

LABEL_14:
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v34 = Strong;
    v35 = v66;
    v36 = v67;
    v37 = sub_10001413C(&v65, v66);
    v61 = v35;
    v62 = *(_QWORD *)(v36 + 8);
    v38 = sub_100028D70(&v60);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v38, v37, v35);
    swift_retain(v4);
    swift_unknownObjectRelease(v34);
    sub_100027F10(&v60);
    swift_release(v4);
  }
LABEL_16:
  v40 = v66;
  v39 = v67;
  sub_10001413C(&v65, v66);
  (*(void (**)(uint64_t))(*(_QWORD *)(v39 + 8) + 24))(v40);
  v41 = sub_10001413C(&v65, v66);
  v42 = *v41;
  v43 = *(_QWORD *)(*v41 + 232);
  v44 = *(_QWORD *)(v43 + 96);
  swift_beginAccess(v44 + 40, &v60, 0, 0);
  v46 = *(_QWORD *)(v44 + 40);
  if (v46)
  {
    v47 = *(_QWORD *)(v44 + 48);
    v48 = swift_getObjectType(v46, v45);
    v49 = *(void (**)(uint64_t, uint64_t, __n128))(v47 + 24);
    v50 = swift_unknownObjectRetain(v46);
    v49(v48, v47, v50);
    swift_unknownObjectRelease(v46);
  }
  sub_10041C214(v43);
  v51 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  v53 = swift_getObjectType(*(_QWORD *)(v42 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource), v52);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v51 + 24))(a1, 1, v53, v51);
  v54 = swift_unknownObjectWeakLoadStrong(v4 + 48);
  if (!v54)
    return sub_10002E37C(&v65, a3);
  v55 = (char *)v54;
  sub_10023C05C(1);
  sub_10001413C((_QWORD *)(*(_QWORD *)&v55[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v55[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  v56 = sub_10029ECC0();
  if (v57 == -1)
    goto LABEL_22;
  v58 = v56;
  if ((v57 & 1) != 0)
  {
    sub_1000760F4(v56, v57);
LABEL_22:
    v58 = 0;
  }
  sub_10023C2C8(v58);

  return sub_10002E37C(&v65, a3);
}

uint64_t sub_10029CB74(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[5];

  v3 = v2;
  swift_beginAccess(v3 + 96, v14, 33, 0);
  sub_10029FA98(a1, v3 + 96);
  swift_endAccess(v14);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 48);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = a2;
    sub_10023BB2C(a2);

  }
  sub_10000AEFC();
  if (!v13)
    return sub_1000073A0((uint64_t)&v12, (uint64_t *)&unk_1006655F0);
  sub_10002E37C(&v12, (uint64_t)v14);
  v9 = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (!v9)
    return sub_100027F10(v14);
  v10 = v9;
  swift_retain(v3);
  swift_unknownObjectRelease(v10);
  sub_100027F10(v14);
  return swift_release(v3);
}

void sub_10029CC6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + 80);
    v5 = swift_retain(v4);
    v6 = static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter(v5);
    v8 = v7;
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v3 + 48);
    sub_100375364(v6, v8, v9);
    swift_release(v3);
    swift_release(v4);
    swift_bridgeObjectRelease(v8);

  }
}

uint64_t sub_10029CD14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  v1[7] = v4;
  v1[8] = v5;
  return swift_task_switch(sub_10029CD80, v4, v5);
}

uint64_t sub_10029CD80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(Strong + 80);
    swift_retain();
    swift_release();
    return swift_task_switch(sub_10029CE10, 0, 0);
  }
  else
  {
    v4 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
  }
}

uint64_t sub_10029CE10()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[9] + 16);
  v0[10] = v1;
  if (v1)
  {
    v2 = async function pointer to UIViewController.dismissAndWait(animated:)[1];
    v1;
    v3 = (_QWORD *)swift_task_alloc(v2);
    v0[11] = v3;
    *v3 = v0;
    v3[1] = sub_10029CE9C;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    return swift_task_switch(sub_100132450, v0[7], v0[8]);
  }
}

uint64_t sub_10029CE9C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_10029CEF0, 0, 0);
}

uint64_t sub_10029CEF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 72);

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  swift_release();

  return swift_task_switch(sub_100132450, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_10029CF3C(void *a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  __int128 v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[5];
  uint64_t v62[5];
  _BYTE v63[32];

  v59 = a6;
  v60 = a7;
  v14 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v17);
  v19 = (_QWORD *)((char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v20);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v63, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v24 = Strong;
    v58 = a8;
    swift_beginAccess(Strong + 88, v62, 33, 0);
    sub_1000F50CC(a4, (uint64_t)v22);
    swift_endAccess(v62);
    sub_1000073A0((uint64_t)v22, &qword_100650718);
    v25 = swift_unknownObjectWeakLoadStrong(v24 + 48);
    if (v25)
    {
      v26 = (void *)v25;
      if ((a2 & 1) != 0)
      {
        v46 = (void *)swift_unknownObjectWeakLoadStrong(v24 + 48);
        v47 = swift_errorRetain(a1);
        if (v46)
        {
          v48 = UIViewController.isIPadIdiom.getter(v47);

        }
        else
        {
          v48 = 0;
        }
        v49 = sub_100080EEC((uint64_t)a1, v48 & 1);
        v50 = swift_unknownObjectWeakLoadStrong(v24 + 48);
        if (v50)
        {
          v51 = (void *)v50;
          v52 = a1;
          v53 = (void *)UIViewController.topPresentedViewController.getter();

          objc_msgSend(v53, "presentViewController:animated:completion:", v49, 1, 0);
          swift_release(v24);

          v54 = v52;
        }
        else
        {

          swift_release(v24);
          v54 = a1;
        }
        sub_1001D7014(v54, 1);
      }
      else
      {
        v27 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
        v28 = type metadata accessor for TTRAttachmentThumbnailSizeProvider(0);
        *(_QWORD *)&v55 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
        sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
        v56 = a1;
        v29 = static OS_dispatch_queue.main.getter(v56);
        v57 = a1;
        v30 = v29;
        type metadata accessor for RDIDispatchQueue(0);
        v31 = static RDIDispatchQueue.utilityQueue.getter();
        v32 = type metadata accessor for TTRThumbnailGenerator(0);
        swift_allocObject(v32, 32, 7);
        v33 = TTRThumbnailGenerator.init(queue:backgroundQueue:)(v30, v31);
        v62[3] = v32;
        v62[4] = (uint64_t)&protocol witness table for TTRThumbnailGenerator;
        v62[0] = v33;
        v61[3] = v28;
        v61[4] = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
        v61[0] = v55;
        v34 = type metadata accessor for TTRAttachmentThumbnailsManager(0);
        swift_allocObject(v34, 120, 7);
        v35 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)(v61, v62);
        sub_10000735C((uint64_t)v16, (uint64_t)v19 + v17[5], (uint64_t *)&unk_1006463C0);
        *v19 = a5;
        v36 = v17[6];
        v55 = *(_OWORD *)(v24 + 64);
        v37 = v55;
        *(_QWORD *)((char *)v19 + v36) = v35;
        *(_OWORD *)((char *)v19 + v17[7]) = v37;
        *((_BYTE *)v19 + v17[8]) = 0;
        v38 = a5;
        swift_unknownObjectRetain(v55);
        v39 = sub_1000073A0((uint64_t)v16, (uint64_t *)&unk_1006463C0);
        v40 = REMiCloudSharedItemSpecifier.PublicTemplate.name.getter(v39);
        v42 = v41;
        v43 = sub_100080410(v62, (uint64_t)v19, v56, v40, v41, v60);
        swift_bridgeObjectRelease(v42);
        sub_100027F10(v62);
        v44 = v26;
        v45 = (void *)UIViewController.topPresentedViewController.getter();

        objc_msgSend(v45, "presentViewController:animated:completion:", v43, 1, 0);
        sub_1001D7014(v57, 0);

        swift_release(v24);
        sub_10001F544((uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      }
    }
    else
    {
      swift_release(v24);
    }
  }
}

uint64_t sub_10029D378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[8] = a8;
  v8[9] = v14;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[10] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v8[11] = v11;
  v8[12] = v12;
  return swift_task_switch(sub_10029D3F4, v11, v12);
}

uint64_t sub_10029D3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to TTRPotentiallyLongOperationPerformer.perform<A>(_:)[1]);
  *(_QWORD *)(v0 + 112) = v3;
  v4 = sub_10002A750(&qword_100653C10);
  *v3 = v0;
  v3[1] = sub_10029D490;
  return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v0 + 16, &unk_100653C08, v2, v4);
}

uint64_t sub_10029D490()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10029D4E4, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_10029D4E4()
{
  uint64_t v0;
  void (*v1)(void *, _QWORD, __n128);
  __n128 v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(void (**)(void *, _QWORD, __n128))(v0 + 56);
  v2 = swift_release();
  v3 = *(void **)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  v1(v3, v4, v2);
  sub_1001D7014(v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029D540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a1;
  v6 = type metadata accessor for UUID(0);
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[19] = swift_task_alloc(v8);
  v4[20] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v4[21] = v9;
  v4[22] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to REMStore.downloadPublicTemplate(withPublicLinkURLUUID:)[1]);
  v4[23] = v10;
  *v10 = v4;
  v10[1] = sub_10029D5F8;
  return REMStore.downloadPublicTemplate(withPublicLinkURLUUID:)(a3);
}

uint64_t sub_10029D5F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 184);
  v5 = *(_QWORD *)(*v2 + 168);
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  if (v1)
    v9 = sub_10029D980;
  else
    v9 = sub_10029D688;
  return swift_task_switch(v9, v8, v7);
}

uint64_t sub_10029D688()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t MetatypeMetadata;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  os_log_type_t type;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  swift_release();
  if (qword_10063D5E0 != -1)
    swift_once(&qword_10063D5E0, sub_10029A924);
  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100653B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  v7 = Logger.logObject.getter(v1);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 144);
  if (v9)
  {
    v14 = *(_QWORD *)(v0 + 128);
    type = v8;
    v15 = swift_slowAlloc(32, -1);
    v33 = (_QWORD *)swift_slowAlloc(8, -1);
    v34 = swift_slowAlloc(64, -1);
    v35 = v34;
    *(_DWORD *)v15 = 136315650;
    *(_QWORD *)(v0 + 40) = v14;
    MetatypeMetadata = swift_getMetatypeMetadata(v14);
    v17 = String.init<A>(describing:)(v0 + 40, MetatypeMetadata);
    v19 = v18;
    *(_QWORD *)(v0 + 88) = sub_100027E40(v17, v18, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v15 + 12) = 2080;
    v21 = UUID.uuidString.getter(v20);
    v23 = v22;
    *(_QWORD *)(v0 + 96) = sub_100027E40(v21, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v15 + 14, v15 + 22);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v11, v13, v24);
    *(_WORD *)(v15 + 22) = 2112;
    *(_QWORD *)(v0 + 104) = v10;
    v25 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v15 + 24, v15 + 32);
    *v33 = v10;

    _os_log_impl((void *)&_mh_execute_header, v7, type, "%s Downloaded public template. Will show public template. {templatePublicLinkURLUUID: %s, publicTemplateObjectID: %@}", (uint8_t *)v15, 0x20u);
    v26 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v33, 1, v26);
    swift_slowDealloc(v33, -1, -1);
    swift_arrayDestroy(v34, 2, &type metadata for Any[8]);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));

  }
  v28 = *(_QWORD *)(v0 + 152);
  v27 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 112);
  v30 = *(_QWORD *)(v0 + 200) != 0;
  *(_QWORD *)v29 = v10;
  *(_BYTE *)(v29 + 8) = v30;
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029D980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t MetatypeMetadata;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  swift_release();
  if (qword_10063D5E0 != -1)
    swift_once(&qword_10063D5E0, sub_10029A924);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = type metadata accessor for Logger(0);
  sub_100012DC4(v6, (uint64_t)qword_100653B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 136);
  if (v10)
  {
    v15 = *(_QWORD *)(v0 + 128);
    v16 = swift_slowAlloc(32, -1);
    v34 = swift_slowAlloc(96, -1);
    v35 = v34;
    *(_DWORD *)v16 = 136315650;
    *(_QWORD *)(v0 + 72) = v15;
    MetatypeMetadata = swift_getMetatypeMetadata(v15);
    v18 = String.init<A>(describing:)(v0 + 72, MetatypeMetadata);
    v20 = v19;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v18, v19, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v16 + 12) = 2080;
    v22 = UUID.uuidString.getter(v21);
    v24 = v23;
    *(_QWORD *)(v0 + 56) = sub_100027E40(v22, v23, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v16 + 14, v16 + 22);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(uint64_t, uint64_t, __n128))(v13 + 8))(v12, v14, v25);
    *(_WORD *)(v16 + 22) = 2080;
    swift_getErrorValue(v11, v0 + 64, v0 + 16);
    v26 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v28 = v27;
    *(_QWORD *)(v0 + 80) = sub_100027E40(v26, v27, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v16 + 24, v16 + 32);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s Failed to download public template. {templatePublicLinkURLUUID: %s, error: %s}", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy(v34, 3, &type metadata for Any[8]);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)v32 = v29;
  *(_BYTE *)(v32 + 8) = v29 != 0;
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029DC78()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;

  v1 = v0 + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (!Strong)
    return 2;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "traitCollection");

  v5 = objc_msgSend(v4, "horizontalSizeClass");
  if (v5 != (id)1)
    return 2;
  v6 = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (!v6)
    return 0;
  v7 = v6;
  if (objc_msgSend(v6, "isCollapsed"))
  {
    v8 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
    v9 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    v11 = *(id *)&v7[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
    v12 = sub_10002D318((uint64_t)v11, v10);

    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) == 0)
      return 0;
  }
  else
  {

  }
  return 1;
}

void sub_10029DDA4(void *a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  sub_10029A9B4(1);
  v7 = swift_allocObject(&unk_1005FD4C8, 24, 7);
  v8 = swift_weakInit(v7 + 16, v3);
  v9 = (void *)zalgo.getter(v8);
  v10 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v9, sub_10029FCBC, v7, v10);
  swift_release();
  swift_release();

  v11 = swift_allocObject(&unk_1005FD4F0, 33, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_BYTE *)(v11 + 32) = a3;
  v12 = a1;
  v13 = (id)zalgo.getter(a2);
  dispatch thunk of Promise.then<A>(on:closure:)(v13, sub_10029FD18, v11, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

}

void sub_10029DEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *Strong;
  void *v8;
  unsigned __int8 v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(Strong, "isCollapsed");

  }
  else
  {
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 48);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "traitCollection");

      v13 = objc_msgSend(v12, "horizontalSizeClass");
      v9 = v13 == (id)1;
    }
    else
    {
      v9 = 0;
    }
  }
  v14 = v9 ^ 1;
  sub_10029A9B4(1);
  v15 = swift_allocObject(&unk_1005FD4C8, 24, 7);
  v16 = swift_weakInit(v15 + 16, v1);
  v17 = (void *)zalgo.getter(v16);
  v18 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v17, sub_1002A00AC, v15, v18);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v19 = *(unsigned __int8 *)(v4 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v5;
  v22 = swift_allocObject(&unk_1005FD860, v21 + 1, v19 | 7);
  v23 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v22 + v20, v6, v3);
  *(_BYTE *)(v22 + v21) = v14;
  v24 = (void *)zalgo.getter(v23);
  dispatch thunk of Promise.then<A>(on:closure:)(v24, sub_1002A0140, v22, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_10029E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (Strong)
  {
    v10 = *(_QWORD *)(Strong + 32);
    v11 = swift_allocObject(a3, 32, 7);
    *(_QWORD *)(v11 + 16) = a4;
    *(_QWORD *)(v11 + 24) = v10;
    swift_unknownObjectRetain_n(v10, 2);
    v12 = swift_retain();
    v13 = (void *)zalgo.getter(v12);
    v14 = sub_10002A750(&qword_100651F40);
    v15 = dispatch thunk of Promise.then<A>(on:closure:)(v13, a5, v11, v14);
    swift_release();
    swift_unknownObjectRelease(v10);
    swift_release();
    swift_release();

  }
  else
  {
    v15 = type metadata accessor for PromiseError(0);
    v16 = sub_1000A60A8();
    swift_allocError(v15, v16, 0, 0);
    v18 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, enum case for PromiseError.abandoned(_:), v15);
    swift_willThrow(v18);
  }
  return v15;
}

void sub_10029E21C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = swift_allocObject(&unk_1005FD400, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_10002E400;
  *(_QWORD *)(v7 + 24) = v6;
  swift_unknownObjectRetain_n(v6, 2);
  v8 = swift_retain();
  v9 = (void *)zalgo.getter(v8);
  v10 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v9, sub_10029FBA0, v7, v10);
  swift_unknownObjectRelease(v6);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1005FD428, v12 + v5, v11 | 7);
  v14 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v15 = (void *)zalgo.getter(v14);
  dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10029FC14, v13, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_10029E3B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for TTRListType(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  Strong = swift_unknownObjectWeakLoadStrong(*a1 + 16);
  if (Strong)
  {
    v10 = Strong;
    sub_100067654(a2);
    swift_unknownObjectRelease(v10);
  }
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(v7 + 72);
  ObjectType = swift_getObjectType(v11, v9);
  v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, a2, v14);
  swift_storeEnumTagMultiPayload(v6, v4, 3);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v6, ObjectType, v12);
  return sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType);
}

void sub_10029E4B4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;

  v5 = v2 + 48;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 48);
  if (!Strong)
  {
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 48);
    if (!v9)
      goto LABEL_7;
    v10 = v9;
    v11 = objc_msgSend(v9, "traitCollection");

    v12 = objc_msgSend(v11, "horizontalSizeClass");
    if (v12 != (id)1)
      goto LABEL_7;
LABEL_6:
    sub_10029A9B4(1);
    v13 = swift_allocObject(&unk_1005FD4C8, 24, 7);
    v14 = swift_weakInit(v13 + 16, v2);
    v15 = (void *)zalgo.getter(v14);
    v16 = sub_10002A750(&qword_100651F40);
    dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10029FFFC, v13, v16);
    goto LABEL_8;
  }
  v7 = Strong;
  v8 = objc_msgSend(Strong, "isCollapsed");

  if ((v8 & 1) != 0)
    goto LABEL_6;
LABEL_7:
  v17 = *(_QWORD *)(v2 + 32);
  v18 = swift_allocObject(&unk_1005FD7C0, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10002E400;
  *(_QWORD *)(v18 + 24) = v17;
  swift_unknownObjectRetain_n(v17, 2);
  v19 = swift_retain();
  v15 = (void *)zalgo.getter(v19);
  v20 = sub_10002A750(&qword_100651F40);
  dispatch thunk of Promise.then<A>(on:closure:)(v15, sub_10029FBA0, v18, v20);
  swift_unknownObjectRelease(v17);
LABEL_8:
  swift_release();
  swift_release();

  v21 = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (v21)
  {
    v22 = v21;
    LOBYTE(v23) = objc_msgSend(v21, "isCollapsed");

  }
  else
  {
    v24 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    v23 = v24;
    if (v24)
    {
      v25 = objc_msgSend(v24, "traitCollection");

      v23 = objc_msgSend(v25, "horizontalSizeClass");
      LOBYTE(v23) = v23 == (id)1;
    }
  }
  v26 = v23 ^ 1;
  v27 = swift_allocObject(&unk_1005FD7E8, 33, 7);
  *(_QWORD *)(v27 + 16) = a1;
  *(_QWORD *)(v27 + 24) = a2;
  *(_BYTE *)(v27 + 32) = v26;
  v28 = a1;
  swift_bridgeObjectRetain(a2);
  v30 = (id)zalgo.getter(v29);
  dispatch thunk of Promise.then<A>(on:closure:)(v30, sub_10029FFE0, v27, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();
  swift_release();

}

void sub_10029E754(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t);

  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 104);
  ObjectType = swift_getObjectType(*(_QWORD *)(*a1 + 96), a2);
  v10 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v10 + 16, v7);
  v11 = swift_allocObject(&unk_1005FD838, 25, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = a4;
  v12 = *(void (**)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v8 + 24);
  swift_retain();
  v12(a2, a3, sub_1002A0050, v11, ObjectType, v8);
  swift_release();
  swift_release();
}

uint64_t sub_10029E838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  _BYTE v28[32];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[40];

  v4 = v3;
  v8 = v3 + 96;
  swift_beginAccess(v8, v34, 0, 0);
  sub_10000AC28(v8, (uint64_t)&v31);
  sub_10000AEFC();
  sub_10000AEA4(&v31);
  v9 = sub_10029DC78();
  if (v9)
  {
    if (v9 == 1)
    {
      sub_10000735C((uint64_t)v35, (uint64_t)&v31, (uint64_t *)&unk_1006655F0);
      v10 = *((_QWORD *)&v32 + 1);
      if (*((_QWORD *)&v32 + 1))
      {
        v11 = v33;
        sub_10001413C(&v31, *((uint64_t *)&v32 + 1));
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 112))(&v29, a1, a2, v10, v11);
        sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655F0);
        sub_100027F10(&v31);
      }
      else
      {
        sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655F0);
        sub_1000073A0((uint64_t)&v31, (uint64_t *)&unk_1006655F0);
        v29 = 0u;
        v30 = 0u;
      }
      v21 = &v29;
      return sub_10023D25C((uint64_t)v21, a3);
    }
    sub_10000735C((uint64_t)v35, (uint64_t)&v31, (uint64_t *)&unk_1006655F0);
    v17 = *((_QWORD *)&v32 + 1);
    if (*((_QWORD *)&v32 + 1))
    {
      v18 = v33;
      sub_10001413C(&v31, *((uint64_t *)&v32 + 1));
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 112))(&v29, a1, a2, v17, v18);
      sub_100027F10(&v31);
      v19 = *((_QWORD *)&v30 + 1);
      v20 = sub_10000735C(a2, (uint64_t)v28, &qword_100640E50);
      if (v19)
      {
        sub_1000073A0((uint64_t)v28, &qword_100640E50);
        sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655F0);
        sub_100028D38(&v29, &v31);
LABEL_27:
        v21 = &v31;
        return sub_10023D25C((uint64_t)v21, a3);
      }
    }
    else
    {
      sub_1000073A0((uint64_t)&v31, (uint64_t *)&unk_1006655F0);
      v29 = 0u;
      v30 = 0u;
      v20 = sub_10000735C(a2, (uint64_t)v28, &qword_100640E50);
    }
    v22 = *(_QWORD *)(v4 + 32);
    if ((TTRModuleState.isReady.getter(v20) & 1) != 0 && (Strong = swift_unknownObjectWeakLoadStrong(v22 + 16)) != 0)
    {
      v25 = Strong;
      ObjectType = swift_getObjectType(Strong, v24);
      swift_unknownObjectRetain(v22);
      if ((sub_100060F0C(a1, (uint64_t)v28) & 1) != 0)
      {
        *((_QWORD *)&v32 + 1) = ObjectType;
        *(_QWORD *)&v31 = v25;
      }
      else
      {
        swift_unknownObjectRelease(v25);
        v31 = 0u;
        v32 = 0u;
      }
      swift_unknownObjectRelease(v22);
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }
    sub_1000073A0((uint64_t)v28, &qword_100640E50);
    sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655F0);
    sub_1000073A0((uint64_t)&v29, &qword_100640E50);
    goto LABEL_27;
  }
  v12 = *(_QWORD *)(v4 + 32);
  if ((((uint64_t (*)(void))TTRModuleState.isReady.getter)() & 1) != 0
    && (v13 = swift_unknownObjectWeakLoadStrong(v12 + 16)) != 0)
  {
    v15 = v13;
    v16 = swift_getObjectType(v13, v14);
    swift_unknownObjectRetain(v12);
    if ((sub_100060F0C(a1, a2) & 1) != 0)
    {
      *(_QWORD *)(a3 + 24) = v16;
      *(_QWORD *)a3 = v15;
    }
    else
    {
      swift_unknownObjectRelease(v15);
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    swift_unknownObjectRelease(v12);
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return sub_1000073A0((uint64_t)v35, (uint64_t *)&unk_1006655F0);
}

char *sub_10029EB54()
{
  uint64_t v0;
  char *Strong;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  _QWORD v10[6];
  char v11[24];
  _QWORD v12[3];
  char *v13;
  uint64_t v14;

  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  v2 = Strong;
  if (Strong)
  {
    if (objc_msgSend(Strong, "isCollapsed"))
    {
      v3 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
      v4 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

      v6 = *(id *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
      v7 = sub_10002D318((uint64_t)v6, v5);

      swift_bridgeObjectRelease(v5);
      v2 = 0;
      if ((v7 & 1) == 0)
        return v2;
    }
    else
    {

    }
    swift_beginAccess(v0 + 96, v11, 0, 0);
    sub_10000AC28(v0 + 96, (uint64_t)v10);
    sub_10000AEFC();
    sub_10000AEA4(v10);
    v2 = v13;
    if (v13)
    {
      v8 = v14;
      sub_10001413C(v12, (uint64_t)v13);
      v2 = (char *)(*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v8);
      sub_100027F10(v12);
    }
    else
    {
      sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_1006655F0);
    }
  }
  return v2;
}

char *sub_10029ECC0()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char *v12;
  _QWORD v14[6];
  char v15[24];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "traitCollection");

    v4 = objc_msgSend(v3, "horizontalSizeClass");
    if (v4 == (id)1)
    {
      v5 = (char *)swift_unknownObjectWeakLoadStrong(v0 + 48);
      v6 = v5;
      if (!v5)
        return v6;
      if (objc_msgSend(v5, "isCollapsed"))
      {
        v7 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController], "viewControllers");
        v8 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
        v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

        v10 = *(id *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
        v11 = sub_10002D318((uint64_t)v10, v9);

        swift_bridgeObjectRelease(v9);
        if ((v11 & 1) == 0)
          return 0;
      }
      else
      {

      }
    }
  }
  swift_beginAccess(v0 + 96, v15, 0, 0);
  sub_10000AC28(v0 + 96, (uint64_t)v14);
  sub_10029EE3C();
  v6 = v12;
  sub_10000AEA4(v14);
  return v6;
}

void sub_10029EE3C()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_10000AC28(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10029EE7C()
{
  uint64_t v1;

  sub_10000AEA4(&v1);
  return 0;
}

void sub_10029EEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;

  sub_10002E37C(&a15, (uint64_t)&a10);
  v15 = (_QWORD *)(*sub_10001413C(&a10, a13)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  v16 = v15[1];
  ObjectType = swift_getObjectType(*v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  sub_100027F10(&a10);
  JUMPOUT(0x10029EE8CLL);
}

void sub_10029EEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;

  sub_10002E37C(&a15, (uint64_t)&a10);
  v15 = (_QWORD *)(*sub_10001413C(&a10, a13)
                 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
  v16 = v15[1];
  ObjectType = swift_getObjectType(*v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  sub_100027F10(&a10);
  JUMPOUT(0x10029EE8CLL);
}

void sub_10029EF54()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_10000AC28(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10029EF90()
{
  uint64_t v0;
  uint64_t v2;

  sub_10000AEA4(&v2);
  return v0;
}

uint64_t sub_10029EFAC()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFB4()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFBC()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFC4()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFCC()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFD4()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFDC()
{
  return sub_10029EF90();
}

uint64_t sub_10029EFE4(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(a3 + 40);
  v6 = swift_unknownObjectRetain(v4);
  v7 = a1(v6, v5);
  swift_unknownObjectRelease(v4);
  return v7;
}

uint64_t sub_10029F030(_BYTE *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  NSString v12;
  id v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BYTE v24[24];
  _QWORD v25[5];

  if (*a1 != 1)
  {
    v9 = (void *)objc_opt_self(REMError);
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease(0xE000000000000000);
    v22 = 0xD000000000000028;
    v23 = 0x8000000100571B90;
    v10._countAndFlagsBits = a2;
    v10._object = a3;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 125;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    v8 = 0x8000000100571B90;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0x8000000100571B90);
    v13 = objc_msgSend(v9, "internalErrorWithDebugDescription:", v12);
LABEL_6:
    v13;

    swift_willThrow(v18);
    return v8;
  }
  v6 = a4 + 96;
  swift_beginAccess(a4 + 96, v24, 0, 0);
  sub_10000AC28(v6, (uint64_t)&v22);
  sub_10000AEFC();
  sub_10000AEA4(&v22);
  if (!v21)
  {
    sub_1000073A0((uint64_t)&v20, (uint64_t *)&unk_1006655F0);
    v14 = (void *)objc_opt_self(REMError);
    v22 = 0;
    v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(78);
    v15._countAndFlagsBits = 0xD00000000000004BLL;
    v15._object = (void *)0x8000000100571BC0;
    String.append(_:)(v15);
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    v17._countAndFlagsBits = 125;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    v8 = v23;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    v13 = objc_msgSend(v14, "internalErrorWithDebugDescription:", v12);
    goto LABEL_6;
  }
  sub_10002E37C(&v20, (uint64_t)v25);
  sub_100010634((uint64_t)v25, (uint64_t)&v22);
  v7 = sub_10002A750(&qword_100653120);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = Promise.init(value:)(&v22);
  sub_100027F10(v25);
  return v8;
}

uint64_t sub_10029F264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a1;
  firstly<A>(closure:)(sub_10029FC6C, v14, &type metadata for Bool);
  v8 = (_QWORD *)swift_allocObject(&unk_1005FD450, 40, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  swift_bridgeObjectRetain(a3);
  v9 = swift_retain();
  v10 = (void *)zalgo.getter(v9);
  v11 = sub_10002A750((uint64_t *)&unk_100649CC0);
  v12 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_100287030, v8, v11);
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_10029F340(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v7 = swift_allocObject(&unk_1005FD478, 24, 7);
  swift_weakInit(v7 + 16, a1);
  v8 = swift_allocObject(&unk_1005FD658, 26, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_BYTE *)(v8 + 24) = a3;
  *(_BYTE *)(v8 + 25) = a4;
  v9 = swift_retain();
  v10 = (void *)zalgo.getter(v9);
  v11 = dispatch thunk of Promise.then<A>(on:closure:)(v10, sub_10029FE58, v8, &type metadata for Bool);
  swift_release();
  swift_release();

  return v11;
}

_QWORD *sub_10029F410()
{
  _QWORD *v0;

  sub_1000381C8((uint64_t)(v0 + 2));
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectWeakDestroy(v0 + 6);
  swift_release();
  swift_unknownObjectRelease(v0[8]);
  swift_release();
  swift_bridgeObjectRelease(v0[11]);
  sub_10000AEA4(v0 + 12);
  return v0;
}

uint64_t sub_10029F464()
{
  uint64_t v0;

  sub_10029F410();
  return swift_deallocClassInstance(v0, 137, 7);
}

uint64_t assignWithCopy for TTRIRootRouter.CurrentDetailContents(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD)
      v4 = *(_DWORD *)a1 + 13;
    if (v4 <= 0xC)
      sub_100027F10((_QWORD *)a1);
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 0xD)
      v5 = *(_DWORD *)a2 + 13;
    switch(v5)
    {
      case 0u:
        v6 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      case 1u:
        v9 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v9;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v9 - 8))(a1, a2);
        v10 = 1;
        goto LABEL_23;
      case 2u:
        v11 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
        v10 = 2;
        goto LABEL_23;
      case 3u:
        v12 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v12;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v12 - 8))(a1, a2);
        v10 = 3;
        goto LABEL_23;
      case 4u:
        v13 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v13;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v13 - 8))(a1, a2);
        v10 = 4;
        goto LABEL_23;
      case 5u:
        v14 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v14;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v14 - 8))(a1, a2);
        v10 = 5;
        goto LABEL_23;
      case 6u:
        v15 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v15;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v15 - 8))(a1, a2);
        v10 = 6;
        goto LABEL_23;
      case 7u:
        v16 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v16;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v16 - 8))(a1, a2);
        v10 = 7;
        goto LABEL_23;
      case 8u:
        v17 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v17;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v17 - 8))(a1, a2);
        v10 = 8;
        goto LABEL_23;
      case 9u:
        v18 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v18;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v18 - 8))(a1, a2);
        v10 = 9;
        goto LABEL_23;
      case 0xAu:
        v19 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v19;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v19 - 8))(a1, a2);
        v10 = 10;
        goto LABEL_23;
      case 0xBu:
        v20 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v20;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v20 - 8))(a1, a2);
        v10 = 11;
        goto LABEL_23;
      case 0xCu:
        v21 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v21;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v21 - 8))(a1, a2);
        v10 = 12;
LABEL_23:
        *(_BYTE *)(a1 + 40) = v10;
        break;
      default:
        v7 = *a2;
        v8 = a2[1];
        *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
        break;
    }
  }
  return a1;
}

__n128 initializeWithTake for TTRIRootRouter.CurrentDetailContents(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIRootRouter.CurrentDetailContents(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD)
      v4 = *(_DWORD *)a1 + 13;
    if (v4 <= 0xC)
      sub_100027F10((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xD)
      v5 = *(_DWORD *)a2 + 13;
    switch(v5)
    {
      case 0u:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      case 1u:
        v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 1;
        goto LABEL_23;
      case 2u:
        v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 2;
        goto LABEL_23;
      case 3u:
        v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 3;
        goto LABEL_23;
      case 4u:
        v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 4;
        goto LABEL_23;
      case 5u:
        v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 5;
        goto LABEL_23;
      case 6u:
        v14 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 6;
        goto LABEL_23;
      case 7u:
        v15 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 7;
        goto LABEL_23;
      case 8u:
        v16 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 8;
        goto LABEL_23;
      case 9u:
        v17 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v17;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 9;
        goto LABEL_23;
      case 0xAu:
        v18 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 10;
        goto LABEL_23;
      case 0xBu:
        v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v19;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 11;
        goto LABEL_23;
      case 0xCu:
        v20 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v20;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v9 = 12;
LABEL_23:
        *(_BYTE *)(a1 + 40) = v9;
        break;
      default:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRootRouter.CurrentDetailContents(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF3 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 243);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 0xE)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRIRootRouter.CurrentDetailContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 243;
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_10029F9CC(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 0xD)
    return (*(_DWORD *)a1 + 13);
  return result;
}

uint64_t sub_10029F9E8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 13;
    LOBYTE(a2) = 13;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRootRouter.CurrentDetailContents()
{
  return &type metadata for TTRIRootRouter.CurrentDetailContents;
}

uint64_t sub_10029FA20()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (!Strong)
    return 0;
  v2 = (void *)Strong;
  v3 = UIViewController.topPresentedViewController.getter();

  return v3;
}

uint64_t sub_10029FA60@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10029FA98(__int128 *a1, uint64_t a2)
{
  assignWithCopy for TTRIRootRouter.CurrentDetailContents(a2, a1);
  return a2;
}

void sub_10029FACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Strong;
  char *v6;
  char *v7;
  char v8;
  char *v9;

  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 48);
  if (Strong)
  {
    v6 = (char *)Strong;
    sub_10023C05C(1);
    sub_10001413C((_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
    v7 = sub_10029ECC0();
    if (v8 != -1)
    {
      if ((v8 & 1) == 0)
      {
LABEL_6:
        v9 = v7;
        sub_10023C2C8(v7);

        return;
      }
      sub_1000760F4(v7, v8);
    }
    v7 = 0;
    goto LABEL_6;
  }
}

uint64_t sub_10029FB7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029FBA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002A019C(a1);
}

uint64_t sub_10029FBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10029FC14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8) + 80);
  return sub_10029E3B0(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10029FC74()
{
  return sub_100006708(33);
}

void sub_10029FC7C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_10033FD00(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_10029FC98()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10029FCBC(uint64_t a1)
{
  uint64_t v1;

  return sub_10029E0C8(a1, v1, (uint64_t)&unk_1005FD518, (uint64_t)sub_10002E400, (uint64_t)sub_10029FBA0);
}

uint64_t sub_10029FCEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10029FD18()
{
  uint64_t v0;

  sub_10033F354(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10029FD4C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029FD70@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *a1 = v2;
  return swift_unknownObjectRetain(v2);
}

uint64_t sub_10029FD90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10029AF38(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_10029FDA0()
{
  return sub_100006708(33);
}

uint64_t sub_10029FDA8()
{
  return sub_100006708(33);
}

uint64_t sub_10029FDB0()
{
  return sub_100006708(32);
}

void sub_10029FDB8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_10034080C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10029FDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10029B150(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10029FDD8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v2 + 32);
  v3 = *(_QWORD *)(v2 + 40);
  v5 = swift_unknownObjectRetain(v4);
  v6 = v1(v5, v3);
  swift_unknownObjectRelease(v4);
  return v6;
}

uint64_t sub_10029FE2C()
{
  return sub_100006708(32);
}

uint64_t sub_10029FE34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

void sub_10029FE58(char *a1@<X8>)
{
  uint64_t v1;

  sub_100340CFC(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_BYTE *)(v1 + 25), a1);
}

uint64_t sub_10029FE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10029FEEC(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8) + 80);
  sub_100340E6C(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_10029FF48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100653C04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10004A08C;
  return sub_10029D540(a1, v4, v5, v6);
}

uint64_t sub_10029FFB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

void sub_10029FFE0(uint64_t *a1)
{
  uint64_t v1;

  sub_10029E754(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_10029FFFC(uint64_t a1)
{
  uint64_t v1;

  return sub_10029E0C8(a1, v1, (uint64_t)&unk_1005FD810, (uint64_t)sub_10002E400, (uint64_t)sub_10029FBA0);
}

uint64_t sub_1002A002C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1002A0050(void *a1, char a2)
{
  uint64_t v2;

  sub_10033F038(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

_OWORD *sub_1002A0060(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1002A0078(uint64_t a1, uint64_t a2)
{
  assignWithTake for TTRIRootRouter.CurrentDetailContents(a2, a1);
  return a2;
}

uint64_t sub_1002A00AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10029E0C8(a1, v1, (uint64_t)&unk_1005FD888, (uint64_t)sub_10002E400, (uint64_t)sub_10029FBA0);
}

uint64_t sub_1002A00DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1002A0140()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10033F998(v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_1002A019C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1002A0200(_BYTE *a1@<X8>)
{
  sub_10029FDB8(a1);
}

void sub_1002A0218(_BYTE *a1@<X8>)
{
  sub_10029FC7C(a1);
}

void sub_1002A022C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;

  v2 = OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu];
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu] = a1;
  if (a1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain(v3);
      v5 = swift_bridgeObjectRetain(a1);
      v6 = sub_100096A1C(v5, v3);
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v3);
      if ((v6 & 1) != 0)
      {
        swift_bridgeObjectRelease(v3);
        return;
      }
    }
  }
  else if (!v3)
  {
    return;
  }
  v7 = sub_1002A06B8();
  v8 = *(_QWORD *)&v1[v2];
  if (v8)
  {
    v9 = swift_allocObject(&unk_1005FD928, 24, 7);
    *(_QWORD *)(v9 + 16) = v1;
    v10 = swift_allocObject(&unk_1005FD950, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_1002A1340;
    *(_QWORD *)(v10 + 24) = v9;
    v11 = sub_1000771DC();
    swift_bridgeObjectRetain(v8);
    v12 = v1;
    v13 = (id)TTRValueBasedMenu.buildMenu(selectionHandler:)(sub_100100080, v10, v8, &type metadata for TTRAccountsListsViewModel.HashtagFilterOperation.Option, v11);
    swift_bridgeObjectRelease(v8);
    swift_release(v10);
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v7, "setMenu:", v13);
  swift_bridgeObjectRelease(v3);

}

void sub_1002A03A4(char a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  unsigned __int8 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v31 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v31 - v12;
  v14 = sub_1002A06B8();
  v15 = objc_msgSend(v14, "isHidden");

  if ((v15 & 1) != 0)
  {
    if ((a1 & 1) == 0)
    {
      v16 = (uint64_t *)TTRAccesibility.General.Announcements.MoreOptionsShown.unsafeMutableAddressor();
      v17 = *v16;
      v18 = v16[1];
      swift_bridgeObjectRetain(v18);
LABEL_6:
      v19 = sub_1002A06B8();
      objc_msgSend(v19, "setHidden:", 0, v31);
      goto LABEL_10;
    }
    v17 = 0;
    v18 = 0;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      v17 = 0;
      v18 = 0;
      goto LABEL_6;
    }
    v20 = (uint64_t *)TTRAccesibility.General.Announcements.FewerOptionsShown.unsafeMutableAddressor();
    v17 = *v20;
    v18 = v20[1];
    swift_bridgeObjectRetain(v18);
  }
  v19 = sub_1002A06B8();
  objc_msgSend(v19, "setHidden:", 1, v31);
LABEL_10:

  if (v18)
  {
    v21 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
    v22 = (void *)static OS_dispatch_queue.main.getter(v21);
    static DispatchTime.now()();
    + infix(_:_:)(v11, 0.5);
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23(v11, v7);
    v24 = swift_allocObject(&unk_1005FD8D8, 32, 7);
    *(_QWORD *)(v24 + 16) = v17;
    *(_QWORD *)(v24 + 24) = v18;
    aBlock[4] = sub_1002A1314;
    v36 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100006378;
    aBlock[3] = &unk_1005FD8F0;
    v25 = _Block_copy(aBlock);
    swift_release(v36);
    static DispatchQoS.unspecified.getter(v26);
    aBlock[0] = _swiftEmptyArrayStorage;
    v27 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = sub_10002A750((uint64_t *)&unk_100640F40);
    v29 = sub_10002D190();
    v30 = v31;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v31, v27);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v6, v3, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v30);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
    v23(v13, v7);
  }
}

id sub_1002A06B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton);
  }
  else
  {
    v4 = sub_1002A0B18();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1002A0714(char a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_delegate);
  if (result)
  {
    v5 = result;
    ObjectType = swift_getObjectType(result, v4);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIAccountsListsTagsSectionHeaderViewDelegate))
      v7 = v5;
    else
      v7 = 0;
    if (v7)
      sub_1000754A0(a1 & 1);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_1002A078C()
{
  UIAccessibilityNotifications v0;
  NSString v1;

  v0 = UIAccessibilityAnnouncementNotification;
  v1 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v0, v1);

}

char *sub_1002A07D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  double v5;
  NSString v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  id v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton] = 0;
  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v6 = 0;
  }
  v21.receiver = v2;
  v21.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v21, "initWithReuseIdentifier:", v6, v5);

  v8 = *(void **)&v7[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView];
  v9 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100521130;
  v11 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  v12 = *(void **)&v7[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView];
  *(_QWORD *)(v10 + 32) = v12;
  v13 = v7;
  v14 = v8;
  v15 = v12;
  *(_QWORD *)(v10 + 40) = sub_1002A06B8();
  v16 = sub_1002A11C4();
  *(_QWORD *)(v10 + 48) = v16;
  specialized Array._endMutation()(v16);
  v17 = v10;
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = sub_1002A06B8();
  objc_msgSend(v19, "setCustomAlignmentRectInsets:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  objc_msgSend(*(id *)&v7[v11], "setIsAccessibilityElement:", 0);
  sub_1002A0998();

  return v13;
}

id sub_1002A0998()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView);
  v4 = v1 & 1;
  if ((v1 & 1) != 0)
    v5 = 1;
  else
    v5 = 2;
  objc_msgSend(v3, "setAxis:", v4);
  return objc_msgSend(v3, "setAlignment:", v5);
}

void *sub_1002A0B18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v0 = sub_10002A750(&qword_100646D68);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIButton.Configuration.Size(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIButton.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v18 - v13;
  static UIButton.Configuration.plain()(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.Size.small(_:), v3);
  UIButton.Configuration.buttonSize.setter(v6);
  UIConfigurationTextAttributesTransformer.init(_:)(sub_1002A0CF8, 0);
  v15 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v2, 0, 1, v15);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v2);
  sub_100005ED8(0, &qword_10064C990, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
  v16 = (void *)UIButton.init(configuration:primaryAction:)(v11, 0);
  objc_msgSend(v16, "setChangesSelectionAsPrimaryAction:", 1);
  objc_msgSend(v16, "setShowsMenuAsPrimaryAction:", 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  return v16;
}

uint64_t sub_1002A0CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath(&unk_10052C9C8);
  KeyPath = swift_getKeyPath(&unk_10052C9F8);
  v6 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v9 = static UIFont.roundedBodyFont.getter(v6);
  v7 = sub_100019EC8();
  return AttributeContainer.subscript.setter(&v9, KeyPath, v7);
}

void sub_1002A0DA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton));
}

uint64_t sub_1002A0E0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t (*v13)(char *, uint64_t);
  int v14;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v23 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12((char *)&v23 - v10, a1, v2);
  v13 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  v14 = v13(v11, v2);
  if (v14 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
    || v14 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
  {
    return 1;
  }
  v17 = ((uint64_t (*)(char *, char *, uint64_t))v12)(v9, v11, v2);
  static REMHashtagLabelSpecifier.empty.getter(v17);
  v18 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v2, v18);
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v6, v2);
  v20(v9, v2);
  if ((v19 & 1) != 0)
  {
    v20(v11, v2);
    return 1;
  }
  else if (v13(v11, v2) == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v11, v2);
    swift_bridgeObjectRelease(*(_QWORD *)v11);
    swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
    v21 = &v11[*(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64)];
    v22 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    return 0;
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
    __break(1u);
  }
  return result;
}

_QWORD *sub_1002A1008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  _QWORD *v10;
  char v11;
  int v12;
  unsigned __int16 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];
  unsigned __int8 v29;
  char v30;
  _QWORD *v31;

  v4 = type metadata accessor for REMHashtagLabelSpecifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a2);
  v8 = TTRAccountsListsViewModel.HashtagFilterOperation.Option.init(selection:)(v6);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v11 = v8;
    v31 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_1003D82E8(0, v9, 0);
    v10 = v31;
    v12 = v11 & 1;
    v26 = a1;
    v13 = (unsigned __int16 *)(a1 + 56);
    do
    {
      v14 = *((_QWORD *)v13 - 3);
      v15 = *((_QWORD *)v13 - 2);
      v16 = *v13;
      if (v15)
      {
        v27 = BYTE1(v16) & 1;
        v17 = sub_1000771DC();
        TTRValueBasedMenuItem.init(title:image:state:value:)(v28, v14, v15, 0, ((v16 >> 8) & 1) != v12, &v27, &type metadata for TTRAccountsListsViewModel.HashtagFilterOperation.Option, v17);
        v14 = v28[0];
        v18 = v28[1];
        v19 = v28[2];
        if (v30)
          v20 = 256;
        else
          v20 = 0;
        LOWORD(v16) = v20 | v29;
        swift_bridgeObjectRetain(v15);
      }
      else
      {
        v18 = 0;
        v19 = *((_QWORD *)v13 - 1);
      }
      v31 = v10;
      v22 = v10[2];
      v21 = v10[3];
      if (v22 >= v21 >> 1)
      {
        sub_1003D82E8(v21 > 1, v22 + 1, 1);
        v10 = v31;
      }
      v13 += 16;
      v10[2] = v22 + 1;
      v23 = &v10[4 * v22];
      v23[4] = v14;
      v23[5] = v18;
      v23[6] = v19;
      *((_WORD *)v23 + 28) = v16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v26);
  }
  return v10;
}

id sub_1002A11C4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  __n128 v5;
  int v7;
  int v8;
  unsigned __int32 v9;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  type metadata accessor for UILayoutPriority(0);
  v2 = v1;
  v7 = 1120403456;
  v8 = 1132068864;
  v3 = sub_1000175C8((unint64_t *)&qword_10065BE10, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  v4 = static _UIKitNumericRawRepresentable.- infix(_:_:)(&v8, &v7, v2, v3);
  v4.n128_u32[0] = v9;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v4.n128_f64[0]);
  v7 = 1120403456;
  v8 = 1132068864;
  v5 = static _UIKitNumericRawRepresentable.- infix(_:_:)(&v8, &v7, v2, v3);
  v5.n128_u32[0] = v9;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v5.n128_f64[0]);
  return v0;
}

uint64_t sub_1002A12BC()
{
  return 8;
}

uint64_t sub_1002A12C8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1002A12D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1002A12E4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002A12F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A1314()
{
  sub_1002A078C();
}

uint64_t sub_1002A131C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A1340(char a1)
{
  uint64_t v1;

  return sub_1002A0714(a1 & 1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002A134C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1002A1370(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  char v29[24];
  _BYTE v30[24];
  uint64_t v31;
  _UNKNOWN **v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;

  v4 = objc_allocWithZone((Class)TTRUndoManager);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithDebugIdentifier:", v5);

  v7 = type metadata accessor for TTREditTodaySectionsInteractor(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = a1;
  v9 = v6;
  v10 = TTREditTodaySectionsInteractor.init(store:undoManager:)(v8, v9);
  v11 = type metadata accessor for TTRIEditTodaySectionsRouter();
  v12 = swift_allocObject(v11, 32, 7);
  swift_unknownObjectWeakInit(v12 + 16, 0);
  v13 = swift_unknownObjectWeakInit(v12 + 24, 0);
  v34 = v11;
  v35 = &off_1005F91E0;
  v31 = v12;
  v14 = type metadata accessor for TTREditTodaySectionsPresenter(0, v13);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = v9;
  swift_retain();
  swift_retain();
  v16 = TTREditTodaySectionsPresenter.init(interactor:router:undoManager:needsDiscardChangesConfirmation:)(v10, &protocol witness table for TTREditTodaySectionsInteractor, &v31, v15, 1);
  v17 = type metadata accessor for TTREditTodaySectionsModelObject(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = TTREditTodaySectionsModelObject.init()();
  v30[0] = 0;
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)(&v31, v30, &type metadata for Bool);
  LOBYTE(v5) = v31;
  v19 = v32;
  v20 = (uint64_t *)((char *)objc_allocWithZone((Class)type metadata accessor for TTRIEditTodaySectionsHostingController(0))
                  + qword_100659620);
  *v20 = v16;
  v20[1] = (uint64_t)&protocol witness table for TTREditTodaySectionsPresenter;
  v31 = v16;
  v32 = (_UNKNOWN **)&protocol witness table for TTREditTodaySectionsPresenter;
  v33 = v18;
  LOBYTE(v34) = (_BYTE)v5;
  v35 = v19;
  swift_retain();
  swift_retain_n(v16, 2);
  v21 = v15;
  swift_retain();
  v22 = (void *)TTRIHostingControllerWithCustomUndo.init(rootView:undoManager:)(&v31, v21);
  v23 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v22);
  swift_beginAccess(v10 + 16, &v31, 1, 0);
  *(_QWORD *)(v10 + 24) = &protocol witness table for TTREditTodaySectionsPresenter;
  swift_unknownObjectWeakAssign(v10 + 16, v16);
  swift_beginAccess(v16 + 16, v30, 1, 0);
  *(_QWORD *)(v16 + 24) = &protocol witness table for TTREditTodaySectionsModelObject;
  swift_unknownObjectWeakAssign(v16 + 16, v18);
  swift_beginAccess(v16 + 32, v29, 1, 0);
  *(_QWORD *)(v16 + 40) = a3;
  swift_unknownObjectWeakAssign(v16 + 32, a2);
  swift_unknownObjectWeakAssign(v12 + 16, v22);
  v24 = objc_msgSend(v23, "presentationController", swift_unknownObjectWeakAssign(v12 + 24, v23).n128_f64[0]);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setDelegate:", v22);

  }
  TTREditTodaySectionsInteractor.start()();
  swift_release();
  swift_release();

  swift_release();
  swift_release_n(v16, 2);
  swift_release_n(v18, 2);

  return v23;
}

uint64_t sub_1002A16D0(uint64_t *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v3 = *a1;
  v4 = swift_isaMask;
  v5 = objc_msgSend(v1, "localContext");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v11);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_10023D25C((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    v8 = type metadata accessor for TTRIAnyTreeViewDragSessionContext(0, *(_QWORD *)((v4 & v3) + 0x50), *(_QWORD *)((v4 & v3) + 0x58), v7);
    if ((swift_dynamicCast(&v10, v12, &type metadata for Any[8], v8, 6) & 1) != 0)
    {
      result = v10;
      if (*(uint64_t **)(v10 + qword_1006738F0) == a1)
        return result;
      swift_release(v10);
    }
  }
  else
  {
    sub_1000073A0((uint64_t)v12, &qword_100640E50);
  }
  return 0;
}

uint64_t sub_1002A17C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100653C60);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100653C60);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1002A1858(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  _QWORD *v29;

  v29 = (_QWORD *)a3;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v28 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(qword_100653F80);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRITreeViewDropProposal(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a2, (uint64_t)v13, qword_100653F80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v13, qword_100653F80);
  }
  else
  {
    sub_10001F580((uint64_t)v13, (uint64_t)v17, type metadata accessor for TTRITreeViewDropProposal);
    sub_1002A25DC();
    if ((v18 & 1) != 0)
    {

      sub_1000073A0(a2, qword_100653F80);
      sub_10001F580((uint64_t)v17, (uint64_t)v29, type metadata accessor for TTRITreeViewDropProposal);
      return;
    }
    sub_1002A44B0((uint64_t)v17);
  }
  switch((unint64_t)objc_msgSend(a1, "intent"))
  {
    case 0uLL:
      v19 = sub_10002A750(&qword_100653E50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 4, v19);
      goto LABEL_11;
    case 1uLL:
      v22 = sub_10002A750(&qword_100653E50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 2, 4, v22);
      goto LABEL_11;
    case 2uLL:
      v20 = sub_10002A750(&qword_100653E50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 3, 4, v20);
      goto LABEL_11;
    case 3uLL:
      v21 = sub_10002A750(&qword_100653E50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 4, 4, v21);
LABEL_11:
      v23 = v29;
      v24 = objc_msgSend(a1, "operation");

      sub_1000073A0(a2, qword_100653F80);
      sub_10001F580((uint64_t)v10, (uint64_t)v23 + *(int *)(v14 + 20), type metadata accessor for TTRITreeViewDropProposal.Intent);
      *v23 = v24;
      break;
    default:
      if (qword_10063D5E8 != -1)
        swift_once(&qword_10063D5E8, sub_1002A17C8);
      v25 = sub_100012DC4(v5, (uint64_t)qword_100653C60);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v28, v25, v5);
      v26 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      v27 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
      sub_1002EB23C((uint64_t)"unknown intent", 14, 2uLL, v26, v27);
      __break(1u);
      break;
  }
}

uint64_t sub_1002A1BB4()
{
  uint64_t v0;

  sub_1002A44B0(v0 + qword_100673760);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_100653C78));

  return v0;
}

uint64_t sub_1002A1BF8()
{
  uint64_t v0;

  sub_1002A1BB4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002A1C1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t updated;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = swift_isaMask & *v1;
  v4 = (_QWORD *)((char *)v1 + qword_100653D50);
  swift_beginAccess(v4, v12, 32, 0);
  v5 = *v4;
  v10 = a1;
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v6);
  Dictionary.subscript.getter(&v11, &v10, v5, &type metadata for ObjectIdentifier, updated, &protocol witness table for ObjectIdentifier);
  v8 = v11;
  swift_endAccess(v12);
  return v8;
}

void sub_1002A1CC4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, (void (*)(uint64_t))sub_1002A3904);
}

uint64_t sub_1002A1CD0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  char v8;

  v6 = a3;
  swift_unknownObjectRetain(a4);
  v7 = a1;
  v8 = sub_1002A3B4C(a4);

  swift_unknownObjectRelease(a4);
  return v8 & 1;
}

void sub_1002A1D30(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, sub_1002A3BCC);
}

void sub_1002A1D3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(void *, uint64_t);
  uint64_t Strong;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _BYTE v44[24];

  v7 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v42 = (uint64_t)&v39 - v11;
  v12 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750((uint64_t *)&unk_100653F70);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(uint64_t *)((char *)v3 + qword_100653D48);
  *(uint64_t *)((char *)v3 + qword_100653D48) = a2;
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRetain(a2);
  v20 = sub_1002A1C1C(v19);
  v43 = v9;
  v41 = v12;
  if (!v20)
    v20 = sub_1002A2114(v3, a2);
  v21 = v20;
  v22 = sub_10002A750((uint64_t *)&unk_100654900);
  v23 = (uint64_t)v17 + *(int *)(v22 + 64);
  *v17 = a2;
  v17[1] = (uint64_t)a1;
  sub_10000735C(a3, v23, &qword_100646950);
  v40 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v40(v17, 0, 1, v22);
  v24 = v21 + qword_1006736E8;
  swift_beginAccess(v21 + qword_1006736E8, v44, 33, 0);
  swift_unknownObjectRetain(a2);
  v25 = a1;
  sub_1002A4468((uint64_t)v17, v24);
  swift_endAccess(v44);
  v26 = *(void (**)(void *, uint64_t))((char *)v3 + qword_100653D28);
  Strong = swift_unknownObjectWeakLoadStrong((char *)v3 + qword_100653D08);
  if (Strong)
  {
    v28 = (void *)Strong;
    v29 = (void *)sub_1000E32B0();

    v26(v29, v21);
    v30 = v42;
    v31 = (uint64_t)&v14[*(int *)(v41 + 20)];
    sub_10002B1E8(v31, v42, type metadata accessor for TTRITreeViewDropProposal.Intent);
    v32 = sub_10002A750(&qword_100653E50);
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
    v34 = v33(v30, 4, v32);
    if ((v34 - 2) >= 3)
    {
      if (!v34)
      {
        v35 = type metadata accessor for IndexPath(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v30, v35);
      }
    }
    else
    {
      sub_1000BB214(v21, (uint64_t)v14);
    }
    sub_100113630((uint64_t)v14);
    sub_100113804();
    v40(v17, 1, 1, v22);
    swift_beginAccess(v24, v44, 33, 0);
    sub_1002A4468((uint64_t)v17, v24);
    swift_endAccess(v44);
    v36 = v31;
    v37 = (uint64_t)v43;
    sub_10002B1E8(v36, (uint64_t)v43, type metadata accessor for TTRITreeViewDropProposal.Intent);
    v38 = (char *)&loc_1002A2058 + *((int *)qword_1002A2100 + v33(v37, 4, v32));
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1002A2100);
}

uint64_t sub_1002A2114(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v4 = swift_isaMask;
  result = swift_unknownObjectWeakLoadStrong((char *)a1 + qword_100653D08);
  if (result)
  {
    v7 = result;
    type metadata accessor for TTRITreeViewDropUpdateCoordinator(0, *(_QWORD *)((v4 & v3) + 0x50), *(_QWORD *)((v4 & v3) + 0x58), v6);
    v8 = sub_10010E7BC(v7);
    v9 = swift_retain();
    sub_1002A21B0(v9, a2);
    swift_release();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002A21B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v3 = swift_isaMask & *v2;
  v9 = a2;
  v10 = a1;
  swift_beginAccess((char *)v2 + qword_100653D50, v8, 33, 0);
  updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator(255, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v4);
  v6 = type metadata accessor for Dictionary(0, &type metadata for ObjectIdentifier, updated, &protocol witness table for ObjectIdentifier);
  swift_retain();
  Dictionary.subscript.setter(&v10, &v9, v6);
  return swift_endAccess(v8);
}

id sub_1002A2260(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v19;

  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
    v12 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  }
  else
  {
    v13 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  }
  v14 = a3;
  swift_unknownObjectRetain(a4);
  v15 = a1;
  sub_1002A1D3C(v14, a4, (uint64_t)v11);
  v17 = v16;

  swift_unknownObjectRelease(a4);
  sub_1000073A0((uint64_t)v11, &qword_100646950);
  return v17;
}

void sub_1002A2378(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, sub_1002A3C60);
}

void sub_1002A2384(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1002A2390(a1, a2, a3, a4, sub_1002A3D10);
}

void sub_1002A2390(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v8;
  id v9;

  v8 = a3;
  swift_unknownObjectRetain(a4);
  v9 = a1;
  a5(a4);

  swift_unknownObjectRelease(a4);
}

id sub_1002A23FC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  v13 = (void *)sub_1002A42A8((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

void sub_1002A24B0()
{
  sub_1002A443C();
}

uint64_t sub_1002A24CC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1 + qword_100653D08);
  swift_release(*(_QWORD *)(a1 + qword_100653D10 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D18 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D20 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D28 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D30 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D38 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D40 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_100653D48));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100653D50));
  swift_release(*(_QWORD *)(a1 + qword_100653D58 + 8));
  swift_release(*(_QWORD *)(a1 + qword_100653D60 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_100653D68 + 8));
}

void sub_1002A25DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRITreeViewDropProposal(0);
  sub_10002B1E8(v0 + *(int *)(v4 + 20), (uint64_t)v3, type metadata accessor for TTRITreeViewDropProposal.Intent);
  v5 = sub_10002A750(&qword_100653E50);
  v6 = (char *)sub_1002A268C
     + 4
     * byte_10052CA44[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 4, v5)];
  __asm { BR              X10 }
}

BOOL sub_1002A268C()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = objc_msgSend(objc_allocWithZone((Class)UITableViewDropProposal), "initWithDropOperation:intent:", *v1, 0);
  v5 = objc_msgSend(v4, "operation");
  if (v5 == objc_msgSend(v0, "operation"))
  {
    v6 = objc_msgSend(v4, "intent");
    v7 = objc_msgSend(v0, "intent");

    return v6 == v7;
  }
  else
  {

    return 0;
  }
}

uint64_t UIDropOperation.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6C65636E6163;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6564646962726F66;
      break;
    case 2:
      result = 2037411683;
      break;
    case 3:
      result = 1702260589;
      break;
    default:
      result = 63;
      break;
  }
  return result;
}

uint64_t sub_1002A27DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for TTRITreeViewDropProposal(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 3, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropCoordinator);
}

uint64_t *sub_1002A286C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_10002A750(&qword_100653E50);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 4, v8))
    {
      v10 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 4, v8);
    }
  }
  return v3;
}

uint64_t sub_1002A2960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_10002A750(&qword_100653E50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 4, v3);
  if (!(_DWORD)result)
  {
    v5 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  }
  return result;
}

_QWORD *sub_1002A29CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_10002A750(&qword_100653E50);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 4, v7))
  {
    v9 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  }
  return a1;
}

_QWORD *sub_1002A2A94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_10002A750(&qword_100653E50);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 4, v7);
  v11 = v9(v6, 4, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v5, v6, v15);
      return a1;
    }
    sub_1000073A0((uint64_t)v5, &qword_100653E50);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  return a1;
}

_QWORD *sub_1002A2BB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_10002A750(&qword_100653E50);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 4, v7))
  {
    v9 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  }
  return a1;
}

_QWORD *sub_1002A2C7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_10002A750(&qword_100653E50);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 4, v7);
  v11 = v9(v6, 4, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v5, v6, v15);
      return a1;
    }
    sub_1000073A0((uint64_t)v5, &qword_100653E50);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  return a1;
}

uint64_t sub_1002A2D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A2DA8);
}

uint64_t sub_1002A2DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1002A2DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A2DF4);
}

uint64_t sub_1002A2DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t *sub_1002A2E38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_10002A750(&qword_100653E50);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1002A2F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_10002A750(&qword_100653E50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1002A2F78(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10002A750(&qword_100653E50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1002A302C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_10002A750(&qword_100653E50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_100653E50);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

void *sub_1002A3138(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10002A750(&qword_100653E50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1002A31EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_10002A750(&qword_100653E50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1000073A0((uint64_t)a1, &qword_100653E50);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1002A32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A3304);
}

uint64_t sub_1002A3304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10002A750(&qword_100653E50);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_1002A3354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A3360);
}

uint64_t sub_1002A3360(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = sub_10002A750(&qword_100653E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1002A33B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10002A750(&qword_100653E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_1002A33F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100653E50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

void sub_1002A3438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for IndexPath(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(v0, (uint64_t)v4, v5);
  v6 = sub_10002A750(&qword_100653E50);
  v7 = (char *)sub_1002A352C
     + 4
     * byte_10052CA4D[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 4, v6)];
  __asm { BR              X10 }
}

uint64_t sub_1002A352C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  Swift::String v6;
  void *object;
  __n128 v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 - 56));
  *(_QWORD *)(v4 - 64) = 0xD000000000000013;
  *(_QWORD *)(v4 - 56) = 0x8000000100571F20;
  v5 = sub_1002A377C();
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v5);
  object = v6._object;
  String.append(_:)(v6);
  v8 = swift_bridgeObjectRelease(object);
  v9 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v0, v8);
  return v9;
}

uint64_t sub_1002A3628()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  _QWORD v9[2];

  BYTE5(v9[1]) = 0;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v9, "(operation: ");
  HIWORD(v9[1]) = -5120;
  v1 = 0xE600000000000000;
  v2 = 0x6C65636E6163;
  switch(*v0)
  {
    case 0:
      break;
    case 1:
      v1 = 0xE90000000000006ELL;
      v2 = 0x6564646962726F66;
      break;
    case 2:
      v1 = 0xE400000000000000;
      v2 = 2037411683;
      break;
    case 3:
      v1 = 0xE400000000000000;
      v2 = 1702260589;
      break;
    default:
      v1 = 0xE100000000000000;
      v2 = 63;
      break;
  }
  v3 = v1;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v1);
  v4._countAndFlagsBits = 0x746E65746E69202CLL;
  v4._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v4);
  type metadata accessor for TTRITreeViewDropProposal(0);
  sub_1002A3438();
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v9[0];
}

unint64_t sub_1002A377C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100644910;
  if (!qword_100644910)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_100644910);
  }
  return result;
}

uint64_t sub_1002A37C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v7 = sub_10002A750(qword_100653F80);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + qword_100653C78) = a1;
  *(_QWORD *)(v3 + qword_100653C80) = a2;
  swift_unknownObjectRetain(a1);
  v13 = a2;
  v14 = objc_msgSend(a1, "proposal");
  sub_10000735C(a3, (uint64_t)v9, qword_100653F80);
  sub_1002A1858(v14, (uint64_t)v9, (uint64_t)v12);
  sub_1000073A0(a3, qword_100653F80);
  sub_10001F580((uint64_t)v12, v3 + qword_100673760, type metadata accessor for TTRITreeViewDropProposal);
  return v3;
}

uint64_t sub_1002A3904(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(void *, uint64_t);
  void *v26;
  void *v27;
  char v29[24];

  v2 = v1;
  v4 = *v1;
  v5 = swift_isaMask;
  v6 = sub_10002A750(qword_100653F80);
  __chkstk_darwin(v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v29[-v10 - 8];
  v12 = type metadata accessor for TTRITreeViewDropProposal(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v14 = objc_msgSend(a1, "session");
  v15 = sub_1002A1C1C((uint64_t)v14);
  swift_unknownObjectRelease(v14);
  if (v15)
  {
    sub_100113C68();
    sub_1000073A0((uint64_t)v11, qword_100653F80);
    v16 = v15 + qword_1006736E0;
    swift_beginAccess(v15 + qword_1006736E0, v29, 0, 0);
    sub_10002B1E8(v16, (uint64_t)v11, type metadata accessor for TTRITreeViewDropProposal);
    v17 = swift_release();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t, __n128))v13)(v11, 0, 1, v12, v17);
  }
  v18 = (char *)v2 + qword_100653D08;
  result = swift_unknownObjectWeakLoadStrong((char *)v2 + qword_100653D08);
  if (result)
  {
    v21 = (void *)result;
    v22 = type metadata accessor for TTRITreeViewDropCoordinator(0, *(_QWORD *)((v5 & v4) + 0x50), *(_QWORD *)((v5 & v4) + 0x58), v20);
    sub_10000735C((uint64_t)v11, (uint64_t)v8, qword_100653F80);
    swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    swift_unknownObjectRetain(a1);
    v24 = sub_1002A37C4(v23, v21, (uint64_t)v8);
    swift_unknownObjectRelease(a1);

    v25 = *(void (**)(void *, uint64_t))((char *)v2 + qword_100653D10);
    result = swift_unknownObjectWeakLoadStrong(v18);
    if (result)
    {
      v26 = (void *)result;
      v27 = (void *)sub_1000E32B0();

      v25(v27, v24);
      swift_release();

      return sub_1000073A0((uint64_t)v11, qword_100653F80);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A3B4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void *, uint64_t);
  uint64_t result;
  void *v5;
  void *v6;
  char v7;

  v3 = *(uint64_t (**)(void *, uint64_t))(v1 + qword_100653D18);
  result = swift_unknownObjectWeakLoadStrong(v1 + qword_100653D08);
  if (result)
  {
    v5 = (void *)result;
    v6 = (void *)sub_1000E32B0();

    v7 = v3(v6, a1);
    return v7 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002A3BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(id, uint64_t);
  uint64_t Strong;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(v1 + qword_100653D48);
  *(_QWORD *)(v1 + qword_100653D48) = a1;
  swift_unknownObjectRelease(v3);
  v4 = *(void (**)(id, uint64_t))(v1 + qword_100653D20);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_100653D08);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (id)sub_1000E32B0();
    swift_unknownObjectRetain(a1);

    v4(v7, a1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002A3C60(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(void *, uint64_t);
  uint64_t Strong;
  void *v5;
  void *v6;

  v3 = *(void (**)(void *, uint64_t))(v1 + qword_100653D30);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + qword_100653D08);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void *)sub_1000E32B0();

    v3(v6, a1);
    if (sub_1002A1C1C(a1))
    {
      sub_100113688();
      sub_100113C68();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1002A3D10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(void *, void *);
  uint64_t Strong;
  void *v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  _QWORD v63[2];
  void *v64;
  _QWORD *v65;
  int64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void *, void *);
  char *v74;
  char v75[24];
  _QWORD v76[6];

  v64 = (void *)a1;
  v2 = swift_isaMask & *v1;
  v3 = *(_QWORD *)(v2 + 0x50);
  v4 = type metadata accessor for Optional(0, v3);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v63 - v5;
  v7 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v8);
  v68 = (char *)v63 - v9;
  v71 = *(_QWORD *)(v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v71, v3, &unk_1005987EC, &unk_1005987FC);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v13 = (char *)v63 - v12;
  v14 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  __chkstk_darwin(v14);
  v16 = (_QWORD *)((char *)v63 - v15);
  v17 = *(void (**)(void *, void *))((char *)v1 + qword_100653D38);
  v72 = *(_QWORD *)((char *)v1 + qword_100653D38 + 8);
  v73 = v17;
  v65 = v1;
  v74 = (char *)v1 + qword_100653D08;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + qword_100653D08);
  if (Strong)
  {
    v19 = (void *)Strong;
    v20 = (void *)sub_1000E32B0();

    v21 = v64;
    v73(v20, v64);

    v22 = v65;
    if (sub_1002A1C1C((uint64_t)v21))
    {
      sub_100113C68();
      *(_QWORD *)&v23 = swift_release().n128_u64[0];
    }
    v24 = objc_msgSend(v21, "localDragSession", v23);
    if (!v24)
    {
LABEL_42:
      sub_1002A21B0(0, (uint64_t)v64);
      v62 = *(_QWORD *)((char *)v22 + qword_100653D48);
      *(_QWORD *)((char *)v22 + qword_100653D48) = 0;
      swift_unknownObjectRelease(v62);
      return;
    }
    v25 = v24;
    v26 = swift_unknownObjectWeakLoadStrong(v74);
    if (v26)
    {
      v27 = (void *)v26;
      v28 = (uint64_t *)sub_1000E32B0();

      v29 = sub_1002A16D0(v28);
      swift_unknownObjectRelease(v25);

      v22 = v65;
      if (v29)
      {
        v63[1] = v29;
        v30 = (uint64_t *)(v29 + qword_100673900);
        swift_beginAccess(v29 + qword_100673900, v75, 0, 0);
        v31 = *v30;
        if ((v31 & 0xC000000000000001) != 0)
        {
          if (v31 < 0)
            v32 = v31;
          else
            v32 = v31 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v31);
          v33 = __CocoaSet.makeIterator()(v32);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v71, v3, AssociatedTypeWitness, &unk_1005987EC, &unk_1005987F4);
          v35 = Set.Iterator.init(_cocoa:)(v76, v33, AssociatedTypeWitness, AssociatedConformanceWitness);
          v31 = v76[0];
          v36 = v76[2];
          v71 = v76[1];
          v72 = v76[3];
          v37 = v76[4];
        }
        else
        {
          v38 = -1 << *(_BYTE *)(v31 + 32);
          v39 = *(_QWORD *)(v31 + 56);
          v71 = v31 + 56;
          v40 = ~v38;
          v41 = -v38;
          if (v41 < 64)
            v42 = ~(-1 << v41);
          else
            v42 = -1;
          v37 = v42 & v39;
          swift_bridgeObjectRetain(v31);
          v36 = v40;
          v72 = 0;
        }
        v63[0] = v36;
        v66 = (unint64_t)(v36 + 64) >> 6;
        v67 = v31 & 0x7FFFFFFFFFFFFFFFLL;
        if ((v31 & 0x8000000000000000) == 0)
          goto LABEL_19;
LABEL_34:
        v49 = __CocoaSet.Iterator.next()(v35);
        if (v49)
        {
          v50 = v49;
          _forceBridgeFromObjectiveC<A>(_:_:)(v16, v49, AssociatedTypeWitness, AssociatedTypeWitness);
          swift_unknownObjectRelease(v50);
          while (1)
          {
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, AssociatedTypeWitness);
            (*(void (**)(char *, _QWORD *, uint64_t))(v11 + 32))(v13, v16, AssociatedTypeWitness);
            v51 = swift_unknownObjectWeakLoadStrong(v74);
            if (!v51)
              goto LABEL_44;
            v54 = (void *)v51;
            sub_1000E4548((uint64_t)v13, v52, v53, (uint64_t)v6);

            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v3) == 1)
            {
              (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
              v35 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v6, v70);
              if (v31 < 0)
                goto LABEL_34;
            }
            else
            {
              v73 = (void (*)(void *, void *))v37;
              v55 = v16;
              v56 = v31;
              v57 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
              v58 = v7;
              v59 = (uint64_t)v68;
              v57(v68, v6, v3);
              v60 = swift_unknownObjectWeakLoadStrong(v74);
              if (!v60)
                goto LABEL_45;
              v61 = (void *)v60;
              sub_10010039C(v59, 100);

              (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v3);
              v35 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
              v7 = v58;
              v31 = v56;
              v16 = v55;
              v37 = (unint64_t)v73;
              if (v31 < 0)
                goto LABEL_34;
            }
LABEL_19:
            if (v37)
            {
              v43 = __clz(__rbit64(v37));
              v37 &= v37 - 1;
              v44 = v43 | (v72 << 6);
            }
            else
            {
              v45 = v72 + 1;
              if (__OFADD__(v72, 1))
              {
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
              if (v45 >= v66)
                break;
              v46 = *(_QWORD *)(v71 + 8 * v45);
              v47 = v72 + 1;
              if (!v46)
              {
                v47 = v72 + 2;
                if (v72 + 2 >= v66)
                  break;
                v46 = *(_QWORD *)(v71 + 8 * v47);
                if (!v46)
                {
                  v47 = v72 + 3;
                  if (v72 + 3 >= v66)
                    break;
                  v46 = *(_QWORD *)(v71 + 8 * v47);
                  if (!v46)
                  {
                    v48 = v72 + 4;
                    while (v66 != v48)
                    {
                      v46 = *(_QWORD *)(v71 + 8 * v48++);
                      if (v46)
                      {
                        v47 = v48 - 1;
                        goto LABEL_32;
                      }
                    }
                    break;
                  }
                }
              }
LABEL_32:
              v37 = (v46 - 1) & v46;
              v44 = __clz(__rbit64(v46)) + (v47 << 6);
              v72 = v47;
            }
            (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v16, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v11 + 72) * v44, AssociatedTypeWitness);
          }
        }
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, 1, 1, AssociatedTypeWitness);
        sub_10003E410(v31);
        swift_release();
        v22 = v65;
      }
      goto LABEL_42;
    }
  }
  else
  {
LABEL_46:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002A42A8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(void *, char *);
  void *v20;
  void *v21;
  uint64_t v22;

  v2 = v1;
  v4 = *(_QWORD *)((swift_isaMask & *v2) + 0x50);
  v5 = type metadata accessor for Optional(0, v4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  v13 = (char *)v2 + qword_100653D08;
  result = swift_unknownObjectWeakLoadStrong((char *)v2 + qword_100653D08);
  if (result)
  {
    v17 = (void *)result;
    sub_1000F1E70(a1, v15, v16, (uint64_t)v8);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    v19 = *(uint64_t (**)(void *, char *))((char *)v2 + qword_100653D40);
    result = swift_unknownObjectWeakLoadStrong(v13);
    if (result)
    {
      v20 = (void *)result;
      v21 = (void *)sub_1000E32B0();

      v18 = v19(v21, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
      return v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002A443C()
{
  _swift_stdlib_reportUnimplementedInitializer("Reminders.TTRIAnyTreeViewDropDelegate", 37, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1002A4468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100653F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A44B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRITreeViewDropProposal(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002A44EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 3, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

void **sub_1002A4584(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = ((v9 + ((v8 + 8) & ~v8) + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v14 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  v15 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | v8) > 7 || v14 != 0 || v13 > 0x18)
  {
    a1 = (void **)&v15[((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)];
    swift_retain(v15);
  }
  else
  {
    v18 = ~v8;
    v19 = (char *)a1 + v8;
    v20 = (char *)a2 + v8;
    v21 = (unint64_t)(v19 + 8) & v18;
    v22 = (unint64_t)(v20 + 8) & v18;
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v24 = v15;
    v23(v21, v22, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v21 + v9 + v12) & ~v12, (v22 + v9 + v12) & ~v12, v10);
  }
  return a1;
}

uint64_t sub_1002A46B0(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void **sub_1002A472C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;

  v6 = *a2;
  *a1 = *a2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13 = v6;
  v12(v10, v11, v7);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 16))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v14 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v14 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

void **sub_1002A47E0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a1 + v11 + 8) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v12, v13, v9);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 24))((*(_QWORD *)(v10 + 64) + *(unsigned __int8 *)(v14 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(_QWORD *)(v10 + 64) + *(unsigned __int8 *)(v14 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

_QWORD *sub_1002A4890(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v9, v10, v6);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v11 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v11 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

void **sub_1002A4934(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, v7);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1002A49E0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v12)
    goto LABEL_27;
  v17 = ((v15 + ((v14 + 8) & ~v14) + v16) & ~v16) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)((char *)a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)((char *)a1 + v17);
      if (!*(_WORD *)((char *)a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if ((v11 & 0x80000000) != 0)
      {
        v25 = ((unint64_t)a1 + v14 + 8) & ~v14;
        if ((_DWORD)v8 == v12)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v25, v8, v13);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v25 + v15 + v16) & ~v16, *(unsigned int *)(v10 + 84), v9);
      }
      else
      {
        v24 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v24) = -1;
        return (v24 + 1);
      }
    }
  }
  v19 = *((unsigned __int8 *)a1 + v17);
  if (!*((_BYTE *)a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v15 + ((v14 + 8) & ~(_DWORD)v14) + v16) & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_1002A4BB4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v8 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = ((*(_QWORD *)(v8 + 64) + ((v12 + 8) & ~v12) + v13) & ~v13) + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v15 = 0;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v11 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = &dword_100000004;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = &_mh_execute_header.magic + 1;
  }
  if (v11 < a2)
  {
    v16 = ~v11 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, ((*(_QWORD *)(v8 + 64) + ((v12 + 8) & ~v12) + v13) & ~v13) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, ((*(_QWORD *)(v8 + 64) + ((v12 + 8) & ~v12) + v13) & ~v13) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator.LocalDropItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropCoordinator.LocalDropItem);
}

void sub_1002A4E1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000065C0(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_10052CC60;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

void **sub_1002A4EBC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  int v15;
  char *v16;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  char *v26;
  void *v27;
  const void *v28;
  size_t __n;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  v14 = v13 + 7;
  v15 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  v16 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | v8) > 7
    || v15 != 0
    || ((v13 + 7 + ((v9 + ((v8 + 8) & ~v8) + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (void **)&v16[((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)];
    swift_retain(v16);
  }
  else
  {
    v32 = v10;
    v19 = ~v8;
    __n = v13;
    v31 = ~v12;
    v20 = (char *)a1 + v8;
    v21 = (char *)a2 + v8;
    v22 = (void *)((unint64_t)(v20 + 8) & v19);
    v23 = (char *)((unint64_t)(v21 + 8) & v19);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    v25 = v16;
    if (v24(v23, 1, v6))
    {
      memcpy(v22, v23, v9);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
    }
    v26 = &v23[v9];
    v27 = (void *)(((unint64_t)v22 + v9 + v12) & v31);
    v28 = (const void *)((unint64_t)&v26[v12] & v31);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v28, 1, v32))
    {
      memcpy(v27, v28, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v32);
    }
    *(_OWORD *)(((unint64_t)v27 + v14) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v28 + v14) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1002A50C0(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84))
    ++v9;
  v10 = (v9 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v10, v7);
  return result;
}

void **sub_1002A5194(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;

  v6 = *a2;
  *a1 = *a2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)a2 + v9 + 8) & ~v9);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v6;
  if (v12(v11, 1, v7))
  {
    v14 = *(_DWORD *)(v8 + 84);
    v15 = *(_QWORD *)(v8 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v10, v11, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v14 = *(_DWORD *)(v8 + 84);
    v15 = *(_QWORD *)(v8 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20;
  v22 = (void *)(((unint64_t)v10 + v21) & ~v20);
  v23 = (const void *)(((unint64_t)v11 + v21) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18))
  {
    v24 = *(_DWORD *)(v19 + 84);
    v25 = *(_QWORD *)(v19 + 64);
    if (v24)
      v26 = *(_QWORD *)(v19 + 64);
    else
      v26 = v25 + 1;
    memcpy(v22, v23, v26);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v22, v23, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
    v24 = *(_DWORD *)(v19 + 84);
    v25 = *(_QWORD *)(v19 + 64);
  }
  if (v24)
    v27 = v25;
  else
    v27 = v25 + 1;
  *(_OWORD *)(((unint64_t)v22 + v27 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v23 + v27 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1002A5330(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  size_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)a1 + v11 + 8) & ~v11);
  v13 = (void *)(((unint64_t)a2 + v11 + 8) & ~v11);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v15 = v14(v12, 1, v9);
  v16 = v14(v13, 1, v9);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v12, v13, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v12, v13, v9);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v18 = *(_QWORD *)(v10 + 64);
  else
    v18 = *(_QWORD *)(v10 + 64) + 1;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21;
  v23 = (void *)(((unint64_t)v12 + v22) & ~v21);
  v24 = (void *)(((unint64_t)v13 + v22) & ~v21);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v26 = v25(v23, 1, v19);
  v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v23, v24, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v23, v24, v19);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
  }
  if (*(_DWORD *)(v20 + 84))
    v28 = *(_QWORD *)(v20 + 64);
  else
    v28 = *(_QWORD *)(v20 + 64) + 1;
  memcpy(v23, v24, v28);
LABEL_22:
  if (*(_DWORD *)(v20 + 84))
    v29 = *(_QWORD *)(v20 + 64);
  else
    v29 = *(_QWORD *)(v20 + 64) + 1;
  v30 = (_QWORD *)(((unint64_t)v23 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v24 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v30[1] = v31[1];
  return a1;
}

_QWORD *sub_1002A5564(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  size_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  int v21;
  uint64_t v22;
  size_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
    if (v11)
      v13 = v12;
    else
      v13 = v12 + 1;
    memcpy(v9, v10, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
  }
  if (v11)
    v14 = v12;
  else
    v14 = v12 + 1;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 + v17;
  v19 = (void *)(((unint64_t)v9 + v18) & ~v17);
  v20 = (const void *)(((unint64_t)v10 + v18) & ~v17);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
  {
    v21 = *(_DWORD *)(v16 + 84);
    v22 = *(_QWORD *)(v16 + 64);
    if (v21)
      v23 = *(_QWORD *)(v16 + 64);
    else
      v23 = v22 + 1;
    memcpy(v19, v20, v23);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v19, v20, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    v21 = *(_DWORD *)(v16 + 84);
    v22 = *(_QWORD *)(v16 + 64);
  }
  if (v21)
    v24 = v22;
  else
    v24 = v22 + 1;
  *(_OWORD *)(((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v20 + v24 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1002A56F4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  size_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v6 = *a1;
  *a1 = *a2;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 8) & ~v9);
  v11 = (void *)(((unint64_t)a2 + v9 + 8) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 + v19;
  v21 = (void *)(((unint64_t)v10 + v20) & ~v19);
  v22 = (void *)(((unint64_t)v11 + v20) & ~v19);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23(v21, 1, v17);
  v25 = v23(v22, 1, v17);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v21, v22, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v21, v22, v17);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
  }
  if (*(_DWORD *)(v18 + 84))
    v26 = *(_QWORD *)(v18 + 64);
  else
    v26 = *(_QWORD *)(v18 + 64) + 1;
  memcpy(v21, v22, v26);
LABEL_22:
  if (*(_DWORD *)(v18 + 84))
    v27 = *(_QWORD *)(v18 + 64);
  else
    v27 = *(_QWORD *)(v18 + 64) + 1;
  v28 = (_QWORD *)(((unint64_t)v21 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)(((unint64_t)v22 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  v28[1] = v29[1];
  return a1;
}

uint64_t sub_1002A5924(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unsigned int v24;

  v6 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v8 <= v11)
    v12 = v11;
  else
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v14;
  if (v10)
    v15 = 7;
  else
    v15 = 8;
  if (!a2)
    return 0;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = *(unsigned __int8 *)(v9 + 80);
  if (v13 < a2)
  {
    if (((((v15 + *(_QWORD *)(v9 + 64) + ((v14 + ((v16 + 8) & ~v16) + v17) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v18 = 2;
    else
      v18 = a2 - v13 + 1;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v20 = v19;
    else
      v20 = 0;
    __asm { BR              X6 }
  }
  if ((v12 & 0x80000000) != 0)
  {
    v23 = ((unint64_t)a1 + v16 + 8) & ~v16;
    if (v8 == v13)
    {
      if (v7 >= 2)
      {
        v24 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v23);
        goto LABEL_41;
      }
    }
    else if (v10 >= 2)
    {
      v24 = (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 48))((v23 + v14 + v17) & ~v17, *(unsigned int *)(v9 + 84));
LABEL_41:
      if (v24 >= 2)
        return v24 - 1;
      else
        return 0;
    }
    return 0;
  }
  v21 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_1002A5AFC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v8 = 0;
  v9 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v11 <= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v17;
  v18 = 7;
  if (!v13)
    v18 = 8;
  v19 = ((v18
        + *(_QWORD *)(v12 + 64)
        + ((v17
          + ((*(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v16 < a3)
  {
    if ((((_DWORD)v18
         + *(_DWORD *)(v12 + 64)
         + (((_DWORD)v17
           + ((*(unsigned __int8 *)(v9 + 80) + 8) & ~*(unsigned __int8 *)(v9 + 80))
           + *(unsigned __int8 *)(v12 + 80)) & ~*(unsigned __int8 *)(v12 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v20 = a3 - v16 + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v8 = v21;
    else
      v8 = 0;
  }
  if (a2 > v16)
  {
    if ((_DWORD)v19)
    {
      v22 = ~v16 + a2;
      bzero(a1, v19);
      *a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

uint64_t sub_1002A5C58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  *((_BYTE *)v14 + v16) = 0;
  if (v15)
  {
    if (v11 < 0)
    {
      result &= (unint64_t)v14 + v12 + 8;
      if (v8 == v9)
      {
        if (a3 < 2)
          return result;
        v18 = (v15 + 1);
        v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        a4 = a5;
      }
      else
      {
        if (v5 < 2)
          return result;
        result = (result + v10 + v13) & a2;
        v18 = (v15 + 1);
        v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
        a3 = v5;
      }
      return v19(result, v18, a3, a4);
    }
    if (v15 < 0)
      v17 = v15 ^ 0x80000000;
    else
      v17 = (v15 - 1);
    *v14 = v17;
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator.DropItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropCoordinator.DropItem);
}

uint64_t sub_1002A5D24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _BYTE v7[32];
  _QWORD v8[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v7, v4, (char *)&value witness table for Builtin.Int64 + 64);
    v8[0] = v7;
    swift_getTupleTypeLayout2(v6, v4, (char *)&value witness table for Builtin.Int64 + 64);
    v8[1] = v6;
    swift_getTupleTypeLayout2(v5, v4, (char *)&value witness table for Builtin.Int64 + 64);
    v8[2] = v5;
    swift_initEnumMetadataMultiPayload(a1, 0, 3, v8);
    return 0;
  }
  return result;
}

_QWORD *sub_1002A5DE4(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  int v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 9;
  v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x1000F8) != 0 || v8 > 0x18)
  {
    v11 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
    swift_retain(v11);
  }
  else
  {
    v12 = v7 + 8;
    v13 = (v7 + 8) & 0xFFFFFFF8;
    v14 = __src[v7 + 8];
    if (v13)
      v15 = v14 >= 3;
    else
      v15 = 0;
    if (v15)
      v14 = *(_DWORD *)__src + 3;
    if (v14 == 2)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v4 + v12) = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v4 + v12) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8);
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v4 + v12) = 0;
    }
  }
  return v4;
}

_DWORD *sub_1002A5F58(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = ((*(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v4 = v3 & 0xFFFFFFF8;
  v5 = *((unsigned __int8 *)result + v3);
  if (v5 >= 3 && v4 != 0)
    v5 = *result + 3;
  if (v5 <= 2)
    return (_DWORD *)(*(uint64_t (**)(void))(v2 + 8))();
  return result;
}

_BYTE *sub_1002A5FA0(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = __src[v7 + 8];
  if (v9 >= 3 && ((v7 + 8) & 0xFFFFFFF8) != 0)
    v9 = *(_DWORD *)__src + 3;
  if (v9 == 2)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 2;
  }
  else if (v9 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 1;
  }
  else if (v9)
  {
    memcpy(__dst, __src, v7 + 9);
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1002A60D4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v13;
  BOOL v14;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v9 = v8 + 8;
    v10 = (v8 + 8) & 0xFFFFFFF8;
    v11 = __dst[v8 + 8];
    if (v11 >= 3 && v10 != 0)
      v11 = *(_DWORD *)__dst + 3;
    if (v11 <= 2)
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v13 = __src[v9];
    if (v10)
      v14 = v13 >= 3;
    else
      v14 = 0;
    if (v14)
      v13 = *(_DWORD *)__src + 3;
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v8 + 9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1002A625C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = __src[v7 + 8];
  if (v9 >= 3 && ((v7 + 8) & 0xFFFFFFF8) != 0)
    v9 = *(_DWORD *)__src + 3;
  if (v9 == 2)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 2;
  }
  else if (v9 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 1;
  }
  else if (v9)
  {
    memcpy(__dst, __src, v7 + 9);
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v8] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1002A6390(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v13;
  BOOL v14;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v9 = v8 + 8;
    v10 = (v8 + 8) & 0xFFFFFFF8;
    v11 = __dst[v8 + 8];
    if (v11 >= 3 && v10 != 0)
      v11 = *(_DWORD *)__dst + 3;
    if (v11 <= 2)
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v13 = __src[v9];
    if (v10)
      v14 = v13 >= 3;
    else
      v14 = 0;
    if (v14)
      v13 = *(_DWORD *)__src + 3;
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v8 + 9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v9] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1002A6518(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v8;

  if (!a2)
    return 0;
  v3 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (a2 < 0xFD)
  {
    v8 = *(unsigned __int8 *)(a1 + v3 + 8);
    if (v8 >= 4)
      return (v8 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    if ((v3 + 9) < 4)
      v4 = ((a2 + 3) >> (8 * (v3 + 9))) + 1;
    else
      v4 = 2;
    if (v4 >= 0x10000)
      v5 = 4;
    else
      v5 = 2;
    if (v4 < 0x100)
      v5 = 1;
    if (v4 >= 2)
      v6 = v5;
    else
      v6 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1002A6588 + 4 * byte_10052CA73[v6]))();
  }
}

void sub_1002A65F8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + 9;
  if (a3 < 0xFD)
  {
    v9 = 0;
    if (a2 > 0xFC)
      goto LABEL_14;
  }
  else
  {
    if (v6 <= 3)
      v7 = ((a3 + 3) >> (8 * (v5 + 9))) + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 > 0xFC)
    {
LABEL_14:
      if (v6 >= 4)
        v10 = a2 - 253;
      else
        v10 = (a2 + 3);
      bzero(a1, v6);
      if ((_DWORD)v6 == 1)
        *a1 = v10;
      else
        *(_DWORD *)a1 = v10;
      __asm { BR              X10 }
    }
  }
  __asm { BR              X11 }
}

void sub_1002A66FC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1002A6704(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1002A670CLL);
}

void sub_1002A6718(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a1)
    *(_BYTE *)(v2 + a2) = -(char)a1;
}

void sub_1002A6724()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1002A6748(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v3 = v2 & 0xFFFFFFF8;
  v4 = *((unsigned __int8 *)a1 + v2);
  if (v4 >= 3 && v3 != 0)
    return (*a1 + 3);
  return v4;
}

void sub_1002A6784(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;

  v4 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 > 2)
  {
    v5 = a2 - 3;
    a1[v4] = 3;
    bzero(a1, v4);
    *(_DWORD *)a1 = v5;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for TTRITreeViewDropDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B51C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRITreeViewDropDestination);
}

uint64_t sub_1002A67F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  unint64_t v7;

  v6 = a1;
  v7 = sub_1002A685C();
  v2 = sub_100028D70(v5);
  sub_1000493D8(v1, (uint64_t)v2);
  sub_10001413C(v5, v6);
  v3 = TTRRemindersListViewModel.Item.debugDescription.getter();
  sub_100027F10(v5);
  return v3;
}

unint64_t sub_1002A685C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100654110;
  if (!qword_100654110)
  {
    v1 = type metadata accessor for TTRRemindersListViewModel.Item(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TTRRemindersListViewModel.Item, v1);
    atomic_store(result, (unint64_t *)&qword_100654110);
  }
  return result;
}

uint64_t sub_1002A68A4(_QWORD *a1, void **a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  void *v27;
  void (*v28)(char *, char *, _QWORD *);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  id v73;
  void (*v74)(id, _UNKNOWN **, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, _UNKNOWN **);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v89;
  _QWORD *v90;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[4];
  __int128 v106;
  __int128 v107;
  _QWORD v108[16];
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;

  v100 = a1;
  v101 = a4;
  v99 = a3;
  v5 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v6 = __chkstk_darwin(v5);
  v93 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v92 = (uint64_t)&v92 - v8;
  v96 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v96);
  v102 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v95);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v13 = *(v12 - 1);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v92 - v17;
  v19 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v22);
  v24 = (void **)((char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = a2;
  v26 = sub_10002B1E8((uint64_t)a2, (uint64_t)v24, v25);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v26);
  sub_100041F70(v24, (uint64_t)v21, 0, (uint64_t)v108);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(2);
  v27 = *a2;
  v28 = *(void (**)(char *, char *, _QWORD *))(v13 + 16);
  v97 = v18;
  v28(v16, v18, v12);
  v29 = type metadata accessor for TTRShowGroupWithSectionsDataModelSource(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = TTRShowGroupWithSectionsDataModelSource.init(group:store:countCompleted:sortingStyle:canChangeSortingStyle:)(v99, v27, 2, v16, 0);
  v31 = (void *)v108[0];
  v98 = v13;
  v99 = v12;
  (*(void (**)(char *, _QWORD, _QWORD *))(v13 + 104))(v11, enum case for REMRemindersListDataView.SortingStyle.default(_:), v12);
  swift_storeEnumTagMultiPayload(v11, v95, 0);
  v32 = type metadata accessor for TTRShowGroupViewModelSource(0);
  v33 = (_QWORD *)swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = v31;
  v35 = sub_1002A8978(v30, v34, (uint64_t)v11, 0, v33);

  sub_10002B1E8((uint64_t)v94, (uint64_t)v24, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v108, (uint64_t)v105);
  swift_retain(v35);
  sub_100042A94((uint64_t)v24, (uint64_t)v105, v35, (uint64_t)&off_100609110, v102);
  v36 = v92;
  sub_100042C0C(v92);
  v37 = type metadata accessor for TTRIShowGroupPresenter(0);
  v38 = *(unsigned int *)(v37 + 48);
  v39 = *(unsigned __int16 *)(v37 + 52);
  v94 = (_QWORD *)v37;
  v40 = swift_allocObject(v37, v38, v39);
  v41 = (uint64_t *)(v40 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  *v41 = v30;
  v41[1] = (uint64_t)&protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  v42 = (uint64_t)v93;
  sub_10002B1E8(v36, (uint64_t)v93, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v95 = v30;
  swift_retain(v30);
  v43 = v101;
  swift_unknownObjectRetain(v101);
  v44 = (_QWORD *)sub_1002A70CC(v42, v43, v40);
  sub_10001F544(v36, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v45 = v44[18];
  ObjectType = swift_getObjectType(v44[17], v46);
  v48 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 104);
  swift_retain(v44);
  v49 = v48(ObjectType, v45);
  if (v49)
  {
    v51 = v49;
    v52 = v50;
    v53 = swift_getObjectType(v49, v50);
    LOBYTE(v52) = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v53, v52);
    swift_release(v44);
    swift_unknownObjectRelease(v51);
    v54 = v52 & 1;
  }
  else
  {
    swift_release(v44);
    v54 = 0;
  }
  v55 = sub_100172EB4(v54, (uint64_t)v44);
  v93 = (char *)v56;
  v58 = v57;
  v60 = v59;
  v92 = swift_getObjectType(v57, v56);
  v44[3] = *(_QWORD *)(v60 + 8);
  v101 = v58;
  swift_unknownObjectWeakAssign(v44 + 2, v58);
  v61 = v44[18];
  v63 = swift_getObjectType(v44[17], v62);
  v64 = *(uint64_t (**)(uint64_t, uint64_t))(v61 + 104);
  swift_retain_n(v44, 2);
  v65 = v55;
  v66 = v64(v63, v61);
  v68 = v66;
  if (v66)
  {
    v69 = v67;
    v70 = swift_getObjectType(v66, v67);
    v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(v70, v69);
    swift_release(v44);
    swift_unknownObjectRelease(v68);
    LOBYTE(v68) = v71 & 1;
  }
  else
  {
    swift_release(v44);
  }
  v72 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v73 = sub_1002A8C4C((uint64_t)v44, v65, (uint64_t)v93, v68, 0, 1, 0, v72);
  swift_release(v44);

  v74 = *(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v60 + 32);
  v75 = (char *)v73;
  v93 = v75;
  v74(v73, &off_1005FCD60, v92, v60);
  v76 = v108[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v108[0] + direct field offset for TTRRemindersListInteractor.delegate, &v104, 1, 0);
  *(_QWORD *)(v76 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v76, v44);
  v77 = v108[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v108[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v103, 1, 0);
  *(_QWORD *)(v77 + 8) = &protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  v78 = v95;
  swift_unknownObjectWeakAssign(v77, v95);
  swift_unknownObjectWeakAssign(v108[3] + 16, v75);
  v79 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v78 + 408);
  v80 = swift_retain(v35);
  v79(v80, &off_1005EF8C8);
  swift_retain(v35);
  v81 = swift_retain(v44);
  sub_10048D4EC(v81, (uint64_t)&off_1005F30C0);
  swift_release(v35);
  swift_release(v44);
  v82 = v102;
  v83 = *(_QWORD *)(v102 + *(int *)(v96 + 28));
  *(_QWORD *)(v83 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v83 + 16, v44);
  sub_100028CFC((uint64_t)&v109, (uint64_t)v105);
  v106 = v110;
  v107 = v111;
  v84 = v110 + 32;
  *(_QWORD *)(v110 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v84, v44);
  sub_100027F10(v105);
  sub_100028CFC((uint64_t)&v112, (uint64_t)v105);
  v85 = v113;
  v106 = v113;
  v87 = swift_getObjectType(v113, v86);
  v88 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v85 + 1) + 48);
  swift_retain(v44);
  v89 = swift_unknownObjectRetain(v85);
  v88(v44, &off_1005F2FF0, v87, *((_QWORD *)&v85 + 1), v89);
  swift_unknownObjectRelease(v85);
  sub_100027F10(v105);
  v90 = v100;
  v100[3] = v94;
  v90[4] = &off_1005EC8B0;
  *v90 = v44;
  swift_release(v78);
  swift_release(v35);

  swift_unknownObjectRelease(v101);
  sub_10001F544(v82, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, id))(v98 + 8))(v97, v99);
  sub_100043844((uint64_t)v108);
  return (uint64_t)v93;
}

id TTRIShowGroupAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowGroupAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowGroupAssembly()
{
  return objc_opt_self(_TtC9Reminders21TTRIShowGroupAssembly);
}

id TTRIShowGroupAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowGroupAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002A70CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  __int128 v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  _QWORD v74[5];
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  _UNKNOWN **v78;

  v70 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit(a3 + 16, 0);
  *(_QWORD *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit(a3 + 152, 0);
  *(_OWORD *)(a3 + 176) = xmmword_100522BB0;
  v72 = a3 + 448;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 504) = 0;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v71 = sub_10002A750((uint64_t *)&unk_100649DB0);
  swift_allocObject(v71, *(unsigned int *)(v71 + 48), *(unsigned __int16 *)(v71 + 52));
  *(_QWORD *)(a3 + v11) = CurrentValueSubject.init(_:)(v8);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  v13 = *(_OWORD *)(a1 + 16);
  v62 = *(_OWORD *)a1;
  v63 = v13;
  *(_OWORD *)(a3 + 72) = v62;
  *(_OWORD *)(a3 + 88) = v13;
  v64 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v64;
  sub_100028CFC(a1 + 216, (uint64_t)&v76);
  v69 = a3 + 264;
  v73 = *(_OWORD *)(a1 + 248);
  sub_100028D38(&v76, (_OWORD *)(a3 + 264));
  *(_OWORD *)(a3 + 296) = v73;
  sub_100028CFC(a1 + 264, (uint64_t)&v76);
  v15 = *(_QWORD *)(a1 + 296);
  v14 = *(_QWORD *)(a1 + 304);
  sub_100028D38(&v76, (_OWORD *)(a3 + 312));
  *(_QWORD *)(a3 + 344) = v15;
  *(_QWORD *)(a3 + 352) = v14;
  sub_100010634(a1 + 120, a3 + 192);
  v57 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v57;
  v59 = *(_OWORD *)(a1 + 368);
  *(_OWORD *)(a3 + 248) = v59;
  v16 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v17 = *(int *)(v16 + 100);
  v18 = v16;
  v68 = v16;
  *(_BYTE *)(a3 + 168) = *(_BYTE *)(a1 + v17);
  *(_QWORD *)(a3 + 160) = &off_1005FA030;
  swift_unknownObjectWeakAssign(a3 + 152, a2);
  v19 = *(_QWORD *)a1;
  v67 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 32);
  v66 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 48);
  v58 = *(id *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 104);
  v65 = *(_QWORD *)(a1 + 112);
  sub_100010634(a1 + 160, (uint64_t)&v76);
  v23 = *(_QWORD *)(a1 + 200);
  v61 = *(_QWORD *)(a1 + 208);
  v24 = *(_QWORD *)(a1 + 312);
  v60 = *(_QWORD *)(a1 + 320);
  sub_100010634(a1 + 328, (uint64_t)&v75);
  sub_100010634(a1 + *(int *)(v18 + 92), (uint64_t)v74);
  v25 = type metadata accessor for TTRRemindersListPresenterCapability(0);
  v56[1] = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  swift_unknownObjectRetain(v62);
  swift_unknownObjectRetain(v63);
  swift_unknownObjectRetain(v64);
  swift_unknownObjectRetain(v73);
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRetain(v57);
  swift_unknownObjectRetain(v59);
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRetain(v20);
  swift_retain(v21);
  v26 = v58;
  swift_unknownObjectRetain(v22);
  swift_unknownObjectRetain(v23);
  v56[0] = v24;
  swift_unknownObjectRetain(v24);
  v55 = v24;
  v54 = v23;
  v27 = v23;
  v28 = v22;
  v29 = sub_1001BC280(v19, v67, v20, v66, v21, v26, v22, v65, &v76, v54, v61, v55, v60, &v75, v74);
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v20);
  swift_release(v21);

  swift_unknownObjectRelease(v28);
  swift_unknownObjectRelease(v27);
  swift_unknownObjectRelease(v56[0]);
  *(_QWORD *)(a3 + 104) = v29;
  *(_BYTE *)(a3 + 112) = *(_BYTE *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 120) = v31;
  *(_QWORD *)(a3 + 128) = v30;
  v32 = v68;
  sub_100010634(a1 + *(int *)(v68 + 96), a3 + 32);
  v29[3] = &off_1005F3160;
  swift_unknownObjectWeakAssign(v29 + 2, a3);
  v33 = (void *)objc_opt_self(NSNotificationCenter);
  swift_retain(v29);
  swift_retain(v30);
  swift_retain(v31);
  v34 = objc_msgSend(v33, "defaultCenter");
  v76 = 0u;
  v77 = 0u;
  v35 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v36 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v36 + 16, a3);
  swift_retain(v36);
  v37 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(NSCurrentLocaleDidChangeNotification, &v76, v35, sub_10017EA0C, v36);

  swift_release(v36);
  sub_1000073A0((uint64_t)&v76, &qword_100640E50);
  swift_release(v36);
  v38 = *(_QWORD *)(a3 + 496);
  *(_QWORD *)(a3 + 496) = v37;
  swift_release(v38);
  v39 = a1 + *(int *)(v32 + 88);
  v40 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, &v76, 33, 0);
  sub_10017EA14(v39, v40);
  swift_endAccess(&v76);
  v41 = *(_QWORD *)(v69 + 32);
  swift_beginAccess(a3 + 32, v74, 0, 0);
  v42 = *sub_10001413C((_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 56));
  *((_QWORD *)&v77 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  v78 = &off_100608590;
  *(_QWORD *)&v76 = v42;
  v43 = *(_QWORD *)(v41 + 120);
  *(_QWORD *)(v41 + 120) = v29;
  swift_retain(v42);
  swift_release(v43);
  sub_100010634((uint64_t)&v76, (uint64_t)&v75);
  swift_retain(v29);
  sub_1004ACC24((uint64_t)&v75);
  sub_100027F10(&v76);
  *(_QWORD *)&v76 = *(_QWORD *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v44 = v76;
  v45 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v45 + 16, a3);
  v46 = sub_1002A8F78();
  swift_retain(v44);
  v47 = Publisher<>.sink(receiveValue:)(sub_10017EA5C, v45, v71, v46);
  swift_release(v45);
  swift_release(v76);
  v48 = *(_QWORD *)(a3
                  + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v47;
  v49 = swift_release(v48);
  v50 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v49);
  *((_QWORD *)&v77 + 1) = type metadata accessor for TTRUserDefaults(0);
  v78 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  v51 = v50;
  swift_release(v29);
  swift_release(v70);
  *(_QWORD *)&v76 = v51;
  sub_10001F544(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v52 = v72;
  swift_beginAccess(v72, &v75, 33, 0);
  sub_1002A8FC4((uint64_t)&v76, v52);
  swift_endAccess(&v75);
  return a3;
}

uint64_t sub_1002A7834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  _QWORD v69[5];
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  _UNKNOWN **v73;

  v65 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit(a3 + 16, 0);
  *(_QWORD *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit(a3 + 152, 0);
  *(_OWORD *)(a3 + 176) = xmmword_100522BB0;
  v67 = a3 + 448;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 504) = 0;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v66 = sub_10002A750((uint64_t *)&unk_100649DB0);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  *(_QWORD *)(a3 + v11) = CurrentValueSubject.init(_:)(v8);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  v13 = *(_OWORD *)(a1 + 16);
  v57 = *(_OWORD *)a1;
  v58 = v13;
  *(_OWORD *)(a3 + 72) = v57;
  *(_OWORD *)(a3 + 88) = v13;
  v59 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v59;
  sub_100028CFC(a1 + 216, (uint64_t)&v71);
  v64 = a3 + 264;
  v68 = *(_OWORD *)(a1 + 248);
  sub_100028D38(&v71, (_OWORD *)(a3 + 264));
  *(_OWORD *)(a3 + 296) = v68;
  sub_100028CFC(a1 + 264, (uint64_t)&v71);
  v15 = *(_QWORD *)(a1 + 296);
  v14 = *(_QWORD *)(a1 + 304);
  sub_100028D38(&v71, (_OWORD *)(a3 + 312));
  *(_QWORD *)(a3 + 344) = v15;
  *(_QWORD *)(a3 + 352) = v14;
  sub_100010634(a1 + 120, a3 + 192);
  v52 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v52;
  v54 = *(_OWORD *)(a1 + 368);
  *(_OWORD *)(a3 + 248) = v54;
  v16 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v17 = *(int *)(v16 + 100);
  v18 = v16;
  v63 = v16;
  *(_BYTE *)(a3 + 168) = *(_BYTE *)(a1 + v17);
  *(_QWORD *)(a3 + 160) = &off_1005F6110;
  swift_unknownObjectWeakAssign(a3 + 152, a2);
  v19 = *(_QWORD *)a1;
  v62 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 32);
  v61 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 48);
  v53 = *(id *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 104);
  v60 = *(_QWORD *)(a1 + 112);
  sub_100010634(a1 + 160, (uint64_t)&v71);
  v23 = *(_QWORD *)(a1 + 200);
  v56 = *(_QWORD *)(a1 + 208);
  v24 = *(_QWORD *)(a1 + 312);
  v55 = *(_QWORD *)(a1 + 320);
  sub_100010634(a1 + 328, (uint64_t)&v70);
  sub_100010634(a1 + *(int *)(v18 + 92), (uint64_t)v69);
  v25 = type metadata accessor for TTRRemindersListPresenterCapability(0);
  v51[1] = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  swift_unknownObjectRetain(v57);
  swift_unknownObjectRetain(v58);
  swift_unknownObjectRetain(v59);
  swift_unknownObjectRetain(v68);
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRetain(v52);
  swift_unknownObjectRetain(v54);
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRetain(v20);
  swift_retain();
  v26 = v53;
  swift_unknownObjectRetain(v22);
  swift_unknownObjectRetain(v23);
  v51[0] = v24;
  swift_unknownObjectRetain(v24);
  v50 = v24;
  v49 = v23;
  v27 = v23;
  v28 = v22;
  v29 = sub_1001BC280(v19, v62, v20, v61, v21, v26, v22, v60, &v71, v49, v56, v50, v55, &v70, v69);
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v20);
  swift_release();

  swift_unknownObjectRelease(v28);
  swift_unknownObjectRelease(v27);
  swift_unknownObjectRelease(v51[0]);
  *(_QWORD *)(a3 + 104) = v29;
  *(_BYTE *)(a3 + 112) = *(_BYTE *)(a1 + 80);
  v30 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 120) = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a3 + 128) = v30;
  v31 = v63;
  sub_100010634(a1 + *(int *)(v63 + 96), a3 + 32);
  v29[3] = &off_1005F3160;
  swift_unknownObjectWeakAssign(v29 + 2, a3);
  v32 = (void *)objc_opt_self(NSNotificationCenter);
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = objc_msgSend(v32, "defaultCenter");
  v71 = 0u;
  v72 = 0u;
  v34 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v35 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v35 + 16, a3);
  swift_retain();
  v36 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(NSCurrentLocaleDidChangeNotification, &v71, v34, sub_10017EA0C, v35);

  swift_release();
  sub_1000073A0((uint64_t)&v71, &qword_100640E50);
  swift_release();
  *(_QWORD *)(a3 + 496) = v36;
  swift_release();
  v37 = a1 + *(int *)(v31 + 88);
  v38 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, &v71, 33, 0);
  sub_10017EA14(v37, v38);
  swift_endAccess(&v71);
  v39 = *(_QWORD *)(v64 + 32);
  swift_beginAccess(a3 + 32, v69, 0, 0);
  v40 = *sub_10001413C((_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 56));
  *((_QWORD *)&v72 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  v73 = &off_100608590;
  *(_QWORD *)&v71 = v40;
  *(_QWORD *)(v39 + 120) = v29;
  swift_retain();
  swift_release();
  sub_100010634((uint64_t)&v71, (uint64_t)&v70);
  swift_retain();
  sub_1004ACC24((uint64_t)&v70);
  sub_100027F10(&v71);
  *(_QWORD *)&v71 = *(_QWORD *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v41 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v41 + 16, a3);
  v42 = sub_1002A8F78();
  swift_retain();
  v43 = Publisher<>.sink(receiveValue:)(sub_10017EA5C, v41, v66, v42);
  swift_release();
  swift_release();
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v43;
  swift_release();
  v45 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v44);
  *((_QWORD *)&v72 + 1) = type metadata accessor for TTRUserDefaults(0);
  v73 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  v46 = v45;
  swift_release();
  swift_release();
  *(_QWORD *)&v71 = v46;
  sub_10001F544(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v47 = v67;
  swift_beginAccess(v67, &v70, 33, 0);
  sub_1002A8FC4((uint64_t)&v71, v47);
  swift_endAccess(&v70);
  return a3;
}

uint64_t sub_1002A7F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  _QWORD v69[5];
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  _UNKNOWN **v73;

  v65 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit(a3 + 16, 0);
  *(_QWORD *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit(a3 + 152, 0);
  *(_OWORD *)(a3 + 176) = xmmword_100522BB0;
  v67 = a3 + 448;
  *(_OWORD *)(a3 + 360) = 0u;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 504) = 0;
  v10 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v66 = sub_10002A750((uint64_t *)&unk_100649DB0);
  swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
  *(_QWORD *)(a3 + v11) = CurrentValueSubject.init(_:)(v8);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  v13 = *(_OWORD *)(a1 + 16);
  v57 = *(_OWORD *)a1;
  v58 = v13;
  *(_OWORD *)(a3 + 72) = v57;
  *(_OWORD *)(a3 + 88) = v13;
  v59 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v59;
  sub_100028CFC(a1 + 216, (uint64_t)&v71);
  v64 = a3 + 264;
  v68 = *(_OWORD *)(a1 + 248);
  sub_100028D38(&v71, (_OWORD *)(a3 + 264));
  *(_OWORD *)(a3 + 296) = v68;
  sub_100028CFC(a1 + 264, (uint64_t)&v71);
  v15 = *(_QWORD *)(a1 + 296);
  v14 = *(_QWORD *)(a1 + 304);
  sub_100028D38(&v71, (_OWORD *)(a3 + 312));
  *(_QWORD *)(a3 + 344) = v15;
  *(_QWORD *)(a3 + 352) = v14;
  sub_100010634(a1 + 120, a3 + 192);
  v52 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v52;
  v54 = *(_OWORD *)(a1 + 368);
  *(_OWORD *)(a3 + 248) = v54;
  v16 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  v17 = *(int *)(v16 + 100);
  v18 = v16;
  v63 = v16;
  *(_BYTE *)(a3 + 168) = *(_BYTE *)(a1 + v17);
  *(_QWORD *)(a3 + 160) = &off_1005ECC08;
  swift_unknownObjectWeakAssign(a3 + 152, a2);
  v19 = *(_QWORD *)a1;
  v62 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 32);
  v61 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 48);
  v53 = *(id *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 104);
  v60 = *(_QWORD *)(a1 + 112);
  sub_100010634(a1 + 160, (uint64_t)&v71);
  v23 = *(_QWORD *)(a1 + 200);
  v56 = *(_QWORD *)(a1 + 208);
  v24 = *(_QWORD *)(a1 + 312);
  v55 = *(_QWORD *)(a1 + 320);
  sub_100010634(a1 + 328, (uint64_t)&v70);
  sub_100010634(a1 + *(int *)(v18 + 92), (uint64_t)v69);
  v25 = type metadata accessor for TTRRemindersListPresenterCapability(0);
  v51[1] = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  swift_unknownObjectRetain(v57);
  swift_unknownObjectRetain(v58);
  swift_unknownObjectRetain(v59);
  swift_unknownObjectRetain(v68);
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRetain(v52);
  swift_unknownObjectRetain(v54);
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRetain(v20);
  swift_retain();
  v26 = v53;
  swift_unknownObjectRetain(v22);
  swift_unknownObjectRetain(v23);
  v51[0] = v24;
  swift_unknownObjectRetain(v24);
  v50 = v24;
  v49 = v23;
  v27 = v23;
  v28 = v22;
  v29 = sub_1001BC280(v19, v62, v20, v61, v21, v26, v22, v60, &v71, v49, v56, v50, v55, &v70, v69);
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v20);
  swift_release();

  swift_unknownObjectRelease(v28);
  swift_unknownObjectRelease(v27);
  swift_unknownObjectRelease(v51[0]);
  *(_QWORD *)(a3 + 104) = v29;
  *(_BYTE *)(a3 + 112) = *(_BYTE *)(a1 + 80);
  v30 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a3 + 120) = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a3 + 128) = v30;
  v31 = v63;
  sub_100010634(a1 + *(int *)(v63 + 96), a3 + 32);
  v29[3] = &off_1005F3160;
  swift_unknownObjectWeakAssign(v29 + 2, a3);
  v32 = (void *)objc_opt_self(NSNotificationCenter);
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = objc_msgSend(v32, "defaultCenter");
  v71 = 0u;
  v72 = 0u;
  v34 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v35 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v35 + 16, a3);
  swift_retain();
  v36 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(NSCurrentLocaleDidChangeNotification, &v71, v34, sub_10017EA0C, v35);

  swift_release();
  sub_1000073A0((uint64_t)&v71, &qword_100640E50);
  swift_release();
  *(_QWORD *)(a3 + 496) = v36;
  swift_release();
  v37 = a1 + *(int *)(v31 + 88);
  v38 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore, &v71, 33, 0);
  sub_10017EA14(v37, v38);
  swift_endAccess(&v71);
  v39 = *(_QWORD *)(v64 + 32);
  swift_beginAccess(a3 + 32, v69, 0, 0);
  v40 = *sub_10001413C((_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 56));
  *((_QWORD *)&v72 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  v73 = &off_100608590;
  *(_QWORD *)&v71 = v40;
  *(_QWORD *)(v39 + 120) = v29;
  swift_retain();
  swift_release();
  sub_100010634((uint64_t)&v71, (uint64_t)&v70);
  swift_retain();
  sub_1004ACC24((uint64_t)&v70);
  sub_100027F10(&v71);
  *(_QWORD *)&v71 = *(_QWORD *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  v41 = swift_allocObject(&unk_1005FDC70, 24, 7);
  swift_weakInit(v41 + 16, a3);
  v42 = sub_1002A8F78();
  swift_retain();
  v43 = Publisher<>.sink(receiveValue:)(sub_10017EA5C, v41, v66, v42);
  swift_release();
  swift_release();
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v43;
  swift_release();
  v45 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v44);
  *((_QWORD *)&v72 + 1) = type metadata accessor for TTRUserDefaults(0);
  v73 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  v46 = v45;
  swift_release();
  swift_release();
  *(_QWORD *)&v71 = v46;
  sub_10001F544(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  v47 = v67;
  swift_beginAccess(v67, &v70, 33, 0);
  sub_1002A8FC4((uint64_t)&v71, v47);
  swift_endAccess(&v70);
  return a3;
}

uint64_t sub_1002A8704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8710(a1, a2, a3, a4, (uint64_t)sub_1002A900C);
}

uint64_t sub_1002A8710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v27[24];

  v9 = type metadata accessor for TTRModuleState(0);
  swift_allocObject(v9, 80, 7);
  *(_QWORD *)(a4 + 16) = TTRModuleState.init(name:)(0x7265646E696D6552, 0xED00007473694C73);
  v10 = a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  *(_QWORD *)(v10 + 8) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  v12 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v13 = swift_allocObject(v12, 16, 7);
  *(_QWORD *)(a4 + v11) = sub_10048F590((uint64_t)_swiftEmptyArrayStorage, 0, v13, (uint64_t)_swiftEmptyArrayStorage, 0, 0);
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging) = 0x80;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID) = &_swiftEmptyDictionarySingleton;
  v14 = a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability;
  v17 = type metadata accessor for TTRRemindersListCurrentTipCapability(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_QWORD *)(a4 + v16) = TTRRemindersListCurrentTipCapability.init()();
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedEmptyListMessaging) = 0x80;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements) = _swiftEmptyArrayStorage;
  v18 = a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions;
  *(_WORD *)v18 = 257;
  *(_BYTE *)(v18 + 2) = 0;
  v19 = (_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource);
  *v19 = a1;
  v19[1] = &protocol witness table for TTRRemindersListDataModelSourceBase;
  v20 = (_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor);
  *v20 = a2;
  v20[1] = &protocol witness table for TTRRemindersListInteractor;
  sub_10001F580(a3, a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  v21 = *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability);
  v22 = swift_allocObject(&unk_1005FDC98, 24, 7);
  swift_weakInit(v22 + 16, a4);
  swift_beginAccess(v21 + 16, v27, 1, 0);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = v22;
  sub_1000381B8(v23, v24);
  return a4;
}

uint64_t sub_1002A8978(uint64_t a1, void *a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v10 = *a5;
  v38 = a3;
  v39 = v10;
  v11 = type metadata accessor for REMAnalyticsEvent(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropUtils) = 0;
  *(_QWORD *)((char *)a5
            + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  v21 = (char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_completedRemindersCount;
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance) = 0;
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group) = 0;
  v22 = (_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource);
  *v22 = a1;
  v22[1] = (uint64_t)&protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_hasDefaultNewReminderButton) = a4;
  sub_10002B1E8(a3, (uint64_t)v20, v23);
  swift_retain_n(a1, 2);
  v24 = sub_1002A8710(a1, (uint64_t)a2, (uint64_t)v20, (uint64_t)a5, (uint64_t)sub_1002A900C);
  swift_retain(v24);
  sub_1000A7034((uint64_t)v17);
  sub_10046ADD4((uint64_t)v17);
  v25 = sub_1000073A0((uint64_t)v17, &qword_100649CA0);
  v26 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v25);
  type metadata accessor for REMAnalyticsManager(0);
  v27 = v26;
  v28 = static REMAnalyticsManager.shared.getter();
  v29 = sub_10002A750(&qword_100645348);
  v30 = &v14[*(int *)(v29 + 48)];
  v31 = &v14[*(int *)(v29 + 80)];
  v32 = enum case for REMRemindersOpenUserOperation.group(_:);
  v33 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v14, v32, v33);
  *(_QWORD *)v30 = TTRUserDefaults.activitySessionId.getter(v34);
  *((_QWORD *)v30 + 1) = v35;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v31 = _typeName(_:qualified:)(v39, 0);
  *((_QWORD *)v31 + 1) = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v11);
  REMAnalyticsManager.post(event:)(v14);

  swift_release(v28);
  swift_release(v24);
  sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v24;
}

id sub_1002A8C4C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, char *a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  objc_class *ObjectType;
  objc_super v37;

  v35 = a3;
  ObjectType = (objc_class *)swift_getObjectType(a8, a2);
  v34 = a4 & 1;
  v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator;
  v19 = objc_allocWithZone((Class)UIImpactFeedbackGenerator);
  v20 = a8;
  *(_QWORD *)&a8[v18] = objc_msgSend(v19, "initWithStyle:", 0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = 0;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = 0;
  v21 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  *(_OWORD *)v21 = xmmword_1005205B0;
  v21[16] = 0;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging] = 0x80;
  v22 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  *v22 = 0;
  *(_OWORD *)(v22 + 33) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 8) = 0u;
  v22[49] = 3;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController] = 0;
  v23 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
  v24 = type metadata accessor for TTRSharedWithYouHighlight(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
  v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
  *(_QWORD *)v27 = a1;
  *((_QWORD *)v27 + 1) = &off_1005F32B0;
  v28 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  v29 = v35;
  *(_QWORD *)v28 = a2;
  *((_QWORD *)v28 + 1) = v29;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout] = v34;
  swift_retain(a1);
  TTRRemindersListViewModel.ListInfo.init()(a2);
  sub_10001F580((uint64_t)v17, (uint64_t)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  v30 = *(_QWORD *)v21;
  v31 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = a5;
  *((_QWORD *)v21 + 1) = a6;
  v21[16] = a7;
  sub_10004E024(a5, a6);
  sub_10004E038(v30, v31);

  sub_10004E038(a5, a6);
  v37.receiver = v20;
  v37.super_class = ObjectType;
  return objc_msgSendSuper2(&v37, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_1002A8F54()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1002A8F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649DC0;
  if (!qword_100649DC0)
  {
    v1 = sub_10002CA5C((uint64_t *)&unk_100649DB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100649DC0);
  }
  return result;
}

uint64_t sub_1002A8FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100649DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A900C()
{
  uint64_t v0;

  return sub_100479144(v0);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.listType.getter()
{
  return sub_1002A9288(1953720652, 0xE400000000000000, (uint64_t)"Name of List type for AppIntents", 32);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.smartListType.getter()
{
  return sub_1002A9288(0x694C207472616D53, 0xEA00000000007473, (uint64_t)"Name of Smart List type for AppIntents", 38);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.reminderType.getter()
{
  return sub_1002A9288(0x7265646E696D6552, 0xE800000000000000, (uint64_t)"Name of Reminder type for AppIntents", 36);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.createList.getter()
{
  return sub_1002A9288(0x4C20657461657243, 0xEB00000000747369, (uint64_t)"Name of Create List AppIntent", 29);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.openList.getter()
{
  return sub_1002A9288(0x73694C206E65704FLL, 0xE900000000000074, (uint64_t)"Name of Open List AppIntent", 27);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.openSmartList.getter()
{
  return sub_1002A9288(0x616D53206E65704FLL, 0xEF7473694C207472, (uint64_t)"Name of Open Smart List AppIntent", 33);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.createReminder.getter()
{
  return sub_1002A9288(0x5220657461657243, 0xEF7265646E696D65, (uint64_t)"Name of Create Reminder AppIntent", 33);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.searchReminders.getter()
{
  return sub_1002A9288(0xD000000000000010, 0x8000000100572100, (uint64_t)"Name of Search Reminders AppIntent", 34);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createListName.getter()
{
  return sub_1002A9288(1701667150, 0xE400000000000000, (uint64_t)"Create List AppIntent list name parameter", 41);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.openListEntity.getter()
{
  return sub_1002A9288(1953720652, 0xE400000000000000, (uint64_t)"Open List AppIntent list name parameter", 39);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.openSmartListEntity.getter()
{
  return sub_1002A9288(0x694C207472616D53, 0xEA00000000007473, (uint64_t)"Open Smart List AppIntent list name parameter", 45);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderTitle.getter()
{
  return sub_1002A9288(0x656C746954, 0xE500000000000000, (uint64_t)"Create Reminder AppIntent reminder title parameter", 50);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderNotes.getter()
{
  return sub_1002A9288(0x7365746F4ELL, 0xE500000000000000, (uint64_t)"Create Reminder AppIntent reminder notes parameter", 50);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderDueDate.getter()
{
  return sub_1002A9288(0x6574614420657544, 0xE800000000000000, (uint64_t)"Create Reminder AppIntent reminder due date parameter", 53);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderFlagged.getter()
{
  return sub_1002A9288(0x64656767616C46, 0xE700000000000000, (uint64_t)"Create Reminder AppIntent reminder flagged parameter", 52);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderPriority.getter()
{
  return sub_1002A9288(0x797469726F697250, 0xE800000000000000, (uint64_t)"Create Reminder AppIntent reminder priority parameter", 53);
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.searchRemindersQueryPhrase.getter()
{
  return sub_1002A9288(0x657361726850, 0xE600000000000000, (uint64_t)"Search AppIntent query phrase parameter", 39);
}

uint64_t sub_1002A9288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE v20[16];

  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = String.LocalizationValue.init(stringLiteral:)(a1, a2);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, a3, a4, 2);
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources()
{
  return &type metadata for TTRLocalizableStringResources;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Entity()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Entity;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Intent()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Intent;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Parameter()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Parameter;
}

void sub_1002A9428(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_10002A750(&qword_100654148) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100393330(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1002B1DC0(v5);
  *a1 = v3;
}

_QWORD *TTRSmartListVersionWarningInteractor.__allocating_init(userDefaults:maxStoredValues:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = a1[3];
  v6 = a1[4];
  v7 = sub_100028D48((uint64_t)a1, v5);
  v8 = sub_1002B4B20(v7, a2, v2, v5, v6);
  sub_100027F10(a1);
  return v8;
}

_QWORD *TTRSmartListVersionWarningInteractor.init(userDefaults:maxStoredValues:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v5 = a1[3];
  v6 = a1[4];
  v7 = sub_100028D48((uint64_t)a1, v5);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  v12 = sub_1002B4AC8((uint64_t)v10, a2, v2, v5, v6);
  sub_100027F10(a1);
  return v12;
}

BOOL TTRSmartListVersionWarningInteractor.hasVersionWarningAlertShown(for:supportedVersion:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v29 = a2;
  v4 = sub_10002A750(&qword_100654140);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a1, "uuid", v14);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v18 = v2 + 16;
  swift_beginAccess(v18, v30, 0, 0);
  sub_100010634(v18, (uint64_t)v31);
  v19 = v32;
  v20 = v33;
  sub_10001413C(v31, v32);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  sub_100027F10(v31);
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_1002AA778((uint64_t)v11), (v23 & 1) != 0))
  {
    sub_10002B1E8(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v6, v24, 1, v12);
  v25 = swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100654140);
    return 0;
  }
  else
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v27 = *(_QWORD *)&v16[*(int *)(v12 + 20)];
    sub_10001F544((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    return v27 >= v29;
  }
}

void TTRSmartListVersionWarningInteractor.setVersionWarningAlertShown(for:supportedVersion:)(void *a1, void (*a2)(char *, uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __n128 v37;
  _QWORD *v38;
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  char v51;
  __n128 v52;
  int v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, __n128);
  char *v80;
  uint64_t v81;
  _BYTE v82[24];
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v79 = a2;
  v71 = a1;
  v3 = sub_10002A750(&qword_100654140);
  __chkstk_darwin(v3);
  v76 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_10002A750(&qword_100654148);
  v78 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v73 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v72 = (uint64_t)&v68 - v7;
  __chkstk_darwin(v8);
  v77 = (uint64_t)&v68 - v9;
  v10 = sub_10002A750(&qword_100650718);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = __chkstk_darwin(v13);
  v69 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v14);
  v74 = *(_QWORD *)(v16 - 8);
  v75 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - v20;
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v80 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v68 - v26;
  v70 = v2;
  v28 = (char *)(v2 + 16);
  swift_beginAccess(v2 + 16, v82, 0, 0);
  sub_100010634(v2 + 16, (uint64_t)v83);
  v29 = v84;
  v30 = v85;
  sub_10001413C(v83, v84);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  sub_100027F10(v83);
  v32 = objc_msgSend(v71, "uuid");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v33 = v69;
  Date.init()(v34);
  TTRUserDefaults.SmartListVersionWarning.init(creationDate:supportedVersion:)(v33, v79);
  sub_10001F580((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
  v83[0] = v31;
  sub_100097EEC((uint64_t)v18, (uint64_t)v27, isUniquelyReferenced_nonNull_native);
  v36 = v83[0];
  v37 = swift_bridgeObjectRelease(0x8000000000000000);
  v79 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
  v79(v27, v22, v37);
  swift_bridgeObjectRetain_n(v36, 2);
  v38 = sub_1002AC7D4(v36);
  swift_bridgeObjectRelease(v36);
  v83[0] = v38;
  sub_1002A9428(v83);
  v39 = swift_bridgeObjectRelease(v36);
  v40 = v83[0];
  v41 = *(_QWORD *)(v36 + 16);
  v42 = v70;
  v71 = *(id *)(v70 + 56);
  if ((uint64_t)v71 >= v41)
  {
    swift_release();
LABEL_21:
    swift_beginAccess(v28, v83, 33, 0);
    v65 = (uint64_t)v28;
    v66 = *(_QWORD *)(v42 + 40);
    v67 = *(_QWORD *)(v42 + 48);
    sub_100028D48(v65, v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v36, v66, v67);
    swift_endAccess(v83);
  }
  else
  {
    v69 = v28;
    while (1)
    {
      v43 = *(_QWORD *)(v40 + 16);
      if (!v43)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v12, 1, 1, v22, v39);
LABEL_19:
        swift_bridgeObjectRelease(v40);
        sub_1000073A0((uint64_t)v12, &qword_100650718);
LABEL_20:
        v42 = v70;
        v28 = v69;
        goto LABEL_21;
      }
      v44 = v77;
      v45 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      v46 = *(_QWORD *)(v78 + 72);
      sub_1002B4BDC(v40 + v45 + v46 * (v43 - 1), v77);
      v47 = v44 + *(int *)(v81 + 48);
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
      v48(v12, v44, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
      sub_10001F544(v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
        goto LABEL_19;
      v49 = (uint64_t)v80;
      v48(v80, (uint64_t)v12, v22);
      swift_bridgeObjectRetain(v36);
      v50 = sub_1002AA778(v49);
      LOBYTE(v49) = v51;
      v52 = swift_bridgeObjectRelease(v36);
      if ((v49 & 1) != 0)
      {
        v53 = swift_isUniquelyReferenced_nonNull_native(v36);
        v83[0] = v36;
        v55 = v74;
        if (!v53)
        {
          sub_1002B041C(v54);
          v36 = v83[0];
        }
        ((void (*)(unint64_t, uint64_t))v79)(*(_QWORD *)(v36 + 48) + *(_QWORD *)(v23 + 72) * v50, v22);
        v36 = v83[0];
        v56 = v76;
        sub_10001F580(*(_QWORD *)(v83[0] + 56) + *(_QWORD *)(v55 + 72) * v50, v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        sub_1002ADE70(v50, v36);
        v52 = swift_bridgeObjectRelease(0x8000000000000000);
        v57 = 0;
      }
      else
      {
        v57 = 1;
        v56 = v76;
        v55 = v74;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v55 + 56))(v56, v57, 1, v75, v52);
      sub_1000073A0(v56, &qword_100654140);
      if (!*(_QWORD *)(v40 + 16))
        break;
      if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) != 0)
      {
        v58 = *(_QWORD *)(v40 + 16);
        if (!v58)
          goto LABEL_23;
      }
      else
      {
        v40 = sub_1002B38A0(v40);
        v58 = *(_QWORD *)(v40 + 16);
        if (!v58)
          goto LABEL_23;
      }
      v59 = v58 - 1;
      v60 = v40 + v45 + (v58 - 1) * v46;
      v61 = v73;
      sub_1002B4C24(v60, v73);
      *(_QWORD *)(v40 + 16) = v59;
      v62 = v61;
      v63 = v72;
      sub_1002B4C24(v62, v72);
      v64 = (void (*)(uint64_t, uint64_t))v79;
      ((void (*)(char *, uint64_t))v79)(v80, v22);
      sub_10001F544(v63 + *(int *)(v81 + 48), (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      v64(v63, v22);
      if ((uint64_t)v71 >= *(_QWORD *)(v36 + 16))
      {
        swift_bridgeObjectRelease(v40);
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    swift_release();
    __break(1u);
  }
}

uint64_t TTRSmartListVersionWarningInteractor.moveVersionWarningAlertShown(from:to:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v49 = a2;
  v4 = sub_10002A750(&qword_100654140);
  __chkstk_darwin(v4);
  v48 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - v7;
  v52 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v46 - v14;
  v16 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v47 = (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v50 = (uint64_t)&v46 - v20;
  v51 = v2;
  v21 = v2 + 16;
  swift_beginAccess(v21, v53, 0, 0);
  v46 = v21;
  sub_100010634(v21, (uint64_t)v54);
  v22 = v55;
  v23 = v56;
  sub_10001413C(v54, v55);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  sub_100027F10(v54);
  v57 = v24;
  v25 = objc_msgSend(a1, "uuid", swift_bridgeObjectRetain(v24).n128_f64[0]);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(_QWORD *)(v24 + 16) && (v26 = sub_1002AA778((uint64_t)v15), (v27 & 1) != 0))
  {
    sub_10002B1E8(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v17 + 72) * v26, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  v29 = v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v8, v28, 1, v16);
  v30 = swift_bridgeObjectRelease(v24);
  v31 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v31(v15, v29, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    swift_bridgeObjectRelease(v57);
    return sub_1000073A0((uint64_t)v8, &qword_100654140);
  }
  else
  {
    v33 = (uint64_t)v8;
    v34 = v50;
    sub_10001F580(v33, v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v35 = objc_msgSend(a1, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v36 = v48;
    sub_1002ACEE0((uint64_t)v11, v48);
    ((void (*)(char *, uint64_t))v31)(v11, v29);
    sub_1000073A0(v36, &qword_100654140);
    v37 = objc_msgSend(v49, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v38 = v47;
    sub_10002B1E8(v34, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v39 = v57;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v57);
    v54[0] = v39;
    sub_100097EEC(v38, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    v57 = v54[0];
    v41 = swift_bridgeObjectRelease(0x8000000000000000);
    v31(v11, v29, v41);
    v42 = v57;
    v43 = v46;
    swift_beginAccess(v46, v54, 33, 0);
    v44 = *(_QWORD *)(v51 + 40);
    v45 = *(_QWORD *)(v51 + 48);
    sub_100028D48(v43, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v42, v44, v45);
    swift_endAccess(v54);
    return sub_10001F544(v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  }
}

uint64_t TTRSmartListVersionWarningInteractor.deinit()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return v0;
}

uint64_t TTRSmartListVersionWarningInteractor.__deallocating_deinit()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 64, 7);
}

BOOL sub_1002AA24C(void *a1, uint64_t a2)
{
  return TTRSmartListVersionWarningInteractor.hasVersionWarningAlertShown(for:supportedVersion:)(a1, a2);
}

void sub_1002AA270(void *a1, void (*a2)(char *, uint64_t, __n128))
{
  TTRSmartListVersionWarningInteractor.setVersionWarningAlertShown(for:supportedVersion:)(a1, a2);
}

uint64_t sub_1002AA290(void *a1, void *a2)
{
  return TTRSmartListVersionWarningInteractor.moveVersionWarningAlertShown(from:to:)(a1, a2);
}

uint64_t sub_1002AA2B0()
{
  return TTRUserDefaults.smartListVersionWarnings.getter();
}

uint64_t sub_1002AA2D0()
{
  return TTRUserDefaults.smartListVersionWarnings.setter();
}

void (*sub_1002AA2F0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRUserDefaults.smartListVersionWarnings.modify();
  return sub_1002AA338;
}

void sub_1002AA338(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_1002AA364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1002AA9F8(a1, v4);
}

unint64_t sub_1002AA39C(uint64_t a1)
{
  return sub_1002AA6F8(a1, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:));
}

unint64_t sub_1002AA3B8(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_1002AAB10(a1, v3);
}

unint64_t sub_1002AA410(Swift::UInt a1, char a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  sub_1002354F8((uint64_t)v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1002AABB0(a1, a2, v5);
}

unint64_t sub_1002AA474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_1002AACEC(a1, v3);
}

void sub_1002AA4A4(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_1002AA4F4()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x7961646F74, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  v1 = Hasher._finalize()();
  return sub_1002AAD88(v0, v1);
}

unint64_t sub_1002AA5A4(void *a1)
{
  uint64_t v1;
  id v3;
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    Hasher._combine(_:)(1u);
    v3 = a1;
    NSObject.hash(into:)(v6);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v4 = Hasher._finalize()();
  return sub_1002AAFC8(a1, v4);
}

unint64_t sub_1002AA620(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  TTRSectionID.hash(into:)(v5, a1);
  v3 = Hasher._finalize()();
  return sub_1002AB0C8(a1, v3);
}

unint64_t sub_1002AA678(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  v3 = Hasher._finalize()();
  return sub_1002AB1C8(a1, v3);
}

unint64_t sub_1002AA6DC(uint64_t a1)
{
  return sub_1002AA6F8(a1, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
}

unint64_t sub_1002AA6F8(uint64_t a1, void (*a2)(_QWORD *), uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v4;
  Swift::Int v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  a2(v11);
  v9 = Hasher._finalize()();
  return sub_1002AB270(a1, v9, a3, a4);
}

unint64_t sub_1002AA778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1002AB37C(a1, v7);
}

unint64_t sub_1002AA7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1002AB4BC(a1, v4);
}

unint64_t sub_1002AA814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_1002AB580(a1, v7);
}

unint64_t sub_1002AA8A0(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  AnyListEntityID.hash(into:)((uint64_t)v5);
  v3 = Hasher._finalize()();
  return sub_1002AB6F4(a1, v3);
}

unint64_t sub_1002AA8F8(Swift::UInt a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_1002ABC60(a1, v3);
}

unint64_t sub_1002AA950(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v4;
  Swift::UInt64 v9;
  Swift::Int v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, *(_QWORD *)(v4 + 40));
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v9 = a1;
    else
      v9 = 0;
    Hasher._combine(_:)(v9);
  }
  sub_1005058F0(a3, a4);
  v10 = Hasher._finalize()();
  return sub_1002ABCFC(a1, a2 & 1, v10, a3, a4);
}

unint64_t sub_1002AA9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1002AAB10(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1002AABB0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      v9 = *(_QWORD *)v8;
      v10 = *(unsigned __int8 *)(v8 + 8);
      if (v10)
      {
        if (v10 != 1)
          return ((uint64_t (*)(void))((char *)&loc_1002AACA0 + 4 * byte_10052CD96[v9]))();
        if (a2 == 1)
        {
LABEL_4:
          if (v9 == a1)
            return result;
        }
      }
      else if (!a2)
      {
        goto LABEL_4;
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1002AACEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1002AAD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1002AAFC8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    do
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
          v10 = v9;
          v11 = a1;
          v12 = static NSObject.== infix(_:_:)(v10, v11);

          if ((v12 & 1) != 0)
            return v5;
        }
      }
      else if (!a1)
      {
        return v5;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1002AB0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = v7;
    LOBYTE(v7) = static TTRSectionID.__derived_enum_equals(_:_:)(v7, a1);

    if ((v7 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = v10;
        LOBYTE(v10) = static TTRSectionID.__derived_enum_equals(_:_:)(v10, a1);

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1002AB1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    v8 = *(_QWORD *)(a1 + 16);
    if (*(_QWORD *)(*(_QWORD *)(v7 + 8 * result) + 16) != v8)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if (*(_QWORD *)(*(_QWORD *)(v7 + 8 * result) + 16) == v8)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1002AB270(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v9 = a3(0);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - v11;
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_10002B1E8(*(_QWORD *)(v4 + 48) + v16 * v14, (uint64_t)v12, a3);
      v17 = a4(v12, a1);
      sub_10001F544((uint64_t)v12, a3);
      if ((v17 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1002AB37C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_1000175C8((unint64_t *)&qword_1006463B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1002AB4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1001033E8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100041DDC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1002AB580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1002AB6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, __n128);
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  v73 = v6;
  __chkstk_darwin(v5);
  v62 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (char *)&v60 - v9;
  v10 = type metadata accessor for SmartListType(0);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  __chkstk_darwin(v10);
  v63 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10064BC70);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AnyListEntityID(0);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - v17;
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v25 = (char *)&v60 - v22;
  v26 = -1 << *(_BYTE *)(v2 + 32);
  v27 = a2 & ~v26;
  v76 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
    return v27;
  v65 = v24;
  v68 = (char *)v23;
  v74 = ~v26;
  v75 = *(_QWORD *)(v21 + 72);
  v66 = v12;
  v67 = a1;
  v71 = v18;
  v64 = (char *)&v60 - v22;
  v60 = v2;
  while (1)
  {
    sub_10002B1E8(*(_QWORD *)(v2 + 48) + v75 * v27, (uint64_t)v25, type metadata accessor for AnyListEntityID);
    v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_10002B1E8((uint64_t)v25, (uint64_t)v14, type metadata accessor for AnyListEntityID);
    sub_10002B1E8(a1, v28, type metadata accessor for AnyListEntityID);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    if (!EnumCaseMultiPayload)
      break;
    if (EnumCaseMultiPayload != 1)
    {
      v36 = v12;
      v37 = a1;
      v40 = v15;
      v41 = v65;
      sub_10002B1E8((uint64_t)v14, v65, type metadata accessor for AnyListEntityID);
      v42 = v40;
      if (swift_getEnumCaseMultiPayload(v28, v40) == 2)
      {
        v44 = v72;
        v43 = v73;
        v45 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v62, v28, v72);
        v46 = static UUID.== infix(_:_:)(v41, v45);
        v47 = *(void (**)(char *, uint64_t))(v43 + 8);
        v47(v45, v44);
        v48 = v44;
        v25 = v64;
        v47((char *)v41, v48);
        v15 = v42;
LABEL_20:
        v18 = v71;
        if ((v46 & 1) != 0)
          goto LABEL_24;
LABEL_21:
        sub_10001F544((uint64_t)v14, type metadata accessor for AnyListEntityID);
        v12 = v66;
        a1 = v67;
        goto LABEL_6;
      }
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v41, v72);
      v15 = v40;
      goto LABEL_4;
    }
    sub_10002B1E8((uint64_t)v14, (uint64_t)v18, type metadata accessor for AnyListEntityID);
    if (swift_getEnumCaseMultiPayload(v28, v15) == 1)
    {
      v31 = v72;
      v30 = v73;
      v32 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v61, v28, v72);
      v33 = static UUID.== infix(_:_:)(v18, v32);
      v34 = *(void (**)(char *, uint64_t))(v30 + 8);
      v34(v32, v31);
      v35 = v31;
      v25 = v64;
      v34(v18, v35);
      if ((v33 & 1) != 0)
        goto LABEL_24;
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v18, v72);
LABEL_5:
    sub_1000073A0((uint64_t)v14, &qword_10064BC70);
LABEL_6:
    sub_10001F544((uint64_t)v25, type metadata accessor for AnyListEntityID);
    v27 = (v27 + 1) & v74;
    if (((*(_QWORD *)(v76 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      return v27;
  }
  v36 = v12;
  v37 = a1;
  v38 = v2;
  v39 = (uint64_t)v68;
  sub_10002B1E8((uint64_t)v14, (uint64_t)v68, type metadata accessor for AnyListEntityID);
  if (swift_getEnumCaseMultiPayload(v28, v15))
  {
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v39, v70);
    v2 = v38;
LABEL_4:
    v18 = v71;
    a1 = v37;
    v12 = v36;
    goto LABEL_5;
  }
  v49 = v28;
  v50 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v63, v49, v70);
  v51 = sub_1000175C8(&qword_10064BC78, (uint64_t (*)(uint64_t))&type metadata accessor for SmartListType, (uint64_t)&protocol conformance descriptor for SmartListType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v79, v50, v51);
  dispatch thunk of RawRepresentable.rawValue.getter(&v77, v50, v51);
  v52 = v80;
  v53 = v78;
  if (v79 != v77 || v80 != v78)
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v80, v77, v78, 0);
    swift_bridgeObjectRelease(v52);
    v54 = swift_bridgeObjectRelease(v53);
    v55 = v70;
    v56 = *(void (**)(char *, uint64_t, __n128))(v69 + 8);
    v56(v63, v70, v54);
    ((void (*)(char *, uint64_t))v56)(v68, v55);
    v2 = v60;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n(v80, 2);
  v57 = v70;
  v58 = *(void (**)(char *, uint64_t))(v69 + 8);
  v58(v63, v70);
  v58(v68, v57);
LABEL_24:
  sub_10001F544((uint64_t)v14, type metadata accessor for AnyListEntityID);
  sub_10001F544((uint64_t)v25, type metadata accessor for AnyListEntityID);
  return v27;
}

unint64_t sub_1002ABC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1002ABCFC(uint64_t a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  BOOL v15;

  v7 = -1 << *(_BYTE *)(v5 + 32);
  result = a3 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9 = ~v7;
    v10 = *(double *)&a1;
    do
    {
      v11 = *(_QWORD *)(v5 + 48) + 32 * result;
      v13 = *(double *)(v11 + 16);
      v12 = *(double *)(v11 + 24);
      if ((*(_BYTE *)(v11 + 8) & 1) != 0)
      {
        if ((a2 & 1) != 0 && v13 == a4 && v12 == a5)
          return result;
      }
      else if ((a2 & 1) == 0)
      {
        v15 = *(double *)v11 == v10 && v13 == a4;
        if (v15 && v12 == a5)
          return result;
      }
      result = (result + 1) & v9;
    }
    while (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

_QWORD *sub_1002ABDA0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v1 = sub_1002B38B4((uint64_t)&v9, (uint64_t)(v4 + 4), v2, v1);
    swift_bridgeObjectRelease(v9);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v7 = v1;
    else
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1002ABEA4(uint64_t a1)
{
  return sub_1002AC5BC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_10045E860);
}

_QWORD *sub_1002ABEB0(uint64_t a1)
{
  return sub_1002AC5BC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

_QWORD *sub_1002ABEBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1002AC24C(a1, a2, a3, a4, &qword_1006463D0);
}

_QWORD *sub_1002ABEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750((uint64_t *)&unk_100654F80);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1002B3A18((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10003E410(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1002ABFAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t **sub_1002AC13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **result;
  uint64_t v9;

  v1 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      goto LABEL_5;
    return (uint64_t **)_swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = __CocoaSet.count.getter(a1);
  if (!v2)
    return (uint64_t **)_swiftEmptyArrayStorage;
LABEL_5:
  if (v2 <= 0)
  {
    v4 = (uint64_t **)_swiftEmptyArrayStorage;
  }
  else
  {
    v3 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v4 = (uint64_t **)swift_allocObject(v3, 8 * v2 + 32, 7);
    v5 = j__malloc_size(v4);
    v6 = v5 - 32;
    if (v5 < 32)
      v6 = v5 - 25;
    v4[2] = (uint64_t *)v2;
    v4[3] = (uint64_t *)((2 * (v6 >> 3)) | 1);
  }
  swift_bridgeObjectRetain(v1);
  v7 = sub_1002B3C14(&v9, v4 + 4, v2, v1);
  result = (uint64_t **)sub_10003E410(v9);
  if (v7 == (uint64_t *)v2)
    return v4;
  __break(1u);
  return result;
}

_QWORD *sub_1002AC234(uint64_t a1)
{
  return sub_1002AC5BC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_10045EA98);
}

_QWORD *sub_1002AC240(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1002AC24C(a1, a2, a3, a4, (uint64_t *)&unk_100640E20);
}

_QWORD *sub_1002AC24C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v6)
    return _swiftEmptyArrayStorage;
  v10 = 8 * v6;
  if (v6 <= 0)
  {
    v12 = _swiftEmptyArrayStorage;
    if (v5 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v11 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
  v13 = j__malloc_size(v12);
  v14 = v13 - 32;
  if (v13 < 32)
    v14 = v13 - 25;
  v12[2] = v6;
  v12[3] = (2 * (v14 >> 3)) | 1;
  if (v5 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v6 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v15 = a2 + 8 * a3;
  if (v15 >= (unint64_t)&v12[(unint64_t)v10 / 8 + 4] || (unint64_t)(v12 + 4) >= v15 + v10)
  {
    sub_10002A750(a5);
    swift_arrayInitWithCopy(v12 + 4);
    return v12;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1002AC3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750(&qword_1006542F0);
  v4 = (_QWORD *)swift_allocObject(v3, 56 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 56);
  v6 = sub_1002B3F1C(&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_10003E410(v7);
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1002AC4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750(&qword_1006542C0);
  v4 = swift_allocObject(v3, v1 + 32, 7);
  v5 = j__malloc_size((const void *)v4);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = 2 * v5 - 64;
  v6 = sub_1002B417C(&v9, (_BYTE *)(v4 + 32), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_10003E410(v7);
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v4;
}

_QWORD *sub_1002AC5A4(uint64_t a1)
{
  return sub_1002AC5BC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_10045F718);
}

_QWORD *sub_1002AC5B0(uint64_t a1)
{
  return sub_1002AC5BC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_10045E884);
}

_QWORD *sub_1002AC5BC(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

_QWORD *sub_1002AC6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750((uint64_t *)&unk_1006469C0);
  v4 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      sub_1002B4310(&v14, (uint64_t)v8 + v7, v1, a1);
      v12 = v11;
      v13 = v14;
      swift_bridgeObjectRetain(a1);
      sub_10003E410(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002AC7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750(&qword_100654340);
  v4 = *(_QWORD *)(sub_10002A750(&qword_100654148) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100654148) - 8) + 80);
      sub_1002B45CC(&v15, (uint64_t)v8 + ((v11 + 32) & ~v11), v1, a1);
      v13 = v12;
      v14 = v15;
      swift_bridgeObjectRetain(a1);
      sub_10003E410(v14);
      if (v13 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002AC90C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10002A750((uint64_t *)&unk_100654F80);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1002B48CC((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10003E410(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_1002AC9F0(uint64_t a1)
{
  return sub_1002ACB04(a1, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:), sub_1002AE58C);
}

uint64_t sub_1002ACA14(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_1002AA364(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002B16F0(&qword_100654318);
    v8 = v12;
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_1002AD1EC(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

uint64_t sub_1002ACAE0(uint64_t a1)
{
  return sub_1002ACB04(a1, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:), (void (*)(void))sub_1002AF6FC);
}

uint64_t sub_1002ACB04(uint64_t a1, void (*a2)(_QWORD *), uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t), void (*a5)(void))
{
  uint64_t *v5;
  uint64_t *v10;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = v5;
  v12 = *v10;
  swift_bridgeObjectRetain(*v10);
  v13 = sub_1002AA6F8(a1, a2, a3, a4);
  LOBYTE(a1) = v14;
  swift_bridgeObjectRelease(v12);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v16 = *v10;
  v22 = *v10;
  *v10 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a5();
    v16 = v22;
  }
  v17 = *(_QWORD *)(v16 + 48);
  v18 = a3(0);
  sub_10001F544(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v13, a3);
  v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v13);
  sub_1002AD718(v13, v16, a3, a2);
  v20 = *v10;
  *v10 = v16;
  swift_bridgeObjectRelease(v20);
  return v19;
}

uint64_t sub_1002ACC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1002AA6F8(a1, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002AFAE8();
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
    sub_10001F544(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_1002AD9B0(v7, v10, (uint64_t (*)(_QWORD))&type metadata accessor for REMHashtagLabelSpecifier);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for REMHashtagLabelSpecifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

uint64_t sub_1002ACD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1002AA6F8(a1, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:));
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002AFDD0((uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_100654270);
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
    sub_10001F544(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_10001F580(v13 + *(_QWORD *)(v15 + 72) * v7, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_1002AD9B0(v7, v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for TTRAccountsListsViewModel.PinnedList(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

uint64_t sub_1002ACEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  double v9;
  int isUniquelyReferenced_nonNull_native;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1002AA778(a1);
  LOBYTE(a1) = v8;
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v12 = *v3;
    v24 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002B041C(v11);
      v12 = v24;
    }
    v13 = *(_QWORD *)(v12 + 48);
    v14 = type metadata accessor for UUID(0);
    v15 = (*(double (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v7, v14);
    v16 = *(_QWORD *)(v12 + 56);
    v17 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v15);
    v18 = *(_QWORD *)(v17 - 8);
    sub_10001F580(v16 + *(_QWORD *)(v18 + 72) * v7, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    sub_1002ADE70(v7, v12);
    v19 = *v3;
    *v3 = v12;
    v20 = swift_bridgeObjectRelease(v19);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v18 + 56))(a2, 0, 1, v17, v20);
  }
  else
  {
    v22 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22, v23);
  }
}

unint64_t sub_1002AD020(int64_t a1, uint64_t a2)
{
  return sub_1002AD718(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(_QWORD *))&TTRRemindersListViewModel.ItemID.hash(into:));
}

unint64_t sub_1002AD034(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1002AD1EC(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1002AD39C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 16 * v3);
            v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1002AD54C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(*(_QWORD *)(v9 + 16));
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_QWORD *)(v11 + 8 * v3);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002AD704(int64_t a1, uint64_t a2)
{
  return sub_1002AD718(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(_QWORD *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:));
}

unint64_t sub_1002AD718(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD *))
{
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  Swift::Int v22;
  uint64_t (*v23)(_QWORD);
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t (*v40)(_QWORD);
  void (*v41)(_QWORD *);
  _QWORD v42[9];

  v40 = a3;
  v41 = a4;
  v37 = a3(0);
  v6 = *(_QWORD *)(v37 - 8);
  result = __chkstk_darwin(v37);
  v39 = (char *)&v37 - v8;
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v10);
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v13 = (result + 1) & v12;
      v14 = *(_QWORD *)(v6 + 72);
      v15 = v12;
      v38 = a2 + 64;
      v16 = (uint64_t)v39;
      do
      {
        v17 = v14;
        v18 = v14 * v11;
        v19 = v13;
        v20 = v15;
        v21 = v40;
        sub_10002B1E8(*(_QWORD *)(a2 + 48) + v14 * v11, v16, v40);
        Hasher.init(_seed:)(v42, *(_QWORD *)(a2 + 40));
        v41(v42);
        v22 = Hasher._finalize()();
        v23 = v21;
        v15 = v20;
        v13 = v19;
        result = sub_10001F544(v16, v23);
        v24 = v22 & v15;
        if (a1 >= (uint64_t)v19)
        {
          if (v24 < v19)
          {
            v9 = v38;
            v14 = v17;
            goto LABEL_5;
          }
          v14 = v17;
          if (a1 >= v24)
            goto LABEL_12;
        }
        else
        {
          v14 = v17;
          if (v24 >= v19 || a1 >= v24)
          {
LABEL_12:
            v25 = *(_QWORD *)(a2 + 48);
            result = v25 + v14 * a1;
            v26 = v25 + v18;
            if (v14 * a1 < v18 || result >= v26 + v14)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v26, 1, v37);
              v9 = v38;
            }
            else
            {
              v27 = v14 * a1 == v18;
              v9 = v38;
              if (!v27)
                result = swift_arrayInitWithTakeBackToFront(result, v26);
            }
            v28 = *(_QWORD *)(a2 + 56);
            v29 = (_QWORD *)(v28 + 8 * a1);
            v30 = (_QWORD *)(v28 + 8 * v11);
            if (a1 != v11 || (a1 = v11, v29 >= v30 + 1))
            {
              *v29 = *v30;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        v9 = v38;
LABEL_5:
        v11 = (v11 + 1) & v15;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002AD9B0(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  BOOL v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  unint64_t v40;
  _QWORD v41[9];

  v39 = a3;
  v38 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v5 = *(_QWORD *)(v38 - 8);
  result = __chkstk_darwin(v38);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v10);
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v40 = (result + 1) & v12;
      v13 = *(_QWORD *)(v5 + 72);
      v14 = v12;
      do
      {
        v15 = v13;
        v16 = v13 * v11;
        v17 = v14;
        sub_10002B1E8(*(_QWORD *)(a2 + 48) + v13 * v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        Hasher.init(_seed:)(v41, *(_QWORD *)(a2 + 40));
        TTRAccountsListsViewModel.ItemIdentifier.hash(into:)(v41);
        v18 = Hasher._finalize()();
        result = sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v14 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v40)
        {
          if (v19 < v40)
          {
            v13 = v15;
          }
          else
          {
            v13 = v15;
            if (a1 >= v19)
              goto LABEL_12;
          }
        }
        else
        {
          v13 = v15;
          if (v19 >= v40 || a1 >= v19)
          {
LABEL_12:
            v20 = *(_QWORD *)(a2 + 48);
            v21 = v20 + v13 * a1;
            v22 = v20 + v16;
            if (v13 * a1 < v16 || v21 >= v22 + v13)
            {
              swift_arrayInitWithTakeFrontToBack(v21, v22, 1, v38);
            }
            else if (v13 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v21, v22);
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v39(0);
            v25 = *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72);
            v26 = v25 * a1;
            result = v23 + v25 * a1;
            v27 = v25 * v11;
            v28 = v23 + v25 * v11;
            v29 = v28 + v25;
            if (v26 < v27 || result >= v29)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v28, 1, v24);
              a1 = v11;
              v13 = v15;
              v14 = v17;
            }
            else
            {
              a1 = v11;
              v31 = v26 == v27;
              v13 = v15;
              v14 = v17;
              if (!v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result, v28);
                v14 = v17;
                a1 = v11;
              }
            }
          }
        }
        v11 = (v11 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v32 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002ADC80(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v12 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v13 = *v12;
        v14 = v12[1];
        Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v14);
        String.hash(into:)(v29, v13, v14);
        v15 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v14);
        v16 = v15 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v16 < v8)
            goto LABEL_5;
        }
        else if (v16 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v16)
        {
LABEL_11:
          v17 = *(_QWORD *)(a2 + 48);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || v18 >= v19 + 1)
            *v18 = *v19;
          v20 = *(_QWORD *)(a2 + 56);
          v21 = v20 + 56 * v3;
          v22 = (__int128 *)(v20 + 56 * v6);
          if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 56))
          {
            v9 = *v22;
            v10 = v22[1];
            v11 = v22[2];
            *(_QWORD *)(v21 + 48) = *((_QWORD *)v22 + 6);
            *(_OWORD *)(v21 + 16) = v10;
            *(_OWORD *)(v21 + 32) = v11;
            *(_OWORD *)v21 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1002ADE70(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  unint64_t v22;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  unint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for UUID(0);
  v46 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v45 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v46 + 72);
      v44 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v44(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1000175C8(&qword_1006463A8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v4);
        v13 = v17;
        v22 = v20 & v17;
        if (a1 >= (uint64_t)v45)
        {
          if (v22 >= v45 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            v25 = *(_QWORD *)(a2 + 48);
            v26 = v25 + v15 * a1;
            v27 = v25 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v26 >= v27 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v26, v27, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v26, v27);
            }
            v28 = *(_QWORD *)(a2 + 56);
            v29 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v21);
            v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72);
            v31 = v30 * a1;
            v32 = v28 + v30 * a1;
            v33 = v30 * v9;
            v34 = v28 + v30 * v9;
            v35 = v34 + v30;
            if (v31 < v33 || v32 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack(v32, v34, 1, v29);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v31 != v33)
              {
                swift_arrayInitWithTakeBackToFront(v32, v34);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v45 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v37 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v37;
    v39 = (-1 << a1) - 1;
  }
  else
  {
    v37 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v39 = *v37;
    v38 = (-1 << a1) - 1;
  }
  *v37 = v39 & v38;
  v40 = *(_QWORD *)(a2 + 16);
  v41 = __OFSUB__(v40, 1);
  v42 = v40 - 1;
  if (v41)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v42;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1002AE144(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[9];

  v34 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v4 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v35 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v4 + 72);
      v13 = v10;
      do
      {
        v14 = v12;
        v15 = v12 * v9;
        v16 = v13;
        sub_10002B1E8(*(_QWORD *)(a2 + 48) + v12 * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        Hasher.init(_seed:)(v36, *(_QWORD *)(a2 + 40));
        TTRRemindersListViewModel.ItemID.hash(into:)(v36, v17);
        v18 = Hasher._finalize()();
        sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v13 = v16;
        v19 = v18 & v16;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 < v35)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= v19)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v19 >= v35 || a1 >= v19)
          {
LABEL_12:
            v20 = *(_QWORD *)(a2 + 48);
            v21 = v20 + v12 * a1;
            v22 = v20 + v15;
            if (v12 * a1 < v15 || v21 >= v22 + v12)
            {
              swift_arrayInitWithTakeFrontToBack(v21, v22, 1, v34);
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront(v21, v22);
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = 32 * a1;
            v25 = v23 + 32 * a1;
            v26 = v23 + 32 * v9;
            if (32 * a1 < (uint64_t)(32 * v9) || v25 >= v26 + 32)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, &type metadata for TTRIRemindersBoardChromelessBarsController.ColumnState);
              a1 = v9;
              v13 = v16;
            }
            else
            {
              a1 = v9;
              v13 = v16;
              if (v24 != 32 * v9)
              {
                swift_arrayInitWithTakeBackToFront(v25, v26);
                v13 = v16;
                a1 = v9;
              }
            }
          }
        }
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v27 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1002AE404()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_10002A750(&qword_1006542A8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    if (!v19)
      break;
LABEL_23:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
  }
  v20 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1002AE58C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_1006542B0);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
LABEL_26:
    *v1 = v7;
    return;
  }
  v25 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v11++, 1))
      goto LABEL_28;
    if (v11 >= v15)
    {
LABEL_24:
      swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v11);
    if (!v22)
      break;
LABEL_23:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_10002B1E8(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_10001F580((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v20);
  }
  v23 = v11 + 1;
  if (v11 + 1 >= v15)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v11;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_1002AE7AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10002A750(&qword_1006542B8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    if (!v24)
      break;
LABEL_23:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_retain();
    swift_bridgeObjectRetain(v21);
  }
  v25 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void *sub_1002AE948()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_10002A750(&qword_100640EC0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    if (!v18)
      break;
LABEL_23:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void sub_1002AEABC()
{
  sub_1002B18B8(&qword_100654320);
}

void *sub_1002AEAC8()
{
  return sub_1002B0264(&qword_1006463E0);
}

void *sub_1002AEAD4()
{
  return sub_1002AFDD0(type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_100654258);
}

void *sub_1002AEAF0()
{
  return sub_1002B16F0(&qword_100654318);
}

void sub_1002AEAFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_10002A750(&qword_10064A548);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v20;
    v22[1] = v21;
    v23 = v17;
    swift_bridgeObjectRetain(v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002AECB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10002A750(&qword_100654300);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002AEE64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void *__src;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  sub_10002A750(&qword_1006542D8);
  v38 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v36 = v1;
    v37 = v3;
    swift_release(v36);
    *v38 = v37;
    return;
  }
  v4 = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  v6 = v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5;
  v42 = v3;
  if (v6)
  {
    memmove(v4, __src, 8 * v5);
    v3 = v42;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v40 = (unint64_t)(v8 + 63) >> 6;
  v41 = v1;
  while (1)
  {
    if (v10)
    {
      v43 = (v10 - 1) & v10;
      v44 = v7;
      v11 = __clz(__rbit64(v10)) | (v7 << 6);
      v1 = v41;
      v3 = v42;
      goto LABEL_12;
    }
    v32 = v7 + 1;
    v1 = v41;
    v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v40)
      goto LABEL_26;
    v33 = *((_QWORD *)__src + v32);
    v34 = v7 + 1;
    if (!v33)
    {
      v34 = v7 + 2;
      if (v7 + 2 >= v40)
        goto LABEL_26;
      v33 = *((_QWORD *)__src + v34);
      if (!v33)
        break;
    }
LABEL_25:
    v43 = (v33 - 1) & v33;
    v44 = v34;
    v11 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_12:
    v12 = 8 * v11;
    v13 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v11);
    v14 = 112 * v11;
    v15 = *(_QWORD *)(v1 + 56) + v14;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = *(void **)(v15 + 24);
    v20 = *(_QWORD *)(v15 + 40);
    v21 = *(_QWORD *)(v15 + 48);
    v22 = *(_QWORD *)(v15 + 56);
    v23 = *(void **)(v15 + 64);
    v24 = *(_QWORD *)(v15 + 80);
    v25 = *(_BYTE *)(v15 + 88);
    v26 = *(_QWORD *)(v15 + 96);
    v27 = *(_BYTE *)(v15 + 104);
    v28 = *(_BYTE *)(v15 + 32);
    v29 = *(_BYTE *)(v15 + 72);
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v12) = v13;
    v30 = *(_QWORD *)(v3 + 56) + v14;
    *(_QWORD *)v30 = v16;
    *(_QWORD *)(v30 + 8) = v17;
    *(_QWORD *)(v30 + 16) = v18;
    *(_QWORD *)(v30 + 24) = v19;
    *(_BYTE *)(v30 + 32) = v28;
    *(_QWORD *)(v30 + 40) = v20;
    *(_QWORD *)(v30 + 48) = v21;
    *(_QWORD *)(v30 + 56) = v22;
    *(_QWORD *)(v30 + 64) = v23;
    *(_BYTE *)(v30 + 72) = v29;
    *(_QWORD *)(v30 + 80) = v24;
    *(_BYTE *)(v30 + 88) = v25;
    *(_QWORD *)(v30 + 96) = v26;
    *(_BYTE *)(v30 + 104) = v27;
    v31 = v13;
    sub_1001EDEDC(v16, v17, v18, v19);
    sub_1001EDEDC(v20, v21, v22, v23);
    v10 = v43;
    v7 = v44;
  }
  v35 = v7 + 3;
  if (v7 + 3 >= v40)
    goto LABEL_26;
  v33 = *((_QWORD *)__src + v35);
  if (v33)
  {
    v34 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v34 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v34 >= v40)
      goto LABEL_26;
    v33 = *((_QWORD *)__src + v34);
    ++v35;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002AF0DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_100654260);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002AF338()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = type metadata accessor for REMRemindersListDataView.SectionLite(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_100654250);
  v25 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release();
    *v25 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = v5 + 64;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
    v20 = v18;
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_1002AF55C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_10002A750(&qword_100654280);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = (void *)swift_retain(v17);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002AF6FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_100654288);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release(v5);
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_10002B1E8(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_10001F580((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain(v20);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release(v5);
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1002AF934()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10002A750(&qword_100654290);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_retain(v17);
    result = (void *)swift_bridgeObjectRetain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002AFAE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v1 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v37 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_100654278);
  v31 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    swift_release(v5);
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_10002B1E8(*(_QWORD *)(v20 + 48) + v21, v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_10001F580(v15, *(_QWORD *)(i + 48) + v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    swift_release(v38);
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void *sub_1002AFDB4()
{
  return sub_1002AFDD0((uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.PinnedList, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_100654270);
}

void *sub_1002AFDD0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = a1(0);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = a2(0);
  v33 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  sub_10002A750(a3);
  v30 = v3;
  v13 = *v3;
  v14 = static _DictionaryStorage.copy(original:)(*v3);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_23:
    result = (void *)swift_release(v13);
    *v30 = v15;
    return result;
  }
  result = (void *)(v14 + 64);
  v17 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17)
    result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  v18 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v19 = 1 << *(_BYTE *)(v13 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v13 + 64);
  v31 = v13 + 64;
  v32 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v18;
    if (!v27)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v32)
        goto LABEL_23;
      v27 = *(_QWORD *)(v31 + 8 * v18);
      if (!v27)
        break;
    }
LABEL_22:
    v21 = (v27 - 1) & v27;
    v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    v24 = *(_QWORD *)(v33 + 72) * v23;
    sub_10002B1E8(*(_QWORD *)(v13 + 48) + v24, (uint64_t)v12, a2);
    v25 = *(_QWORD *)(v34 + 72) * v23;
    sub_10002B1E8(*(_QWORD *)(v13 + 56) + v25, (uint64_t)v9, a1);
    sub_10001F580((uint64_t)v12, *(_QWORD *)(v15 + 48) + v24, a2);
    result = (void *)sub_10001F580((uint64_t)v9, *(_QWORD *)(v15 + 56) + v25, a1);
  }
  v28 = v26 + 2;
  if (v28 >= v32)
    goto LABEL_23;
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v18 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v18);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1002B004C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  __int128 v31;

  v1 = v0;
  sub_10002A750(&qword_100654298);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 56 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v21 + 48);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v31 = *(_OWORD *)(v21 + 32);
    v26 = *(_OWORD *)v21;
    *v25 = v18;
    v25[1] = v19;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v27 = v26;
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v22;
    *(_OWORD *)(v27 + 32) = v31;
    *(_QWORD *)(v27 + 48) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v31);
    result = *((id *)&v31 + 1);
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002B0258()
{
  return sub_1002B0264(&qword_100646330);
}

void *sub_1002B0264(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 16 * v16;
    v20 = *(_QWORD *)(v3 + 56) + v19;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = *(_BYTE *)(v20 + 8);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v22 = *(_QWORD *)(v5 + 56) + v19;
    *(_QWORD *)v22 = v21;
    *(_BYTE *)(v22 + 8) = v20;
    result = (void *)swift_retain(v18);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1002B0410()
{
  return sub_1002B08A0(&qword_1006542F8);
}

void sub_1002B041C(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t i;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, a1);
  v37 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_100654338);
  v31 = v1;
  v6 = *v1;
  v7 = static _DictionaryStorage.copy(original:)(*v1);
  v8 = *(_QWORD *)(v6 + 16);
  v39 = v7;
  if (!v8)
  {
    swift_release();
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return;
  }
  v9 = v7;
  v10 = (void *)(v7 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v6 || (unint64_t)v10 >= v6 + 64 + 8 * v11)
  {
    memmove(v10, (const void *)(v6 + 64), 8 * v11);
    v9 = v39;
  }
  v12 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v38 = v6;
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v32 = v6 + 64;
  v33 = (unint64_t)(v13 + 63) >> 6;
  v17 = v34;
  v16 = v35;
  v18 = (uint64_t)v36;
  for (i = v39;
        ;
        sub_10001F580(v18, *(_QWORD *)(i + 56) + v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning))
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v12 << 6);
      v22 = v38;
      goto LABEL_9;
    }
    v25 = v12 + 1;
    v22 = v38;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_22:
    v15 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v4 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v37 + 72) * v21;
    sub_10002B1E8(*(_QWORD *)(v22 + 56) + v24, v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(i + 48) + v23, v17, v16);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    swift_release();
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1002B06E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10002A750(&qword_100654348);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_1002B0894()
{
  return sub_1002B08A0(&qword_100652B48);
}

id sub_1002B08A0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v18 = *(_BYTE *)(*(_QWORD *)(v3 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = v17;
    *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002B0A38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE v26[32];

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_1006542E0);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v8;
    return;
  }
  v24 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    sub_10002B1E8(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v20 = 32 * v18;
    sub_1000CE130(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    sub_10001F580((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_100076BAC((uint64_t)v26, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002B0C70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A750(&qword_1006542E8);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_10002B1E8(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v7 + 48) + v19;
    v28 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v20);
    sub_10001F580((uint64_t)v4, v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v22 = v28;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v20) = v28;
    swift_unknownObjectRetain(v22);
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1002B0EA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_10002A750(&qword_100654310);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002B1034()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10002A750(&qword_100654308);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002B11D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_10002A750(&qword_100654248);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v18;
    v20 = v17;
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002B1378()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10002A750(&qword_100654268);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002B1530()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10002A750(&qword_1006542A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void *sub_1002B16E4()
{
  return sub_1002B16F0(&qword_100654240);
}

void *sub_1002B16F0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain(v19);
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002B1890()
{
  return sub_1002AFDD0(type metadata accessor for AnyListEntity, type metadata accessor for AnyListEntityID, &qword_100654328);
}

void sub_1002B18AC()
{
  sub_1002B18B8(&qword_100654330);
}

void sub_1002B18B8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v2 = v1;
  sub_10002A750(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release();
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v14)
      goto LABEL_26;
    v23 = *(_QWORD *)(v7 + 8 * v22);
    ++v10;
    if (!v23)
    {
      v10 = v22 + 1;
      if (v22 + 1 >= v14)
        goto LABEL_26;
      v23 = *(_QWORD *)(v7 + 8 * v10);
      if (!v23)
        break;
    }
LABEL_25:
    v13 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    v21 = v19;
  }
  v24 = v22 + 2;
  if (v24 >= v14)
    goto LABEL_26;
  v23 = *(_QWORD *)(v7 + 8 * v24);
  if (v23)
  {
    v10 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v23 = *(_QWORD *)(v7 + 8 * v10);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1002B1A54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  sub_10002A750(&qword_1006542D0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(_BYTE *)(v17 + 8);
    v19 = 16 * v15;
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_OWORD *)(v17 + 16);
    v22 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v19);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_BYTE *)(v20 + 8) = v18;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v19) = v22;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_1002B1BFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_10002A750(&qword_1006542C8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100028CFC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_100028D38(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1002B1DC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  Swift::Int v26;
  unint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  Swift::Int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  Swift::Int v78;
  uint64_t v79;
  uint64_t v80;
  Swift::Int v81;
  unint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  Swift::Int v87;
  Swift::Int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t);
  void (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  Swift::Int v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  char v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  Swift::Int v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  Swift::Int v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  Swift::Int v183;
  unint64_t v184;
  uint64_t v185;
  char *v186;
  void (*v187)(char *, uint64_t, uint64_t);
  void (*v188)(void);
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  _QWORD *v193;
  Swift::Int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  Swift::Int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;

  v2 = v1;
  v192 = type metadata accessor for Date(0);
  v201 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v191 = (char *)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v190 = (char *)&v173 - v6;
  v195 = sub_10002A750(&qword_100654148);
  v7 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v182 = (uint64_t)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v196 = (uint64_t)&v173 - v10;
  __chkstk_darwin(v11);
  v189 = (char *)&v173 - v12;
  __chkstk_darwin(v13);
  v203 = (char *)&v173 - v14;
  __chkstk_darwin(v15);
  v204 = (uint64_t)&v173 - v16;
  __chkstk_darwin(v17);
  v202 = (uint64_t)&v173 - v18;
  v19 = a1[1];
  v20 = _minimumMergeRunLength(_:)(v19);
  if (v20 >= v19)
  {
    if (v19 < 0)
      goto LABEL_140;
    if (v19)
      sub_1002B2BBC(0, v19, 1, a1);
    return;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_148;
  v185 = v7;
  v175 = v20;
  if (v19 < 2)
  {
    v25 = (char *)_swiftEmptyArrayStorage;
    v184 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v174 = _swiftEmptyArrayStorage;
    if (v19 != 1)
    {
      v27 = _swiftEmptyArrayStorage[2];
LABEL_106:
      v160 = v25;
      if (v27 >= 2)
      {
        v166 = *a1;
        do
        {
          v167 = v27 - 2;
          if (v27 < 2)
            goto LABEL_135;
          if (!v166)
            goto LABEL_147;
          v168 = *(_QWORD *)&v160[16 * v167 + 32];
          v169 = *(_QWORD *)&v160[16 * v27 + 24];
          sub_1002B2FA4(v166 + *(_QWORD *)(v185 + 72) * v168, v166 + *(_QWORD *)(v185 + 72) * *(_QWORD *)&v160[16 * v27 + 16], v166 + *(_QWORD *)(v185 + 72) * v169, v184);
          if (v2)
            break;
          if (v169 < v168)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native(v160) & 1) == 0)
            v160 = sub_100392EE4((uint64_t)v160);
          if (v167 >= *((_QWORD *)v160 + 2))
            goto LABEL_137;
          v170 = &v160[16 * v167 + 32];
          *(_QWORD *)v170 = v168;
          *((_QWORD *)v170 + 1) = v169;
          v171 = *((_QWORD *)v160 + 2);
          if (v27 > v171)
            goto LABEL_138;
          memmove(&v160[16 * v27 + 16], &v160[16 * v27 + 32], 16 * (v171 - v27));
          *((_QWORD *)v160 + 2) = v171 - 1;
          v27 = v171 - 1;
        }
        while (v171 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease(v160);
      v172 = v174;
      v174[2] = 0;
      swift_bridgeObjectRelease(v172);
      return;
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(v21 >> 1, v195);
    *(_QWORD *)(v23 + 16) = v22;
    v24 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v174 = (_QWORD *)v23;
    v184 = v23 + v24;
  }
  v26 = 0;
  v25 = (char *)_swiftEmptyArrayStorage;
  v193 = a1;
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    v183 = v26;
    if (v26 + 1 >= v19)
      break;
    v177 = v2;
    v178 = *a1;
    v30 = v178;
    v31 = *(_QWORD *)(v185 + 72);
    v200 = v31;
    v194 = v26 + 1;
    v32 = v178 + v31 * v29;
    v33 = v202;
    sub_1002B4BDC(v32, v202);
    sub_1002B4BDC(v30 + v31 * v28, v204);
    v34 = v195;
    v35 = *(int *)(v195 + 48);
    v36 = v203;
    v37 = (uint64_t)&v203[v35];
    v38 = v33;
    v39 = v33 + v35;
    v40 = type metadata accessor for UUID(0);
    v197 = *(_QWORD *)(v40 - 8);
    v41 = *(void (**)(void))(v197 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v41)(v36, v38, v40);
    sub_10002B1E8(v39, v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
    v43 = v190;
    v44 = v192;
    v42(v190, v37, v192);
    sub_10001F544(v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v45 = *(int *)(v34 + 48);
    v199 = v19;
    v46 = v189;
    v47 = (uint64_t)&v189[v45];
    v48 = v204 + v45;
    v188 = v41;
    ((void (*)(char *))v41)(v189);
    sub_10002B1E8(v48, v47, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    v49 = v191;
    v187 = v42;
    v42(v191, v47, v44);
    v50 = v47;
    v28 = v183;
    sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    LODWORD(v198) = static Date.> infix(_:_:)(v43, v49);
    v51 = *(void (**)(char *, uint64_t))(v201 + 8);
    v51(v49, v44);
    v52 = v43;
    v53 = v200;
    v186 = (char *)v51;
    v51(v52, v44);
    v54 = *(void (**)(char *, uint64_t))(v197 + 8);
    v55 = v46;
    v19 = v199;
    v54(v55, v40);
    v197 = v40;
    v181 = v54;
    v54(v203, v40);
    sub_1000073A0(v204, &qword_100654148);
    sub_1000073A0(v202, &qword_100654148);
    v56 = v28 + 2;
    if (v28 + 2 >= v19)
    {
      v29 = v28 + 2;
    }
    else
    {
      v176 = v25;
      v180 = v53 * v194;
      v57 = v178;
      v179 = v53 * v56;
      while (1)
      {
        v194 = v56;
        v58 = v202;
        sub_1002B4BDC(v57 + v179, v202);
        sub_1002B4BDC(v57 + v180, v204);
        v59 = v195;
        v60 = *(int *)(v195 + 48);
        v61 = (uint64_t)&v203[v60];
        v62 = v58 + v60;
        v63 = v197;
        v64 = v188;
        v188();
        sub_10002B1E8(v62, v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v65 = v190;
        v66 = v192;
        v67 = v187;
        v187(v190, v61, v192);
        sub_10001F544(v61, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v68 = *(int *)(v59 + 48);
        v69 = v189;
        v70 = (uint64_t)&v189[v68];
        v71 = v204 + v68;
        ((void (*)(char *))v64)(v189);
        sub_10002B1E8(v71, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v72 = v191;
        v67(v191, v70, v66);
        sub_10001F544(v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        LODWORD(v70) = static Date.> infix(_:_:)(v65, v72);
        v73 = (void (*)(char *, uint64_t))v186;
        ((void (*)(char *, uint64_t))v186)(v72, v66);
        v73(v65, v66);
        v74 = v181;
        v181(v69, v63);
        v74(v203, v63);
        sub_1000073A0(v204, &qword_100654148);
        sub_1000073A0(v202, &qword_100654148);
        if (((v198 ^ v70) & 1) != 0)
          break;
        v56 = v194 + 1;
        v19 = v199;
        v53 = v200;
        v57 += v200;
        if (v199 == v194 + 1)
        {
          v29 = v199;
          v25 = v176;
          v28 = v183;
          goto LABEL_23;
        }
      }
      v25 = v176;
      v29 = v194;
      v28 = v183;
      v19 = v199;
      v53 = v200;
    }
LABEL_23:
    a1 = v193;
    if ((v198 & 1) == 0)
      goto LABEL_36;
    if (v29 < v28)
      goto LABEL_141;
    if (v28 >= v29)
    {
LABEL_36:
      v2 = v177;
      break;
    }
    v176 = v25;
    v75 = 0;
    v76 = v53 * (v29 - 1);
    v77 = v29 * v53;
    v78 = v28;
    v79 = v28 * v53;
    do
    {
      if (v78 != v29 + v75 - 1)
      {
        v80 = v178;
        if (!v178)
          goto LABEL_146;
        v81 = v29;
        v82 = v178 + v79;
        v83 = v178 + v76;
        sub_1002B4C24(v178 + v79, v182);
        if (v79 < v76 || v82 >= v80 + v77)
        {
          swift_arrayInitWithTakeFrontToBack(v80 + v79, v80 + v76, 1, v195);
          v53 = v200;
        }
        else
        {
          v53 = v200;
          if (v79 != v76)
            swift_arrayInitWithTakeBackToFront(v82, v83);
        }
        sub_1002B4C24(v182, v83);
        v29 = v81;
        v28 = v183;
      }
      ++v78;
      --v75;
      v76 -= v53;
      v77 -= v53;
      v79 += v53;
    }
    while (v78 < v29 + v75);
    a1 = v193;
    v25 = v176;
    v2 = v177;
    v19 = v199;
    if (v29 < v199)
      goto LABEL_38;
LABEL_57:
    if (v29 < v28)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
    v194 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v25 = sub_100392A60(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v114 = *((_QWORD *)v25 + 2);
    v113 = *((_QWORD *)v25 + 3);
    v27 = v114 + 1;
    v115 = v2;
    if (v114 >= v113 >> 1)
      v25 = sub_100392A60((char *)(v113 > 1), v114 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v116 = v25 + 32;
    v117 = &v25[16 * v114 + 32];
    v118 = v194;
    *(_QWORD *)v117 = v28;
    *((_QWORD *)v117 + 1) = v118;
    if (v114)
    {
      while (1)
      {
        v119 = v27 - 1;
        if (v27 >= 4)
        {
          v124 = &v116[16 * v27];
          v125 = *((_QWORD *)v124 - 8);
          v126 = *((_QWORD *)v124 - 7);
          v130 = __OFSUB__(v126, v125);
          v127 = v126 - v125;
          if (v130)
            goto LABEL_123;
          v129 = *((_QWORD *)v124 - 6);
          v128 = *((_QWORD *)v124 - 5);
          v130 = __OFSUB__(v128, v129);
          v122 = v128 - v129;
          v123 = v130;
          if (v130)
            goto LABEL_124;
          v131 = v27 - 2;
          v132 = &v116[16 * v27 - 32];
          v134 = *(_QWORD *)v132;
          v133 = *((_QWORD *)v132 + 1);
          v130 = __OFSUB__(v133, v134);
          v135 = v133 - v134;
          if (v130)
            goto LABEL_126;
          v130 = __OFADD__(v122, v135);
          v136 = v122 + v135;
          if (v130)
            goto LABEL_129;
          if (v136 >= v127)
          {
            v154 = &v116[16 * v119];
            v156 = *(_QWORD *)v154;
            v155 = *((_QWORD *)v154 + 1);
            v130 = __OFSUB__(v155, v156);
            v157 = v155 - v156;
            if (v130)
              goto LABEL_133;
            v147 = v122 < v157;
            goto LABEL_94;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v148 = *((_QWORD *)v25 + 4);
            v149 = *((_QWORD *)v25 + 5);
            v130 = __OFSUB__(v149, v148);
            v141 = v149 - v148;
            v142 = v130;
            goto LABEL_88;
          }
          v121 = *((_QWORD *)v25 + 4);
          v120 = *((_QWORD *)v25 + 5);
          v130 = __OFSUB__(v120, v121);
          v122 = v120 - v121;
          v123 = v130;
        }
        if ((v123 & 1) != 0)
          goto LABEL_125;
        v131 = v27 - 2;
        v137 = &v116[16 * v27 - 32];
        v139 = *(_QWORD *)v137;
        v138 = *((_QWORD *)v137 + 1);
        v140 = __OFSUB__(v138, v139);
        v141 = v138 - v139;
        v142 = v140;
        if (v140)
          goto LABEL_128;
        v143 = &v116[16 * v119];
        v145 = *(_QWORD *)v143;
        v144 = *((_QWORD *)v143 + 1);
        v130 = __OFSUB__(v144, v145);
        v146 = v144 - v145;
        if (v130)
          goto LABEL_131;
        if (__OFADD__(v141, v146))
          goto LABEL_132;
        if (v141 + v146 >= v122)
        {
          v147 = v122 < v146;
LABEL_94:
          if (v147)
            v119 = v131;
          goto LABEL_96;
        }
LABEL_88:
        if ((v142 & 1) != 0)
          goto LABEL_127;
        v150 = &v116[16 * v119];
        v152 = *(_QWORD *)v150;
        v151 = *((_QWORD *)v150 + 1);
        v130 = __OFSUB__(v151, v152);
        v153 = v151 - v152;
        if (v130)
          goto LABEL_130;
        if (v153 < v141)
          goto LABEL_14;
LABEL_96:
        v158 = v119 - 1;
        if (v119 - 1 >= v27)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v159 = *a1;
        if (!*a1)
          goto LABEL_145;
        v160 = v25;
        v161 = &v116[16 * v158];
        v162 = *(_QWORD *)v161;
        v163 = &v116[16 * v119];
        v164 = *((_QWORD *)v163 + 1);
        sub_1002B2FA4(v159 + *(_QWORD *)(v185 + 72) * *(_QWORD *)v161, v159 + *(_QWORD *)(v185 + 72) * *(_QWORD *)v163, v159 + *(_QWORD *)(v185 + 72) * v164, v184);
        if (v115)
          goto LABEL_117;
        if (v164 < v162)
          goto LABEL_120;
        if (v119 > *((_QWORD *)v160 + 2))
          goto LABEL_121;
        *(_QWORD *)v161 = v162;
        *(_QWORD *)&v116[16 * v158 + 8] = v164;
        v165 = *((_QWORD *)v160 + 2);
        if (v119 >= v165)
          goto LABEL_122;
        v25 = v160;
        v27 = v165 - 1;
        memmove(&v116[16 * v119], v163 + 16, 16 * (v165 - 1 - v119));
        *((_QWORD *)v160 + 2) = v165 - 1;
        a1 = v193;
        if (v165 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = a1[1];
    v26 = v194;
    v2 = v115;
    if (v194 >= v19)
      goto LABEL_106;
  }
  if (v29 >= v19)
    goto LABEL_57;
LABEL_38:
  if (__OFSUB__(v29, v28))
    goto LABEL_139;
  if (v29 - v28 >= v175)
    goto LABEL_57;
  if (__OFADD__(v28, v175))
    goto LABEL_142;
  if (v28 + v175 >= v19)
    v84 = (void (*)(char *, uint64_t))v19;
  else
    v84 = (void (*)(char *, uint64_t))(v28 + v175);
  if ((uint64_t)v84 >= v28)
  {
    if ((void (*)(char *, uint64_t))v29 != v84)
    {
      v176 = v25;
      v177 = v2;
      v85 = *(char **)(v185 + 72);
      v86 = (_QWORD)v85 * (v29 - 1);
      v186 = v85;
      v87 = v29 * (_QWORD)v85;
      v181 = v84;
      do
      {
        v89 = 0;
        v194 = v29;
        v187 = (void (*)(char *, uint64_t, uint64_t))v87;
        v188 = (void (*)(void))v86;
        while (1)
        {
          v90 = *a1;
          v198 = (char *)(v87 + v89);
          v199 = v28;
          v91 = v202;
          sub_1002B4BDC(v87 + v89 + v90, v202);
          v197 = v86 + v89;
          sub_1002B4BDC(v86 + v89 + v90, v204);
          v92 = v195;
          v93 = *(int *)(v195 + 48);
          v94 = v203;
          v95 = (uint64_t)&v203[v93];
          v96 = v91 + v93;
          v97 = type metadata accessor for UUID(0);
          v200 = *(_QWORD *)(v97 - 8);
          v98 = *(void (**)(char *, uint64_t, uint64_t))(v200 + 16);
          v98(v94, v91, v97);
          sub_10002B1E8(v96, v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v99 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
          v100 = v190;
          v101 = v192;
          v99(v190, v95, v192);
          sub_10001F544(v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v102 = *(int *)(v92 + 48);
          v103 = v189;
          v104 = (uint64_t)&v189[v102];
          v105 = v204 + v102;
          ((void (*)(char *))v98)(v189);
          sub_10002B1E8(v105, v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v106 = v191;
          v99(v191, v104, v101);
          sub_10001F544(v104, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          LOBYTE(v104) = static Date.> infix(_:_:)(v100, v106);
          v107 = *(void (**)(char *, uint64_t))(v201 + 8);
          v107(v106, v101);
          v107(v100, v101);
          v108 = *(void (**)(char *, uint64_t))(v200 + 8);
          v108(v103, v97);
          v108(v203, v97);
          sub_1000073A0(v204, &qword_100654148);
          sub_1000073A0(v202, &qword_100654148);
          if ((v104 & 1) == 0)
            break;
          a1 = v193;
          v109 = *v193;
          if (!*v193)
            goto LABEL_144;
          v87 = (Swift::Int)v187;
          v86 = (uint64_t)v188;
          v110 = (uint64_t)v187 + v109 + v89;
          v111 = (uint64_t)v188 + v109 + v89;
          sub_1002B4C24(v110, v196);
          swift_arrayInitWithTakeFrontToBack(v110, v111, 1, v195);
          sub_1002B4C24(v196, v111);
          v89 -= (uint64_t)v186;
          v28 = v199 + 1;
          v88 = v194;
          if (v194 == v199 + 1)
            goto LABEL_48;
        }
        a1 = v193;
        v88 = v194;
        v87 = (Swift::Int)v187;
        v86 = (uint64_t)v188;
LABEL_48:
        v29 = v88 + 1;
        v86 += (uint64_t)v186;
        v87 += (Swift::Int)v186;
        v28 = v183;
      }
      while ((void (*)(char *, uint64_t))v29 != v181);
      v29 = (Swift::Int)v181;
      v2 = v177;
      v25 = v176;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1002B2BBC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v50 = a1;
  v55 = type metadata accessor for Date(0);
  v68 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v53 = (char *)&v48 - v9;
  v60 = sub_10002A750(&qword_100654148);
  __chkstk_darwin(v60);
  v61 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v52 = (char *)&v48 - v12;
  __chkstk_darwin(v13);
  v67 = (char *)&v48 - v14;
  __chkstk_darwin(v15);
  v69 = (uint64_t)&v48 - v16;
  __chkstk_darwin(v17);
  v66 = (uint64_t)&v48 - v19;
  v59 = a3;
  v49 = a2;
  if (a3 != a2)
  {
    v20 = *(_QWORD *)(v18 + 72);
    v21 = v20 * (v59 - 1);
    v56 = v20;
    v22 = v20 * v59;
    v51 = a4;
LABEL_5:
    v23 = 0;
    v64 = v50;
    v57 = v22;
    v58 = v21;
    while (1)
    {
      v24 = *a4;
      v63 = v22 + v23;
      v25 = v22 + v23 + v24;
      v26 = v66;
      sub_1002B4BDC(v25, v66);
      v62 = v21 + v23;
      sub_1002B4BDC(v21 + v23 + v24, v69);
      v27 = v60;
      v28 = *(int *)(v60 + 48);
      v29 = v67;
      v30 = (uint64_t)&v67[v28];
      v31 = v26 + v28;
      v32 = type metadata accessor for UUID(0);
      v65 = *(_QWORD *)(v32 - 8);
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      v33(v29, v26, v32);
      sub_10002B1E8(v31, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
      v35 = v53;
      v36 = v55;
      v34(v53, v30, v55);
      sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      v37 = *(int *)(v27 + 48);
      v38 = v52;
      v39 = (uint64_t)&v52[v37];
      v40 = v69 + v37;
      ((void (*)(char *))v33)(v52);
      sub_10002B1E8(v40, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      v41 = v54;
      v34(v54, v39, v36);
      v21 = v58;
      sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      LOBYTE(v39) = static Date.> infix(_:_:)(v35, v41);
      v42 = *(void (**)(char *, uint64_t))(v68 + 8);
      v42(v41, v36);
      v43 = v36;
      v22 = v57;
      v42(v35, v43);
      v44 = *(void (**)(char *, uint64_t))(v65 + 8);
      v44(v38, v32);
      v44(v67, v32);
      a4 = v51;
      sub_1000073A0(v69, &qword_100654148);
      sub_1000073A0(v66, &qword_100654148);
      if ((v39 & 1) == 0)
      {
LABEL_4:
        v21 += v56;
        v22 += v56;
        if (++v59 == v49)
          return;
        goto LABEL_5;
      }
      v45 = *a4;
      if (!*a4)
        break;
      v46 = v45 + v22 + v23;
      v47 = v45 + v21 + v23;
      sub_1002B4C24(v46, v61);
      swift_arrayInitWithTakeFrontToBack(v46, v47, 1, v60);
      sub_1002B4C24(v61, v47);
      v23 -= v56;
      if (v59 == ++v64)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1002B2FA4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;

  v87 = type metadata accessor for Date(0);
  v94 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v86 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v85 = (char *)&v77 - v10;
  v89 = sub_10002A750(&qword_100654148);
  __chkstk_darwin(v89);
  v84 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v93 = (char *)&v77 - v13;
  __chkstk_darwin(v14);
  v92 = (uint64_t)&v77 - v15;
  __chkstk_darwin(v16);
  v91 = (uint64_t)&v77 - v17;
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_61;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_62;
  v21 = (uint64_t)(a2 - a1) / v19;
  v97 = a1;
  v96 = a4;
  v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v22, v89);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v49 = a4 + v24;
      v95 = a4 + v24;
      v97 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v51 = -v19;
        v79 = a1;
        v80 = a4;
        v78 = -v19;
        v52 = v87;
        do
        {
          v90 = a2;
          v88 = a3;
          v83 = a3 + v51;
          v53 = v91;
          sub_1002B4BDC(v49 + v51, v91);
          v81 = a2 + v51;
          v54 = v92;
          sub_1002B4BDC(a2 + v51, v92);
          v55 = v89;
          v56 = *(int *)(v89 + 48);
          v57 = v93;
          v58 = (uint64_t)&v93[v56];
          v59 = v53 + v56;
          v60 = type metadata accessor for UUID(0);
          v82 = *(_QWORD *)(v60 - 8);
          v61 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
          v61(v57, v53, v60);
          sub_10002B1E8(v59, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v62 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
          v63 = v85;
          v62(v85, v58, v52);
          sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v64 = *(int *)(v55 + 48);
          v65 = v84;
          v66 = (uint64_t)&v84[v64];
          v67 = v54 + v64;
          v61(v84, v54, v60);
          sub_10002B1E8(v67, v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          v68 = v86;
          v62(v86, v66, v52);
          sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          LOBYTE(v66) = static Date.> infix(_:_:)(v63, v68);
          v69 = *(void (**)(char *, uint64_t))(v94 + 8);
          v69(v68, v52);
          v69(v63, v52);
          v70 = *(void (**)(char *, uint64_t))(v82 + 8);
          v70(v65, v60);
          v70(v93, v60);
          sub_1000073A0(v54, &qword_100654148);
          sub_1000073A0(v91, &qword_100654148);
          if ((v66 & 1) != 0)
          {
            v51 = v78;
            a3 = v83;
            if (v88 < v90 || v83 >= v90)
            {
              v73 = v81;
              swift_arrayInitWithTakeFrontToBack(v83, v81, 1, v89);
              v71 = v79;
              v72 = v80;
            }
            else
            {
              v71 = v79;
              v72 = v80;
              v73 = v81;
              if (v88 != v90)
                swift_arrayInitWithTakeBackToFront(v83, v81);
            }
            v97 += v51;
          }
          else
          {
            v73 = v90;
            v74 = v95;
            v75 = v95 + v78;
            v95 += v78;
            v51 = v78;
            a3 = v83;
            if (v88 < v74 || v83 >= v74)
            {
              swift_arrayInitWithTakeFrontToBack(v83, v75, 1, v89);
              v71 = v79;
              v72 = v80;
            }
            else
            {
              v71 = v79;
              v72 = v80;
              if (v88 != v74)
                swift_arrayInitWithTakeBackToFront(v83, v75);
            }
          }
          v49 = v95;
          if (v95 <= v72)
            break;
          a2 = v73;
        }
        while (v73 > v71);
      }
LABEL_59:
      sub_100392DCC(&v97, &v96, (uint64_t *)&v95);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v21, v89);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v82 = a4 + v23;
    v95 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v88 = a3;
      v81 = v19;
      while (1)
      {
        v90 = a2;
        v26 = v91;
        sub_1002B4BDC(a2, v91);
        sub_1002B4BDC(a4, v92);
        v27 = v89;
        v28 = *(int *)(v89 + 48);
        v29 = v93;
        v30 = (uint64_t)&v93[v28];
        v31 = v26 + v28;
        v32 = type metadata accessor for UUID(0);
        v83 = *(_QWORD *)(v32 - 8);
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
        v33(v29, v26, v32);
        sub_10002B1E8(v31, v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
        v35 = v85;
        v36 = v87;
        v34(v85, v30, v87);
        sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v37 = *(int *)(v27 + 48);
        v38 = v84;
        v39 = (uint64_t)&v84[v37];
        v40 = v92 + v37;
        ((void (*)(char *))v33)(v84);
        sub_10002B1E8(v40, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        v41 = v86;
        v34(v86, v39, v36);
        sub_10001F544(v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        LOBYTE(v39) = static Date.> infix(_:_:)(v35, v41);
        v42 = *(void (**)(char *, uint64_t))(v94 + 8);
        v42(v41, v36);
        v42(v35, v36);
        v43 = *(void (**)(char *, uint64_t))(v83 + 8);
        v43(v38, v32);
        v43(v93, v32);
        sub_1000073A0(v92, &qword_100654148);
        sub_1000073A0(v91, &qword_100654148);
        v44 = v97;
        if ((v39 & 1) != 0)
        {
          v45 = v81;
          v46 = v90 + v81;
          if (v97 < v90 || v97 >= v46)
          {
            swift_arrayInitWithTakeFrontToBack(v97, v90, 1, v89);
            v47 = v88;
          }
          else
          {
            v47 = v88;
            if (v97 == v90)
              v44 = v90;
            else
              swift_arrayInitWithTakeBackToFront(v97, v90);
          }
          goto LABEL_36;
        }
        v46 = v90;
        v45 = v81;
        v48 = v96 + v81;
        if (v97 < v96 || v97 >= v48)
        {
          swift_arrayInitWithTakeFrontToBack(v97, v96, 1, v89);
          v47 = v88;
        }
        else
        {
          v47 = v88;
          if (v97 != v96)
          {
            swift_arrayInitWithTakeBackToFront(v97, v96);
            v96 = v48;
            goto LABEL_36;
          }
        }
        v96 = v48;
LABEL_36:
        v97 = v44 + v45;
        a4 = v96;
        if (v96 < v82)
        {
          a2 = v46;
          if (v46 < v47)
            continue;
        }
        goto LABEL_59;
      }
    }
    goto LABEL_59;
  }
LABEL_63:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1002B375C(_QWORD *a1)
{
  return sub_1004557A8(0, a1[2], 0, a1);
}

uint64_t sub_1002B3770(unint64_t a1)
{
  return sub_1004557D0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1002B3784(unint64_t a1)
{
  return sub_100455AAC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1002B3798(_QWORD *a1)
{
  return sub_10001D840(0, a1[2], 0, a1);
}

uint64_t sub_1002B37AC(unint64_t a1)
{
  return sub_100456150(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1002B37C0(unint64_t a1)
{
  return sub_1004561B4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1002B37D4(_QWORD *a1)
{
  return sub_1004561C8(0, a1[2], 0, a1);
}

uint64_t sub_1002B37E8(unint64_t a1)
{
  return sub_100456438(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1002B37FC(_QWORD *a1)
{
  return sub_10045644C(0, a1[2], 0, a1);
}

uint64_t sub_1002B3810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_1002B3878(unint64_t a1)
{
  return sub_100457004(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1002B388C(unint64_t a1)
{
  return sub_100457124(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1002B38A0(unint64_t a1)
{
  return sub_100457138(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1002B38B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;

  v7 = (_QWORD *)result;
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v16 = a4;
    else
      v16 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a4);
    if (!a2)
      goto LABEL_29;
  }
  else
  {
    v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
      goto LABEL_29;
  }
  if (!a3)
  {
LABEL_30:
    *v7 = a4;
    v7[1] = v8;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (!v8)
  {
LABEL_29:
    a3 = 0;
    goto LABEL_30;
  }
  if ((a4 & 0xC000000000000001) != 0)
  {
    v9 = __OFSUB__(v8--, 1);
    if (!v9)
    {
      v10 = 0;
      do
      {
        result = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a4);
        *(_QWORD *)(a2 + 8 * v10) = result;
        if (a3 - 1 == v10)
          goto LABEL_30;
        if (!v8)
        {
          a3 = v10 + 1;
          goto LABEL_30;
        }
        ++v10;
        v9 = __OFSUB__(v8--, 1);
      }
      while (!v9);
    }
    __break(1u);
  }
  v11 = (void *)(v8 - 1);
  if (!__OFSUB__(v8, 1))
  {
    v12 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v11 >= v12)
    {
LABEL_20:
      __break(1u);
    }
    else
    {
      v13 = 0;
      while (1)
      {
        v11 = *(void **)(a4 + 24 + 8 * v8);
        *(_QWORD *)(a2 + 8 * v13) = v11;
        if (a3 - 1 == v13)
          break;
        if (v8 == 1)
        {
          v8 = 0;
          a3 = v13 + 1;
          goto LABEL_22;
        }
        v14 = v11;
        v11 = (void *)(v8 - 2);
        ++v13;
        --v8;
        if ((unint64_t)v11 >= v12)
          goto LABEL_20;
      }
    }
    --v8;
LABEL_22:
    v15 = v11;
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1002B3A18(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t *sub_1002B3C14(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[5];

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_100005ED8(0, &qword_100649ED8, REMAccountCapabilities_ptr);
    v11 = sub_1002B4C8C();
    result = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    v4 = v36[0];
    v12 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
    v32 = v7;
    if (v6)
      goto LABEL_6;
LABEL_39:
    v16 = 0;
LABEL_49:
    *v32 = v4;
    v32[1] = v12;
    v32[2] = v13;
    v32[3] = v14;
    v32[4] = v15;
    return (uint64_t *)v16;
  }
  v14 = 0;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v28;
  v29 = -v28;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v15 = v30 & *(_QWORD *)(a4 + 56);
  v32 = result;
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v16 = 0;
    goto LABEL_49;
  }
  if (a3 < 0)
    goto LABEL_51;
  v16 = 0;
  v33 = (unint64_t)(v13 + 64) >> 6;
  v31 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      v23 = v12;
      v24 = __CocoaSet.Iterator.next()(result);
      if (!v24)
        goto LABEL_48;
      v25 = v24;
      v34 = v24;
      v26 = sub_100005ED8(0, &qword_100649ED8, REMAccountCapabilities_ptr);
      swift_unknownObjectRetain(v25);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
      v19 = v35;
      result = (uint64_t *)swift_unknownObjectRelease(v25);
      v12 = v23;
      if (!v19)
        goto LABEL_48;
      goto LABEL_11;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_10;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v33)
    {
      v15 = 0;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_26;
    v22 = v14 + 2;
    if (v14 + 2 >= v33)
    {
      v15 = 0;
      ++v14;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v33)
        goto LABEL_45;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_26;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v33)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_48;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v33)
        {
LABEL_45:
          v15 = 0;
          v14 = v22;
          goto LABEL_48;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v27 = v14 + 6;
          while (v33 != v27)
          {
            v21 = *(_QWORD *)(v12 + 8 * v27++);
            if (v21)
            {
              v20 = v27 - 1;
              goto LABEL_26;
            }
          }
          v15 = 0;
          v14 = v33 - 1;
          goto LABEL_48;
        }
        goto LABEL_26;
      }
    }
    v20 = v22;
LABEL_26:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_48;
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_48:
      v13 = v31;
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

_QWORD *sub_1002B3F1C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v26 = result;
  v11 = 0;
  v12 = 0;
  v27 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = *(_QWORD *)(a4 + 56) + 56 * v14;
    v20 = *(_QWORD *)(v18 + 16);
    v19 = *(_QWORD *)(v18 + 24);
    v21 = *(_QWORD *)(v18 + 32);
    v22 = *(void **)(v18 + 40);
    v23 = *(_QWORD *)(v18 + 48);
    *(_OWORD *)v10 = *(_OWORD *)v18;
    *(_QWORD *)(v10 + 16) = v20;
    *(_QWORD *)(v10 + 24) = v19;
    *(_QWORD *)(v10 + 32) = v21;
    *(_QWORD *)(v10 + 40) = v22;
    *(_QWORD *)(v10 + 48) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      v24 = v22;
      goto LABEL_38;
    }
    v10 += 56;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    result = v22;
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v27)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v27)
      {
        v8 = 0;
        v11 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (v16)
          goto LABEL_14;
        v17 = v15 + 2;
        if (v15 + 2 >= v27)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          v15 = v17;
          goto LABEL_18;
        }
        v11 = v15 + 3;
        if (v15 + 3 < v27)
        {
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            v15 = v11;
            goto LABEL_18;
          }
          v17 = v15 + 4;
          if (v15 + 4 >= v27)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v16 = *(_QWORD *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v15 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v15 >= v27)
              {
                v8 = 0;
                v11 = v27 - 1;
                goto LABEL_37;
              }
              v16 = *(_QWORD *)(v5 + 8 * v15);
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v15 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v25;
      result = v26;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1002B417C(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1002B4310(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 56);
  v16 = a4 + 56;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 24);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 24);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_10002B1E8(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580((uint64_t)v14, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

void sub_1002B45CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_10002A750(&qword_100654148);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v37 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v31 = v37;
    *a1 = a4;
    a1[1] = v31;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v18 = 0;
  v19 = 0;
  v36 = (unint64_t)(63 - v15) >> 6;
  v33 = v36 - 1;
  v20 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v26 = *(_QWORD *)(a4 + 48);
    v27 = type metadata accessor for UUID(0);
    v28 = (*(double (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v10, v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v22, v27);
    v29 = *(_QWORD *)(a4 + 56);
    v30 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning(0, v28);
    sub_10002B1E8(v29 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v22, (uint64_t)&v10[*(int *)(v39 + 48)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    sub_1002B4C24((uint64_t)v10, (uint64_t)v13);
    sub_1002B4C24((uint64_t)v13, a2);
    if (v19 == v20)
      goto LABEL_37;
    a2 += *(_QWORD *)(v38 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v36)
      goto LABEL_33;
    v24 = *(_QWORD *)(v37 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v36)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v37 + 8 * v18);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v36)
    goto LABEL_33;
  v24 = *(_QWORD *)(v37 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v18 = v23 + 3;
  if (v23 + 3 >= v36)
  {
    v17 = 0;
    v18 = v23 + 2;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v37 + 8 * v18);
  if (v24)
  {
LABEL_14:
    v23 = v18;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v36)
  {
LABEL_33:
    v17 = 0;
LABEL_37:
    v15 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(v37 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v36)
    {
      v17 = 0;
      v18 = v33;
      goto LABEL_37;
    }
    v24 = *(_QWORD *)(v37 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_1002B48CC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1002B4AC8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;

  a3[5] = a4;
  a3[6] = a5;
  v9 = sub_100028D70(a3 + 2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a1, a4);
  a3[7] = a2;
  return a3;
}

_QWORD *sub_1002B4B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;

  v9 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(a1);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v13 = (_QWORD *)swift_allocObject(v12, 64, 7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  v13[5] = a4;
  v13[6] = a5;
  v14 = sub_100028D70(v13 + 2);
  (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 32))(v14, v11, a4);
  v13[7] = a2;
  return v13;
}

uint64_t sub_1002B4BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100654148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B4C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100654148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TTRSmartListVersionWarningInteractor()
{
  return objc_opt_self(_TtC9Reminders36TTRSmartListVersionWarningInteractor);
}

unint64_t sub_1002B4C8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649EE8;
  if (!qword_100649EE8)
  {
    v1 = sub_100005ED8(255, &qword_100649ED8, REMAccountCapabilities_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100649EE8);
  }
  return result;
}

void sub_1002B4CE4(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_1005FE870, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_1002DCDFC, v9);
  swift_release(v6);
  swift_release(v9);

}

void sub_1002B4D94(uint64_t a1@<X8>)
{
  sub_1002B4DD8(&qword_100646A40, &qword_100646A48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)sub_1002B8574, (uint64_t)sub_100108978, (uint64_t)&qword_100640FF8, (uint64_t)sub_10010AE34, (uint64_t)&unk_100640FE0, a1);
}

void sub_1002B4DD8(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  id v59;
  void *v60;
  uint64_t v61;
  char *v62;
  _QWORD v63[19];
  uint64_t v64;
  uint64_t *v65;
  uint64_t (*v66)(_QWORD);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v72 = a9;
  v73 = a8;
  v63[18] = a7;
  v70 = a6;
  v67 = a4;
  v68 = a5;
  v71 = type metadata accessor for Logger(0);
  v63[3] = *(_QWORD *)(v71 - 8);
  v13 = __chkstk_darwin(v71);
  v63[2] = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63[1] = (char *)v63 - v15;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v63[9] = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v69 = (char *)v63 - v20;
  v65 = a1;
  v21 = sub_10002A750(a1);
  v22 = __chkstk_darwin(v21);
  v63[10] = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v63[8] = (char *)v63 - v25;
  v26 = __chkstk_darwin(v24);
  v63[16] = (char *)v63 - v27;
  __chkstk_darwin(v26);
  v63[17] = (char *)v63 - v28;
  v64 = sub_10002A750(a2);
  v29 = __chkstk_darwin(v64);
  v63[7] = (char *)v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v63[5] = (char *)v63 - v32;
  v33 = __chkstk_darwin(v31);
  v63[14] = (char *)v63 - v34;
  __chkstk_darwin(v33);
  v63[15] = (char *)v63 - v35;
  v66 = a3;
  v36 = a3(0);
  v37 = __chkstk_darwin(v36);
  v63[6] = (char *)v63 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v63[4] = (char *)v63 - v40;
  v41 = __chkstk_darwin(v39);
  v63[12] = (char *)v63 - v42;
  __chkstk_darwin(v41);
  v63[13] = (char *)v63 - v43;
  v44 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v44);
  v46 = (char *)v63 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v47);
  v49 = (char *)v63 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10002A750(&qword_100646950);
  v51 = __chkstk_darwin(v50);
  v63[11] = (char *)v63 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v51);
  v54 = __chkstk_darwin(v53);
  v56 = (char *)v63 - v55;
  __chkstk_darwin(v54);
  v58 = (char *)v63 - v57;
  v59 = objc_msgSend(*(id *)(v9 + qword_100653C78), "destinationIndexPath");
  if (v59)
  {
    v60 = v59;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v59);

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v56, 0, 1, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v56, 1, 1, v16);
  }
  sub_10000F614((uint64_t)v56, (uint64_t)v58, &qword_100646950);
  sub_10002B1E8(v9 + qword_100673760, (uint64_t)v49, type metadata accessor for TTRITreeViewDropProposal);
  sub_10001F580((uint64_t)&v49[*(int *)(v47 + 20)], (uint64_t)v46, type metadata accessor for TTRITreeViewDropProposal.Intent);
  v61 = sub_10002A750(&qword_100653E50);
  v62 = (char *)&loc_1002B52AC
      + dword_1002B5CDC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v46, 4, v61)];
  __asm { BR              X10 }
}

uint64_t sub_1002B52BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;

  v7 = *(_QWORD *)(v6 - 128);
  v8 = v0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v0);
  v9 = *v2;
  v10 = *v2 == 2;
  if ((unint64_t)*v2 >= 2)
  {
    v11 = v3;
    if (v10)
    {
      if (qword_10063D5E8 != -1)
        swift_once(&qword_10063D5E8, sub_1002A17C8);
      v12 = sub_100012DC4(*(_QWORD *)(v6 - 112), (uint64_t)qword_100653C60);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.fault.getter(v13);
      v15 = os_log_type_enabled(v13, v14);
      v19 = *(_QWORD *)(v6 - 104);
      if (!v15)
        goto LABEL_17;
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      v17 = "Unexpected operation=.copy for intent=.multiRowReordering";
    }
    else
    {
      *(_QWORD *)(v6 - 176) = v1;
      if (v9 != 3)
      {
        if (qword_10063D5E8 != -1)
          swift_once(&qword_10063D5E8, sub_1002A17C8);
        v43 = *(_QWORD *)(v6 - 112);
        v44 = sub_100012DC4(v43, (uint64_t)qword_100653C60);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 296) + 16))(*(_QWORD *)(v6 - 304), v44, v43);
        v45 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        v46 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
        sub_1002EB23C((uint64_t)"Unknown UIDropOperation", 23, 2uLL, v45, v46);
        __break(1u);
        JUMPOUT(0x1002B5CDCLL);
      }
      v22 = sub_1002C1BF0(*(uint64_t (**)(_QWORD))(v6 - 144));
      v24 = v23 & 1;
      v25 = v3;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v27 = *(_QWORD *)(v6 - 232);
      v28 = *(_QWORD *)(v6 - 128);
      v26(v27, v28, v0);
      v4(v27, 0, 1, v0);
      v29 = *(_QWORD *)(v6 - 240);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v6 - 136))(v22, v24, v27);
      swift_bridgeObjectRelease(v22);
      sub_1000073A0(v27, &qword_100646950);
      v30 = sub_10002A750(*(uint64_t **)(v6 - 120));
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30) != 1)
      {
        v33 = *(_QWORD *)(v29 + *(int *)(v30 + 48));
        v34 = *(_QWORD *)(v6 - 168);
        v35 = *(int *)(v34 + 48);
        v36 = v29;
        v37 = *(_QWORD *)(v6 - 264);
        v38 = *(uint64_t (**)(_QWORD))(v6 - 152);
        sub_10001F580(v36, v37, v38);
        *(_QWORD *)(v37 + v35) = v33;
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v8);
        sub_1000073A0(*(_QWORD *)(v6 - 176), &qword_100646950);
        v39 = *(_QWORD *)(v37 + *(int *)(v34 + 48));
        v40 = *(_QWORD *)(v6 - 272);
        sub_10001F580(v37, v40, v38);
        v41 = *(int *)(v30 + 48);
        v42 = v40;
        v19 = *(_QWORD *)(v6 - 104);
        sub_10001F580(v42, v19, v38);
        v18 = 0;
        *(_QWORD *)(v19 + v41) = v39;
        goto LABEL_9;
      }
      sub_1000073A0(v29, *(uint64_t **)(v6 - 160));
      v19 = *(_QWORD *)(v6 - 104);
      if (qword_10063D5E8 != -1)
        swift_once(&qword_10063D5E8, sub_1002A17C8);
      v31 = sub_100012DC4(*(_QWORD *)(v6 - 112), (uint64_t)qword_100653C60);
      v13 = Logger.logObject.getter(v31);
      v14 = static os_log_type_t.fault.getter(v13);
      v32 = os_log_type_enabled(v13, v14);
      v1 = *(_QWORD *)(v6 - 176);
      if (!v32)
        goto LABEL_17;
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      v17 = "Unable to get parent/index";
    }
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v17, v16, 2u);
    swift_slowDealloc(v16, -1, -1);
LABEL_17:

    (*(void (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v6 - 128), v8);
    sub_1000073A0(v1, &qword_100646950);
    v18 = 3;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v0);
  sub_1000073A0(v1, &qword_100646950);
  v18 = 3;
  v19 = *(_QWORD *)(v6 - 104);
LABEL_9:
  v20 = sub_10002A750(*(uint64_t **)(v6 - 96));
  return swift_storeEnumTagMultiPayload(v19, v20, v18);
}

uint64_t sub_1002B5CF0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;

  v2 = v1;
  v51 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v52 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v65 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v63 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v62 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_1006549E0);
  __chkstk_darwin(v12);
  v67 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10002A750(&qword_100641008);
  v61 = *(_QWORD *)(v66 - 8);
  v14 = __chkstk_darwin(v66);
  v60 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v53 = (uint64_t)&v48 - v16;
  v59 = sub_10002A750(&qword_100641000);
  v17 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v19 = (void **)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = objc_msgSend(*(id *)(v2 + qword_100653C78), "items");
  v21 = sub_10002A750(&qword_100641010);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  swift_retain(v2);
  v23 = sub_10007302C(v22, v2);
  swift_bridgeObjectRelease(v22);
  swift_release(v2);
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v50 = 0;
    v25 = v23 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v56 = *(_QWORD *)(v17 + 72);
    v49 = v23;
    swift_bridgeObjectRetain(v23);
    v26 = _swiftEmptyArrayStorage;
    v57 = v10;
    v58 = v5;
    v27 = v10;
    v28 = v61;
    v29 = v62;
    while (1)
    {
      v64 = v26;
      v30 = v29;
      v31 = (uint64_t)v5;
      sub_10000735C(v25, (uint64_t)v19, &qword_100641000);
      v32 = v19;
      v33 = v59;
      v34 = v65;
      sub_10000735C((uint64_t)v32 + *(int *)(v59 + 36), v65, &qword_100646950);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v34, 1, v27) == 1)
      {
        sub_1000073A0(v65, &qword_100646950);
        v19 = v32;
        v26 = v64;
      }
      else
      {
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
        v35(v30, v65, v27);
        sub_10000735C((uint64_t)v32 + *(int *)(v33 + 40), v31, (uint64_t *)&unk_100640E00);
        v19 = v32;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v31, 1, v55) != 1)
        {
          v36 = v31;
          v37 = v30;
          v38 = v66;
          v39 = v67;
          v40 = v52;
          sub_10001F580(v36, v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v41 = *v19;
          v35(&v39[*(int *)(v38 + 36)], (uint64_t)v37, v27);
          sub_10001F580(v40, (uint64_t)&v39[*(int *)(v38 + 40)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(_QWORD *)v39 = v41;
          v28 = v61;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v39, 0, 1, v38);
          v42 = v41;
          v26 = v64;
          goto LABEL_11;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v27);
        sub_1000073A0(v31, (uint64_t *)&unk_100640E00);
        v28 = v61;
        v26 = v64;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v67, 1, 1, v66);
LABEL_11:
      sub_1000073A0((uint64_t)v19, &qword_100641000);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v67, 1, v66) == 1)
      {
        sub_1000073A0((uint64_t)v67, (uint64_t *)&unk_1006549E0);
        v27 = v57;
        v5 = v58;
        v29 = v62;
      }
      else
      {
        v43 = v53;
        sub_10000F614((uint64_t)v67, v53, &qword_100641008);
        sub_10000F614(v43, v60, &qword_100641008);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
        v27 = v57;
        v29 = v62;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v26 = (_QWORD *)sub_100456438(0, v26[2] + 1, 1, (unint64_t)v26);
        v46 = v26[2];
        v45 = v26[3];
        if (v46 >= v45 >> 1)
          v26 = (_QWORD *)sub_100456438(v45 > 1, v46 + 1, 1, (unint64_t)v26);
        v26[2] = v46 + 1;
        v28 = v61;
        sub_10000F614(v60, (uint64_t)v26+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v61 + 72) * v46, &qword_100641008);
        v5 = v58;
      }
      v25 += v56;
      if (!--v24)
      {
        swift_bridgeObjectRelease_n(v49, 2);
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease(v23);
  v26 = _swiftEmptyArrayStorage;
LABEL_19:
  v68 = v26;
  if ((v51 & 1) != 0)
  {
    sub_1002C1DB8((uint64_t *)&v68, &qword_100641008, (uint64_t (*)(uint64_t))sub_1002B37E8, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100392C64);
    return (uint64_t)v68;
  }
  return (uint64_t)v26;
}

uint64_t sub_1002B62D0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  void **v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;

  v2 = v1;
  v52 = a1;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v66 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v63 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100654940);
  __chkstk_darwin(v12);
  v68 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10002A750((uint64_t *)&unk_100654920);
  v62 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v61 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v54 = (uint64_t)&v49 - v16;
  v60 = sub_10002A750(&qword_100654918);
  v17 = *(_QWORD *)(v60 - 8);
  v18 = __chkstk_darwin(v60);
  v20 = (void **)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = objc_msgSend(*(id *)(v2 + qword_100653C78), "items", v18);
  v22 = sub_10002A750(&qword_100641010);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  swift_retain();
  v24 = sub_1002D600C(v23, v2);
  swift_bridgeObjectRelease(v23);
  swift_release();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v51 = 0;
    v26 = v24 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v57 = *(_QWORD *)(v17 + 72);
    v50 = v24;
    swift_bridgeObjectRetain(v24);
    v27 = _swiftEmptyArrayStorage;
    v58 = v10;
    v59 = v5;
    v28 = v10;
    v29 = v62;
    v30 = v63;
    while (1)
    {
      v65 = v27;
      v31 = v30;
      v32 = (uint64_t)v5;
      sub_10000735C(v26, (uint64_t)v20, &qword_100654918);
      v33 = v20;
      v34 = v60;
      v35 = v66;
      sub_10000735C((uint64_t)v33 + *(int *)(v60 + 36), v66, &qword_100646950);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v35, 1, v28) == 1)
      {
        sub_1000073A0(v66, &qword_100646950);
        v20 = v33;
        v27 = v65;
      }
      else
      {
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
        v36(v31, v66, v28);
        sub_10000735C((uint64_t)v33 + *(int *)(v34 + 40), v32, (uint64_t *)&unk_100640EB0);
        v20 = v33;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v32, 1, v56) != 1)
        {
          v37 = v32;
          v38 = v31;
          v39 = v67;
          v40 = v68;
          v41 = v53;
          sub_10001F580(v37, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v42 = *v20;
          v36(&v40[*(int *)(v39 + 36)], (uint64_t)v38, v28);
          sub_10001F580(v41, (uint64_t)&v40[*(int *)(v39 + 40)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(_QWORD *)v40 = v42;
          v29 = v62;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v40, 0, 1, v39);
          v43 = v42;
          v27 = v65;
          goto LABEL_11;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v28);
        sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
        v29 = v62;
        v27 = v65;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v68, 1, 1, v67);
LABEL_11:
      sub_1000073A0((uint64_t)v20, &qword_100654918);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v68, 1, v67) == 1)
      {
        sub_1000073A0((uint64_t)v68, (uint64_t *)&unk_100654940);
        v28 = v58;
        v5 = v59;
        v30 = v63;
      }
      else
      {
        v44 = v54;
        sub_10000F614((uint64_t)v68, v54, (uint64_t *)&unk_100654920);
        sub_10000F614(v44, v61, (uint64_t *)&unk_100654920);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
        v28 = v58;
        v30 = v63;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v27 = (_QWORD *)sub_100457124(0, v27[2] + 1, 1, (unint64_t)v27);
        v47 = v27[2];
        v46 = v27[3];
        if (v47 >= v46 >> 1)
          v27 = (_QWORD *)sub_100457124(v46 > 1, v47 + 1, 1, (unint64_t)v27);
        v27[2] = v47 + 1;
        v29 = v62;
        sub_10000F614(v61, (uint64_t)v27+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v62 + 72) * v47, (uint64_t *)&unk_100654920);
        v5 = v59;
      }
      v26 += v57;
      if (!--v25)
      {
        swift_bridgeObjectRelease_n(v50, 2);
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease(v24);
  v27 = _swiftEmptyArrayStorage;
LABEL_19:
  v69 = v27;
  if ((v52 & 1) != 0)
  {
    sub_1002C1DB8((uint64_t *)&v69, (uint64_t *)&unk_100654920, (uint64_t (*)(uint64_t))sub_1002B388C, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100392DC0);
    return (uint64_t)v69;
  }
  return (uint64_t)v27;
}

void sub_1002B68B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  void *v54;
  Class isa;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[32];
  uint64_t v72;
  uint64_t v73[2];

  v67 = a1;
  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v65 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v2;
  v13 = sub_10006B64C();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v68 = a2;
  v70 = sub_100073338(a2, v14);
  if (v70)
  {
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_49;
    v64 = v13;
    v20 = sub_1002AA398(v70);
    v13 = v64;
    if ((v21 & 1) == 0)
      goto LABEL_49;
    v22 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v20);
    v58 = v22;
    v59 = v4;
    if ((v19 & 1) != 0)
    {
      v23 = v70;
      Strong = swift_weakLoadStrong(v70 + 56);
      swift_retain(v23);
      v57 = v6;
      v25 = 0;
      if (Strong)
      {
        v62 = v11;
        v63 = v10;
        v60 = v15;
        v61 = v9;
        v69 = v17;
        while (1)
        {
          v26 = __OFADD__(v25++, 1);
          if (v26)
          {
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            swift_once(&qword_10063D5E8, sub_1002A17C8);
LABEL_53:
            v42 = type metadata accessor for Logger(0);
            sub_100012DC4(v42, (uint64_t)qword_100653C60);
            v43 = sub_10002B1E8(v68, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            v44 = Logger.logObject.getter(v43);
            v45 = (uint64_t)v6;
            v46 = static os_log_type_t.fault.getter(v44);
            if (os_log_type_enabled(v44, v46))
            {
              v47 = (uint8_t *)swift_slowAlloc(12, -1);
              v48 = swift_slowAlloc(32, -1);
              v73[0] = v48;
              *(_DWORD *)v47 = 136315138;
              v49 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
              v50 = TTRTreeStorageItem.treeItemDescription.getter(v15, v49);
              v52 = v51;
              v72 = sub_100027E40(v50, v51, v73);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73, v47 + 4, v47 + 12);
              swift_bridgeObjectRelease(v52);
              sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v44, v46, "Row for the given item doesn't exist. Make sure the item is added to the tree view first {item: %s}", v47, 0xCu);
              swift_arrayDestroy(v48, 1, &type metadata for Any[8]);
              swift_slowDealloc(v48, -1, -1);
              swift_slowDealloc(v47, -1, -1);
            }
            else
            {
              sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            }

            return;
          }
          v6 = (char *)Strong;
          swift_beginAccess(Strong + 64, v71, 0, 0);
          v27 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v27 >> 62)
          {
            if (v27 < 0)
              v34 = *(_QWORD *)(Strong + 64);
            else
              v34 = v27 & 0xFFFFFFFFFFFFFF8;
            swift_retain(v6);
            swift_bridgeObjectRetain(v27);
            v28 = _CocoaArrayWrapper.endIndex.getter(v34);
            if (!v28)
            {
LABEL_7:
              swift_release(v23);
              swift_bridgeObjectRelease(v27);
              goto LABEL_8;
            }
          }
          else
          {
            v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain(Strong);
            swift_bridgeObjectRetain(v27);
            if (!v28)
              goto LABEL_7;
          }
          if ((v27 & 0xC000000000000001) != 0)
          {
            v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
            if (v29 != v23)
              goto LABEL_15;
          }
          else
          {
            if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_63;
            v29 = *(_QWORD *)(v27 + 32);
            swift_retain(v29);
            if (v29 != v23)
            {
LABEL_15:
              v30 = 0;
              v15 = v28 - 1;
              while (1)
              {
                v26 = __OFADD__(v25, 1);
                v31 = v25 + 1;
                if (v26)
                  break;
                if ((*(_BYTE *)(v29 + 48) & 1) != 0)
                {
                  v73[0] = 0;
                  sub_10019D874(v29, v73);
                  v32 = v73[0];
                  *(_QWORD *)(v29 + 40) = v73[0];
                  *(_BYTE *)(v29 + 48) = 0;
                }
                else
                {
                  v32 = *(_QWORD *)(v29 + 40);
                }
                swift_release(v29);
                v26 = __OFADD__(v31, v32);
                v25 = v31 + v32;
                if (v26)
                  goto LABEL_59;
                if (v15 == v30)
                {
                  swift_release(v23);
                  swift_bridgeObjectRelease(v27);
                  goto LABEL_37;
                }
                v33 = v30 + 1;
                if ((v27 & 0xC000000000000001) != 0)
                {
                  v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30 + 1, v27);
                  if (__OFADD__(v33, 1))
                    goto LABEL_60;
                }
                else
                {
                  if (v33 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_61;
                  v29 = *(_QWORD *)(v27 + 8 * v30 + 40);
                  swift_retain(v29);
                  if (__OFADD__(v33, 1))
                    goto LABEL_60;
                }
                ++v30;
                if (v29 == v23)
                  goto LABEL_36;
              }
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
          }
LABEL_36:
          swift_bridgeObjectRelease(v27);
          swift_release_n(v23, 2);
LABEL_37:
          v11 = v62;
          v10 = v63;
          v15 = v60;
          v9 = v61;
LABEL_8:
          Strong = swift_weakLoadStrong(v6 + 56);
          swift_release(v6);
          v23 = (uint64_t)v6;
          v17 = v69;
          if (!Strong)
            goto LABEL_46;
        }
      }
      v6 = (char *)v23;
LABEL_46:
      swift_release(v6);
      v41 = v25 - 1;
      v4 = v59;
      if (!__OFSUB__(v25, 1))
      {
        v6 = v57;
        v13 = v64;
        if ((v41 & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(v41, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
LABEL_50:
          swift_release(v70);
          goto LABEL_51;
        }
LABEL_49:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        goto LABEL_50;
      }
    }
    else
    {
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v22 < *(_QWORD *)(v64 + 16))
      {
        v35 = *(_QWORD *)(v64 + 16 * v22 + 40);
        swift_bridgeObjectRetain(v35);
        v36 = v70;
        v38 = sub_100073214(v37, v70);
        v40 = v39;
        swift_bridgeObjectRelease(v35);
        if ((v40 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        }
        else
        {
          IndexPath.init(row:section:)(v38, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
        }
        swift_release(v36);
        v4 = v59;
        v13 = v64;
        goto LABEL_51;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_51:
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v15 = v4;
    sub_1000073A0((uint64_t)v9, &qword_100646950);
    if (qword_10063D5E8 != -1)
      goto LABEL_64;
    goto LABEL_53;
  }
  v53 = v65;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v65, v9, v10);
  v54 = *(void **)(v66 + qword_100653C78);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  swift_unknownObjectRelease(objc_msgSend(v54, "dropItem:toRowAtIndexPath:", v67, isa));

  (*(void (**)(char *, uint64_t))(v11 + 8))(v53, v10);
}

void sub_1002B6F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  void *v53;
  Class isa;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[32];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v66 = a1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v64 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v2;
  v13 = sub_10006B3DC();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v67 = a2;
  v69 = sub_100073228(a2, v14);
  if (v69)
  {
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_48;
    v63 = v13;
    v20 = sub_1002AA398(v69);
    v13 = v63;
    if ((v21 & 1) == 0)
      goto LABEL_48;
    v22 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v20);
    v58 = v4;
    v57 = v22;
    if ((v19 & 1) != 0)
    {
      v23 = v69;
      Strong = swift_weakLoadStrong(v69 + 56);
      swift_retain();
      v56 = v6;
      v25 = 0;
      if (Strong)
      {
        v61 = v11;
        v62 = v10;
        v59 = v15;
        v60 = v9;
        v68 = v17;
        do
        {
          v26 = __OFADD__(v25++, 1);
          if (v26)
          {
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            swift_once(&qword_10063D5E8, sub_1002A17C8);
LABEL_52:
            v42 = type metadata accessor for Logger(0);
            sub_100012DC4(v42, (uint64_t)qword_100653C60);
            v43 = sub_10002B1E8(v67, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v44 = Logger.logObject.getter(v43);
            v45 = static os_log_type_t.fault.getter(v44);
            if (os_log_type_enabled(v44, v45))
            {
              v46 = (uint8_t *)swift_slowAlloc(12, -1);
              v47 = swift_slowAlloc(32, -1);
              v75 = v47;
              *(_DWORD *)v46 = 136315138;
              v73 = v11;
              v74 = sub_1000175C8((unint64_t *)&qword_100654110, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
              v48 = sub_100028D70(&v71);
              sub_10002B1E8((uint64_t)v6, (uint64_t)v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10001413C(&v71, v73);
              v49 = TTRRemindersListViewModel.Item.debugDescription.getter();
              v51 = v50;
              sub_100027F10(&v71);
              v71 = sub_100027E40(v49, v51, &v75);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v46 + 4, v46 + 12);
              swift_bridgeObjectRelease(v51);
              sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v44, v45, "Row for the given item doesn't exist. Make sure the item is added to the tree view first {item: %s}", v46, 0xCu);
              swift_arrayDestroy(v47, 1, &type metadata for Any[8]);
              swift_slowDealloc(v47, -1, -1);
              swift_slowDealloc(v46, -1, -1);
            }
            else
            {
              sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            }

            return;
          }
          v6 = (char *)Strong;
          swift_beginAccess(Strong + 64, v70, 0, 0);
          v27 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v27 >> 62)
          {
            if (v27 < 0)
              v34 = *(_QWORD *)(Strong + 64);
            else
              v34 = v27 & 0xFFFFFFFFFFFFFF8;
            swift_retain();
            swift_bridgeObjectRetain(v27);
            v28 = _CocoaArrayWrapper.endIndex.getter(v34);
            if (!v28)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease(v27);
              goto LABEL_8;
            }
          }
          else
          {
            v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain(v27);
            if (!v28)
              goto LABEL_7;
          }
          if ((v27 & 0xC000000000000001) != 0)
          {
            v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
            if (v29 != v23)
              goto LABEL_15;
          }
          else
          {
            if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_62;
            v29 = *(_QWORD *)(v27 + 32);
            swift_retain();
            if (v29 != v23)
            {
LABEL_15:
              v11 = 0;
              v30 = v28 - 1;
              while (1)
              {
                v26 = __OFADD__(v25, 1);
                v31 = v25 + 1;
                if (v26)
                  break;
                if ((*(_BYTE *)(v29 + 48) & 1) != 0)
                {
                  v71 = 0;
                  sub_10019D874(v29, &v71);
                  v32 = v71;
                  *(_QWORD *)(v29 + 40) = v71;
                  *(_BYTE *)(v29 + 48) = 0;
                }
                else
                {
                  v32 = *(_QWORD *)(v29 + 40);
                }
                swift_release();
                v26 = __OFADD__(v31, v32);
                v25 = v31 + v32;
                if (v26)
                  goto LABEL_58;
                if (v30 == v11)
                {
                  swift_release();
                  swift_bridgeObjectRelease(v27);
                  goto LABEL_37;
                }
                v33 = v11 + 1;
                if ((v27 & 0xC000000000000001) != 0)
                {
                  v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11 + 1, v27);
                  if (__OFADD__(v33, 1))
                    goto LABEL_59;
                }
                else
                {
                  if (v33 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_60;
                  v29 = *(_QWORD *)(v27 + 8 * v11 + 40);
                  swift_retain();
                  if (__OFADD__(v33, 1))
                    goto LABEL_59;
                }
                ++v11;
                if (v29 == v23)
                  goto LABEL_36;
              }
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
          }
LABEL_36:
          swift_bridgeObjectRelease(v27);
          swift_release_n(v23, 2);
LABEL_37:
          v11 = v61;
          v10 = v62;
          v15 = v59;
          v9 = v60;
LABEL_8:
          Strong = swift_weakLoadStrong(v6 + 56);
          swift_release();
          v23 = (uint64_t)v6;
          v17 = v68;
        }
        while (Strong);
      }
      swift_release();
      v40 = v25 - 1;
      v4 = v58;
      if (!__OFSUB__(v25, 1))
      {
        v6 = v56;
        v13 = v63;
        if ((v40 & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(v40, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
LABEL_49:
          swift_release();
          goto LABEL_50;
        }
LABEL_48:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        goto LABEL_49;
      }
    }
    else
    {
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v22 < *(_QWORD *)(v63 + 16))
      {
        v35 = *(_QWORD *)(v63 + 16 * v22 + 40);
        swift_bridgeObjectRetain(v35);
        v37 = sub_100073214(v36, v69);
        v39 = v38;
        swift_bridgeObjectRelease(v35);
        if ((v39 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        }
        else
        {
          IndexPath.init(row:section:)(v37, v57);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
        }
        swift_release();
        v4 = v58;
        v13 = v63;
        goto LABEL_50;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_50:
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  v41 = swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v41) == 1)
  {
    v11 = v4;
    sub_1000073A0((uint64_t)v9, &qword_100646950);
    if (qword_10063D5E8 != -1)
      goto LABEL_63;
    goto LABEL_52;
  }
  v52 = v64;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v64, v9, v10);
  v53 = *(void **)(v65 + qword_100653C78);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  swift_unknownObjectRelease(objc_msgSend(v53, "dropItem:toRowAtIndexPath:", v66, isa));

  (*(void (**)(char *, uint64_t))(v11 + 8))(v52, v10);
}

void sub_1002B76B8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  void *v62;
  Class isa;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[32];
  uint64_t v80;
  uint64_t v81[2];

  v75 = a1;
  v12 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v73 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v6;
  v21 = sub_10006B64C();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v76 = a2;
  v78 = sub_100073338(a2, v22);
  if (v78)
  {
    if (!*(_QWORD *)(v25 + 16))
      goto LABEL_49;
    v72 = v21;
    v28 = sub_1002AA398(v78);
    v21 = v72;
    if ((v29 & 1) == 0)
      goto LABEL_49;
    v30 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v28);
    v67 = v12;
    v66 = v30;
    if ((v27 & 1) != 0)
    {
      v31 = v78;
      Strong = swift_weakLoadStrong(v78 + 56);
      swift_retain(v31);
      v65 = v14;
      v33 = 0;
      if (Strong)
      {
        v70 = v19;
        v71 = v18;
        v68 = v23;
        v69 = v17;
        v77 = v25;
        while (1)
        {
          v34 = __OFADD__(v33++, 1);
          if (v34)
          {
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            swift_once(&qword_10063D5E8, sub_1002A17C8);
LABEL_53:
            v50 = type metadata accessor for Logger(0);
            sub_100012DC4(v50, (uint64_t)qword_100653C60);
            v51 = sub_10002B1E8(v76, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            v52 = Logger.logObject.getter(v51);
            v53 = (uint64_t)v14;
            v54 = static os_log_type_t.fault.getter(v52);
            if (os_log_type_enabled(v52, v54))
            {
              v55 = (uint8_t *)swift_slowAlloc(12, -1);
              v56 = swift_slowAlloc(32, -1);
              v81[0] = v56;
              *(_DWORD *)v55 = 136315138;
              v57 = sub_1000175C8(&qword_1006549D8, (uint64_t (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRAccountsListsViewModel.Item);
              v58 = TTRTreeStorageItem.treeItemDescription.getter(v23, v57);
              v60 = v59;
              v80 = sub_100027E40(v58, v59, v81);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v55 + 4, v55 + 12);
              swift_bridgeObjectRelease(v60);
              sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v52, v54, "Row for the given item doesn't exist. {item: %s}", v55, 0xCu);
              swift_arrayDestroy(v56, 1, &type metadata for Any[8]);
              swift_slowDealloc(v56, -1, -1);
              swift_slowDealloc(v55, -1, -1);
            }
            else
            {
              sub_10001F544(v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
            }

            return;
          }
          v14 = (char *)Strong;
          swift_beginAccess(Strong + 64, v79, 0, 0);
          v35 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v35 >> 62)
          {
            if (v35 < 0)
              v42 = *(_QWORD *)(Strong + 64);
            else
              v42 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_retain(v14);
            swift_bridgeObjectRetain(v35);
            v36 = _CocoaArrayWrapper.endIndex.getter(v42);
            if (!v36)
            {
LABEL_7:
              swift_release(v31);
              swift_bridgeObjectRelease(v35);
              goto LABEL_8;
            }
          }
          else
          {
            v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain(Strong);
            swift_bridgeObjectRetain(v35);
            if (!v36)
              goto LABEL_7;
          }
          if ((v35 & 0xC000000000000001) != 0)
          {
            v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
            if (v37 != v31)
              goto LABEL_15;
          }
          else
          {
            if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_63;
            v37 = *(_QWORD *)(v35 + 32);
            swift_retain(v37);
            if (v37 != v31)
            {
LABEL_15:
              v38 = 0;
              v23 = v36 - 1;
              while (1)
              {
                v34 = __OFADD__(v33, 1);
                v39 = v33 + 1;
                if (v34)
                  break;
                if ((*(_BYTE *)(v37 + 48) & 1) != 0)
                {
                  v81[0] = 0;
                  sub_10019D874(v37, v81);
                  v40 = v81[0];
                  *(_QWORD *)(v37 + 40) = v81[0];
                  *(_BYTE *)(v37 + 48) = 0;
                }
                else
                {
                  v40 = *(_QWORD *)(v37 + 40);
                }
                swift_release(v37);
                v34 = __OFADD__(v39, v40);
                v33 = v39 + v40;
                if (v34)
                  goto LABEL_59;
                if (v23 == v38)
                {
                  swift_release(v31);
                  swift_bridgeObjectRelease(v35);
                  goto LABEL_37;
                }
                v41 = v38 + 1;
                if ((v35 & 0xC000000000000001) != 0)
                {
                  v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v38 + 1, v35);
                  if (__OFADD__(v41, 1))
                    goto LABEL_60;
                }
                else
                {
                  if (v41 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_61;
                  v37 = *(_QWORD *)(v35 + 8 * v38 + 40);
                  swift_retain(v37);
                  if (__OFADD__(v41, 1))
                    goto LABEL_60;
                }
                ++v38;
                if (v37 == v31)
                  goto LABEL_36;
              }
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
          }
LABEL_36:
          swift_bridgeObjectRelease(v35);
          swift_release_n(v31, 2);
LABEL_37:
          v19 = v70;
          v18 = v71;
          v23 = v68;
          v17 = v69;
LABEL_8:
          Strong = swift_weakLoadStrong(v14 + 56);
          swift_release(v14);
          v31 = (uint64_t)v14;
          v25 = v77;
          if (!Strong)
            goto LABEL_46;
        }
      }
      v14 = (char *)v31;
LABEL_46:
      swift_release(v14);
      v49 = v33 - 1;
      v12 = v67;
      if (!__OFSUB__(v33, 1))
      {
        v14 = v65;
        v21 = v72;
        if ((v49 & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(v49, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
LABEL_50:
          swift_release(v78);
          goto LABEL_51;
        }
LABEL_49:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        goto LABEL_50;
      }
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v30 < *(_QWORD *)(v72 + 16))
      {
        v43 = *(_QWORD *)(v72 + 16 * v30 + 40);
        swift_bridgeObjectRetain(v43);
        v44 = v78;
        v46 = sub_100073214(v45, v78);
        v48 = v47;
        swift_bridgeObjectRelease(v43);
        if ((v48 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        }
        else
        {
          IndexPath.init(row:section:)(v46, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
        }
        swift_release(v44);
        v12 = v67;
        v21 = v72;
        goto LABEL_51;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_51:
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v23 = v12;
    sub_1000073A0((uint64_t)v17, &qword_100646950);
    if (qword_10063D5E8 != -1)
      goto LABEL_64;
    goto LABEL_53;
  }
  v61 = v73;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v73, v17, v18);
  v62 = *(void **)(v74 + qword_100653C78);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  swift_unknownObjectRelease(objc_msgSend(v62, "dropItem:intoRowAtIndexPath:rect:", v75, isa, a3, a4, a5, a6));

  (*(void (**)(char *, uint64_t))(v19 + 8))(v61, v18);
}

void sub_1002B7DE4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  void *v61;
  Class isa;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[32];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v74 = a1;
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v72 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v6;
  v21 = sub_10006B3DC();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v75 = a2;
  v77 = sub_100073228(a2, v22);
  if (v77)
  {
    if (!*(_QWORD *)(v25 + 16))
      goto LABEL_48;
    v71 = v21;
    v28 = sub_1002AA398(v77);
    v21 = v71;
    if ((v29 & 1) == 0)
      goto LABEL_48;
    v30 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v28);
    v66 = v12;
    v65 = v30;
    if ((v27 & 1) != 0)
    {
      v31 = v77;
      Strong = swift_weakLoadStrong(v77 + 56);
      swift_retain();
      v64 = v14;
      v33 = 0;
      if (Strong)
      {
        v70 = v18;
        v69 = v19;
        v68 = v17;
        v67 = v23;
        v76 = v25;
        do
        {
          v34 = __OFADD__(v33++, 1);
          if (v34)
          {
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            swift_once(&qword_10063D5E8, sub_1002A17C8);
LABEL_52:
            v50 = type metadata accessor for Logger(0);
            sub_100012DC4(v50, (uint64_t)qword_100653C60);
            v51 = sub_10002B1E8(v75, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v52 = Logger.logObject.getter(v51);
            v53 = static os_log_type_t.fault.getter(v52);
            if (os_log_type_enabled(v52, v53))
            {
              v54 = (uint8_t *)swift_slowAlloc(12, -1);
              v55 = swift_slowAlloc(32, -1);
              v83 = v55;
              *(_DWORD *)v54 = 136315138;
              v81 = v19;
              v82 = sub_1000175C8((unint64_t *)&qword_100654110, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
              v56 = sub_100028D70(&v79);
              sub_10002B1E8((uint64_t)v14, (uint64_t)v56, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10001413C(&v79, v81);
              v57 = TTRRemindersListViewModel.Item.debugDescription.getter();
              v59 = v58;
              sub_100027F10(&v79);
              v79 = sub_100027E40(v57, v59, &v83);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v54 + 4, v54 + 12);
              swift_bridgeObjectRelease(v59);
              sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v52, v53, "Row for the given item doesn't exist. {item: %s}", v54, 0xCu);
              swift_arrayDestroy(v55, 1, &type metadata for Any[8]);
              swift_slowDealloc(v55, -1, -1);
              swift_slowDealloc(v54, -1, -1);
            }
            else
            {
              sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            }

            return;
          }
          v14 = (char *)Strong;
          swift_beginAccess(Strong + 64, v78, 0, 0);
          v35 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v35 >> 62)
          {
            if (v35 < 0)
              v42 = *(_QWORD *)(Strong + 64);
            else
              v42 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_retain();
            swift_bridgeObjectRetain(v35);
            v36 = _CocoaArrayWrapper.endIndex.getter(v42);
            if (!v36)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease(v35);
              goto LABEL_8;
            }
          }
          else
          {
            v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain(v35);
            if (!v36)
              goto LABEL_7;
          }
          if ((v35 & 0xC000000000000001) != 0)
          {
            v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
            if (v37 != v31)
              goto LABEL_15;
          }
          else
          {
            if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_62;
            v37 = *(_QWORD *)(v35 + 32);
            swift_retain();
            if (v37 != v31)
            {
LABEL_15:
              v19 = 0;
              v38 = v36 - 1;
              while (1)
              {
                v34 = __OFADD__(v33, 1);
                v39 = v33 + 1;
                if (v34)
                  break;
                if ((*(_BYTE *)(v37 + 48) & 1) != 0)
                {
                  v79 = 0;
                  sub_10019D874(v37, &v79);
                  v40 = v79;
                  *(_QWORD *)(v37 + 40) = v79;
                  *(_BYTE *)(v37 + 48) = 0;
                }
                else
                {
                  v40 = *(_QWORD *)(v37 + 40);
                }
                swift_release();
                v34 = __OFADD__(v39, v40);
                v33 = v39 + v40;
                if (v34)
                  goto LABEL_58;
                if (v38 == v19)
                {
                  swift_release();
                  swift_bridgeObjectRelease(v35);
                  goto LABEL_37;
                }
                v41 = v19 + 1;
                if ((v35 & 0xC000000000000001) != 0)
                {
                  v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19 + 1, v35);
                  if (__OFADD__(v41, 1))
                    goto LABEL_59;
                }
                else
                {
                  if (v41 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_60;
                  v37 = *(_QWORD *)(v35 + 8 * v19 + 40);
                  swift_retain();
                  if (__OFADD__(v41, 1))
                    goto LABEL_59;
                }
                ++v19;
                if (v37 == v31)
                  goto LABEL_36;
              }
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
          }
LABEL_36:
          swift_bridgeObjectRelease(v35);
          swift_release_n(v31, 2);
LABEL_37:
          v18 = v70;
          v19 = v69;
          v17 = v68;
          v23 = v67;
LABEL_8:
          Strong = swift_weakLoadStrong(v14 + 56);
          swift_release();
          v31 = (uint64_t)v14;
          v25 = v76;
        }
        while (Strong);
      }
      swift_release();
      v48 = v33 - 1;
      v12 = v66;
      if (!__OFSUB__(v33, 1))
      {
        v14 = v64;
        v21 = v71;
        if ((v48 & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(v48, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
LABEL_49:
          swift_release();
          goto LABEL_50;
        }
LABEL_48:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        goto LABEL_49;
      }
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v30 < *(_QWORD *)(v71 + 16))
      {
        v43 = *(_QWORD *)(v71 + 16 * v30 + 40);
        swift_bridgeObjectRetain(v43);
        v45 = sub_100073214(v44, v77);
        v47 = v46;
        swift_bridgeObjectRelease(v43);
        if ((v47 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        }
        else
        {
          IndexPath.init(row:section:)(v45, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
        }
        swift_release();
        v12 = v66;
        v21 = v71;
        goto LABEL_50;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_50:
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  v49 = swift_bridgeObjectRelease(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v19 + 48))(v17, 1, v18, v49) == 1)
  {
    v19 = v12;
    sub_1000073A0((uint64_t)v17, &qword_100646950);
    if (qword_10063D5E8 != -1)
      goto LABEL_63;
    goto LABEL_52;
  }
  v60 = v72;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v72, v17, v18);
  v61 = *(void **)(v73 + qword_100653C78);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  swift_unknownObjectRelease(objc_msgSend(v61, "dropItem:intoRowAtIndexPath:rect:", v74, isa, a3, a4, a5, a6));

  (*(void (**)(char *, uint64_t))(v19 + 8))(v60, v18);
}

_QWORD *sub_1002B8574(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;

  v68 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v82 = *(_QWORD *)(v71 - 8);
  v5 = __chkstk_darwin(v71);
  v81 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v69 = (uint64_t)&v65 - v7;
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v84 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for IndexPath(0);
  v83 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_1006549E0);
  __chkstk_darwin(v12);
  v78 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750(&qword_100641008);
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  v15 = __chkstk_darwin(v14);
  v80 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v77 = (uint64_t)&v65 - v18;
  __chkstk_darwin(v17);
  v70 = (uint64_t)&v65 - v19;
  v76 = sub_10002A750(&qword_100641000);
  v20 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v22 = (void **)((char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = objc_msgSend(*(id *)(v1 + qword_100653C78), "items");
  v24 = sub_10002A750(&qword_100641010);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  swift_retain(v1);
  v26 = sub_10007302C(v25, v1);
  swift_bridgeObjectRelease(v25);
  swift_release(v1);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v67 = 0;
    v28 = v26 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v73 = *(_QWORD *)(v20 + 72);
    v66 = v26;
    swift_bridgeObjectRetain(v26);
    v29 = _swiftEmptyArrayStorage;
    v74 = v11;
    v75 = v4;
    v30 = v11;
    while (1)
    {
      sub_10000735C(v28, (uint64_t)v22, &qword_100641000);
      v31 = v22;
      v32 = v76;
      v33 = v84;
      sub_10000735C((uint64_t)v31 + *(int *)(v76 + 36), v84, &qword_100646950);
      v34 = v33;
      v35 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v34, 1, v79) == 1)
      {
        sub_1000073A0(v84, &qword_100646950);
        v22 = v31;
      }
      else
      {
        v72 = v29;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
        v36(v30, v84, v35);
        sub_10000735C((uint64_t)v31 + *(int *)(v32 + 40), (uint64_t)v4, (uint64_t *)&unk_100640E00);
        v22 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v4, 1, v71) != 1)
        {
          v38 = (uint64_t)v4;
          v39 = v86;
          v40 = v35;
          v41 = v69;
          sub_10001F580(v38, v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v42 = *v22;
          v43 = v30;
          v37 = v78;
          v44 = v40;
          v45 = v85;
          v36(&v78[*(int *)(v39 + 36)], (uint64_t)v43, v44);
          sub_10001F580(v41, (uint64_t)&v37[*(int *)(v39 + 40)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(_QWORD *)v37 = v42;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 1, v39);
          v46 = v42;
          v29 = v72;
          goto LABEL_11;
        }
        (*(void (**)(char *, uint64_t))(v83 + 8))(v30, v35);
        sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640E00);
        v29 = v72;
      }
      v37 = v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v78, 1, 1, v86);
LABEL_11:
      sub_1000073A0((uint64_t)v22, &qword_100641000);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v37, 1, v86) == 1)
      {
        sub_1000073A0((uint64_t)v37, (uint64_t *)&unk_1006549E0);
        v30 = v74;
        v4 = v75;
      }
      else
      {
        v47 = (uint64_t)v37;
        v48 = v70;
        sub_10000F614(v47, v70, &qword_100641008);
        sub_10000F614(v48, v77, &qword_100641008);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
        v30 = v74;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v29 = (_QWORD *)sub_100456438(0, v29[2] + 1, 1, (unint64_t)v29);
        v51 = v29[2];
        v50 = v29[3];
        v52 = (uint64_t)v29;
        if (v51 >= v50 >> 1)
          v52 = sub_100456438(v50 > 1, v51 + 1, 1, (unint64_t)v29);
        *(_QWORD *)(v52 + 16) = v51 + 1;
        v29 = (_QWORD *)v52;
        sub_10000F614(v77, v52+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v51, &qword_100641008);
        v4 = v75;
      }
      v28 += v73;
      if (!--v27)
      {
        swift_bridgeObjectRelease_n(v66, 2);
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease(v26);
  v29 = _swiftEmptyArrayStorage;
LABEL_19:
  v87 = v29;
  v53 = v81;
  if ((v68 & 1) != 0)
  {
    sub_1002C1DB8((uint64_t *)&v87, &qword_100641008, (uint64_t (*)(uint64_t))sub_1002B37E8, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100392C64);
    v29 = v87;
  }
  v54 = v29;
  v55 = v29[2];
  if (v55)
  {
    v87 = _swiftEmptyArrayStorage;
    sub_1003D8320(0, v55, 0);
    v56 = v54;
    v57 = (uint64_t)v54 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    v58 = *(_QWORD *)(v85 + 72);
    do
    {
      v59 = v80;
      sub_10000735C(v57, v80, &qword_100641008);
      sub_10002B1E8(v59 + *(int *)(v86 + 40), v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_1000073A0(v59, &qword_100641008);
      v60 = v87;
      if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
      {
        sub_1003D8320(0, v60[2] + 1, 1);
        v60 = v87;
      }
      v62 = v60[2];
      v61 = v60[3];
      if (v62 >= v61 >> 1)
      {
        sub_1003D8320(v61 > 1, v62 + 1, 1);
        v60 = v87;
      }
      v60[2] = v62 + 1;
      v63 = (uint64_t)v60
          + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))
          + *(_QWORD *)(v82 + 72) * v62;
      v53 = v81;
      sub_10001F580(v81, v63, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v57 += v58;
      --v55;
    }
    while (v55);
    swift_bridgeObjectRelease(v56);
  }
  else
  {
    swift_bridgeObjectRelease(v54);
    return _swiftEmptyArrayStorage;
  }
  return v60;
}

_QWORD *sub_1002B8CF4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void **v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;

  v69 = a1;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v83 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v82 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v70 = (uint64_t)&v66 - v7;
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v85 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for IndexPath(0);
  v84 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100654940);
  __chkstk_darwin(v12);
  v79 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100654920);
  v86 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  __chkstk_darwin(v14);
  v81 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v78 = (uint64_t)&v66 - v17;
  __chkstk_darwin(v18);
  v71 = (uint64_t)&v66 - v19;
  v77 = sub_10002A750(&qword_100654918);
  v20 = *(_QWORD *)(v77 - 8);
  v21 = __chkstk_darwin(v77);
  v23 = (void **)((char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = objc_msgSend(*(id *)(v1 + qword_100653C78), "items", v21);
  v25 = sub_10002A750(&qword_100641010);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  swift_retain();
  v27 = sub_1002D600C(v26, v1);
  swift_bridgeObjectRelease(v26);
  swift_release();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v68 = 0;
    v29 = v27 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v74 = *(_QWORD *)(v20 + 72);
    v67 = v27;
    swift_bridgeObjectRetain(v27);
    v30 = _swiftEmptyArrayStorage;
    v75 = v11;
    v76 = v4;
    v31 = v11;
    while (1)
    {
      sub_10000735C(v29, (uint64_t)v23, &qword_100654918);
      v32 = v23;
      v33 = v77;
      v34 = v85;
      sub_10000735C((uint64_t)v32 + *(int *)(v77 + 36), v85, &qword_100646950);
      v35 = v34;
      v36 = v80;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v35, 1, v80) == 1)
      {
        sub_1000073A0(v85, &qword_100646950);
        v23 = v32;
      }
      else
      {
        v73 = v30;
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 32);
        v37(v31, v85, v36);
        sub_10000735C((uint64_t)v32 + *(int *)(v33 + 40), (uint64_t)v4, (uint64_t *)&unk_100640EB0);
        v23 = v32;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v4, 1, v72) != 1)
        {
          v39 = (uint64_t)v4;
          v40 = v87;
          v41 = v36;
          v42 = v70;
          sub_10001F580(v39, v70, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v43 = *v23;
          v44 = v31;
          v38 = v79;
          v45 = v41;
          v46 = v86;
          v37(&v79[*(int *)(v40 + 36)], (uint64_t)v44, v45);
          sub_10001F580(v42, (uint64_t)&v38[*(int *)(v40 + 40)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(_QWORD *)v38 = v43;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v38, 0, 1, v40);
          v47 = v43;
          v30 = v73;
          goto LABEL_11;
        }
        (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v36);
        sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
        v30 = v73;
      }
      v38 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v79, 1, 1, v87);
LABEL_11:
      sub_1000073A0((uint64_t)v23, &qword_100654918);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v38, 1, v87) == 1)
      {
        sub_1000073A0((uint64_t)v38, (uint64_t *)&unk_100654940);
        v31 = v75;
        v4 = v76;
      }
      else
      {
        v48 = (uint64_t)v38;
        v49 = v71;
        sub_10000F614(v48, v71, (uint64_t *)&unk_100654920);
        sub_10000F614(v49, v78, (uint64_t *)&unk_100654920);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v30);
        v31 = v75;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v30 = (_QWORD *)sub_100457124(0, v30[2] + 1, 1, (unint64_t)v30);
        v52 = v30[2];
        v51 = v30[3];
        v53 = (uint64_t)v30;
        if (v52 >= v51 >> 1)
          v53 = sub_100457124(v51 > 1, v52 + 1, 1, (unint64_t)v30);
        *(_QWORD *)(v53 + 16) = v52 + 1;
        v30 = (_QWORD *)v53;
        sub_10000F614(v78, v53+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v52, (uint64_t *)&unk_100654920);
        v4 = v76;
      }
      v29 += v74;
      if (!--v28)
      {
        swift_bridgeObjectRelease_n(v67, 2);
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease(v27);
  v30 = _swiftEmptyArrayStorage;
LABEL_19:
  v88 = v30;
  v54 = v82;
  if ((v69 & 1) != 0)
  {
    sub_1002C1DB8((uint64_t *)&v88, (uint64_t *)&unk_100654920, (uint64_t (*)(uint64_t))sub_1002B388C, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100392DC0);
    v30 = v88;
  }
  v55 = v30;
  v56 = v30[2];
  if (v56)
  {
    v88 = _swiftEmptyArrayStorage;
    sub_1003D7F78(0, v56, 0);
    v57 = v55;
    v58 = (uint64_t)v55 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    v59 = *(_QWORD *)(v86 + 72);
    do
    {
      v60 = v81;
      sub_10000735C(v58, v81, (uint64_t *)&unk_100654920);
      sub_10002B1E8(v60 + *(int *)(v87 + 40), v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v60, (uint64_t *)&unk_100654920);
      v61 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
      {
        sub_1003D7F78(0, v61[2] + 1, 1);
        v61 = v88;
      }
      v63 = v61[2];
      v62 = v61[3];
      if (v63 >= v62 >> 1)
      {
        sub_1003D7F78(v62 > 1, v63 + 1, 1);
        v61 = v88;
      }
      v61[2] = v63 + 1;
      v64 = (uint64_t)v61
          + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))
          + *(_QWORD *)(v83 + 72) * v63;
      v54 = v82;
      sub_10001F580(v82, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v58 += v59;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease(v57);
  }
  else
  {
    swift_bridgeObjectRelease(v55);
    return _swiftEmptyArrayStorage;
  }
  return v61;
}

void sub_1002B9474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    TTRRemindersListItemStateTracker.fullfil(_:of:)(1, a3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B94E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100332BF4(a2);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002B9558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  unsigned int v7;
  unsigned int v8;
  _BYTE v9[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (void *)result;
    sub_100063FF8(a2);
    v8 = v7;

    return (v8 >> 8) & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B95BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  char v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = sub_1002CA058(a1, a2);

    return v8 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002B9634(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100063FF8(a1);
    if ((v8 & 1) != 0)
    {
      sub_10002B1E8(a1, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v10 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 0, 1, v10);
    }
    else
    {
      v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B96F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1002CA1C8(a1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9770(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_10002B1E8(a1, a4, a3);
    v10 = a3(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 0, 1, v10);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100064484(a1, a2);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
  {
    __break(1u);
LABEL_6:

    goto LABEL_7;
  }
  v7 = Strong;
  v8 = objc_msgSend(Strong, "view");
  if (v8)
  {
    v3 = v8;
    v9 = type metadata accessor for TTRIAccountsListsTreeView(0);
    if (swift_dynamicCastClass(v3, v9))
    {
      sub_10022D58C(a2, 0);

      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100560BD0, "Reminders/TTRIAccountsListsViewController.swift", 47, 2, 265, 0);
  __break(1u);
}

void sub_1002B996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1002CA54C(a1, a2, a4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B99E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  _BYTE v14[24];

  v4 = sub_10002A750((uint64_t *)&unk_1006549F0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for TTRIAccountsListsSelection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_10000735C(Strong + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_lastAppliedSelection, (uint64_t)v6, (uint64_t *)&unk_1006549F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_1006549F0);
    }
    else
    {
      sub_10001F580((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRIAccountsListsSelection);
      sub_1000620B0((uint64_t)v10, 0, 0);
      sub_10001F544((uint64_t)v10, type metadata accessor for TTRIAccountsListsSelection);
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002B9B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  _BOOL8 v10;
  _BYTE v12[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v9 = (void *)result;
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v10 = swift_getEnumCaseMultiPayload(v7, v5) - 4 < 3;
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B9C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {

    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002B9C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = a4(a2);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1002B9CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *result;
  void *v6;
  char v7;
  char v8;
  _BYTE v9[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    result = *(void **)(a1 + qword_10065D8D8);
    if (result)
    {
      objc_msgSend(result, "isEditing");
      sub_10032B020();
      v8 = v7;

      return (void *)(v8 & 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002B9D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 1;

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10001A818();
    sub_10000C1E0(1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 0;

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002B9E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t result;
  void *v13;
  _BYTE v14[24];

  v11 = a6 + 16;
  swift_beginAccess(a6 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v11);
  if (result)
  {
    v13 = (void *)result;
    sub_10000735C(a4, a1, a7);

    return a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002B9F04(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(a1 + 16);
    v9 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (v8)
    {
      sub_10002B1E8(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v11 = 0;
    }
    else
    {
      v11 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v11, 1, v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002B9FC4(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE v12[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_100329964(a1, a2 & 1, a3, a5);

  }
  else
  {
    __break(1u);
  }
}

void *sub_1002BA064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *result;
  _BYTE v7[24];

  v5 = a5 + 16;
  swift_beginAccess(a5 + 16, v7, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002BA0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *Strong;
  _BYTE v7[24];

  v5 = a5 + 16;
  swift_beginAccess(a5 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)

  else
    __break(1u);
}

void *sub_1002BA100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BA150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;
  _BYTE v10[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v6 = (void *)result;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v5);
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 216))(ObjectType);

    return v9 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002BA1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  else
    __break(1u);
}

void sub_1002BA220(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    a4(a2);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002BA28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)

  else
    __break(1u);
}

void sub_1002BA2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjectType;
  void *v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_13;
  }
  v4 = (void *)Strong;
  if (!*(_QWORD *)(Strong
                  + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController))
  {
LABEL_13:
    __break(1u);
    return;
  }
  swift_retain();
  sub_100039244();
  v5 = objc_msgSend(v4, "parentViewController", swift_release().n128_f64[0]);
  if (v5)
  {
    v7 = v5;
    ObjectType = swift_getObjectType(v5, v6);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v9 = v7;
    else
      v9 = 0;
    if (v9)
    {
      sub_1002908A0(1, 0);
      sub_100291CAC();
    }

  }
  else
  {
    v7 = v4;
  }

}

id sub_1002BA3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id result;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  result = (id)swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    result = objc_msgSend(result, "view");
    if (result)
    {
      v7 = result;
      sub_1003462A4(a2);
      v9 = v8;

      return (id)v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002BA44C(char *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v9);
  if (result)
  {
    v11 = (void *)result;
    sub_1002CA930(a1, a2, a4, a5);
    v13 = v12;

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002BA4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  _BYTE v12[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 744))(a2, a3, ObjectType);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002BA578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = (void *)Strong;
  v8 = *(void **)(a1 + qword_10065D8D8);
  if (!v8)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v9 = objc_msgSend(v8, "contextMenuInteraction");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "locationInView:", a1);
    v13 = sub_1002C0650(v11, v12);
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for TTRIAccountsListsViewListCell(0);
      v16 = swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        (*(void (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v16
                                                                       + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge))
                                        + 0x1D0))(1);
        v17 = v14;
      }
      else
      {
        v17 = v10;
        v10 = v14;
      }

      v7 = v17;
    }

    v7 = v10;
  }

}

void sub_1002BA688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *Strong;
  _BYTE v6[24];

  v4 = a4 + 16;
  swift_beginAccess(a4 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)

  else
    __break(1u);
}

void sub_1002BA6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = (void *)Strong;
  v8 = *(void **)(a1 + qword_10065D8D8);
  if (!v8)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v9 = objc_msgSend(v8, "contextMenuInteraction");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "locationInView:", a1);
    v13 = sub_1002C0650(v11, v12);
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for TTRIAccountsListsViewListCell(0);
      v16 = swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        (*(void (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v16
                                                                      + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge))
                                       + 0x1D0))(0);
        v17 = v14;
      }
      else
      {
        v17 = v10;
        v10 = v14;
      }

      v7 = v17;
    }

    v7 = v10;
  }

}

void sub_1002BA7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a4 += 16;
  swift_beginAccess(a4, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = (uint64_t)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem];
    swift_beginAccess(&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem], v12, 33, 0);
    sub_100041F2C((uint64_t)v7, v11, (uint64_t *)&unk_100640EB0);
    swift_endAccess(v12);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002BA8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _BYTE v10[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v10, 0, 0);
  if (swift_unknownObjectWeakLoadStrong(a3))
  {
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v8 = (char *)&loc_1002BA980 + *((int *)qword_1002BA9F0 + swift_getEnumCaseMultiPayload(v7, v5));
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1002BA9F0);
}

void sub_1002BAA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  int v10;
  uint64_t v11;
  void *v12;
  _BYTE v14[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v10 = 1 << swift_getEnumCaseMultiPayload(v7, v5);
    if ((v10 & 0x3777) != 0 || (v10 & 0x880) != 0)
    {
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);

    }
    else
    {
      v11 = *((_QWORD *)v7 + 1);
      v12 = (void *)*((_QWORD *)v7 + 2);

      swift_bridgeObjectRelease(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1002BAB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002D77B0();

  }
  else
  {
    __break(1u);
  }
}

void sub_1002BABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  else
    __break(1u);
}

uint64_t sub_1002BAC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = sub_1002CB220(a1, a2, a3);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1002BACC4()
{
  return sub_1002BACE8((uint64_t)&unk_1005FE8E8, &qword_1006549C0, (unint64_t *)&unk_1006549C8, (uint64_t)sub_1002DCFA0);
}

double sub_1002BACE8(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  char v26[24];

  v9 = v4;
  v10 = qword_100645EF0;
  v11 = *(_QWORD *)(v4 + qword_100645EF0);
  v12 = swift_retain(v11);
  v13 = TTRAnyTreeViewCollapsedStatesPersisting.fetchCollapsedTreeViewItemIDs()(v12);
  swift_release(v11);
  v14 = (uint64_t *)(v9 + qword_100645F48);
  swift_beginAccess(v9 + qword_100645F48, v26, 1, 0);
  v15 = *v14;
  *v14 = v13;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
  v16 = *(_QWORD *)(v9 + v10);
  v17 = swift_retain(v16);
  v18 = TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter(v17);
  swift_release(v16);
  v25 = v18;
  v19 = swift_allocObject(a1, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v9);
  v20 = sub_10002A750(a2);
  v21 = sub_100023FEC(a3, a2, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v22 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, a4, v19, v20, v21);
  swift_release(v19);
  swift_release(v25);
  v23 = *(_QWORD *)(v9 + qword_100645F60);
  *(_QWORD *)(v9 + qword_100645F60) = v22;
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_1002BAE40(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  _BYTE v17[24];

  v3 = v2;
  v6 = (uint64_t *)(v3 + qword_100645F48);
  swift_beginAccess(v3 + qword_100645F48, v17, 1, 0);
  v8 = *v6;
  v7 = v6[1];
  *v6 = a1;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
  if ((a2 & 1) != 0)
  {
    v9 = qword_100645F58;
    *(_BYTE *)(v3 + qword_100645F58) = 0;
    if (*(_QWORD *)(v8 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
    {
      swift_bridgeObjectRetain(a1);
      sub_1000F65CC(v8);
      v10 = (_QWORD *)a1;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      v10 = sub_10011F064(v8, a1);
    }
    if (*(_QWORD *)(v7 + 16) <= v10[2] >> 3)
    {
      v15 = v10;
      sub_1000F65CC(v7);
      v11 = v15;
    }
    else
    {
      v11 = sub_10011F064(v7, (uint64_t)v10);
    }
    if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v8 + 16) >> 3)
    {
      sub_1000F65CC(a1);
      v12 = (_QWORD *)v8;
    }
    else
    {
      v12 = sub_10011F064(a1, v8);
    }
    if (*(_QWORD *)(v7 + 16) <= v12[2] >> 3)
    {
      v16 = v12;
      sub_1000F65CC(v7);
      swift_bridgeObjectRelease(v7);
      v13 = v16;
    }
    else
    {
      v13 = sub_10011F064(v7, (uint64_t)v12);
      swift_bridgeObjectRelease(v7);
    }
    __chkstk_darwin(v14);
    sub_1000FAA08(0, 0, 0, 0, v3, (void (*)(uint64_t))sub_1002D5FD0);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v13);
    *(_BYTE *)(v3 + v9) = 1;
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
  }
}

uint64_t sub_1002BB048(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  void *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _BYTE v18[24];

  v3 = v2;
  v6 = (uint64_t *)(v3 + qword_100645F48);
  swift_beginAccess(v3 + qword_100645F48, v18, 1, 0);
  v8 = *v6;
  v7 = v6[1];
  *v6 = a1;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(&_swiftEmptySetSingleton);
  if ((a2 & 1) != 0)
  {
    v9 = qword_100645F58;
    *(_BYTE *)(v3 + qword_100645F58) = 0;
    if (*(_QWORD *)(v8 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
    {
      swift_bridgeObjectRetain(a1);
      sub_1000F6B50(v8);
      v10 = (_QWORD *)a1;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      v10 = sub_10011F690(v8, a1);
    }
    if (*(_QWORD *)(v7 + 16) <= v10[2] >> 3)
    {
      v16 = v10;
      sub_1000F6B50(v7);
      v12 = v16;
    }
    else
    {
      v12 = sub_10011F690(v7, (uint64_t)v10);
    }
    if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v8 + 16) >> 3)
    {
      sub_1000F6B50(a1);
      v13 = (_QWORD *)v8;
    }
    else
    {
      v13 = sub_10011F690(a1, v8);
    }
    if (*(_QWORD *)(v7 + 16) <= v13[2] >> 3)
    {
      v17 = v13;
      sub_1000F6B50(v7);
      v15 = swift_bridgeObjectRelease(v7);
      v14 = v17;
    }
    else
    {
      v14 = sub_10011F690(v7, (uint64_t)v13);
      v15 = swift_bridgeObjectRelease(v7);
    }
    __chkstk_darwin(v15);
    sub_1000FE74C(0, 0, 0, 0, v3, (void (*)(uint64_t))sub_1002DCFC4);
    swift_bridgeObjectRelease(v12);
    result = swift_bridgeObjectRelease(v14);
    *(_BYTE *)(v3 + v9) = 1;
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    return swift_bridgeObjectRelease(v7);
  }
  return result;
}

char *sub_1002BB250(void *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v25;
  uint64_t v26;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[qword_100645ED8] = 0;
  *(_QWORD *)&v2[qword_100645EE0] = 0;
  swift_unknownObjectWeakInit(&v2[qword_100645EE8], 0);
  v6 = qword_100645EF0;
  v7 = sub_10002A750((uint64_t *)&unk_100653A20);
  swift_allocObject(v7, 24, 7);
  v8 = v2;
  v26 = TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
  v9 = sub_10002A750(&qword_100654780);
  swift_allocObject(v9, 64, 7);
  v10 = sub_100023FEC(&qword_100653A30, (uint64_t *)&unk_100653A20, (uint64_t)&protocol conformance descriptor for TTRTreeViewCollapsedStatesInMemoryPersistence<A>);
  *(_QWORD *)&v2[v6] = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)(&v26, v7, v10);
  *(_QWORD *)&v8[qword_100645F10] = 0;
  *(_QWORD *)&v8[qword_100645F18] = 0;
  *(_QWORD *)&v8[qword_100645F20] = 0;
  *(_QWORD *)&v8[qword_100645F28] = 0;
  v11 = &v8[qword_100645F30];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[24] = 0;
  *((_QWORD *)v11 + 2) = 0;
  v8[qword_100645F38] = 0;
  *(_QWORD *)&v8[qword_100645F40] = 0;
  v12 = &v8[qword_100645F48];
  *(_QWORD *)v12 = &_swiftEmptySetSingleton;
  *((_QWORD *)v12 + 1) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v8[qword_100645F50] = &_swiftEmptySetSingleton;
  v8[qword_100645F58] = 1;
  *(_QWORD *)&v8[qword_100645F60] = 0;
  v13 = qword_100645F68;
  v14 = type metadata accessor for TTRListContentsPrefetchExtender(0);
  swift_allocObject(v14, 32, 7);
  *(_QWORD *)&v8[v13] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)(40);
  swift_unknownObjectUnownedInit(&v8[qword_100645EF8], a1);
  *(_QWORD *)&v8[qword_100645F00] = a2;
  v15 = &v8[qword_100645F08];
  *((_QWORD *)v15 + 3) = sub_100005ED8(0, (unint64_t *)&qword_100646410, UITableView_ptr);
  *((_QWORD *)v15 + 4) = &off_10060BD58;
  *(_QWORD *)v15 = a2;
  v16 = a2;

  v25.receiver = v8;
  v25.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v25, "init");
  v18 = swift_retain();
  v19 = TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter(v18);
  swift_release();
  v26 = v19;
  v20 = swift_allocObject(&unk_1005FE078, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v17);
  v21 = sub_10002A750(&qword_100654760);
  v22 = sub_100023FEC(&qword_100644BB0, &qword_100654760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v23 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, sub_1002DD214, v20, v21, v22);
  swift_release();
  swift_release();
  *(_QWORD *)&v17[qword_100645F60] = v23;

  swift_release();
  return v17;
}

char *sub_1002BB588(void *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v28;
  uint64_t v29;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[qword_100645ED8] = 0;
  *(_QWORD *)&v2[qword_100645EE0] = 0;
  swift_unknownObjectWeakInit(&v2[qword_100645EE8], 0);
  v6 = qword_100645EF0;
  v7 = sub_10002A750((uint64_t *)&unk_100654A10);
  swift_allocObject(v7, 24, 7);
  v8 = v2;
  v29 = TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
  v9 = sub_10002A750(&qword_100640FB8);
  swift_allocObject(v9, 64, 7);
  v10 = sub_100023FEC((unint64_t *)&unk_100654A20, (uint64_t *)&unk_100654A10, (uint64_t)&protocol conformance descriptor for TTRTreeViewCollapsedStatesInMemoryPersistence<A>);
  *(_QWORD *)&v2[v6] = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)(&v29, v7, v10);
  *(_QWORD *)&v8[qword_100645F10] = 0;
  *(_QWORD *)&v8[qword_100645F18] = 0;
  *(_QWORD *)&v8[qword_100645F20] = 0;
  *(_QWORD *)&v8[qword_100645F28] = 0;
  v11 = &v8[qword_100645F30];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[24] = 0;
  *((_QWORD *)v11 + 2) = 0;
  v8[qword_100645F38] = 0;
  *(_QWORD *)&v8[qword_100645F40] = 0;
  v12 = &v8[qword_100645F48];
  *(_QWORD *)v12 = &_swiftEmptySetSingleton;
  *((_QWORD *)v12 + 1) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v8[qword_100645F50] = &_swiftEmptySetSingleton;
  v8[qword_100645F58] = 1;
  *(_QWORD *)&v8[qword_100645F60] = 0;
  v13 = qword_100645F68;
  v14 = type metadata accessor for TTRListContentsPrefetchExtender(0);
  swift_allocObject(v14, 32, 7);
  *(_QWORD *)&v8[v13] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)(40);
  swift_unknownObjectUnownedInit(&v8[qword_100645EF8], a1);
  *(_QWORD *)&v8[qword_100645F00] = a2;
  v15 = &v8[qword_100645F08];
  *((_QWORD *)v15 + 3) = sub_100005ED8(0, (unint64_t *)&qword_100646410, UITableView_ptr);
  *((_QWORD *)v15 + 4) = &off_10060BD58;
  *(_QWORD *)v15 = a2;
  v16 = a2;

  v28.receiver = v8;
  v28.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v28, "init");
  v18 = *(_QWORD *)&v17[qword_100645EF0];
  v19 = v17;
  v20 = swift_retain(v18);
  v21 = TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter(v20);
  swift_release(v18);
  v29 = v21;
  v22 = swift_allocObject(&unk_1005FE8E8, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v19);
  v23 = sub_10002A750(&qword_1006549C0);
  v24 = sub_100023FEC((unint64_t *)&unk_1006549C8, &qword_1006549C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v25 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, sub_1002DD218, v22, v23, v24);
  swift_release(v22);
  swift_release(v29);
  v26 = *(_QWORD *)&v19[qword_100645F60];
  *(_QWORD *)&v19[qword_100645F60] = v25;

  swift_release(v26);
  return v19;
}

id sub_1002BB8C4()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + qword_100645F10) = 0;
  *(_QWORD *)&v1 = swift_release().n128_u64[0];
  v2 = qword_100645F00;
  objc_msgSend(*(id *)(v0 + qword_100645F00), "setDataSource:", 0, v1);
  v3 = v0 + qword_100645F30;
  v4 = *(_QWORD *)(v0 + qword_100645F30);
  v5 = *(_QWORD *)(v0 + qword_100645F30 + 8);
  v6 = *(_QWORD *)(v0 + qword_100645F30 + 16);
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  sub_1000072F0(v4, v5, v6);
  *(_QWORD *)(v0 + qword_100645F18) = 0;
  swift_release();
  *(_QWORD *)(v0 + qword_100645F20) = 0;
  objc_msgSend(*(id *)(v0 + v2), "setPrefetchDataSource:", 0, swift_release().n128_f64[0]);
  *(_QWORD *)(v0 + qword_100645F28) = 0;
  objc_msgSend(*(id *)(v0 + v2), "setDelegate:", 0, swift_release().n128_f64[0]);
  sub_10001C934(0, &qword_100645ED8, &qword_10065B7C8, (SEL *)&selRef_setDragDelegate_);
  return sub_10001C934(0, &qword_100645EE0, &qword_100653D08, (SEL *)&selRef_setDropDelegate_);
}

uint64_t sub_1002BB9D8(uint64_t a1)
{
  return sub_1002BBA20(a1, sub_10006B64C, (uint64_t (*)(uint64_t))sub_100073338, (uint64_t (*)(uint64_t, uint64_t))sub_1000FA9FC, sub_1002AA398);
}

uint64_t sub_1002BB9FC(uint64_t a1)
{
  return sub_1002BBA20(a1, sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, (uint64_t (*)(uint64_t, uint64_t))sub_1000FA9FC, sub_1002AA398);
}

uint64_t sub_1002BBA20(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _BYTE v36[24];

  v10 = a2();
  v12 = v11;
  v14 = v13;
  v15 = a3(a1);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v10);
  if (!v15)
    return 0;
  Strong = swift_weakLoadStrong(v15 + 56);
  if (Strong)
  {
    v17 = Strong;
    swift_beginAccess(Strong + 64, v36, 0, 0);
    v18 = *(_QWORD *)(v17 + 64);
    swift_retain(v15);
    v19 = swift_bridgeObjectRetain(v18);
    v20 = sub_1002D6898(v19, v15);
    swift_bridgeObjectRelease(v18);
    swift_release(v17);
    swift_release_n(v15, 2);
    return v20;
  }
  v21 = a2();
  v23 = v22;
  v25 = v24;
  v26 = a4(v15, v21);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  v27 = swift_bridgeObjectRelease(v21);
  if ((v26 & 1) == 0)
  {
    swift_release(v15);
    return 0;
  }
  v28 = ((uint64_t (*)(uint64_t))a2)(v27);
  v30 = v29;
  v32 = v31;
  if (*(_QWORD *)(v31 + 16) && (v33 = a5(v15), (v34 & 1) != 0))
    v20 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
  else
    v20 = 0;
  swift_release(v15);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v28);
  return v20;
}

uint64_t sub_1002BBBD4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  void *Strong;
  void (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];

  v4 = v3;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a2, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v13, (uint64_t *)&unk_100640EB0);
    v18 = (_QWORD *)sub_10006B3DC();
    v17 = v19;
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v17);
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18[2] > a1)
    {
      v21 = v18[2 * a1 + 4];
      swift_retain();
      swift_bridgeObjectRelease(v18);
      v22 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 144);
      swift_beginAccess(v22, v48, 0, 0);
      sub_10002B1E8(v22, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      v23 = swift_release();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a3, 0, 1, v14, v23);
    }
    __break(1u);
LABEL_26:
    v27 = v18;
    if (v10 < 0)
      v44 = v10;
    else
      v44 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v40 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v10);
    if ((v40 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_31:
      v42 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v41);
LABEL_19:
      swift_endAccess(v47);
      swift_release();
      sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v43 = v42 + *(_QWORD *)(*(_QWORD *)v42 + 144);
      swift_beginAccess(v43, v47, 0, 0);
      sub_10002B1E8(v43, a3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_5;
    }
    while (1)
    {
      v18 = v27;
      a3 = v46;
      if ((a1 & 0x8000000000000000) != 0)
        goto LABEL_21;
LABEL_15:
      if (v40 <= a1)
        goto LABEL_21;
      swift_beginAccess(v18, v47, 32, 0);
      v41 = *v18;
      if ((*v18 & 0xC000000000000001) != 0)
        goto LABEL_31;
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        v42 = *(_QWORD *)(v41 + 8 * a1 + 32);
        swift_retain();
        goto LABEL_19;
      }
      __break(1u);
    }
  }
  v46 = a3;
  sub_10001F580((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v25 = sub_10006B3DC();
  v27 = (_QWORD *)v26;
  v29 = v28;
  v30 = sub_100073228((uint64_t)v17, v26);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v25);
  if (v30)
  {
    a3 = v46;
    if (*(_BYTE *)(v30 + 72))
    {
      if (*(_BYTE *)(v30 + 72) == 1)
      {
        v31 = *(_QWORD *)(v4 + qword_100645F10);
        if (v31)
        {
          v32 = *(uint64_t (**)(uint64_t))(v31 + 16);
          v33 = swift_retain();
          if ((v32(v33) & 1) != 0)
          {
            Strong = (void *)swift_unknownObjectUnownedLoadStrong(v4 + qword_100645EF8);
            sub_10002B1E8((uint64_t)v17, v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            v35 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56);
            v35(v10, 0, 1, v14);
            v36 = v46;
            (*(void (**)(void *, unint64_t, uint64_t))(v31 + 48))(Strong, a1, v10);
            swift_release();
            swift_release();

            sub_1000073A0(v10, (uint64_t *)&unk_100640EB0);
            sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
            return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v35)(v36, 0, 1, v14);
          }
          swift_release();
          a3 = v46;
        }
        goto LABEL_21;
      }
      v18 = (_QWORD *)(v30 + 64);
      swift_beginAccess(v30 + 64, v48, 0, 0);
      v10 = *(_QWORD *)(v30 + 64);
      if ((unint64_t)v10 >> 62)
        goto LABEL_26;
      v40 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((a1 & 0x8000000000000000) == 0)
        goto LABEL_15;
    }
LABEL_21:
    swift_release();
    sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56);
    v39 = a3;
    return v38(v39, 1, 1, v14, v37);
  }
  sub_10001F544((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56);
  v39 = v46;
  return v38(v39, 1, 1, v14, v37);
}

uint64_t sub_1002BC048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  void *Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _BYTE v35[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640E00);
  v5 = __chkstk_darwin(v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v35[-v8 - 8];
  v10 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000735C(a1, (uint64_t)v9, (uint64_t *)&unk_100640E00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v19 = sub_10006B64C();
    v21 = v20;
    v23 = v22;
    v24 = sub_100073338((uint64_t)v13, v20);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    if (!v24)
    {
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return 0;
    }
    if (*(_BYTE *)(v24 + 72))
    {
      if (*(_BYTE *)(v24 + 72) != 1)
      {
        swift_beginAccess(v24 + 64, v35, 0, 0);
        v31 = *(_QWORD *)(v24 + 64);
        if ((unint64_t)v31 >> 62)
        {
          if (v31 < 0)
            v33 = *(_QWORD *)(v24 + 64);
          else
            v33 = v31 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*(_QWORD *)(v24 + 64));
          v18 = _CocoaArrayWrapper.endIndex.getter(v33);
          swift_release(v24);
          swift_bridgeObjectRelease(v31);
        }
        else
        {
          v18 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release(v24);
        }
        v30 = (uint64_t)v13;
        goto LABEL_13;
      }
      v25 = *(_QWORD *)(v2 + qword_100645F10);
      if (v25)
      {
        v26 = *(uint64_t (**)(uint64_t))(v25 + 16);
        v27 = swift_retain(*(_QWORD *)(v2 + qword_100645F10));
        if ((v26(v27) & 1) != 0)
        {
          Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + qword_100645EF8);
          v29 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 144);
          swift_beginAccess(v29, v35, 0, 0);
          sub_10002B1E8(v29, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
          v18 = (*(uint64_t (**)(void *, _BYTE *))(v25 + 32))(Strong, v7);
          swift_release(v24);
          swift_release(v25);

          sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640E00);
          v30 = (uint64_t)v13;
LABEL_13:
          sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          return v18;
        }
        swift_release(v24);
        v24 = v25;
      }
    }
    swift_release(v24);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return 0;
  }
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640E00);
  v14 = sub_10006B64C();
  v16 = v15;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease(v14);
  return v18;
}

uint64_t sub_1002BC37C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  void *Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _BYTE v35[24];

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v35[-v8 - 8];
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000735C(a1, (uint64_t)v9, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = sub_10006B3DC();
    v21 = v20;
    v23 = v22;
    v24 = sub_100073228((uint64_t)v13, v20);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    if (!v24)
    {
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return 0;
    }
    if (*(_BYTE *)(v24 + 72))
    {
      if (*(_BYTE *)(v24 + 72) != 1)
      {
        swift_beginAccess(v24 + 64, v35, 0, 0);
        v31 = *(_QWORD *)(v24 + 64);
        if ((unint64_t)v31 >> 62)
        {
          if (v31 < 0)
            v33 = *(_QWORD *)(v24 + 64);
          else
            v33 = v31 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*(_QWORD *)(v24 + 64));
          v18 = _CocoaArrayWrapper.endIndex.getter(v33);
          swift_release();
          swift_bridgeObjectRelease(v31);
        }
        else
        {
          v18 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        v30 = (uint64_t)v13;
        goto LABEL_13;
      }
      v25 = *(_QWORD *)(v2 + qword_100645F10);
      if (v25)
      {
        v26 = *(uint64_t (**)(uint64_t))(v25 + 16);
        v27 = swift_retain();
        if ((v26(v27) & 1) != 0)
        {
          Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + qword_100645EF8);
          v29 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 144);
          swift_beginAccess(v29, v35, 0, 0);
          sub_10002B1E8(v29, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
          v18 = (*(uint64_t (**)(void *, _BYTE *))(v25 + 32))(Strong, v6);
          swift_release();
          swift_release();

          sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
          v30 = (uint64_t)v13;
LABEL_13:
          sub_10001F544(v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          return v18;
        }
        swift_release();
      }
    }
    swift_release();
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  sub_1000073A0((uint64_t)v9, (uint64_t *)&unk_100640EB0);
  v14 = sub_10006B3DC();
  v16 = v15;
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease(v14);
  return v18;
}

void sub_1002BC6B0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  id v62;
  Class isa;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[32];

  v4 = v3;
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  v16 = __chkstk_darwin(v15);
  v78 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v68 - v18;
  sub_10000735C(a1, (uint64_t)v14, (uint64_t *)&unk_100640E00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v21 = sub_10006B64C();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v28 = (uint64_t)v11;
    v77 = sub_100073338((uint64_t)v11, v22);
    if (!v77)
    {
      v48 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v19, 1, 1, v48);
      goto LABEL_50;
    }
    if (*(_QWORD *)(v25 + 16))
    {
      v75 = v21;
      v29 = sub_1002AA398(v77);
      v21 = v75;
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v29);
        v76 = v25;
        v73 = v31;
        if ((v27 & 1) != 0)
        {
          v68 = v11;
          v70 = v19;
          v71 = a2;
          v72 = a3;
          v32 = v77;
          Strong = swift_weakLoadStrong(v77 + 56);
          swift_retain(v32);
          v69 = v4;
          v34 = 0;
          if (Strong)
          {
            v74 = v23;
            while (1)
            {
              v35 = __OFADD__(v34++, 1);
              if (v35)
              {
LABEL_64:
                __break(1u);
LABEL_65:
                __break(1u);
LABEL_66:
                __break(1u);
                goto LABEL_67;
              }
              v36 = Strong;
              swift_beginAccess(Strong + 64, v80, 0, 0);
              v37 = *(_QWORD *)(Strong + 64);
              if ((unint64_t)v37 >> 62)
              {
                if (v37 < 0)
                  v45 = *(_QWORD *)(Strong + 64);
                else
                  v45 = v37 & 0xFFFFFFFFFFFFFF8;
                swift_retain(v36);
                swift_bridgeObjectRetain(v37);
                v38 = _CocoaArrayWrapper.endIndex.getter(v45);
                if (!v38)
                {
LABEL_9:
                  swift_release(v32);
                  swift_bridgeObjectRelease(v37);
                  goto LABEL_10;
                }
              }
              else
              {
                v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_retain(v36);
                swift_bridgeObjectRetain(v37);
                if (!v38)
                  goto LABEL_9;
              }
              if ((v37 & 0xC000000000000001) != 0)
              {
                v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
                if (v39 != v32)
                  goto LABEL_17;
              }
              else
              {
                if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_65;
                v39 = *(_QWORD *)(v37 + 32);
                swift_retain(v39);
                if (v39 != v32)
                {
LABEL_17:
                  v40 = 0;
                  v41 = v38 - 1;
                  while (1)
                  {
                    v35 = __OFADD__(v34, 1);
                    v42 = v34 + 1;
                    if (v35)
                      break;
                    if ((*(_BYTE *)(v39 + 48) & 1) != 0)
                    {
                      v79 = 0;
                      sub_10019D874(v39, &v79);
                      v43 = v79;
                      *(_QWORD *)(v39 + 40) = v79;
                      *(_BYTE *)(v39 + 48) = 0;
                    }
                    else
                    {
                      v43 = *(_QWORD *)(v39 + 40);
                    }
                    swift_release(v39);
                    v35 = __OFADD__(v42, v43);
                    v34 = v42 + v43;
                    if (v35)
                      goto LABEL_61;
                    if (v41 == v40)
                    {
                      swift_release(v32);
                      swift_bridgeObjectRelease(v37);
                      goto LABEL_33;
                    }
                    v44 = v40 + 1;
                    if ((v37 & 0xC000000000000001) != 0)
                    {
                      v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40 + 1, v37);
                      if (__OFADD__(v44, 1))
                        goto LABEL_62;
                    }
                    else
                    {
                      if (v44 >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        goto LABEL_63;
                      v39 = *(_QWORD *)(v37 + 8 * v40 + 40);
                      swift_retain(v39);
                      if (__OFADD__(v44, 1))
                        goto LABEL_62;
                    }
                    ++v40;
                    if (v39 == v32)
                      goto LABEL_31;
                  }
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
                  goto LABEL_64;
                }
              }
LABEL_31:
              swift_bridgeObjectRelease(v37);
              swift_release_n(v32, 2);
LABEL_33:
              v23 = v74;
LABEL_10:
              Strong = swift_weakLoadStrong(v36 + 56);
              swift_release(v36);
              v32 = v36;
              v25 = v76;
              if (!Strong)
                goto LABEL_55;
            }
          }
          v36 = v32;
LABEL_55:
          swift_release(v36);
          v64 = v34 - 1;
          if (!__OFSUB__(v34, 1))
          {
            a3 = v72;
            LOBYTE(a2) = v71;
            v4 = v69;
            v19 = v70;
            v28 = (uint64_t)v68;
            v21 = v75;
            v65 = v77;
            if (v64 < 0)
            {
              v67 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v19, 1, 1, v67);
            }
            else
            {
              IndexPath.init(row:section:)(v64, v73);
              v66 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v19, 0, 1, v66);
            }
            v47 = v65;
            goto LABEL_42;
          }
        }
        else
        {
          if ((v31 & 0x8000000000000000) != 0)
            goto LABEL_66;
          v49 = v77;
          if (v31 < *(_QWORD *)(v75 + 16))
          {
            v50 = *(_QWORD *)(v75 + 16 * v31 + 40);
            swift_bridgeObjectRetain(v50);
            v52 = sub_100073214(v51, v49);
            v54 = v53;
            swift_bridgeObjectRelease(v50);
            if ((v54 & 1) != 0)
            {
              v56 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v19, 1, 1, v56);
            }
            else
            {
              IndexPath.init(row:section:)(v52, v73);
              v55 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v19, 0, 1, v55);
            }
            swift_release(v49);
            v21 = v75;
            v25 = v76;
            goto LABEL_50;
          }
LABEL_67:
          __break(1u);
        }
        __break(1u);
        return;
      }
    }
    v46 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v19, 1, 1, v46);
    v47 = v77;
LABEL_42:
    swift_release(v47);
LABEL_50:
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    goto LABEL_51;
  }
  v20 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_51:
  v57 = *(void **)(v4 + qword_100645F00);
  v58 = v78;
  sub_10000735C((uint64_t)v19, v78, &qword_100646950);
  v59 = type metadata accessor for IndexPath(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59);
  v62 = v57;
  isa = 0;
  if (v61 != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  }
  objc_msgSend(v62, "selectRowAtIndexPath:animated:scrollPosition:", isa, a2 & 1, a3);

  sub_1000073A0((uint64_t)v19, &qword_100646950);
}

void sub_1002BCD14(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  id v61;
  Class isa;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[32];

  v4 = v3;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v76 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v66 - v18;
  sub_10000735C(a1, (uint64_t)v14, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
  {
    sub_10001F580((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v21 = sub_10006B3DC();
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v28 = (uint64_t)v11;
    v75 = sub_100073228((uint64_t)v11, v22);
    if (!v75)
    {
      v47 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v19, 1, 1, v47);
      goto LABEL_50;
    }
    if (*(_QWORD *)(v25 + 16))
    {
      v73 = v21;
      v29 = sub_1002AA398(v75);
      v21 = v73;
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v29);
        v74 = v25;
        v71 = v31;
        if ((v27 & 1) != 0)
        {
          v66 = v11;
          v68 = v19;
          v69 = a2;
          v70 = a3;
          v32 = v75;
          Strong = swift_weakLoadStrong(v75 + 56);
          swift_retain();
          v67 = v4;
          v34 = 0;
          if (Strong)
          {
            v72 = v23;
            do
            {
              v35 = __OFADD__(v34++, 1);
              if (v35)
              {
LABEL_62:
                __break(1u);
LABEL_63:
                __break(1u);
LABEL_64:
                __break(1u);
                goto LABEL_65;
              }
              v36 = Strong;
              swift_beginAccess(Strong + 64, v78, 0, 0);
              v37 = *(_QWORD *)(Strong + 64);
              if ((unint64_t)v37 >> 62)
              {
                if (v37 < 0)
                  v45 = *(_QWORD *)(Strong + 64);
                else
                  v45 = v37 & 0xFFFFFFFFFFFFFF8;
                swift_retain();
                swift_bridgeObjectRetain(v37);
                v38 = _CocoaArrayWrapper.endIndex.getter(v45);
                if (!v38)
                {
LABEL_9:
                  swift_release();
                  swift_bridgeObjectRelease(v37);
                  goto LABEL_10;
                }
              }
              else
              {
                v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_retain();
                swift_bridgeObjectRetain(v37);
                if (!v38)
                  goto LABEL_9;
              }
              if ((v37 & 0xC000000000000001) != 0)
              {
                v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
                if (v39 != v32)
                  goto LABEL_17;
              }
              else
              {
                if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_63;
                v39 = *(_QWORD *)(v37 + 32);
                swift_retain();
                if (v39 != v32)
                {
LABEL_17:
                  v40 = 0;
                  v41 = v38 - 1;
                  while (1)
                  {
                    v35 = __OFADD__(v34, 1);
                    v42 = v34 + 1;
                    if (v35)
                      break;
                    if ((*(_BYTE *)(v39 + 48) & 1) != 0)
                    {
                      v77 = 0;
                      sub_10019D874(v39, &v77);
                      v43 = v77;
                      *(_QWORD *)(v39 + 40) = v77;
                      *(_BYTE *)(v39 + 48) = 0;
                    }
                    else
                    {
                      v43 = *(_QWORD *)(v39 + 40);
                    }
                    swift_release();
                    v35 = __OFADD__(v42, v43);
                    v34 = v42 + v43;
                    if (v35)
                      goto LABEL_59;
                    if (v41 == v40)
                    {
                      swift_release();
                      swift_bridgeObjectRelease(v37);
                      goto LABEL_33;
                    }
                    v44 = v40 + 1;
                    if ((v37 & 0xC000000000000001) != 0)
                    {
                      v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40 + 1, v37);
                      if (__OFADD__(v44, 1))
                        goto LABEL_60;
                    }
                    else
                    {
                      if (v44 >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        goto LABEL_61;
                      v39 = *(_QWORD *)(v37 + 8 * v40 + 40);
                      swift_retain();
                      if (__OFADD__(v44, 1))
                        goto LABEL_60;
                    }
                    ++v40;
                    if (v39 == v32)
                      goto LABEL_31;
                  }
                  __break(1u);
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
              }
LABEL_31:
              swift_bridgeObjectRelease(v37);
              swift_release_n(v32, 2);
LABEL_33:
              v23 = v72;
LABEL_10:
              Strong = swift_weakLoadStrong(v36 + 56);
              swift_release();
              v32 = v36;
              v25 = v74;
            }
            while (Strong);
          }
          swift_release();
          v63 = v34 - 1;
          if (!__OFSUB__(v34, 1))
          {
            a3 = v70;
            LOBYTE(a2) = v69;
            v4 = v67;
            v19 = v68;
            v28 = (uint64_t)v66;
            v21 = v73;
            if (v63 < 0)
            {
              v65 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v19, 1, 1, v65);
            }
            else
            {
              IndexPath.init(row:section:)(v63, v71);
              v64 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v19, 0, 1, v64);
            }
            goto LABEL_42;
          }
        }
        else
        {
          if ((v31 & 0x8000000000000000) != 0)
            goto LABEL_64;
          v48 = v75;
          if (v31 < *(_QWORD *)(v73 + 16))
          {
            v49 = *(_QWORD *)(v73 + 16 * v31 + 40);
            swift_bridgeObjectRetain(v49);
            v51 = sub_100073214(v50, v48);
            v53 = v52;
            swift_bridgeObjectRelease(v49);
            if ((v53 & 1) != 0)
            {
              v55 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v19, 1, 1, v55);
            }
            else
            {
              IndexPath.init(row:section:)(v51, v71);
              v54 = type metadata accessor for IndexPath(0);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v19, 0, 1, v54);
            }
            swift_release();
            v21 = v73;
            v25 = v74;
            goto LABEL_50;
          }
LABEL_65:
          __break(1u);
        }
        __break(1u);
        return;
      }
    }
    v46 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v19, 1, 1, v46);
LABEL_42:
    swift_release();
LABEL_50:
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v21);
    sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_51;
  }
  v20 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_51:
  v56 = *(void **)(v4 + qword_100645F00);
  v57 = v76;
  sub_10000735C((uint64_t)v19, v76, &qword_100646950);
  v58 = type metadata accessor for IndexPath(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58);
  v61 = v56;
  isa = 0;
  if (v60 != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
  }
  objc_msgSend(v61, "selectRowAtIndexPath:animated:scrollPosition:", isa, a2 & 1, a3);

  sub_1000073A0((uint64_t)v19, &qword_100646950);
}

_QWORD *sub_1002BD378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006B3DC();
  v11 = v10;
  v13 = v12;
  v14 = sub_100073228(a1, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v9);
  if (!v14)
    return _swiftEmptyArrayStorage;
  v15 = sub_10006B3DC();
  v17 = v16;
  v19 = v18;
  sub_100309FE0(v14, v15, v18, v20 & 1, (uint64_t)v4);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  v21 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v21) == 1)
  {
    swift_release();
    sub_1000073A0((uint64_t)v4, &qword_100646950);
    return _swiftEmptyArrayStorage;
  }
  result = (_QWORD *)(*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (*(_BYTE *)(v14 + 48) == 1)
  {
    v29 = 0;
    result = (_QWORD *)sub_10019D874(v14, &v29);
    v24 = v29;
    *(_QWORD *)(v14 + 40) = v29;
    *(_BYTE *)(v14 + 48) = 0;
  }
  else
  {
    v24 = *(_QWORD *)(v14 + 40);
  }
  if ((v24 & 0x8000000000000000) == 0)
  {
    __chkstk_darwin(result);
    *(&v28 - 2) = (uint64_t)v8;
    sub_10046AB30((void (*)(uint64_t *))sub_1002DB138, (uint64_t)(&v28 - 4), 0, v25);
    v22 = v26;
    v27 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
    return (_QWORD *)v22;
  }
  __break(1u);
  return result;
}

void sub_1002BD594(uint64_t a1, int a2)
{
  sub_1002BD5C0(a1, a2, (uint64_t (*)(double))sub_10006B64C, (uint64_t (*)(uint64_t))sub_100073338, sub_1002AA398, (uint64_t (*)(__n128))sub_100073214, (void (*)(uint64_t, uint64_t *))sub_10019D874);
}

void sub_1002BD5C0(uint64_t a1, int a2, uint64_t (*a3)(double), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(__n128), void (*a7)(uint64_t, uint64_t *))
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  id v52;
  Class isa;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  char v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t *);
  uint64_t v74;
  char v75[32];

  v73 = a7;
  v14 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v68 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v7;
  v21 = a3(v19);
  v70 = v22;
  v71 = v21;
  v24 = v23;
  v26 = v25;
  v27 = a4(a1);
  v72 = v24;
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    v47 = (uint64_t)v16;
    goto LABEL_40;
  }
  v28 = v27;
  v67 = v16;
  if (!*(_QWORD *)(v24 + 16) || (v29 = a5(v27), (v30 & 1) == 0))
  {
    v47 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v67, 1, 1, v17);
    swift_release();
LABEL_40:
    v48 = v71;
    goto LABEL_41;
  }
  v31 = *(_QWORD *)(v72 + 56);
  v32 = *(_QWORD *)(v31 + 8 * v29);
  if ((v26 & 1) != 0)
  {
    v62 = *(_QWORD *)(v31 + 8 * v29);
    v63 = v18;
    v64 = v17;
    v65 = a2;
    Strong = swift_weakLoadStrong(v28 + 56);
    swift_retain();
    v34 = 0;
    if (Strong)
    {
      v35 = v28;
      v66 = v28;
      do
      {
        v36 = __OFADD__(v34++, 1);
        if (v36)
        {
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v37 = Strong;
        swift_beginAccess(Strong + 64, v75, 0, 0);
        v38 = *(_QWORD *)(Strong + 64);
        if ((unint64_t)v38 >> 62)
        {
          if (v38 < 0)
            v46 = v38;
          else
            v46 = v38 & 0xFFFFFFFFFFFFFF8;
          swift_retain();
          swift_bridgeObjectRetain(v38);
          v39 = _CocoaArrayWrapper.endIndex.getter(v46);
          if (!v39)
          {
LABEL_7:
            swift_release();
            swift_bridgeObjectRelease(v38);
            goto LABEL_8;
          }
        }
        else
        {
          v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain(v38);
          if (!v39)
            goto LABEL_7;
        }
        if ((v38 & 0xC000000000000001) != 0)
        {
          v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
          if (v40 != v35)
            goto LABEL_15;
        }
        else
        {
          if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_61;
          v40 = *(_QWORD *)(v38 + 32);
          swift_retain();
          if (v40 != v35)
          {
LABEL_15:
            v41 = 0;
            v42 = v39 - 1;
            while (1)
            {
              v36 = __OFADD__(v34, 1);
              v43 = v34 + 1;
              if (v36)
                break;
              if ((*(_BYTE *)(v40 + 48) & 1) != 0)
              {
                v74 = 0;
                v73(v40, &v74);
                v44 = v74;
                *(_QWORD *)(v40 + 40) = v74;
                *(_BYTE *)(v40 + 48) = 0;
              }
              else
              {
                v44 = *(_QWORD *)(v40 + 40);
              }
              swift_release();
              v36 = __OFADD__(v43, v44);
              v34 = v43 + v44;
              if (v36)
                goto LABEL_57;
              if (v42 == v41)
                goto LABEL_7;
              v45 = v41 + 1;
              if ((v38 & 0xC000000000000001) != 0)
              {
                v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v41 + 1, v38);
                if (__OFADD__(v45, 1))
                  goto LABEL_58;
              }
              else
              {
                if (v45 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_59;
                v40 = *(_QWORD *)(v38 + 8 * v41 + 40);
                swift_retain();
                if (__OFADD__(v45, 1))
                  goto LABEL_58;
              }
              ++v41;
              if (v40 == v35)
                goto LABEL_29;
            }
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
        }
LABEL_29:
        swift_bridgeObjectRelease(v38);
        swift_release_n(v35, 2);
LABEL_8:
        Strong = swift_weakLoadStrong(v37 + 56);
        swift_release();
        v35 = v37;
      }
      while (Strong);
    }
    swift_release();
    v60 = v34 - 1;
    LOBYTE(a2) = v65;
    v48 = v71;
    if (!__OFSUB__(v34, 1))
    {
      v18 = v63;
      v17 = v64;
      v47 = (uint64_t)v67;
      v49 = v70;
      if (v60 < 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v67, 1, 1, v64);
      }
      else
      {
        IndexPath.init(row:section:)(v60, v62);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v47, 0, 1, v17);
      }
      swift_release();
      goto LABEL_42;
    }
LABEL_64:
    __break(1u);
    return;
  }
  if ((v32 & 0x8000000000000000) != 0)
    goto LABEL_62;
  v48 = v71;
  if (v32 >= *(_QWORD *)(v71 + 16))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v54 = *(_QWORD *)(v71 + 16 * v32 + 40);
  v55 = swift_bridgeObjectRetain(v54);
  v56 = a6(v55);
  v58 = v57;
  swift_bridgeObjectRelease(v54);
  if ((v58 & 1) != 0)
  {
    v47 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v67, 1, 1, v17);
  }
  else
  {
    v59 = v32;
    v47 = (uint64_t)v67;
    IndexPath.init(row:section:)(v56, v59);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v47, 0, 1, v17);
  }
  swift_release();
LABEL_41:
  v49 = v70;
LABEL_42:
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(v49);
  v50 = swift_bridgeObjectRelease(v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48))(v47, 1, v17, v50) == 1)
  {
    sub_1000073A0(v47, &qword_100646950);
  }
  else
  {
    v51 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v68, v47, v17);
    v52 = *(id *)(v69 + qword_100645F00);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v52, "deselectRowAtIndexPath:animated:", isa, a2 & 1);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v17);
  }
}

void sub_1002BDAFC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char *v30;
  uint64_t Strong;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  char *v58;
  id v59;
  Class isa;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void *v68;
  id v69;
  Class v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char v89[40];

  v85 = a4;
  v8 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v81 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v79 = (char *)&v72 - v18;
  v86 = v4;
  v19 = sub_10006B3DC();
  v21 = v20;
  v23 = v22;
  v80 = (_QWORD *)v24;
  v25 = sub_100073228(a1, v24);
  v87 = v10;
  v82 = (char *)v25;
  v83 = v15;
  if (v25)
  {
    v78 = v13;
    v26 = v21;
    if (!*(_QWORD *)(v21 + 16) || (v77 = v19, v27 = sub_1002AA398(v82), v19 = v77, (v28 & 1) == 0))
    {
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v45 = (uint64_t)v78;
      goto LABEL_40;
    }
    v29 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v27);
    v75 = v29;
    if ((v23 & 1) != 0)
    {
      v30 = v82;
      Strong = swift_weakLoadStrong(v82 + 56);
      swift_retain();
      v74 = a1;
      v73 = a2;
      v72 = a3;
      v32 = 0;
      if (Strong)
      {
        v76 = v21;
        do
        {
          v33 = __OFADD__(v32++, 1);
          if (v33)
          {
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
          v34 = Strong;
          swift_beginAccess(Strong + 64, v89, 0, 0);
          v35 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v35 >> 62)
          {
            if (v35 < 0)
              v43 = v35;
            else
              v43 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_retain();
            swift_bridgeObjectRetain(v35);
            v36 = _CocoaArrayWrapper.endIndex.getter(v43);
            if (!v36)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease(v35);
              v10 = v87;
              goto LABEL_8;
            }
          }
          else
          {
            v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain(v35);
            if (!v36)
              goto LABEL_7;
          }
          if ((v35 & 0xC000000000000001) != 0)
          {
            v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
            if ((char *)v37 != v30)
              goto LABEL_15;
          }
          else
          {
            if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_69;
            v37 = *(_QWORD *)(v35 + 32);
            swift_retain();
            if ((char *)v37 != v30)
            {
LABEL_15:
              v38 = 0;
              v84 = v35 & 0xFFFFFFFFFFFFFF8;
              v39 = v36 - 1;
              while (1)
              {
                v33 = __OFADD__(v32, 1);
                v40 = v32 + 1;
                if (v33)
                  break;
                if ((*(_BYTE *)(v37 + 48) & 1) != 0)
                {
                  v88 = 0;
                  sub_10019D874(v37, &v88);
                  v41 = v88;
                  *(_QWORD *)(v37 + 40) = v88;
                  *(_BYTE *)(v37 + 48) = 0;
                }
                else
                {
                  v41 = *(_QWORD *)(v37 + 40);
                }
                swift_release();
                v33 = __OFADD__(v40, v41);
                v32 = v40 + v41;
                if (v33)
                  goto LABEL_65;
                if (v39 == v38)
                {
                  swift_release();
                  swift_bridgeObjectRelease(v35);
                  goto LABEL_31;
                }
                v42 = v38 + 1;
                if ((v35 & 0xC000000000000001) != 0)
                {
                  v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v38 + 1, v35);
                  if (__OFADD__(v42, 1))
                    goto LABEL_66;
                }
                else
                {
                  if (v42 >= *(_QWORD *)(v84 + 16))
                    goto LABEL_67;
                  v37 = *(_QWORD *)(v35 + 8 * v38 + 40);
                  swift_retain();
                  if (__OFADD__(v42, 1))
                    goto LABEL_66;
                }
                ++v38;
                if ((char *)v37 == v30)
                  goto LABEL_29;
              }
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
              goto LABEL_68;
            }
          }
LABEL_29:
          swift_bridgeObjectRelease(v35);
          swift_release_n(v30, 2);
LABEL_31:
          v10 = v87;
          v26 = v76;
LABEL_8:
          Strong = swift_weakLoadStrong(v34 + 56);
          swift_release();
          v30 = (char *)v34;
        }
        while (Strong);
      }
      swift_release();
      v71 = v32 - 1;
      if (!__OFSUB__(v32, 1))
      {
        v15 = v83;
        a1 = v74;
        LOBYTE(a2) = v73;
        a3 = v72;
        v19 = v77;
        v45 = (uint64_t)v78;
        if ((v71 & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(v71, v75);
          v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
          v46 = v45;
          v47 = 0;
          goto LABEL_41;
        }
        v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
LABEL_40:
        v46 = v45;
        v47 = 1;
LABEL_41:
        v84 = (uint64_t)v44;
        v44(v46, v47, 1, v14);
        swift_release();
        goto LABEL_49;
      }
LABEL_72:
      __break(1u);
      return;
    }
    if ((v29 & 0x8000000000000000) != 0)
      goto LABEL_70;
    v48 = (uint64_t)v82;
    if (v29 >= *(_QWORD *)(v77 + 16))
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v49 = *(_QWORD *)(v77 + 16 * v29 + 40);
    swift_bridgeObjectRetain(v49);
    v51 = sub_100073214(v50, v48);
    v53 = v52;
    swift_bridgeObjectRelease(v49);
    if ((v53 & 1) != 0)
    {
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v45 = (uint64_t)v78;
      v55 = (uint64_t)v78;
      v56 = 1;
    }
    else
    {
      v45 = (uint64_t)v78;
      IndexPath.init(row:section:)(v51, v75);
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v55 = v45;
      v56 = 0;
    }
    v84 = (uint64_t)v54;
    v54(v55, v56, 1, v14);
    swift_release();
    v10 = v87;
    v19 = v77;
  }
  else
  {
    v84 = *(_QWORD *)(v15 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v84)(v13, 1, 1, v14);
    v45 = (uint64_t)v13;
    v26 = v21;
  }
LABEL_49:
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v80);
  v57 = swift_bridgeObjectRelease(v19);
  v82 = *(char **)(v15 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v82)(v45, 1, v14, v57) == 1)
  {
    sub_1000073A0(v45, &qword_100646950);
    if ((a2 & 1) == 0)
      return;
  }
  else
  {
    v58 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v79, v45, v14);
    v59 = *(id *)(v86 + qword_100645F00);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v59, "highlightRowAtIndexPath:animated:scrollPosition:", isa, v85 & 1, a3);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v58, v14);
    if ((a2 & 1) == 0)
      return;
  }
  v80 = sub_1002BD378(a1);
  v61 = v80[2];
  if (v61)
  {
    v62 = qword_100645F00;
    v63 = v81;
    v64 = (char *)v80 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
    v65 = *(_QWORD *)(v83 + 72);
    v66 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v67 = v83;
    while (1)
    {
      v66(v10, v64, v14);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v84)(v10, 0, 1, v14);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v82)(v10, 1, v14) == 1)
        break;
      v68 = *(void **)(v86 + v62);
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v63, v10, v14);
      v69 = v68;
      v70 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v63, v14);
      objc_msgSend(v69, "highlightRowAtIndexPath:animated:scrollPosition:", v70, v85 & 1, 0);

      v10 = v87;
      v64 += v65;
      if (!--v61)
        goto LABEL_57;
    }
  }
  else
  {
LABEL_57:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v84)(v10, 1, 1, v14);
  }
  swift_bridgeObjectRelease(v80);
}

void sub_1002BE1AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v13[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if (qword_10063D3C8 != -1)
      swift_once(&qword_10063D3C8, sub_1000E35C8);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_100645EC0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRITreeViewTableAdapter: updating for collapsed states change", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    a3(a1, 1);
  }
}

void sub_1002BE2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(_QWORD);
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(_QWORD);
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  char *v156;
  int v157;
  uint64_t v158;
  unint64_t v159;
  int64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169[24];
  char v170[24];
  char v171[24];
  char v172[32];

  v163 = a3;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v151 = (uint64_t)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v150 = (uint64_t)&v150 - v8;
  __chkstk_darwin(v9);
  v153 = (uint64_t)&v150 - v10;
  __chkstk_darwin(v11);
  v152 = (uint64_t)&v150 - v12;
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v166 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v167 = (uint64_t)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v161 = (uint64_t)&v150 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v150 - v18;
  __chkstk_darwin(v20);
  v162 = (uint64_t)&v150 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v154 = a1 + 56;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v164 = a1;
  v165 = qword_100645F38;
  v168 = a2;
  v26 = (uint64_t *)(a2 + qword_100645F30);
  v160 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v27 = 0;
  v155 = v26;
  v156 = v19;
  while (1)
  {
    if (v25)
    {
      v29 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v30 = v29 | (v27 << 6);
      goto LABEL_21;
    }
    v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v31 >= v160)
      goto LABEL_62;
    v32 = *(_QWORD *)(v154 + 8 * v31);
    ++v27;
    if (!v32)
    {
      v27 = v31 + 1;
      if (v31 + 1 >= v160)
        goto LABEL_62;
      v32 = *(_QWORD *)(v154 + 8 * v27);
      if (!v32)
        break;
    }
LABEL_20:
    v25 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v27 << 6);
LABEL_21:
    v34 = v162;
    sub_10002B1E8(*(_QWORD *)(v164 + 48) + *(_QWORD *)(v166 + 72) * v30, v162, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580(v34, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if (*(_BYTE *)(v168 + v165) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100012DC4(v35, (uint64_t)qword_100645EC0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.fault.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Attempting to read sectionMetadata while it is being modified", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

    }
    v41 = *v26;
    v40 = v26[1];
    v42 = v26[2];
    if (*v26)
    {
      swift_bridgeObjectRetain(*v26);
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v42);
      if (!*(_QWORD *)(v40 + 16))
        goto LABEL_4;
    }
    else
    {
      v158 = v26[2];
      v159 = v40;
      v157 = *((unsigned __int8 *)v26 + 24);
      v43 = sub_10002A750((uint64_t *)&unk_100646400);
      v44 = swift_allocObject(v43, 24, 7);
      *(_QWORD *)(v44 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v81 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v81)
        {
          v82 = v81;
          if (v81 < 1)
            goto LABEL_128;
          v83 = &_swiftEmptyArrayStorage[4];
          v26 = v155;
          do
          {
            v84 = *v83++;
            swift_weakAssign(v84 + 56, 0);
            swift_beginAccess(v84 + 64, v171, 1, 0);
            v85 = *(_QWORD *)(v84 + 64);
            *(_QWORD *)(v84 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v85);
            --v82;
          }
          while (v82);
        }
      }
      sub_100070B1C(v44);
      v41 = v45;
      v40 = v46;
      v42 = v47;
      v49 = v48;
      swift_release();
      v50 = v49 & 1;
      v51 = *v26;
      v52 = v26[1];
      v53 = v25;
      v54 = v27;
      v55 = v26[2];
      *v26 = v41;
      v26[1] = v40;
      v26[2] = v42;
      *((_BYTE *)v26 + 24) = v50;
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v42);
      v56 = v55;
      v27 = v54;
      v25 = v53;
      sub_1000072F0(v51, v52, v56);
      sub_1000072F0(0, v159, v158);
      v19 = v156;
      if (!*(_QWORD *)(v40 + 16))
      {
LABEL_4:
        swift_bridgeObjectRelease(v40);
        v28 = v41;
        goto LABEL_5;
      }
    }
    v57 = sub_1002AA39C((uint64_t)v19);
    if ((v58 & 1) == 0)
      goto LABEL_4;
    v159 = v27;
    v28 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v57);
    v59 = v28 & 0xC000000000000001;
    v158 = v42;
    if ((v28 & 0xC000000000000001) != 0)
    {
      if (v28 < 0)
        v60 = v28;
      else
        v60 = v28 & 0xFFFFFFFFFFFFFF8;
      v61 = __CocoaSet.startIndex.getter(v60);
      v63 = v62;
      v64 = __CocoaSet.endIndex.getter(v60);
      v66 = static __CocoaSet.Index.== infix(_:_:)(v61, v63, v64, v65);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRelease(v64);
      v67 = v61;
      if ((v66 & 1) != 0)
        goto LABEL_56;
    }
    else
    {
      v68 = *(_BYTE *)(v28 + 32);
      v61 = 1 << v68;
      v69 = *(_QWORD *)(v28 + 56);
      if (v69)
      {
        v70 = 0;
      }
      else
      {
        v77 = v68 & 0x3F;
        if (v77 < 7)
          goto LABEL_55;
        v69 = *(_QWORD *)(v28 + 64);
        if (v69)
        {
          v70 = 1;
        }
        else
        {
          if (v77 < 8)
            goto LABEL_55;
          v69 = *(_QWORD *)(v28 + 72);
          if (!v69)
          {
            v78 = 0;
            v79 = (unint64_t)(v61 + 63) >> 6;
            if (v79 <= 3)
              v79 = 3;
            v80 = v79 - 3;
            while (v80 != v78)
            {
              v69 = *(_QWORD *)(v28 + 80 + 8 * v78++);
              if (v69)
              {
                v70 = v78 + 2;
                goto LABEL_41;
              }
            }
LABEL_55:
            v63 = *(unsigned int *)(v28 + 36);
            swift_bridgeObjectRetain(v28);
LABEL_56:
            sub_10003E0E0(v61, v63, v59 != 0);
            swift_bridgeObjectRelease(v40);
            swift_bridgeObjectRelease(v41);
            v26 = v155;
            v19 = v156;
            v27 = v159;
            v42 = v158;
LABEL_5:
            swift_bridgeObjectRelease(v28);
            swift_bridgeObjectRelease(v42);
            goto LABEL_6;
          }
          v70 = 2;
        }
      }
LABEL_41:
      v67 = __clz(__rbit64(v69)) + (v70 << 6);
      v63 = *(unsigned int *)(v28 + 36);
      swift_bridgeObjectRetain(v28);
      if (v67 == v61)
        goto LABEL_56;
    }
    v71 = sub_100478468(v67, v63, v59 != 0, v28);
    sub_10003E0E0(v67, v63, v59 != 0);
    swift_bridgeObjectRelease(v158);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v28);
    v72 = v71 + *(_QWORD *)(*(_QWORD *)v71 + 144);
    swift_beginAccess(v72, v172, 0, 0);
    v73 = v72;
    v74 = v153;
    sub_10002B1E8(v73, v153, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    v75 = v74;
    v76 = v152;
    sub_10001F580(v75, v152, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000768B8(v76, 5);
    sub_10001F544(v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v26 = v155;
    v19 = v156;
    v27 = v159;
LABEL_6:
    sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v33 = v31 + 2;
  if (v33 < v160)
  {
    v32 = *(_QWORD *)(v154 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        v27 = v33 + 1;
        if (__OFADD__(v33, 1))
          break;
        if (v27 >= v160)
          goto LABEL_62;
        v32 = *(_QWORD *)(v154 + 8 * v27);
        ++v33;
        if (v32)
          goto LABEL_20;
      }
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    v27 = v33;
    goto LABEL_20;
  }
LABEL_62:
  swift_release();
  v86 = *(_QWORD *)(v163 + 56);
  v160 = v163 + 56;
  v87 = 1 << *(_BYTE *)(v163 + 32);
  v88 = -1;
  if (v87 < 64)
    v88 = ~(-1 << v87);
  v89 = v88 & v86;
  v162 = (unint64_t)(v87 + 63) >> 6;
  swift_bridgeObjectRetain(v163);
  v90 = 0;
  v91 = (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID;
  while (2)
  {
    if (v89)
    {
      v93 = __clz(__rbit64(v89));
      v89 &= v89 - 1;
      v94 = v93 | (v90 << 6);
      goto LABEL_82;
    }
    v95 = v90 + 1;
    if (__OFADD__(v90, 1))
      goto LABEL_125;
    if (v95 >= v162)
    {
LABEL_123:
      swift_release();
      return;
    }
    v96 = *(_QWORD *)(v160 + 8 * v95);
    ++v90;
    if (v96)
      goto LABEL_81;
    v90 = v95 + 1;
    if (v95 + 1 >= v162)
      goto LABEL_123;
    v96 = *(_QWORD *)(v160 + 8 * v90);
    if (v96)
    {
LABEL_81:
      v89 = (v96 - 1) & v96;
      v94 = __clz(__rbit64(v96)) + (v90 << 6);
LABEL_82:
      v98 = v161;
      sub_10002B1E8(*(_QWORD *)(v163 + 48) + *(_QWORD *)(v166 + 72) * v94, v161, v91);
      sub_10001F580(v98, v167, v91);
      if (*(_BYTE *)(v168 + v165) == 1)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v99 = type metadata accessor for Logger(0);
        v100 = sub_100012DC4(v99, (uint64_t)qword_100645EC0);
        v101 = Logger.logObject.getter(v100);
        v102 = static os_log_type_t.fault.getter(v101);
        if (os_log_type_enabled(v101, v102))
        {
          v103 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v103 = 0;
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "Attempting to read sectionMetadata while it is being modified", v103, 2u);
          swift_slowDealloc(v103, -1, -1);
        }

      }
      v104 = *v26;
      v105 = v26[1];
      v106 = v26[2];
      if (*v26)
      {
        swift_bridgeObjectRetain(*v26);
        swift_bridgeObjectRetain(v105);
        swift_bridgeObjectRetain(v106);
        v107 = v105;
        if (!*(_QWORD *)(v105 + 16))
          goto LABEL_65;
      }
      else
      {
        v158 = v26[2];
        v159 = v89;
        v164 = v90;
        v157 = *((unsigned __int8 *)v26 + 24);
        v108 = sub_10002A750((uint64_t *)&unk_100646400);
        v109 = swift_allocObject(v108, 24, 7);
        *(_QWORD *)(v109 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          v145 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
          if (v145)
          {
            v146 = v145;
            if (v145 < 1)
              goto LABEL_129;
            v147 = &_swiftEmptyArrayStorage[4];
            v26 = v155;
            do
            {
              v148 = *v147++;
              swift_weakAssign(v148 + 56, 0);
              swift_beginAccess(v148 + 64, v169, 1, 0);
              v149 = *(_QWORD *)(v148 + 64);
              *(_QWORD *)(v148 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease(v149);
              --v146;
            }
            while (v146);
          }
        }
        sub_100070B1C(v109);
        v104 = v110;
        v107 = v111;
        v106 = v112;
        v114 = v113;
        swift_release();
        v115 = v114 & 1;
        v116 = *v26;
        v117 = v26[1];
        v118 = v91;
        v119 = v26[2];
        *v26 = v104;
        v26[1] = v107;
        v26[2] = v106;
        *((_BYTE *)v26 + 24) = v115;
        swift_bridgeObjectRetain(v104);
        swift_bridgeObjectRetain(v107);
        swift_bridgeObjectRetain(v106);
        v120 = v119;
        v91 = v118;
        sub_1000072F0(v116, v117, v120);
        sub_1000072F0(0, v105, v158);
        v90 = v164;
        v89 = v159;
        if (!*(_QWORD *)(v107 + 16))
          goto LABEL_65;
      }
      v121 = sub_1002AA39C(v167);
      if ((v122 & 1) == 0)
      {
LABEL_65:
        swift_bridgeObjectRelease(v107);
        v92 = v104;
LABEL_66:
        swift_bridgeObjectRelease(v92);
        swift_bridgeObjectRelease(v106);
LABEL_67:
        sub_10001F544(v167, v91);
        continue;
      }
      v92 = *(_QWORD *)(*(_QWORD *)(v107 + 56) + 8 * v121);
      v123 = v92 & 0xC000000000000001;
      v164 = v90;
      v159 = v104;
      v158 = v106;
      if ((v92 & 0xC000000000000001) != 0)
      {
        if (v92 < 0)
          v124 = v92;
        else
          v124 = v92 & 0xFFFFFFFFFFFFFF8;
        v125 = __CocoaSet.startIndex.getter(v124);
        v127 = v126;
        v128 = __CocoaSet.endIndex.getter(v124);
        v130 = static __CocoaSet.Index.== infix(_:_:)(v125, v127, v128, v129);
        swift_bridgeObjectRetain(v92);
        swift_bridgeObjectRelease(v128);
        v131 = v125;
        if ((v130 & 1) != 0)
          goto LABEL_117;
LABEL_103:
        v135 = sub_100478468(v131, v127, v123 != 0, v92);
        sub_10003E0E0(v131, v127, v123 != 0);
        swift_bridgeObjectRelease(v158);
        swift_bridgeObjectRelease(v107);
        swift_bridgeObjectRelease(v159);
        swift_bridgeObjectRelease(v92);
        v136 = v135 + *(_QWORD *)(*(_QWORD *)v135 + 144);
        swift_beginAccess(v136, v170, 0, 0);
        v137 = v136;
        v138 = v151;
        sub_10002B1E8(v137, v151, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        v139 = v138;
        v140 = v150;
        sub_10001F580(v139, v150, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10007641C(v140, 5);
        sub_10001F544(v140, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v26 = v155;
        v90 = v164;
        goto LABEL_67;
      }
      v132 = *(_BYTE *)(v92 + 32);
      v125 = 1 << v132;
      v133 = *(_QWORD *)(v92 + 56);
      if (v133)
      {
        v134 = 0;
        goto LABEL_102;
      }
      v141 = v132 & 0x3F;
      if (v141 >= 7)
      {
        v133 = *(_QWORD *)(v92 + 64);
        if (v133)
        {
          v134 = 1;
          goto LABEL_102;
        }
        if (v141 >= 8)
        {
          v133 = *(_QWORD *)(v92 + 72);
          if (v133)
          {
            v134 = 2;
LABEL_102:
            v131 = __clz(__rbit64(v133)) + (v134 << 6);
            v127 = *(unsigned int *)(v92 + 36);
            swift_bridgeObjectRetain(v92);
            if (v131 != v125)
              goto LABEL_103;
LABEL_117:
            sub_10003E0E0(v125, v127, v123 != 0);
            swift_bridgeObjectRelease(v107);
            swift_bridgeObjectRelease(v159);
            v26 = v155;
            v90 = v164;
            v106 = v158;
            goto LABEL_66;
          }
          v142 = 0;
          v143 = (unint64_t)(v125 + 63) >> 6;
          if (v143 <= 3)
            v143 = 3;
          v144 = v143 - 3;
          while (v144 != v142)
          {
            v133 = *(_QWORD *)(v92 + 80 + 8 * v142++);
            if (v133)
            {
              v134 = v142 + 2;
              goto LABEL_102;
            }
          }
        }
      }
      v127 = *(unsigned int *)(v92 + 36);
      swift_bridgeObjectRetain(v92);
      goto LABEL_117;
    }
    break;
  }
  v97 = v95 + 2;
  if (v97 >= v162)
    goto LABEL_123;
  v96 = *(_QWORD *)(v160 + 8 * v97);
  if (v96)
  {
    v90 = v97;
    goto LABEL_81;
  }
  while (1)
  {
    v90 = v97 + 1;
    if (__OFADD__(v97, 1))
      break;
    if (v90 >= v162)
      goto LABEL_123;
    v96 = *(_QWORD *)(v160 + 8 * v90);
    ++v97;
    if (v96)
      goto LABEL_81;
  }
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
}

void sub_1002BF124(int64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int64_t v99;
  unint64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  int64_t v163;
  int64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  int64_t v168;
  uint64_t v169;
  int64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178[24];
  char v179[24];
  char v180[24];
  char v181[24];
  char v182[8];
  char v183[8];

  v169 = a3;
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v6 = __chkstk_darwin(v5);
  v159 = (uint64_t)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v158 = (uint64_t)&v157 - v9;
  v10 = __chkstk_darwin(v8);
  v161 = (uint64_t)&v157 - v11;
  __chkstk_darwin(v10);
  v160 = (uint64_t)&v157 - v12;
  v13 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v174 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v175 = (uint64_t)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v166 = (uint64_t)&v157 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v157 - v19;
  __chkstk_darwin(v18);
  v167 = (uint64_t)&v157 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v163 = a1 + 56;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v173 = qword_100645F38;
  v176 = a2 + qword_100645F30;
  v177 = a2;
  v164 = (unint64_t)(v23 + 63) >> 6;
  v168 = a1;
  swift_bridgeObjectRetain(a1);
  v26 = 0;
  v162 = v20;
  while (1)
  {
    if (v25)
    {
      v28 = __clz(__rbit64(v25));
      v29 = (v25 - 1) & v25;
      v30 = v28 | (v26 << 6);
      goto LABEL_23;
    }
    v31 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    if (v31 >= v164)
      goto LABEL_64;
    v32 = *(_QWORD *)(v163 + 8 * v31);
    ++v26;
    if (!v32)
    {
      v26 = v31 + 1;
      if (v31 + 1 >= v164)
        goto LABEL_64;
      v32 = *(_QWORD *)(v163 + 8 * v26);
      if (!v32)
      {
        v26 = v31 + 2;
        if (v31 + 2 >= v164)
          goto LABEL_64;
        v32 = *(_QWORD *)(v163 + 8 * v26);
        if (!v32)
          break;
      }
    }
LABEL_22:
    v29 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v26 << 6);
LABEL_23:
    v34 = v167;
    sub_10002B1E8(*(_QWORD *)(v168 + 48) + *(_QWORD *)(v174 + 72) * v30, v167, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10001F580(v34, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    if (*(_BYTE *)(v177 + v173) == 1)
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100012DC4(v35, (uint64_t)qword_100645EC0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.fault.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Attempting to read sectionMetadata while it is being modified", v39, 2u);
        swift_slowDealloc(v39, -1, -1);
      }

    }
    v172 = v29;
    v40 = *(_QWORD *)v176;
    v41 = *(_QWORD *)(v176 + 8);
    v42 = *(_QWORD *)(v176 + 16);
    if (*(_QWORD *)v176)
    {
      v43 = *(_QWORD *)v176;
      v44 = *(_QWORD *)(v176 + 8);
      v171 = *(_QWORD *)(v176 + 16);
    }
    else
    {
      v165 = *(unsigned __int8 *)(v176 + 24);
      v170 = v26;
      v45 = sub_10002A750((uint64_t *)&unk_100640E10);
      inited = swift_initStackObject(v45, v183);
      *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v86 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v86)
        {
          v87 = v86;
          if (v86 < 1)
            goto LABEL_132;
          v88 = &_swiftEmptyArrayStorage[4];
          do
          {
            v89 = *v88++;
            swift_weakAssign(v89 + 56, 0);
            swift_beginAccess(v89 + 64, v181, 1, 0);
            v90 = *(_QWORD *)(v89 + 64);
            *(_QWORD *)(v89 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v90);
            --v87;
          }
          while (v87);
        }
      }
      sub_100070F40(inited);
      v48 = v47;
      v44 = v49;
      v51 = v50;
      v53 = v52;
      swift_setDeallocating(inited);
      swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
      v54 = v53 & 1;
      v55 = v176;
      v56 = *(_QWORD *)v176;
      v57 = *(_QWORD *)(v176 + 8);
      v58 = *(_QWORD *)(v176 + 16);
      *(_QWORD *)v176 = v48;
      *(_QWORD *)(v55 + 8) = v44;
      *(_QWORD *)(v55 + 16) = v51;
      *(_BYTE *)(v55 + 24) = v54;
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v44);
      v171 = v51;
      v59 = v51;
      v43 = v48;
      swift_bridgeObjectRetain(v59);
      sub_1000072F0(v56, v57, v58);
      v20 = v162;
      v26 = v170;
    }
    v60 = *(_QWORD *)(v44 + 16);
    sub_10002340C(v40, v41, v42);
    if (!v60 || (v61 = sub_1002AA6DC((uint64_t)v20), (v62 & 1) == 0))
    {
      swift_bridgeObjectRelease(v44);
      v27 = v43;
      goto LABEL_5;
    }
    v63 = v43;
    v170 = v26;
    v27 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61);
    v64 = v27 & 0xC000000000000001;
    if ((v27 & 0xC000000000000001) != 0)
    {
      if (v27 < 0)
        v65 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61);
      else
        v65 = v27 & 0xFFFFFFFFFFFFFF8;
      v66 = __CocoaSet.startIndex.getter(v65);
      v68 = v67;
      v69 = __CocoaSet.endIndex.getter(v65);
      v71 = static __CocoaSet.Index.== infix(_:_:)(v66, v68, v69, v70);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v69);
      v72 = v66;
      if ((v71 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      v73 = *(_BYTE *)(v27 + 32);
      v66 = 1 << v73;
      v74 = *(_QWORD *)(v27 + 56);
      if (v74)
      {
        v75 = 0;
      }
      else
      {
        v82 = v73 & 0x3F;
        if (v82 < 7)
          goto LABEL_57;
        v74 = *(_QWORD *)(v27 + 64);
        if (v74)
        {
          v75 = 1;
        }
        else
        {
          if (v82 < 8)
            goto LABEL_57;
          v74 = *(_QWORD *)(v27 + 72);
          if (!v74)
          {
            v83 = 0;
            v84 = (unint64_t)(v66 + 63) >> 6;
            if (v84 <= 3)
              v84 = 3;
            v85 = v84 - 3;
            while (v85 != v83)
            {
              v74 = *(_QWORD *)(v27 + 80 + 8 * v83++);
              if (v74)
              {
                v75 = v83 + 2;
                goto LABEL_43;
              }
            }
LABEL_57:
            v68 = *(unsigned int *)(v27 + 36);
            swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61));
LABEL_58:
            sub_10003E0E0(v66, v68, v64 != 0);
            swift_bridgeObjectRelease(v44);
            swift_bridgeObjectRelease(v63);
            v26 = v170;
LABEL_5:
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v171);
            goto LABEL_6;
          }
          v75 = 2;
        }
      }
LABEL_43:
      v72 = __clz(__rbit64(v74)) + (v75 << 6);
      v68 = *(unsigned int *)(v27 + 36);
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v61));
      if (v72 == v66)
        goto LABEL_58;
    }
    v76 = sub_1004786DC(v72, v68, v64 != 0, v27);
    sub_10003E0E0(v72, v68, v64 != 0);
    swift_bridgeObjectRelease(v171);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v63);
    swift_bridgeObjectRelease(v27);
    v77 = v76 + *(_QWORD *)(*(_QWORD *)v76 + 144);
    swift_beginAccess(v77, v182, 0, 0);
    v78 = v77;
    v79 = v161;
    sub_10002B1E8(v78, v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_release(v76);
    v80 = v79;
    v81 = v160;
    sub_10001F580(v80, v160, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10007399C(v81, 5);
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v26 = v170;
LABEL_6:
    v25 = v172;
    sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v33 = v31 + 3;
  if (v33 < v164)
  {
    v32 = *(_QWORD *)(v163 + 8 * v33);
    if (!v32)
    {
      while (1)
      {
        v26 = v33 + 1;
        if (__OFADD__(v33, 1))
          break;
        if (v26 >= v164)
          goto LABEL_64;
        v32 = *(_QWORD *)(v163 + 8 * v26);
        ++v33;
        if (v32)
          goto LABEL_22;
      }
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    v26 = v33;
    goto LABEL_22;
  }
LABEL_64:
  swift_release(v168);
  v91 = *(_QWORD *)(v169 + 56);
  v167 = v169 + 56;
  v92 = 1 << *(_BYTE *)(v169 + 32);
  v93 = -1;
  if (v92 < 64)
    v93 = ~(-1 << v92);
  v94 = v93 & v91;
  v168 = (unint64_t)(v92 + 63) >> 6;
  swift_bridgeObjectRetain(v169);
  v95 = 0;
  while (2)
  {
    if (v94)
    {
      v97 = __clz(__rbit64(v94));
      v94 &= v94 - 1;
      v98 = v97 | (v95 << 6);
      goto LABEL_86;
    }
    v99 = v95 + 1;
    if (__OFADD__(v95, 1))
      goto LABEL_129;
    if (v99 >= v168)
    {
LABEL_127:
      swift_release(v169);
      return;
    }
    v100 = *(_QWORD *)(v167 + 8 * v99);
    ++v95;
    if (v100)
      goto LABEL_85;
    v95 = v99 + 1;
    if (v99 + 1 >= v168)
      goto LABEL_127;
    v100 = *(_QWORD *)(v167 + 8 * v95);
    if (v100)
      goto LABEL_85;
    v95 = v99 + 2;
    if (v99 + 2 >= v168)
      goto LABEL_127;
    v100 = *(_QWORD *)(v167 + 8 * v95);
    if (v100)
    {
LABEL_85:
      v94 = (v100 - 1) & v100;
      v98 = __clz(__rbit64(v100)) + (v95 << 6);
LABEL_86:
      v102 = v166;
      sub_10002B1E8(*(_QWORD *)(v169 + 48) + *(_QWORD *)(v174 + 72) * v98, v166, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      sub_10001F580(v102, v175, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (*(_BYTE *)(v177 + v173) == 1)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v103 = type metadata accessor for Logger(0);
        v104 = sub_100012DC4(v103, (uint64_t)qword_100645EC0);
        v105 = Logger.logObject.getter(v104);
        v106 = static os_log_type_t.fault.getter(v105);
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v107 = 0;
          _os_log_impl((void *)&_mh_execute_header, v105, v106, "Attempting to read sectionMetadata while it is being modified", v107, 2u);
          swift_slowDealloc(v107, -1, -1);
        }

      }
      v109 = *(_QWORD *)v176;
      v108 = *(_QWORD *)(v176 + 8);
      v110 = *(_QWORD *)(v176 + 16);
      if (*(_QWORD *)v176)
      {
        v111 = *(_QWORD *)v176;
        v112 = *(_QWORD *)(v176 + 8);
        v113 = *(_QWORD *)(v176 + 16);
      }
      else
      {
        LODWORD(v170) = *(unsigned __int8 *)(v176 + 24);
        v171 = v110;
        v172 = v108;
        v114 = sub_10002A750((uint64_t *)&unk_100640E10);
        v115 = swift_initStackObject(v114, v180);
        *(_QWORD *)(v115 + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          v152 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
          if (v152)
          {
            v153 = v152;
            if (v152 < 1)
              goto LABEL_133;
            v154 = &_swiftEmptyArrayStorage[4];
            do
            {
              v155 = *v154++;
              swift_weakAssign(v155 + 56, 0);
              swift_beginAccess(v155 + 64, v178, 1, 0);
              v156 = *(_QWORD *)(v155 + 64);
              *(_QWORD *)(v155 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease(v156);
              --v153;
            }
            while (v153);
          }
        }
        sub_100070F40(v115);
        v111 = v116;
        v112 = v117;
        v113 = v118;
        v120 = v119;
        swift_setDeallocating(v115);
        swift_bridgeObjectRelease(*(_QWORD *)(v115 + 16));
        v121 = v120 & 1;
        v122 = v176;
        v123 = *(_QWORD *)v176;
        v124 = *(_QWORD *)(v176 + 8);
        v125 = *(_QWORD *)(v176 + 16);
        *(_QWORD *)v176 = v111;
        *(_QWORD *)(v122 + 8) = v112;
        *(_QWORD *)(v122 + 16) = v113;
        *(_BYTE *)(v122 + 24) = v121;
        swift_bridgeObjectRetain(v111);
        swift_bridgeObjectRetain(v112);
        swift_bridgeObjectRetain(v113);
        sub_1000072F0(v123, v124, v125);
        v108 = v172;
        v110 = v171;
      }
      v126 = *(_QWORD *)(v112 + 16);
      sub_10002340C(v109, v108, v110);
      if (!v126 || (v127 = sub_1002AA6DC(v175), (v128 & 1) == 0))
      {
        swift_bridgeObjectRelease(v112);
        v96 = v111;
LABEL_68:
        swift_bridgeObjectRelease(v96);
        swift_bridgeObjectRelease(v113);
LABEL_69:
        sub_10001F544(v175, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        continue;
      }
      v172 = v95;
      v96 = *(_QWORD *)(*(_QWORD *)(v112 + 56) + 8 * v127);
      v129 = v96 & 0xC000000000000001;
      v171 = v113;
      if ((v96 & 0xC000000000000001) != 0)
      {
        v130 = v111;
        if (v96 < 0)
          v131 = v96;
        else
          v131 = v96 & 0xFFFFFFFFFFFFFF8;
        v132 = __CocoaSet.startIndex.getter(v131);
        v134 = v133;
        v135 = __CocoaSet.endIndex.getter(v131);
        v137 = static __CocoaSet.Index.== infix(_:_:)(v132, v134, v135, v136);
        swift_bridgeObjectRetain(v96);
        swift_bridgeObjectRelease(v135);
        v138 = v132;
        if ((v137 & 1) != 0)
          goto LABEL_121;
LABEL_107:
        v142 = sub_1004786DC(v138, v134, v129 != 0, v96);
        sub_10003E0E0(v138, v134, v129 != 0);
        swift_bridgeObjectRelease(v171);
        swift_bridgeObjectRelease(v112);
        swift_bridgeObjectRelease(v130);
        swift_bridgeObjectRelease(v96);
        v143 = v142 + *(_QWORD *)(*(_QWORD *)v142 + 144);
        swift_beginAccess(v143, v179, 0, 0);
        v144 = v143;
        v145 = v159;
        sub_10002B1E8(v144, v159, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release(v142);
        v146 = v145;
        v147 = v158;
        sub_10001F580(v146, v158, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_100073440(v147, 5);
        sub_10001F544(v147, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v95 = v172;
        goto LABEL_69;
      }
      v139 = *(_BYTE *)(v96 + 32);
      v132 = 1 << v139;
      v140 = *(_QWORD *)(v96 + 56);
      if (v140)
      {
        v130 = v111;
        v141 = 0;
        goto LABEL_106;
      }
      v148 = v139 & 0x3F;
      if (v148 >= 7)
      {
        v140 = *(_QWORD *)(v96 + 64);
        if (v140)
        {
          v130 = v111;
          v141 = 1;
          goto LABEL_106;
        }
        if (v148 >= 8)
        {
          v140 = *(_QWORD *)(v96 + 72);
          if (v140)
          {
            v130 = v111;
            v141 = 2;
LABEL_106:
            v138 = __clz(__rbit64(v140)) + (v141 << 6);
            v134 = *(unsigned int *)(v96 + 36);
            swift_bridgeObjectRetain(v96);
            if (v138 != v132)
              goto LABEL_107;
LABEL_121:
            sub_10003E0E0(v132, v134, v129 != 0);
            swift_bridgeObjectRelease(v112);
            swift_bridgeObjectRelease(v130);
            v95 = v172;
            v113 = v171;
            goto LABEL_68;
          }
          v149 = 0;
          v150 = (unint64_t)(v132 + 63) >> 6;
          if (v150 <= 3)
            v150 = 3;
          v151 = v150 - 3;
          while (v151 != v149)
          {
            v140 = *(_QWORD *)(v96 + 80 + 8 * v149++);
            if (v140)
            {
              v130 = v111;
              v141 = v149 + 2;
              goto LABEL_106;
            }
          }
        }
      }
      v130 = v111;
      v134 = *(unsigned int *)(v96 + 36);
      swift_bridgeObjectRetain(v96);
      goto LABEL_121;
    }
    break;
  }
  v101 = v99 + 3;
  if (v101 >= v168)
    goto LABEL_127;
  v100 = *(_QWORD *)(v167 + 8 * v101);
  if (v100)
  {
    v95 = v101;
    goto LABEL_85;
  }
  while (1)
  {
    v95 = v101 + 1;
    if (__OFADD__(v101, 1))
      break;
    if (v95 >= v168)
      goto LABEL_127;
    v100 = *(_QWORD *)(v167 + 8 * v95);
    ++v101;
    if (v100)
      goto LABEL_85;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
}

NSObject *sub_1002C002C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _UNKNOWN **v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  objc_super v33;

  *(_QWORD *)&v5[qword_10065D8D8] = 0;
  *(_QWORD *)&v5[qword_10065D8E0] = 0;
  *(_QWORD *)&v5[qword_10065D8E8] = 0;
  v5[qword_10065D8F0] = 0;
  v33.receiver = v5;
  v33.super_class = (Class)sub_10002A750(&qword_100654768);
  v11 = objc_msgSendSuper2(&v33, "initWithFrame:", a2, a3, a4, a5);
  v12 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0x90);
  v13 = v11;
  v14 = (void *)v12(a1);
  v15 = *(void **)((char *)v13 + qword_10065D8D8);
  *(_QWORD *)((char *)v13 + qword_10065D8D8) = v14;
  v16 = v14;

  objc_msgSend(v16, "setAutoresizingMask:", 18);
  objc_msgSend(v16, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v13, "addSubview:", v16);
  objc_allocWithZone((Class)sub_10002A750((uint64_t *)&unk_100654770));
  v17 = v13;
  v18 = v16;
  v19 = sub_1002BB250(v17, v18);
  v20 = qword_10065D8E0;
  v21 = *(Class *)((char *)&v17->isa + qword_10065D8E0);
  *(Class *)((char *)&v17->isa + qword_10065D8E0) = (Class)v19;

  v22 = type metadata accessor for TTRITreeTableView();
  v23 = swift_dynamicCastClass(v18, v22);
  if (v23)
  {
    v24 = *(uint64_t *)((char *)&v17->isa + v20);
    v25 = &off_1005F1388;
    if (!v24)
      v25 = 0;
    v26 = v23 + OBJC_IVAR____TtC9Reminders17TTRITreeTableView_contextMenuDelegate;
    *(_QWORD *)(v26 + 8) = v25;
    swift_unknownObjectWeakAssign(v26, v24);
    v27 = v17;
  }
  else
  {
    if (qword_10063D7E0 != -1)
      swift_once(&qword_10063D7E0, sub_10043C710);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100012DC4(v28, (uint64_t)qword_10065D8C0);
    v27 = Logger.logObject.getter(v29);
    v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v30, "UITableView contained in TTRITreeView is not a subclass of TTRITreeTableView", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v18 = v17;
  }

  return v17;
}

uint64_t sub_1002C02A8(uint64_t a1)
{
  return sub_1002C02BC(a1, &qword_100645F28, (SEL *)&selRef_setDelegate_);
}

uint64_t sub_1002C02BC(uint64_t result, _QWORD *a2, SEL *a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t (*v10)(void *);
  char v11;
  char *v12;
  id v13;

  v4 = *(char **)(v3 + qword_10065D8E0);
  if (v4)
  {
    v6 = result;
    v7 = *(_QWORD *)&v4[*a2];
    *(_QWORD *)&v4[*a2] = result;
    v8 = v4;
    swift_retain(v6);
    swift_release(v7);
    v9 = *(void **)&v8[qword_100645F00];
    if (v6)
    {
      v10 = *(uint64_t (**)(void *))(v6 + 16);
      swift_retain(v6);
      v11 = v10(v9);
      swift_release(v6);
      if ((v11 & 1) != 0)
        v12 = v8;
      else
        v12 = 0;
    }
    else
    {
      v13 = v9;
      v12 = 0;
    }
    objc_msgSend(v9, *a3, v12);

    return swift_release(v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C0380(char a1)
{
  _BYTE *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BYTE *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  v1[qword_10065D8F0] = 0;
  if ((a1 & 1) != 0)
  {
    v2 = *(void **)&v1[qword_10065D8D8];
    if (v2)
    {
      objc_msgSend(v2, "performBatchUpdates:completion:", 0, 0);
      return;
    }
  }
  else
  {
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1005FE118, 24, 7);
    *(_QWORD *)(v4 + 16) = v1;
    v5 = swift_allocObject(&unk_1005FE140, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1002D78F4;
    *(_QWORD *)(v5 + 24) = v4;
    v9[4] = sub_1000381EC;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10001B258;
    v9[3] = &unk_1005FE158;
    v6 = _Block_copy(v9);
    v7 = v1;
    swift_retain();
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release().n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 146, 230, 44, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  __break(1u);
}

void sub_1002C0500(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE v17[24];

  v4 = *(void **)(v2 + qword_10065D8E0);
  if (v4)
  {
    v16 = v4;
    v6 = sub_10006B3DC();
    v8 = v7;
    v10 = v9;
    v11 = sub_100073228(a1, v7);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if (v11 && (Strong = swift_weakLoadStrong(v11 + 56), swift_release(), Strong))
    {
      v13 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 144);
      swift_beginAccess(v13, v17, 0, 0);
      sub_10002B1E8(v13, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);

    }
    else
    {
      v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);

    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1002C0650(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id result;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  id v21;
  Class isa;
  id v23;
  uint64_t v24;

  v5 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v24 - v13;
  v15 = qword_10065D8D8;
  result = *(id *)(v2 + qword_10065D8D8);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(result, "convertPoint:fromCoordinateSpace:", v2, a1, a2);
  result = *(id *)(v2 + v15);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = objc_msgSend(result, "indexPathForRowAtPoint:");
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  v18 = v17;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    sub_1000073A0((uint64_t)v7, &qword_100646950);
    return 0;
  }
  result = (id)((uint64_t (*)(char *, char *, uint64_t))v19)(v14, v7, v8);
  v20 = *(void **)(v2 + v15);
  if (v20)
  {
    v21 = v20;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v21, "cellForRowAtIndexPath:", isa);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

_QWORD *sub_1002C0864(_QWORD *result)
{
  uint64_t v1;
  char *v2;
  char v3;
  void *v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(char **)(v1 + qword_10065D8E0);
  if (v2)
  {
    v3 = (char)result;
    v4 = *(void **)&v2[qword_100645F00];
    v5 = v2;
    v6 = objc_msgSend(v4, "indexPathsForSelectedRows");
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for IndexPath(0);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

      v13 = v9;
      if ((v3 & 1) != 0)
      {
        sub_1000F4658((unint64_t *)&v13);
        v9 = v13;
      }
      v10 = v5;
      swift_bridgeObjectRetain(v9);
      v12 = sub_1002D6208(v11, (uint64_t)v10);
      swift_bridgeObjectRelease_n(v9, 2);

    }
    else
    {

      return _swiftEmptyArrayStorage;
    }
    return (_QWORD *)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C0958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v20, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v7 = (void *)result;
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v9 = *(_QWORD *)(v8 + 48);
    v10 = *(_QWORD *)(v8 + 56);
    ObjectType = swift_getObjectType(v9, v6);
    v17[0] = v9;
    v12 = sub_100350440(ObjectType, v10);
    v13 = *(_QWORD *)(v12 + 24);
    v14 = *(_QWORD *)(v12 + 32);
    swift_unknownObjectRetain(v13);
    swift_unknownObjectRelease(v12);
    v18 = swift_getObjectType(v13, v15);
    v19 = *(_QWORD *)(v14 + 8);
    v17[0] = v13;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(a2, v18);
    sub_100027F10(v17);

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C0A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v11 = *(_QWORD *)(v10 + 48);
    v12 = *(_QWORD *)(v10 + 56);
    ObjectType = swift_getObjectType(v11, v8);
    v18[0] = v11;
    v14 = sub_100350440(ObjectType, v12);
    v15 = *(_QWORD *)(v14 + 24);
    v16 = *(_QWORD *)(v14 + 32);
    swift_unknownObjectRetain(v15);
    swift_unknownObjectRelease(v14);
    v19 = swift_getObjectType(v15, v17);
    v20 = *(_QWORD *)(v16 + 8);
    v18[0] = v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(a2, a3, v19);
    sub_100027F10(v18);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002C0B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12;
  _BYTE v14[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x1002C0BC8);
  }
  v7 = (void *)Strong;
  v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v9 = *(_QWORD *)(v8 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v8 + 48), v6);
  v11 = sub_100350440(ObjectType, v9);
  v12 = sub_10037F094(a2);

  swift_unknownObjectRelease(v11);
  return v12 & 1;
}

uint64_t sub_1002C0C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  char v10;
  _BYTE v11[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = a4(a1, a2);

    return v10 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C0C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _BYTE v10[24];

  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v10, 0, 0);
  if (swift_unknownObjectWeakLoadStrong(a3))
  {
    sub_10002B1E8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v8 = (char *)&loc_1002C0D30 + dword_1002C0E0C[swift_getEnumCaseMultiPayload(v7, v5)];
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1002C0E0CLL);
}

uint64_t sub_1002C0E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v18[24];
  _BYTE v19[24];

  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3 += 16;
  swift_beginAccess(a3, v19, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v9 = (char *)result;
    v10 = *(_QWORD *)(result
                    + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides);
    swift_beginAccess(v10 + 24, v18, 0, 0);
    v11 = *(_QWORD *)(v10 + 24);
    swift_bridgeObjectRetain(v11);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v12);
    v13 = sub_10037B2B4((uint64_t)v7, v11);
    swift_bridgeObjectRelease(v11);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v13 & 1) != 0)
    {
      v15 = 0;
    }
    else
    {
      v16 = *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter], v14);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 + 8) + 488))(a2, ObjectType);
    }

    return v15 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C0F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v21 = a6;
  v10 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a7 += 16;
  swift_beginAccess(a7, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a7);
  if (Strong)
  {
    v14 = (void *)Strong;
    *(_BYTE *)(*(_QWORD *)(Strong
                         + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker)
             + 16) = 0;
    v15 = sub_10002A750(&qword_100646A70);
    v16 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned __int8 *)(v17 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject(v15, v19 + *(_QWORD *)(v17 + 72), v18 | 7);
    *(_OWORD *)(v20 + 16) = xmmword_100520250;
    sub_10002B1E8(a2, v20 + v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10002B1E8(a5, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    sub_1003382F4(v20, (uint64_t)v12, v21, 1, 1);
    swift_bridgeObjectRelease(v20);
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640E00);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C1114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v23 = a5;
  v24 = a6;
  v22 = a2;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a7 += 16;
  swift_beginAccess(a7, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a7);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v12);
    v16 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v17 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject(v16, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
    *(_OWORD *)(v21 + 16) = xmmword_100520250;
    sub_10002B1E8(v22, v21 + v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(v23, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8) + 520))(v21, v10, v24, 1, 1, ObjectType);
    swift_bridgeObjectRelease(v21);
    sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C12B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1002C12C4(a1, a2, a3, a4, sub_100020D4C);
}

void sub_1002C12C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v11[24];

  v8 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    a5(a2, a3);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C1338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  _BYTE v10[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v6);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 432))(a2, ObjectType);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002C13C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t result;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  _BYTE v59[24];
  id v60;

  v55 = a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100646950);
  v11 = __chkstk_darwin(v10);
  v58 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v52 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v52 - v16;
  v18 = sub_10002A750((uint64_t *)&unk_100640E00);
  v19 = __chkstk_darwin(v18);
  v57 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v52 - v21;
  v60 = a1;
  v23 = objc_msgSend(a1, "sourceIndexPath");
  if (v23)
  {
    v24 = v23;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v26 = v17;
    v27 = 0;
  }
  else
  {
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v26 = v17;
    v27 = 1;
  }
  v56 = v25;
  v25((uint64_t)v26, v27, 1, v6);
  sub_10000735C((uint64_t)v17, (uint64_t)v15, &qword_100646950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    v28 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 1, v28);
  }
  else
  {
    v53 = a3;
    v54 = v3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    v29 = sub_10006B64C();
    v31 = v30;
    v33 = v32;
    v34 = sub_1000F8FE4(v9, v29);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v29);
    if (v34)
    {
      v35 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 144);
      swift_beginAccess(v35, v59, 0, 0);
      sub_10002B1E8(v35, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release(v34);
      v36 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v22, 0, 1, v36);
    }
    else
    {
      v37 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v22, 1, 1, v37);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a3 = v53;
  }
  sub_1000073A0((uint64_t)v17, &qword_100646950);
  v38 = v60;
  v39 = objc_msgSend(v60, "dragItem");
  v40 = objc_msgSend(v38, "sourceIndexPath");
  v41 = (uint64_t)v58;
  if (v40)
  {
    v42 = v40;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v40);

    v43 = 0;
  }
  else
  {
    v43 = 1;
  }
  v56(v41, v43, 1, v6);
  v44 = v57;
  sub_10000735C((uint64_t)v22, v57, (uint64_t *)&unk_100640E00);
  objc_msgSend(v38, "previewSize");
  v46 = v45;
  v48 = v47;
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_100640E00);
  *a3 = v39;
  v49 = (int *)sub_10002A750(&qword_100641000);
  sub_10000F614(v41, (uint64_t)a3 + v49[9], &qword_100646950);
  result = sub_10000F614(v44, (uint64_t)a3 + v49[10], (uint64_t *)&unk_100640E00);
  v51 = (_QWORD *)((char *)a3 + v49[11]);
  *v51 = v46;
  v51[1] = v48;
  return result;
}

uint64_t sub_1002C17D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t result;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  _BYTE v60[24];
  id v61;

  v56 = a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v59 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - v16;
  v18 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v18);
  v58 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v53 - v22;
  v61 = a1;
  v24 = objc_msgSend(a1, "sourceIndexPath", v21);
  if (v24)
  {
    v25 = v24;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v27 = v17;
    v28 = 0;
  }
  else
  {
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v27 = v17;
    v28 = 1;
  }
  v57 = v26;
  v26((uint64_t)v27, v28, 1, v6);
  sub_10000735C((uint64_t)v17, (uint64_t)v14, &qword_100646950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
  {
    v29 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 1, 1, v29);
  }
  else
  {
    v54 = a3;
    v55 = v3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    v30 = sub_10006B3DC();
    v32 = v31;
    v34 = v33;
    v35 = sub_1000F8FE4(v9, v30);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v30);
    if (v35)
    {
      v36 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 144);
      swift_beginAccess(v36, v60, 0, 0);
      sub_10002B1E8(v36, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      v37 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v23, 0, 1, v37);
    }
    else
    {
      v38 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v23, 1, 1, v38);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a3 = v54;
  }
  sub_1000073A0((uint64_t)v17, &qword_100646950);
  v39 = v61;
  v40 = objc_msgSend(v61, "dragItem");
  v41 = objc_msgSend(v39, "sourceIndexPath");
  v42 = (uint64_t)v59;
  if (v41)
  {
    v43 = v41;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v41);

    v44 = 0;
  }
  else
  {
    v44 = 1;
  }
  v57(v42, v44, 1, v6);
  v45 = v58;
  sub_10000735C((uint64_t)v23, v58, (uint64_t *)&unk_100640EB0);
  objc_msgSend(v39, "previewSize");
  v47 = v46;
  v49 = v48;
  sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_100640EB0);
  *a3 = v40;
  v50 = (int *)sub_10002A750(&qword_100654918);
  sub_10000F614(v42, (uint64_t)a3 + v50[9], &qword_100646950);
  result = sub_10000F614(v45, (uint64_t)a3 + v50[10], (uint64_t *)&unk_100640EB0);
  v52 = (_QWORD *)((char *)a3 + v50[11]);
  *v52 = v47;
  v52[1] = v49;
  return result;
}

_QWORD *sub_1002C1BF0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a1(0);
  v3 = (_QWORD *)v2;
  if (*(_QWORD *)(v2 + 16))
    return v3;
  v4 = objc_msgSend(*(id *)(v1 + qword_100653C78), "items", swift_bridgeObjectRelease(v2).n128_f64[0]);
  v5 = sub_10002A750(&qword_100641010);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
    goto LABEL_15;
  }
  if (v6 < 0)
    v15 = v6;
  else
    v15 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v6);
  if (!v7)
  {
LABEL_15:
    swift_bridgeObjectRelease(v6);
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v7);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      }
      else
      {
        v10 = *(void **)(v6 + 8 * v9 + 32);
        swift_unknownObjectRetain(v10);
      }
      ++v9;
      v11 = objc_msgSend(v10, "dragItem");
      v12 = swift_unknownObjectRelease(v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized ContiguousArray._endMutation()(v14);
    }
    while (v7 != v9);
    v3 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v6);
    return v3;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1002C1DB8(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int result;
  _QWORD v12[2];

  v8 = *(_QWORD *)(sub_10002A750(a2) - 8);
  v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v9 = a3(v9);
  v10 = *(_QWORD *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  result = sub_1002D4EAC(v12, a2, a4);
  *a1 = v9;
  return result;
}

void sub_1002C1E60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    a4(a1, a2);

  }
}

uint64_t sub_1002C1ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  char v10;
  _BYTE v12[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v6);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 480))(a2, ObjectType);

  }
  else
  {
    v10 = 1;
  }
  return v10 & 1;
}

void sub_1002C1F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_1002C4654();
    if (v6)
    {
      v7 = v6;
      -[NSObject endEditing:](v6, "endEditing:", 1);

      v5 = v7;
    }

  }
}

uint64_t sub_1002C1FD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t Strong;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v6 = sub_10002A750(qword_100653F80);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    HIBYTE(v17) = 0;
    swift_retain(a1);
    v11 = v10;
    sub_100107A48(a1, a1, (uint64_t)&v17 + 7, v11, v8);
    if (*v8 == 1)
      *(_BYTE *)(*(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker]
               + 16) = (*(_BYTE *)(*(_QWORD *)&v11[OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker]
                                   + 16) | HIBYTE(v17)) & 1;

    v12 = type metadata accessor for TTRITreeViewDropProposal(0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
    return sub_10001F580((uint64_t)v8, (uint64_t)a3, type metadata accessor for TTRITreeViewDropProposal);
  }
  else
  {
    v14 = type metadata accessor for TTRITreeViewDropProposal(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
    v15 = (char *)a3 + *(int *)(v14 + 20);
    v16 = sub_10002A750(&qword_100653E50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 4, v16);
    *a3 = 0;
    return sub_1000073A0((uint64_t)v8, qword_100653F80);
  }
}

uint64_t sub_1002C216C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  char v16[24];

  v6 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (void *)Strong;
    swift_retain();
    v11 = v10;
    sub_1001081F0(a1, a1, v11, v8);

    return sub_10001F580((uint64_t)v8, (uint64_t)a3, type metadata accessor for TTRITreeViewDropProposal);
  }
  else
  {
    v13 = (char *)a3 + *(int *)(v6 + 20);
    v14 = sub_10002A750(&qword_100653E50);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 4, v14);
    *a3 = 0;
  }
  return result;
}

void sub_1002C227C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker;
    v7 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_dropExceedsMaximumNumberOfPinnedListsTracker);
    if (*(_BYTE *)(v7 + 16) == 1)
    {
      sub_10033B9FC();
      v7 = *(_QWORD *)&v5[v6];
    }
    *(_BYTE *)(v7 + 16) = 0;

  }
}

void sub_1002C2300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
    if (v6)
    {
      v7 = v6;
      sub_1004C65D4();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1002C2370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v5 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8) + 424))(a2, ObjectType);
    v13 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v7, 1, v13) != 1)
    {
      v14 = TTRRemindersListViewModel.Reminder.title.getter();
      sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);

      return v14;
    }
    sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100646F40);

  }
  return 0;
}

uint64_t sub_1002C24B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v11[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return 0;
  v8 = (void *)Strong;
  v9 = a4(a2);

  return v9;
}

uint64_t sub_1002C2530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  return 0;
}

uint64_t sub_1002C2580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100654350);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100654350);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1002C2634(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  objc_super v9;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_1002C26B0();
  v6 = *(Class *)((char *)&v5->isa + qword_10065D8E0);
  if (v6)
  {
    v7 = v6;
    sub_1002BB8C4();

    v5 = v7;
  }

  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "dealloc");
}

NSObject *sub_1002C26B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  uint64_t v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  id v19;

  v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView);
  if (v2)
  {
    v3 = *(NSObject **)(v0
                      + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView);
  }
  else
  {
    v4 = v0;
    v5 = (double *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView);
    if ((*(_BYTE *)(v0
                   + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView
                   + 32) & 1) != 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v6, "bounds");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

    }
    else
    {
      v12 = v5[2];
      v14 = v5[3];
      v8 = *v5;
      v10 = v5[1];
    }
    v15 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListTreeView(0));
    v16 = sub_1002C002C(0, v8, v10, v12, v14);
    sub_10012456C((uint64_t)v16, v17);

    v18 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v16;
    v3 = v16;

    v2 = 0;
  }
  v19 = v2;
  return v3;
}

uint64_t sub_1002C2964()
{
  return type metadata accessor for TTRIRemindersListContentViewController(0);
}

uint64_t type metadata accessor for TTRIRemindersListContentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100654428;
  if (!qword_100654428)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListContentViewController);
  return result;
}

void sub_1002C2A2C(uint64_t a1, uint64_t a2)
{
  void *v2;
  char *v3;
  char *v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  char v33[24];
  objc_super v34;

  v34.receiver = v2;
  v34.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v34, "viewDidLoad");
  sub_1002C2D7C();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListBackgroundView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = &v3[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate];
  *((_QWORD *)v4 + 1) = &off_1005FDE90;
  swift_unknownObjectWeakAssign(v4, v2);
  v5 = sub_1002C26B0();
  v6 = *(Class *)((char *)&v5->isa + qword_10065D8D8);
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v6, "setBackgroundView:", v3);

  v7 = sub_1002C26B0();
  v8 = swift_allocObject(&unk_1005FE2D0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v2);
  objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListScrollingController(0));
  v9 = v2;
  v10 = sub_1004C74E8((uint64_t)v9, v7, (uint64_t)sub_1002DC1B4, v8);

  swift_release();
  v11 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController;
  v12 = *(void **)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController] = v10;

  v13 = sub_1002C26B0();
  v14 = *(uint64_t *)((char *)&v13->isa + qword_10065D8E0);
  if (!v14)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v15 = v13;
  swift_unknownObjectWeakAssign(v14 + qword_100645EE8, *(_QWORD *)&v9[v11]);

  v16 = *(void **)&v9[v11];
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = v16;
  sub_1004C60BC((uint64_t)v17, v18);

  v19 = sub_1002C26B0();
  v20 = *(Class *)((char *)&v19->isa + qword_10065D8D8);
  if (v20)
  {
    v21 = v19;
    v22 = v20;

    v23 = type metadata accessor for TTRIChromelessToolbarUpdater(0);
    swift_allocObject(v23, 88, 7);
    v24 = TTRIChromelessToolbarUpdater.init(scrollView:)(v22);
    swift_beginAccess(v24 + 24, v33, 1, 0);
    *(_QWORD *)(v24 + 32) = &off_1005FDEC8;
    swift_unknownObjectWeakAssign(v24 + 24, v9);
    *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater] = v24;
    swift_retain();
    swift_release();
    v25 = objc_msgSend(objc_allocWithZone((Class)PKHoverInteraction), "initWithDelegate:", v9);
    v26 = sub_1002C26B0();
    -[NSObject addInteraction:](v26, "addInteraction:", v25);

    swift_release();
    v27 = *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
    v28 = swift_allocObject(&unk_1005FE2D0, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16, v9);
    v29 = type metadata accessor for TTRIRemindersListAutomaticSubtaskSelectionController(0);
    v30 = (_QWORD *)swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v31 = (char *)v30
        + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
    v32 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    v30[2] = v27;
    v30[3] = &off_100600AC8;
    v30[4] = sub_1002DC1BC;
    v30[5] = v28;
    *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController] = v30;
    swift_unknownObjectRetain(v27);
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1002C2D7C()
{
  void *v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  NSString v4;
  NSObject *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  id v23;
  NSObject *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t ObjCClassFromMetadata;
  id v42;
  NSString v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  NSObject *v52;
  uint64_t v53;
  char *v54;
  void *v55;
  id (**v56)();
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  id v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  void *v65;
  uint64_t (*v66)(void);
  id v67;
  char v68;
  double v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  NSObject *v92;
  id v93;
  id v94;
  uint64_t v95;
  id v96;
  void *v97;
  id v98;
  NSObject *v99;
  id v100;
  id v101;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  NSObject *v106;
  uint64_t v107;
  objc_class *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113[40];
  char v114[112];

  v1 = v0;
  v2 = sub_1002C26B0();
  v3 = *(_QWORD *)(TTRAccesibility.RemindersList.ID.RemindersTable.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  -[NSObject setAccessibilityIdentifier:](v2, "setAccessibilityIdentifier:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = sub_1002C26B0();
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = *(Class *)((char *)&v5->isa + qword_10065D8D8);
  if (!v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = v6;
  v9 = v7;
  objc_msgSend(v9, "setTableFooterView:", v8);

  v10 = sub_1002C26B0();
  v11 = *(Class *)((char *)&v10->isa + qword_10065D8D8);
  if (!v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  objc_msgSend(v11, "setRowHeight:", UITableViewAutomaticDimension);

  v12 = sub_1002C26B0();
  v13 = *(Class *)((char *)&v12->isa + qword_10065D8D8);
  if (!v13)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v13, "setEstimatedRowHeight:", 46.0);

  v14 = sub_1002C26B0();
  v15 = *(Class *)((char *)&v14->isa + qword_10065D8D8);
  if (!v15)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v15, "setSectionHeaderTopPadding:", 0.0);

  v16 = sub_1002C26B0();
  v17 = *(Class *)((char *)&v16->isa + qword_10065D8D8);
  if (!v17)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v17, "setSectionHeaderHeight:", 28.0);

  v18 = sub_1002C26B0();
  v19 = *(Class *)((char *)&v18->isa + qword_10065D8D8);
  if (!v19)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v19, "setSectionFooterHeight:", 28.0);

  v20 = sub_1002C26B0();
  v21 = *(Class *)((char *)&v20->isa + qword_10065D8D8);
  if (!v21)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v22 = v20;
  v23 = v21;

  objc_msgSend(v23, "setKeyboardDismissMode:", 4);
  v24 = sub_1002C26B0();
  v25 = *(Class *)((char *)&v24->isa + qword_10065D8D8);
  if (!v25)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(v25, "setAllowsSelectionDuringEditing:", 1);

  v26 = sub_1002C26B0();
  v27 = *(Class *)((char *)&v26->isa + qword_10065D8D8);
  if (!v27)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  objc_msgSend(v27, "setAllowsMultipleSelectionDuringEditing:", 1);

  v28 = sub_1002C26B0();
  v29 = *(Class *)((char *)&v28->isa + qword_10065D8D8);
  if (!v29)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  objc_msgSend(v29, "setAlwaysBounceVertical:", 1);

  v30 = sub_1002C26B0();
  v31 = *(Class *)((char *)&v30->isa + qword_10065D8D8);
  if (!v31)
    goto LABEL_38;
  objc_msgSend(v31, "setDragInteractionEnabled:", 1);

  v32 = sub_1002D4E60();
  inited = swift_initStackObject(v32, v114);
  *(_OWORD *)(inited + 16) = xmmword_100527EC0;
  *(_QWORD *)(inited + 32) = type metadata accessor for TTRIRemindersListReminderCell(0);
  *(_QWORD *)(inited + 40) = type metadata accessor for TTRIRemindersListSharingStatusCellTableViewCell();
  *(_QWORD *)(inited + 48) = type metadata accessor for TTRIRemindersListCompletedCell();
  *(_QWORD *)(inited + 56) = type metadata accessor for TTRIRemindersListHashtagCollectionCell(0);
  *(_QWORD *)(inited + 64) = type metadata accessor for TTRIRemindersListTemplateStatusCell(0);
  *(_QWORD *)(inited + 72) = type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell(0);
  *(_QWORD *)(inited + 80) = type metadata accessor for TTRIRemindersListTipCell();
  *(_QWORD *)(inited + 88) = type metadata accessor for TTRIRemindersListEditableSectionCell(0);
  *(_QWORD *)(inited + 96) = type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell(0);
  v34 = sub_1002D4E14();
  v112 = swift_initStackObject(v34, v113);
  *(_QWORD *)(v112 + 32) = type metadata accessor for TTRIRemindersListSectionHeader(0);
  for (i = 32; i != 104; i += 8)
  {
    v36 = *(_QWORD *)(inited + i);
    v37 = sub_1002C26B0();
    static UITableViewCell.tableViewCellIdentifier.getter();
    v39 = *(Class *)((char *)&v37->isa + qword_10065D8D8);
    if (!v39)
    {
      __break(1u);
      goto LABEL_28;
    }
    v40 = v38;
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v36);
    v42 = v39;
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v42, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v43);

    swift_bridgeObjectRelease(v40);
  }
  swift_bridgeObjectRelease(inited);
  v44 = *(_QWORD *)(v112 + 32);
  v45 = sub_1002C26B0();
  static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter();
  v47 = *(Class *)((char *)&v45->isa + qword_10065D8D8);
  if (!v47)
    goto LABEL_39;
  v48 = v46;
  v49 = swift_getObjCClassFromMetadata(v44);
  v50 = v47;
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v50, "registerClass:forHeaderFooterViewReuseIdentifier:", v49, v51);

  swift_bridgeObjectRelease(v48);
  swift_setDeallocating(v112);
  v52 = sub_1002C26B0();
  v53 = swift_allocObject(&unk_1005FE2D0, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v1);
  swift_retain();
  sub_1001242C0();
  if (v54)
  {
    v55 = v54;
    v56 = (id (**)())&v54[OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514];
    v57 = *(_QWORD *)&v54[OBJC_IVAR____TtC9Reminders30TTRIRemindersListTreeTableView_ownerViewControllerFor52010514];
    v58 = (uint64_t)v56[1];
    *v56 = sub_1002DC210;
    v56[1] = (id (*)())v53;
    sub_1000381B8(v57, v58);

    swift_release();
  }
  else
  {

    swift_release_n(v53, 2);
  }
  v59 = sub_1002C26B0();
  v60 = sub_10002A750(&qword_1006548A8);
  swift_allocObject(v60, 192, 7);
  v61 = v1;
  v62 = sub_1002D7968((uint64_t)v61);

  v63 = *(char **)((char *)&v59->isa + qword_10065D8E0);
  if (!v63)
    goto LABEL_40;
  *(_QWORD *)&v63[qword_100645F10] = v62;
  v64 = v63;
  swift_retain();
  swift_release();
  v65 = *(void **)&v64[qword_100645F00];
  v66 = (uint64_t (*)(void))v62[2];
  swift_retain();
  v67 = v65;
  v68 = v66();
  *(_QWORD *)&v69 = swift_release().n128_u64[0];
  if ((v68 & 1) != 0)
    v70 = v64;
  else
    v70 = 0;
  objc_msgSend(v67, "setDataSource:", v70, v69, v112);

  v71 = &v64[qword_100645F30];
  v72 = *(_QWORD *)&v64[qword_100645F30];
  v73 = *(_QWORD *)&v64[qword_100645F30 + 8];
  v74 = *(_QWORD *)&v64[qword_100645F30 + 16];
  *(_QWORD *)v71 = 0;
  *((_QWORD *)v71 + 1) = 0;
  *((_QWORD *)v71 + 2) = 0;
  v71[24] = 0;
  sub_1000072F0(v72, v73, v74);

  swift_release();
  v75 = sub_1002C26B0();
  v76 = sub_10002A750(&qword_1006548B0);
  v77 = (_QWORD *)swift_allocObject(v76, 48, 7);
  v78 = swift_allocObject(&unk_1005FE6E0, 24, 7);
  swift_unknownObjectWeakInit(v78 + 16, v61);
  v77[2] = sub_100022FF8;
  v77[3] = v78;
  v79 = swift_allocObject(&unk_1005FE6E0, 24, 7);
  swift_unknownObjectWeakInit(v79 + 16, v61);
  v77[4] = sub_1002DC218;
  v77[5] = v79;
  v80 = *(uint64_t *)((char *)&v75->isa + qword_10065D8E0);
  if (!v80)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  *(_QWORD *)(v80 + qword_100645F18) = v77;

  swift_release();
  v81 = sub_1002C26B0();
  v82 = sub_10002A750(&qword_1006548B8);
  v83 = (_QWORD *)swift_allocObject(v82, 48, 7);
  v84 = swift_allocObject(&unk_1005FE708, 24, 7);
  swift_unknownObjectWeakInit(v84 + 16, v61);
  v83[2] = sub_100022FF8;
  v83[3] = v84;
  v85 = swift_allocObject(&unk_1005FE708, 24, 7);
  swift_unknownObjectWeakInit(v85 + 16, v61);
  v83[4] = sub_1002DC238;
  v83[5] = v85;
  sub_1002C02BC((uint64_t)v83, &qword_100645F20, (SEL *)&selRef_setPrefetchDataSource_);

  v86 = sub_1002C26B0();
  v87 = sub_10002A750(&qword_1006548C0);
  swift_allocObject(v87, 616, 7);
  v88 = v61;
  v89 = sub_1002D6A84((uint64_t)v88);
  v90 = sub_10002A750(&qword_1006548C8);
  swift_allocObject(v90, 80, 7);
  v91 = sub_1002D76D0((uint64_t)v88);

  *(_QWORD *)(v89 + 592) = v91;
  swift_release();
  sub_1002C02BC(v89, &qword_100645F28, (SEL *)&selRef_setDelegate_);

  v92 = sub_1002C26B0();
  v93 = objc_allocWithZone((Class)sub_10002A750(&qword_1006548D0));
  v94 = v88;
  v96 = sub_1002D96C4((uint64_t)v94, v95);

  v97 = *(Class *)((char *)&v92->isa + qword_10065D8E0);
  if (!v97)
    goto LABEL_42;
  v98 = v97;
  sub_10001C934(v96, &qword_100645ED8, &qword_10065B7C8, (SEL *)&selRef_setDragDelegate_);

  v99 = sub_1002C26B0();
  v100 = objc_allocWithZone((Class)sub_10002A750(&qword_1006548D8));
  v101 = v94;
  v103 = sub_1002D9198((uint64_t)v101, v102);

  v104 = *(Class *)((char *)&v99->isa + qword_10065D8E0);
  if (v104)
  {
    v105 = v104;
    sub_10001C934(v103, &qword_100645EE0, &qword_100653D08, (SEL *)&selRef_setDropDelegate_);

    v106 = sub_1002C26B0();
    v107 = sub_10002A750((uint64_t *)&unk_1006548E0);
    v108 = (objc_class *)swift_allocObject(v107, 64, 7);
    v109 = swift_allocObject(&unk_1005FE730, 24, 7);
    swift_unknownObjectWeakInit(v109 + 16, v101);
    *((_QWORD *)v108 + 2) = sub_100022FF8;
    *((_QWORD *)v108 + 3) = v109;
    v110 = swift_allocObject(&unk_1005FE730, 24, 7);
    swift_unknownObjectWeakInit(v110 + 16, v101);
    *((_QWORD *)v108 + 4) = sub_1002DC240;
    *((_QWORD *)v108 + 5) = v110;
    v111 = swift_allocObject(&unk_1005FE730, 24, 7);
    swift_unknownObjectWeakInit(v111 + 16, v101);
    *((_QWORD *)v108 + 6) = sub_1002DC248;
    *((_QWORD *)v108 + 7) = v111;
    *(Class *)((char *)&v106->isa + qword_10065D8E8) = v108;

    swift_release();
    return;
  }
LABEL_43:
  __break(1u);
}

void sub_1002C3764(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v13[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_1005FE668, 32, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = a1;
    v8 = swift_allocObject(&unk_1005FE690, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_1002DC1F0;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005FE6A8;
    v9 = _Block_copy(aBlock);
    v10 = v5;
    swift_bridgeObjectRetain(a1);
    swift_retain();
    objc_msgSend(v6, "performWithoutAnimation:", v9, swift_release().n128_f64[0]);
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 144, 714, 40, 1);

    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_1002C38DC(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1002C3950(a2 & 1, a1, a3 & 1);

  }
}

void sub_1002C3950(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  char *v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  void *v34;
  id v35;
  Class v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  void *v42;
  id v43;
  Class isa;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  _QWORD *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);

  LODWORD(v50) = a3;
  v51 = a2;
  LODWORD(v52) = a1;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v48 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  v22 = sub_1002C26B0();
  v23 = v22;
  v49 = v22;
  if ((v52 & 1) != 0)
  {
    sub_10002B1E8(v51, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
    v24 = *(Class *)((char *)&v23->isa + qword_10065D8E0);
    if (v24)
    {
      v25 = v24;
      sub_1002BCD14((uint64_t)v21, 1, 0);
      v26 = v49;
      if ((v50 & 1) != 0)
      {
        sub_10000735C((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_100640EB0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13) == 1)
        {
          sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
        }
        else
        {
          v47 = v21;
          v37 = (uint64_t)v48;
          sub_10001F580((uint64_t)v18, (uint64_t)v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v38 = sub_1002BD378(v37);
          v39 = v38[2];
          v46 = v38;
          if (v39)
          {
            v40 = (char *)v38
                + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
            v50 = *(_QWORD *)(v4 + 72);
            v51 = qword_100645F00;
            v52 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
            while (1)
            {
              v52(v12, v40, v3);
              v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
              v41(v12, 0, 1, v3);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
                break;
              v42 = *(void **)&v25[v51];
              (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
              v43 = v42;
              isa = IndexPath._bridgeToObjectiveC()().super.isa;
              (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
              objc_msgSend(v43, "selectRowAtIndexPath:animated:scrollPosition:", isa, 1, 0);

              v40 += v50;
              if (!--v39)
                goto LABEL_23;
            }
          }
          else
          {
            v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_23:
            v41(v12, 1, 1, v3);
          }
          swift_bridgeObjectRelease(v46);
          sub_10001F544((uint64_t)v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v26 = v49;
          v21 = v47;
        }
      }

      sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
      return;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  v27 = v51;
  v28 = *(Class *)((char *)&v22->isa + qword_10065D8E0);
  if (!v28)
    goto LABEL_27;
  v52 = v28;
  sub_1002BD5C0(v27, 1, (uint64_t (*)(double))sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, sub_1002AA398, (uint64_t (*)(__n128))sub_100073214, (void (*)(uint64_t, uint64_t *))sub_10019D874);
  if ((v50 & 1) != 0)
  {
    v29 = sub_1002BD378(v27);
    v30 = v29[2];
    v48 = v29;
    if (v30)
    {
      v31 = (char *)v29 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v50 = *(_QWORD *)(v4 + 72);
      v51 = qword_100645F00;
      v32 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      while (1)
      {
        v32(v9, v31, v3);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v33(v9, 0, 1, v3);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
          break;
        v34 = *(void **)((char *)v52 + v51);
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
        v35 = v34;
        v36 = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        objc_msgSend(v35, "deselectRowAtIndexPath:animated:", v36, 1);

        v31 += v50;
        if (!--v30)
          goto LABEL_20;
      }
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_20:
      v33(v9, 1, 1, v3);
    }

    swift_bridgeObjectRelease(v48);
  }
  else
  {

  }
}

void sub_1002C3ED0(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  char v4;
  uint64_t v6;
  objc_class *ObjectType;
  NSObject *v8;
  void *v9;
  unsigned int v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  NSObject *v21;
  _QWORD v22[4];
  objc_super v23;

  v3 = v2;
  v4 = a2;
  v6 = a1 & 1;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  if (objc_msgSend(v3, "isEditing") != (_DWORD)v6)
  {
    v23.receiver = v3;
    v23.super_class = ObjectType;
    objc_msgSendSuper2(&v23, "setEditing:animated:", v6, v4 & 1);
    if ((a1 & 1) != 0)
    {
      v8 = sub_1002C26B0();
      v9 = *(Class *)((char *)&v8->isa + qword_10065D8D8);
      if (!v9)
        goto LABEL_17;
      v10 = objc_msgSend(v9, "isEditing");

      if (v10
        && *((_BYTE *)v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem) == 1)
      {
        v11 = sub_1002C26B0();
        v12 = *(Class *)((char *)&v11->isa + qword_10065D8D8);
        if (!v12)
        {
LABEL_20:
          __break(1u);
          return;
        }
        objc_msgSend(v12, "setEditing:animated:", 0, v4 & 1);

      }
    }
    v13 = sub_1002C26B0();
    v14 = *(Class *)((char *)&v13->isa + qword_10065D8D8);
    if (v14)
    {
      objc_msgSend(v14, "setEditing:animated:", a1 & 1, v4 & 1);

      v15 = sub_1002C26B0();
      v16 = v15;
      if ((a1 & 1) == 0)
      {
        v19 = *(Class *)((char *)&v15->isa + qword_10065D8E0);
        if (v19)
        {
          v20 = v19;
          sub_10006F01C();

          goto LABEL_14;
        }
        goto LABEL_19;
      }
      __chkstk_darwin(v15);
      v22[2] = v3;
      v17 = *(Class *)((char *)&v16->isa + qword_10065D8E0);
      if (v17)
      {
        v18 = v17;
        sub_10006DE94((uint64_t)sub_1002DC1AC, (uint64_t)v22);

LABEL_14:
        v21 = sub_1002C26B0();
        sub_1002C0380(v4 & 1);

        return;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_1002C40B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v12);
  v14 = *(_QWORD *)(v11 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 464))(a1, ObjectType, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    v15 = 0;
  }
  else
  {
    sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 456))(v10, ObjectType, v14);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v15 & 1;
}

NSObject *sub_1002C4258()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  NSObject *result;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  id v18;
  _BYTE v19[24];
  char v20[24];

  v1 = v0;
  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v19[-v6];
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore], v20, 0, 0);
  sub_10000735C(v12, (uint64_t)v7, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
  sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  swift_beginAccess(v12, v19, 33, 0);
  sub_100041F2C((uint64_t)v4, v12, (uint64_t *)&unk_100640EB0);
  swift_endAccess(v19);
  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v14 = sub_1002C26B0();
    -[NSObject layoutBelowIfNeeded](v14, "layoutBelowIfNeeded");

    v15 = sub_1002C26B0();
    sub_10032C7CC((uint64_t)v11, 1, 0);

    result = sub_1002C26B0();
    v16 = *(Class *)((char *)&result->isa + qword_10065D8D8);
    if (!v16)
    {
      __break(1u);
      return result;
    }
    v17 = result;
    v18 = v16;

    UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v18, 0, 1);
  }
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_1002C44B8(char a1, uint64_t a2)
{
  void *v2;
  NSObject *v4;
  void *v5;
  unsigned int v6;
  NSObject *v7;
  void *v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1 & 1);
  v4 = sub_1002C26B0();
  v5 = *(Class *)((char *)&v4->isa + qword_10065D8D8);
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = objc_msgSend(v5, "isEditing");

  if (!v6)
    return;
  v7 = sub_1002C26B0();
  v8 = *(Class *)((char *)&v7->isa + qword_10065D8D8);
  if (!v8)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v8, "setEditing:animated:", 0, 0);

}

NSObject *sub_1002C4654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  NSObject *result;
  void *v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v8 + 8) + 208))(v27, ObjectType);
  v11 = v28;
  v12 = v29;
  sub_10001413C(v27, v28);
  TTRRemindersListEditingState.editingItem.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
    sub_100027F10(v27);
    return 0;
  }
  sub_10001F580((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100027F10(v27);
  result = sub_1002C26B0();
  v14 = *(Class *)((char *)&result->isa + qword_10065D8E0);
  if (v14)
  {
    v15 = result;
    v16 = v14;
    v17 = sub_10006B3DC();
    v19 = v18;
    v21 = v20;
    sub_1000701C4((uint64_t)v7, v17, v18, v20, v22 & 1);
    v24 = v23;

    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v17);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    result = 0;
    if (v24)
    {
      v25 = type metadata accessor for TTRIRemindersListReminderCell(0);
      result = swift_dynamicCastClass(v24, v25);
      if (!result)
      {

        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C4850(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  _QWORD v44[2];

  v3 = v2;
  v6 = sub_10002A750(&qword_100654848);
  v7 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v6, v11 + v9, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100520250;
  v13 = v12 + v11;
  sub_10002B1E8(a1, v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_BYTE *)(v13 + *(int *)(v7 + 20)) = 0;
  sub_1002C5110(v12);
  swift_setDeallocating(v12);
  swift_arrayDestroy(v13, 1, v7);
  swift_deallocClassInstance(v12, 32, 7);
  v14 = sub_1002C26B0();
  v15 = *(Class *)((char *)&v14->isa + qword_10065D8E0);
  if (!v15)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v16 = v14;
  v17 = a2 & 1;
  v18 = v15;
  v19 = sub_10006B3DC();
  v21 = v20;
  v23 = v22;
  sub_1000701C4(a1, v19, v20, v22, v24 & 1);
  v26 = v25;

  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  if (v26)
  {
    ObjectType = swift_getObjectType(v26, v27);
    v29 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersEditableCell);
    if (v29)
      v30 = v29;
    else
      v30 = 0;
    if (v29)
      v31 = v26;
    else
      v31 = 0;
    if (v31 && (sub_1002C4B08() & 1) != 0)
    {
      v33 = swift_getObjectType(v31, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v17, v33, v30);
      v44[0] = v31;
      v44[1] = v30;
      v34 = sub_10002A750(&qword_100654858);
      swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
      Promise.init(value:)(v44);
      return;
    }

  }
  v35 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController;
  v36 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (!v36)
    goto LABEL_18;
  v37 = v36;
  sub_1004C6340(a1);

  v38 = swift_allocObject(&unk_1005FE550, 17, 7);
  *(_BYTE *)(v38 + 16) = v17;
  v39 = (void *)zalgo.getter(v38);
  v40 = sub_10002A750(&qword_100654850);
  v41 = dispatch thunk of Promise.then<A>(on:closure:)(v39, sub_1002DB7B0, v38, v40);
  swift_release();
  swift_release();

  v42 = *(void **)(v3 + v35);
  if (!v42)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v43 = v42;
  sub_1002C4E48(a1, 0, 1, v41);
  swift_release();

}

NSObject *sub_1002C4B08()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  NSObject *result;
  char *v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[16];

  v0 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v0);
  v2 = &v24[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v5 = &v24[-v4];
  result = sub_1002C26B0();
  v7 = *(char **)((char *)&result->isa + qword_10065D8E0);
  if (v7)
  {
    v8 = (char *)result;
    v9 = *(void **)&v7[qword_100645F00];
    v10 = v7;
    v11 = objc_msgSend(v9, "indexPathsForVisibleRows");
    if (v11)
    {
      v12 = v11;
      v13 = type metadata accessor for IndexPath(0);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

      v15 = v10;
      v16 = (_QWORD *)sub_1002D6208(v14, (uint64_t)v15);

      swift_bridgeObjectRelease(v14);
      v8 = v15;
    }
    else
    {
      v16 = _swiftEmptyArrayStorage;
    }

    v17 = v16[2];
    if (v17)
    {
      v18 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
      v19 = (char *)v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      v20 = *(_QWORD *)(v18 + 72);
      swift_bridgeObjectRetain(v16);
      while (1)
      {
        v22 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v21);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
        v23 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v5, v2);
        sub_10001F544((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v21 = sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if ((v23 & 1) != 0)
          break;
        v19 += v20;
        if (!--v17)
        {
          swift_bridgeObjectRelease_n(v16, 2);
          return 0;
        }
      }
      swift_bridgeObjectRelease_n(v16, 2);
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease(v16);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C4D04(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  id v13;
  _QWORD v15[2];

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100012DC4(v5, (uint64_t)qword_100654350);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIRemindersListViewController: Begin editing title of cell of item-to-edit.", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  ObjectType = swift_getObjectType(v3, v10);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(a2 & 1, ObjectType, v4);
  v15[0] = v3;
  v15[1] = v4;
  v12 = sub_10002A750(&qword_100654858);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = v3;
  return Promise.init(value:)(v15);
}

uint64_t sub_1002C4E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v9 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v4);
  v10 = swift_allocObject(&unk_1005FE578, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v4);
  v12 = sub_1002D08B0(a1, (uint64_t (*)(uint64_t, _QWORD, __n128))sub_1002DD210, v10, (uint64_t)sub_1002DB1B0, v11, a3, a4);
  swift_release();
  swift_release();
  v13 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v4);
  v14 = swift_retain();
  v15 = (void *)zalgo.getter(v14);
  dispatch thunk of Promise.always(on:closure:)(v15, sub_1002DB1B8, v13);
  swift_release();
  swift_release();
  swift_release_n(v13, 2);

  return v12;
}

uint64_t sub_1002C4FAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v9 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v4);
  v10 = swift_allocObject(&unk_1005FE410, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v4);
  v12 = sub_1002D14D4(a1, (uint64_t (*)(uint64_t, _QWORD, __n128))sub_1002DB1A8, v10, (uint64_t)sub_1002DB1B0, v11, a3, a4);
  swift_release();
  swift_release();
  v13 = swift_allocObject(&unk_1005FE3E8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v4);
  v14 = swift_retain();
  v15 = (void *)zalgo.getter(v14);
  dispatch thunk of Promise.always(on:closure:)(v15, sub_1002DB1B8, v13);
  swift_release();
  swift_release();
  swift_release_n(v13, 2);

  return v12;
}

void sub_1002C5110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD v47[4];

  v2 = v1;
  v44 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v4 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10002A750(&qword_100654838);
  v7 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v11 = *(_QWORD *)(v10 + 48);
  v12 = *(_QWORD *)(v10 + 56);
  ObjectType = swift_getObjectType(v11, v13);
  v46 = v11;
  v15 = sub_100350440(ObjectType, v12);
  v16 = *(_QWORD *)(v15 + 24);
  v17 = *(_QWORD *)(v15 + 32);
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRelease(v15);
  v19 = swift_getObjectType(v16, v18);
  v41 = v19;
  v47[2] = v19;
  v20 = *(_QWORD *)(v17 + 8);
  v47[3] = v20;
  v46 = v16;
  v21 = *(_QWORD *)(a1 + 16);
  v22 = _swiftEmptyArrayStorage;
  if (v21)
  {
    v40[0] = v20;
    v40[1] = v2;
    v45 = _swiftEmptyArrayStorage;
    sub_1003D7F4C(0, v21, 0);
    v23 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v42 = *(_QWORD *)(v4 + 72);
    v22 = v45;
    do
    {
      sub_10002B1E8(v23, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      v24 = *(int *)(v43 + 48);
      sub_10002B1E8((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v9[v24] = v6[*(int *)(v44 + 20)];
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      {
        sub_1003D7F4C(0, v22[2] + 1, 1);
        v22 = v45;
      }
      v26 = v22[2];
      v25 = v22[3];
      if (v26 >= v25 >> 1)
      {
        sub_1003D7F4C(v25 > 1, v26 + 1, 1);
        v22 = v45;
      }
      v22[2] = v26 + 1;
      v19 = sub_10000F614((uint64_t)v9, (uint64_t)v22+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v26, &qword_100654838);
      v23 += v42;
      --v21;
    }
    while (v21);
    v27 = v41;
    v20 = v40[0];
  }
  else
  {
    v27 = v41;
  }
  __chkstk_darwin(v19);
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v29 = sub_1000175C8(&qword_100654840, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
  v30 = TTRTreeContentsQueryable.ancestorsToExpand<A>(forRevealing:transform:isExpanded:itemExpandedStateIsUnknownIfParentIsCollapsed:)(v22, sub_1002C5594, 0, sub_1002DB780, &v40[-4], 1, v27, v28, v20, v29);
  swift_bridgeObjectRelease(v22);
  sub_100027F10(&v46);
  if (*(_QWORD *)(v30 + 16))
  {
    if (qword_10063D5F0 != -1)
      swift_once(&qword_10063D5F0, sub_1002C2580);
    v31 = type metadata accessor for Logger(0);
    sub_100012DC4(v31, (uint64_t)qword_100654350);
    swift_bridgeObjectRetain(v30);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v35 = 134217984;
      v46 = *(_QWORD *)(v30 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "TTRIRemindersListContentViewController: expand ancestors to reveal target item {count: %ld}", v35, 0xCu);
      swift_slowDealloc(v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v30);
    }
    v36 = sub_1002C26B0();
    __chkstk_darwin(v36);
    v38 = *(void **)(v37 + qword_10065D8E0);
    if (v38)
    {
      v39 = v38;
      sub_1000FAA08(0, 0, 0, 0, (uint64_t)v39, (void (*)(uint64_t))sub_1002DB788);
      swift_bridgeObjectRelease(v30);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v30);
  }
}

uint64_t sub_1002C5594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002B1E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

NSObject *sub_1002C55B4(uint64_t a1)
{
  NSObject *result;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  result = sub_1002C26B0();
  v3 = *(Class *)((char *)&result->isa + qword_10065D8E0);
  if (v3)
  {
    v4 = result;
    v5 = v3;
    v6 = sub_10006B3DC();
    v8 = v7;
    v10 = v9;
    v11 = sub_100073228(a1, v7);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if (v11)
    {
      v12 = *(unsigned __int8 *)(v11 + 72);

      swift_release();
      return (v12 == 2);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C566C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  id v41;
  _BYTE v42[4];
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v43 = a3;
  v44 = a2;
  v45 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v45 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v45);
  v46 = v3;
  v7 = sub_1002C26B0();
  v8 = *(Class *)((char *)&v7->isa + qword_10065D8E0);
  if (!v8)
  {
    __break(1u);
    goto LABEL_16;
  }
  v9 = v7;
  v10 = v8;
  v11 = sub_10006B3DC();
  v13 = v12;
  v15 = v14;
  sub_1000701C4(a1, v11, v12, v14, v16 & 1);
  v18 = v17;

  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v11);
  v48 = (unint64_t)_swiftEmptyArrayStorage;
  if (v18)
  {
    v19 = type metadata accessor for TTRIRemindersListReminderCell(0);
    if (!swift_dynamicCastClass(v18, v19))
      goto LABEL_13;
    v20 = v18;
    if ((TTRIRemindersListReminderCell.isViewModelValid.getter(v20) & 1) != 0)
    {

      goto LABEL_13;
    }
    v26 = TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)(0, a1, 1);
    v27 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v29 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
    specialized Array._endMutation()(v30);

  }
  else
  {
    v21 = TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)(1, a1, 1);
    v22 = swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
    specialized Array._endMutation()(v25);
  }
  swift_release();
LABEL_13:
  sub_10002A750(&qword_100642E88);
  v47 = v48;
  v31 = sub_10002A750(&qword_1006547D0);
  v32 = sub_100023FEC(&qword_1006547D8, &qword_1006547D0, (uint64_t)&protocol conformance descriptor for [A]);
  static Promise.all<A>(_:)(&v47, v31, v32);
  sub_10002B1E8(a1, (uint64_t)&v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v33 = *(unsigned __int8 *)(v5 + 80);
  v34 = (v33 + 16) & ~v33;
  v35 = swift_allocObject(&unk_1005FE3C0, v34 + v6, v33 | 7);
  v36 = sub_10001F580((uint64_t)&v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v35 + v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v37 = (void *)zalgo.getter(v36);
  v38 = dispatch thunk of Promise.then<A>(on:closure:)(v37, sub_1002DB158, v35, v45);
  swift_release();
  swift_release();

  v39 = *(void **)(v46 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (v39)
  {
    v40 = v48;
    v41 = v39;
    swift_bridgeObjectRelease(v40);
    sub_1002C4FAC(a1, v44, v43 & 1, v38);
    swift_release();

    return;
  }
LABEL_16:
  __break(1u);
}

id sub_1002C59CC(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "parentViewController");

  return v4;
}

id sub_1002C5A3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[6];

  v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor);
  }
  else
  {
    v4 = sub_1002C26B0();
    v5 = *(_QWORD *)(TTRAccesibility.RemindersList.Rotor.CompletedTasks.unsafeMutableAddressor() + 8);
    v6 = swift_allocObject(&unk_1005FE190, 24, 7);
    swift_unknownObjectUnownedInit(v6 + 16, v0);
    v7 = swift_allocObject(&unk_1005FE1B8, 24, 7);
    swift_unknownObjectUnownedInit(v7 + 16, v4);
    v8 = (_QWORD *)swift_allocObject(&unk_1005FE280, 40, 7);
    v8[2] = v7;
    v8[3] = sub_1002DA24C;
    v8[4] = v6;
    v9 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain(v5);
    swift_retain();
    swift_retain();
    v10 = String._bridgeToObjectiveC()();
    v16[4] = sub_1002DD190;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001F8558;
    v16[3] = &unk_1005FE298;
    v11 = _Block_copy(v16);
    v12 = objc_msgSend(v9, "initWithName:itemSearchBlock:", v10, v11);

    _Block_release(v11);
    swift_bridgeObjectRelease(v5);
    swift_release();
    swift_release();
    swift_release();
    v13 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v12;
    v3 = v12;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1002C5C00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[6];

  v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor);
  }
  else
  {
    v4 = sub_1002C26B0();
    v5 = *(_QWORD *)(TTRAccesibility.RemindersList.Rotor.IncompleteTasks.unsafeMutableAddressor() + 8);
    v6 = swift_allocObject(&unk_1005FE190, 24, 7);
    swift_unknownObjectUnownedInit(v6 + 16, v0);
    v7 = swift_allocObject(&unk_1005FE1B8, 24, 7);
    swift_unknownObjectUnownedInit(v7 + 16, v4);
    v8 = (_QWORD *)swift_allocObject(&unk_1005FE230, 40, 7);
    v8[2] = v7;
    v8[3] = sub_1002DA240;
    v8[4] = v6;
    v9 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain(v5);
    swift_retain();
    swift_retain();
    v10 = String._bridgeToObjectiveC()();
    v16[4] = sub_1002DD190;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001F8558;
    v16[3] = &unk_1005FE248;
    v11 = _Block_copy(v16);
    v12 = objc_msgSend(v9, "initWithName:itemSearchBlock:", v10, v11);

    _Block_release(v11);
    swift_bridgeObjectRelease(v5);
    swift_release();
    swift_release();
    swift_release();
    v13 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v12;
    v3 = v12;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1002C5DC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[6];

  v1 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor);
  }
  else
  {
    v4 = sub_1002C26B0();
    v5 = *(_QWORD *)(TTRAccesibility.RemindersList.Rotor.OverdueTasks.unsafeMutableAddressor() + 8);
    v6 = swift_allocObject(&unk_1005FE190, 24, 7);
    swift_unknownObjectUnownedInit(v6 + 16, v0);
    v7 = swift_allocObject(&unk_1005FE1B8, 24, 7);
    swift_unknownObjectUnownedInit(v7 + 16, v4);
    v8 = (_QWORD *)swift_allocObject(&unk_1005FE1E0, 40, 7);
    v8[2] = v7;
    v8[3] = sub_1002DA1D8;
    v8[4] = v6;
    v9 = objc_allocWithZone((Class)UIAccessibilityCustomRotor);
    swift_bridgeObjectRetain(v5);
    swift_retain();
    swift_retain();
    v10 = String._bridgeToObjectiveC()();
    v16[4] = sub_1002DA218;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001F8558;
    v16[3] = &unk_1005FE1F8;
    v11 = _Block_copy(v16);
    v12 = objc_msgSend(v9, "initWithName:itemSearchBlock:", v10, v11);

    _Block_release(v11);
    swift_bridgeObjectRelease(v5);
    swift_release();
    swift_release();
    swift_release();
    v13 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v12;
    v3 = v12;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

uint64_t sub_1002C5F88(uint64_t a1, uint64_t a2)
{
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  LOBYTE(a1) = sub_1002C5FC4(a1);

  return a1 & 1;
}

uint64_t sub_1002C5FC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v16;

  v3 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 424))(a1, ObjectType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100646F40);
  }
  else
  {
    sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    if ((v9[*(int *)(v6 + 24)] & 0xFE) != 2 && (v9[*(int *)(v6 + 24)] & 1) == 0)
    {
      v14 = v9[*(int *)(v6 + 32)];
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
      return v14;
    }
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return 2;
}

BOOL sub_1002C6130(uint64_t a1, uint64_t a2)
{
  void *Strong;
  char v4;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = sub_1002C5FC4(a1);

  return (v4 & 1) == 0 && v4 != 2;
}

uint64_t sub_1002C6180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = sub_10002A750(&qword_10064A7B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v14);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 8) + 424))(a1, ObjectType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100646F40);
    return 0;
  }
  else
  {
    sub_10001F580((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    sub_10000735C((uint64_t)&v12[*(int *)(v9 + 44)], (uint64_t)v5, &qword_10064A7B8);
    v17 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v5, 1, v17) == 1)
    {
      sub_1000073A0((uint64_t)v5, &qword_10064A7B8);
      v16 = 0;
    }
    else
    {
      v16 = v5[*(int *)(v17 + 28)];
      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
    }
    sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  }
  return v16;
}

void sub_1002C6390(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v4[0] = "!";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_10052D0A0;
  v4[3] = &unk_10052D0B8;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = &unk_10052D0B8;
  v4[8] = &unk_10052D0B8;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = &unk_10052D0B8;
  sub_1000B5C9C(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_10052D0D0;
    v7 = &unk_10052D0D0;
    v8 = v5;
    v9 = &unk_10052D0B8;
    v10 = &unk_10052D0B8;
    v11 = &unk_10052D0B8;
    v12 = &unk_10052D0B8;
    swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
}

void *sub_1002C6448()
{
  NSObject *v0;
  void *result;
  unsigned __int8 v2;
  NSObject *v3;
  unsigned __int8 v4;
  NSObject *v5;
  unsigned int v6;

  v0 = sub_1002C26B0();
  result = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v2 = objc_msgSend(result, "hasActiveDrag");

  if ((v2 & 1) != 0)
    return 0;
  v3 = sub_1002C26B0();
  result = *(Class *)((char *)&v3->isa + qword_10065D8D8);
  if (!result)
    goto LABEL_9;
  v4 = objc_msgSend(result, "hasActiveDrop");

  if ((v4 & 1) != 0)
    return 0;
  v5 = sub_1002C26B0();
  result = *(Class *)((char *)&v5->isa + qword_10065D8D8);
  if (result)
  {
    v6 = objc_msgSend(result, "isEditing");

    return (void *)(v6 ^ 1);
  }
LABEL_10:
  __break(1u);
  return result;
}

double sub_1002C6504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  double result;

  v1 = v0;
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100654350);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIRemindersListViewController: Cancel any hover detection once the cell starts being edited", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction);
  if (*(_QWORD *)(v7 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1002C660C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  _QWORD v6[6];

  v0 = sub_1002C26B0();
  *((_BYTE *)&v0->isa + qword_10065D8F0) = 0;
  v1 = objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1005FE0A0, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005FE0C8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1002D78F4;
  *(_QWORD *)(v3 + 24) = v2;
  v6[4] = sub_10001B278;
  v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10001B258;
  v6[3] = &unk_1005FE0E0;
  v4 = _Block_copy(v6);
  v5 = v0;
  swift_retain();
  objc_msgSend((id)v1, "performWithoutAnimation:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v3, "", 146, 230, 44, 1);

  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_1002C675C()
{
  NSObject *v0;
  void *v1;
  NSObject *v2;
  id v3;
  NSObject *v4;
  void *v5;
  NSObject *v6;
  id v7;

  v0 = sub_1002C26B0();
  v1 = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (v1)
  {
    v2 = v0;
    v3 = v1;

    objc_msgSend(v3, "contentInset");
    objc_msgSend(v3, "setContentInset:");

    v4 = sub_1002C26B0();
    v5 = *(Class *)((char *)&v4->isa + qword_10065D8D8);
    if (v5)
    {
      v6 = v4;
      v7 = v5;

      objc_msgSend(v7, "verticalScrollIndicatorInsets");
      objc_msgSend(v7, "setVerticalScrollIndicatorInsets:");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

NSObject *sub_1002C6830(uint64_t a1)
{
  NSObject *result;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  result = sub_1002C26B0();
  v3 = *(Class *)((char *)&result->isa + qword_10065D8E0);
  if (v3)
  {
    v4 = result;
    v5 = v3;
    v6 = sub_10006B3DC();
    v8 = v7;
    v10 = v9;
    v11 = sub_100073228(a1, v7);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if (v11)
    {
      v12 = *(unsigned __int8 *)(v11 + 72);

      swift_release();
      return (v12 == 2);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002C68E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  BOOL v80;
  uint8_t *v81;
  char *v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  char v108[24];

  v105 = a2;
  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v97 = (uint64_t)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v94 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v11);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(_QWORD *)(a1 + 16);
  if (!v104)
    return;
  v95 = v6;
  v96 = v5;
  v103 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v102 = *(_QWORD *)(v12 + 72);
  v93 = a1;
  swift_bridgeObjectRetain(a1);
  v15 = 0;
  v98 = v10;
  v99 = v14;
  while (1)
  {
    sub_10002B1E8(v103 + v102 * v15, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v16 = sub_1002C26B0();
    v17 = *(Class *)((char *)&v16->isa + qword_10065D8E0);
    if (!v17)
      break;
    v18 = v17[qword_100645F38];
    v107 = v16;
    if ((v18 & 1) != 0)
    {
      v19 = qword_10063D3C8;
      v20 = v17;
      if (v19 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100012DC4(v21, (uint64_t)qword_100645EC0);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.fault.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Attempting to read sectionMetadata while it is being modified", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

    }
    else
    {
      v26 = v17;
    }
    v27 = &v17[qword_100645F30];
    v29 = *(_QWORD *)&v17[qword_100645F30];
    v28 = *(_QWORD *)&v17[qword_100645F30 + 8];
    v30 = *(_QWORD *)&v17[qword_100645F30 + 16];
    if (v29)
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v17[qword_100645F30]);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v30);
      v32 = v28;
      v33 = v30;
    }
    else
    {
      v101 = *(_QWORD *)&v17[qword_100645F30 + 16];
      v106 = v15;
      v100 = v27[24];
      v34 = sub_10002A750((uint64_t *)&unk_100646400);
      v35 = swift_allocObject(v34, 24, 7);
      *(_QWORD *)(v35 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v88 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (v88)
        {
          v89 = v88;
          if (v88 < 1)
            goto LABEL_57;
          v90 = &_swiftEmptyArrayStorage[4];
          do
          {
            v91 = *v90++;
            swift_weakAssign(v91 + 56, 0);
            swift_beginAccess(v91 + 64, v108, 1, 0);
            v92 = *(_QWORD *)(v91 + 64);
            *(_QWORD *)(v91 + 64) = _swiftEmptyArrayStorage;
            swift_bridgeObjectRelease(v92);
            --v89;
          }
          while (v89);
        }
      }
      sub_100070B1C(v35);
      v29 = v36;
      v32 = v37;
      v38 = v17;
      v40 = v39;
      v42 = v41;
      swift_release();
      v43 = v42 & 1;
      v44 = *(_QWORD *)v27;
      v45 = *((_QWORD *)v27 + 1);
      v46 = *((_QWORD *)v27 + 2);
      *(_QWORD *)v27 = v29;
      *((_QWORD *)v27 + 1) = v32;
      *((_QWORD *)v27 + 2) = v40;
      v27[24] = v43;
      v33 = v40;
      v17 = v38;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v33);
      sub_1000072F0(v44, v45, v46);
      v31 = sub_1000072F0(0, v28, v101);
      v10 = v98;
      v14 = v99;
      v15 = v106;
    }
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v31);
    if (*(_QWORD *)(v32 + 16))
    {
      v47 = sub_1002AA39C((uint64_t)v10);
      if ((v48 & 1) != 0)
      {
        v106 = v15;
        v49 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v47);
        swift_bridgeObjectRetain(v49);
        sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v50 = v49 & 0xC000000000000001;
        if ((v49 & 0xC000000000000001) != 0)
        {
          if (v49 < 0)
            v51 = v49;
          else
            v51 = v49 & 0xFFFFFFFFFFFFFF8;
          v52 = __CocoaSet.startIndex.getter(v51);
          v54 = v53;
          v55 = __CocoaSet.endIndex.getter(v51);
          v57 = static __CocoaSet.Index.== infix(_:_:)(v52, v54, v55, v56);
          swift_bridgeObjectRelease(v55);
          v58 = v52;
          if ((v57 & 1) != 0)
          {
LABEL_47:
            sub_10003E0E0(v58, v54, v50 != 0);

            swift_bridgeObjectRelease(v33);
            swift_bridgeObjectRelease(v32);
            swift_bridgeObjectRelease(v29);
            swift_bridgeObjectRelease(v49);
LABEL_48:
            v10 = v98;
            v14 = v99;
            v15 = v106;
            goto LABEL_4;
          }
LABEL_28:
          v62 = sub_100478468(v52, v54, v50 != 0, v49);
          sub_10003E0E0(v52, v54, v50 != 0);
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v32);
          swift_bridgeObjectRelease(v29);
          swift_bridgeObjectRelease(v49);
          if (*(_BYTE *)(v62 + 72) == 2)
          {
            v63 = sub_10006B3DC();
            v65 = v64;
            v67 = v66;
            v69 = v97;
            sub_100309FE0(v62, v63, v66, v68 & 1, v97);
            swift_bridgeObjectRelease(v67);
            swift_bridgeObjectRelease(v65);
            v70 = v63;
            v71 = v69;
            v72 = swift_bridgeObjectRelease(v70);
            v74 = v95;
            v73 = v96;
            v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v95 + 48))(v71, 1, v96, v72);
            v14 = v99;
            v15 = v106;
            if (v75 == 1)
            {
              sub_1000073A0(v71, &qword_100646950);
              if (qword_10063D3C8 != -1)
                swift_once(&qword_10063D3C8, sub_1000E35C8);
              v76 = type metadata accessor for Logger(0);
              v77 = sub_100012DC4(v76, (uint64_t)qword_100645EC0);
              v78 = Logger.logObject.getter(v77);
              v79 = static os_log_type_t.fault.getter(v78);
              v80 = os_log_type_enabled(v78, v79);
              v10 = v98;
              if (v80)
              {
                v81 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v81 = 0;
                _os_log_impl((void *)&_mh_execute_header, v78, v79, "Unable to find index path", v81, 2u);
                swift_slowDealloc(v81, -1, -1);

                swift_release();
              }
              else
              {

                swift_release();
              }
            }
            else
            {
              v82 = v94;
              v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 32))(v94, v71, v73);
              __chkstk_darwin(v83);
              *(&v93 - 4) = v62;
              *(&v93 - 3) = (uint64_t)v17;
              *(&v93 - 2) = (uint64_t)v82;
              *(&v93 - 1) = 100;
              sub_10030A8DC((void (*)(uint64_t))sub_100076BA0, (uint64_t)(&v93 - 6), 0, 0, 0, 0);
              v84 = swift_release();
              (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v82, v73, v84);

              v10 = v98;
            }
            goto LABEL_4;
          }

          swift_release();
          goto LABEL_48;
        }
        v59 = *(_BYTE *)(v49 + 32);
        v58 = 1 << v59;
        v60 = *(_QWORD *)(v49 + 56);
        if (v60)
        {
          v61 = 0;
          goto LABEL_27;
        }
        if ((v59 & 0x3Fu) >= 7)
        {
          v60 = *(_QWORD *)(v49 + 64);
          if (v60)
          {
            v61 = 1;
LABEL_27:
            v52 = __clz(__rbit64(v60)) + (v61 << 6);
            v54 = *(unsigned int *)(v49 + 36);
            if (v52 == v58)
              goto LABEL_47;
            goto LABEL_28;
          }
          v85 = 0;
          v86 = (unint64_t)(v58 + 63) >> 6;
          if (v86 <= 2)
            v86 = 2;
          v87 = v86 - 2;
          while (v87 != v85)
          {
            v60 = *(_QWORD *)(v49 + 72 + 8 * v85++);
            if (v60)
            {
              v61 = v85 + 1;
              goto LABEL_27;
            }
          }
        }
        v54 = *(unsigned int *)(v49 + 36);
        goto LABEL_47;
      }
    }
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);

    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v29);
LABEL_4:
    ++v15;
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v15 == v104)
    {
      swift_bridgeObjectRelease(v93);
      return;
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1002C712C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  id v12;
  uint64_t v13;

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v8 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      sub_10002B1E8(v7, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v9 = sub_1002C26B0();
      v10 = *(Class *)((char *)&v9->isa + qword_10065D8E0);
      if (!v10)
        break;
      v11 = v9;
      v12 = v10;
      sub_10007641C((uint64_t)v5, 100);

      sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v7 += v8;
      if (!--v6)
      {
        swift_bridgeObjectRelease(a1);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1002C723C(uint64_t a1)
{
  NSObject *v2;
  char *v3;
  NSObject *v4;
  char *v5;

  v2 = sub_1002C26B0();
  v3 = *(char **)((char *)&v2->isa + qword_10065D8E0);
  if (v3)
  {
    v4 = v2;
    *(_QWORD *)&v3[qword_100645EF0] = a1;
    swift_retain_n(a1, 2);
    v5 = v3;
    swift_release();
    sub_1002BACE8((uint64_t)&unk_1005FE078, &qword_100654760, &qword_100644BB0, (uint64_t)sub_1002D5FAC);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002C72E0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000F614(a1, v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView, (uint64_t *)&unk_1006547A0);
}

uint64_t sub_1002C7308(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (v2)
  {
    v3 = result;
    swift_unknownObjectWeakAssign(v2 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_extenalScrollViewDelegate, result);
    return swift_unknownObjectRelease(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C7354()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_preferredChromelessBarStates));
}

NSObject *sub_1002C7364()
{
  return sub_1002C4654();
}

void *sub_1002C7388()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell);
  v2 = v1;
  return v1;
}

uint64_t sub_1002C73C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v1 = sub_10002A750(&qword_100654788);
  v2 = *(_QWORD *)(sub_10002A750((uint64_t *)&unk_100640EB0) - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v1, v5 + v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100520250;
  v7 = v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem;
  swift_beginAccess(v7, v13, 0, 0);
  sub_10000735C(v7, v6 + v5, (uint64_t *)&unk_100640EB0);
  v8 = sub_10002A750(&qword_100654790);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = sub_100023FEC(&qword_100654798, &qword_100654790, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = Sequence.removingNils<A>()(v8, v9, v10);
  swift_bridgeObjectRelease(v6);
  return v11;
}

void sub_1002C74DC(void *a1)
{
  NSObject *v2;
  void *v3;
  NSObject *v4;
  id v5;

  v2 = sub_1002C26B0();
  v3 = *(Class *)((char *)&v2->isa + qword_10065D8D8);
  if (v3)
  {
    v4 = v2;
    v5 = v3;

    objc_msgSend(a1, "setContentScrollView:forEdge:", v5, 5);
  }
  else
  {
    __break(1u);
  }
}

double sub_1002C7548()
{
  NSObject *v0;
  double result;
  void *v2;
  NSObject *v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGRect v13;

  v0 = sub_1002C26B0();
  v2 = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (v2)
  {
    v3 = v0;
    v4 = v2;

    objc_msgSend(v4, "frame");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v13.origin.x = v6;
    v13.origin.y = v8;
    v13.size.width = v10;
    v13.size.height = v12;
    return CGRectGetHeight(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1002C75D0(char a1)
{
  NSObject *v2;
  _QWORD *v3;

  v2 = sub_1002C26B0();
  v3 = sub_1002C0864((_QWORD *)(a1 & 1));

  return v3;
}

void sub_1002C7608(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];

  v4 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController);
  if (v4)
  {
    v7 = TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter();
    __chkstk_darwin(v7);
    v10[2] = v8;
    v10[3] = a2;
    v9 = v4;
    sub_1004C6AD4((uint64_t (*)(id))sub_1002D78EC, (uint64_t)v10, a3 & 1);

    swift_bridgeObjectRelease(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002C76A4(double a1, double a2, double a3, double a4)
{
  NSObject *v8;
  void *v9;
  NSObject *v10;
  id v11;

  v8 = sub_1002C26B0();
  v9 = *(Class *)((char *)&v8->isa + qword_10065D8D8);
  if (v9)
  {
    v10 = v8;
    v11 = v9;

    UIScrollView.bottomContentInset(forAvoidingKeyboardFrame:)(a1, a2, a3, a4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002C7728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater);
  if (v1)
  {
    swift_retain(v1);
    TTRIChromelessToolbarUpdater.updateForToolbarVisibilityChange()();
    return swift_release(v1);
  }
  return result;
}

void sub_1002C7770()
{
  NSObject *v0;
  void *v1;
  NSObject *v2;
  id v3;

  v0 = sub_1002C26B0();
  v1 = *(Class *)((char *)&v0->isa + qword_10065D8E0);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    sub_1000FAA08(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_1002DD18C);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C77F0()
{
  NSObject *v0;
  void *v1;
  NSObject *v2;
  id v3;

  v0 = sub_1002C26B0();
  v1 = *(Class *)((char *)&v0->isa + qword_10065D8E0);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    sub_1000FAA08(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_1002D78E4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C7874(uint64_t a1)
{
  void *v1;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  if (objc_msgSend(v1, "isViewLoaded"))
  {
    v3 = sub_1002C26B0();
    v4 = sub_10000F614(a1, (uint64_t)&v9, &qword_100654878);
    if (!v9)
    {
      v7 = *(Class *)((char *)&v3->isa + qword_10065D8E0);
      if (v7)
      {
        v8 = v7;
        sub_10006B3C0();

        return;
      }
      goto LABEL_11;
    }
    v13 = v10;
    v14 = v11;
    v15 = v12;
    if (*(_QWORD *)(v9 + 16))
    {
      __chkstk_darwin(v4);
      v5 = *(Class *)((char *)&v3->isa + qword_10065D8E0);
      if (v5)
      {
        v6 = v5;
        sub_1000FAA08(0, 0, 0, 0, (uint64_t)v6, (void (*)(uint64_t))sub_1002DC14C);

        return;
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }

  }
}

void sub_1002C79AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;

  v42 = a2;
  v41 = sub_10002A750(&qword_100654860);
  __chkstk_darwin(v41);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750(&qword_100654868);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v40 = a1;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v43 = v16;
  v19 = v17 == 0;
  if (v17)
    goto LABEL_3;
LABEL_2:
  v20 = sub_10002A750(&qword_100654870);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  v21 = v17;
  while (1)
  {
    sub_10000F614((uint64_t)v13, (uint64_t)v16, &qword_100654868);
    v25 = sub_10002A750(&qword_100654870);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v16, 1, v25) == 1)
    {
      swift_bridgeObjectRelease(v40);
      return;
    }
    v44 = v21;
    v26 = v17;
    v27 = v13;
    v28 = (uint64_t)&v16[*(int *)(v25 + 48)];
    v29 = (uint64_t)&v16[*(int *)(v25 + 64)];
    sub_10001F580((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10000F614(v28, (uint64_t)v7, &qword_100654860);
    sub_10000F614(v29, (uint64_t)v4, &qword_100654860);
    v30 = sub_1002C26B0();
    v31 = *(Class *)((char *)&v30->isa + qword_10065D8E0);
    if (!v31)
      break;
    v32 = v30;
    v33 = *(int *)(v41 + 36);
    v34 = *(_QWORD *)&v4[v33];
    v35 = (uint64_t)v4;
    v36 = *(_QWORD *)&v7[v33];
    v37 = v31;
    v38 = v36;
    v4 = (char *)v35;
    sub_100311324((uint64_t)v10, v38, (uint64_t)v7, v34, v35);

    sub_1000073A0(v35, &qword_100654860);
    sub_1000073A0((uint64_t)v7, &qword_100654860);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v13 = v27;
    v17 = v26;
    v16 = v43;
    v18 = v44;
    v19 = v44 >= v26;
    if (v44 == v26)
      goto LABEL_2;
LABEL_3:
    if (v19)
    {
      __break(1u);
      break;
    }
    v22 = sub_10002A750(&qword_100654870);
    v23 = *(_QWORD *)(v22 - 8);
    sub_10000735C(v40+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v18, (uint64_t)v13, &qword_100654870);
    v21 = v18 + 1;
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    v16 = v43;
    v24(v13, 0, 1, v22);
  }
  __break(1u);
}

void sub_1002C7CCC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  NSObject *v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;

  v3 = v2;
  v6 = sub_1002C26B0();
  v7 = *(Class *)((char *)&v6->isa + qword_10065D8D8);
  if (v7)
  {
    v8 = objc_msgSend(v7, "isEditing");

    if (!v8)
    {
LABEL_11:
      sub_1002C4850(a1, a2 & 1);
      swift_release();
      return;
    }
    if (objc_msgSend(v3, "isEditing"))
    {
      if (qword_10063D5F0 != -1)
        swift_once(&qword_10063D5F0, sub_1002C2580);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100012DC4(v9, (uint64_t)qword_100654350);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.fault.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIShowRemindersViewController: trying to start editing a reminder while in edit mode", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }
      goto LABEL_10;
    }
    v11 = sub_1002C26B0();
    v14 = *(Class *)((char *)&v11->isa + qword_10065D8D8);
    if (v14)
    {
      objc_msgSend(v14, "setEditing:animated:", 0, 1);
LABEL_10:

      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002C7E3C(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;

  v2 = sub_1002C26B0();
  v3 = *(Class *)((char *)&v2->isa + qword_10065D8E0);
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = sub_10006B3DC();
    v8 = v7;
    v10 = v9;
    sub_1000701C4(a1, v6, v7, v9, v11 & 1);
    v18 = v12;

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if (v18)
    {
      v13 = type metadata accessor for TTRIRemindersListReminderCell(0);
      if (swift_dynamicCastClass(v18, v13))
      {
        TTRIRemindersListReminderCell.createAndStartEditingNewHashtag()();
LABEL_10:

        return;
      }

    }
    if (qword_10063D5F0 != -1)
      swift_once(&qword_10063D5F0, sub_1002C2580);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_100654350);
    v18 = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v16, "Tried createAndStartEditingNewHashtag but there is no cell containing the Reminder Item specified", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    goto LABEL_10;
  }
  __break(1u);
}

NSObject *sub_1002C7FC0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  NSObject *result;
  void *v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v46 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = sub_1002C26B0();
  sub_10032C7CC(a1, a2, a3);

  result = sub_1002C26B0();
  v13 = *(Class *)((char *)&result->isa + qword_10065D8E0);
  if (!v13)
  {
    __break(1u);
    return result;
  }
  v14 = result;
  v15 = v13;
  v16 = sub_10006B3DC();
  v18 = v17;
  v20 = v19;
  sub_1000701C4(a1, v16, v17, v19, v21 & 1);
  v23 = v22;

  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  if (!v23)
    return TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)(0, a1, 0);
  v24 = type metadata accessor for TTRIRemindersListReminderCell(0);
  v25 = swift_dynamicCastClass(v23, v24);
  if (!v25 || (v26 = v25, (TTRIRemindersListReminderCell.isViewModelValid.getter(v25) & 1) == 0))
  {

    return TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)(0, a1, 0);
  }
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v27 = type metadata accessor for Logger(0);
  sub_100012DC4(v27, (uint64_t)qword_100654350);
  sub_10002B1E8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v28 = v23;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.info.getter();
  v31 = os_log_type_enabled(v29, v30);
  v32 = (uint64_t)v46;
  if (v31)
  {
    v33 = swift_slowAlloc(22, -1);
    v44 = (uint64_t *)swift_slowAlloc(8, -1);
    v45 = swift_slowAlloc(32, -1);
    v48 = v45;
    *(_DWORD *)v33 = 136315394;
    sub_10002B1E8((uint64_t)v10, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v34 = String.init<A>(describing:)(v32, v6);
    v36 = v35;
    v47 = sub_100027E40(v34, v35, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v36);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_WORD *)(v33 + 12) = 2112;
    v47 = v26;
    v37 = v28;
    v32 = (uint64_t)v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v33 + 14, v33 + 22);
    v38 = v44;
    *v44 = v26;

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Target scroll item cell already loaded {item: %s, cell: %@}", (uint8_t *)v33, 0x16u);
    v39 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v38, 1, v39);
    swift_slowDealloc(v38, -1, -1);
    v40 = v45;
    swift_arrayDestroy(v45, 1, &type metadata for Any[8]);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);

  }
  sub_10002B1E8(a1, v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v41 = sub_10002A750(&qword_100642E88);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = Promise.init(value:)(v32);

  return v42;
}

uint64_t sub_1002C83AC(uint64_t a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v41 = a2;
  v5 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v43 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - v13;
  v42 = a1;
  v16 = TTRRemindersListHighlightTarget.targetItems.getter(v15);
  v17 = v16;
  if (*(_QWORD *)(v16 + 16))
  {
    v18 = v3;
    v19 = *(unsigned __int8 *)(v10 + 80);
    sub_10002B1E8(v16 + ((v19 + 32) & ~v19), (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    sub_1002C5110(v17);
    if (v14[*(int *)(v9 + 20)])
      v20 = 2;
    else
      v20 = 0;
    v41 &= 1u;
    v40 = v18;
    sub_1002C566C((uint64_t)v14, v20, v41);
    v21 = swift_allocObject(&unk_1005FE2D0, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v18);
    sub_10002B1E8(v42, (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    v22 = *(unsigned __int8 *)(v6 + 80);
    v23 = (v22 + 24) & ~v22;
    v24 = (v7 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject(&unk_1005FE2F8, v24 + 9, v22 | 7);
    *(_QWORD *)(v25 + 16) = v21;
    v26 = sub_10001F580((uint64_t)v8, v25 + v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    v27 = v25 + v24;
    *(_QWORD *)v27 = v17;
    LOBYTE(v23) = v41;
    *(_BYTE *)(v27 + 8) = v41;
    v28 = (void *)zalgo.getter(v26);
    v42 = dispatch thunk of Promise.then<A>(on:closure:)(v28, sub_1002DA890, v25, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    v29 = v43;
    sub_10002B1E8((uint64_t)v14, v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    v30 = (v19 + 24) & ~v19;
    v31 = v30 + v11;
    v32 = swift_allocObject(&unk_1005FE320, v31 + 1, v19 | 7);
    v33 = v40;
    *(_QWORD *)(v32 + 16) = v40;
    sub_10001F580(v29, v32 + v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    *(_BYTE *)(v32 + v31) = v23;
    v34 = swift_allocObject(&unk_1005FE348, 32, 7);
    *(_QWORD *)(v34 + 16) = sub_1002DACD0;
    *(_QWORD *)(v34 + 24) = v32;
    v35 = (void *)zalgo.getter(v33);
    v36 = v42;
    dispatch thunk of Promise.then<A>(on:closure:)(v35, sub_1002DAD00, v34, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
    return v36;
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    v38 = sub_10002A750(&qword_100657300);
    v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    return Promise.init(value:)(v39);
  }
}

void sub_1002C86B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  NSObject *v32;
  void *v33;
  NSObject *v34;
  int v35;
  id v36;
  void *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  _BYTE v45[24];
  uint64_t v46;

  v42 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    if (qword_10063D5F0 != -1)
      swift_once(&qword_10063D5F0, sub_1002C2580);
    v16 = type metadata accessor for Logger(0);
    sub_100012DC4(v16, (uint64_t)qword_100654350);
    v17 = sub_10002B1E8(a3, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.info.getter();
    v20 = os_log_type_enabled(v18, v19);
    v40 = a4;
    v41 = v5;
    v39 = v10;
    if (v20)
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v22 = v46;
      *(_DWORD *)v21 = 136315138;
      v38 = v21 + 4;
      v23 = TTRRemindersListHighlightTarget.description.getter();
      v25 = v24;
      v44 = sub_100027E40(v23, v24, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v38, v21 + 12);
      swift_bridgeObjectRelease(v25);
      sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "TTRIRemindersListContentViewController: highlight item briefly {target: %s}", v21, 0xCu);
      swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
      swift_slowDealloc(v22, -1, -1);
      v26 = v21;
      a4 = v40;
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget);
    }

    v27 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically;
    *(_BYTE *)(Strong
             + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically) = 1;
    v28 = *(_QWORD *)(a4 + 16);
    if (v28)
    {
      v38 = (uint8_t *)v27;
      v29 = a4 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
      v30 = *(_QWORD *)(v39 + 72);
      swift_bridgeObjectRetain(a4);
      v31 = a5 & 1;
      while (1)
      {
        sub_10002B1E8(v29, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
        v32 = sub_1002C26B0();
        v33 = *(Class *)((char *)&v32->isa + qword_10065D8E0);
        if (!v33)
          break;
        v34 = v32;
        v35 = v12[*(int *)(v42 + 20)];
        v36 = v33;
        sub_1002BDAFC((uint64_t)v12, v35, 0, v31);

        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
        v29 += v30;
        if (!--v28)
        {
          swift_bridgeObjectRelease(v40);
          v27 = (uint64_t)v38;
          goto LABEL_12;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_12:
      v37 = (void *)Strong;
      *(_BYTE *)(Strong + v27) = 0;

    }
  }
}

uint64_t sub_1002C8A14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v38 = a3;
  v33 = a1;
  v34 = a2;
  v39 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v33 - v17;
  v19 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v35 = static OS_dispatch_queue.main.getter(v19);
  static DispatchTime.now()();
  + infix(_:_:)(v15, 1.0);
  v36 = *(void (**)(char *, uint64_t))(v13 + 8);
  v36(v15, v12);
  v20 = swift_allocObject(&unk_1005FE2D0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v33);
  sub_10002B1E8(v34, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = (v21 + 24) & ~v21;
  v23 = v22 + v10;
  v24 = swift_allocObject(&unk_1005FE370, v22 + v10 + 1, v21 | 7);
  *(_QWORD *)(v24 + 16) = v20;
  sub_10001F580((uint64_t)v11, v24 + v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListHighlightTarget.TargetItem);
  *(_BYTE *)(v24 + v23) = v38;
  aBlock[4] = sub_1002DB0E0;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005FE388;
  v25 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_1000175C8((unint64_t *)&qword_1006447D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_10002A750((uint64_t *)&unk_100640F40);
  v29 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v39, v27);
  v31 = (void *)v35;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v7, v4, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v30);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  return ((uint64_t (*)(char *, uint64_t))v36)(v18, v37);
}

void sub_1002C8D50(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  char *v28;
  NSObject *v29;
  void *v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  char v37[24];

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = (void *)Strong;
    HIDWORD(v36) = a3;
    v12 = sub_1002C26B0();
    v13 = *(Class *)((char *)&v12->isa + qword_10065D8E0);
    if (v13)
    {
      v14 = v12;
      v15 = v13;
      v16 = sub_10006B3DC();
      v18 = v17;
      v20 = v19;
      sub_1000701C4(a2, v16, v17, v19, v21 & 1);
      v23 = v22;

      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v16);
      if (v23)
      {
        v24 = type metadata accessor for TTRIRemindersListReminderCell(0);
        v25 = swift_dynamicCastClass(v23, v24);
        if (v25)
        {
          v26 = (void *)v25;
          if ((TTRIRemindersListReminderCell.isViewModelValid.getter(v25) & 1) != 0)
            UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v26);
        }

      }
      v27 = sub_1002C26B0();
      v28 = *(char **)((char *)&v27->isa + qword_10065D8E0);
      if (v28)
      {
        v29 = v27;
        v30 = *(void **)&v28[qword_100645F00];
        v31 = v28;
        v32 = v30;
        v33 = NSNotFound.getter();
        v34 = NSNotFound.getter();
        IndexPath.init(row:section:)(v33, v34);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        objc_msgSend(v32, "highlightRowAtIndexPath:animated:scrollPosition:", isa, BYTE4(v36) & 1, 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1002C8F5C()
{
  NSObject *v0;
  void *v1;
  NSObject *v2;
  id v3;

  v0 = sub_1002C26B0();
  v1 = *(Class *)((char *)&v0->isa + qword_10065D8E0);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    sub_1000FAA08(0, 0, 0, 0, (uint64_t)v3, (void (*)(uint64_t))sub_1002DC208);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002C8FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  id v15;
  _QWORD v16[2];

  v16[1] = a2;
  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    v16[0] = a1;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      sub_10002B1E8(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v13 = sub_1002C26B0();
      sub_10002B1E8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      v14 = *(Class *)((char *)&v13->isa + qword_10065D8E0);
      if (!v14)
        break;
      v15 = v14;
      sub_100313D0C((uint64_t)v5, 0, 5);

      sub_1000073A0((uint64_t)v5, (uint64_t *)&unk_100640EB0);
      sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v11 += v12;
      if (!--v10)
      {
        swift_bridgeObjectRelease(v16[0]);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1002C9170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v0 = type metadata accessor for Logger(0);
  v1 = __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v4);
  v7 = (char *)&loc_1002C9280 + *((int *)qword_1002C96A8 + swift_getEnumCaseMultiPayload(v6, v3));
  __asm { BR              X10 }
}

id sub_1002C9290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  NSString v9;

  sub_10001F544(v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  v3 = type metadata accessor for TTRIRemindersListReminderCell(0);
  v4 = *(void **)(v1 + qword_10065D8D8);
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1002C9578);
  }
  v5 = v3;
  v6 = v4;
  v7 = (void *)((uint64_t (*)(uint64_t, uint64_t))UITableView.dequeueReusableCell<A>(_:))(v5, v5);

  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setTtrFocusGroupIdentifier:", v9);

  sub_1002D7B7C((uint64_t)v8, v0);
  return v8;
}

void sub_1002C9588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v4 = sub_100012DC4(v2, (uint64_t)qword_100654350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v3, v4, v2);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v6 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"Unexpected item type for cellForItem", 36, 2uLL, v5, v6);
  __break(1u);
  JUMPOUT(0x1002C9620);
}

uint64_t sub_1002C96DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    swift_unknownObjectRetain(v4);

    ObjectType = swift_getObjectType(v4, v6);
    v8 = (uint64_t *)TTRITipKitSignalContext.RemindersList.keyboardShortcut.unsafeMutableAddressor();
    v9 = *v8;
    v10 = v8[1];
    v11 = *(_QWORD *)(v5 + 8);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 808);
    swift_bridgeObjectRetain(v10);
    v12(v9, v10, ObjectType, v11);
    swift_bridgeObjectRelease(v10);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void *sub_1002C9798(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = (void *)Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    swift_unknownObjectRetain(v4);

    ObjectType = swift_getObjectType(v4, v6);
    v3 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 8) + 160))(ObjectType);
    swift_unknownObjectRelease(v4);
  }
  return v3;
}

uint64_t sub_1002C9828(uint64_t a1, void *a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, char *, uint64_t, uint64_t);
  char v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  id v83;
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  id v103;
  __int128 v104;
  __int128 v105;
  uint64_t (**v106)(uint64_t);
  char v107[24];
  char v108[24];
  char v109[24];
  char v110[32];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v102 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v101 = (char *)&v98 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v98 - v11;
  v13 = sub_10002A750((uint64_t *)&unk_100646F40);
  __chkstk_darwin(v13);
  v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v98 - v17;
  v19 = type metadata accessor for TTRIRemindersListReminderCell(0);
  v20 = swift_dynamicCastClass(a2, v19);
  if (v20)
  {
    v22 = v20;
    v99 = v15;
    v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter], v21);
    v25 = *(_QWORD *)(v23 + 8);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 424);
    v27 = a2;
    v100 = v18;
    v26(a1, ObjectType, v25);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 880))(a1, ObjectType, v25) & 1) != 0)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 776))(a1, ObjectType, v25);
    v28 = v22 + direct field offset for TTRIRemindersListReminderCell.delegate;
    swift_beginAccess(v22 + direct field offset for TTRIRemindersListReminderCell.delegate, v110, 1, 0);
    *(_QWORD *)(v28 + 8) = &off_1005FDDC8;
    v103 = v3;
    swift_unknownObjectWeakAssign(v28, v3);
    v29 = (uint64_t *)(v22 + direct field offset for TTRIRemindersListReminderCell.titleModule);
    swift_beginAccess(v22 + direct field offset for TTRIRemindersListReminderCell.titleModule, v109, 0, 0);
    v31 = *v29;
    v32 = (uint64_t)v101;
    if (*v29)
    {
      v33 = v29[1];
      v34 = swift_getObjectType(v31, v30);
      v35 = swift_unknownObjectRetain(v31);
      TTRIReminderCellTitleModuleInterface.item.getter(v34, v33, v35);
      swift_unknownObjectRelease(v31);
    }
    else
    {
      v44 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v12, 1, 1, v44);
    }
    v45 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v25 + 224);
    v46 = v45(a1, v12, ObjectType, v25);
    sub_1000073A0((uint64_t)v12, (uint64_t *)&unk_100640EB0);
    if ((v46 & 1) == 0)
    {
LABEL_27:
      v55 = (_QWORD *)(v22 + direct field offset for TTRIRemindersListReminderCell.notesModule);
      swift_beginAccess(v22 + direct field offset for TTRIRemindersListReminderCell.notesModule, v108, 0, 0);
      v57 = *v55;
      if (*v55)
      {
        v58 = v55[1];
        v59 = swift_getObjectType(*v55, v56);
        v60 = swift_unknownObjectRetain(v57);
        TTRIReminderCellNotesModuleInterface.item.getter(v59, v58, v60);
        swift_unknownObjectRelease(v57);
      }
      else
      {
        v61 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v32, 1, 1, v61);
      }
      v62 = v45(a1, (char *)v32, ObjectType, v25);
      sub_1000073A0(v32, (uint64_t *)&unk_100640EB0);
      if ((v62 & 1) == 0)
      {
LABEL_44:
        v71 = (_QWORD *)(v22 + direct field offset for TTRIRemindersListReminderCell.hashtagModule);
        swift_beginAccess(v22 + direct field offset for TTRIRemindersListReminderCell.hashtagModule, v107, 0, 0);
        v73 = *v71;
        if (*v71)
        {
          v74 = v71[1];
          v75 = swift_getObjectType(*v71, v72);
          v76 = *(void (**)(uint64_t, uint64_t, __n128))(v74 + 8);
          v77 = swift_unknownObjectRetain(v73);
          v78 = v74;
          v79 = (uint64_t)v102;
          v76(v75, v78, v77);
          swift_unknownObjectRelease(v73);
          v80 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
        }
        else
        {
          v81 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          v79 = (uint64_t)v102;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v102, 1, 1, v81);
        }
        v82 = v45(a1, (char *)v79, ObjectType, v25);
        sub_1000073A0(v79, (uint64_t *)&unk_100640EB0);
        v83 = v103;
        if ((v82 & 1) == 0)
          goto LABEL_61;
        v84 = objc_msgSend(v103, "parentViewController");
        if (v84)
        {
          v86 = v84;
          v87 = swift_getObjectType(v84, v85);
          v88 = swift_conformsToProtocol2(v87, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
          if (v88)
            v89 = v88;
          else
            v89 = 0;
          if (v88)
            v90 = v86;
          else
            v90 = 0;
          if (v90)
          {
            v91 = *(_QWORD *)(v89 + 16);
LABEL_60:
            (*(void (**)(__int128 *__return_ptr, uint64_t, void *, uint64_t, id, uint64_t, uint64_t))(v25 + 248))(&v104, a1, v90, v91, v83, ObjectType, v25);
            swift_unknownObjectRelease(v90);
            TTRIRemindersListReminderCell.hashtagModule.setter(&v104);
LABEL_61:
            v92 = (uint64_t)v100;
            v93 = (uint64_t)v99;
            sub_10000735C((uint64_t)v100, (uint64_t)v99, (uint64_t *)&unk_100646F40);
            v94 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v93, 1, v94) == 1)
            {
              sub_1000073A0(v93, (uint64_t *)&unk_100646F40);
              v104 = 0u;
              v105 = 0u;
              v106 = 0;
            }
            else
            {
              *((_QWORD *)&v105 + 1) = v94;
              v106 = protocol witness table for TTRRemindersListViewModel.Reminder;
              v95 = sub_100028D70(&v104);
              sub_10001F580(v93, (uint64_t)v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Reminder);
            }
            v96 = TTRIRemindersListReminderCell.viewModel.setter(&v104);
            if ((TTRIRemindersListReminderCell.isViewModelValid.getter(v96) & 1) != 0)
              TTRRemindersListItemStateTracker.fullfil(_:of:)(0, a1);
            sub_1000073A0(v92, (uint64_t *)&unk_100646F40);
            return v22;
          }

        }
        else
        {
          v90 = 0;
        }
        v91 = 0;
        goto LABEL_60;
      }
      v63 = objc_msgSend(v103, "parentViewController");
      if (v63)
      {
        v65 = v63;
        v66 = swift_getObjectType(v63, v64);
        v67 = swift_conformsToProtocol2(v66, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
        if (v67)
          v68 = v67;
        else
          v68 = 0;
        if (v67)
          v69 = v65;
        else
          v69 = 0;
        if (v69)
        {
          v70 = *(_QWORD *)(v68 + 24);
LABEL_43:
          (*(void (**)(__int128 *__return_ptr, uint64_t, void *, uint64_t, id, uint64_t, uint64_t))(v25 + 240))(&v104, a1, v69, v70, v103, ObjectType, v25);
          swift_unknownObjectRelease(v69);
          TTRIRemindersListReminderCell.notesModule.setter(&v104);
          goto LABEL_44;
        }

      }
      else
      {
        v69 = 0;
      }
      v70 = 0;
      goto LABEL_43;
    }
    v47 = objc_msgSend(v103, "parentViewController");
    if (v47)
    {
      v49 = v47;
      v50 = swift_getObjectType(v47, v48);
      v51 = swift_conformsToProtocol2(v50, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
      if (v51)
        v52 = v51;
      else
        v52 = 0;
      if (v51)
        v53 = v49;
      else
        v53 = 0;
      if (v53)
      {
        v54 = *(_QWORD *)(v52 + 32);
LABEL_26:
        (*(void (**)(__int128 *__return_ptr, uint64_t, void *, uint64_t, id, uint64_t, uint64_t))(v25 + 232))(&v104, a1, v53, v54, v103, ObjectType, v25);
        swift_unknownObjectRelease(v53);
        TTRIRemindersListReminderCell.titleModule.setter(&v104);
        goto LABEL_27;
      }

    }
    else
    {
      v53 = 0;
    }
    v54 = 0;
    goto LABEL_26;
  }
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v36 = type metadata accessor for Logger(0);
  sub_100012DC4(v36, (uint64_t)qword_100654350);
  v37 = a2;
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.fault.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(12, -1);
    v41 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v40 = 138412290;
    *(_QWORD *)&v104 = v37;
    v42 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 8, v40 + 4, v40 + 12);
    *v41 = v37;

    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to cast cell to reminderListCell {cell: %@}", v40, 0xCu);
    v43 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v41, 1, v43);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_1002CA058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;

  if ((*(_BYTE *)(v2
                 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically) & 1) == 0)
  {
    v4 = *(void **)(a1 + qword_10065D8D8);
    if (v4)
    {
      objc_msgSend(v4, "isEditing");
      sub_1003296EC();
      __asm { BR              X10 }
    }
LABEL_7:
    __break(1u);
    JUMPOUT(0x1002CA1B4);
  }
  v6 = *(void **)(a1 + qword_10065D8E0);
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = sub_10006B3DC();
  v10 = v9;
  v12 = v11;
  sub_1000701C4(a2, v8, v9, v11, v13 & 1);
  v15 = v14;

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v15, "setSelectionStyle:", 3, swift_bridgeObjectRelease(v8).n128_f64[0]);

  return 1;
}

void sub_1002CA1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = *(void **)(a1 + qword_10065D8D8);
  if (v6)
  {
    swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v5);
    objc_msgSend(v6, "isEditing");
    sub_1003296EC();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1002CA534);
}

void sub_1002CA54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;

  v5 = v3;
  v8 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(a1 + qword_10065D8D8);
  if (!v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!objc_msgSend(v12, "isEditing", v9))
    return;
  if (!*(_QWORD *)&v5[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController])
  {
LABEL_13:
    __break(1u);
    return;
  }
  sub_10002B1E8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_storeEnumTagMultiPayload(v11, v8, a3);
  swift_retain();
  sub_100038FD8((uint64_t)v11);
  sub_10001F544((uint64_t)v11, type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState);
  v13 = objc_msgSend(v5, "parentViewController", swift_release().n128_f64[0]);
  if (v13)
  {
    v15 = v13;
    ObjectType = swift_getObjectType(v13, v14);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v17 = v15;
    else
      v17 = 0;
    if (v17)
    {
      sub_1002908A0(1, 0);
      sub_100291CAC();
    }

  }
}

id sub_1002CA698(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v27;
  _BOOL8 v28;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  sub_1001AF614(a2);
  v10 = v9;
  v11 = a2 == 10 || a2 == 0;
  v28 = v11;
  v12 = swift_allocObject(&unk_1005FE2D0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v3);
  sub_10002B1E8(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 25) & ~v13;
  v15 = swift_allocObject(&unk_1005FE820, v14 + v8, v13 | 7);
  *(_QWORD *)(v15 + 16) = v12;
  *(_BYTE *)(v15 + 24) = a2;
  sub_10001F580((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  aBlock[4] = sub_1002DCD6C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002B4CE4;
  aBlock[3] = &unk_1005FE838;
  v17 = _Block_copy(aBlock);
  v18 = (void *)objc_opt_self(UIContextualAction);
  v19 = objc_msgSend(v18, "contextualActionWithStyle:title:handler:", v28, v16, v17);

  _Block_release(v17);
  swift_release();
  swift_release();
  sub_1001AF65C(a2);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v19, "setBackgroundColor:", v20);

  }
  v22 = v19;
  sub_10032B2B8(a2);
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityLabel:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  return v22;
}

uint64_t sub_1002CA8D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  a2[3] = type metadata accessor for TTRRemindersListViewModel.Item(0);
  a2[4] = &protocol witness table for TTRRemindersListViewModel.Item;
  v4 = sub_100028D70(a2);
  return sub_10002B1E8(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_1002CA930(char *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t ObjectType;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[24];

  v5 = v4;
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(void **)&a1[qword_10065D8E0];
  if (!v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = v13;
  v15 = sub_10006B3DC();
  v17 = v16;
  v19 = v18;
  sub_1000701C4(a2, v15, v16, v18, v20 & 1);
  v22 = v21;

  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v15);
  if (!v22)
    return;
  v23 = type metadata accessor for TTRIRemindersListReminderCell(0);
  v24 = swift_dynamicCastClass(v22, v23);
  if (!v24)
  {

    return;
  }
  v25 = v24;
  objc_msgSend(a1, "convertPoint:toCoordinateSpace:", v24, a3, a4);
  v27 = v26;
  v29 = v28;
  v30 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v31 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  v32 = sub_1002C0864((_QWORD *)1);
  v34 = *(void **)&a1[qword_10065D8D8];
  if (!v34)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v35 = v32;
  ObjectType = swift_getObjectType(v30, v33);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, id, uint64_t, double, double))(*(_QWORD *)(v31 + 8) + 736))(a2, v25, v35, objc_msgSend(v34, "isEditing"), ObjectType, v27, v29);
  v39 = v38;
  v41 = v40;
  swift_bridgeObjectRelease(v35);

  if (v37)
  {
    if ((v41 & 1) != 0)
    {
      sub_1002DC598(v39, 1);
      v43 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v12, 1, 1, v43);
    }
    else
    {
      sub_1002DC598(v39, 0);
      sub_10002B1E8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v42 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 0, 1, v42);
    }
    v44 = v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem;
    swift_beginAccess(v44, v46, 33, 0);
    sub_100041F2C((uint64_t)v12, v44, (uint64_t *)&unk_100640EB0);
    swift_endAccess(v46);
  }
}

void sub_1002CABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1002CAC54(a6);

  }
}

void sub_1002CAC54(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1002CACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v5 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 632))(v4, 3, v3, v2, ObjectType);
}

uint64_t sub_1002CB220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  _BYTE *v21;
  uint64_t result;
  void *v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  objc_class *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _UNKNOWN **v43;
  char *v44;
  uint64_t v45;
  id v46;
  _UNKNOWN **v47;
  char *v48;
  objc_super v49;
  objc_super v50;
  _BYTE v51[24];
  _BYTE v52[136];

  v4 = v3;
  v7 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - v14;
  v16 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter(v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v16);
  if (EnumCaseMultiPayload)
  {
    v21 = 0;
    if (EnumCaseMultiPayload != 1)
      return (uint64_t)v21;
    sub_10001F580((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (v12[v10[6]] == 1)
    {
      result = type metadata accessor for TTRIRemindersListSectionHeader(0);
      v23 = *(void **)(a1 + qword_10065D8D8);
      if (v23)
      {
        v24 = (objc_class *)result;
        v25 = v23;
        v21 = (_BYTE *)UITableView.dequeueReusableHeaderFooterView<A>(_:)(v24, v24);

        sub_10000F614((uint64_t)&v12[v10[5]], (uint64_t)v52, &qword_100649B60);
        sub_1002DC338((uint64_t)v52);
        sub_1001E2EE4((uint64_t)v52);
        sub_10002B1E8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        v26 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
        v27 = (uint64_t)&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
        swift_beginAccess(&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID], v51, 33, 0);
        sub_100041F2C((uint64_t)v9, v27, &qword_100644980);
        swift_endAccess(v51);
        v28 = a3 == 0;
        v29 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection;
        v30 = v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
        v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = v28;
        if (v28 != v30)
        {
          if (v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
            || (v50.receiver = v21, v50.super_class = v24, (objc_msgSendSuper2(&v50, "floating") & 1) != 0))
          {
            v31 = 1;
          }
          else
          {
            v31 = v21[v29];
          }
          objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator], "setHidden:", v31);
          sub_1001E3B50(0);
        }
        if ((v12[v10[7]] & 1) != 0)
        {
          v42 = v4;
          v43 = &off_1005FDDB8;
        }
        else
        {
          v42 = 0;
          v43 = 0;
        }
        v44 = &v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate];
        *((_QWORD *)v44 + 1) = v43;
        swift_unknownObjectWeakAssign(v44, v42);
        sub_1001E2198();
        swift_unknownObjectRelease(v42);
        v45 = (uint64_t)v12;
LABEL_30:
        sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        return (uint64_t)v21;
      }
      __break(1u);
      goto LABEL_33;
    }
    v41 = (uint64_t)v12;
LABEL_17:
    sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    return 0;
  }
  sub_10001F580((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v15[v10[6]] != 1)
  {
    v41 = (uint64_t)v15;
    goto LABEL_17;
  }
  result = type metadata accessor for TTRIRemindersListSectionHeader(0);
  v32 = *(void **)(a1 + qword_10065D8D8);
  if (v32)
  {
    v33 = (objc_class *)result;
    v34 = v32;
    v21 = (_BYTE *)UITableView.dequeueReusableHeaderFooterView<A>(_:)(v33, v33);

    sub_10000F614((uint64_t)&v15[v10[5]], (uint64_t)v52, &qword_100649B60);
    sub_1002DC338((uint64_t)v52);
    sub_1001E2EE4((uint64_t)v52);
    sub_10002B1E8((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v35 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v9, 0, 1, v35);
    v36 = (uint64_t)&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID];
    swift_beginAccess(&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID], v51, 33, 0);
    sub_100041F2C((uint64_t)v9, v36, &qword_100644980);
    swift_endAccess(v51);
    v37 = a3 == 0;
    v38 = OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection;
    v39 = v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection];
    v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_isForFirstSection] = v37;
    if (v37 != v39)
    {
      if (v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_separatorState] == 2
        || (v49.receiver = v21, v49.super_class = v33, (objc_msgSendSuper2(&v49, "floating") & 1) != 0))
      {
        v40 = 1;
      }
      else
      {
        v40 = v21[v38];
      }
      objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_topSeparator], "setHidden:", v40);
      sub_1001E3B50(0);
    }
    if ((v15[v10[7]] & 1) != 0)
    {
      v46 = v4;
      v47 = &off_1005FDDB8;
    }
    else
    {
      v46 = 0;
      v47 = 0;
    }
    v48 = &v21[OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_delegate];
    *((_QWORD *)v48 + 1) = v47;
    swift_unknownObjectWeakAssign(v48, v46);
    sub_1001E2198();
    swift_unknownObjectRelease(v46);
    v45 = (uint64_t)v15;
    goto LABEL_30;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1002CB750(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  Swift::String v24;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];

  v4 = v3;
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = __chkstk_darwin(v11);
  v14 = &v29[-v13 - 8];
  objc_msgSend(a2, "locationInView:", a1, v12);
  v15 = objc_msgSend(a1, "hitTest:withEvent:", 0);
  if (v15
    && (v17 = v15,
        type metadata accessor for TTRIRemindersListReminderCell(0),
        v18 = static TTRIRemindersListReminderCell.ignoreDragging(view:)(v17),
        v17,
        (v18 & 1) != 0))
  {
    v20 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v16);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 + 8) + 472))(a3, ObjectType);
    v20 = v19;
  }
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v26 = v20;
    else
      v26 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v20);
    if (!v27)
      goto LABEL_7;
  }
  else if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    v23 = *(_QWORD *)(v4
                    + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v19);
    swift_beginAccess(v23 + 24, v29, 33, 0);
    sub_1004809C4((uint64_t)v14, (uint64_t)v10);
    swift_endAccess(v29);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v24._countAndFlagsBits = 0x5F28747265736E69;
    v24._object = (void *)0xEA0000000000293ALL;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v24);
  }
  return v20;
}

void sub_1002CB930(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD v39[8];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v53 = a1;
  v3 = sub_10002A750(&qword_100654910);
  __chkstk_darwin(v3);
  v58 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v39[7] = (char *)v39 - v7;
  __chkstk_darwin(v8);
  v51 = (char *)v39 - v9;
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v41 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100654918);
  v48 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v13);
  v47 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v43 = (char *)v39 - v16;
  v17 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v17);
  v45 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v46 = (char *)v39 - v20;
  v54 = type metadata accessor for IndexPath(0);
  v50 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v39[4] = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v39[5] = (char *)v39 - v23;
  v57 = sub_10002A750((uint64_t *)&unk_100654920);
  __chkstk_darwin(v57);
  v44 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v40 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v55 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v49 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  v42 = (char *)v39 - v29;
  __chkstk_darwin(v30);
  v56 = (char *)v39 - v31;
  __chkstk_darwin(v32);
  __chkstk_darwin(v33);
  v52 = (char *)v39 - v34;
  v35 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v35);
  v37 = (char *)v39 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = a2;
  sub_1002B4DD8((uint64_t *)&unk_100646980, (uint64_t *)&unk_100654950, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)sub_1002B8CF4, (uint64_t)sub_100108E68, (uint64_t)&unk_1006469A8, (uint64_t)sub_10010B274, (uint64_t)&unk_1006548F0, (uint64_t)v37);
  v38 = (char *)&loc_1002CBDBC + dword_1002CE15C[swift_getEnumCaseMultiPayload(v37, v35)];
  __asm { BR              X10 }
}

uint64_t sub_1002CBDCC()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t i;
  unint64_t v44;
  uint64_t v45;
  void **v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  uint64_t v52;

  v4 = *(_QWORD *)(v2 + *(int *)(sub_10002A750((uint64_t *)&unk_1006469A8) + 48));
  v5 = *(_QWORD *)(v3 - 416);
  sub_10001F580(v2, v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v6 = *(_QWORD *)(v3 - 272);
  v7 = sub_1002B8CF4(1);
  v9 = v7;
  v10 = v7[2];
  if (v10)
  {
    v11 = v4;
    v12 = *(_QWORD *)(v3 - 352);
    if (v10 == 1)
    {
      if (qword_10063D5F0 != -1)
        swift_once(&qword_10063D5F0, sub_1002C2580);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_100012DC4(v13, (uint64_t)qword_100654350);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.fault.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unexpected: handling single item move in treeView(_:performDropWith:)", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

    }
    v18 = *(_QWORD *)(v12 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v19 = *(_QWORD *)(v12 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(v18, v8);
    v21 = *(_QWORD *)(v3 - 424);
    sub_10002B1E8(v5, v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 56))(v21, 0, 1, *(_QWORD *)(v3 - 432));
    (*(void (**)(_QWORD *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(v19 + 8) + 520))(v9, v21, v11, 0, 0, ObjectType);
    swift_bridgeObjectRelease(v9);
    sub_1000073A0(v21, (uint64_t *)&unk_100640EB0);
    return sub_10001F544(v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    v23 = objc_msgSend(*(id *)(v6 + qword_100653C78), "items", swift_bridgeObjectRelease(v7).n128_f64[0]);
    v24 = sub_10002A750(&qword_100641010);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    swift_retain();
    v26 = sub_1002D600C(v25, v6);
    swift_bridgeObjectRelease(v25);
    swift_release();
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      *(_QWORD *)(v3 - 280) = v4;
      *(_QWORD *)(v3 - 160) = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v27);
      v28 = *(_QWORD *)(v3 - 368);
      v29 = v26 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v30 = *(_QWORD *)(v28 + 72);
      do
      {
        sub_10000735C(v29, (uint64_t)v1, &qword_100654918);
        v31 = *v1;
        v32 = sub_1000073A0((uint64_t)v1, &qword_100654918);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
        v33 = *(_QWORD *)(*(_QWORD *)(v3 - 160) + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
        v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
        specialized ContiguousArray._endMutation()(v34);
        v29 += v30;
        --v27;
      }
      while (v27);
      v35 = *(_QWORD **)(v3 - 160);
      swift_bridgeObjectRelease(v26);
      v5 = *(_QWORD *)(v3 - 416);
      v4 = *(_QWORD *)(v3 - 280);
    }
    else
    {
      swift_bridgeObjectRelease(v26);
      v35 = _swiftEmptyArrayStorage;
    }
    v37 = *(_QWORD *)(v3 - 352);
    v38 = *(_QWORD *)(v37 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    v39 = swift_getObjectType(*(_QWORD *)(v37 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v36);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v38 + 8) + 536))(v35, v39);
    swift_bridgeObjectRelease(v35);
    v40 = *(_QWORD *)(v3 - 136);
    v41 = *(_QWORD *)(v3 - 128);
    sub_10001413C((_QWORD *)(v3 - 160), v40);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 48))(v5, v4, v40, v41);
    i = 0;
    v44 = *(_QWORD *)(v42 + 16);
    v45 = *(_QWORD *)(v3 - 440);
    if (v44)
      goto LABEL_17;
LABEL_19:
    v50 = sub_10002A750((uint64_t *)&unk_100654930);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v45, 1, 1, v50);
    for (i = v44; ; ++i)
    {
      v51 = *(void ***)(v3 - 336);
      sub_10000F614(v45, (uint64_t)v51, &qword_100654910);
      v52 = sub_10002A750((uint64_t *)&unk_100654930);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52) == 1)
        break;
      v46 = v51;
      v47 = *v51;
      sub_10001F580((uint64_t)v46 + *(int *)(v52 + 48), v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1002B6F88((uint64_t)v47, v0);

      sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (i == v44)
        goto LABEL_19;
LABEL_17:
      if (i >= *(_QWORD *)(v42 + 16))
      {
        __break(1u);
        JUMPOUT(0x1002CE080);
      }
      v48 = sub_10002A750((uint64_t *)&unk_100654930);
      v49 = *(_QWORD *)(v48 - 8);
      sub_10000735C(v42+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * i, v45, (uint64_t *)&unk_100654930);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v45, 0, 1, v48);
    }
    swift_bridgeObjectRelease(v42);
    sub_10001F544(*(_QWORD *)(v3 - 416), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_100027F10((_QWORD *)(v3 - 160));
  }
}

void sub_1002CE16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD v12[12];

  v12[0] = a3;
  v12[1] = a2;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v8 = sub_10002A750((uint64_t *)&unk_1006548F0);
  __chkstk_darwin(v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v10, (uint64_t *)&unk_1006548F0);
  v11 = (char *)&loc_1002CE2A8 + *((int *)qword_1002CE738 + swift_getEnumCaseMultiPayload(v10, v8));
  __asm { BR              X10 }
}

uint64_t sub_1002CE2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(v4 + *(int *)(sub_10002A750((uint64_t *)&unk_1006469A8) + 48));
  sub_10001F580(v4, v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v8 = sub_100107718();
  v9 = (_QWORD *)(*(_QWORD *)(v5 - 176) + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  if ((v7 & 1) != 0)
  {
    v13 = v9[1];
    ObjectType = swift_getObjectType(*v9, v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 8) + 536))(v8, ObjectType);
    swift_bridgeObjectRelease(v8);
    v15 = *(_QWORD *)(v5 - 96);
    v16 = *(_QWORD *)(v5 - 88);
    sub_10001413C((_QWORD *)(v5 - 120), v15);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v1, v6, v15, v16);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100027F10((_QWORD *)(v5 - 120));
  }
  else
  {
    v10 = v9[1];
    v11 = swift_getObjectType(*v9, v7);
    sub_10002B1E8(v1, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56))(v2, 0, 1, v3);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8) + 496))(v8, v2, v6, v11);
    swift_bridgeObjectRelease(v8);
    sub_1000073A0(v2, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v12 & 1;
}

NSObject *sub_1002CE748(uint64_t a1)
{
  NSObject *result;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  id v18;
  _BYTE v19[24];

  result = sub_1002C26B0();
  v3 = *(Class *)((char *)&result->isa + qword_10065D8E0);
  if (v3)
  {
    v4 = result;
    v5 = v3;
    v6 = sub_10006B3DC();
    v8 = v7;
    v10 = v9;
    sub_1000701C4(a1, v6, v7, v9, v11 & 1);
    v13 = v12;

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if (v13)
    {
      v14 = type metadata accessor for TTRIRemindersListReminderCell(0);
      v15 = swift_dynamicCastClass(v13, v14);
      if (v15)
      {
        v16 = (void **)(v15 + direct field offset for TTRIRemindersListReminderCell.customAccessibilityElement);
        swift_beginAccess(v15 + direct field offset for TTRIRemindersListReminderCell.customAccessibilityElement, v19, 0, 0);
        v17 = *v16;
        v18 = v17;

        return v17;
      }

    }
    return 0;
  }
  __break(1u);
  return result;
}

id sub_1002CE848()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t ObjectType;
  id v5;

  v1 = objc_msgSend(v0, "parentViewController");
  if (!v1)
    return 0;
  v3 = v1;
  ObjectType = swift_getObjectType(v1, v2);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
    v5 = v3;
  else
    v5 = 0;
  if (v5)
    v5 = sub_10028EF28();

  return v5;
}

uint64_t sub_1002CE8B4(uint64_t a1, char a2)
{
  return sub_1002D98CC(a2);
}

uint64_t sub_1002CE994(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];
  uint64_t v30;

  v6 = *a1;
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = type metadata accessor for TTRIRemindersListReminderCell(0);
    v11 = swift_dynamicCastClass(v6, v10);
    v12 = *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker];
    if (v11)
    {
      v13 = v6;
      swift_retain();
      sub_100256030(a3, a4);
      v14 = swift_release();
      v30 = TTRIRemindersListReminderCell.inputViewForPencilInput.getter(v14);
      v15 = sub_10002A750(&qword_100654898);
      swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
      v16 = Promise.init(value:)(&v30);

    }
    else
    {
      v22 = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)(v12 + 24) = 0;
      swift_unknownObjectRelease(v22);
      v23 = type metadata accessor for PromiseError(0);
      v24 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
      v25 = swift_allocError(v23, v24, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v26, enum case for PromiseError.cancelled(_:), v23);
      v27 = sub_10002A750(&qword_100654898);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      v16 = Promise.init(error:)(v25);

    }
  }
  else
  {
    v17 = type metadata accessor for PromiseError(0);
    v18 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
    v19 = swift_allocError(v17, v18, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v20, enum case for PromiseError.cancelled(_:), v17);
    v21 = sub_10002A750(&qword_100654898);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return Promise.init(error:)(v19);
  }
  return v16;
}

uint64_t sub_1002CEBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker);
    swift_retain(v5);

    v6 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    swift_release(v5);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1002CEC34(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v36[-1] - v10;
  TTRIRemindersListReminderCell.viewModel.getter(v36, v9);
  v12 = v37;
  if (!v37)
    return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_1006547B0);
  v13 = v38;
  v14 = sub_10001413C(v36, v37);
  v15 = *(_QWORD *)(v12 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v36[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v18, v16);
  sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v12);
  sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter], v20);
  (*(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v19 + 8) + 40))(a2 & 1, v11, ObjectType);
  v22 = (char *)objc_msgSend(v3, "parentViewController");
  if (v22)
  {
    v24 = v22;
    v25 = swift_getObjectType(v22, v23);
    if (swift_conformsToProtocol2(v25, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v26 = v24;
    else
      v26 = 0;
    if (v26)
      v27 = *(id *)&v26[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];
    else
      v27 = 0;

  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v27, "impactOccurred");

  v29 = (char *)objc_msgSend(v3, "parentViewController");
  if (v29)
  {
    v31 = v29;
    v32 = swift_getObjectType(v29, v30);
    if (swift_conformsToProtocol2(v32, &protocol descriptor for TTRIShowRemindersContainerViewControllerType))
      v33 = v31;
    else
      v33 = 0;
    if (v33)
    {
      v34 = (char *)*(id *)&v33[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator];

      objc_msgSend(v34, "prepare");
      v31 = v34;
    }

  }
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002CEEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - v7;
  TTRIRemindersListReminderCell.viewModel.getter(v22, v6);
  v9 = v23;
  if (!v23)
    return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  v10 = v24;
  v11 = sub_10001413C(v22, v23);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v17, v18);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 + 8) + 48))(v8, ObjectType);
  return sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002CF04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32[-1] - v10;
  TTRIRemindersListReminderCell.viewModel.getter(v32, v9);
  v12 = v33;
  if (!v33)
    return sub_1000073A0((uint64_t)v32, (uint64_t *)&unk_1006547B0);
  v13 = v34;
  v14 = sub_10001413C(v32, v33);
  v15 = *(_QWORD *)(v12 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v32[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v18, v16);
  sub_1000073A0((uint64_t)v32, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v12);
  v19 = sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v20 = v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v22 = *(_QWORD *)(v20 + 8);
  v23 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter(v19);
  v25 = v23;
  if (v23)
  {
    v26 = objc_msgSend(v23, "string");

    v25 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = 0;
  }
  ObjectType = swift_getObjectType(v21, v24);
  (*(void (**)(char *, void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 96))(v11, v25, v28, a2, ObjectType);
  swift_bridgeObjectRelease(v28);
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002CF250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - v7;
  TTRIRemindersListReminderCell.viewModel.getter(v22, v6);
  v9 = v23;
  if (!v23)
    return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  v10 = v24;
  v11 = sub_10001413C(v22, v23);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v17, v18);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 + 8) + 120))(v8, ObjectType);
  return sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002CF3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32[-1] - v10;
  TTRIRemindersListReminderCell.viewModel.getter(v32, v9);
  v12 = v33;
  if (!v33)
    return sub_1000073A0((uint64_t)v32, (uint64_t *)&unk_1006547B0);
  v13 = v34;
  v14 = sub_10001413C(v32, v33);
  v15 = *(_QWORD *)(v12 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v32[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v18, v16);
  sub_1000073A0((uint64_t)v32, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v12);
  v19 = sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v20 = v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v22 = *(_QWORD *)(v20 + 8);
  v23 = (void *)TTRIRemindersListReminderCell.attributedTitle.getter(v19);
  v25 = v23;
  if (v23)
  {
    v26 = objc_msgSend(v23, "string");

    v25 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

  }
  else
  {
    v28 = 0;
  }
  ObjectType = swift_getObjectType(v21, v24);
  (*(void (**)(char *, void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 128))(v11, v25, v28, a2, ObjectType);
  swift_bridgeObjectRelease(v28);
  return sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1002CF5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - v7;
  TTRIRemindersListReminderCell.viewModel.getter(v22, v6);
  v9 = v23;
  if (!v23)
    return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  v10 = v24;
  v11 = sub_10001413C(v22, v23);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v17, v18);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 + 8) + 144))(v8, ObjectType);
  return sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_1002CF774(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  TTRIRemindersListReminderCell.viewModel.getter(v23, a1);
  v10 = v24;
  if (v24)
  {
    v11 = v25;
    v12 = sub_10001413C(v23, v24);
    v13 = *(_QWORD *)(v10 - 8);
    v14 = __chkstk_darwin(v12);
    v16 = (char *)&v23[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v13 + 16))(v16, v14);
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 112))(v10, v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v10);
    if (v17)
    {
      v19 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
      v20 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
      ObjectType = swift_getObjectType(v19, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 152))(v17, a3, a4, a5, ObjectType);
      swift_bridgeObjectRelease(v17);
    }
  }
  else
  {
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
  }
}

uint64_t sub_1002CF8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v27[-1] - v12;
  TTRIRemindersListReminderCell.viewModel.getter(v27, v11);
  v14 = v28;
  if (!v28)
    return sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_1006547B0);
  v15 = v29;
  v16 = sub_10001413C(v27, v28);
  v17 = *(_QWORD *)(v14 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v27[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v20, v18);
  sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v14);
  sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v22 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v21, v23);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 888))(v13, a2, a3, ObjectType);
  return sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

double sub_1002CFA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  double result;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRIRemindersListReminderCell.viewModel.getter(v25, v3);
  v6 = v26;
  if (v26)
  {
    v7 = v27;
    v8 = sub_10001413C(v25, v26);
    v9 = *(_QWORD *)(v6 - 8);
    v10 = __chkstk_darwin(v8);
    v12 = (char *)&v25[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v9 + 16))(v12, v10);
    sub_1000073A0((uint64_t)v25, (uint64_t *)&unk_1006547B0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v6);
    v13 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v14 = TTRTreeStorageItem.treeItemDescription.getter(v2, v13);
    v16 = v15;
    sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_1000073A0((uint64_t)v25, (uint64_t *)&unk_1006547B0);
    v16 = 0xEC0000006C6C6563;
    v14 = 0x206E776F6E6B6E75;
  }
  sub_100255E4C(v14, v16);
  swift_bridgeObjectRelease(v16);
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100012DC4(v17, (uint64_t)qword_100654350);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "TTRIRemindersListViewController: Cancel any hover detection once scribbling begins, before the cells is actually edited", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilHoverCleanupAction);
  if (*(_QWORD *)(v22 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(_QWORD *)(v22 + 56) = 0;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1002CFCF4()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double result;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v0 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v17[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRIRemindersListReminderCell.viewModel.getter(v17, v1);
  v4 = v18;
  if (v18)
  {
    v5 = v19;
    v6 = sub_10001413C(v17, v18);
    v7 = *(_QWORD *)(v4 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v7 + 16))(v10, v8);
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006547B0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
    v11 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v12 = TTRTreeStorageItem.treeItemDescription.getter(v0, v11);
    v14 = v13;
    sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_1006547B0);
    v14 = 0xEC0000006C6C6563;
    v12 = 0x206E776F6E6B6E75;
  }
  sub_100256510(v12, v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

uint64_t sub_1002CFE9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22[-1] - v7;
  TTRIRemindersListReminderCell.viewModel.getter(v22, v6);
  v9 = v23;
  if (!v23)
    return sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  v10 = v24;
  v11 = sub_10001413C(v22, v23);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_1000073A0((uint64_t)v22, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v17, v18);
  (*(void (**)(char *, Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *)(Swift::OpaquePointer), _QWORD, uint64_t))(*(_QWORD *)(v16 + 8) + 80))(v8, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, ObjectType);
  return sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

id sub_1002D0038()
{
  NSObject *v0;
  id result;
  id v2;
  NSObject *v3;

  v0 = sub_1002C26B0();
  result = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (result)
  {
    v2 = objc_msgSend(result, "isEditing");

    if (!(_DWORD)v2)
      return v2;
    v3 = sub_1002C26B0();
    result = *(Class *)((char *)&v3->isa + qword_10065D8D8);
    if (result)
    {
      objc_msgSend(result, "setEditing:animated:", 0, 1);

      return v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D00C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v23[-1] - v7;
  TTRIRemindersListReminderCell.viewModel.getter(v23, v6);
  v9 = v24;
  if (v24)
  {
    v10 = v25;
    v11 = sub_10001413C(v23, v24);
    v12 = *(_QWORD *)(v9 - 8);
    v13 = __chkstk_darwin(v11);
    v15 = (char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v15, v13);
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
    sub_10001F580((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(v17, v18);
    v20 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 + 8) + 920))(v8, ObjectType);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
    return 0;
  }
  return v20;
}

uint64_t sub_1002D0268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  char v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10002A750((uint64_t *)&unk_100640EB0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  if (!a1)
    goto LABEL_5;
  TTRIRemindersListReminderCell.viewModel.getter(v23, v4);
  v9 = v24;
  if (!v24)
  {
    sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
LABEL_5:
    v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
    goto LABEL_6;
  }
  v10 = v25;
  v11 = sub_10001413C(v23, v24);
  v12 = *(_QWORD *)(v9 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_1000073A0((uint64_t)v23, (uint64_t *)&unk_1006547B0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v9);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
LABEL_6:
  ObjectType = swift_getObjectType(v7, v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 + 8) + 928))(v6, ObjectType);
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  return v20 & 1;
}

uint64_t sub_1002D0454()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100521130;
  *(_QWORD *)(v1 + 32) = sub_1002C5A3C();
  *(_QWORD *)(v1 + 40) = sub_1002C5C00();
  v2 = sub_1002C5DC4();
  *(_QWORD *)(v1 + 48) = v2;
  specialized Array._endMutation()(v2);
  return v1;
}

uint64_t sub_1002D04C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 288))(ObjectType);
}

id sub_1002D0514()
{
  NSObject *v0;
  id result;
  id v2;

  v0 = sub_1002C26B0();
  result = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (result)
  {
    v2 = objc_msgSend(result, "hasActiveDrag");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D0560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v3 = sub_10002A750(&qword_100644980);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListSectionHeader_sectionID;
  swift_beginAccess(v10, v22, 0, 0);
  sub_10000735C(v10, (uint64_t)v5, &qword_100644980);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1000073A0((uint64_t)v5, &qword_100644980);
  sub_10001F580((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v13 = *(_QWORD *)(v12 + 48);
  v14 = *(_QWORD *)(v12 + 56);
  ObjectType = swift_getObjectType(v13, v15);
  v21 = v13;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
  v19 = v18;
  v20 = swift_getObjectType(v17, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 656))(v9, v20, v19);
  swift_unknownObjectRelease(v17);
  return sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionID);
}

uint64_t sub_1002D06EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
  v7 = objc_msgSend(v3, "parentViewController");
  v9 = v7;
  if (v7)
  {
    ObjectType = swift_getObjectType(v7, v8);
    v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
    if (v11)
      v12 = v11;
    else
      v12 = 0;
    if (v11)
      v13 = v9;
    else
      v13 = 0;
    if (v13)
    {
      v9 = *(void **)(v12 + 8);
    }
    else
    {

      v9 = 0;
    }
  }
  else
  {
    v13 = 0;
  }
  v14 = swift_getObjectType(v5, v8);
  (*(void (**)(uint64_t, void *, void *, char *, uint64_t))(*(_QWORD *)(v6 + 8) + 256))(a3, v13, v9, v3, v14);
  return swift_unknownObjectRelease(v13);
}

uint64_t sub_1002D07C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t ObjectType;

  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 224))(a3, a4, ObjectType) & 1;
}

uint64_t sub_1002D0824()
{
  return sub_1000175C8(&qword_1006544A0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&unk_100520F20);
}

uint64_t sub_1002D0850(uint64_t a1)
{
  uint64_t result;

  result = sub_1000175C8(&qword_100654580, type metadata accessor for TTRIRemindersListContentViewController, (uint64_t)&unk_10052D1D8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002D088C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D08B0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, __n128), uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void *v91;
  _BYTE *v92;
  __n128 v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t result;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, _QWORD, __n128);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137[4];

  v8 = v7;
  v124 = a7;
  v130 = a6;
  v122 = a5;
  v131 = a3;
  v132 = a2;
  v117 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v135 = *(_QWORD *)(v117 - 8);
  v11 = *(_QWORD *)(v135 + 64);
  __chkstk_darwin(v117);
  v125 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v134 = (uint64_t)&v117 - v13;
  v14 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v14);
  v16 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_1006547E8);
  v126 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002A750(&qword_1006547F0);
  v119 = *(_QWORD *)(v20 - 8);
  v120 = v20;
  __chkstk_darwin(v20);
  v133 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v7 + 24);
  v127 = v11;
  v121 = a4;
  if (v22 && *(_BYTE *)(v22 + 24) == 1)
  {
    v23 = qword_10063D740;
    swift_retain();
    if (v23 != -1)
      swift_once(&qword_10063D740, sub_1003E8B70);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100012DC4(v24, (uint64_t)qword_100659AD8);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = v11;
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "scrollWithCompensationTo: cancel existing treeViewDidEndScrollingAnimationCancellable", v29, 2u);
      v30 = v29;
      v11 = v28;
      swift_slowDealloc(v30, -1, -1);
    }

    if (*(_BYTE *)(v22 + 24) == 1)
    {
      *(_BYTE *)(v22 + 24) = 0;
      if (*(_QWORD *)(v22 + 16))
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      v31 = type metadata accessor for PromiseError(0);
      v32 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
      v33 = swift_allocError(v31, v32, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v34, enum case for PromiseError.cancelled(_:), v31);
      DeferredPromise.reject(_:)(v33);
      swift_errorRelease(v33);
      v11 = v127;
    }
    swift_release();
  }
  v35 = type metadata accessor for ScrollWithCompensationSession();
  v36 = swift_allocObject(v35, 40, 7);
  *(_QWORD *)(v36 + 16) = 0;
  *(_WORD *)(v36 + 24) = 1;
  v37 = sub_10002A750((uint64_t *)&unk_1006547F8);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  *(_QWORD *)(v36 + 32) = DeferredPromise.init()();
  *(_QWORD *)(v8 + 24) = v36;
  swift_retain();
  swift_release();
  v38 = swift_allocObject(&unk_1005FE438, 17, 7);
  *(_BYTE *)(v38 + 16) = 0;
  v123 = (_BYTE *)(v38 + 16);
  v128 = swift_allocObject(&unk_1005FE460, 24, 7);
  *(_QWORD *)(v128 + 16) = 0;
  v137[0] = *(id *)(v8 + 16);
  swift_retain();
  v129 = v38;
  swift_retain();
  v39 = sub_10002A750(&qword_100646F60);
  v40 = sub_100023FEC(&qword_100646F80, &qword_100646F60, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Publisher.drop(while:)(sub_1002DB1E0, v38, v39, v40);
  swift_release();
  swift_release();
  v137[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v41 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v16, 1, 1, v41);
  v42 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v43 = sub_100023FEC((unint64_t *)&unk_100654808, &qword_1006547E8, (uint64_t)&protocol conformance descriptor for Publishers.DropWhile<A>);
  v44 = sub_1000A2B9C();
  Publisher.receive<A>(on:options:)(v137, v16, v17, v42, v43, v44);
  sub_1000073A0((uint64_t)v16, &qword_1006547E0);

  (*(void (**)(char *, uint64_t))(v126 + 8))(v19, v17);
  v45 = swift_allocObject(&unk_1005FE488, 24, 7);
  v126 = v8;
  swift_weakInit(v45 + 16, v8);
  v46 = v134;
  sub_10002B1E8(a1, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v47 = *(unsigned __int8 *)(v135 + 80);
  v48 = (v47 + 48) & ~v47;
  v118 = v47 | 7;
  v49 = (v48 + v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v135 = a1;
  v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  v51 = (_QWORD *)swift_allocObject(&unk_1005FE5A0, v50 + 16, v47 | 7);
  v51[2] = v36;
  v51[3] = v45;
  v52 = v122;
  v51[4] = v121;
  v51[5] = v52;
  sub_10001F580(v46, (uint64_t)v51 + v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v53 = (char *)v51 + ((v48 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v54 = v128;
  *(_QWORD *)v53 = v129;
  v53[8] = v130 & 1;
  *(_QWORD *)((char *)v51 + v49) = v54;
  v55 = (_QWORD *)((char *)v51 + v50);
  v56 = v131;
  *v55 = v132;
  v55[1] = v56;
  v57 = sub_100023FEC(&qword_100654818, &qword_1006547F0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v58 = (char *)v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v59 = v120;
  v60 = v57;
  v61 = v133;
  v62 = Publisher<>.sink(receiveValue:)(sub_1002DB210, v51, v120, v60);
  v63 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v119 + 8))(v61, v59, v63);
  *(_QWORD *)(v36 + 16) = v62;
  v122 = v62;
  swift_retain();
  swift_release();
  v64 = v134;
  sub_10002B1E8(v135, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v65 = (v47 + 16) & ~v47;
  v66 = (v127 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  v133 = (char *)(v66 + 8);
  v67 = v118;
  v68 = swift_allocObject(&unk_1005FE5C8, v66 + 8, v118);
  sub_10001F580(v64, v68 + v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v68 + v66) = v58;
  v69 = swift_retain();
  v70 = (void *)zalgo.getter(v69);
  dispatch thunk of Promise.then<A>(on:closure:)(v70, sub_1002DBC80, v68, &type metadata for Any[8]);
  swift_release();

  v71 = v134;
  sub_10002B1E8(v135, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v72 = swift_allocObject(&unk_1005FE5F0, v66 + 8, v67);
  sub_10001F580(v71, v72 + v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v72 + v66) = v58;
  v73 = swift_retain();
  v74 = (void *)zalgo.getter(v73);
  dispatch thunk of Promise.error(on:closure:)(v74, sub_1002DB278, v72);
  swift_release();

  v75 = v135;
  swift_release();
  sub_10002B1E8(v75, v71, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v76 = swift_allocObject(&unk_1005FE618, v133, v67);
  sub_10001F580(v71, v76 + v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v76 + v66) = v58;
  v133 = v58;
  v77 = swift_retain();
  v78 = (void *)zalgo.getter(v77);
  v79 = dispatch thunk of Promise.cancelled(on:closure:)(v78, sub_1002DB280, v76);
  swift_release();

  swift_release();
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v80 = type metadata accessor for Logger(0);
  sub_100012DC4(v80, (uint64_t)qword_100659AD8);
  v81 = v125;
  v82 = sub_10002B1E8(v75, v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v83 = Logger.logObject.getter(v82);
  v84 = static os_log_type_t.default.getter(v83);
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc(12, -1);
    v86 = (void *)swift_slowAlloc(32, -1);
    v137[0] = v86;
    *(_DWORD *)v85 = 136315138;
    v87 = v134;
    sub_10002B1E8(v81, v134, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v88 = String.init<A>(describing:)(v87, v117);
    v90 = v89;
    v136 = sub_100027E40(v88, v89, (uint64_t *)v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v136, v137, v85 + 4, v85 + 12);
    swift_bridgeObjectRelease(v90);
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "scrollWithCompensationTo: Performing initial scroll {item: %s}", v85, 0xCu);
    swift_arrayDestroy(v86, 1, &type metadata for Any[8]);
    v91 = v86;
    v75 = v135;
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v85, -1, -1);
  }
  else
  {
    sub_10001F544(v81, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  v92 = v123;
  v93 = swift_beginAccess(v123, v137, 1, 0);
  *v92 = 1;
  v94 = v132(v75, v130 & 1, v93);
  *v92 = 0;
  if ((v94 & 1) == 0)
  {
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v97 = 0;
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "scrollWithCompensationTo: no animation after scroll", v97, 2u);
      swift_slowDealloc(v97, -1, -1);
    }

    v98 = swift_retain();
    PassthroughSubject.send(_:)(v98);
    swift_release();
  }
  v99 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v100 = swift_allocObject(v99, 48, 7);
  *(_OWORD *)(v100 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v100 + 32) = v79;
  v101 = swift_retain();
  result = DeferredPromise.promise.getter(v101);
  if (result)
  {
    v103 = result;
    v104 = sub_10002A750(&qword_100654820);
    *(_QWORD *)(v100 + 40) = v103;
    v136 = v100;
    specialized Array._endMutation()(v104);
    v105 = v136;
    v106 = sub_10002A750(&qword_100654828);
    v107 = sub_100023FEC(&qword_100654830, &qword_100654828, (uint64_t)&protocol conformance descriptor for [A]);
    static Promise.all<A>(_:)(&v136, v106, v107);
    swift_bridgeObjectRelease(v105);
    v109 = (void *)zalgo.getter(v108);
    v110 = sub_10002A750(&qword_100654850);
    dispatch thunk of Promise.then<A>(on:closure:)(v109, sub_1002D5FDC, 0, v110);
    swift_release();

    v111 = v133;
    v112 = swift_retain();
    v113 = (void *)zalgo.getter(v112);
    v114 = dispatch thunk of Promise.always(on:closure:)(v113, sub_1002DB284, v111);
    swift_release();
    swift_release();

    result = DeferredPromise.promise.getter(v115);
    if (result)
    {
      v116 = (void *)zalgo.getter(result);
      dispatch thunk of Promise.then<A>(on:closure:)(v116, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, (char *)&type metadata for () + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return v114;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D14D4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, __n128), uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _BYTE *v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t result;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  int v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, _QWORD, __n128);
  uint64_t v134;
  uint64_t v135;
  id v136[4];

  v8 = v7;
  v124 = a7;
  v131 = a6;
  v122 = a5;
  v132 = a3;
  v133 = a2;
  v126 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v118 = *(_QWORD *)(v126 - 8);
  v11 = *(_QWORD *)(v118 + 64);
  __chkstk_darwin(v126);
  v125 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v127 = (uint64_t)&v116 - v13;
  v14 = sub_10002A750(&qword_1006547E0);
  __chkstk_darwin(v14);
  v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_1006547E8);
  v117 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10002A750(&qword_1006547F0);
  v119 = *(_QWORD *)(v20 - 8);
  v120 = v20;
  __chkstk_darwin(v20);
  v130 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v7 + 24);
  v134 = a1;
  v121 = a4;
  if (v22 && *(_BYTE *)(v22 + 24) == 1)
  {
    v23 = qword_10063D740;
    swift_retain();
    if (v23 != -1)
      swift_once(&qword_10063D740, sub_1003E8B70);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100012DC4(v24, (uint64_t)qword_100659AD8);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = v11;
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "scrollWithCompensationTo: cancel existing treeViewDidEndScrollingAnimationCancellable", v29, 2u);
      v30 = v29;
      v11 = v28;
      swift_slowDealloc(v30, -1, -1);
    }

    if (*(_BYTE *)(v22 + 24) == 1)
    {
      v31 = v11;
      *(_BYTE *)(v22 + 24) = 0;
      if (*(_QWORD *)(v22 + 16))
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      v32 = type metadata accessor for PromiseError(0);
      v33 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
      v34 = swift_allocError(v32, v33, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v35, enum case for PromiseError.cancelled(_:), v32);
      DeferredPromise.reject(_:)(v34);
      swift_errorRelease(v34);
      v11 = v31;
    }
    swift_release();
    a1 = v134;
  }
  v116 = v11;
  v36 = type metadata accessor for ScrollWithCompensationSession();
  v37 = swift_allocObject(v36, 40, 7);
  *(_QWORD *)(v37 + 16) = 0;
  *(_WORD *)(v37 + 24) = 1;
  v38 = sub_10002A750((uint64_t *)&unk_1006547F8);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  *(_QWORD *)(v37 + 32) = DeferredPromise.init()();
  *(_QWORD *)(v8 + 24) = v37;
  swift_retain();
  swift_release();
  v39 = swift_allocObject(&unk_1005FE438, 17, 7);
  *(_BYTE *)(v39 + 16) = 0;
  v123 = (_BYTE *)(v39 + 16);
  v128 = swift_allocObject(&unk_1005FE460, 24, 7);
  *(_QWORD *)(v128 + 16) = 0;
  v136[0] = *(id *)(v8 + 16);
  swift_retain();
  v129 = v39;
  swift_retain();
  v40 = sub_10002A750(&qword_100646F60);
  v41 = sub_100023FEC(&qword_100646F80, &qword_100646F60, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Publisher.drop(while:)(sub_1002DB1E0, v39, v40, v41);
  swift_release();
  swift_release();
  v136[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v42 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v16, 1, 1, v42);
  v43 = sub_100005ED8(0, (unint64_t *)&qword_100642D90, NSRunLoop_ptr);
  v44 = sub_100023FEC((unint64_t *)&unk_100654808, &qword_1006547E8, (uint64_t)&protocol conformance descriptor for Publishers.DropWhile<A>);
  v45 = sub_1000A2B9C();
  Publisher.receive<A>(on:options:)(v136, v16, v17, v43, v44, v45);
  sub_1000073A0((uint64_t)v16, &qword_1006547E0);

  (*(void (**)(char *, uint64_t))(v117 + 8))(v19, v17);
  v46 = swift_allocObject(&unk_1005FE488, 24, 7);
  v117 = v8;
  swift_weakInit(v46 + 16, v8);
  v47 = a1;
  v48 = v127;
  sub_10002B1E8(v47, v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v49 = *(unsigned __int8 *)(v118 + 80);
  v50 = (v49 + 48) & ~v49;
  v118 = v49 | 7;
  v51 = (v50 + v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  v53 = (_QWORD *)swift_allocObject(&unk_1005FE4B0, v52 + 16, v49 | 7);
  v53[2] = v37;
  v53[3] = v46;
  v54 = v122;
  v53[4] = v121;
  v53[5] = v54;
  sub_10001F580(v48, (uint64_t)v53 + v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v55 = (char *)v53 + ((v50 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v56 = v128;
  *(_QWORD *)v55 = v129;
  v55[8] = v131 & 1;
  *(_QWORD *)((char *)v53 + v51) = v56;
  v57 = (_QWORD *)((char *)v53 + v52);
  v58 = v132;
  *v57 = v133;
  v57[1] = v58;
  v59 = sub_100023FEC(&qword_100654818, &qword_1006547F0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v60 = v120;
  v61 = v130;
  v62 = Publisher<>.sink(receiveValue:)(sub_1002DB210, v53, v120, v59);
  v63 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v119 + 8))(v61, v60, v63);
  *(_QWORD *)(v37 + 16) = v62;
  v122 = v62;
  swift_retain();
  swift_release();
  sub_10002B1E8(v134, v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v64 = (v49 + 16) & ~v49;
  v65 = (v116 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  v66 = v118;
  v67 = swift_allocObject(&unk_1005FE4D8, v65 + 8, v118);
  sub_10001F580(v48, v67 + v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v67 + v65) = v37;
  v68 = swift_retain();
  v69 = (void *)zalgo.getter(v68);
  dispatch thunk of Promise.then<A>(on:closure:)(v69, sub_1002DB218, v67, &type metadata for Any[8]);
  swift_release();

  sub_10002B1E8(v134, v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v70 = swift_allocObject(&unk_1005FE500, v65 + 8, v66);
  sub_10001F580(v48, v70 + v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v70 + v65) = v37;
  v71 = swift_retain();
  v72 = (void *)zalgo.getter(v71);
  dispatch thunk of Promise.error(on:closure:)(v72, sub_1002DB278, v70);
  swift_release();

  v73 = v134;
  swift_release();
  sub_10002B1E8(v73, v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v74 = swift_allocObject(&unk_1005FE528, v65 + 8, v66);
  sub_10001F580(v48, v74 + v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v74 + v65) = v37;
  v130 = (char *)v37;
  v75 = swift_retain();
  v76 = (void *)zalgo.getter(v75);
  v77 = dispatch thunk of Promise.cancelled(on:closure:)(v76, sub_1002DB280, v74);
  swift_release();

  swift_release();
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v78 = type metadata accessor for Logger(0);
  sub_100012DC4(v78, (uint64_t)qword_100659AD8);
  v79 = v125;
  v80 = sub_10002B1E8(v73, v125, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v81 = Logger.logObject.getter(v80);
  v82 = static os_log_type_t.default.getter(v81);
  if (os_log_type_enabled(v81, v82))
  {
    v83 = (uint8_t *)swift_slowAlloc(12, -1);
    v84 = (void *)swift_slowAlloc(32, -1);
    v136[0] = v84;
    *(_DWORD *)v83 = 136315138;
    v85 = v77;
    v86 = v127;
    sub_10002B1E8(v79, v127, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v87 = v86;
    v77 = v85;
    v88 = String.init<A>(describing:)(v87, v126);
    v89 = v79;
    v91 = v90;
    v135 = sub_100027E40(v88, v90, (uint64_t *)v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v83 + 4, v83 + 12);
    swift_bridgeObjectRelease(v91);
    sub_10001F544(v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "scrollWithCompensationTo: Performing initial scroll {item: %s}", v83, 0xCu);
    swift_arrayDestroy(v84, 1, &type metadata for Any[8]);
    v73 = v134;
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v83, -1, -1);
  }
  else
  {
    sub_10001F544(v79, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  v92 = v123;
  v93 = swift_beginAccess(v123, v136, 1, 0);
  *v92 = 1;
  v94 = v133(v73, v131 & 1, v93);
  *v92 = 0;
  v95 = v130;
  if ((v94 & 1) == 0)
  {
    v96 = Logger.logObject.getter(v94);
    v97 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v98 = 0;
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "scrollWithCompensationTo: no animation after scroll", v98, 2u);
      swift_slowDealloc(v98, -1, -1);
    }

    v99 = swift_retain();
    PassthroughSubject.send(_:)(v99);
    swift_release();
  }
  v100 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v101 = swift_allocObject(v100, 48, 7);
  *(_OWORD *)(v101 + 16) = xmmword_10051FF90;
  *(_QWORD *)(v101 + 32) = v77;
  v102 = swift_retain();
  result = DeferredPromise.promise.getter(v102);
  if (result)
  {
    v104 = result;
    v105 = sub_10002A750(&qword_100654820);
    *(_QWORD *)(v101 + 40) = v104;
    v135 = v101;
    specialized Array._endMutation()(v105);
    v106 = v135;
    v107 = sub_10002A750(&qword_100654828);
    v108 = sub_100023FEC(&qword_100654830, &qword_100654828, (uint64_t)&protocol conformance descriptor for [A]);
    static Promise.all<A>(_:)(&v135, v107, v108);
    swift_bridgeObjectRelease(v106);
    v110 = (void *)zalgo.getter(v109);
    dispatch thunk of Promise.then<A>(on:closure:)(v110, sub_1002D5FF4, 0, v126);
    swift_release();

    v111 = swift_retain();
    v112 = (void *)zalgo.getter(v111);
    v113 = dispatch thunk of Promise.always(on:closure:)(v112, sub_1002DB284, v95);
    swift_release();
    swift_release();

    result = DeferredPromise.promise.getter(v114);
    if (result)
    {
      v115 = (void *)zalgo.getter(result);
      dispatch thunk of Promise.then<A>(on:closure:)(v115, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, (char *)&type metadata for () + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return v113;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D2100(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34[4];
  uint64_t v35;
  uint64_t v36;

  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - v13;
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v15 = type metadata accessor for Logger(0);
  sub_100012DC4(v15, (uint64_t)qword_100659AD8);
  v16 = sub_10002B1E8(a3, (uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v31 = a2;
    v19 = swift_slowAlloc(12, -1);
    v33 = v4;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v32 = a1;
    v22 = v21;
    v34[0] = v21;
    v30 = a4;
    *(_DWORD *)v20 = 136315138;
    sub_10002B1E8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v23 = String.init<A>(describing:)(v11, v9);
    v25 = v24;
    v35 = sub_100027E40(v23, v24, v34);
    a4 = v30;
    a2 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v25);
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "scrollWithCompensationTo: cellReadyTracker finishes {item: %s}", v20, 0xCu);
    swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
    v26 = v22;
    a1 = v32;
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(_BYTE *)(a4 + 24) == 1 && (*(_BYTE *)(a4 + 25) & 1) == 0)
    *(_BYTE *)(a4 + 25) = 1;
  v34[3] = sub_10002A750(&qword_100654850);
  v34[0] = (uint64_t)a1;
  v34[1] = a2;
  v27 = sub_10002A750(&qword_100654820);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = a1;
  return Promise.init(value:)(v34);
}

uint64_t sub_1002D23A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[4];
  uint64_t v30;
  uint64_t v31;

  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v28);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_100659AD8);
  v13 = sub_10002B1E8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v26 = a1;
    v16 = swift_slowAlloc(12, -1);
    v27 = v3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc(32, -1);
    v29[0] = v18;
    *(_DWORD *)v17 = 136315138;
    sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v19 = String.init<A>(describing:)(v8, v28);
    v21 = v20;
    v30 = sub_100027E40(v19, v20, v29);
    a1 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v21);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "scrollWithCompensationTo: cellReadyTracker finishes {item: %s}", v17, 0xCu);
    swift_arrayDestroy(v18, 1, &type metadata for Any[8]);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(_BYTE *)(a3 + 24) == 1 && (*(_BYTE *)(a3 + 25) & 1) == 0)
    *(_BYTE *)(a3 + 25) = 1;
  v29[3] = v28;
  v22 = sub_100028D70(v29);
  sub_10002B1E8(a1, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v23 = sub_10002A750(&qword_100654820);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  return Promise.init(value:)(v29);
}

void sub_1002D2644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - v9;
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v11 = type metadata accessor for Logger(0);
  sub_100012DC4(v11, (uint64_t)qword_100659AD8);
  v12 = sub_10002B1E8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v25 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_10002B1E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v17 = String.init<A>(describing:)(v7, v5);
    v19 = v18;
    v24 = sub_100027E40(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v19);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "scrollWithCompensationTo: cellReadyTracker error {item: %s}", v15, 0xCu);
    swift_arrayDestroy(v16, 1, &type metadata for Any[8]);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(_BYTE *)(a3 + 24) == 1)
  {
    *(_BYTE *)(a3 + 24) = 0;
    if (*(_QWORD *)(a3 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    v20 = type metadata accessor for PromiseError(0);
    v21 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
    v22 = swift_allocError(v20, v21, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v23, enum case for PromiseError.cancelled(_:), v20);
    DeferredPromise.reject(_:)(v22);
    swift_errorRelease(v22);
  }
}

void sub_1002D2908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - v8;
  if (qword_10063D740 != -1)
    swift_once(&qword_10063D740, sub_1003E8B70);
  v10 = type metadata accessor for Logger(0);
  sub_100012DC4(v10, (uint64_t)qword_100659AD8);
  v11 = sub_10002B1E8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v24 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_10002B1E8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v16 = String.init<A>(describing:)(v6, v4);
    v18 = v17;
    v23 = sub_100027E40(v16, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "scrollWithCompensationTo: cellReadyTracker is cancelled {item: %s}", v14, 0xCu);
    swift_arrayDestroy(v15, 1, &type metadata for Any[8]);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  if (*(_BYTE *)(a2 + 24) == 1)
  {
    *(_BYTE *)(a2 + 24) = 0;
    if (*(_QWORD *)(a2 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    v19 = type metadata accessor for PromiseError(0);
    v20 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
    v21 = swift_allocError(v19, v20, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v22, enum case for PromiseError.cancelled(_:), v19);
    DeferredPromise.reject(_:)(v21);
    swift_errorRelease(v21);
  }
}

uint64_t sub_1002D2BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  NSString v6;
  uint64_t v7;
  __int128 v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 16))
    sub_100028CFC(a1 + 32, (uint64_t)v9);
  else
    memset(v9, 0, sizeof(v9));
  v1 = sub_10002A750(&qword_100640E50);
  v2 = sub_10002A750(&qword_100654850);
  if (swift_dynamicCast(&v8, v9, v1, v2, 6) && (_QWORD)v8)
  {
    v9[0] = v8;
    v3 = sub_10002A750(&qword_100654858);
    swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
    return Promise.init(value:)(v9);
  }
  else
  {
    v5 = (void *)objc_opt_self(REMError);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "internalErrorWithDebugDescription:", v6);

    return swift_willThrow(v7);
  }
}

NSString sub_1002D2CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  _OWORD v20[2];

  v2 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v20 - v10;
  if (*(_QWORD *)(a1 + 16))
    sub_100028CFC(a1 + 32, (uint64_t)v20);
  else
    memset(v20, 0, sizeof(v20));
  v12 = sub_10002A750(&qword_100640E50);
  v13 = swift_dynamicCast(v4, v20, v12, v5, 6);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if ((v13 & 1) != 0)
  {
    v14(v4, 0, 1, v5);
    sub_10001F580((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v15 = sub_10002A750(&qword_100642E88);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v16 = (NSString)Promise.init(value:)(v8);
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    v14(v4, 1, 1, v5);
    sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_100640EB0);
    v17 = (void *)objc_opt_self(REMError);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "internalErrorWithDebugDescription:", v16);

    swift_willThrow(v18);
  }
  return v16;
}

void sub_1002D2EF4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  __n128 v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = type metadata accessor for TTRIRemindersListReminderCellAccessibilityElement(0, v7);
    if (swift_dynamicCastClass(a1, v9))
    {
      v10 = a1;
      v11 = TTRIRemindersListReminderCellAccessibilityElement.cell.getter();
      if (v11)
      {
        v13 = (void *)v11;
        v14 = v12;
        ObjectType = swift_getObjectType(v11, v12);
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 32))(v20, ObjectType, v14);
        v16 = v21;
        if (v21)
        {
          v17 = v22;
          sub_10001413C(v20, v21);
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);

          v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 0, 1, v18);
          sub_100027F10(v20);
LABEL_9:

          return;
        }

        sub_1000073A0((uint64_t)v20, (uint64_t *)&unk_1006547B0);
      }
      else
      {

      }
    }
    v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1002D3060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  NSObject *v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = sub_1002CE748(a1);

    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002D30C4(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  void *Strong;
  void *v8;
  id v9;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v8 = (void *)sub_1002D3150(a1, a3, a4);

  if (!v8)
    return 0;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIAccessibilityCustomRotorItemResult), "initWithTargetElement:targetRange:", v8, 0);

  return v9;
}

uint64_t sub_1002D3150(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  char **v38;
  uint64_t v39;
  unsigned int v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char **v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char **v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  void *v58;
  char *v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;

  v79 = a2;
  v80 = a3;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v76 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v78 = (uint64_t)&v75 - v9;
  v10 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v10);
  v77 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v75 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v75 - v16;
  __chkstk_darwin(v18);
  v82 = (uint64_t)&v75 - v19;
  __chkstk_darwin(v20);
  v87 = (uint64_t)&v75 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v75 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v75 - v27;
  v83 = v6;
  v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v6 + 56);
  v81((char *)&v75 - v27, 1, 1, v5, v26);
  v84 = a1;
  v29 = objc_msgSend(a1, "currentItem");
  v30 = objc_msgSend(v29, "targetElement");

  v85 = v3;
  v86 = v28;
  if (!v30)
    goto LABEL_10;
  v31 = objc_opt_self(UIAccessibilityElement);
  v32 = swift_dynamicCastObjCClass(v30, v31);
  if (v32)
  {
    v33 = (uint64_t)v24;
    v34 = *(_QWORD *)(v3 + qword_10065D8E8);
    if (v34)
    {
      v35 = v32;
      v36 = *(uint64_t (**)(uint64_t))(v34 + 16);
      v37 = swift_retain();
      if ((v36(v37) & 1) != 0)
      {
        (*(void (**)(uint64_t))(v34 + 32))(v35);
        swift_unknownObjectRelease(v30);
        swift_release();
        v28 = v86;
        sub_1000073A0((uint64_t)v86, (uint64_t *)&unk_100640EB0);
LABEL_9:
        sub_10000F614(v33, (uint64_t)v28, (uint64_t *)&unk_100640EB0);
        goto LABEL_10;
      }
      swift_release();
      v28 = v86;
    }
    sub_1000073A0((uint64_t)v28, (uint64_t *)&unk_100640EB0);
    swift_unknownObjectRelease(v30);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81)(v33, 1, 1, v5);
    goto LABEL_9;
  }
  swift_unknownObjectRelease(v30);
LABEL_10:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81)(v87, 1, 1, v5);
  v38 = &selRef_supportsTemplates;
  v39 = (uint64_t)v86;
  while (1)
  {
    v41 = objc_msgSend(v84, v38[337]);
    v42 = v82;
    sub_1002D378C(v39, (uint64_t)v41, v82);
    v43 = v87;
    sub_100041F2C(v42, v87, (uint64_t *)&unk_100640EB0);
    sub_10000735C(v43, (uint64_t)v17, (uint64_t *)&unk_100640EB0);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
    if (v44(v17, 1, v5) != 1)
      break;
    sub_1000073A0((uint64_t)v17, (uint64_t *)&unk_100640EB0);
LABEL_12:
    sub_10000735C(v87, (uint64_t)v14, (uint64_t *)&unk_100640EB0);
    v40 = v44(v14, 1, v5);
    sub_1000073A0((uint64_t)v14, (uint64_t *)&unk_100640EB0);
    if (v40 == 1)
      goto LABEL_15;
  }
  sub_1000073A0(v39, (uint64_t *)&unk_100640EB0);
  v45 = (uint64_t)v17;
  v46 = v17;
  v47 = v38;
  v48 = v78;
  sub_10001F580(v45, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10002B1E8(v48, v39, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v81)(v39, 0, 1, v5);
  v49 = v79(v48);
  v50 = v48;
  v38 = v47;
  v17 = v46;
  sub_10001F544(v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v49 & 1) == 0)
    goto LABEL_12;
LABEL_15:
  v51 = v77;
  sub_10000735C(v87, v77, (uint64_t *)&unk_100640EB0);
  if (v44((char *)v51, 1, v5) == 1)
  {
    sub_1000073A0(v87, (uint64_t *)&unk_100640EB0);
    sub_1000073A0((uint64_t)v86, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
    return 0;
  }
  v53 = v38;
  v54 = v76;
  result = sub_10001F580(v51, v76, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v56 = v85;
  v57 = *(char **)(v85 + qword_10065D8E0);
  if (v57)
  {
    v58 = *(void **)&v57[qword_100645F00];
    v59 = v57;
    v60 = objc_msgSend(v58, "indexPathsForVisibleRows");
    if (!v60)
    {

      v70 = (uint64_t)v86;
      goto LABEL_22;
    }
    v61 = v60;
    v62 = type metadata accessor for IndexPath(0);
    v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

    v64 = v59;
    v65 = sub_1002D6208(v63, (uint64_t)v64);
    swift_bridgeObjectRelease(v63);

    __chkstk_darwin(v66);
    *(&v75 - 2) = v54;
    sub_1003E6C58((uint64_t (*)(char *))sub_1002DA224, (uint64_t)(&v75 - 4), v65);
    v68 = *(_QWORD *)(v67 + 16);
    *(_QWORD *)&v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
    v70 = (uint64_t)v86;
    if (!v68)
    {
LABEL_22:
      if (objc_msgSend(v84, v53[337], v69) == (id)1)
        v71 = 3;
      else
        v71 = 1;
      sub_10032C7CC(v54, v71, 0);
    }
    v72 = *(_QWORD *)(v56 + qword_10065D8E8);
    if (v72)
    {
      v73 = *(uint64_t (**)(uint64_t))(v72 + 16);
      v74 = swift_retain();
      if ((v73(v74) & 1) != 0)
        v52 = (*(uint64_t (**)(uint64_t))(v72 + 48))(v54);
      else
        v52 = 0;
      swift_release();
    }
    else
    {
      v52 = 0;
    }
    sub_1000073A0(v87, (uint64_t *)&unk_100640EB0);
    sub_1000073A0(v70, (uint64_t *)&unk_100640EB0);
    sub_10001F544(v54, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v52;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002D378C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char v48;
  char v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;

  v4 = v3;
  v104 = a2;
  v105 = (char *)a3;
  v6 = type metadata accessor for Logger(0);
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  __chkstk_darwin(v6);
  v97 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v102 = (uint64_t)&v92 - v12;
  __chkstk_darwin(v13);
  v98 = (uint64_t)&v92 - v14;
  __chkstk_darwin(v15);
  v100 = (uint64_t)&v92 - v16;
  __chkstk_darwin(v17);
  v103 = (uint64_t)&v92 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v92 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v92 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v92 - v26;
  v28 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v101 = (uint64_t)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v99 = (uint64_t)&v92 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v92 - v34;
  sub_10000735C(a1, (uint64_t)v27, (uint64_t *)&unk_100640EB0);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v36(v27, 1, v28) == 1)
  {
    sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_100640EB0);
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v37(v21, 1, 1, v28);
    v38 = sub_1002D4118((uint64_t)v21);
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    if (v38 <= 0)
    {
      v37(v105, 1, 1, v28);
      return;
    }
    v37(v10, 1, 1, v28);
    v39 = *(void **)(v4 + qword_10065D8E0);
    if (v39)
    {
      v40 = v39;
      sub_1002BBBD4(0, (uint64_t)v10, (uint64_t)v105);

      sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
      return;
    }
    goto LABEL_40;
  }
  v93 = v28;
  sub_10001F580((uint64_t)v27, (uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1002C0500((uint64_t)v35, (uint64_t)v24);
  v94 = v24;
  v41 = sub_1002D4118((uint64_t)v24);
  if (v41 <= 0)
    goto LABEL_13;
  v42 = v4;
  v92 = v35;
  v43 = qword_10065D8E0;
  v44 = *(void **)(v42 + qword_10065D8E0);
  if (!v44)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v45 = v41;
  v46 = v44;
  v35 = v92;
  v47 = sub_1002BBA20((uint64_t)v92, sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, (uint64_t (*)(uint64_t, uint64_t))sub_1000FA9FC, sub_1002AA398);
  v49 = v48;

  if ((v49 & 1) != 0)
  {
LABEL_13:
    sub_1000073A0((uint64_t)v94, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v56 = (uint64_t)v105;
    v57 = 1;
    v58 = v93;
    goto LABEL_14;
  }
  if (!v104)
  {
    if (v47 <= 0)
    {
      sub_10001F544((uint64_t)v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10000F614((uint64_t)v94, (uint64_t)v105, (uint64_t *)&unk_100640EB0);
      return;
    }
    v50 = *(void **)(v42 + v43);
    v51 = (uint64_t)v94;
    if (!v50)
      goto LABEL_42;
    v52 = v50;
    v53 = v102;
    sub_1002BBBD4(v47 - 1, v51, v102);

    v54 = v93;
    if (v36((char *)v53, 1, v93) == 1)
    {
      sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
      sub_10001F544((uint64_t)v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v53, (uint64_t *)&unk_100640EB0);
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v56 = (uint64_t)v105;
      v57 = 1;
    }
    else
    {
      v73 = v101;
      sub_10001F580(v53, v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v74 = (uint64_t)v105;
      sub_1002D42F0(v73, (uint64_t)v105);
      sub_10001F544(v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000073A0(v51, (uint64_t *)&unk_100640EB0);
      sub_10001F544((uint64_t)v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v56 = v74;
      v57 = 0;
    }
    v58 = v54;
LABEL_14:
    v55(v56, v57, 1, v58);
    return;
  }
  if (v104 == 1)
  {
    v59 = v47;
    v60 = (uint64_t)v92;
    sub_10002B1E8((uint64_t)v92, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v62 = v93;
    v61(v21, 0, 1, v93);
    v63 = sub_1002D4118((uint64_t)v21);
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    if (v63 <= 0)
    {
      if (v59 >= v45 - 1)
      {
        v75 = (uint64_t)v94;
        v76 = v100;
        sub_10000735C((uint64_t)v94, v100, (uint64_t *)&unk_100640EB0);
        if (v36((char *)v76, 1, v93) == 1)
        {
          sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
          sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000073A0(v76, (uint64_t *)&unk_100640EB0);
        }
        else
        {
          v77 = v99;
          sub_10001F580(v76, v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v78 = *(void **)(v42 + v43);
          if (!v78)
          {
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          v79 = v78;
          v80 = sub_1002BBA20(v77, sub_10006B3DC, (uint64_t (*)(uint64_t))sub_100073228, (uint64_t (*)(uint64_t, uint64_t))sub_1000FA9FC, sub_1002AA398);
          v82 = v81;

          if ((v82 & 1) == 0)
          {
            sub_1002C0500(v77, (uint64_t)v21);
            v83 = sub_1002D4118((uint64_t)v21);
            sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
            if (__OFSUB__(v83, 1))
            {
              __break(1u);
LABEL_40:
              __break(1u);
              goto LABEL_41;
            }
            if (v80 < v83 - 1)
            {
              v84 = v43;
              v85 = v98;
              sub_1002C0500(v77, v98);
              v86 = *(void **)(v42 + v84);
              if (!v86)
              {
LABEL_46:
                __break(1u);
                goto LABEL_47;
              }
              v87 = v86;
              sub_1002BBBD4(v80 + 1, v85, (uint64_t)v105);

              sub_1000073A0(v85, (uint64_t *)&unk_100640EB0);
              sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
              v72 = v60;
LABEL_25:
              sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              return;
            }
          }
          sub_10001F544(v77, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000073A0(v75, (uint64_t *)&unk_100640EB0);
          sub_10001F544(v60, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        }
        v61(v105, 1, 1, v93);
        return;
      }
      v69 = *(void **)(v42 + v43);
      v70 = (uint64_t)v94;
      if (!v69)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v71 = v69;
      sub_1002BBBD4(v59 + 1, v70, (uint64_t)v105);

      v68 = v70;
    }
    else
    {
      v64 = v43;
      v65 = v103;
      sub_10002B1E8(v60, v103, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v61((char *)v65, 0, 1, v62);
      v66 = *(void **)(v42 + v64);
      if (!v66)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v67 = v66;
      sub_1002BBBD4(0, v65, (uint64_t)v105);

      sub_1000073A0(v65, (uint64_t *)&unk_100640EB0);
      v68 = (uint64_t)v94;
    }
    sub_1000073A0(v68, (uint64_t *)&unk_100640EB0);
    v72 = v60;
    goto LABEL_25;
  }
LABEL_47:
  if (qword_10063D778 != -1)
    swift_once(&qword_10063D778, sub_100401CC4);
  v88 = v96;
  v89 = sub_100012DC4(v96, (uint64_t)qword_10065AB60);
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v97, v89, v88);
  v90 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  v91 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1002EB23C((uint64_t)"unknown direction", 17, 2uLL, v90, v91);
  __break(1u);
}

uint64_t sub_1002D4044()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v0 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - v4;
  v7 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v6);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v7);
  v8 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v5, v2);
  sub_10001F544((uint64_t)v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  return v8 & 1;
}

uint64_t sub_1002D4118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  id v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a1, (uint64_t)v6, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
    goto LABEL_6;
  }
  result = sub_10001F580((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v12 = *(void **)(v2 + qword_10065D8E0);
  if (!v12)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v13 = v12;
  v14 = sub_10006B3DC();
  v16 = v15;
  v18 = v17;
  v19 = sub_100073228((uint64_t)v10, v15);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v14);
  if (!v19)
  {

    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  v20 = *(unsigned __int8 *)(v19 + 72);

  swift_release();
  result = sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (v20 != 2)
    return 0;
LABEL_6:
  v21 = *(void **)(v2 + qword_10065D8E0);
  if (!v21)
  {
    __break(1u);
    goto LABEL_13;
  }
  v22 = v21;
  v23 = sub_1002BC37C(a1);
  v25 = v24;

  if ((v25 & 1) != 0)
    return 0;
  else
    return v23;
}

uint64_t sub_1002D42F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  void *v38;
  id v39;
  char v40;
  char v41;
  BOOL v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char v94[24];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v85 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v90 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - v12;
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v86 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v79 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v79 - v20;
  __chkstk_darwin(v22);
  v87 = (uint64_t)&v79 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v79 - v25;
  sub_10002B1E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v92 = a2;
  sub_10002B1E8(a2, (uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v88 = v9;
  v91 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v91(v26, 0, 1, v8);
  v27 = sub_1002D4118((uint64_t)v26);
  v28 = (uint64_t)v26;
  v29 = (uint64_t)v86;
  result = sub_1000073A0(v28, (uint64_t *)&unk_100640EB0);
  if (v27 < 1)
    return result;
  v93 = qword_10065D8E0;
  v83 = v13;
  v84 = v8;
  v89 = v18;
  v79 = v21;
  v80 = v2;
  while (1)
  {
    sub_10002B1E8(v92, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    result = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v91)(v21, 0, 1, v8);
    v31 = *(void **)(v3 + v93);
    if (!v31)
      break;
    v32 = v3;
    v33 = v31;
    v34 = v87;
    sub_1002BBBD4(v27 - 1, (uint64_t)v21, v87);

    v35 = v34;
    sub_1000073A0((uint64_t)v21, (uint64_t *)&unk_100640EB0);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
    if (v36(v34, 1, v8) == 1)
      return sub_1000073A0(v34, (uint64_t *)&unk_100640EB0);
    v37 = v92;
    sub_10001F544(v92, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10001F580(v35, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v13, v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8(v37, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v91(v18, 0, 1, v8);
    sub_10000735C((uint64_t)v18, v29, (uint64_t *)&unk_100640EB0);
    if (v36(v29, 1, v8) == 1)
    {
      result = sub_1000073A0(v29, (uint64_t *)&unk_100640EB0);
      v3 = v32;
    }
    else
    {
      result = sub_10001F580(v29, v90, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v43 = *(char **)(v32 + v93);
      if (!v43)
        goto LABEL_42;
      v3 = v32;
      if (v43[qword_100645F38] == 1)
      {
        v44 = qword_10063D3C8;
        v45 = v43;
        if (v44 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v46 = type metadata accessor for Logger(0);
        v47 = sub_100012DC4(v46, (uint64_t)qword_100645EC0);
        v48 = Logger.logObject.getter(v47);
        v49 = static os_log_type_t.fault.getter(v48);
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "Attempting to read sectionMetadata while it is being modified", v50, 2u);
          swift_slowDealloc(v50, -1, -1);
        }

      }
      else
      {
        v51 = v43;
      }
      v52 = &v43[qword_100645F30];
      v53 = *(_QWORD *)&v43[qword_100645F30];
      v54 = *(_QWORD *)&v43[qword_100645F30 + 8];
      v55 = *(_QWORD *)&v43[qword_100645F30 + 16];
      if (v53)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v43[qword_100645F30]);
        swift_bridgeObjectRetain(v54);
        swift_bridgeObjectRetain(v55);
        v57 = v55;
      }
      else
      {
        v82 = *(_QWORD *)&v43[qword_100645F30 + 8];
        v81 = v52[24];
        v58 = sub_10002A750((uint64_t *)&unk_100646400);
        v59 = swift_allocObject(v58, 24, 7);
        *(_QWORD *)(v59 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
          if (result)
          {
            v75 = result;
            if (result < 1)
              goto LABEL_43;
            v76 = &_swiftEmptyArrayStorage[4];
            do
            {
              v77 = *v76++;
              swift_weakAssign(v77 + 56, 0);
              swift_beginAccess(v77 + 64, v94, 1, 0);
              v78 = *(_QWORD *)(v77 + 64);
              *(_QWORD *)(v77 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease(v78);
              --v75;
            }
            while (v75);
          }
        }
        sub_100070B1C(v59);
        v53 = v60;
        v54 = v61;
        v57 = v62;
        v64 = v63;
        swift_release();
        v65 = v64 & 1;
        v66 = *(_QWORD *)v52;
        v67 = *((_QWORD *)v52 + 1);
        v68 = *((_QWORD *)v52 + 2);
        *(_QWORD *)v52 = v53;
        *((_QWORD *)v52 + 1) = v54;
        *((_QWORD *)v52 + 2) = v57;
        v52[24] = v65;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
        swift_bridgeObjectRetain(v57);
        sub_1000072F0(v66, v67, v68);
        v56 = sub_1000072F0(0, v82, v55);
        v21 = v79;
        v3 = v80;
      }
      v69 = (uint64_t)v85;
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v56);
      v18 = v89;
      if (!*(_QWORD *)(v54 + 16) || (v70 = sub_1002AA39C(v69), (v71 & 1) == 0))
      {
        sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);

        swift_bridgeObjectRelease(v57);
        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v53);
        v13 = v83;
        v8 = v84;
        v29 = (uint64_t)v86;
LABEL_4:
        sub_10001F544(v90, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v27 = 0;
        goto LABEL_5;
      }
      v72 = *(_QWORD *)(*(_QWORD *)(v54 + 56) + 8 * v70);
      swift_bridgeObjectRetain(v72);
      sub_10001F544(v69, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v73 = sub_1000CE5E4(v72);
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v72);
      if (!v73)
      {

        v13 = v83;
        v8 = v84;
        v29 = (uint64_t)v86;
        v18 = v89;
        goto LABEL_4;
      }
      v74 = *(unsigned __int8 *)(v73 + 72);

      swift_release();
      v42 = v74 == 2;
      v13 = v83;
      v8 = v84;
      v29 = (uint64_t)v86;
      v18 = v89;
      if (!v42)
        goto LABEL_4;
      result = sub_10001F544(v90, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    v38 = *(void **)(v3 + v93);
    if (!v38)
      goto LABEL_41;
    v39 = v38;
    v27 = sub_1002BC37C((uint64_t)v18);
    v41 = v40;

    v42 = (v41 & 1) == 0;
    v18 = v89;
    if (!v42)
      v27 = 0;
LABEL_5:
    sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
    result = sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v27 <= 0)
      return result;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

_QWORD *sub_1002D4A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v7 = (void *)Strong;
  sub_100346934(a3);
  v9 = v8;

  return (_QWORD *)v9;
}

_QWORD *sub_1002D4AA0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v9 = (void *)Strong;
  v10 = sub_1002CB750(a1, a2, a3);

  return (_QWORD *)v10;
}

_QWORD *sub_1002D4B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  _BYTE v13[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v8 = (void *)Strong;
  v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v7);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 472))(a3, ObjectType);

  return (_QWORD *)v11;
}

uint64_t sub_1002D4BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  return 0;
}

uint64_t sub_1002D4C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v26, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (!result)
    return 0;
  v7 = *(void **)(a1 + qword_10065D8E0);
  if (v7)
  {
    v8 = (void *)result;
    v9 = v7;
    v10 = sub_10006B3DC();
    v12 = v11;
    v14 = v13;
    sub_1000701C4(a2, v10, v11, v13, v15 & 1);
    v17 = v16;

    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v10);
    if (v17)
    {
      ObjectType = swift_getObjectType(v17, v18);
      v20 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TTRIShowRemindersDragPreviewParametersProvidingCell);
      if (v20)
        v22 = v20;
      else
        v22 = 0;
      if (v20)
        v23 = v17;
      else
        v23 = 0;
      if (v23)
      {
        v24 = swift_getObjectType(v23, v21);
        v25 = TTRIShowRemindersDragPreviewParametersProvidingCell.dragPreviewParameters.getter(v24, v22);

        return v25;
      }

    }
    else
    {

    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1002D4D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

}

uint64_t sub_1002D4D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  return 1;
}

uint64_t sub_1002D4DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)

  return 0;
}

uint64_t sub_1002D4E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_10002A750(&qword_100654990);
  if (swift_isClassType(v0))
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1006415A0;
  else
    v2 = (uint64_t *)&unk_100654998;
  return sub_10002A750(v2);
}

uint64_t sub_1002D4E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_10002A750(&qword_1006549A0);
  if (swift_isClassType(v0))
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1006415A0;
  else
    v2 = (uint64_t *)&unk_1006549A8;
  return sub_10002A750(v2);
}

Swift::Int sub_1002D4EAC(_QWORD *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  Swift::Int v21;
  unint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  Swift::Int v61;
  Swift::Int v62;
  uint64_t v63;
  Swift::Int v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  char *v128;
  _QWORD *v129;
  Swift::Int v130;
  uint64_t v131;
  Swift::Int v132;
  uint64_t v133;
  Swift::Int v134;
  unint64_t v135;
  void (*v136)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v137;
  uint64_t v138;
  Swift::Int v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  Swift::Int v143;
  uint64_t v144;
  uint64_t v145;
  Swift::Int v146;
  uint64_t *v147;

  v136 = a3;
  v5 = v3;
  v144 = sub_10002A750(a2);
  v137 = *(_QWORD *)(v144 - 8);
  v7 = __chkstk_darwin(v144);
  v133 = (uint64_t)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v145 = (uint64_t)&v127 - v10;
  v11 = __chkstk_darwin(v9);
  v141 = (uint64_t)&v127 - v12;
  __chkstk_darwin(v11);
  v140 = (uint64_t)&v127 - v13;
  v14 = a1[1];
  result = _minimumMergeRunLength(_:)(v14);
  if (result >= v14)
  {
    if (v14 < 0)
      goto LABEL_142;
    if (v14)
      return sub_1002D58BC(0, v14, 1, a1, a2);
    return result;
  }
  if (v14 >= 0)
    v16 = v14;
  else
    v16 = v14 + 1;
  if (v14 < -1)
    goto LABEL_150;
  v147 = a2;
  v130 = result;
  if (v14 < 2)
  {
    v20 = (char *)_swiftEmptyArrayStorage;
    v135 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
    v129 = _swiftEmptyArrayStorage;
    if (v14 != 1)
    {
      v22 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v22 >= 2)
      {
        v120 = *a1;
        do
        {
          v121 = v22 - 2;
          if (v22 < 2)
            goto LABEL_137;
          if (!v120)
            goto LABEL_149;
          v111 = v20;
          v122 = *(_QWORD *)&v20[16 * v121 + 32];
          v123 = *(_QWORD *)&v20[16 * v22 + 24];
          sub_1002D5AF4(v120 + *(_QWORD *)(v137 + 72) * v122, v120 + *(_QWORD *)(v137 + 72) * *(_QWORD *)&v20[16 * v22 + 16], v120 + *(_QWORD *)(v137 + 72) * v123, v135, v147, v136);
          if (v5)
            goto LABEL_105;
          if (v123 < v122)
            goto LABEL_138;
          if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
            v111 = sub_100392EE4((uint64_t)v20);
          if (v121 >= *((_QWORD *)v111 + 2))
            goto LABEL_139;
          v124 = &v111[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v123;
          v125 = *((_QWORD *)v111 + 2);
          if (v22 > v125)
            goto LABEL_140;
          memmove(&v111[16 * v22 + 16], &v111[16 * v22 + 32], 16 * (v125 - v22));
          *((_QWORD *)v111 + 2) = v125 - 1;
          v22 = v125 - 1;
          v20 = v111;
        }
        while (v125 > 2);
      }
      v119 = v20;
LABEL_119:
      swift_bridgeObjectRelease(v119);
      v126 = v129;
      v129[2] = 0;
      return swift_bridgeObjectRelease(v126);
    }
  }
  else
  {
    v17 = v16 >> 1;
    v18 = static Array._allocateBufferUninitialized(minimumCapacity:)(v16 >> 1, v144);
    *(_QWORD *)(v18 + 16) = v17;
    v19 = *(unsigned __int8 *)(v137 + 80);
    v129 = (_QWORD *)v18;
    v135 = v18 + ((v19 + 32) & ~v19);
  }
  v21 = 0;
  v20 = (char *)_swiftEmptyArrayStorage;
  v142 = a1;
  while (1)
  {
    v23 = v21;
    v24 = v21 + 1;
    v134 = v21;
    if (v21 + 1 >= v14)
    {
      v31 = v21 + 1;
      break;
    }
    v131 = v5;
    v25 = *a1;
    v26 = *(_QWORD *)(v137 + 72);
    v27 = v140;
    v28 = v147;
    sub_10000735C(*a1 + v26 * v24, v140, v147);
    v139 = v14;
    v29 = v141;
    sub_10000735C(v25 + v26 * v23, v141, v28);
    LODWORD(v138) = static IndexPath.< infix(_:_:)(v27 + *(int *)(v144 + 36), v29 + *(int *)(v144 + 36));
    v30 = v29;
    v14 = v139;
    sub_1000073A0(v30, v28);
    sub_1000073A0(v27, v28);
    v31 = v23 + 2;
    v132 = v25;
    v146 = v26;
    if (v23 + 2 >= v14)
    {
      v5 = v131;
      if ((v138 & 1) == 0)
        break;
    }
    else
    {
      v32 = v26 * v24;
      v33 = v25;
      v34 = v23 + 2;
      v35 = v26 * v31;
      do
      {
        v36 = v140;
        v37 = v147;
        sub_10000735C(v33 + v35, v140, v147);
        v38 = v141;
        sub_10000735C(v33 + v32, v141, v37);
        v39 = static IndexPath.< infix(_:_:)(v36 + *(int *)(v144 + 36), v38 + *(int *)(v144 + 36));
        sub_1000073A0(v38, v37);
        sub_1000073A0(v36, v37);
        if (((v138 ^ v39) & 1) != 0)
        {
          a1 = v142;
          v5 = v131;
          v31 = v34;
          v23 = v134;
          v14 = v139;
          if ((v138 & 1) == 0)
            goto LABEL_23;
          goto LABEL_43;
        }
        v33 += v146;
        ++v34;
      }
      while (v139 != v34);
      v14 = v139;
      v31 = v139;
      a1 = v142;
      v5 = v131;
      v23 = v134;
      if ((v138 & 1) == 0)
        break;
    }
LABEL_43:
    v57 = v146;
    if (v31 < v23)
      goto LABEL_143;
    if (v23 >= v31)
      break;
    v131 = v5;
    v58 = v31;
    v59 = 0;
    v60 = v146 * (v31 - 1);
    v61 = v31 * v146;
    v62 = v23;
    v63 = v23 * v146;
    v40 = v147;
    v143 = v31;
    do
    {
      if (v62 != v58 + v59 - 1)
      {
        v64 = v132;
        if (!v132)
          goto LABEL_148;
        v65 = v132 + v63;
        v66 = v132 + v60;
        sub_10000F614(v132 + v63, v133, v147);
        if (v63 < v60 || v65 >= v64 + v61)
        {
          swift_arrayInitWithTakeFrontToBack(v64 + v63, v64 + v60, 1, v144);
          v57 = v146;
        }
        else
        {
          v57 = v146;
          if (v63 != v60)
            swift_arrayInitWithTakeBackToFront(v65, v66);
        }
        v40 = v147;
        sub_10000F614(v133, v66, v147);
      }
      ++v62;
      --v59;
      v58 = v143;
      v60 -= v57;
      v61 -= v57;
      v63 += v57;
    }
    while (v62 < v143 + v59);
    v5 = v131;
    a1 = v142;
    v31 = v143;
    v23 = v134;
    v14 = v139;
    if (v143 < v139)
      goto LABEL_24;
LABEL_58:
    if (v31 < v23)
      goto LABEL_136;
    if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      v20 = sub_100392A60(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
    v68 = *((_QWORD *)v20 + 2);
    v67 = *((_QWORD *)v20 + 3);
    v22 = v68 + 1;
    v69 = v5;
    if (v68 >= v67 >> 1)
      v20 = sub_100392A60((char *)(v67 > 1), v68 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v22;
    v70 = v20 + 32;
    v71 = &v20[16 * v68 + 32];
    *(_QWORD *)v71 = v23;
    *((_QWORD *)v71 + 1) = v31;
    v143 = v31;
    if (v68)
    {
      while (1)
      {
        v72 = v22 - 1;
        if (v22 >= 4)
        {
          v77 = &v70[16 * v22];
          v78 = *((_QWORD *)v77 - 8);
          v79 = *((_QWORD *)v77 - 7);
          v83 = __OFSUB__(v79, v78);
          v80 = v79 - v78;
          if (v83)
            goto LABEL_125;
          v82 = *((_QWORD *)v77 - 6);
          v81 = *((_QWORD *)v77 - 5);
          v83 = __OFSUB__(v81, v82);
          v75 = v81 - v82;
          v76 = v83;
          if (v83)
            goto LABEL_126;
          v84 = v22 - 2;
          v85 = &v70[16 * v22 - 32];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v83 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          if (v83)
            goto LABEL_128;
          v83 = __OFADD__(v75, v88);
          v89 = v75 + v88;
          if (v83)
            goto LABEL_131;
          if (v89 >= v80)
          {
            v107 = &v70[16 * v72];
            v109 = *(_QWORD *)v107;
            v108 = *((_QWORD *)v107 + 1);
            v83 = __OFSUB__(v108, v109);
            v110 = v108 - v109;
            if (v83)
              goto LABEL_135;
            v100 = v75 < v110;
            goto LABEL_95;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v101 = *((_QWORD *)v20 + 4);
            v102 = *((_QWORD *)v20 + 5);
            v83 = __OFSUB__(v102, v101);
            v94 = v102 - v101;
            v95 = v83;
            goto LABEL_89;
          }
          v74 = *((_QWORD *)v20 + 4);
          v73 = *((_QWORD *)v20 + 5);
          v83 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          v76 = v83;
        }
        if ((v76 & 1) != 0)
          goto LABEL_127;
        v84 = v22 - 2;
        v90 = &v70[16 * v22 - 32];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v93 = __OFSUB__(v91, v92);
        v94 = v91 - v92;
        v95 = v93;
        if (v93)
          goto LABEL_130;
        v96 = &v70[16 * v72];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v83 = __OFSUB__(v97, v98);
        v99 = v97 - v98;
        if (v83)
          goto LABEL_133;
        if (__OFADD__(v94, v99))
          goto LABEL_134;
        if (v94 + v99 >= v75)
        {
          v100 = v75 < v99;
LABEL_95:
          if (v100)
            v72 = v84;
          goto LABEL_97;
        }
LABEL_89:
        if ((v95 & 1) != 0)
          goto LABEL_129;
        v103 = &v70[16 * v72];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v83 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v83)
          goto LABEL_132;
        if (v106 < v94)
          goto LABEL_14;
LABEL_97:
        v111 = v20;
        v112 = v72 - 1;
        if (v72 - 1 >= v22)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        v113 = *a1;
        if (!*a1)
          goto LABEL_147;
        v114 = &v70[16 * v112];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v72];
        v117 = *((_QWORD *)v116 + 1);
        sub_1002D5AF4(v113 + *(_QWORD *)(v137 + 72) * *(_QWORD *)v114, v113 + *(_QWORD *)(v137 + 72) * *(_QWORD *)v116, v113 + *(_QWORD *)(v137 + 72) * v117, v135, v147, v136);
        if (v69)
        {
LABEL_105:
          v119 = v111;
          goto LABEL_119;
        }
        if (v117 < v115)
          goto LABEL_122;
        if (v72 > *((_QWORD *)v111 + 2))
          goto LABEL_123;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v112 + 8] = v117;
        v118 = *((_QWORD *)v111 + 2);
        if (v72 >= v118)
          goto LABEL_124;
        v20 = v111;
        v22 = v118 - 1;
        memmove(&v70[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((_QWORD *)v111 + 2) = v118 - 1;
        a1 = v142;
        if (v118 <= 2)
          goto LABEL_14;
      }
    }
    v22 = 1;
LABEL_14:
    v14 = a1[1];
    v21 = v143;
    v5 = v69;
    if (v143 >= v14)
      goto LABEL_107;
  }
LABEL_23:
  v40 = v147;
  if (v31 >= v14)
    goto LABEL_58;
LABEL_24:
  if (__OFSUB__(v31, v23))
    goto LABEL_141;
  if (v31 - v23 >= v130)
    goto LABEL_58;
  if (__OFADD__(v23, v130))
    goto LABEL_144;
  if (v23 + v130 >= v14)
    v41 = v14;
  else
    v41 = v23 + v130;
  if (v41 >= v23)
  {
    if (v31 != v41)
    {
      v128 = v20;
      v131 = v5;
      v132 = v41;
      v42 = *(_QWORD *)(v137 + 72);
      v43 = v42 * (v31 - 1);
      v138 = v42;
      v44 = v31 * v42;
      do
      {
        v46 = 0;
        v143 = v31;
        v139 = v44;
        while (1)
        {
          v146 = v23;
          v47 = v142;
          v48 = *v142;
          v49 = v44 + v46 + *v142;
          v50 = v140;
          sub_10000735C(v49, v140, v40);
          v51 = v43;
          v52 = v43 + v46 + v48;
          v53 = v141;
          sub_10000735C(v52, v141, v40);
          LOBYTE(v48) = static IndexPath.< infix(_:_:)(v50 + *(int *)(v144 + 36), v53 + *(int *)(v144 + 36));
          sub_1000073A0(v53, v40);
          sub_1000073A0(v50, v40);
          if ((v48 & 1) == 0)
            break;
          v54 = *v47;
          if (!*v47)
            goto LABEL_146;
          v44 = v139;
          v55 = v54 + v139 + v46;
          v43 = v51;
          v56 = v54 + v51 + v46;
          sub_10000F614(v55, v145, v147);
          v45 = v143;
          swift_arrayInitWithTakeFrontToBack(v55, v56, 1, v144);
          v40 = v147;
          sub_10000F614(v145, v56, v147);
          v46 -= v138;
          v23 = v146 + 1;
          if (v45 == v146 + 1)
            goto LABEL_34;
        }
        v45 = v143;
        v43 = v51;
        v44 = v139;
LABEL_34:
        v31 = v45 + 1;
        v43 += v138;
        v44 += v138;
        v23 = v134;
      }
      while (v31 != v132);
      v31 = v132;
      v5 = v131;
      a1 = v142;
      v20 = v128;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002D58BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a1;
  v32 = sub_10002A750(a5);
  v9 = __chkstk_darwin(v32);
  v33 = (uint64_t)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v29 = (uint64_t)&v26 - v12;
  result = __chkstk_darwin(v11);
  v16 = (char *)&v26 - v15;
  v31 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v14 + 72);
    v35 = v17 * (v31 - 1);
    v30 = v17;
    v34 = v17 * v31;
LABEL_5:
    v18 = 0;
    v19 = v28;
    while (1)
    {
      v20 = *a4;
      sub_10000735C(v34 + v18 + *a4, (uint64_t)v16, a5);
      v21 = v29;
      sub_10000735C(v35 + v18 + v20, v29, a5);
      LOBYTE(v20) = static IndexPath.< infix(_:_:)(&v16[*(int *)(v32 + 36)], v21 + *(int *)(v32 + 36));
      sub_1000073A0(v21, a5);
      result = sub_1000073A0((uint64_t)v16, a5);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v27)
          return result;
        goto LABEL_5;
      }
      v22 = *a4;
      if (!*a4)
        break;
      v23 = a4;
      v24 = v22 + v34 + v18;
      v25 = v22 + v35 + v18;
      sub_10000F614(v24, v33, a5);
      swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v32);
      result = sub_10000F614(v33, v25, a5);
      v18 -= v30;
      ++v19;
      a4 = v23;
      if (v31 == v19)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D5AF4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t result;
  uint64_t v46;
  void (*v47)(unint64_t *, unint64_t *, unint64_t *);
  unint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v50 = a5;
  v52 = sub_10002A750(a5);
  v11 = __chkstk_darwin(v52);
  v51 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v46 - v13;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_63;
  v18 = (uint64_t)(a2 - a1) / v16;
  v55 = a1;
  v54 = a4;
  v19 = v17 / v16;
  v47 = a6;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v19, v52);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v29 = a4 + v21;
      v53 = a4 + v21;
      v55 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        v31 = -v16;
        v48 = a4;
        v49 = a1;
        do
        {
          v32 = a3 + v31;
          v33 = v50;
          sub_10000735C(v29 + v31, (uint64_t)v14, v50);
          v34 = a2 + v31;
          v35 = a3;
          v36 = (uint64_t)v14;
          v37 = v51;
          sub_10000735C(a2 + v31, v51, v33);
          v38 = static IndexPath.< infix(_:_:)(v36 + *(int *)(v52 + 36), v37 + *(int *)(v52 + 36));
          v39 = v37;
          v14 = (char *)v36;
          sub_1000073A0(v39, v33);
          sub_1000073A0(v36, v33);
          if ((v38 & 1) != 0)
          {
            if (v35 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v32, a2 + v31, 1, v52);
              v42 = v48;
              v41 = v49;
            }
            else
            {
              v40 = v35 == a2;
              v42 = v48;
              v41 = v49;
              if (!v40)
                swift_arrayInitWithTakeBackToFront(v32, a2 + v31);
            }
            v55 += v31;
          }
          else
          {
            v43 = v53;
            v44 = v53 + v31;
            v53 += v31;
            if (v35 < v43 || v32 >= v43)
            {
              swift_arrayInitWithTakeFrontToBack(v32, v44, 1, v52);
              v34 = a2;
              v42 = v48;
              v41 = v49;
            }
            else
            {
              v42 = v48;
              if (v35 != v43)
                swift_arrayInitWithTakeBackToFront(v32, v44);
              v34 = a2;
              v41 = v49;
            }
          }
          v29 = v53;
          if (v53 <= v42)
            break;
          a2 = v34;
          a3 = v32;
        }
        while (v34 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v18, v52);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v49 = a4 + v20;
    v53 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v23 = v50;
      do
      {
        sub_10000735C(a2, (uint64_t)v14, v23);
        v24 = v51;
        sub_10000735C(a4, v51, v23);
        v25 = static IndexPath.< infix(_:_:)(&v14[*(int *)(v52 + 36)], v24 + *(int *)(v52 + 36));
        sub_1000073A0(v24, v23);
        sub_1000073A0((uint64_t)v14, v23);
        v26 = v55;
        if ((v25 & 1) != 0)
        {
          v27 = a2 + v16;
          if (v55 < a2 || v55 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v52);
          }
          else if (v55 == a2)
          {
            v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v55, a2);
          }
        }
        else
        {
          v28 = v54 + v16;
          if (v55 < v54 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v52);
          }
          else if (v55 != v54)
          {
            swift_arrayInitWithTakeBackToFront(v55, v54);
          }
          v54 = v28;
          v27 = a2;
        }
        v55 = v26 + v16;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_60:
    v47(&v55, &v54, &v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1002D5FAC(uint64_t *a1)
{
  uint64_t v1;

  sub_1002BE1AC(*a1, v1, (void (*)(uint64_t, uint64_t))sub_1002BAE40);
}

void sub_1002D5FD0()
{
  uint64_t *v0;

  sub_1002BE2CC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002D5FDC(uint64_t *a1)
{
  return sub_1002D2BCC(*a1);
}

NSString sub_1002D5FF4(uint64_t *a1)
{
  return sub_1002D2CE0(*a1);
}

uint64_t sub_1002D600C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v3 = v2;
  v19 = a2;
  v5 = sub_10002A750(&qword_100654918);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = _swiftEmptyArrayStorage;
    if (!v9)
      return (uint64_t)v10;
    v20 = _swiftEmptyArrayStorage;
    result = sub_1003D8548(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v20;
    v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18)
      {
        v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      }
      else
      {
        v13 = *(void **)(a1 + 8 * v12 + 32);
        swift_unknownObjectRetain(v13);
      }
      sub_1002C17D8(v13, v19, v8);
      if (v3)
      {
        swift_release();
        swift_unknownObjectRelease(v13);
        return (uint64_t)v10;
      }
      v3 = 0;
      swift_unknownObjectRelease(v13);
      v20 = v10;
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1003D8548(v14 > 1, v15 + 1, 1);
        v10 = v20;
      }
      ++v12;
      v10[2] = v15 + 1;
      sub_10000F614((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, &qword_100654918);
      if (v9 == v12)
        return (uint64_t)v10;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D61F4(uint64_t a1, uint64_t a2)
{
  return sub_1002D6208(a1, a2);
}

uint64_t sub_1002D6208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t result;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v61;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  void (*v74)(char *, uint64_t, uint64_t, __n128);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char v82[24];
  char v83[32];
  char *v84;

  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  v80 = v9;
  __chkstk_darwin(v8);
  v78 = (uint64_t)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v65 = (uint64_t)v62 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v84 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v16);
  v18 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(a1 + 16);
  if (v77)
  {
    v62[1] = v2;
    v76 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v69 = qword_100645F38;
    v19 = (uint64_t *)(a2 + qword_100645F30);
    v20 = *(_QWORD *)(v14 + 72);
    v74 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
    v75 = v20;
    v62[0] = a1;
    v21 = swift_bridgeObjectRetain(a1);
    v22 = 0;
    v81 = _swiftEmptyArrayStorage;
    v71 = v14;
    v72 = v13;
    v70 = v18;
    v73 = v19;
    v64 = a2;
    v63 = v7;
    while (1)
    {
      v74(v18, v76 + v75 * v22, v13, v21);
      v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v68)(v18, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13) == 1)
      {
        a1 = v62[0];
        goto LABEL_33;
      }
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v84, v18, v13);
      if (*(_BYTE *)(a2 + v69) == 1)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v23 = type metadata accessor for Logger(0);
        v24 = sub_100012DC4(v23, (uint64_t)qword_100645EC0);
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.fault.getter(v25);
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "Attempting to read sectionMetadata while it is being modified", v27, 2u);
          swift_slowDealloc(v27, -1, -1);
        }

      }
      v28 = *v19;
      v29 = v19[1];
      v30 = v19[2];
      if (*v19)
      {
        swift_bridgeObjectRetain(*v19);
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRetain(v30);
        v31 = v30;
      }
      else
      {
        v67 = v19[1];
        v66 = *((unsigned __int8 *)v19 + 24);
        v32 = sub_10002A750((uint64_t *)&unk_100646400);
        v33 = swift_allocObject(v32, 24, 7);
        *(_QWORD *)(v33 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        {
          result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
          if (result)
          {
            v56 = result;
            if (result < 1)
            {
              __break(1u);
              return result;
            }
            v57 = &_swiftEmptyArrayStorage[4];
            v19 = v73;
            do
            {
              v58 = *v57++;
              swift_weakAssign(v58 + 56, 0);
              swift_beginAccess(v58 + 64, v82, 1, 0);
              v59 = *(_QWORD *)(v58 + 64);
              *(_QWORD *)(v58 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease(v59);
              --v56;
            }
            while (v56);
          }
        }
        sub_100070B1C(v33);
        v28 = v34;
        v29 = v35;
        v31 = v36;
        v38 = v37;
        swift_release();
        v39 = v38 & 1;
        v40 = *v19;
        v41 = v19[1];
        v42 = v19[2];
        *v19 = v28;
        v19[1] = v29;
        v19[2] = v31;
        *((_BYTE *)v19 + 24) = v39;
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRetain(v31);
        v43 = v41;
        a2 = v64;
        sub_1000072F0(v40, v43, v42);
        sub_1000072F0(0, v67, v30);
        v7 = v63;
      }
      v44 = sub_1000F8FE4(v84, v28);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v29);
      v45 = swift_bridgeObjectRelease(v28);
      if (v44)
      {
        v46 = v44 + *(_QWORD *)(*(_QWORD *)v44 + 144);
        swift_beginAccess(v46, v83, 0, 0);
        sub_10002B1E8(v46, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v45 = swift_release();
        v47 = 0;
      }
      else
      {
        v47 = 1;
      }
      v14 = v71;
      v13 = v72;
      v18 = v70;
      v19 = v73;
      v48 = v79;
      v49 = v80;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v80 + 56))(v7, v47, 1, v79, v45);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v84, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v7, 1, v48) == 1)
      {
        sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
      }
      else
      {
        v50 = v65;
        sub_10001F580((uint64_t)v7, v65, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F580(v50, v78, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native(v81) & 1) == 0)
          v81 = (_QWORD *)sub_100454EEC(0, v81[2] + 1, 1, (unint64_t)v81);
        v52 = v81[2];
        v51 = v81[3];
        if (v52 >= v51 >> 1)
          v81 = (_QWORD *)sub_100454EEC(v51 > 1, v52 + 1, 1, (unint64_t)v81);
        v53 = v80;
        v54 = v81;
        v81[2] = v52 + 1;
        sub_10001F580(v78, (uint64_t)v54+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v52, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      if (++v22 == v77)
      {
        a1 = v62[0];
        v68(v18, 1, 1, v13, v21);
        goto LABEL_33;
      }
    }
  }
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
  v61 = swift_bridgeObjectRetain(a1);
  v81 = _swiftEmptyArrayStorage;
  v60(v18, 1, 1, v13, v61);
LABEL_33:
  swift_bridgeObjectRelease(a1);
  return (uint64_t)v81;
}

uint64_t sub_1002D6898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = *(_QWORD *)(a2 + 16);
        swift_unknownObjectRelease(v6);
        if (v7 == v8)
          return v5;
      }
      else if (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v5 + 32) + 16) == *(_QWORD *)(a2 + 16))
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_1002D6990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v1 = v0;
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100012DC4(v2, (uint64_t)qword_100654350);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIRemindersListViewController: Pencil hover interaction ended -- removing uncommitted reminder if it has not input", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
  ObjectType = swift_getObjectType(v8, v9);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 + 8) + 320))(ObjectType);
}

uint64_t sub_1002D6A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v1 + 608) = 0;
  *(_OWORD *)(v1 + 592) = 0u;
  v3 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  *(_QWORD *)(v1 + 16) = sub_100022FF8;
  *(_QWORD *)(v1 + 24) = v3;
  v4 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  *(_QWORD *)(v1 + 32) = sub_1002DC398;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  *(_QWORD *)(v1 + 48) = sub_1002DC3A0;
  *(_QWORD *)(v1 + 56) = v5;
  v6 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  *(_QWORD *)(v1 + 64) = sub_1002DC3A0;
  *(_QWORD *)(v1 + 72) = v6;
  v7 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  *(_QWORD *)(v1 + 80) = sub_1000234F8;
  *(_QWORD *)(v1 + 88) = v7;
  v8 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  *(_QWORD *)(v1 + 96) = sub_1000234F8;
  *(_QWORD *)(v1 + 104) = v8;
  v9 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  *(_QWORD *)(v1 + 112) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 120) = v9;
  v10 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  *(_QWORD *)(v1 + 128) = sub_1002DC3D0;
  *(_QWORD *)(v1 + 136) = v10;
  v11 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  *(_QWORD *)(v1 + 144) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 152) = v11;
  v12 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  *(_QWORD *)(v1 + 160) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 168) = v12;
  v13 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  *(_QWORD *)(v1 + 176) = sub_1002DC3D8;
  *(_QWORD *)(v1 + 184) = v13;
  v14 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a1);
  *(_QWORD *)(v1 + 192) = sub_1002DC3E0;
  *(_QWORD *)(v1 + 200) = v14;
  v15 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  *(_QWORD *)(v1 + 208) = sub_1002DC400;
  *(_QWORD *)(v1 + 216) = v15;
  v16 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  *(_QWORD *)(v1 + 224) = sub_1002DC41C;
  *(_QWORD *)(v1 + 232) = v16;
  v17 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, a1);
  *(_QWORD *)(v1 + 240) = sub_1002DC3B8;
  *(_QWORD *)(v1 + 248) = v17;
  v18 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  *(_QWORD *)(v1 + 256) = sub_1002DC438;
  *(_QWORD *)(v1 + 264) = v18;
  v19 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a1);
  *(_QWORD *)(v1 + 272) = sub_1002DC440;
  *(_QWORD *)(v1 + 280) = v19;
  v20 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  *(_QWORD *)(v1 + 288) = sub_1002DC460;
  *(_QWORD *)(v1 + 296) = v20;
  v21 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, a1);
  *(_QWORD *)(v1 + 304) = sub_1002DC480;
  *(_QWORD *)(v1 + 312) = v21;
  v22 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a1);
  *(_QWORD *)(v1 + 320) = sub_1002DC488;
  *(_QWORD *)(v1 + 328) = v22;
  v23 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, a1);
  *(_QWORD *)(v1 + 336) = sub_1002DC490;
  *(_QWORD *)(v1 + 344) = v23;
  v24 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, a1);
  *(_QWORD *)(v1 + 352) = sub_1002DC498;
  *(_QWORD *)(v1 + 360) = v24;
  v25 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, a1);
  *(_QWORD *)(v1 + 368) = sub_1002DC4B8;
  *(_QWORD *)(v1 + 376) = v25;
  v26 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, a1);
  *(_QWORD *)(v1 + 384) = sub_1002DC4C4;
  *(_QWORD *)(v1 + 392) = v26;
  v27 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, a1);
  *(_QWORD *)(v1 + 400) = sub_1002DC4E0;
  *(_QWORD *)(v1 + 408) = v27;
  v28 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, a1);
  *(_QWORD *)(v1 + 416) = sub_1002DC4FC;
  *(_QWORD *)(v1 + 424) = v28;
  v29 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, a1);
  *(_QWORD *)(v1 + 432) = sub_1002DC514;
  *(_QWORD *)(v1 + 440) = v29;
  v30 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, a1);
  *(_QWORD *)(v1 + 448) = sub_1002DC51C;
  *(_QWORD *)(v1 + 456) = v30;
  v31 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, a1);
  *(_QWORD *)(v1 + 464) = sub_1002DC53C;
  *(_QWORD *)(v1 + 472) = v31;
  v32 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, a1);
  *(_QWORD *)(v1 + 480) = sub_1002DC544;
  *(_QWORD *)(v1 + 488) = v32;
  v33 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, a1);
  *(_QWORD *)(v1 + 496) = sub_1002DC54C;
  *(_QWORD *)(v1 + 504) = v33;
  v34 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, a1);
  *(_QWORD *)(v1 + 512) = sub_1002DC54C;
  *(_QWORD *)(v1 + 520) = v34;
  v35 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, a1);
  *(_QWORD *)(v1 + 528) = sub_1002DC564;
  *(_QWORD *)(v1 + 536) = v35;
  v36 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, a1);
  *(_QWORD *)(v1 + 544) = sub_1002DC3A0;
  *(_QWORD *)(v1 + 552) = v36;
  v37 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, a1);
  *(_QWORD *)(v1 + 560) = sub_1002DC56C;
  *(_QWORD *)(v1 + 568) = v37;
  v38 = swift_allocObject(&unk_1005FE7D0, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16, a1);
  *(_QWORD *)(v1 + 576) = sub_1002DC574;
  *(_QWORD *)(v1 + 584) = v38;
  return v1;
}

id sub_1002D7104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  _QWORD *v10;
  Class isa;
  id v12;
  _QWORD v14[8];

  v3 = v2;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v6 = *(_QWORD *)(v5 + 48);
  v7 = *(_QWORD *)(v5 + 56);
  ObjectType = swift_getObjectType(v6, a2);
  v14[7] = v6;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
  v9 = sub_1001B77E0(a1);
  swift_release();
  v14[2] = v3;
  v14[3] = a1;
  v10 = sub_10046AA48((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1002DC5A4, (uint64_t)v14, (uint64_t)v9);
  swift_bridgeObjectRelease(v9);
  sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v12;
}

id sub_1002D7204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  Class isa;
  id v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter);
  v8 = *(_QWORD **)(v7 + 48);
  v9 = *(_QWORD *)(v7 + 56);
  ObjectType = swift_getObjectType(v8, v10);
  v25 = v8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
  v12 = sub_1001B7D88(a1);
  swift_release();
  v23 = v2;
  v24 = a1;
  v13 = sub_10046AA48((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1002DC5A4, (uint64_t)v22, (uint64_t)v12);
  swift_bridgeObjectRelease(v12);
  v25 = v13;
  sub_10002B1E8(a1, (uint64_t)&v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_1005FE7F8, v15 + v6, v14 | 7);
  sub_10001F580((uint64_t)&v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v17 = static TTRDebugMenuUtilities.objectIDContextualActions(provideObjectID:)(sub_1002DC970, v16);
  swift_release();
  sub_100450B70(v17);
  v18 = v25;
  sub_100005ED8(0, (unint64_t *)&unk_100654960, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  v20 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v20;
}

void sub_1002D73C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v14[24];

  v1 = sub_10002A750(qword_100657440);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1002C4654();
  if (v4)
  {
    v5 = v4;
    -[NSObject endEditing:](v4, "endEditing:", 1);

  }
  v6 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController);
  if (v6)
  {
    v7 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession.SelectionState(0);
    swift_storeEnumTagMultiPayload(v3, v7, 2);
    v8 = type metadata accessor for TTRIRemindersListMultipleSelectionInteractionSession(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 0, 1, v8);
    v9 = v6
       + OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession;
    swift_beginAccess(v6+ OBJC_IVAR____TtC9Reminders52TTRIRemindersListAutomaticSubtaskSelectionController_currentMultipleSelectionInteractionSession, v14, 33, 0);
    swift_retain();
    sub_100041F2C((uint64_t)v3, v9, qword_100657440);
    swift_endAccess(v14);
    swift_release();
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter), v11);
    (*(void (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 264))(ObjectType);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002D7504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  v0 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v1);
  v4 = (char *)&loc_1002D7584 + dword_1002D769C[swift_getEnumCaseMultiPayload(v3, v0)];
  __asm { BR              X10 }
}

uint64_t sub_1002D7594()
{
  uint64_t v0;

  sub_10001F544(v0, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  return 0;
}

_QWORD *sub_1002D76D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = swift_allocObject(&unk_1005FE7A8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v1[2] = sub_10002F968;
  v1[3] = v3;
  v4 = swift_allocObject(&unk_1005FE7A8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v1[4] = sub_1002DC320;
  v1[5] = v4;
  v5 = swift_allocObject(&unk_1005FE7A8, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v1[6] = sub_1002DC328;
  v1[7] = v5;
  v6 = swift_allocObject(&unk_1005FE7A8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v1[8] = sub_1002DC330;
  v1[9] = v6;
  return v1;
}

double sub_1002D77B0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  double v11;
  uint64_t v13;

  v0 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - v4;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter(v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  if (EnumCaseMultiPayload)
  {
    v11 = 0.0;
    if (EnumCaseMultiPayload != 1)
      return v11;
    v5 = v2;
  }
  sub_10001F580((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v5[*(int *)(v0 + 24)])
    v11 = UITableViewAutomaticDimension;
  else
    v11 = 0.0;
  sub_10001F544((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return v11;
}

void sub_1002D78E4()
{
  uint64_t v0;

  sub_1002C68E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_1002D78EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C6A10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002D78F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D7908()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002D792C()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + qword_10065D8D8);
  if (result)
    return objc_msgSend(result, "performBatchUpdates:completion:", 0, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002D7958()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1002D7968(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v1[2] = sub_100022FF8;
  v1[3] = v3;
  v4 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, a1);
  v1[4] = sub_1002DCF34;
  v1[5] = v4;
  v5 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v1[6] = sub_1002DCF3C;
  v1[7] = v5;
  v6 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v1[8] = sub_1002DCF44;
  v1[9] = v6;
  v7 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  v1[10] = sub_1002DCF4C;
  v1[11] = v7;
  v8 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  v1[12] = sub_1002DC3A0;
  v1[13] = v8;
  v9 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v1[14] = sub_1002DCF6C;
  v1[15] = v9;
  v10 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v1[16] = sub_10002E564;
  v1[17] = v10;
  v11 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v1[18] = sub_10002E564;
  v1[19] = v11;
  v12 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  v1[20] = sub_1002DCF90;
  v1[21] = v12;
  v13 = swift_allocObject(&unk_1005FE8C0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  v1[22] = sub_1002DCF98;
  v1[23] = v13;
  return v1;
}

void sub_1002D7B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[16];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  v3 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v27[8] = *(_QWORD *)(v3 - 8);
  v27[9] = v3;
  __chkstk_darwin(v3);
  v27[10] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel(0);
  v27[12] = *(_QWORD *)(v5 - 8);
  v27[13] = v5;
  __chkstk_darwin(v5);
  v27[5] = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100654970);
  __chkstk_darwin(v7);
  v27[11] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v27[6] = (char *)v27 - v10;
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v27[7] = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
  __chkstk_darwin(v28);
  v29 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRRemindersListTip(0);
  __chkstk_darwin(v14);
  v27[15] = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRTemplatePublicLinkData(0);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v18 = sub_10002A750((uint64_t *)&unk_100665210);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v20 = type metadata accessor for TTRRemindersListViewModel.HashtagsState(0);
  __chkstk_darwin(v20);
  v27[14] = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  __chkstk_darwin(v22);
  v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a2;
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v25);
  v26 = (char *)&loc_1002D7E6C + *((int *)qword_1002D9040 + swift_getEnumCaseMultiPayload(v24, v22));
  __asm { BR              X10 }
}

uint64_t sub_1002D7E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  char v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  unsigned int v73;

  v3 = *(_QWORD *)(v0 + 136);
  sub_10001F580(v1, v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  v4 = type metadata accessor for TTRIRemindersListEditableSectionCell(0);
  v5 = *(void **)(v0 + 160);
  v6 = swift_dynamicCastClass(v5, v4);
  if (v6)
  {
    v7 = v6;
    *(_QWORD *)(v0 + 120) = v4;
    v8 = v6 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_delegate;
    *(_QWORD *)(v8 + 8) = &off_1005FDDA0;
    v9 = *(char **)(v0 + 152);
    swift_unknownObjectWeakAssign(v8, v9);
    v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter];
    v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
    v12 = (uint64_t *)(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule);
    v13 = swift_beginAccess(v7 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListEditableSectionCell_nameModule, v2 - 112, 0, 0);
    v14 = *v12;
    if (v14)
    {
      v15 = v14 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
      swift_beginAccess(v14 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, v0 + 168, 0, 0);
      v16 = v15;
      v17 = *(_QWORD *)(v0 + 48);
      sub_10000735C(v16, v17, (uint64_t *)&unk_100654970);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 48))(v17, 1, *(_QWORD *)(v0 + 104));
      v19 = *(_QWORD *)(v0 + 144);
      if (v18)
      {
        v20 = v5;
        swift_unknownObjectRetain(v14);
        sub_1000073A0(v17, (uint64_t *)&unk_100654970);
        v21 = *(_QWORD *)(v0 + 56);
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 56))(v21, 1, 1, *(_QWORD *)(v0 + 72));
      }
      else
      {
        v34 = v17;
        *(_QWORD *)(v0 + 112) = v11;
        v35 = v3;
        v36 = v17;
        v37 = *(_QWORD *)(v0 + 40);
        sub_10002B1E8(v34, v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
        v38 = v5;
        swift_unknownObjectRetain(v14);
        v39 = v36;
        v3 = v35;
        v11 = *(_QWORD *)(v0 + 112);
        sub_1000073A0(v39, (uint64_t *)&unk_100654970);
        v21 = *(_QWORD *)(v0 + 56);
        sub_10002B1E8(v37, v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10001F544(v37, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
        (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 56))(v21, 0, 1, *(_QWORD *)(v0 + 72));
      }
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 56);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 64) + 56))(v30, 1, 1, *(_QWORD *)(v0 + 72), v13);
      v31 = v5;
      v21 = v30;
      v19 = *(_QWORD *)(v0 + 144);
    }
    ObjectType = swift_getObjectType(v10, v32);
    v41 = *(_QWORD *)(v11 + 8);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 224))(v19, v21, ObjectType, v41);
    sub_1000073A0(v21, (uint64_t *)&unk_100640EB0);
    if ((v42 & 1) == 0)
      goto LABEL_28;
    v43 = objc_msgSend(v9, "parentViewController");
    if (v43)
    {
      v45 = v43;
      v46 = swift_getObjectType(v43, v44);
      v47 = swift_conformsToProtocol2(v46, &protocol descriptor for TTRIShowRemindersContainerViewControllerType);
      if (v47)
        v48 = v47;
      else
        v48 = 0;
      if (v47)
        v49 = v45;
      else
        v49 = 0;
      if (v49)
      {
        v50 = *(_QWORD *)(v48 + 8);
LABEL_27:
        (*(void (**)(uint64_t, void *, uint64_t, char *, uint64_t, uint64_t))(v41 + 256))(v19, v49, v50, v9, ObjectType, v41);
        swift_unknownObjectRelease(v49);
        sub_1003CEF24(v2 - 240);
LABEL_28:
        *(_QWORD *)(v0 + 152) = v7;
        v51 = *(_QWORD *)(v0 + 80);
        sub_10002B1E8(v19, v51, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10000F614(v3 + *(int *)(*(_QWORD *)(v0 + 128) + 20), v0 + 368, &qword_100649B60);
        sub_10000F614(v0 + 368, v2 - 240, &qword_100649B60);
        if (sub_100171C50(v2 - 240) == 1)
        {
          v52 = 0;
          *(_QWORD *)(v0 + 8) = 0;
          v53 = 0;
          v54 = 0;
          v55 = 0;
          v56 = 0;
          v57 = 0;
          *(_DWORD *)(v0 + 20) = 0;
          *(_DWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 112) = 0;
          *(_QWORD *)(v0 + 64) = 0;
          *(_QWORD *)(v0 + 72) = 0;
          *(_QWORD *)(v0 + 48) = 0;
          *(_QWORD *)(v0 + 56) = 0;
          *(_QWORD *)(v0 + 40) = 0;
          *(_DWORD *)(v0 + 144) = 0;
          *(_DWORD *)(v0 + 32) = 0;
          *(_DWORD *)(v0 + 36) = 255;
          *(_DWORD *)(v0 + 28) = 3;
          v58 = -64;
          v59 = 0xE000000000000000;
        }
        else
        {
          sub_10000F614(v0 + 368, v0 + 192, &qword_100649B60);
          *(_DWORD *)(v0 + 144) = *(unsigned __int8 *)(v0 + 313);
          *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 264);
          v60 = *(_QWORD *)(v0 + 272);
          *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 280);
          *(_QWORD *)(v0 + 72) = v60;
          v61 = *(_QWORD *)(v0 + 288);
          *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 296);
          *(_QWORD *)(v0 + 56) = v61;
          *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 304);
          LODWORD(v61) = *(unsigned __int8 *)(v0 + 312);
          v62 = *(unsigned __int8 *)(v0 + 260);
          *(_DWORD *)(v0 + 32) = *(unsigned __int8 *)(v0 + 259);
          *(_DWORD *)(v0 + 36) = v61;
          *(_DWORD *)(v0 + 24) = *(unsigned __int8 *)(v0 + 258);
          *(_DWORD *)(v0 + 28) = v62;
          *(_DWORD *)(v0 + 20) = *(unsigned __int8 *)(v0 + 257);
          v53 = *(_QWORD *)(v0 + 216);
          *(_QWORD *)(v0 + 8) = *(_QWORD *)(v0 + 208);
          v54 = *(_QWORD *)(v0 + 224);
          v55 = *(_QWORD *)(v0 + 232);
          v56 = *(_QWORD *)(v0 + 240);
          v57 = *(_QWORD *)(v0 + 248);
          v58 = *(_BYTE *)(v0 + 256);
          v52 = *(_QWORD *)(v0 + 192);
          v59 = *(_QWORD *)(v0 + 200);
        }
        v63 = v51;
        v64 = *(_QWORD *)(v0 + 88);
        sub_10001F580(v63, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v65 = v64 + *(int *)(*(_QWORD *)(v0 + 104) + 20);
        *(_QWORD *)v65 = v52;
        *(_QWORD *)(v65 + 8) = v59;
        *(_QWORD *)(v65 + 16) = *(_QWORD *)(v0 + 8);
        *(_QWORD *)(v65 + 24) = v53;
        *(_QWORD *)(v65 + 32) = v54;
        *(_QWORD *)(v65 + 40) = v55;
        *(_QWORD *)(v65 + 48) = v56;
        *(_QWORD *)(v65 + 56) = v57;
        *(_BYTE *)(v65 + 64) = v58;
        *(_BYTE *)(v65 + 65) = *(_DWORD *)(v0 + 20);
        *(_BYTE *)(v65 + 66) = *(_DWORD *)(v0 + 24);
        *(_BYTE *)(v65 + 67) = *(_DWORD *)(v0 + 32);
        *(_BYTE *)(v65 + 68) = *(_DWORD *)(v0 + 28);
        v66 = *(_QWORD *)(v0 + 72);
        *(_QWORD *)(v65 + 72) = *(_QWORD *)(v0 + 112);
        *(_QWORD *)(v65 + 80) = v66;
        v67 = *(_QWORD *)(v0 + 56);
        *(_QWORD *)(v65 + 88) = *(_QWORD *)(v0 + 64);
        *(_QWORD *)(v65 + 96) = v67;
        v68 = *(_QWORD *)(v0 + 40);
        *(_QWORD *)(v65 + 104) = *(_QWORD *)(v0 + 48);
        *(_QWORD *)(v65 + 112) = v68;
        *(_BYTE *)(v65 + 120) = *(_DWORD *)(v0 + 36);
        *(_BYTE *)(v65 + 121) = *(_DWORD *)(v0 + 144);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 96) + 56))(v64, 0, 1);
        sub_1002DC338(v0 + 368);
        v69 = *(void **)(v0 + 152);
        sub_1003CF02C(v64);
        v70 = *(_QWORD *)(v0 + 136);
        v71 = *(_BYTE *)(v70 + *(int *)(*(_QWORD *)(v0 + 128) + 24));
        v72 = *(_QWORD *)(v0 + 120);
        *(_QWORD *)(v0 + 352) = v69;
        *(_QWORD *)(v0 + 360) = v72;
        v73 = objc_msgSendSuper2((objc_super *)(v0 + 352), "isHidden");
        *(_QWORD *)(v0 + 336) = v69;
        *(_QWORD *)(v0 + 344) = v72;
        objc_msgSendSuper2((objc_super *)(v0 + 336), "setHidden:", (v71 & 1) == 0);
        *(_QWORD *)(v0 + 320) = v69;
        *(_QWORD *)(v0 + 328) = v72;
        if (v73 != objc_msgSendSuper2((objc_super *)(v0 + 320), "isHidden"))
          objc_msgSend(v69, "setNeedsLayout");

        v33 = v70;
        return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      }

    }
    else
    {
      v49 = 0;
    }
    v50 = 0;
    goto LABEL_27;
  }
  if (qword_10063D5F0 != -1)
    swift_once(&qword_10063D5F0, sub_1002C2580);
  v22 = type metadata accessor for Logger(0);
  sub_100012DC4(v22, (uint64_t)qword_100654350);
  v23 = v5;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.fault.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v26 = 138412290;
    *(_QWORD *)(v2 - 240) = v23;
    v28 = v23;
    v3 = *(_QWORD *)(v0 + 136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 240, v2 - 232, v26 + 4, v26 + 12);
    *v27 = v23;

    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to cast cell to editableSectionCell {cell: %@}", v26, 0xCu);
    v29 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v27, 1, v29);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {

  }
  v33 = v3;
  return sub_10001F544(v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
}

void sub_1002D9074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  v0 = type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.iOSListCasesOnly.getter(v1);
  v4 = (char *)&loc_1002D90E4 + dword_1002D9164[swift_getEnumCaseMultiPayload(v3, v0)];
  __asm { BR              X10 }
}

uint64_t sub_1002D90F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;

  sub_10001F544(v1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem);
  v2 = *(void **)(v0 + qword_10065D8D8);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1002D9164);
  }
  objc_msgSend(v2, "isEditing");
  sub_10032B020();
  return v3 & 1;
}

id sub_1002D9198(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  void (**v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (**v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (**v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (**v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t (**v21)(uint64_t, uint64_t);
  uint64_t v22;
  double v23;
  uint64_t (**v24)(uint64_t, uint64_t);
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v2[qword_100653D08], 0);
  *(_QWORD *)&v2[qword_100653D48] = 0;
  *(_QWORD *)&v2[qword_100653D50] = _swiftEmptyDictionarySingleton;
  v5 = &v2[qword_100653D68];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, a1);
  v7 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D10];
  *v7 = sub_1002DC250;
  v7[1] = (void (*)(uint64_t, uint64_t))v6;
  v8 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  v9 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D18];
  *v9 = sub_1002DC270;
  v9[1] = (uint64_t (*)(uint64_t, uint64_t))v8;
  v10 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v11 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D20];
  *v11 = sub_1002DC278;
  v11[1] = (void (*)(uint64_t, uint64_t))v10;
  v12 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  v13 = &v2[qword_100653D28];
  *(_QWORD *)v13 = sub_1002DC280;
  *((_QWORD *)v13 + 1) = v12;
  v14 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, a1);
  v15 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D30];
  *v15 = sub_1002DC288;
  v15[1] = (void (*)(uint64_t, uint64_t))v14;
  v16 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  v17 = (void (**)(uint64_t, uint64_t))&v2[qword_100653D38];
  *v17 = sub_1002DC2A0;
  v17[1] = (void (*)(uint64_t, uint64_t))v16;
  v18 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  v19 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D40];
  *v19 = sub_1002DC2A8;
  v19[1] = (uint64_t (*)(uint64_t, uint64_t))v18;
  v20 = swift_allocObject(&unk_1005FE758, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  v21 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D58];
  *v21 = sub_1002DC2C0;
  v21[1] = (uint64_t (*)(uint64_t, uint64_t))v20;
  v22 = swift_allocObject(&unk_1005FE758, 24, 7);
  *(_QWORD *)&v23 = swift_unknownObjectWeakInit(v22 + 16, a1).n128_u64[0];
  v24 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_100653D60];
  *v24 = sub_1002DC2C8;
  v24[1] = (uint64_t (*)(uint64_t, uint64_t))v22;
  v26.receiver = v2;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "init", v23);
}

void sub_1002D9440()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _WORD v20[12];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_initialFrameForLoadingView];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  v3 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_preferredChromelessBarStates;
  v20[0] = 0;
  v4 = sub_10002A750((uint64_t *)&unk_1006549B0);
  swift_allocObject(v4, 32, 7);
  *(_QWORD *)&v0[v3] = TTRObservableViewModel.init(value:)(v20);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_scrollingController] = 0;
  v5 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_itemStateTracker;
  v6 = type metadata accessor for TTRRemindersListItemStateTracker(0);
  swift_allocObject(v6, 24, 7);
  *(_QWORD *)&v0[v5] = TTRRemindersListItemStateTracker.init()();
  v7 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_pencilAutoCommitTracker;
  v8 = type metadata accessor for TTRIRemindersListPencilAutoCommitTracker();
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_QWORD *)&v1[v7] = v9;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_chromelessToolbarUpdater] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___treeView] = 0;
  v10 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_canMoveItemReturnValueTempOverrides;
  v11 = type metadata accessor for TTRIRemindersListTemporaryItemSet();
  v12 = swift_allocObject(v11, 32, 7);
  *(_QWORD *)(v12 + 24) = &_swiftEmptySetSingleton;
  v13 = sub_100005ED8(0, (unint64_t *)&qword_100640F30, OS_dispatch_queue_ptr);
  v14 = static OS_dispatch_queue.main.getter(v13);
  v15 = type metadata accessor for TTRDeferredAction(0);
  swift_allocObject(v15, 56, 7);
  v16 = TTRDeferredAction.init(queue:)(v14);
  *(_QWORD *)(v12 + 16) = v16;
  swift_beginAccess(v16 + 16, v20, 1, 0);
  *(_QWORD *)(v16 + 24) = &off_1006006D0;
  swift_unknownObjectWeakAssign(v16 + 16, v12);
  *(_QWORD *)&v1[v10] = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController] = 0;
  v17 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem];
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 0;
  v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_isHighlightingItemsProgrammatically] = 0;
  v19(&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_firstVisibleItemToRestore], 1, 1, v18);
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_internalFocusedCell] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___completedTasksRotor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___incompleteTasksRotor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController____lazy_storage___overdueTasksRotor] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListContentViewController.swift", 54, 2, 43, 0);
  __break(1u);
}

id sub_1002D96C4(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (**v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (**v12)(uint64_t, uint64_t);
  uint64_t v13;
  void (**v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (**v16)(uint64_t, uint64_t);
  uint64_t v17;
  double v18;
  uint64_t (**v19)(uint64_t, uint64_t);
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  swift_unknownObjectWeakInit(&v2[qword_10065B7C8], 0);
  *(_QWORD *)&v2[qword_10065B808] = 0;
  v5 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, a1);
  v6 = &v2[qword_10065B7D0];
  *(_QWORD *)v6 = sub_1002DC2D0;
  *((_QWORD *)v6 + 1) = v5;
  v7 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1);
  v8 = &v2[qword_10065B7D8];
  *(_QWORD *)v8 = sub_1002DC2D8;
  *((_QWORD *)v8 + 1) = v7;
  v9 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, a1);
  v10 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B7E0];
  *v10 = sub_1002DC2E0;
  v10[1] = (uint64_t (*)(uint64_t, uint64_t))v9;
  v11 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v12 = (void (**)(uint64_t, uint64_t))&v2[qword_10065B7E8];
  *v12 = sub_1002DC288;
  v12[1] = (void (*)(uint64_t, uint64_t))v11;
  v13 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  v14 = (void (**)(uint64_t, uint64_t))&v2[qword_10065B7F0];
  *v14 = sub_1002DC288;
  v14[1] = (void (*)(uint64_t, uint64_t))v13;
  v15 = swift_allocObject(&unk_1005FE780, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B7F8];
  *v16 = sub_1002DC2E8;
  v16[1] = (uint64_t (*)(uint64_t, uint64_t))v15;
  v17 = swift_allocObject(&unk_1005FE780, 24, 7);
  *(_QWORD *)&v18 = swift_unknownObjectWeakInit(v17 + 16, a1).n128_u64[0];
  v19 = (uint64_t (**)(uint64_t, uint64_t))&v2[qword_10065B800];
  *v19 = sub_1002DC304;
  v19[1] = (uint64_t (*)(uint64_t, uint64_t))v17;
  v21.receiver = v2;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, "init", v18);
}

uint64_t sub_1002D98CC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  _BYTE v6[2];
  _BYTE v7[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_preferredChromelessBarStates);
  swift_beginAccess(v3 + 16, v7, 0, 0);
  v6[0] = *(_BYTE *)(v3 + 16) & 1;
  v6[1] = a1;
  v4 = sub_1000CE190();
  return TTRObservableViewModel<A>.update(with:forcePublish:)(v6, 0, v4);
}

uint64_t sub_1002D9934()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __int128 v35;

  v1 = v0;
  v2 = sub_10002A750(&qword_100654880);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_100654888);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(v0, "isEditing", v9) & 1) == 0)
  {
    v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter], v12);
    (*(void (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 304))(ObjectType);
    v15 = sub_10002A750(&qword_100654890);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15) != 1)
    {
      v22 = *(int *)(v15 + 48);
      v23 = *(int *)(v5 + 48);
      v35 = *(_OWORD *)&v4[v22];
      sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_OWORD *)&v7[v23] = v35;
      v35 = *(_OWORD *)&v7[*(int *)(v5 + 48)];
      sub_10001F580((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1002C4850((uint64_t)v11, 1);
      v24 = swift_allocObject(&unk_1005FE2D0, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16, v1);
      v25 = swift_allocObject(&unk_1005FE640, 40, 7);
      *(_QWORD *)(v25 + 16) = v24;
      v26 = v35;
      *(_OWORD *)(v25 + 24) = v35;
      v27 = v26;
      swift_unknownObjectRetain(v26);
      v29 = (void *)zalgo.getter(v28);
      v30 = sub_10002A750(&qword_1006548A0);
      dispatch thunk of Promise.then<A>(on:closure:)(v29, sub_1002DC188, v25, v30);
      swift_release();
      swift_release();

      v31 = swift_allocObject(&unk_1005FE2D0, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16, v1);
      v32 = swift_retain();
      v33 = (void *)zalgo.getter(v32);
      v21 = dispatch thunk of Promise.error(on:closure:)(v33, sub_1002DC1A4, v31);
      swift_unknownObjectRelease(v27);
      swift_release();
      swift_release();

      sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      return v21;
    }
    sub_1000073A0((uint64_t)v4, &qword_100654880);
  }
  v16 = type metadata accessor for PromiseError(0);
  v17 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
  v18 = swift_allocError(v16, v17, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, enum case for PromiseError.cancelled(_:), v16);
  v20 = sub_10002A750(&qword_100654898);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  return Promise.init(error:)(v18);
}

void sub_1002D9CA4(void *a1, double a2, double a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  char v12;

  sub_10008A224();
  v12 = 0;
  PassthroughSubject.send(_:)(&v12);
  v6 = objc_msgSend(a1, "view");
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "hitTest:withEvent:", 0, a2, a3);
    if (v8)
    {
      v9 = v8;
      v10 = type metadata accessor for TTRIRemindersListBackgroundView();
      if (swift_dynamicCastClass(v9, v10))
      {
        v11 = v9;
        sub_1002D9934();

        swift_release();
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void *sub_1002D9DA0()
{
  NSObject *v0;
  void *result;
  unsigned __int8 v2;
  NSObject *v3;
  unsigned int v4;

  v0 = sub_1002C26B0();
  result = *(Class *)((char *)&v0->isa + qword_10065D8D8);
  if (result)
  {
    v2 = objc_msgSend(result, "hasActiveDrag");

    if ((v2 & 1) != 0)
      return 0;
    v3 = sub_1002C26B0();
    result = *(Class *)((char *)&v3->isa + qword_10065D8D8);
    if (result)
    {
      v4 = objc_msgSend(result, "hasActiveDrop");

      return (void *)(v4 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D9E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v0 = type metadata accessor for AppEntityID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v29[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMFeatureFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v29[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v8 + 104))(v11, enum case for REMFeatureFlags.viewAnnotation(_:), v7, v9);
  v13 = REMFeatureFlags.isEnabled.getter(v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((v13 & 1) != 0)
  {
    TTRIRemindersListReminderCell.viewModel.getter(v29, v15);
    v16 = v30;
    if (v30)
    {
      v17 = v31;
      v18 = sub_10001413C(v29, v30);
      v19 = *(_QWORD *)(v16 - 8);
      v20 = __chkstk_darwin(v18);
      v22 = (char *)&v29[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v19 + 16))(v22, v20);
      sub_1000073A0((uint64_t)v29, (uint64_t *)&unk_1006547B0);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
      v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v16);
      v24 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter(v23);
      result = sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v24)
      {
        v25 = type metadata accessor for ReminderEntity(0);
        v26 = v24;
        AppEntityID.init(objectID:)(v26);
        v27 = sub_1000175C8((unint64_t *)&unk_1006547C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReminderEntity, (uint64_t)&protocol conformance descriptor for ReminderEntity);
        UIView.setAssociatedAppEntity<A>(entityType:identifier:)(v25, v3, v25, v27);

        return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      }
    }
    else
    {
      return sub_1000073A0((uint64_t)v29, (uint64_t *)&unk_1006547B0);
    }
  }
  return result;
}

id sub_1002DA088()
{
  void *v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSURL *v7;
  void *v8;
  void *v9;
  unint64_t v10;
  Class isa;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  v5 = objc_msgSend(v1, "canOpenURL:", v3);

  if ((_DWORD)v5)
  {
    v6 = objc_msgSend(v0, "sharedApplication");
    URL._bridgeToObjectiveC()(v7);
    v9 = v8;
    v10 = sub_100350BFC((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1000175C8(&qword_100642D50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10051FEC4);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "openURL:options:completionHandler:", v9, isa, 0, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  return v5;
}

uint64_t sub_1002DA1B4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002DA1D8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + 16);
  LOBYTE(a1) = sub_1002C6180(a1);

  return a1 & 1;
}

id sub_1002DA218(void *a1)
{
  uint64_t v1;

  return sub_1002D30C4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002DA224()
{
  return sub_1002D4044() & 1;
}

BOOL sub_1002DA240(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C6130(a1, v1);
}

uint64_t sub_1002DA24C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C5F88(a1, v1);
}

uint64_t sub_1002DA258()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002DA284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v1 = type metadata accessor for TTRRemindersListHighlightTarget(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease(*v6);
      break;
    case 1:
      v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v10))
      {
        case 0u:
          v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v4, v11))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 1u:
          v23 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v4, v23))
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_26:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_25:
              v24 = type metadata accessor for Date(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v4, v24);
              break;
            default:
              break;
          }
LABEL_27:
          v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
          v26 = (char *)v6 + *(int *)(v25 + 20);
          v27 = *((_QWORD *)v26 + 1);
          if (v27)
          {
            swift_bridgeObjectRelease(v27);
            sub_10003E2EC(*((void **)v26 + 2), *((_QWORD *)v26 + 3), *((_QWORD *)v26 + 4), *((_QWORD *)v26 + 5), *((_QWORD *)v26 + 6), *((_QWORD *)v26 + 7), v26[64]);
            v28 = v26[120];
            if (v28 != 255)
              sub_10002B328(*((void **)v26 + 9), *((_QWORD *)v26 + 10), *((_QWORD *)v26 + 11), *((_QWORD *)v26 + 12), *((_QWORD *)v26 + 13), *((_QWORD *)v26 + 14), v28 & 1);
          }
          v16 = *(id *)((char *)v6 + *(int *)(v25 + 44));
          goto LABEL_40;
        case 2u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v29 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v6, 1, v29))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v29))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 3u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v30 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v6, 1, v30))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v30))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 4u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v31 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v6, 1, v31))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v31))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          goto LABEL_41;
        case 5u:
          goto LABEL_13;
        case 6u:
LABEL_39:
          v16 = (id)*v6;
          goto LABEL_40;
        case 7u:
LABEL_9:
          v12 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v0 + v4, 1, v12))
          {
            swift_bridgeObjectRelease(*v6);
            v13 = (char *)v6 + *(int *)(v12 + 20);
            v14 = type metadata accessor for REMHashtagLabelSpecifier(0);
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
          }
          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
          v15 = v6[1];
          if (!v15)
            goto LABEL_41;
          swift_bridgeObjectRelease(v15);
LABEL_13:
          v16 = (id)v6[2];
LABEL_40:

          break;
        case 8u:
LABEL_14:
          v17 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v0 + v4, 1, v17))
          {
            goto LABEL_41;
          }
LABEL_37:
          v18 = type metadata accessor for Date(0);
LABEL_38:
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
          break;
        case 9u:
LABEL_16:
          v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
          v18 = type metadata accessor for AnyTip(0);
          goto LABEL_38;
        default:
          goto LABEL_41;
      }
      break;
    case 0:
      v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 0u:
          v9 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v4, v9))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 1u:
          v19 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          switch(swift_getEnumCaseMultiPayload(v0 + v4, v19))
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_26;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_25;
            default:
              goto LABEL_27;
          }
          goto LABEL_27;
        case 2u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v20 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v20))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 3u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v21 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v6, 1, v21))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v21))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 4u:

          v6 = (_QWORD *)((char *)v6
                        + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
          v22 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v6, 1, v22))
          {
            switch(swift_getEnumCaseMultiPayload(v6, v22))
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_39;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_37;
              default:
                goto LABEL_41;
            }
          }
          break;
        case 5u:
          goto LABEL_13;
        case 6u:
          goto LABEL_39;
        case 7u:
          goto LABEL_9;
        case 8u:
          goto LABEL_14;
        case 9u:
          goto LABEL_16;
        default:
          goto LABEL_41;
      }
      break;
  }
LABEL_41:
  v32 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = v32 + 9;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v32));
  return swift_deallocObject(v0, v33, v3 | 7);
}

void sub_1002DA890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1002C86B8(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)v5, *(_BYTE *)(v5 + 8));
}

uint64_t sub_1002DA908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v3, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v3, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v5 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v5 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 3u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 4u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v5;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v3, 1, v14))
      {
        swift_bridgeObjectRelease(*v5);
        v15 = (char *)v5 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v5[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v5[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v3, 1, v18))
        return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
      break;
    case 9u:
      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
  }
  return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_1002DACD0()
{
  return sub_1002DB0EC((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_1002C8A14);
}

uint64_t sub_1002DACDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DAD00(uint64_t a1)
{
  uint64_t v1;

  return sub_100285290(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1002DAD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release();
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v6))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v3, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v3, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v5 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v5 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 3u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 4u:

      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v5, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v5;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v3, 1, v14))
      {
        swift_bridgeObjectRelease(*v5);
        v15 = (char *)v5 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v5[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v5[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v3, 1, v18))
        return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
      break;
    case 9u:
      v5 = (_QWORD *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
  }
  return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_1002DB0E0()
{
  return sub_1002DB0EC((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_1002C8D50);
}

uint64_t sub_1002DB0EC(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for TTRRemindersListHighlightTarget.TargetItem(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(unsigned __int8 *)(v1 + v3 + *(_QWORD *)(v2 + 64)));
}

uint64_t sub_1002DB138(uint64_t *a1)
{
  return sub_1000F0F98(a1);
}

uint64_t sub_1002DB158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_10002B1E8(v1 + ((v3 + 16) & ~v3), a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

id sub_1002DB1A8(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1004C66CC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1002DB1B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C6794(a1, v1);
}

void sub_1002DB1B8()
{
  uint64_t v0;

  sub_1004C69C0(v0);
}

uint64_t sub_1002DB1C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002DB1D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002DB1E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1003E8D2C(a1, v1);
}

uint64_t sub_1002DB1E8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002DB218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1002D23A4(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002DB284()
{
  uint64_t v0;

  return sub_1003E8D68(v0);
}

void sub_1002DB28C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t (*a9)(uint64_t, _BOOL8))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  _BOOL8 v30;
  uint64_t (*v31)(uint64_t, _BOOL8);
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  _QWORD v43[4];
  _BYTE v44[24];
  _BYTE v45[24];
  _BOOL4 v46;
  int v47;
  _BYTE v48[24];

  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v15 = a2 + 16;
    swift_beginAccess(a2 + 16, v48, 0, 0);
    if (swift_weakLoadStrong(v15))
    {
      if ((*(_BYTE *)(a1 + 25) & 1) != 0)
      {
        if (qword_10063D740 != -1)
          swift_once(&qword_10063D740, sub_1003E8B70);
        v16 = type metadata accessor for Logger(0);
        v17 = sub_100012DC4(v16, (uint64_t)qword_100659AD8);
        v18 = Logger.logObject.getter(v17);
        v19 = static os_log_type_t.default.getter(v18);
        if (!os_log_type_enabled(v18, v19))
          goto LABEL_17;
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        v21 = "scrollWithCompensationTo: finishing scroll session unconditionally.";
      }
      else
      {
        if ((a3(a5) & 1) == 0)
        {
          v28 = (_BYTE *)(a6 + 16);
          v29 = (_QWORD *)(a8 + 16);
          swift_beginAccess(a6 + 16, v43, 1, 0);
          *(_BYTE *)(a6 + 16) = 1;
          if ((a7 & 1) != 0)
          {
            swift_beginAccess(v29, v44, 0, 0);
            v30 = *v29 < 3;
          }
          else
          {
            v30 = 0;
          }
          if (qword_10063D740 != -1)
            swift_once(&qword_10063D740, sub_1003E8B70);
          v31 = a9;
          v32 = type metadata accessor for Logger(0);
          v33 = sub_100012DC4(v32, (uint64_t)qword_100659AD8);
          v34 = Logger.logObject.getter(v33);
          v35 = static os_log_type_t.default.getter(v34);
          if (os_log_type_enabled(v34, v35))
          {
            v36 = (uint8_t *)swift_slowAlloc(8, -1);
            *(_DWORD *)v36 = 67109120;
            v46 = v30;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v36 + 4, v36 + 8);
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "scrollWithCompensationTo: Performing another scroll to item because it has yet to become visible upon end of scrolling animation. {animated: %{BOOL}d}", v36, 8u);
            v31 = a9;
            swift_slowDealloc(v36, -1, -1);
          }

          v37 = v31(a5, v30);
          swift_beginAccess(v29, &v46, 1, 0);
          if (__OFADD__(*v29, 1))
          {
            __break(1u);
            return;
          }
          ++*v29;
          swift_beginAccess(v28, v45, 1, 0);
          *v28 = 0;
          if ((v37 & 1) == 0)
          {
            v39 = Logger.logObject.getter(v38);
            v40 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v39, v40))
            {
              v41 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v41 = 0;
              _os_log_impl((void *)&_mh_execute_header, v39, v40, "scrollWithCompensationTo: no animation after scroll", v41, 2u);
              swift_slowDealloc(v41, -1, -1);
            }

            v42 = swift_retain();
            PassthroughSubject.send(_:)(v42);
            swift_release();
          }
          goto LABEL_30;
        }
        if (qword_10063D740 != -1)
          swift_once(&qword_10063D740, sub_1003E8B70);
        v26 = type metadata accessor for Logger(0);
        v27 = sub_100012DC4(v26, (uint64_t)qword_100659AD8);
        v18 = Logger.logObject.getter(v27);
        v19 = static os_log_type_t.default.getter(v18);
        if (!os_log_type_enabled(v18, v19))
        {
LABEL_17:

          if (*(_BYTE *)(a1 + 24) == 1)
          {
            *(_BYTE *)(a1 + 24) = 0;
            if (*(_QWORD *)(a1 + 16))
            {
              swift_retain();
              AnyCancellable.cancel()();
              swift_release();
            }
            v43[3] = (char *)&type metadata for () + 8;
            DeferredPromise.resolve(_:)(v43);
            sub_100027F10(v43);
          }
LABEL_30:
          swift_release();
          return;
        }
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        v21 = "scrollWithCompensationTo: target item has become visible upon end of scrolling animation.";
      }
      _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
      swift_slowDealloc(v20, -1, -1);
      goto LABEL_17;
    }
    *(_BYTE *)(a1 + 24) = 0;
    if (*(_QWORD *)(a1 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    v22 = type metadata accessor for PromiseError(0);
    v23 = sub_1000175C8((unint64_t *)&qword_100642E80, (uint64_t (*)(uint64_t))&type metadata accessor for PromiseError, (uint64_t)&protocol conformance descriptor for PromiseError);
    v24 = swift_allocError(v22, v23, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, enum case for PromiseError.cancelled(_:), v22);
    DeferredPromise.reject(_:)(v24);
    swift_errorRelease(v24);
  }
}

NSObject *sub_1002DB780(uint64_t a1)
{
  return sub_1002C55B4(a1);
}

void sub_1002DB788()
{
  uint64_t v0;

  sub_1002C712C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002DB7A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002DB7B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C4D04(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1002DB7C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DB7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, ((((v4 + v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

void sub_1002DBC00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_1002DB28C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t, _BOOL8))(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002DBC80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1002D2100(*(void **)a1, *(_QWORD *)(a1 + 8), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1002DBCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1002D2644(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002DBD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_1002DC108()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1002D2908(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1002DC14C()
{
  uint64_t v0;

  sub_100317D84(*(void (**)(double))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1002DC15C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002DC188(void **a1)
{
  uint64_t *v1;

  return sub_1002CE994(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002DC1A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002CEBBC(a1, v1);
}

uint64_t sub_1002DC1AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002C40B8(a1, *(_QWORD *)(v1 + 16));
}

void sub_1002DC1B4(uint64_t a1)
{
  uint64_t v1;

  sub_1002C3764(a1, v1);
}

void sub_1002DC1BC(uint64_t a1, char a2, char a3)
{
  uint64_t v3;

  sub_1002C38DC(a1, a2, a3, v3);
}

uint64_t sub_1002DC1C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002DC1F0()
{
  sub_1002C8F5C();
}

uint64_t sub_1002DC1F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002DC208()
{
  uint64_t v0;

  sub_1002C8FE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_1002DC210()
{
  uint64_t v0;

  return sub_1002C59CC(v0);
}

void sub_1002DC218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002C12C4(a1, a2, a3, v3, sub_1002D7B7C);
}

void sub_1002DC238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C1338(a1, a2, v2);
}

void sub_1002DC240(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002D2EF4(a1, v2, a2);
}

uint64_t sub_1002DC248(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D3060(a1, v1);
}

void sub_1002DC250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C1E60(a1, a2, v2, sub_1002CB930);
}

uint64_t sub_1002DC270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C1ED0(a1, a2, v2);
}

void sub_1002DC278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C1F64(a1, a2, v2);
}

uint64_t sub_1002DC280@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1002C216C(a1, v2, a2);
}

void sub_1002DC288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002D4D34(a1, a2, v2);
}

void sub_1002DC2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C2300(a1, a2, v2);
}

uint64_t sub_1002DC2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D4BC0(a1, a2, v2);
}

uint64_t sub_1002DC2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C2370(a1, a2, v2);
}

uint64_t sub_1002DC2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C2530(a1, a2, v2);
}

_QWORD *sub_1002DC2D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D4AA0(a1, a2, a3, v3);
}

_QWORD *sub_1002DC2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D4B28(a1, a2, a3, v3);
}

uint64_t sub_1002DC2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D4C0C(a1, a2, v2);
}

uint64_t sub_1002DC2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D4D7C(a1, a2, v2) & 1;
}

uint64_t sub_1002DC304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D4DC8(a1, a2, v2) & 1;
}

void sub_1002DC320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BAB84(a1, a2, v2);
}

void sub_1002DC328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BABF0(a1, a2, v2);
}

uint64_t sub_1002DC330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002BAC44(a1, a2, a3, v3);
}

uint64_t sub_1002DC338(uint64_t a1)
{
  sub_100171B88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_OWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_WORD *)(a1 + 120));
  return a1;
}

void sub_1002DC398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002B9474(a1, a2, a3, v3);
}

void sub_1002DC3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002BA688(a1, a2, a3, v3);
}

void sub_1002DC3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BA1D4(a1, a2, v2);
}

uint64_t sub_1002DC3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B95BC(a1, a2, v2);
}

void sub_1002DC3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B96F8(a1, a2, v2);
}

void sub_1002DC3E0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002B9770(a1, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item, a2);
}

void sub_1002DC400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B996C(a1, a2, v2, 0);
}

void sub_1002DC41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B996C(a1, a2, v2, 1);
}

uint64_t sub_1002DC438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9C18(a1, a2, v2);
}

uint64_t sub_1002DC440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9C68(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1002D7104);
}

uint64_t sub_1002DC460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9C68(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1002D7204);
}

void *sub_1002DC480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9CDC(a1, a2, v2);
}

void sub_1002DC488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B9D70(a1, a2, v2);
}

void sub_1002DC490(uint64_t a1)
{
  uint64_t v1;

  sub_1002B9E28(a1, v1);
}

uint64_t sub_1002DC498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1002B9E80(a1, a2, a3, a4, a5, v5, (uint64_t *)&unk_100640EB0);
}

void sub_1002DC4B8(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_1002B9FC4(a1, a2 & 1, a3, v4, a4);
}

unint64_t sub_1002DC4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (unint64_t)sub_1002BA100(a1, a2, v2) & 1;
}

unint64_t sub_1002DC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (unint64_t)sub_1002BA064(a1, a2, a3, a4, v4) & 1;
}

void sub_1002DC4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1002BA0B4(a1, a2, a3, a4, v4);
}

uint64_t sub_1002DC514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BA150(a1, a2, v2);
}

void sub_1002DC51C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BA220(a1, a2, v2, (void (*)(uint64_t))sub_1002D73C4);
}

void sub_1002DC53C(uint64_t a1)
{
  uint64_t v1;

  sub_1002BA2D8(a1, v1);
}

uint64_t sub_1002DC544(char *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  return sub_1002BA44C(a1, a2, v4, a3, a4);
}

void *sub_1002DC54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100069818(a1, a2, a3, v3);
}

void sub_1002DC564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002BA4DC(a1, a2, a3, v3);
}

void sub_1002DC56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002BA7E4(a1, a2, a3, v3);
}

uint64_t sub_1002DC574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C0C00(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_1002D7504) & 1;
}

void sub_1002DC598(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease(a1);
}

id sub_1002DC5A4@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1002DCE10(a1, a2);
}

uint64_t sub_1002DC5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002DC970@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_1002CA8D4(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1002DC9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1002DCD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for TTRRemindersListViewModel.Item(0);
  sub_1002CABC8(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
}

uint64_t sub_1002DCDD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002DCDFC(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

id sub_1002DCE10@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1002CA698(*(_QWORD *)(v2 + 24), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002DCE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750((uint64_t *)&unk_100665210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002DCE9C()
{
  uint64_t v0;

  return sub_1002C96DC(v0);
}

void *sub_1002DCEA4()
{
  uint64_t v0;

  return sub_1002C9798(v0);
}

unint64_t sub_1002DCEAC()
{
  unint64_t result;

  result = qword_100654988;
  if (!qword_100654988)
  {
    result = swift_getWitnessTable(&unk_100534814, &type metadata for TTRIRemindersListCompletedCellContentConfiguration);
    atomic_store(result, (unint64_t *)&qword_100654988);
  }
  return result;
}

uint64_t sub_1002DCEF0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  if (v0[5])
    swift_release(v0[6]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002DCF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C0958(a1, a2, v2);
}

void sub_1002DCF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002C0A38(a1, a2, a3, v3);
}

uint64_t sub_1002DCF44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C0B28(a1, a2, v2);
}

uint64_t sub_1002DCF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100020694(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_1002C9170);
}

uint64_t sub_1002DCF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C0C00(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_1002D9074) & 1;
}

uint64_t sub_1002DCF90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C0E44(a1, a2, v2);
}

void sub_1002DCF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1002C1114(a1, a2, a3, a4, a5, a6, v6);
}

void sub_1002DCFA0(uint64_t *a1)
{
  uint64_t v1;

  sub_1002BE1AC(*a1, v1, (void (*)(uint64_t, uint64_t))sub_1002BB048);
}

void sub_1002DCFC4()
{
  int64_t *v0;

  sub_1002BF124(v0[2], v0[3], v0[4]);
}

void sub_1002DCFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C1E60(a1, a2, v2, sub_100064CB4);
}

uint64_t sub_1002DCFF0@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1002C1FD4(a1, v2, a2);
}

void sub_1002DCFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C227C(a1, a2, v2);
}

uint64_t sub_1002DD000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C24B0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_100074D6C);
}

uint64_t sub_1002DD020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002C24B0(a1, a2, v2, (uint64_t (*)(uint64_t))sub_10007508C);
}

_QWORD *sub_1002DD040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002D4A34(a1, a2, a3, v3);
}

void sub_1002DD048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B94E8(a1, a2, v2);
}

uint64_t sub_1002DD050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9558(a1, a2, v2);
}

void sub_1002DD058(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002B9634(a1, v2, a2);
}

void sub_1002DD060(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002B9770(a1, v2, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item, a2);
}

void sub_1002DD080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B9808(a1, a2, v2);
}

void sub_1002DD088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B9878(a1, a2, v2);
}

void sub_1002DD090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002B99E4(a1, a2, v2);
}

uint64_t sub_1002DD098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9B38(a1, a2, v2);
}

uint64_t sub_1002DD0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9C68(a1, a2, v2, sub_100073DB4);
}

uint64_t sub_1002DD0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B9C68(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1000743D0);
}

void sub_1002DD0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BA220(a1, a2, v2, (void (*)(uint64_t))sub_100074B1C);
}

void sub_1002DD100(uint64_t a1)
{
  uint64_t v1;

  sub_1002B9DCC(a1, v1);
}

uint64_t sub_1002DD108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1002B9E80(a1, a2, a3, a4, a5, v5, (uint64_t *)&unk_100640E00);
}

void sub_1002DD128(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1002B9F04(a1, v2, a2);
}

void sub_1002DD134(uint64_t a1)
{
  uint64_t v1;

  sub_1002BA28C(a1, v1);
}

id sub_1002DD13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002BA3B0(a1, a2, v2);
}

void sub_1002DD144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002BA578(a1, a2, a3, v3);
}

void sub_1002DD14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002BA6D4(a1, a2, a3, v3);
}

void sub_1002DD154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002BA8D8(a1, a2, v2);
}

void sub_1002DD15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002C12C4(a1, a2, a3, v3, sub_100073CBC);
}

void sub_1002DD17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002C0C78(a1, a2, v2);
}

void sub_1002DD184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1002C0F80(a1, a2, a3, a4, a5, a6, v6);
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel()
{
  return &type metadata for TTRListSharingViewModel;
}

void sub_1002DD22C(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1002DD254()
{
  Swift::String v0;
  Swift::String v1;

  v0._object = (void *)0x8000000100572950;
  v1._countAndFlagsBits = 0x6465747065636341;
  v1._object = (void *)0xE800000000000000;
  v0._countAndFlagsBits = 0xD000000000000032;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t sub_1002DD310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100654A30);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100654A30);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_1002DD3A0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[5];
  _OWORD v11[2];
  _OWORD v12[5];
  _BYTE v13[25];

  v2 = a1[5];
  v10[4] = a1[4];
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 89);
  v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  v5 = a2[1];
  v12[0] = *a2;
  v12[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  *(_OWORD *)&v13[9] = *(_OWORD *)((char *)a2 + 89);
  v8 = a2[5];
  v12[4] = a2[4];
  *(_OWORD *)v13 = v8;
  v12[2] = v6;
  v12[3] = v7;
  return sub_1002DD414((uint64_t)v10, (uint64_t)v12);
}

BOOL sub_1002DD408(uint64_t *a1, uint64_t *a2)
{
  return sub_100096250(*a1, *a2);
}

BOOL sub_1002DD414(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BOOL8 result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
      return 0;
    sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  if (!v9)
  {
    if (v10)
      return 0;
LABEL_13:
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(_QWORD *)(a2 + 32);
    if (v15)
    {
      if (!v16)
        return 0;
      v17 = *(_QWORD *)(a1 + 24);
      v18 = *(_QWORD *)(a2 + 24);
      if (v17 != v18 || v15 != v16)
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v15, v18, v16, 0);
        result = 0;
        if ((v19 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    v20 = *(_QWORD *)(a1 + 48);
    v21 = *(_QWORD *)(a2 + 48);
    if (v20)
    {
      if (!v21)
        return 0;
      v22 = *(_QWORD *)(a1 + 40);
      v23 = *(_QWORD *)(a2 + 40);
      if (v22 != v23 || v20 != v21)
      {
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v20, v23, v21, 0);
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    v25 = *(_QWORD *)(a1 + 64);
    v26 = *(_QWORD *)(a2 + 64);
    if (v25)
    {
      if (!v26)
        return 0;
      v27 = *(_QWORD *)(a1 + 56);
      v28 = *(_QWORD *)(a2 + 56);
      if (v27 != v28 || v25 != v26)
      {
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v25, v28, v26, 0);
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v26)
    {
      return 0;
    }
    v30 = *(_QWORD *)(a1 + 80);
    v31 = *(_QWORD *)(a2 + 80);
    if (v30)
    {
      if (!v31)
        return 0;
      v32 = *(_QWORD *)(a1 + 72);
      v33 = *(_QWORD *)(a2 + 72);
      if (v32 != v33 || v30 != v31)
      {
        v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v30, v33, v31, 0);
        result = 0;
        if ((v34 & 1) == 0)
          return result;
      }
    }
    else if (v31)
    {
      return 0;
    }
    v35 = *(_QWORD *)(a1 + 96);
    v36 = *(_QWORD *)(a2 + 96);
    if (v35)
    {
      if (v36)
      {
        v37 = *(_QWORD *)(a1 + 88);
        v38 = *(_QWORD *)(a2 + 88);
        if (v37 != v38 || v35 != v36)
        {
          v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v35, v38, v36, 0);
          result = 0;
          if ((v39 & 1) == 0)
            return result;
        }
        return *(unsigned __int8 *)(a1 + 104) == *(unsigned __int8 *)(a2 + 104);
      }
    }
    else if (!v36)
    {
      return *(unsigned __int8 *)(a1 + 104) == *(unsigned __int8 *)(a2 + 104);
    }
    return 0;
  }
  if (!v10)
    return 0;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a2 + 8);
  if (v11 == v12 && v9 == v10)
    goto LABEL_13;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v9, v12, v10, 0);
  result = 0;
  if ((v13 & 1) != 0)
    goto LABEL_13;
  return result;
}

void sub_1002DD650(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  char v16;
  void *object;
  NSString v18;
  unsigned int v19;
  NSString v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v16 = a11;
  if (a10)
  {
    v32 = a4;
    v33 = a5;
    v34 = a6;
    v35 = a7;
    object = String.lowercased()()._object;
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v18, "hasMailto");

    v20 = String._bridgeToObjectiveC()();
    v21 = v20;
    if (v19)
    {
      swift_bridgeObjectRelease(object);
      v22 = objc_msgSend(v21, "rem_removingMailto");

      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      v26 = 0;
      v27 = 0;
    }
    else
    {
      v28 = objc_msgSend(v20, "hasTel");

      if (v28)
      {
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v30 = objc_msgSend(v29, "rem_removingTel");

        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v27 = v31;

      }
      else
      {
        swift_bridgeObjectRelease(object);
        v26 = 0;
        v27 = 0;
      }
      v23 = 0;
      v25 = 0;
    }
    a7 = v35;
    v16 = a11;
    a5 = v33;
    a6 = v34;
    a4 = v32;
  }
  else
  {
    v26 = 0;
    v27 = 0;
    v23 = 0;
    v25 = 0;
  }
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = v23;
  *(_QWORD *)(a9 + 80) = v25;
  *(_QWORD *)(a9 + 88) = v26;
  *(_QWORD *)(a9 + 96) = v27;
  *(_BYTE *)(a9 + 104) = v16;
}

void sub_1002DD814(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  _OWORD v38[5];
  _OWORD v39[2];

  v4 = type metadata accessor for Logger(0);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  __chkstk_darwin(v4);
  v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = objc_msgSend(a1, "objectID");
  v6 = objc_msgSend(a1, "displayName");
  if (v6)
  {
    v7 = v6;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

  }
  else
  {
    v36 = 0;
    v9 = 0;
  }
  v10 = objc_msgSend(a1, "firstName", v33);
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = objc_msgSend(a1, "lastName");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0;
  }
  v20 = objc_msgSend(a1, "address");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = objc_msgSend(a1, "status");
  if ((unint64_t)v25 >= 6)
  {
    if (qword_10063D5F8 != -1)
      swift_once(&qword_10063D5F8, sub_1002DD310);
    v29 = v34;
    v30 = sub_100012DC4(v34, (uint64_t)qword_100654A30);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, v30, v29);
    v31 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    v32 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002EB23C((uint64_t)"unknown sharee status", 21, 2uLL, v31, v32);
    __break(1u);
  }
  else
  {
    sub_1002DD650((uint64_t)v37, v36, v9, v12, v14, v17, v19, v22, (uint64_t)v38, v24, 0x30000020100uLL >> (8 * v25));
    v26 = v39[0];
    a2[4] = v38[4];
    a2[5] = v26;
    *(_OWORD *)((char *)a2 + 89) = *(_OWORD *)((char *)v39 + 9);
    v27 = v38[1];
    *a2 = v38[0];
    a2[1] = v27;
    v28 = v38[3];
    a2[2] = v38[2];
    a2[3] = v28;
  }
}

__n128 sub_1002DDAC0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __n128 result;
  _OWORD v18[5];
  _OWORD v19[2];

  v4 = objc_msgSend(a1, "sharedOwnerID");
  v5 = objc_msgSend(a1, "sharedOwnerName");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = objc_msgSend(a1, "sharedOwnerAddress");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  sub_1002DD650((uint64_t)v4, v7, v9, 0, 0, 0, 0, v12, (uint64_t)v18, v14, 4);
  v15 = v19[0];
  *(_OWORD *)(a2 + 64) = v18[4];
  *(_OWORD *)(a2 + 80) = v15;
  *(_OWORD *)(a2 + 89) = *(_OWORD *)((char *)v19 + 9);
  v16 = v18[1];
  *(_OWORD *)a2 = v18[0];
  *(_OWORD *)(a2 + 16) = v16;
  result = (__n128)v18[3];
  *(_OWORD *)(a2 + 32) = v18[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

_QWORD *sub_1002DDBE4(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v30[5];
  _OWORD v31[2];
  _OWORD v32[5];
  _OWORD v33[2];

  v1 = a1;
  v2 = objc_msgSend(a1, "shareeContext");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "sharees");

    v5 = sub_100005ED8(0, &qword_100642220, REMSharee_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if (!((unint64_t)v6 >> 62))
      goto LABEL_3;
LABEL_14:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
    if (v7)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(v6);
    v8 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v6 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_14;
LABEL_3:
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_18;
LABEL_4:
  *(_QWORD *)&v32[0] = _swiftEmptyArrayStorage;
  v8 = v32;
  sub_1003D8378(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_27:
    v8 = sub_10045644C(0, v8[2] + 1, 1, v8);
    goto LABEL_22;
  }
  v9 = 0;
  v8 = *(_QWORD **)&v32[0];
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
    else
      v10 = *(id *)(v6 + 8 * v9 + 32);
    v11 = v10;
    sub_1002DD814(v10, v30);

    *(_QWORD *)&v32[0] = v8;
    v13 = v8[2];
    v12 = v8[3];
    if (v13 >= v12 >> 1)
    {
      sub_1003D8378(v12 > 1, v13 + 1, 1);
      v8 = *(_QWORD **)&v32[0];
    }
    ++v9;
    v8[2] = v13 + 1;
    v14 = &v8[14 * v13];
    v15 = v30[0];
    v16 = v30[2];
    v14[3] = v30[1];
    v14[4] = v16;
    v14[2] = v15;
    v17 = v30[3];
    v18 = v30[4];
    v19 = v31[0];
    *(_OWORD *)((char *)v14 + 121) = *(_OWORD *)((char *)v31 + 9);
    v14[6] = v18;
    v14[7] = v19;
    v14[5] = v17;
  }
  while (v7 != v9);
  swift_bridgeObjectRelease(v6);
LABEL_19:
  if ((objc_msgSend(v1, "isOwnedByMe") & 1) != 0)
  {

    return v8;
  }
  v1 = v1;
  sub_1002DDAC0(v1, (uint64_t)v32);

  sub_100079688((uint64_t)v32);
  if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
    goto LABEL_27;
LABEL_22:
  v22 = v8[2];
  v21 = v8[3];
  if (v22 >= v21 >> 1)
    v8 = sub_10045644C((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
  v8[2] = v22 + 1;
  v23 = &v8[14 * v22];
  v24 = v32[0];
  v25 = v32[2];
  v23[3] = v32[1];
  v23[4] = v25;
  v23[2] = v24;
  v26 = v32[3];
  v27 = v32[4];
  v28 = v33[0];
  *(_OWORD *)((char *)v23 + 121) = *(_OWORD *)((char *)v33 + 9);
  v23[6] = v27;
  v23[7] = v28;
  v23[5] = v26;

  sub_10007970C((uint64_t)v32);
  return v8;
}

uint64_t destroy for TTRListSharingViewModel.Participant(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v10 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v9;
  v12 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v11;
  v14 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v13;
  v15 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v16 = v3;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t assignWithCopy for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for TTRListSharingViewModel.Participant(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRListSharingViewModel.Participant(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 105))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRListSharingViewModel.Participant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel.Participant()
{
  return &type metadata for TTRListSharingViewModel.Participant;
}

uint64_t storeEnumTagSinglePayload for TTRListSharingViewModel.ParticipantStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002DE270 + 4 * byte_10052D27A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002DE2A4 + 4 * byte_10052D275[v4]))();
}

uint64_t sub_1002DE2A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002DE2AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002DE2B4);
  return result;
}

uint64_t sub_1002DE2C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002DE2C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1002DE2CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002DE2D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingViewModel.ParticipantStatus()
{
  return &type metadata for TTRListSharingViewModel.ParticipantStatus;
}

unint64_t sub_1002DE2F4()
{
  unint64_t result;

  result = qword_100654A48;
  if (!qword_100654A48)
  {
    result = swift_getWitnessTable(&unk_10052D354, &type metadata for TTRListSharingViewModel.ParticipantStatus);
    atomic_store(result, (unint64_t *)&qword_100654A48);
  }
  return result;
}

void sub_1002DE338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", *(_QWORD *)(v6 + 16));
  static TTRDebugExampleInserts.makeSomeExampleInserts(saveRequest:accounts:lists:reminders:subtasks:)(v13, a1, a2, a3, a4);
  v14 = sub_10002CDD8();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_1005FEC10, 32, 7);
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v18[4] = sub_1002DE5B4;
  v18[5] = v16;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100009944;
  v18[3] = &unk_1005FEC28;
  v17 = _Block_copy(v18);
  sub_100053DE4(a5, a6);
  objc_msgSend(v13, "saveWithQueue:completion:", v15, v17, swift_release().n128_f64[0]);
  _Block_release(v17);

}

void sub_1002DE470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v9 = objc_msgSend(objc_allocWithZone((Class)REMSaveRequest), "initWithStore:", *(_QWORD *)(v4 + 16));
  static TTRDebugExampleInserts.makeSomeExampleInsertsToCloudKitAccount(saveRequest:lists:reminders:)(v9, a1, a2);
  v10 = sub_10002CDD8();
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1005FEC60, 32, 7);
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  v14[4] = sub_1002DE5B4;
  v14[5] = v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100009944;
  v14[3] = &unk_1005FEC78;
  v13 = _Block_copy(v14);
  sub_100053DE4(a3, a4);
  objc_msgSend(v9, "saveWithQueue:completion:", v11, v13, swift_release().n128_f64[0]);
  _Block_release(v13);

}

uint64_t type metadata accessor for TTRIDebugMenuDataManager()
{
  return objc_opt_self(_TtC9Reminders24TTRIDebugMenuDataManager);
}

uint64_t sub_1002DE5BC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1002DE5EC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_1003D809C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v18 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1003D809C(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = type metadata accessor for TTRIRemindersListDragReminder();
        v17 = &off_1006053C8;
        *(_QWORD *)&v15 = v6;
        v3[2] = v8 + 1;
        sub_10002E37C(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v18 = v3;
        v11 = v3[2];
        v12 = v3[3];
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_1003D809C(v12 > 1, v11 + 1, 1);
          v3 = v18;
        }
        v16 = type metadata accessor for TTRIRemindersListDragReminder();
        v17 = &off_1006053C8;
        *(_QWORD *)&v15 = v13;
        v3[2] = v11 + 1;
        sub_10002E37C(&v15, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002DE7B4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  id v15[2];
  _QWORD v16[2];
  _QWORD *v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_1003D8120(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (void **)(a1 + 40);
    do
    {
      v5 = *v4;
      v15[0] = *(v4 - 1);
      v15[1] = v5;
      v6 = v15[0];
      v7 = sub_10002A750(&qword_100654CF0);
      v8 = sub_10002A750(&qword_100654CF8);
      swift_dynamicCast(v16, v15, v7, v8, 7);
      v9 = v16[0];
      v10 = v16[1];

      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1003D8120(0, v2[2] + 1, 1);
        v2 = v17;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_1003D8120(v11 > 1, v12 + 1, 1);
        v2 = v17;
      }
      v4 += 2;
      v2[2] = v12 + 1;
      v13 = &v2[2 * v12];
      v13[4] = v9;
      v13[5] = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_1002DE8F8(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_1003D8304(0, v1, 0);
    v4 = (uint64_t *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *v4;
      v12 = v5;
      swift_bridgeObjectRetain_n(v5, 2);
      v6 = sub_10002A750(&qword_100654D00);
      v7 = sub_10002A750(&qword_100650720);
      swift_dynamicCast(&v13, &v12, v6, v7, 7);
      v8 = v13;
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1003D8304(0, v2[2] + 1, 1);
        v2 = v14;
      }
      v10 = v2[2];
      v9 = v2[3];
      if (v10 >= v9 >> 1)
      {
        sub_1003D8304(v9 > 1, v10 + 1, 1);
        v2 = v14;
      }
      v2[2] = v10 + 1;
      v2[v10 + 4] = v8;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1002DEA38(uint64_t a1)
{
  return sub_10000F658(a1, type metadata accessor for TTRIRemindersListRouter.ActivityItemSource);
}

_QWORD *sub_1002DEA44(uint64_t a1)
{
  return sub_1002DEA6C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1003D847C, (uint64_t)&protocol witness table for TTRITableCell<A>);
}

_QWORD *sub_1002DEA58(uint64_t a1)
{
  return sub_1002DEA6C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1003D8450, (uint64_t)&protocol witness table for TTRITableSection);
}

_QWORD *sub_1002DEA6C(uint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v6)
    return _swiftEmptyArrayStorage;
  result = (_QWORD *)a2(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = 0;
      do
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
        v11 = _swiftEmptyArrayStorage[2];
        v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1)
          a2(v10 > 1, v11 + 1, 1);
        ++v8;
        _swiftEmptyArrayStorage[2] = v11 + 1;
        v12 = &_swiftEmptyArrayStorage[2 * v11];
        v12[4] = v9;
        v12[5] = a3;
      }
      while (v6 != v8);
    }
    else
    {
      v13 = (_QWORD *)(a1 + 32);
      v14 = _swiftEmptyArrayStorage[2];
      v15 = 2 * v14;
      do
      {
        v16 = *v13;
        v17 = _swiftEmptyArrayStorage[3];
        swift_retain(*v13);
        if (v14 >= v17 >> 1)
          a2(v17 > 1, v14 + 1, 1);
        _swiftEmptyArrayStorage[2] = v14 + 1;
        v18 = &_swiftEmptyArrayStorage[v15];
        v18[4] = v16;
        v18[5] = a3;
        v15 += 2;
        ++v13;
        ++v14;
        --v6;
      }
      while (v6);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002DEC04(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_10000BED8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
        swift_dynamicCast(v16, &v15, v6, &type metadata for Any[8], 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_10000BED8(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10000BED8(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_100028D38(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, &type metadata for Any[8], 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_10000BED8(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_10000BED8(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_100028D38(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002DEE64(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD v16[2];
  char v17;
  _QWORD v18[2];
  char v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v20 = _swiftEmptyArrayStorage;
    sub_1003D8590(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (_BYTE *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v16[0] = *((_QWORD *)v4 - 2);
      v16[1] = v5;
      v17 = v6;
      swift_bridgeObjectRetain_n(v5, 2);
      v7 = sub_10002A750(&qword_100654C78);
      v8 = sub_10002A750(&qword_100654C80);
      swift_dynamicCast(v18, v16, v7, v8, 7);
      v9 = v18[0];
      v10 = v18[1];
      v11 = v19;
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1003D8590(0, v2[2] + 1, 1);
        v2 = v20;
      }
      v13 = v2[2];
      v12 = v2[3];
      if (v13 >= v12 >> 1)
      {
        sub_1003D8590(v12 > 1, v13 + 1, 1);
        v2 = v20;
      }
      v4 += 24;
      v2[2] = v13 + 1;
      v14 = &v2[3 * v13];
      v14[4] = v9;
      v14[5] = v10;
      *((_BYTE *)v14 + 48) = v11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1002DEFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100654AF0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100654AF0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002DF04C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  int *v55;
  uint64_t result;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;

  v2 = v1;
  v74 = a1;
  v3 = sub_10002A750(&qword_100642098);
  __chkstk_darwin(v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags(0);
  v6 = *(_QWORD *)(v69 - 8);
  v7 = __chkstk_darwin(v69);
  v67 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v68 = (char *)&v65 - v9;
  v10 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  v11 = __chkstk_darwin(v10);
  v66 = (uint64_t *)((char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v71 = (char *)&v65 - v13;
  v14 = type metadata accessor for REMHashtagLabelCollection(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1[13];
  v18 = v1[14];
  sub_10001413C(v1 + 10, v19);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18);
  v70 = REMHashtagLabelCollection.labels.getter(v20);
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22 = v1;
  v21(v17, v14);
  v23 = v1[13];
  v24 = v1[14];
  sub_10001413C(v1 + 10, v23);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v69);
    v30 = v72;
    v29 = v73;
    goto LABEL_7;
  }
  v26 = (void *)v25;
  REMCustomSmartListFilterDescriptor.hashtags.getter(v25);

  v27 = v69;
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v69);
  v30 = v72;
  v29 = v73;
  if (v28 == 1)
  {
LABEL_7:
    v49 = sub_1000073A0((uint64_t)v5, &qword_100642098);
    v46 = v71;
    static REMHashtagLabelSpecifier.empty.getter(v49);
    v48 = 0;
    goto LABEL_8;
  }
  v31 = v68;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v68, v5, v27);
  v32 = v67;
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v67, v31, v27);
  v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v32, v27);
  if ((_DWORD)v33 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.hashtags(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v32, v27);
    v35 = *v32;
    v34 = v32[1];
    v36 = (char *)v32 + *(int *)(sub_10002A750(&qword_100654C60) + 64);
    v37 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
    v38 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 88))(v36, v37);
    v65 = v2;
    if (v38 == enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:))
    {
      v39 = sub_10002A750((uint64_t *)&unk_1006651D0);
      v40 = v66;
      v41 = (char *)v66 + *(int *)(v39 + 64);
      v42 = sub_1003E7D94(v35);
      swift_bridgeObjectRelease(v35);
      *v40 = v42;
      v43 = sub_1003E7D94(v34);
      swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v27);
      v40[1] = v43;
      v44 = enum case for REMHashtagLabelSpecifier.Operation.and(_:);
      v45 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v41, v44, v45);
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v40, enum case for REMHashtagLabelSpecifier.labels(_:), v29);
      v46 = v71;
      v47 = v40;
      v22 = v65;
      (*(void (**)(char *, uint64_t *, uint64_t))(v30 + 32))(v71, v47, v29);
      v48 = 3;
LABEL_8:
      v50 = *((_BYTE *)v22 + 313);
      v52 = v22[37];
      v51 = v22[38];
      v53 = *((_BYTE *)v22 + 312);
      v54 = v74;
      *v74 = v70;
      v55 = (int *)type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))((char *)v54 + v55[5], v46, v29);
      *((_BYTE *)v54 + v55[6]) = v48;
      *((_BYTE *)v54 + v55[7]) = v50;
      v57 = (char *)v54 + v55[8];
      *(_QWORD *)v57 = v52;
      *((_QWORD *)v57 + 1) = v51;
      v57[16] = v53;
      return result;
    }
    v46 = v71;
    if (v38 == enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:))
    {
      v58 = sub_10002A750((uint64_t *)&unk_1006651D0);
      v59 = v66;
      v60 = (char *)v66 + *(int *)(v58 + 64);
      v61 = sub_1003E7D94(v35);
      swift_bridgeObjectRelease(v35);
      *v59 = v61;
      v62 = sub_1003E7D94(v34);
      swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v27);
      v59[1] = v62;
      v63 = enum case for REMHashtagLabelSpecifier.Operation.or(_:);
      v64 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v60, v63, v64);
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v59, enum case for REMHashtagLabelSpecifier.labels(_:), v29);
      (*(void (**)(char *, uint64_t *, uint64_t))(v30 + 32))(v46, v59, v29);
      v48 = 2;
      v22 = v65;
      goto LABEL_8;
    }
  }
  else
  {
    if ((_DWORD)v33 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.untagged(_:))
    {
      v46 = v71;
      static REMHashtagLabelSpecifier.empty.getter(v33);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v27);
      v48 = 4;
      goto LABEL_8;
    }
    v46 = v71;
    if ((_DWORD)v33 == enum case for REMCustomSmartListFilterDescriptor.FilterHashtags.any(_:))
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v68, v27);
      (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v46, enum case for REMHashtagLabelSpecifier.allLabels(_:), v29);
      v48 = 1;
      goto LABEL_8;
    }
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v27, v27);
  __break(1u);
  return result;
}

void sub_1002DF5E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  Swift::String v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  sub_10001413C((_QWORD *)(v0 + 80), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  if (v7)
  {
    v8 = (void *)v7;
    if ((REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter() & 1) != 0)
    {
      v9 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
      type metadata accessor for MainActor(0);
      v10 = swift_retain();
      v11 = static MainActor.shared.getter(v10);
      v12 = (_QWORD *)swift_allocObject(&unk_1005FEDC8, 40, 7);
      v12[2] = v11;
      v12[3] = &protocol witness table for MainActor;
      v12[4] = v1;
      sub_100148368((uint64_t)v4, (uint64_t)&unk_100654C58, (uint64_t)v12);

      swift_release();
      return;
    }

  }
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    *(_BYTE *)(v0 + 64) = 0;
    v13._object = (void *)0x8000000100560820;
    v13._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v13);
  }
}

void sub_1002DF740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  id v37;
  NSString v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  v4 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (double *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v15 = a1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 32);
  if (*(_QWORD *)(v15 + 40))
  {
    v16 = *(_QWORD *)(v2 + 272);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 264), v14);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 40));
    *(_QWORD *)(v15 + 40) = v18;
  }
  else if ((*(_BYTE *)(v2 + 288) & 1) == 0)
  {
    return;
  }
  v19 = *(_QWORD *)(v2 + 104);
  v20 = *(_QWORD *)(v2 + 112);
  sub_10001413C((_QWORD *)(v2 + 80), v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_16;
  }
  v22 = (void *)v21;
  REMCustomSmartListFilterDescriptor.location.getter(v21);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_16:
    sub_1000073A0((uint64_t)v6, &qword_100642080);
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(double *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v23 = (*(uint64_t (**)(double *, uint64_t))(v8 + 88))(v10, v7);
  if (v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.vehicle(_:))
  {
    if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterLocation.location(_:))
    {
      (*(void (**)(double *, uint64_t))(v8 + 96))(v10, v7);
      v32 = *v10;
      v33 = *((_QWORD *)v10 + 1);
      v34 = v10[2];
      v35 = v10[3];
      v36 = v10[4];
      sub_100005ED8(0, &qword_100654CE8, REMStructuredLocation_ptr);
      v37 = objc_allocWithZone((Class)CLCircularRegion);
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v37, "initWithCenter:radius:identifier:", v38, v34, v35, v36);

      v40 = (void *)REMStructuredLocation.init(title:circularRegion:placemark:)(*(_QWORD *)&v32, v33, v39, 0);
      v41 = *(_QWORD *)(v2 + 264);
      v42 = *(_QWORD *)(v2 + 272);
      v44 = swift_getObjectType(v41, v43);
      v25 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 32))(v40, v44, v42);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v26 = *(_QWORD *)(v15 + 40);
      if (!v26)
        return;
LABEL_18:
      v28 = *(void **)(v15 + 16);
      v27 = *(_QWORD *)(v15 + 24);
      v30 = *(_QWORD *)v15;
      v29 = *(_QWORD *)(v15 + 8);
      v31 = *(_BYTE *)(v15 + 32);
      sub_1001CD3C8(*(_QWORD *)v15, v29, v28, v27, v31);
      swift_bridgeObjectRetain(v26);
      sub_1001CD3F8(v30, v29, v28, v27, v31);
      swift_bridgeObjectRelease(v26);
      *(_BYTE *)(v15 + 48) = v25;
      return;
    }
    if (v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.any(_:)
      && v23 != enum case for REMCustomSmartListFilterDescriptor.FilterLocation.noLocation(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)(v7, v7);
      __break(1u);
      return;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_17:
    v25 = 6;
    v26 = *(_QWORD *)(v15 + 40);
    if (!v26)
      return;
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(double *, uint64_t))(v8 + 96))(v10, v7);
  if (*(_QWORD *)v10 == 1)
    v24 = 3;
  else
    v24 = 6;
  if (*(_QWORD *)v10 == 2)
    v25 = 4;
  else
    v25 = v24;
  v26 = *(_QWORD *)(v15 + 40);
  if (v26)
    goto LABEL_18;
}

void sub_1002DFB1C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void (*v11)(void);
  id v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  __int128 *v30;
  int v31;
  id v32;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v33;
  uint64_t v34;
  Reminders::TTRReminderIDsWithMatchingHashtagsProvider v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __int128 *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[2];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[6];
  char v67;
  _OWORD v68[10];
  char v69;
  __int128 v70[11];
  _BYTE v71[176];
  _QWORD v72[2];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _OWORD v77[4];
  unsigned __int8 v78;
  __int128 v79;
  char v80;
  __int128 v81[11];
  _BYTE v82[192];

  v2 = v1;
  v4 = sub_10002A750(&qword_100654CE0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (id *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (__int128 *)(a1 + *(int *)(type metadata accessor for TTRSmartListFilterEditorViewModel(0) + 44));
  sub_1001CCEC4(v8, (uint64_t)v81);
  sub_1001CCEC4(v81, (uint64_t)v82);
  if (sub_1001CCF00((uint64_t)v82) <= 1)
  {
    v41 = v8;
    v9 = *(void **)TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v82).reminders._rawValue;
    v10 = v2[14];
    sub_10001413C(v2 + 10, v2[13]);
    v11 = *(void (**)(void))(v10 + 40);
    v12 = v9;
    v11();
    v13 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v7, v4);
    if (v13 == enum case for REMAsyncOperationState.running<A>(_:))
    {
      (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
      v14 = swift_allocObject(&unk_1005FEEE0, 24, 7);
      v15 = swift_weakInit(v14 + 16, v2);
      v16 = (void *)zalgo.getter(v15);
      v17 = sub_10002A750((uint64_t *)&unk_100649CB0);
      dispatch thunk of Promise.then<A>(on:closure:)(v16, sub_1002EA0F4, v14, v17);
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    if (v13 == enum case for REMAsyncOperationState.succeeded<A>(_:))
    {
      v40 = v12;
      (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
      v18 = *v7;
      v19 = objc_msgSend(*v7, "displayName");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v38 = v21;
      v39 = v20;

      type metadata accessor for TTRListColors(0);
      v22 = sub_100005ED8(0, (unint64_t *)&qword_100640498, REMList_ptr);
      *((_QWORD *)&v53 + 1) = v22;
      *(_QWORD *)&v54 = &protocol witness table for REMList;
      *(_QWORD *)&v52 = v18;
      v23 = v18;
      static TTRListColors.color(for:)(v72, &v52);
      v24 = v72[0];
      v25 = v72[1];
      v37 = v73;
      v26 = v74;
      v27 = v75;
      v28 = v76;
      sub_1000073A0((uint64_t)&v52, &qword_100649C80);
      *((_QWORD *)&v53 + 1) = v22;
      *(_QWORD *)&v54 = &protocol witness table for REMList;
      *(_QWORD *)&v52 = v23;
      v29 = v23;
      TTRReminderDetailViewModel.BadgeViewModel.init(listProtocol:)(v77, &v52);
      *(_QWORD *)&v62 = v39;
      *((_QWORD *)&v62 + 1) = v38;
      *(_QWORD *)&v63 = v24;
      *((_QWORD *)&v63 + 1) = v25;
      v64 = v37;
      *(_QWORD *)&v65 = v26;
      *((_QWORD *)&v65 + 1) = v27;
      LOBYTE(v66[0]) = v28;
      *(_OWORD *)((char *)v66 + 8) = v77[0];
      *(_OWORD *)((char *)&v66[1] + 8) = v77[1];
      *(_OWORD *)((char *)&v66[2] + 8) = v77[2];
      *(_OWORD *)((char *)&v66[3] + 8) = v77[3];
      *((_QWORD *)&v66[4] + 1) = v78;
      v66[5] = v79;
      v67 = v80;
      v68[4] = v66[0];
      v68[5] = v66[1];
      v69 = v80;
      v68[8] = v66[4];
      v68[9] = v79;
      v68[6] = v66[2];
      v68[7] = v66[3];
      v68[2] = v37;
      v68[3] = v65;
      v68[0] = v62;
      v68[1] = v63;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v68);
      v30 = v41;
      sub_1001CCEC4(v41, (uint64_t)v70);
      sub_1001CCEC4(v70, (uint64_t)v71);
      v31 = sub_1001CCF00((uint64_t)v71);
      if (!v31)
      {
        v35.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v71).reminders._rawValue;
        v36 = *(_QWORD *)v35.reminders._rawValue;
        sub_1001CD250((uint64_t)v35.reminders._rawValue + 8);

        *(_QWORD *)&v42 = v36;
        sub_10000F614((uint64_t)v68, (uint64_t)&v42 + 8, &qword_10064ABD8);
        v60 = v50;
        v61[0] = v51[0];
        *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v51 + 9);
        v56 = v46;
        v57 = v47;
        v58 = v48;
        v59 = v49;
        v52 = v42;
        v53 = v43;
        v54 = v44;
        v55 = v45;
        sub_1002E9FF4((uint64_t)&v52);
        goto LABEL_11;
      }
      v32 = v40;
      if (v31 == 1)
      {
        v33.reminders._rawValue = TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v71).reminders._rawValue;
        v34 = *(_QWORD *)v33.reminders._rawValue;
        sub_1001CD250((uint64_t)v33.reminders._rawValue + 8);

        *(_QWORD *)&v42 = v34;
        sub_10000F614((uint64_t)v68, (uint64_t)&v42 + 8, &qword_10064ABD8);
        v60 = v50;
        v61[0] = v51[0];
        *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v51 + 9);
        v56 = v46;
        v57 = v47;
        v58 = v48;
        v59 = v49;
        v52 = v42;
        v53 = v43;
        v54 = v44;
        v55 = v45;
        sub_1002E9FFC((uint64_t)&v52);
LABEL_11:
        sub_1001CCEC4(&v52, (uint64_t)v30);
        return;
      }
      sub_1002EA008((uint64_t)&v62);

    }
    else if (v13 == enum case for REMAsyncOperationState.failed<A>(_:))
    {

      (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
      swift_errorRelease(*v7);
    }
    else
    {
      _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
      __break(1u);
    }
  }
}

void sub_1002DFFD0(char a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  unsigned int *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  NSString v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char isEscapingClosureAtFileLocation;
  id v33[2];
  _QWORD aBlock[6];
  _BYTE v35[80];

  v1 = a1 & 1;
  v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v33 - v7;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v13 = sub_100012DC4(v9, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v14, v35);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = v1;
  v16 = String.init<A>(describing:)(aBlock, &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request filter inclusion operation change {to: %@}", 50, 2, v18);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:);
  if (v1)
    v20 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, *v20, v2);
  v33[0] = (id)objc_opt_self(TTRUndoManager);
  v21._countAndFlagsBits = 0xD00000000000002ELL;
  v22._countAndFlagsBits = 0xD000000000000042;
  v21._object = (void *)0x8000000100573190;
  v23._object = (void *)0x80000001005731C0;
  v22._object = (void *)0x80000001005731E0;
  v23._countAndFlagsBits = 0xD000000000000016;
  object = TTRLocalizedString(_:value:comment:)(v21, v23, v22)._object;
  v25 = String._bridgeToObjectiveC()();
  v26 = swift_bridgeObjectRelease(object);
  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v5, v8, v2, v26);
  v27 = *(unsigned __int8 *)(v3 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = swift_allocObject(&unk_1005FF548, v28 + v4, v27 | 7);
  *(id *)(v29 + 16) = v33[1];
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v29 + v28, v5, v2);
  v30 = swift_allocObject(&unk_1005FF570, 32, 7);
  *(_QWORD *)(v30 + 16) = sub_1002E9F7C;
  *(_QWORD *)(v30 + 24) = v29;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF588;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v33[0], "withActionName:block:", v25, v31, swift_release().n128_f64[0]);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 132, 222, 106, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1002E0364(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  _QWORD v25[2];
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t aBlock;
  _BYTE v43[64];

  v33 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units(0);
  v32 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v34 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction(0);
  v29 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v36 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v35 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10002A750(&qword_100654C90);
  __chkstk_darwin(v38);
  v28 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v25[1] = (char *)v25 - v7;
  v26 = sub_10002A750(&qword_100654C98);
  __chkstk_darwin(v26);
  v27 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  v11 = sub_10002A750(&qword_100642090);
  v39 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v40 = v12;
  v41 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v18 = sub_100012DC4(v14, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v19 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v19, v43);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock) = a1;
  v21 = String.init<A>(describing:)(&aBlock, &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v21;
  *(_QWORD *)(inited + 56) = v22;
  v23 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request date filter change {to: %@}", 35, 2, v23);
  v24 = swift_bridgeObjectRelease(v23);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v24);
  __asm { BR              X10 }
}

void sub_1002E0CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t inited;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  _QWORD v78[9];
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t updated;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  _BYTE v109[8];

  v100 = a1;
  v98 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v78[5] = (char *)v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v78[6] = (char *)v78 - v4;
  v83 = sub_10002A750(&qword_100654C90);
  __chkstk_darwin(v83);
  v81 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v78[8] = (char *)v78 - v7;
  v79 = sub_10002A750(&qword_100654C98);
  __chkstk_darwin(v79);
  v80 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100653A90);
  __chkstk_darwin(v9);
  v90 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v89 = (char *)v78 - v12;
  __chkstk_darwin(v13);
  v88 = (char *)v78 - v14;
  v107 = type metadata accessor for Date(0);
  v101 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v78[4] = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v91 = (char *)v78 - v17;
  __chkstk_darwin(v18);
  v82 = (char *)v78 - v19;
  __chkstk_darwin(v20);
  v87 = (char *)v78 - v21;
  __chkstk_darwin(v22);
  v92 = (char *)v78 - v23;
  __chkstk_darwin(v24);
  v96 = (char *)v78 - v25;
  __chkstk_darwin(v26);
  v78[3] = (char *)v78 - v27;
  __chkstk_darwin(v28);
  v78[2] = (char *)v78 - v29;
  __chkstk_darwin(v30);
  v78[1] = (char *)v78 - v31;
  updated = type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(0);
  __chkstk_darwin(updated);
  v85 = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v86 = (char *)v78 - v34;
  __chkstk_darwin(v35);
  v95 = (char *)v78 - v36;
  __chkstk_darwin(v37);
  v94 = (char *)v78 - v38;
  __chkstk_darwin(v39);
  v93 = (char *)v78 - v40;
  __chkstk_darwin(v41);
  v84 = (char *)v78 - v42;
  v43 = sub_10002A750(&qword_100642090);
  __chkstk_darwin(v43);
  v78[7] = (char *)v78 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v106 = (char *)v78 - v46;
  v47 = type metadata accessor for Logger(0);
  v104 = *(_QWORD *)(v47 - 8);
  v105 = v47;
  __chkstk_darwin(v47);
  v49 = (char *)v78 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  __chkstk_darwin(v50);
  v52 = (char *)v78 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v103);
  v54 = (char *)v78 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v57 = (char *)v78 - v56;
  __chkstk_darwin(v58);
  v60 = (char *)v78 - v59;
  v61 = *(_QWORD *)(v1 + 104);
  v62 = *(_QWORD *)(v1 + 112);
  sub_10001413C((_QWORD *)(v1 + 80), v61);
  v63 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v61, v62);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v63, (*(_BYTE *)(v1 + 65) & 1) == 0, v52);
  sub_1002DF740((uint64_t)v52);
  v102 = v1;
  sub_1002DFB1C((uint64_t)v52);
  v64 = (uint64_t)&v52[*(int *)(v50 + 20)];
  v108 = v60;
  sub_10002B1E8(v64, (uint64_t)v60, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  sub_10001F544((uint64_t)v52, type metadata accessor for TTRSmartListFilterEditorViewModel);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v65 = v105;
  v66 = sub_100012DC4(v105, (uint64_t)qword_100654AF0);
  v67 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v49, v66, v65);
  v68 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v68, v109);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v70 = (uint64_t)v108;
  sub_10002B1E8((uint64_t)v108, (uint64_t)v57, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  v71 = v103;
  v72 = String.init<A>(describing:)(v57, v103);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v72;
  *(_QWORD *)(inited + 56) = v73;
  v74 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request date data change {to: %@}", 33, 2, v74);
  v75 = swift_bridgeObjectRelease(v74);
  (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v49, v65, v75);
  v76 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v106, 1, 1, v76);
  sub_10002B1E8(v70, (uint64_t)v54, type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions);
  v77 = (char *)&loc_1002E1424 + *((int *)qword_1002E2138 + swift_getEnumCaseMultiPayload(v54, v71));
  __asm { BR              X10 }
}

uint64_t sub_1002E21BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_10002A750(&qword_100642090);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[13];
  v8 = a1[14];
  sub_10001413C(a1 + 10, v7);
  sub_10000735C(a2, (uint64_t)v6, &qword_100642090);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 72))(v6, v7, v8);
  return sub_1000073A0((uint64_t)v6, &qword_100642090);
}

void sub_1002E2270(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  _QWORD aBlock[2];
  _BYTE v17[80];

  v2 = sub_10002A750(&qword_100642088);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v17);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  aBlock[0] = sub_1002E26C4;
  aBlock[1] = 0;
  v11 = sub_10002A750(&qword_100654CD8);
  v12 = String.init<A>(describing:)(aBlock, v11);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v13;
  v14 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request priorities change {to: %@}", 34, 2, v14);
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
  __asm { BR              X10 }
}

time_t sub_1002E26C4@<X0>(time_t **a1@<X0>, time_t *a2@<X8>)
{
  time_t result;

  result = time(*a1);
  *a2 = result;
  return result;
}

void sub_1002E26EC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v26[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v26);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  v11 = String.init<A>(describing:)(aBlock, &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request priorities change {to: %@}", 34, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  v15 = (void *)objc_opt_self(TTRUndoManager);
  v16._countAndFlagsBits = 0xD000000000000029;
  v17._countAndFlagsBits = 0xD00000000000003DLL;
  v16._object = (void *)0x8000000100572F80;
  v18._object = (void *)0x8000000100572FB0;
  v17._object = (void *)0x8000000100572FD0;
  v18._countAndFlagsBits = 0xD000000000000018;
  object = TTRLocalizedString(_:value:comment:)(v16, v18, v17)._object;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v21 = swift_allocObject(&unk_1005FF3E0, 25, 7);
  *(_QWORD *)(v21 + 16) = v2;
  *(_BYTE *)(v21 + 24) = a1;
  v22 = swift_allocObject(&unk_1005FF408, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1002E9D5C;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF420;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v15, "withActionName:block:", v20, v23, swift_release().n128_f64[0]);

  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v22, "", 132, 343, 102, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

double sub_1002E29B8(_QWORD *a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  _UNKNOWN **v5;
  double result;

  v3 = a1[13];
  v4 = a1[14];
  sub_10001413C(a1 + 10, v3);
  v5 = TTRSmartListFilterEditorViewModel.PriorityOptions.priorities.getter(a2);
  (*(void (**)(_UNKNOWN **, uint64_t, uint64_t))(v4 + 88))(v5, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_1002E2A14(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v26[80];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v26);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  v11 = String.init<A>(describing:)(aBlock, &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request flagged change {to: %@}", 31, 2, v13);
  v14 = swift_bridgeObjectRelease(v13);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  LOBYTE(v13) = 2 - a1;
  v15 = (void *)objc_opt_self(TTRUndoManager);
  v16._countAndFlagsBits = 0xD000000000000026;
  v17._countAndFlagsBits = 0xD00000000000003ALL;
  v16._object = (void *)0x8000000100573030;
  v18._object = (void *)0x8000000100573060;
  v17._object = (void *)0x8000000100573080;
  v18._countAndFlagsBits = 0xD000000000000015;
  object = TTRLocalizedString(_:value:comment:)(v16, v18, v17)._object;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v21 = swift_allocObject(&unk_1005FF458, 25, 7);
  *(_QWORD *)(v21 + 16) = v2;
  *(_BYTE *)(v21 + 24) = v13;
  v22 = swift_allocObject(&unk_1005FF480, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1002E9D78;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF498;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v15, "withActionName:block:", v20, v23, swift_release().n128_f64[0]);

  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v22, "", 132, 360, 99, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1002E2CE4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  void *object;
  NSString v38;
  uint64_t v39;
  void *v40;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _BYTE v43[80];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v14 = sub_100012DC4(v10, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v15, v43);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  v17 = String.init<A>(describing:)(aBlock, &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request location change {to: %@}", 32, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v20);
  v21 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v23(v9, 1, 1, v21);
  if (!a1)
  {
    sub_1000073A0((uint64_t)v9, &qword_100642080);
    v32 = 1;
LABEL_9:
    v23(v9, v32, 1, v21);
    *(_BYTE *)(v2 + 288) = 0;
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    sub_1000073A0((uint64_t)v9, &qword_100642080);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v9, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.noLocation(_:), v21);
    v32 = 0;
    goto LABEL_9;
  }
  *(_BYTE *)(v2 + 288) = 1;
  v24._object = (void *)0x8000000100560820;
  v24._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v24);
  v25 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  v26 = *(_QWORD *)(v2 + 160);
  type metadata accessor for MainActor(0);
  swift_retain();
  v27 = swift_retain();
  v28 = static MainActor.shared.getter(v27);
  v29 = (_QWORD *)swift_allocObject(&unk_1005FF1B0, 48, 7);
  v29[2] = v28;
  v29[3] = &protocol witness table for MainActor;
  v29[4] = v26;
  v29[5] = v2;
  sub_100148368((uint64_t)v6, (uint64_t)&unk_100654CB0, (uint64_t)v29);
  swift_release();
  v30 = 0;
  v31 = 0;
  if ((*(_BYTE *)(v2 + 288) & 1) != 0)
    goto LABEL_11;
LABEL_10:
  v33 = (void *)objc_opt_self(TTRUndoManager);
  v34._countAndFlagsBits = 0xD000000000000016;
  v35._countAndFlagsBits = 0xD000000000000027;
  v36._countAndFlagsBits = 0xD00000000000003BLL;
  v35._object = (void *)0x8000000100572DF0;
  v34._object = (void *)0x8000000100572E20;
  v36._object = (void *)0x8000000100572E40;
  object = TTRLocalizedString(_:value:comment:)(v35, v34, v36)._object;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v31 = swift_allocObject(&unk_1005FF138, 32, 7);
  *(_QWORD *)(v31 + 16) = v2;
  *(_QWORD *)(v31 + 24) = v9;
  v39 = swift_allocObject(&unk_1005FF160, 32, 7);
  v30 = sub_1002E9914;
  *(_QWORD *)(v39 + 16) = sub_1002E9914;
  *(_QWORD *)(v39 + 24) = v31;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF178;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v33, "withActionName:block:", v38, v40, swift_release().n128_f64[0]);

  _Block_release(v40);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v39, "", 132, 398, 104, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
LABEL_11:
    sub_1000073A0((uint64_t)v9, &qword_100642080);
    sub_1000381B8((uint64_t)v30, v31);
    return;
  }
  __break(1u);
}

uint64_t sub_1002E3184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = a5;
  v7 = type metadata accessor for MainActor(0);
  v5[8] = v7;
  v5[9] = static MainActor.shared.getter(v7);
  v5[4] = a4;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
  v5[10] = v8;
  v9 = type metadata accessor for TTRIPrivacyChecker(0);
  v5[11] = v9;
  *v8 = v5;
  v8[1] = sub_1002E320C;
  return TTRPrivacyChecker.checkLocationAccess()(v9, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1002E320C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 48);
  v6 = *v1;
  *(_BYTE *)(v6 + 104) = a1;
  swift_task_dealloc(v2);
  *(_QWORD *)(v6 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkContactsAccess(contactsFeature:)[1]);
  *(_QWORD *)(v6 + 96) = v4;
  *v4 = v6;
  v4[1] = sub_1002E3294;
  return TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(0, *(_QWORD *)(v6 + 88), &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1002E3294(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  *(_BYTE *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = *(_QWORD *)(v2 + 64);
  swift_task_dealloc(*(_QWORD *)(v2 + 96));
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_1002E330C, v5, v6);
}

uint64_t sub_1002E330C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  double v5;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 104);
  swift_release();
  if (v1)
    v3 = 1;
  else
    v3 = 3;
  if (v2)
    v4 = 0;
  else
    v4 = v3;
  v5 = sub_1002E336C(v4, 0);
  return (*(uint64_t (**)(double))(v0 + 8))(v5);
}

double sub_1002E336C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v3 = v2;
  v6 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  __chkstk_darwin(v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
    goto LABEL_9;
  v10 = *(_QWORD *)(v3 + 104);
  v11 = *(_QWORD *)(v3 + 112);
  sub_10001413C((_QWORD *)(v3 + 80), v10);
  v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v12, (*(_BYTE *)(v3 + 65) & 1) == 0, v9);
  sub_1002DF740((uint64_t)v9);
  sub_1002DFB1C((uint64_t)v9);
  v13 = &v9[*(int *)(v6 + 32)];
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v17 = (void *)*((_QWORD *)v13 + 2);
  v16 = *((_QWORD *)v13 + 3);
  v19 = *((_QWORD *)v13 + 4);
  v18 = *((_QWORD *)v13 + 5);
  v20 = v13[48];
  sub_1002E9A2C(*(_QWORD *)v13, v15, v17, v16, v19, v18);
  sub_10001F544((uint64_t)v9, type metadata accessor for TTRSmartListFilterEditorViewModel);
  if (v18)
  {
    v21 = v20;
    sub_1001CD3F8(v14, v15, v17, v16, v19);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 0x80u) != 0 || v20 == 6)
    {
      v21 = 6;
      v16 = 0;
    }
  }
  else
  {
LABEL_9:
    v16 = 0;
    v21 = 6;
  }
  v23 = *(_QWORD *)(v3 + 272);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 264), v7);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16))(a1, v21, v16, ObjectType, v23);
  if (v25)
  {
    v31[1] = v25;
    v27 = swift_allocObject(&unk_1005FEEE0, 24, 7);
    swift_weakInit(v27 + 16, v3);
    v28 = sub_10002A750(&qword_100649D00);
    v29 = sub_1002E99E0();
    v30 = Publisher.sink(receiveCompletion:receiveValue:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, sub_1002E99D8, v27, v28, v29);
    swift_release();
    swift_release();
    *(_QWORD *)(v3 + 280) = v30;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1002E358C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[13];
  v8 = a1[14];
  sub_10001413C(a1 + 10, v7);
  sub_10000735C(a2, (uint64_t)v6, &qword_100642080);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 104))(v6, v7, v8);
  return sub_1000073A0((uint64_t)v6, &qword_100642080);
}

void sub_1002E3640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE v23[15];
  char v24;
  _BYTE v25[80];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v11 = sub_100012DC4(v7, (uint64_t)qword_100654AF0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v25);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 1835365481;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v24 = a1;
  v14 = String.init<A>(describing:)(&v24, &type metadata for TTRLocationQuickPickItem);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = v15;
  v16 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List Detail select location quick pick {item: %@}", 49, 2, v16);
  v17 = swift_bridgeObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v17);
  if (a1 >= 3u)
  {
    if (a1 - 3 >= 2)
      sub_1002E3898(1);
    else
      sub_1002E336C(a1, 1);
  }
  else
  {
    sub_1002E336C(a1, 1);
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
    v19 = *(_QWORD *)(v2 + 160);
    type metadata accessor for MainActor(0);
    v20 = swift_retain();
    v21 = static MainActor.shared.getter(v20);
    v22 = (_QWORD *)swift_allocObject(&unk_1005FF318, 40, 7);
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v19;
    sub_100148368((uint64_t)v6, (uint64_t)&unk_100654CD0, (uint64_t)v22);
    swift_release();
  }
}

void sub_1002E3898(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  __int128 v21[2];

  v2 = v1;
  v4 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)(v1 + 10);
  v8 = v1[13];
  v9 = v1[14];
  sub_10001413C(v1 + 10, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = v2[20];
    v14 = (void *)v2[26];
    sub_100010634((uint64_t)(v2 + 15), (uint64_t)v21);
    sub_100010634(v7, (uint64_t)v20);
    type metadata accessor for MainActor(0);
    swift_retain();
    v15 = v11;
    v16 = v14;
    v17 = swift_retain();
    v18 = static MainActor.shared.getter(v17);
    v19 = swift_allocObject(&unk_1005FF250, 152, 7);
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v19 + 32) = v13;
    sub_10002E37C(v21, v19 + 40);
    *(_QWORD *)(v19 + 80) = v15;
    *(_QWORD *)(v19 + 88) = v16;
    *(_BYTE *)(v19 + 96) = a1 & 1;
    *(_QWORD *)(v19 + 104) = v2;
    sub_10002E37C(v20, v19 + 112);
    sub_100148368((uint64_t)v6, (uint64_t)&unk_100654CC0, v19);
    swift_release();

  }
}

uint64_t sub_1002E3A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *a4;
  v7 = type metadata accessor for MainActor(0);
  v4[3] = v7;
  v4[4] = static MainActor.shared.getter(v7);
  v4[2] = a4;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
  v4[5] = v8;
  *v8 = v4;
  v8[1] = sub_1000497B4;
  return TTRPrivacyChecker.checkLocationAccess()(v6, &protocol witness table for TTRIPrivacyChecker);
}

void sub_1002E3AAC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  void *object;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char isEscapingClosureAtFileLocation;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];
  _BYTE v44[24];
  _BYTE v45[88];

  v2 = sub_10002A750(&qword_100642098);
  v39 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v39 + 64);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v40 = (char *)&v37 - v6;
  v42 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v7 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v14 = sub_100012DC4(v10, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v15, v45);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  LOBYTE(aBlock[0]) = a1;
  v17 = String.init<A>(describing:)(aBlock, &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  v19 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request hashtag operation change {to: %@", 40, 2, v19);
  v20 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v20);
  v21 = v41;
  v22 = v41 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  v23 = swift_beginAccess(v41 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache, v44, 0, 0);
  v38 = v7;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v22, v42, v23);
  v24 = (uint64_t)v40;
  sub_1002E3EDC((uint64_t)v9, a1);
  v25 = (void *)objc_opt_self(TTRUndoManager);
  v26._countAndFlagsBits = 0xD000000000000023;
  v27._countAndFlagsBits = 0xD000000000000037;
  v26._object = (void *)0x8000000100572B90;
  v28._object = (void *)0x8000000100572BC0;
  v27._object = (void *)0x8000000100572BE0;
  v28._countAndFlagsBits = 0xD000000000000012;
  object = TTRLocalizedString(_:value:comment:)(v26, v28, v27)._object;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  sub_10000735C(v24, (uint64_t)v4, &qword_100642098);
  v31 = *(unsigned __int8 *)(v39 + 80);
  v32 = (v31 + 24) & ~v31;
  v33 = swift_allocObject(&unk_1005FEE18, v32 + v3, v31 | 7);
  *(_QWORD *)(v33 + 16) = v21;
  sub_10000F614((uint64_t)v4, v33 + v32, &qword_100642098);
  v34 = swift_allocObject(&unk_1005FEE40, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_1002E9518;
  *(_QWORD *)(v34 + 24) = v33;
  aBlock[4] = sub_10001B278;
  aBlock[5] = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FEE58;
  v35 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v25, "withActionName:block:", v30, v35, swift_release().n128_f64[0]);
  _Block_release(v35);

  sub_1000073A0(v24, &qword_100642098);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v42);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v34, "", 132, 424, 100, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1002E3EDC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_10002A750(&qword_100654C88);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(int *)(v7 + 48);
  v9 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, a1, v9);
  v6[v8] = a2;
  __asm { BR              X10 }
}

uint64_t sub_1002E3F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v0, 1, 1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
}

void sub_1002E4300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  void *object;
  NSString v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD aBlock[6];
  char v52[88];

  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v46 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v47 = v3;
  v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100642098);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v45 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v5;
  __chkstk_darwin(v6);
  v49 = (char *)&v42 - v7;
  v8 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v15 = sub_100012DC4(v11, (uint64_t)qword_100654AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v16, v52);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v18 = sub_1000175C8((unint64_t *)&qword_100653130, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
  v19 = dispatch thunk of CustomStringConvertible.description.getter(v2, v18);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v19;
  *(_QWORD *)(inited + 56) = v20;
  v21 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Request hashtag labels change {to: %@}", 38, 2, v21);
  v22 = swift_bridgeObjectRelease(v21);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v22);
  v23 = v50;
  sub_1002DF04C(v10);
  v24 = *((_BYTE *)v10 + *(int *)(v8 + 24));
  sub_10001F544((uint64_t)v10, type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel);
  v25 = (uint64_t)v49;
  sub_1002E3EDC(a1, v24);
  v42 = (id)objc_opt_self(TTRUndoManager);
  v26._countAndFlagsBits = 0xD000000000000023;
  v27._countAndFlagsBits = 0xD000000000000037;
  v26._object = (void *)0x8000000100572B90;
  v28._object = (void *)0x8000000100572BC0;
  v27._object = (void *)0x8000000100572BE0;
  v28._countAndFlagsBits = 0xD000000000000012;
  object = TTRLocalizedString(_:value:comment:)(v26, v28, v27)._object;
  v30 = String._bridgeToObjectiveC()();
  v31 = swift_bridgeObjectRelease(object);
  v32 = v46;
  v33 = v48;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v46 + 16))(v48, a1, v2, v31);
  v34 = v45;
  sub_10000735C(v25, v45, &qword_100642098);
  v35 = *(unsigned __int8 *)(v32 + 80);
  v36 = (v35 + 24) & ~v35;
  v37 = *(unsigned __int8 *)(v43 + 80);
  v38 = (v47 + v37 + v36) & ~v37;
  v39 = swift_allocObject(&unk_1005FEFD0, v38 + v44, v35 | v37 | 7);
  *(_QWORD *)(v39 + 16) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v39 + v36, v33, v2);
  sub_10000F614(v34, v39 + v38, &qword_100642098);
  v40 = swift_allocObject(&unk_1005FEFF8, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_1002E976C;
  *(_QWORD *)(v40 + 24) = v39;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF010;
  v41 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v42, "withActionName:block:", v30, v41, swift_release().n128_f64[0]);
  _Block_release(v41);

  sub_1000073A0(v25, &qword_100642098);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v40, "", 132, 433, 100, 1);
  swift_release();
  swift_release();
  if ((v33 & 1) != 0)
    __break(1u);
}

uint64_t sub_1002E47B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  char v20[24];

  v6 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (char *)a1 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  v11 = swift_beginAccess((char *)a1 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache, v20, 0, 0);
  (*(void (**)(_BYTE *, char *, uint64_t, __n128))(v7 + 16))(v9, v10, v6, v11);
  v12 = sub_1000175C8((unint64_t *)&qword_100640E30, (uint64_t (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier, (uint64_t)&protocol conformance descriptor for REMHashtagLabelSpecifier);
  v13 = dispatch thunk of static Equatable.== infix(_:_:)(a2, v9, v6, v12);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) == 0)
  {
    v14 = swift_beginAccess(v10, v19, 33, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 24))(v10, a2, v6, v14);
    swift_endAccess(v19);
  }
  v15 = a1 + 10;
  v17 = a1[13];
  v16 = a1[14];
  sub_10001413C(v15, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 64))(a3, v17, v16);
}

void sub_1002E490C(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  void *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  os_log_t v50;
  int v51;
  void *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[176];
  id v64[5];
  char v65;
  __int128 v66[11];
  _BYTE v67[176];

  v4 = (_QWORD *)v3;
  LODWORD(v57) = a3;
  v56 = a2;
  v55 = type metadata accessor for REMListPickerDataView.PickerMode(0);
  v6 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TTRSmartListFilterEditorViewModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v3 + 104);
  v13 = *(_QWORD *)(v3 + 112);
  sub_10001413C((_QWORD *)(v3 + 80), v12);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  TTRSmartListFilterEditorViewModel.init(filter:doneAlwaysEnabled:)(v14, (*(_BYTE *)(v3 + 65) & 1) == 0, v11);
  sub_1002DF740((uint64_t)v11);
  sub_1002DFB1C((uint64_t)v11);
  v15 = *(int *)(v9 + 44);
  v58 = v11;
  sub_1001CCEC4((__int128 *)&v11[v15], (uint64_t)v66);
  sub_1001CCEC4(v66, (uint64_t)v67);
  v16 = sub_1001CCF00((uint64_t)v67);
  v54 = v6;
  if (!v16)
  {
    v17 = 1;
    goto LABEL_5;
  }
  if (v16 == 1)
  {
    v17 = 2;
LABEL_5:
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v67);
    goto LABEL_7;
  }
  v17 = 0;
LABEL_7:
  if (a1 == 3)
    v18 = v17;
  else
    v18 = a1;
  sub_1001CCEC4(v66, (uint64_t)v63);
  if (sub_1001CCF00((uint64_t)v63) <= 1)
  {
    v19 = *(id *)TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v63).reminders._rawValue;
LABEL_12:
    v20 = v19;
    v21 = (void *)REMObjectID.codable.getter();

    goto LABEL_24;
  }
  v22 = (void *)v4[26];
  v23 = (void *)v4[9];
  v64[0] = 0;
  v24 = objc_msgSend(v22, "fetchDefaultListRequiringCloudKitAccountWithAccountID:error:", v23, v64);
  v21 = v24;
  if (v64[0])
  {
    v25 = v64[0];

    swift_willThrow(v26);
    if (qword_10063D600 != -1)
      swift_once(&qword_10063D600, sub_1002DEFBC);
    v27 = type metadata accessor for Logger(0);
    sub_100012DC4(v27, (uint64_t)qword_100654AF0);
    swift_retain_n(v4, 2);
    v28 = v25;
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc(22, -1);
      v51 = v31;
      v33 = v32;
      v34 = (_QWORD *)swift_slowAlloc(8, -1);
      v52 = (void *)swift_slowAlloc(32, -1);
      v64[0] = v52;
      *(_DWORD *)v33 = 138543618;
      v50 = v29;
      v53 = v18;
      v61 = (uint64_t)v23;
      v35 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v33 + 4, v33 + 12);
      *v34 = v23;
      swift_release_n(v4, 2);
      *(_WORD *)(v33 + 12) = 2080;
      swift_getErrorValue(v28, &v60, v59);
      v36 = Error.rem_errorDescription.getter(v59[1], v59[2]);
      v38 = v37;
      v61 = sub_100027E40(v36, v37, (uint64_t *)v64);
      LOBYTE(v18) = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v33 + 14, v33 + 22);

      swift_bridgeObjectRelease(v38);
      v39 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "Error fetching default list for accountID %{public}@ {error: %s}", (uint8_t *)v33, 0x16u);
      v40 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v34, 1, v40);
      swift_slowDealloc(v34, -1, -1);
      v41 = v52;
      swift_arrayDestroy(v52, 1, &type metadata for Any[8]);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_release_n(v4, 2);
    }
    v21 = 0;
    goto LABEL_23;
  }
  if (!v24)
  {
LABEL_23:
    v19 = 0;
    goto LABEL_24;
  }
  v19 = objc_msgSend(v24, "remObjectID");

  if (v19)
    goto LABEL_12;
  v21 = 0;
LABEL_24:
  sub_1002E4EE4(v18, v21);

  if (((v57 & 1) != 0 || (sub_10000F614(v56, (uint64_t)v64, &qword_100642D10), (~v65 & 0xFE) != 0)) && (_BYTE)v18)
  {
    sub_10001413C(v4 + 15, v4[18]);
    v42 = v18;
    *v8 = REMObjectID.codable.getter();
    v43 = v54;
    v44 = v55;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v54 + 104))(v8, enum case for REMListPickerDataView.PickerMode.specificAccount(_:), v55);
    v57 = v4[26];
    v45 = swift_allocObject(&unk_1005FEEE0, 24, 7);
    swift_weakInit(v45 + 16, v4);
    v46 = swift_allocObject(&unk_1005FF340, 25, 7);
    *(_QWORD *)(v46 + 16) = v45;
    *(_BYTE *)(v46 + 24) = v18;
    v47 = v19;
    swift_retain();
    sub_1000A68D0(v42, (uint64_t)v8, (uint64_t)v19, v56, v57, (uint64_t)sub_1002E9CC0, v46);

    v48 = swift_release();
    (*(void (**)(_QWORD *, uint64_t, __n128))(v43 + 8))(v8, v44, v48);
    sub_10001F544((uint64_t)v58, type metadata accessor for TTRSmartListFilterEditorViewModel);

    swift_release();
  }
  else
  {
    sub_10001F544((uint64_t)v58, type metadata accessor for TTRSmartListFilterEditorViewModel);

  }
}

void sub_1002E4EE4(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  void *object;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_10002A750(&qword_100642078);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)aBlock - v11);
  if (a2 && a1)
  {
    v13 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100521140;
    *(_QWORD *)(v14 + 32) = a2;
    aBlock[0] = v14;
    if (a1 == 1)
    {
      specialized Array._endMutation()(v14);
      *v12 = aBlock[0];
      v12[1] = _swiftEmptyArrayStorage;
      v15 = enum case for REMCustomSmartListFilterDescriptor.FilterLists.lists(_:);
      v16 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
      v17 = *(_QWORD *)(v16 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 104))(v12, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      v18 = a2;
    }
    else
    {
      specialized Array._endMutation()(a2);
      v20 = aBlock[0];
      *v12 = _swiftEmptyArrayStorage;
      v12[1] = v20;
      v21 = enum case for REMCustomSmartListFilterDescriptor.FilterLists.lists(_:);
      v22 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 104))(v12, v21, v22);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
    }
  }
  else
  {
    v19 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  }
  v24 = (void *)objc_opt_self(TTRUndoManager);
  v25._countAndFlagsBits = 0xD000000000000025;
  v26._countAndFlagsBits = 0xD000000000000039;
  v25._object = (void *)0x8000000100572EC0;
  v27._object = (void *)0x8000000100572EF0;
  v26._object = (void *)0x8000000100572F10;
  v27._countAndFlagsBits = 0xD000000000000012;
  object = TTRLocalizedString(_:value:comment:)(v25, v27, v26)._object;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  sub_10000735C((uint64_t)v12, (uint64_t)v9, &qword_100642078);
  v30 = *(unsigned __int8 *)(v7 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = swift_allocObject(&unk_1005FF368, v31 + v8, v30 | 7);
  *(_QWORD *)(v32 + 16) = v3;
  sub_10000F614((uint64_t)v9, v32 + v31, &qword_100642078);
  v33 = swift_allocObject(&unk_1005FF390, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_1002E9CE0;
  *(_QWORD *)(v33 + 24) = v32;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF3A8;
  v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  objc_msgSend(v24, "withActionName:block:", v29, v34, swift_release().n128_f64[0]);
  _Block_release(v34);

  sub_1000073A0((uint64_t)v12, &qword_100642078);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 132, 764, 97, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1002E5288(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  void *v8;
  void *v9;
  _BYTE v10[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  if (swift_weakLoadStrong(v7))
  {
    if (a2 == -1)
    {
      v9 = 0;
    }
    else
    {
      v8 = (void *)TTRListOrCustomSmartList.objectID.getter(a1, a2 & 1);
      v9 = (void *)REMObjectID.codable.getter();

    }
    sub_1002E4EE4(a4, v9);
    swift_release();

  }
}

id sub_1002E5330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  void **v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  void *v25;
  uint64_t v26;

  static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter();
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v3, 0, 1);

  v25 = sub_1002E9594;
  v26 = v0;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1000D4884;
  v24 = &unk_1005FEE80;
  v5 = _Block_copy(&v21);
  swift_retain();
  objc_msgSend(v4, "addTextFieldWithConfigurationHandler:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);
  static TTRLocalizableStrings.Common.alertCancelButton.getter(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = (void *)objc_opt_self(UIAlertAction);
  v11 = objc_msgSend(v10, "actionWithTitle:style:handler:", v9, 1, 0);

  static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter();
  v13 = v12;
  v14 = swift_allocObject(&unk_1005FEEB8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v4);
  v15 = swift_allocObject(&unk_1005FEEE0, 24, 7);
  swift_weakInit(v15 + 16, v0);
  v16 = swift_allocObject(&unk_1005FEF08, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  swift_retain();
  swift_retain();
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v25 = sub_1002E9610;
  v26 = v16;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1000D4884;
  v24 = &unk_1005FEF20;
  v18 = _Block_copy(&v21);
  v19 = objc_msgSend(v10, "actionWithTitle:style:handler:", v17, 0, v18, swift_release().n128_f64[0]);
  _Block_release(v18);
  swift_release();
  swift_release();

  objc_msgSend(v4, "addAction:", v11);
  objc_msgSend(v4, "addAction:", v19);

  return v4;
}

uint64_t sub_1002E55D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t result;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  Swift::String v21;
  unint64_t v22;
  Swift::String v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v1 = v0;
  v2 = sub_10002A750(&qword_100642090);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  v12 = v0[13];
  v13 = v0[14];
  sub_10001413C(v0 + 10, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_1000073A0((uint64_t)v4, &qword_100642090);
  }
  v15 = (void *)v14;
  REMCustomSmartListFilterDescriptor.date.getter(v14);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1000073A0((uint64_t)v4, &qword_100642090);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:))
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:))
    goto LABEL_9;
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:))
  {
    v22 = 4;
    if ((v1[7] & 4) != 0)
      v22 = v1[7] & 0xFFFFFFFFFFFFFFFBLL;
    v1[7] = v22;
    v23._object = (void *)0x8000000100560820;
    v23._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v23);
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v11, v5);
    return ((uint64_t (*)(char *, uint64_t))v24)(v8, v5);
  }
  else
  {
    if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:))
    {
LABEL_9:
      v18 = *(void (**)(char *, uint64_t))(v6 + 8);
      v18(v8, v5);
      v19 = v1[7];
      if ((v19 & 1) != 0)
        v20 = v19 & 0xFFFFFFFFFFFFFFFELL;
      else
        v20 = 1;
      v1[7] = v20;
      v21._object = (void *)0x8000000100560820;
      v21._countAndFlagsBits = 0xD000000000000011;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v21);
      return ((uint64_t (*)(char *, uint64_t))v18)(v11, v5);
    }
    if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:)
      || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:))
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002E58C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t result;
  unint64_t v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v1 = v0;
  v2 = sub_10002A750(&qword_100642090);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - v10;
  v12 = v0[13];
  v13 = v0[14];
  sub_10001413C(v0 + 10, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_1000073A0((uint64_t)v4, &qword_100642090);
  }
  v15 = (void *)v14;
  REMCustomSmartListFilterDescriptor.date.getter(v14);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1000073A0((uint64_t)v4, &qword_100642090);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.today(_:))
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.dateRange(_:))
  {
    v18 = 2;
    if ((v1[7] & 2) != 0)
      v18 = v1[7] & 0xFFFFFFFFFFFFFFFDLL;
    v1[7] = v18;
    v19._object = (void *)0x8000000100560820;
    v19._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v19);
    goto LABEL_16;
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.relativeRange(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.beforeDate(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.onDate(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.afterDate(_:))
  {
LABEL_16:
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v11, v5);
    return ((uint64_t (*)(char *, uint64_t))v20)(v8, v5);
  }
  if (v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.any(_:)
    || v16 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.noDate(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
  __break(1u);
  return result;
}

uint64_t sub_1002E5B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 88) = v14;
  *(_QWORD *)(v8 + 96) = v15;
  *(_BYTE *)(v8 + 128) = a8;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 64) = a5;
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 112) = static MainActor.shared.getter(v10);
  *(_QWORD *)(v8 + 56) = a4;
  v11 = (_QWORD *)swift_task_alloc(async function pointer to TTRPrivacyChecker.checkLocationAccess()[1]);
  *(_QWORD *)(v8 + 120) = v11;
  v12 = type metadata accessor for TTRIPrivacyChecker(0);
  *v11 = v8;
  v11[1] = sub_1002E5BFC;
  return TTRPrivacyChecker.checkLocationAccess()(v12, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_1002E5BFC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1002E5C6C, v3, v4);
}

uint64_t sub_1002E5C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  __n128 v9;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_BYTE *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD **)(v0 + 64);
  swift_release();
  v7 = sub_10001413C(v6, v6[3]);
  sub_100010634(v1, v0 + 16);
  v8 = swift_allocObject(&unk_1005FF278, 56, 7);
  sub_10002E37C((__int128 *)(v0 + 16), v8 + 16);
  sub_1002E8FF8(v5, v4, v3, v2, (uint64_t)sub_1002E9BCC, v8, *v7);
  v9 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

void sub_1002E5D34(void *a1, uint64_t a2)
{
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[6];
  __int128 v15[2];

  v4 = objc_opt_self(TTRUndoManager);
  v5._countAndFlagsBits = 0xD000000000000027;
  v6._countAndFlagsBits = 0xD00000000000003BLL;
  v5._object = (void *)0x8000000100572DF0;
  v7._object = (void *)0x8000000100572E20;
  v6._object = (void *)0x8000000100572E40;
  v7._countAndFlagsBits = 0xD000000000000016;
  object = TTRLocalizedString(_:value:comment:)(v5, v7, v6)._object;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  sub_100010634(a2, (uint64_t)v15);
  v10 = swift_allocObject(&unk_1005FF2A0, 64, 7);
  sub_10002E37C(v15, v10 + 16);
  *(_QWORD *)(v10 + 56) = a1;
  v11 = swift_allocObject(&unk_1005FF2C8, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1002E9C00;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF2E0;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  swift_retain();
  objc_msgSend((id)v4, "withActionName:block:", v9, v12, swift_release().n128_f64[0]);

  _Block_release(v12);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v11, "", 132, 568, 108, 1);
  swift_release();
  swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
}

uint64_t sub_1002E5EF8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v2 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v6 = a1[4];
  v7 = sub_10001413C(a1, v5);
  REMCustomSmartListFilterDescriptor.location.getter(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v4, v5, v6);
  return sub_1000073A0((uint64_t)v4, &qword_100642080);
}

void sub_1002E5FA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100654AF0);
  v3 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Filter Editor Done", 18, 2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = *sub_10001413C(v0 + 15, v0[18]);
  if (qword_10063D360 != -1)
    swift_once(&qword_10063D360, sub_1000A6840);
  sub_100012DC4(v2, (uint64_t)qword_100642EC0);
  sub_1002EB4BC(0x746544207473694CLL, 0xEB000000006C6961);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + 16);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "navigationController");

    if (v7)
    {
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  v8 = swift_unknownObjectWeakLoadStrong(v1 + 4);
  if (v8)
  {
    v10 = v8;
    v11 = v1[5];
    ObjectType = swift_getObjectType(v8, v9);
    v13 = v1[13];
    v14 = v1[14];
    sub_10001413C(v1 + 10, v13);
    v15 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    (*(void (**)(_QWORD *, _UNKNOWN **, id, uint64_t, uint64_t))(v11 + 8))(v1, &off_1005FECD0, v15, ObjectType, v11);
    swift_unknownObjectRelease(v10);

  }
}

void sub_1002E61A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  void *v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  _QWORD *v21;
  void *Strong;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  _QWORD v34[6];

  v2 = v1;
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v4 = type metadata accessor for Logger(0);
  sub_100012DC4(v4, (uint64_t)qword_100654AF0);
  v5 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Filter Editor Cancel", 20, 2, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v1[13];
  v7 = v1[14];
  sub_10001413C(v1 + 10, v6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7) & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    v10 = v9;
    v11 = swift_allocObject(&unk_1005FEEE0, 24, 7);
    swift_weakInit(v11 + 16, v2);
    swift_retain();
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v34[4] = sub_1002EA10C;
    v34[5] = v11;
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 1107296256;
    v34[2] = sub_1000D4884;
    v34[3] = &unk_1005FF5B0;
    v13 = _Block_copy(v34);
    swift_release();
    v14 = (void *)objc_opt_self(UIAlertAction);
    v15 = objc_msgSend(v14, "actionWithTitle:style:handler:", v12, 2, v13);
    _Block_release(v13);
    swift_release();

    static TTRLocalizableStrings.Common.alertCancelButton.getter(v16);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v14, "actionWithTitle:style:handler:", v19, 1, 0, swift_bridgeObjectRelease(v18).n128_f64[0]);

    objc_msgSend(v8, "addAction:", v15);
    objc_msgSend(v8, "addAction:", v20);
    UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)(a1);
    v21 = sub_10001413C(v2 + 15, v2[18]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v21 + 16);
    if (Strong
      && (v23 = Strong,
          v24 = objc_msgSend(Strong, "navigationController"),
          v23,
          v24))
    {
      objc_msgSend(v24, "presentViewController:animated:completion:", v8, 1, 0);

    }
    else
    {

    }
  }
  else
  {
    v25 = *sub_10001413C(v1 + 15, v1[18]);
    if (qword_10063D360 != -1)
      swift_once(&qword_10063D360, sub_1000A6840);
    sub_100012DC4(v4, (uint64_t)qword_100642EC0);
    sub_1002EB4BC(0x746544207473694CLL, 0xEB000000006C6961);
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v25 + 16);
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend(v26, "navigationController");

      if (v28)
      {
        objc_msgSend(v28, "dismissViewControllerAnimated:completion:", 1, 0);

      }
    }
    v29 = swift_unknownObjectWeakLoadStrong(v2 + 4);
    if (v29)
    {
      v31 = v29;
      v32 = v2[5];
      ObjectType = swift_getObjectType(v29, v30);
      (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v32 + 16))(v2, &off_1005FECD0, ObjectType, v32);
      swift_unknownObjectRelease(v31);
    }
  }
}

double sub_1002E6590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    v6 = *sub_10001413C((_QWORD *)(Strong + 120), *(_QWORD *)(Strong + 144));
    if (qword_10063D360 != -1)
      swift_once(&qword_10063D360, sub_1000A6840);
    v7 = type metadata accessor for Logger(0);
    sub_100012DC4(v7, (uint64_t)qword_100642EC0);
    sub_1002EB4BC(0x746544207473694CLL, 0xEB000000006C6961);
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "navigationController");

      if (v10)
      {
        objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);

      }
    }
    v11 = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (v11)
    {
      v13 = v11;
      v14 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(v11, v12);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v14 + 16))(v5, &off_1005FECD0, ObjectType, v14);
      swift_release();
      swift_unknownObjectRelease(v13);
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_1002E66EC(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];
  _BYTE v17[24];

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    *(_QWORD *)(Strong + 280) = 0;
    swift_release();
    static TTRLocalizableStrings.UndoAction.locationChange.getter(v7);
    v9 = v8;
    v10 = (void *)objc_opt_self(TTRUndoManager);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v12 = swift_allocObject(&unk_1005FF1D8, 40, 7);
    *(_QWORD *)(v12 + 16) = v2;
    *(_BYTE *)(v12 + 24) = v3;
    *(_QWORD *)(v12 + 32) = v6;
    v13 = swift_allocObject(&unk_1005FF200, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_1002E9A84;
    *(_QWORD *)(v13 + 24) = v12;
    aBlock[4] = sub_1000381EC;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B258;
    aBlock[3] = &unk_1005FF218;
    v14 = _Block_copy(aBlock);
    v15 = v2;
    swift_retain();
    swift_retain();
    objc_msgSend(v10, "withActionName:block:", v11, v14, swift_release().n128_f64[0]);
    swift_release();

    _Block_release(v14);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v13, "", 132, 673, 59, 1);
    swift_release();
    swift_release();
    if ((v6 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1002E68A8(void *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = sub_10002A750(&qword_100642080);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v36 - v14);
  v16 = a1;
  v17 = v16;
  if ((a2 & 1) != 0)
  {
    *v12 = (uint64_t)objc_msgSend(v16, "event");
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.vehicle(_:), v9);
    v24 = a3[13];
    v25 = a3[14];
    sub_10001413C(a3 + 10, v24);
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v8, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v8, v24, v25);
    v18 = v17;
    v15 = v12;
  }
  else
  {
    v18 = objc_msgSend(v16, "structuredLocation");
    v19 = objc_msgSend(v18, "displayName");
    if (v19)
    {
      v20 = v19;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0xE000000000000000;
    }
    objc_msgSend(v18, "latitude");
    v27 = v26;
    objc_msgSend(v18, "longitude");
    v29 = v28;
    objc_msgSend(v18, "radius");
    v31 = v30;
    v32 = objc_msgSend(v17, "proximity");
    *v15 = v21;
    v15[1] = v23;
    v15[2] = v27;
    v15[3] = v29;
    v15[4] = v31;
    v15[5] = (uint64_t)v32;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v15, enum case for REMCustomSmartListFilterDescriptor.FilterLocation.location(_:), v9);
    v33 = a3[13];
    v34 = a3[14];
    sub_10001413C(a3 + 10, v33);
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v8, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v8, v33, v34);

  }
  sub_1000073A0((uint64_t)v8, &qword_100642080);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1002E6B70@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  Swift::String v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  v5 = result;
  if (result)
  {
    v6._object = (void *)0x8000000100560820;
    v6._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v6);
    result = swift_release(v5);
  }
  *a2 = v5 == 0;
  return result;
}

uint64_t sub_1002E6C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[9] = v7;
  v4[10] = v8;
  return swift_task_switch(sub_1002E6C6C, v7, v8);
}

uint64_t sub_1002E6C6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 56) + 168), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 192));
  v2 = *v1;
  *(_QWORD *)(v0 + 88) = *v1;
  return swift_task_switch(sub_1002E6CB4, v2, 0);
}

uint64_t sub_1002E6CB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 88);
  if (*(_QWORD *)(v1 + 160))
  {
    *(_BYTE *)(v0 + 122) = *(_BYTE *)(v1 + 168) & 1;
    return swift_task_switch(sub_1002E6FEC, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc(dword_100662C6C);
    *(_QWORD *)(v0 + 96) = v3;
    *v3 = v0;
    v3[1] = sub_1002E6D30;
    return sub_1004B8994();
  }
}

uint64_t sub_1002E6D30(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 96);
  *(_QWORD *)(*v3 + 104) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = *(_QWORD *)(v6 + 72);
    v9 = *(_QWORD *)(v6 + 80);
    v10 = sub_1002E6DF4;
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 88);
    *(_WORD *)(v6 + 120) = a2;
    *(_QWORD *)(v6 + 112) = a1;
    v10 = sub_1002E6DB0;
    v9 = 0;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_1002E6DB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  *(_BYTE *)(v0 + 122) = *(_WORD *)(v0 + 120) & 1;
  return swift_task_switch(sub_1002E6FEC, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1002E6DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_release();
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100654AF0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 104);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 40, v0 + 16);
    v10 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 48) = sub_100027E40(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unable to get iCloud device info %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, &type metadata for Any[8]);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E6FEC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  Swift::String v3;

  v1 = *(unsigned __int8 *)(v0 + 122);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));
  if (v1 != *(unsigned __int8 *)(v2 + 64))
  {
    *(_BYTE *)(v2 + 64) = *(_BYTE *)(v0 + 122);
    v3._object = (void *)0x8000000100560820;
    v3._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v3);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002E7058()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + 10;
  v6 = v0[13];
  v7 = v0[14];
  sub_10001413C(v0 + 10, v6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 4);
    if (Strong)
    {
      v10 = Strong;
      v11 = v1[5];
      ObjectType = swift_getObjectType(Strong, v9);
      v26 = (id)(*(uint64_t (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v11 + 24))(v1, &off_1005FECD0, ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v13 = v1[13];
      v14 = v1[14];
      sub_10001413C(v5, v13);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
      if (v15)
      {
        v16 = (void *)v15;
        sub_100010634((uint64_t)(v1 + 28), (uint64_t)v27);
        v17 = v28;
        v18 = v29;
        sub_10001413C(v27, v28);
        v19 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
        v20 = (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v18 + 8))(v26, v19, v17, v18);
        sub_100027F10(v27);
        if ((v20 & 1) != 0)
        {

        }
        else
        {
          v21 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
          type metadata accessor for MainActor(0);
          swift_retain();
          v22 = v26;
          v23 = v16;
          v24 = static MainActor.shared.getter(v23);
          v25 = (_QWORD *)swift_allocObject(&unk_1005FEDF0, 56, 7);
          v25[2] = v24;
          v25[3] = &protocol witness table for MainActor;
          v25[4] = v1;
          v25[5] = v22;
          v25[6] = v23;
          sub_100148368((uint64_t)v4, (uint64_t)&unk_100654C70, (uint64_t)v25);
          swift_release();

        }
      }
      else
      {

      }
    }
  }
}

uint64_t sub_1002E7284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[23] = a5;
  v6[24] = a6;
  v6[22] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[25] = v7;
  v6[26] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v6[27] = v9;
  v6[28] = v10;
  return swift_task_switch(sub_1002E72F8, v9, v10);
}

uint64_t sub_1002E72F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 176) + 168), *(_QWORD *)(*(_QWORD *)(v0 + 176) + 192));
  v2 = *v1;
  *(_QWORD *)(v0 + 232) = *v1;
  return swift_task_switch(sub_1002E7340, v2, 0);
}

uint64_t sub_1002E7340()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 232);
  if (*(_QWORD *)(v1 + 160))
  {
    *(_BYTE *)(v0 + 365) = *(_BYTE *)(v1 + 168);
    return swift_task_switch(sub_1002E76CC, *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc(dword_100662C6C);
    *(_QWORD *)(v0 + 240) = v3;
    *v3 = v0;
    v3[1] = sub_1002E73B8;
    return sub_1004B8994();
  }
}

uint64_t sub_1002E73B8(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 240);
  *(_QWORD *)(*v3 + 248) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = *(_QWORD *)(v6 + 216);
    v9 = *(_QWORD *)(v6 + 224);
    v10 = sub_1002E74DC;
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 232);
    *(_WORD *)(v6 + 360) = a2;
    *(_QWORD *)(v6 + 256) = a1;
    v10 = sub_1002E7438;
    v9 = 0;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_1002E7438()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[32]);
  return swift_task_switch(sub_1002E7470, v0[27], v0[28]);
}

uint64_t sub_1002E7470()
{
  uint64_t v0;
  __n128 v1;
  uint64_t *v3;
  uint64_t v4;

  if ((*(_WORD *)(v0 + 360) & 1) != 0)
  {
    v3 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 176) + 168), *(_QWORD *)(*(_QWORD *)(v0 + 176) + 192));
    v4 = *v3;
    *(_QWORD *)(v0 + 264) = *v3;
    return swift_task_switch(sub_1002E7738, v4, 0);
  }
  else
  {
    v1 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
  }
}

uint64_t sub_1002E74DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 248);
  swift_release();
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100654AF0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v1, v0 + 160, v0 + 136);
    v8 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v10 = v9;
    *(_QWORD *)(v0 + 168) = sub_100027E40(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unable to get iCloud device info %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E76CC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t *v3;
  uint64_t v4;

  if ((*(_BYTE *)(v0 + 365) & 1) != 0)
  {
    v3 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 176) + 168), *(_QWORD *)(*(_QWORD *)(v0 + 176) + 192));
    v4 = *v3;
    *(_QWORD *)(v0 + 264) = *v3;
    return swift_task_switch(sub_1002E7738, v4, 0);
  }
  else
  {
    v1 = swift_release();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
  }
}

uint64_t sub_1002E7738()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0[33] + 160);
  if (v1)
  {
    v0[36] = v1;
    v2 = v0[27];
    v3 = v0[28];
    swift_bridgeObjectRetain(v1);
    return swift_task_switch(sub_1002E7A1C, v2, v3);
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc(dword_100662C6C);
    v0[34] = v5;
    *v5 = v0;
    v5[1] = sub_1002E77B8;
    return sub_1004B8994();
  }
}

uint64_t sub_1002E77B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  *(_QWORD *)(*(_QWORD *)v2 + 280) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[27];
    v7 = v4[28];
    v8 = sub_1002E782C;
  }
  else
  {
    v4[36] = a1;
    v6 = v4[27];
    v7 = v4[28];
    v8 = sub_1002E7A1C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1002E782C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 280);
  swift_release();
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v2 = type metadata accessor for Logger(0);
  sub_100012DC4(v2, (uint64_t)qword_100654AF0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v1, v0 + 160, v0 + 136);
    v8 = Error.rem_errorDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v10 = v9;
    *(_QWORD *)(v0 + 168) = sub_100027E40(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unable to get iCloud device info %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, &type metadata for Any[8]);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E7A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  void *object;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v1);
    v4 = (char *)(v3 + 49);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(v4 - 1) & 1) == 0)
      {
        v7 = *(_QWORD *)(v4 - 17);
        v8 = *(_QWORD *)(v4 - 9);
        v9 = *v4;
        swift_bridgeObjectRetain(v8);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_10045714C(0, v5[2] + 1, 1, v5);
        v11 = v5[2];
        v10 = v5[3];
        if (v11 >= v10 >> 1)
          v5 = sub_10045714C((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
        v5[2] = v11 + 1;
        v6 = &v5[3 * v11];
        v6[4] = v7;
        v6[5] = v8;
        *((_BYTE *)v6 + 48) = v9 ^ 1;
      }
      v4 += 24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 288));
    v1 = *(_QWORD *)(v0 + 288);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRelease(v1);
  v14._countAndFlagsBits = 0xD000000000000023;
  v15._countAndFlagsBits = 0xD00000000000003BLL;
  v14._object = (void *)0x8000000100572AC0;
  v16._object = (void *)0x8000000100572AF0;
  v15._object = (void *)0x8000000100572B20;
  v16._countAndFlagsBits = 0xD000000000000021;
  object = TTRLocalizedString(_:value:comment:)(v14, v16, v15)._object;
  v18 = sub_1002DEE64((uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE21HiddenInformativeText7devicesSSSaySS4name_Sb15cannotBeUpdatedtG_tFZ_0((uint64_t)v18);
  v20 = v19;
  swift_bridgeObjectRelease(v18);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(v0 + 296) = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v21, v22, 1);

  v23 = sub_10001413C((_QWORD *)(v13 + 120), *(_QWORD *)(v13 + 144));
  v24 = sub_10002A750(&qword_100649EF0);
  v25 = swift_allocObject(v24, 96, 7);
  *(_QWORD *)(v0 + 304) = v25;
  *(_OWORD *)(v25 + 16) = xmmword_1005201E0;
  v26 = static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(_BYTE *)(v0 + 364) = 0;
  v28 = TTRIValueBasedAlertAction.init(title:style:value:)(v26, v27, 0, v0 + 364, &type metadata for Bool);
  v29 = static TTRLocalizableStrings.Common.learnMoreButton.getter(v28);
  *(_BYTE *)(v0 + 362) = 1;
  v31 = TTRIValueBasedAlertAction.init(title:style:value:)(v29, v30, 0, v0 + 362, &type metadata for Bool);
  *(_QWORD *)(v0 + 312) = *v23;
  *(_QWORD *)(v0 + 320) = static MainActor.shared.getter(v31);
  v33 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v32);
  *(_QWORD *)(v0 + 328) = v33;
  *(_QWORD *)(v0 + 336) = v34;
  return swift_task_switch(sub_1002E7CFC, v33, v34);
}

uint64_t sub_1002E7CFC()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(v0[39] + 16);
  v0[43] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(async function pointer to UIViewController.present<A>(alert:actions:didPresent:animated:)[1]);
    v0[44] = v2;
    *v2 = v0;
    v2[1] = sub_1002E7DB0;
    return UIViewController.present<A>(alert:actions:didPresent:animated:)((char *)v0 + 363, v0[37], v0[38], 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    v4 = v0[38];
    swift_release();
    swift_bridgeObjectRelease(v4);
    return swift_task_switch(sub_1002E7FD8, v0[27], v0[28]);
  }
}

uint64_t sub_1002E7DB0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 344);
  swift_task_dealloc(*(_QWORD *)(*v0 + 352));

  *(_BYTE *)(v1 + 366) = *(_BYTE *)(v1 + 363);
  return swift_task_switch(sub_1002E7E08, *(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 336));
}

uint64_t sub_1002E7E08()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[38];
  swift_release();
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1002E7E4C, v0[27], v0[28]);
}

uint64_t sub_1002E7E4C()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(unsigned __int8 *)(v0 + 366);
  swift_release();
  if (v1 == 1)
  {
    v2 = sub_10001413C((_QWORD *)(*(_QWORD *)(v0 + 176) + 120), *(_QWORD *)(*(_QWORD *)(v0 + 176) + 144));
    v3 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor(v2);
    v4 = *v3;
    v5 = v3[1];
    *(_QWORD *)(v0 + 16) = 0xD000000000000014;
    *(_QWORD *)(v0 + 24) = 0x8000000100569E30;
    *(_QWORD *)(v0 + 32) = v4;
    *(_QWORD *)(v0 + 40) = v5;
    *(_OWORD *)(v0 + 48) = xmmword_100527ED0;
    *(_OWORD *)(v0 + 64) = xmmword_100527EE0;
    *(_QWORD *)(v0 + 80) = 0xD000000000000018;
    *(_QWORD *)(v0 + 88) = 0x8000000100569E50;
    swift_bridgeObjectRetain(v5);
    sub_1000A6E2C(v0 + 16);
    sub_1001CCDC0(0xD000000000000014, 0x8000000100569E30, v4, v5, 0x6236646637647061, 0xEC00000035393561);
    sub_100179CA0(0x393739646E6D6572, 0xEC00000064336133, 0xD000000000000018, 0x8000000100569E50);
  }
  v6 = *(void **)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 184);
  sub_100010634(*(_QWORD *)(v0 + 176) + 224, v0 + 96);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 128);
  sub_10001413C((_QWORD *)(v0 + 96), v8);
  v10 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v10, v8, v9);

  sub_100027F10((_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E7FD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 184);
  sub_100010634(*(_QWORD *)(v0 + 176) + 224, v0 + 96);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  sub_10001413C((_QWORD *)(v0 + 96), v3);
  v5 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3, v4);

  sub_100027F10((_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E807C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);

  sub_100027F10((_QWORD *)(v0 + 80));
  sub_100027F10((_QWORD *)(v0 + 120));
  swift_release();
  sub_100027F10((_QWORD *)(v0 + 168));

  swift_release();
  sub_100027F10((_QWORD *)(v0 + 224));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache;
  v2 = type metadata accessor for REMHashtagLabelSpecifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1002E8128()
{
  uint64_t v0;

  sub_1002E807C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002E814C()
{
  return type metadata accessor for TTRISmartListFilterEditorPresenter(0);
}

uint64_t type metadata accessor for TTRISmartListFilterEditorPresenter(uint64_t a1)
{
  return sub_100007328(a1, qword_100654B38, (uint64_t)&nominal type descriptor for TTRISmartListFilterEditorPresenter);
}

uint64_t sub_1002E8168(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = &unk_10052D518;
  v4[1] = &unk_10052D518;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_10052D530;
  v4[4] = &unk_10052D548;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_10052D560;
  v4[7] = &unk_10052D560;
  v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[9] = &unk_10052D560;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[12] = &unk_10052D560;
  v4[13] = &unk_10052D578;
  v4[14] = &unk_10052D590;
  v4[15] = &unk_10052D548;
  v4[16] = &unk_10052D5A8;
  v4[17] = &unk_10052D548;
  result = type metadata accessor for REMHashtagLabelSpecifier(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(result - 8) + 64;
    return swift_updateClassMetadata2(a1, 256, 19, v4, a1 + 80);
  }
  return result;
}

void sub_1002E8244(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  id v11;

  v4 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v5 = (void *)static UIFont.roundedBodyFont.getter(v4);
  objc_msgSend(a1, "setFont:", v5);

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(a1, "setTextColor:", v6);

  objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(a1, "setMinimumFontSize:", 14.0);
  objc_msgSend(a1, "setClearButtonMode:", 1);
  objc_msgSend(a1, "setBorderStyle:", 0);
  objc_msgSend(a1, "setAutocapitalizationType:", 1);
  static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter(objc_msgSend(a1, "setKeyboardType:", 0));
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setPlaceholder:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
  v10 = swift_allocObject(&unk_1005FEEE0, 24, 7);
  swift_weakInit(v10 + 16, a2);
  v11 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002E97E4, v10);
  objc_msgSend(a1, "addAction:forControlEvents:", v11, 0x20000);

}

void sub_1002E8440(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;
  _BYTE v20[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    v4 = objc_msgSend(a1, "sender");
    if (v4)
    {
      v5 = v4;
      _bridgeAnyObjectToAny(_:)(v17);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      memset(v17, 0, sizeof(v17));
    }
    sub_10000F614((uint64_t)v17, (uint64_t)v18, &qword_100640E50);
    if (v19)
    {
      v6 = sub_100005ED8(0, (unint64_t *)&qword_10065F350, UITextField_ptr);
      if ((swift_dynamicCast(&v16, v18, &type metadata for Any[8], v6, 6) & 1) != 0)
      {
        v7 = v16;
        v8 = objc_msgSend(v16, "text");
        if (v8)
        {
          v9 = v8;
          v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
          v12 = v11;

        }
        else
        {
          v10 = 0;
          v12 = 0xE000000000000000;
        }
        sub_1002E92C0(v10, v12);
        v14 = v13;
        swift_bridgeObjectRelease(v12);
        v15 = String._bridgeToObjectiveC()();
        objc_msgSend(v7, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);
        swift_release();

      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
      sub_1000073A0((uint64_t)v18, &qword_100640E50);
    }
  }
}

void sub_1002E85F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    v5 = a3 + 16;
    swift_beginAccess(v5, &v22, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
    if (!Strong)
    {
      swift_release();
      return;
    }
    v7 = Strong;
    v8 = objc_msgSend(Strong, "textFields");
    if (!v8)
    {
      swift_release();

      return;
    }
    v9 = v8;
    v10 = sub_100005ED8(0, (unint64_t *)&qword_10065F350, UITextField_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

    if ((v11 & 0xC000000000000001) != 0)
    {
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
    }
    else
    {
      if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v12 = *(id *)(v11 + 32);
    }
    v13 = v12;
    v14 = objc_msgSend(v12, "text", swift_bridgeObjectRelease(v11).n128_f64[0]);
    if (v14)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      v19 = sub_1002E92C0(v16, v18);
      v21 = v20;
      swift_bridgeObjectRelease(v18);
      sub_1002E8798(v19, v21);
      swift_release();

      swift_bridgeObjectRelease(v21);
    }
    else
    {
      swift_release();

    }
  }
}

void sub_1002E8798(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)();
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  void *object;
  NSString v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  Swift::String v41;
  Swift::Bool v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t inited;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  void *v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  Swift::String v60;
  uint64_t (*v61)();
  id v62;
  void (*v63)(char *, _QWORD *);
  _QWORD *v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char v76[48];
  _QWORD aBlock[7];

  v4 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v68 = (uint64_t *)((char *)&v61 - v8);
  v73 = type metadata accessor for REMHashtagLabelSpecifier.Operation(0);
  v70 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v69 = (char *)&v61 - v11;
  v12 = (_QWORD *)type metadata accessor for REMHashtagLabelCollection(0);
  v13 = (uint64_t (*)())*(v12 - 1);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - v20;
  v67 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel(0);
  __chkstk_darwin(v67);
  v74 = (uint64_t *)((char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10063D600 != -1)
    swift_once(&qword_10063D600, sub_1002DEFBC);
  v23 = type metadata accessor for Logger(0);
  sub_100012DC4(v23, (uint64_t)qword_100654AF0);
  v24 = sub_10002D32C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000143B4((uint64_t)"Hashtag editor create new tag", 29, 2, v24);
  swift_bridgeObjectRelease(v24);
  v25 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v25 = a1 & 0xFFFFFFFFFFFFLL;
  if (v25)
  {
    v64 = v6;
    v26 = v74;
    sub_1002DF04C(v74);
    swift_bridgeObjectRetain(*v26);
    REMHashtagLabelCollection.init(labels:)(v27);
    v28._countAndFlagsBits = a1;
    v28._object = (void *)a2;
    if (REMHashtagLabelCollection.contains(matchOfHashtagName:)(v28))
    {
      v29 = 0;
      v30 = 0;
    }
    else
    {
      v31 = sub_10002A750((uint64_t *)&unk_100654F80);
      v32 = swift_allocObject(v31, 48, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100520250;
      *(_QWORD *)(v32 + 32) = a1;
      *(_QWORD *)(v32 + 40) = a2;
      swift_bridgeObjectRetain(a2);
      REMHashtagLabelCollection.init(labels:)(v32);
      REMHashtagLabelCollection.union(_:)(v18);
      v63 = (void (*)(char *, _QWORD *))*((_QWORD *)v13 + 1);
      v63(v21, v12);
      v61 = v13;
      (*((void (**)(char *, char *, _QWORD *))v13 + 4))(v21, v15, v12);
      v62 = (id)objc_opt_self(TTRUndoManager);
      v33._countAndFlagsBits = 0xD00000000000001FLL;
      v34._countAndFlagsBits = 0xD000000000000036;
      v33._object = (void *)0x8000000100572C40;
      v34._object = (void *)0x8000000100572C60;
      v35._countAndFlagsBits = 0x67615420646441;
      v35._object = (void *)0xE700000000000000;
      object = TTRLocalizedString(_:value:comment:)(v33, v35, v34)._object;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v38 = (_QWORD *)swift_allocObject(&unk_1005FEF58, 40, 7);
      v38[2] = v75;
      v38[3] = a1;
      v38[4] = a2;
      v39 = swift_allocObject(&unk_1005FEF80, 32, 7);
      *(_QWORD *)(v39 + 16) = sub_1002E962C;
      *(_QWORD *)(v39 + 24) = v38;
      v66 = v38;
      aBlock[4] = sub_1000381EC;
      aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B258;
      aBlock[3] = &unk_1005FEF98;
      v40 = _Block_copy(aBlock);
      swift_bridgeObjectRetain(a2);
      swift_retain();
      swift_retain();
      objc_msgSend(v62, "withActionName:block:", v37, v40, swift_release().n128_f64[0]);
      _Block_release(v40);

      v63(v18, v12);
      LOBYTE(v37) = swift_isEscapingClosureAtFileLocation(v39, "", 132, 944, 95, 1);
      swift_release();
      if ((v37 & 1) != 0)
      {
        __break(1u);
        return;
      }
      v13 = v61;
      v30 = (uint64_t)v66;
      v29 = sub_1002E962C;
    }
    v41._countAndFlagsBits = a1;
    v41._object = (void *)a2;
    v42 = REMHashtagLabelCollection.contains(matchOfHashtagName:)(v41);
    v43 = v73;
    if (v42)
    {
      v61 = v29;
      v66 = (_QWORD *)v30;
      v62 = v12;
      v44 = sub_10002A750((uint64_t *)&unk_100654F80);
      inited = swift_initStackObject(v44, v76);
      *(_OWORD *)(inited + 16) = xmmword_100520250;
      *(_QWORD *)(inited + 32) = a1;
      *(_QWORD *)(inited + 40) = a2;
      swift_bridgeObjectRetain(a2);
      v63 = (void (*)(char *, _QWORD *))sub_100490398(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 1, &type metadata for String);
      v46 = v69;
      v47 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for REMHashtagLabelSpecifier.Operation.and(_:), v43);
      v48 = v68;
      v50 = v71;
      v49 = v72;
      (*(void (**)(uint64_t *, char *, uint64_t))(v71 + 16))(v68, (char *)v74 + *(int *)(v67 + 20), v72);
      v51 = (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 88))(v48, v49);
      v52 = enum case for REMHashtagLabelSpecifier.labels(_:);
      if (v51 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v50 + 96))(v48, v49);
        v53 = (void *)v48[1];
        v67 = *v48;
        v54 = (char *)v48 + *(int *)(sub_10002A750((uint64_t *)&unk_1006651D0) + 64);
        v55 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v56 = v65;
        v55(v65, v54, v73);
        v63 = (void (*)(char *, _QWORD *))sub_100477214(v67, (uint64_t)v63);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v73);
        v55(v46, v56, v73);
        v43 = v73;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v48, v49);
        v53 = &_swiftEmptySetSingleton;
      }
      v57 = sub_10002A750((uint64_t *)&unk_1006651D0);
      v58 = (uint64_t)v64;
      v59 = (char *)v64 + *(int *)(v57 + 64);
      *v64 = v63;
      *(_QWORD *)(v58 + 8) = v53;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v59, v46, v43);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v58, v52, v49);
      sub_1002E4300(v58);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v58, v49);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v43);
      v12 = v62;
      v30 = (uint64_t)v66;
      v29 = v61;
    }
    v60._object = (void *)0x8000000100560820;
    v60._countAndFlagsBits = 0xD000000000000011;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v60);
    (*((void (**)(char *, _QWORD *))v13 + 1))(v21, v12);
    sub_10001F544((uint64_t)v74, type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel);
    sub_1000381B8((uint64_t)v29, v30);
  }
}

void sub_1002E8EC8()
{
  Swift::String v0;

  sub_1002E7058();
  sub_1002DF5E0();
  v0._object = (void *)0x8000000100560820;
  v0._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

void sub_1002E8F08()
{
  Swift::String v0;

  v0._object = (void *)0x8000000100560820;
  v0._countAndFlagsBits = 0xD000000000000011;
  TTRDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

void sub_1002E8F40()
{
  sub_1002E9440((uint64_t)sub_1002E94FC);
}

void sub_1002E8F5C()
{
  sub_1002E9440((uint64_t)sub_1002EA7D8);
}

uint64_t sub_1002E8F78()
{
  return sub_100006BCC((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1002E8F8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100654C54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_1002E6C00(a1, v4, v5, v6);
}

void sub_1002E8FF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *Strong;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *oslog;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a7 + 16);
  if (Strong
    && (v14 = Strong,
        v15 = objc_msgSend(Strong, "navigationController"),
        v14,
        v15))
  {
    oslog = static TTRIReminderLocationPickerAssembly.createViewController(filter:store:showsDoneButton:savesOnCommit:delegate:undoManager:save:)(a1, a2, 0, 0, a4, &off_1005FECC0, 0, a5, a6);
    swift_unknownObjectRelease(v16);
    objc_msgSend(v15, "pushViewController:animated:", oslog, a3 & 1);

  }
  else
  {
    if (qword_10063D360 != -1)
      swift_once(&qword_10063D360, sub_1000A6840);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100012DC4(v17, (uint64_t)qword_100642EC0);
    oslog = Logger.logObject.getter(v18);
    v19 = static os_log_type_t.fault.getter(oslog);
    if (os_log_type_enabled(oslog, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v19, "Failed to get navigation controller -- Failed to show location picker", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }
  }

}

uint64_t sub_1002E917C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002E91B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_100654C6C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006083C;
  return sub_1002E7284(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002E9238(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

uint64_t sub_1002E92C0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  Swift::String_optional v10;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::Bool v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0xE000000000000000;
  v32 = 0;
  v33 = 0xE000000000000000;
  v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  v28 = a1;
  v29 = a2;
  v30 = 0;
  v31 = v9;
  swift_bridgeObjectRetain(a2);
  v10 = String.Iterator.next()();
  if (v10.value._object)
  {
    countAndFlagsBits = v10.value._countAndFlagsBits;
    object = v10.value._object;
    do
    {
      static CharacterSet.hashtagTokenAllowedCharacters.getter();
      v14._countAndFlagsBits = countAndFlagsBits;
      v14._object = object;
      v15 = CharacterSet.containsUnicodeScalars(of:)(v14);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v15)
      {
        v16._countAndFlagsBits = countAndFlagsBits;
        v16._object = object;
        String.append(_:)(v16);
      }
      swift_bridgeObjectRelease(object);
      v13 = String.Iterator.next()();
      countAndFlagsBits = v13.value._countAndFlagsBits;
      object = v13.value._object;
    }
    while (v13.value._object);
    v17 = v32;
    v8 = v33;
  }
  else
  {
    v17 = 0;
  }
  swift_bridgeObjectRelease(v29);
  v18 = sub_1002E9238(75, v17, v8);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = swift_bridgeObjectRelease(v8);
  v26 = static String._fromSubstring(_:)(v18, v20, v22, v24, v25);
  swift_bridgeObjectRelease(v24);
  return v26;
}

void sub_1002E9440(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v7[4];

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = Strong;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController))
    {
      __chkstk_darwin(Strong);
      v7[2] = v4;
      v6 = v5;
      TTRITableDataController.performBatchUpdates(by:updates:)(1, a1, v7);
      swift_unknownObjectRelease(v4);

    }
    else
    {
      swift_unknownObjectRelease(Strong);
    }
  }
}

void sub_1002E94FC()
{
  sub_1001C9F64();
}

uint64_t sub_1002E9504()
{
  return sub_1002E9DF0(&qword_100642098, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags);
}

uint64_t sub_1002E9518()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100642098) - 8) + 80);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  v4 = v2[13];
  v5 = v2[14];
  sub_10001413C(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(v3, v4, v5);
}

uint64_t sub_1002E9584()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002E9594(void *a1)
{
  uint64_t v1;

  sub_1002E8244(a1, v1);
}

uint64_t sub_1002E959C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E95C0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E95E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002E9610(uint64_t a1)
{
  uint64_t v1;

  sub_1002E85F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002E9618()
{
  return sub_100006BCC((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002E962C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v1[13];
  v5 = v1[14];
  sub_10001413C(v1 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, v3, v4, v5);
}

uint64_t sub_1002E9684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_10002A750(&qword_100642098) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v10);
  v11 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_1002E976C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for REMHashtagLabelSpecifier(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100642098) - 8) + 80);
  return sub_1002E47B8(*(_QWORD **)(v0 + 16), v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_1002E97D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002E97E4(void *a1)
{
  uint64_t v1;

  sub_1002E8440(a1, v1);
}

uint64_t sub_1002E97EC()
{
  return sub_1002E9DF0(&qword_100642090, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
}

uint64_t sub_1002E9800()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100642090) - 8) + 80);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  v4 = v2[13];
  v5 = v2[14];
  sub_10001413C(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(v3, v4, v5);
}

uint64_t sub_1002E986C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField(uint64_t a1)
{
  return sub_100007328(a1, qword_100654D78, (uint64_t)&nominal type descriptor for TTRISmartListFilterEditorPresenterDateUpdateField);
}

uint64_t sub_1002E9890()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E98B4()
{
  uint64_t v0;

  return sub_1002E21BC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002E98BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E98CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100642090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E9914()
{
  uint64_t v0;

  return sub_1002E358C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002E991C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E992C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002E9960(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100654CAC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006083C;
  return sub_1002E3184(a1, v4, v5, v7, v6);
}

void sub_1002E99D8(uint64_t a1)
{
  uint64_t v1;

  sub_1002E66EC(a1, v1);
}

unint64_t sub_1002E99E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649D08;
  if (!qword_100649D08)
  {
    v1 = sub_10002CA5C(&qword_100649D00);
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>, v1);
    atomic_store(result, &qword_100649D08);
  }
  return result;
}

double sub_1002E9A2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  double result;

  if (a6)
  {
    sub_1001CD3C8(a1, a2, a3, a4, a5);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002E9A58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002E9A84()
{
  uint64_t v0;

  return sub_1002E68A8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1002E9A94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9AA4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  sub_100027F10((_QWORD *)(v0 + 40));

  swift_release();
  sub_100027F10((_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1002E9AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_BYTE *)(v1 + 96);
  v9 = (_QWORD *)swift_task_alloc(dword_100654CBC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10004A08C;
  return sub_1002E5B64(a1, v11, v4, v5, v1 + 40, v6, v7, v8);
}

uint64_t sub_1002E9BA8()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002E9BCC(void *a1)
{
  uint64_t v1;

  sub_1002E5D34(a1, v1 + 16);
}

uint64_t sub_1002E9BD4()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002E9C00()
{
  uint64_t v0;

  return sub_1002E5EF8((_QWORD *)(v0 + 16));
}

uint64_t sub_1002E9C0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9C1C()
{
  return sub_100006BCC((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1002E9C30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100654CCC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006083C;
  return sub_1002E3A28(a1, v4, v5, v6);
}

uint64_t sub_1002E9C9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1002E9CC0(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1002E5288(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1002E9CCC()
{
  return sub_1002E9DF0(&qword_100642078, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists);
}

uint64_t sub_1002E9CE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100642078) - 8) + 80);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  v4 = v2[13];
  v5 = v2[14];
  sub_10001413C(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 112))(v3, v4, v5);
}

uint64_t sub_1002E9D4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1002E9D5C()
{
  uint64_t v0;

  return sub_1002E29B8(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1002E9D68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9D78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[13];
  v3 = v1[14];
  v4 = *(unsigned __int8 *)(v0 + 24);
  sub_10001413C(v1 + 10, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 96))(v4, v2, v3);
}

uint64_t sub_1002E9DCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9DDC()
{
  return sub_1002E9DF0(&qword_100642088, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime);
}

uint64_t sub_1002E9DF0(uint64_t *a1, uint64_t (*a2)(_QWORD, __n128))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(sub_10002A750(a1) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = swift_release();
  v9 = a2(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v2 + v6, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2 + v6, v9);
  return swift_deallocObject(v2, v6 + v7, v5 | 7);
}

uint64_t sub_1002E9E8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10002A750(&qword_100642088) - 8) + 80);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  v4 = v2[13];
  v5 = v2[14];
  sub_10001413C(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 80))(v3, v4, v5);
}

uint64_t sub_1002E9EF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002E9F7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMCustomSmartListFilterDescriptor.Operation(0) - 8)
                          + 80);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = v0 + ((v1 + 24) & ~v1);
  v4 = v2[13];
  v5 = v2[14];
  sub_10001413C(v2 + 10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v4, v5);
}

uint64_t sub_1002E9FE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E9FF4(uint64_t result)
{
  *(_BYTE *)(result + 169) = 0;
  return result;
}

uint64_t sub_1002E9FFC(uint64_t result)
{
  *(_BYTE *)(result + 169) = 1;
  return result;
}

uint64_t sub_1002EA008(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(void **)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v13 = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 136);
  v9 = *(void **)(a1 + 152);
  v10 = *(_BYTE *)(a1 + 160);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_10002B328(v2, v3, v4, v5, v6, v7, v8);
  sub_1001CD1B0(v20, v19, v18, v17, v16, v15, v14, v13, v12, *((void **)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1002EA0F4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_1002E6B70(v1, a1);
}

double sub_1002EA10C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E6590(a1, v1);
}

uint64_t *sub_1002EA114(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002EA23C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Date(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_1002EA2A0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1002EA3A0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_1002EA4B8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1002EA5B8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_10001F544((uint64_t)a1, type metadata accessor for TTRISmartListFilterEditorPresenterDateUpdateField);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for Date(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002EA6D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = &unk_10052D548;
      swift_initEnumMetadataMultiPayload(a1, 256, 4, v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002EA7E0(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  id v65;
  void *v66;
  void (*v67)(void *, _UNKNOWN **, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _UNKNOWN **);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128);
  __n128 v82;
  _QWORD *v83;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[4];
  __int128 v99;
  __int128 v100;
  _QWORD v101[16];
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;

  v93 = a1;
  v94 = a3;
  v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4);
  v86 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v89);
  v95 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v88);
  v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for REMRemindersListDataView.SortingStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v85 - v14;
  v16 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v19);
  v21 = (void **)((char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = a2;
  v23 = sub_10002B1E8((uint64_t)a2, (uint64_t)v21, v22);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(v23);
  sub_100041F70(v21, (uint64_t)v18, 0, (uint64_t)v101);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter(2);
  v24 = *a2;
  v91 = v10;
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v25(v13, v15, v9);
  v26 = type metadata accessor for TTRShowAllRemindersWithSectionsDataModelSource(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = TTRShowAllRemindersWithSectionsDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)(v24, 2, v13, 0);
  v28 = (void *)v101[0];
  v90 = v15;
  v92 = v9;
  v25(v8, v15, v9);
  swift_storeEnumTagMultiPayload(v8, v88, 0);
  v29 = type metadata accessor for TTRShowAllRemindersViewModelSource(0);
  v30 = (_QWORD *)swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v31 = v28;
  v88 = v27;
  v32 = sub_1002EAF40(v27, v31, (uint64_t)v8, 0, v30);

  sub_10002B1E8((uint64_t)v87, (uint64_t)v21, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100043000((uint64_t)v101, (uint64_t)v98);
  swift_retain(v32);
  sub_100042A94((uint64_t)v21, (uint64_t)v98, v32, (uint64_t)&off_100609110, v95);
  v33 = (uint64_t)v86;
  sub_100042C0C((uint64_t)v86);
  v34 = type metadata accessor for TTRIRemindersCommonPresenter(0);
  v35 = *(unsigned int *)(v34 + 48);
  v36 = *(unsigned __int16 *)(v34 + 52);
  v87 = (_QWORD *)v34;
  v37 = swift_allocObject(v34, v35, v36);
  v38 = v94;
  swift_unknownObjectRetain(v94);
  v39 = (_QWORD *)sub_1002A70CC(v33, v38, v37);
  v40 = v39[18];
  ObjectType = swift_getObjectType(v39[17], v41);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 104))(ObjectType, v40);
  if (v43)
  {
    v45 = v43;
    v46 = v44;
    v47 = swift_getObjectType(v43, v44);
    LOBYTE(v46) = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 16))(v47, v46);
    swift_unknownObjectRelease(v45);
    LOBYTE(v43) = v46 & 1;
  }
  v48 = sub_100172EB4(v43, (uint64_t)v39);
  v86 = (char *)v49;
  v51 = v50;
  v53 = v52;
  v85 = swift_getObjectType(v50, v49);
  v39[3] = *(_QWORD *)(v53 + 8);
  v94 = v51;
  swift_unknownObjectWeakAssign(v39 + 2, v51);
  v54 = v39[18];
  v56 = swift_getObjectType(v39[17], v55);
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 104);
  swift_retain(v39);
  v58 = v48;
  v59 = v57(v56, v54);
  v61 = v59;
  if (v59)
  {
    v62 = v60;
    v63 = swift_getObjectType(v59, v60);
    v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
    swift_unknownObjectRelease(v61);
    v61 = v64 & 1;
  }
  v65 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController(0));
  v66 = (void *)sub_1002A8974(v39, v58, v86, v61, 0, 1, 0, v65);
  swift_release(v39);

  v67 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v53 + 32);
  v68 = v66;
  v86 = v68;
  v67(v66, &off_1005FCD60, v85, v53);
  v69 = v101[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess(v101[0] + direct field offset for TTRRemindersListInteractor.delegate, &v97, 1, 0);
  *(_QWORD *)(v69 + 8) = &off_1005F3190;
  swift_unknownObjectWeakAssign(v69, v39);
  v70 = v101[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess(v101[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate, &v96, 1, 0);
  *(_QWORD *)(v70 + 8) = &protocol witness table for TTRShowAllRemindersWithSectionsDataModelSource;
  v71 = v88;
  swift_unknownObjectWeakAssign(v70, v88);
  swift_unknownObjectWeakAssign(v101[3] + 16, v68);
  v72 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v71 + 392);
  v73 = swift_retain(v32);
  v72(v73, &off_1005F8C28);
  swift_retain(v32);
  v74 = swift_retain(v39);
  sub_10048D4EC(v74, (uint64_t)&off_1005F30C0);
  swift_release(v32);
  swift_release(v39);
  v75 = v95;
  v76 = *(_QWORD *)(v95 + *(int *)(v89 + 28));
  *(_QWORD *)(v76 + 24) = &off_1005F3260;
  swift_unknownObjectWeakAssign(v76 + 16, v39);
  sub_100028CFC((uint64_t)&v102, (uint64_t)v98);
  v99 = v103;
  v100 = v104;
  v77 = v103 + 32;
  *(_QWORD *)(v103 + 40) = &off_1005F3040;
  swift_unknownObjectWeakAssign(v77, v39);
  sub_100027F10(v98);
  sub_100028CFC((uint64_t)&v105, (uint64_t)v98);
  v78 = v106;
  v99 = v106;
  v80 = swift_getObjectType(v106, v79);
  v81 = *(void (**)(_QWORD *, _UNKNOWN **, uint64_t, _QWORD, __n128))(*((_QWORD *)&v78 + 1) + 48);
  swift_retain(v39);
  v82 = swift_unknownObjectRetain(v78);
  v81(v39, &off_1005F2FF0, v80, *((_QWORD *)&v78 + 1), v82);
  swift_unknownObjectRelease(v78);
  sub_100027F10(v98);
  v83 = v93;
  v93[3] = v87;
  v83[4] = &off_1005FF600;
  *v83 = v39;
  swift_release(v71);
  swift_release(v32);

  swift_unknownObjectRelease(v94);
  sub_10001F544(v75, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
  sub_100043844((uint64_t)v101);
  return (uint64_t)v86;
}

id TTRIShowAllRemindersAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAllRemindersAssembly();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TTRIShowAllRemindersAssembly()
{
  return objc_opt_self(_TtC9Reminders28TTRIShowAllRemindersAssembly);
}

id TTRIShowAllRemindersAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAllRemindersAssembly();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002EAF40(uint64_t a1, void *a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;

  v10 = *a5;
  v41 = a3;
  v42 = v10;
  v11 = type metadata accessor for REMAnalyticsEvent(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10002A750(&qword_100649CA0);
  __chkstk_darwin(v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TTRListType.SortingCapability(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)a5
            + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils) = 0;
  v21 = (char *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  *(_QWORD *)((char *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = 0;
  v22 = (_QWORD *)((char *)a5
                 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource);
  *v22 = a1;
  v22[1] = (uint64_t)&protocol witness table for TTRShowAllRemindersWithSectionsDataModelSource;
  *((_BYTE *)a5 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_hasDefaultNewReminderButton) = a4;
  sub_10002B1E8(a3, (uint64_t)v20, v23);
  swift_retain_n(a1, 2);
  v24 = sub_1002A8704(a1, (uint64_t)a2, (uint64_t)v20, (uint64_t)a5);
  swift_retain(v24);
  sub_100247334((uint64_t)v17);
  v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v17, 0, 1, v25);
  sub_10046ADD4((uint64_t)v17);
  v26 = sub_100080EAC((uint64_t)v17);
  v27 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v26);
  type metadata accessor for REMAnalyticsManager(0);
  v28 = v27;
  v29 = static REMAnalyticsManager.shared.getter();
  v30 = sub_10002A750(&qword_100645348);
  v31 = &v14[*(int *)(v30 + 48)];
  v32 = &v14[*(int *)(v30 + 80)];
  v33 = enum case for REMRemindersOpenUserOperation.SmartListType.all(_:);
  v34 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v14, v33, v34);
  v35 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  v36 = type metadata accessor for REMRemindersOpenUserOperation(0);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v14, v35, v36);
  *(_QWORD *)v31 = TTRUserDefaults.activitySessionId.getter(v37);
  *((_QWORD *)v31 + 1) = v38;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(_QWORD *)v32 = _typeName(_:qualified:)(v42, 0);
  *((_QWORD *)v32 + 1) = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v11);
  REMAnalyticsManager.post(event:)(v14);

  swift_release(v29);
  swift_release(v24);
  sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v24;
}

void sub_1002EB23C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_bridgeObjectRetain_n(a4, 2);
  v10 = swift_bridgeObjectRetain_n(a5, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.fault.getter();
  v26 = a1;
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v24 = swift_slowAlloc(96, -1);
    v28 = v24;
    *(_DWORD *)v13 = 136446722;
    v14 = StaticString.description.getter(a1, a2, a3);
    v16 = v15;
    v27 = sub_100027E40(v14, v15, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v25 = a3;
    v17 = Dictionary.description.getter(a4, &type metadata for String, &type metadata for Any[8], &protocol witness table for String);
    v19 = v18;
    swift_bridgeObjectRelease(a4);
    v27 = sub_100027E40(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 14, v13 + 22);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v13 + 22) = 2082;
    v20 = swift_bridgeObjectRetain(a5);
    v21 = Dictionary.description.getter(v20, &type metadata for String, &type metadata for Any[8], &protocol witness table for String);
    a3 = v22;
    swift_bridgeObjectRelease(a5);
    v27 = sub_100027E40(v21, a3, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 24, v13 + 32);
    swift_bridgeObjectRelease_n(a5, 2);
    v23 = a3;
    LOBYTE(a3) = v25;
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s; UserInfo=%s; PublicUserInfo=%{public}s",
      (uint8_t *)v13,
      0x20u);
    swift_arrayDestroy(v24, 3, &type metadata for Any[8]);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a5, 2);
    swift_bridgeObjectRelease_n(a4, 2);
  }

  if ((a3 & 1) != 0)
    goto LABEL_7;
  if (v26)
  {
    rdi_os_crash();
LABEL_7:
    __break(1u);
  }
  __break(1u);
}

void sub_1002EB4BC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[80];

  type metadata accessor for Analytics(0);
  v4 = sub_10002A750(&qword_100654DD8);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x696669746E656449;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1002EBAEC();
  *(_QWORD *)(inited + 48) = NSString.init(stringLiteral:)("NavigationDismiss", 17, 2);
  *(_QWORD *)(inited + 56) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 64) = 0x80000001005732D0;
  *(_QWORD *)(inited + 72) = String._bridgeToObjectiveC()();
  v6 = sub_10002D460(inited);
  static Analytics.postEvent(_:payload:duration:)(0xD00000000000001CLL, 0x80000001005732A0, v6, 0, 1);
  swift_bridgeObjectRelease(v6);
  if (qword_10063D608 != -1)
    swift_once(&qword_10063D608, sub_10002D544);
  v7 = type metadata accessor for Logger(0);
  sub_100012DC4(v7, (uint64_t)qword_100673768);
  v8 = swift_bridgeObjectRetain_n(a2, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v14 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain(a2);
    v13 = sub_100027E40(a1, a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Dismissing (%s)", v11, 0xCu);
    swift_arrayDestroy(v12, 1, &type metadata for Any[8]);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

void sub_1002EB730(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[104];

  v29 = a5;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Analytics(0);
  v13 = sub_10002A750(&qword_100654DD8);
  inited = swift_initStackObject(v13, v32);
  *(_OWORD *)(inited + 16) = xmmword_1005275C0;
  *(_QWORD *)(inited + 32) = 0x696669746E656449;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  sub_1002EBAEC();
  *(_QWORD *)(inited + 48) = NSString.init(stringLiteral:)("Navigation", 10, 2);
  *(_QWORD *)(inited + 56) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 64) = 0x80000001005732D0;
  v27 = a1;
  *(_QWORD *)(inited + 72) = String._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 88) = 0x80000001005732F0;
  v28 = a3;
  *(_QWORD *)(inited + 96) = String._bridgeToObjectiveC()();
  v15 = sub_10002D460(inited);
  static Analytics.postEvent(_:payload:duration:)(0xD00000000000001CLL, 0x80000001005732A0, v15, 0, 1);
  swift_bridgeObjectRelease(v15);
  if (qword_10063D608 != -1)
    swift_once(&qword_10063D608, sub_10002D544);
  v16 = type metadata accessor for Logger(0);
  sub_100012DC4(v16, (uint64_t)qword_100673768);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v29, v9);
  swift_bridgeObjectRetain_n(a2, 2);
  v17 = swift_bridgeObjectRetain_n(a4, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = v9;
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v20))
  {
    v21 = swift_slowAlloc(32, -1);
    v22 = swift_slowAlloc(96, -1);
    v31 = v22;
    *(_DWORD *)v21 = 136315650;
    v29 = v19;
    swift_bridgeObjectRetain(a2);
    v30 = sub_100027E40(v27, a2, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v30 = sub_100027E40(v28, a4, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v21 + 14, v21 + 22);
    v23 = swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v21 + 22) = 2080;
    v24 = URL.absoluteString.getter(v23);
    v26 = v25;
    v30 = sub_100027E40(v24, v25, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v21 + 24, v21 + 32);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "Navigating (%s) -> (%s) {url:%s}", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy(v22, 3, &type metadata for Any[8]);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  }

}

unint64_t sub_1002EBAEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649BD8;
  if (!qword_100649BD8)
  {
    v1 = objc_opt_self(NSString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649BD8);
  }
  return result;
}

uint64_t sub_1002EBB28(uint64_t a1)
{
  return sub_100012D54(a1, qword_100673798, (SEL *)&selRef_utility);
}

uint64_t sub_1002EBB3C(uint64_t a1)
{
  return sub_100012D54(a1, qword_1006737C8, (SEL *)&selRef_applicationShortcut);
}

uint64_t sub_1002EBB50(uint64_t a1)
{
  return sub_100012D54(a1, qword_1006737E0, (SEL *)&selRef_notification);
}

uint64_t sub_1002EBC88()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  unsigned __int8 v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __n128 v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2._countAndFlagsBits = 0xD00000000000002ALL;
  v3._object = (void *)0x8000000100573440;
  v2._object = (void *)0x8000000100573470;
  v3._countAndFlagsBits = 0xD000000000000022;
  v4 = TTRLocalizedString(_:comment:)(v3, v2);
  v5._countAndFlagsBits = 0xD000000000000024;
  v6._countAndFlagsBits = 0xD00000000000002BLL;
  v5._object = (void *)0x80000001005734A0;
  v6._object = (void *)0x80000001005734D0;
  v7 = TTRLocalizedString(_:comment:)(v5, v6);
  v8._countAndFlagsBits = 0xD000000000000029;
  v9._countAndFlagsBits = 0xD00000000000002FLL;
  v8._object = (void *)0x8000000100573500;
  v9._object = (void *)0x8000000100573530;
  v10 = TTRLocalizedString(_:comment:)(v8, v9);
  v11 = v0 + OBJC_IVAR____TtC9Reminders23TTRIGroupMembershipCell_ttriAccessibilityDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders23TTRIGroupMembershipCell_ttriAccessibilityDelegate);
  if (Strong
    && (v13 = Strong, v14 = sub_100056158(v1), swift_unknownObjectRelease(v13), (v14 & 1) != 0))
  {
    v15 = sub_10001D840(0, 1, 1, _swiftEmptyArrayStorage);
    v17 = v15[2];
    v16 = v15[3];
    if (v17 >= v16 >> 1)
      v15 = sub_10001D840((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
    v15[2] = v17 + 1;
    *(Swift::String *)&v15[2 * v17 + 4] = v7;
  }
  else
  {
    swift_bridgeObjectRelease(v7._object);
    v15 = _swiftEmptyArrayStorage;
  }
  v18 = swift_unknownObjectWeakLoadStrong(v11);
  if (v18 && (v19 = v18, v20 = sub_100056378(v1), swift_unknownObjectRelease(v19), (v20 & 1) != 0))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
      v15 = sub_10001D840(0, v15[2] + 1, 1, v15);
    v22 = v15[2];
    v21 = v15[3];
    if (v22 >= v21 >> 1)
      v15 = sub_10001D840((_QWORD *)(v21 > 1), v22 + 1, 1, v15);
    v15[2] = v22 + 1;
    *(Swift::String *)&v15[2 * v22 + 4] = v10;
  }
  else
  {
    swift_bridgeObjectRelease(v10._object);
  }
  v23 = swift_unknownObjectWeakLoadStrong(v11);
  if (v23 && (v24 = v23, v25 = sub_100056594(v1), swift_unknownObjectRelease(v24), (v25 & 1) != 0))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
      v15 = sub_10001D840(0, v15[2] + 1, 1, v15);
    v28 = v15[2];
    v27 = v15[3];
    if (v28 >= v27 >> 1)
      v15 = sub_10001D840((_QWORD *)(v27 > 1), v28 + 1, 1, v15);
    v15[2] = v28 + 1;
    *(Swift::String *)&v15[2 * v28 + 4] = v4;
  }
  else
  {
    v26 = swift_bridgeObjectRelease(v4._object);
  }
  v29 = (uint64_t *)TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor(v26);
  v30 = *v29;
  v31 = v29[1];
  swift_bridgeObjectRetain(v31);
  v32 = sub_10002A750(&qword_1006466D0);
  v33 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = BidirectionalCollection<>.joined(separator:)(v30, v31, v32, v33);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v31);
  return v34;
}

uint64_t sub_1002EBFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v12;
  void *v13;
  double v14;
  uint64_t result;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC9Reminders23TTRIGroupMembershipCell_ttriAccessibilityDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Reminders23TTRIGroupMembershipCell_ttriAccessibilityDelegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_100056158(v1);
    swift_unknownObjectRelease(v4);
    if ((v5 & 1) != 0)
    {
      v6 = swift_unknownObjectWeakLoadStrong(v2);
      if (v6)
      {
        v7 = v6;
        sub_10005677C(v1);
        swift_unknownObjectRelease(v7);
      }
      v8._countAndFlagsBits = 0xD000000000000033;
      v9._object = (void *)0x80000001005733E0;
      v8._object = (void *)0x8000000100573400;
      v9._countAndFlagsBits = 0xD000000000000013;
      v12 = TTRLocalizedString(_:comment:)(v9, v8);
      object = v12._object;
      countAndFlagsBits = v12._countAndFlagsBits;
      v13 = v12._object;
      v14 = 1.0;
LABEL_11:
      sub_1002EC2DC(countAndFlagsBits, (uint64_t)object, v14);
      swift_bridgeObjectRelease(v13);
      return 1;
    }
  }
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (!result)
    return result;
  v16 = result;
  v17 = sub_100056378(v1);
  swift_unknownObjectRelease(v16);
  if ((v17 & 1) != 0)
  {
    v18 = swift_unknownObjectWeakLoadStrong(v2);
    if (v18)
    {
      v19 = v18;
      sub_10005677C(v1);
      swift_unknownObjectRelease(v19);
    }
    v20._countAndFlagsBits = 0xD000000000000017;
    v21._countAndFlagsBits = 0xD000000000000037;
    v20._object = (void *)0x8000000100573380;
    v21._object = (void *)0x80000001005733A0;
    v22 = TTRLocalizedString(_:comment:)(v20, v21);
    object = v22._object;
    countAndFlagsBits = v22._countAndFlagsBits;
    v13 = v22._object;
    v14 = 1.5;
    goto LABEL_11;
  }
  return 0;
}

id sub_1002EC27C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIGroupMembershipCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRIGroupMembershipCell()
{
  return objc_opt_self(_TtC9Reminders23TTRIGroupMembershipCell);
}

uint64_t sub_1002EC2DC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v28 = a1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v18 = sub_10002CDD8();
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  static DispatchTime.now()();
  + infix(_:_:)(v14, a3);
  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v14, v11);
  v20 = swift_allocObject(&unk_1005FF630, 32, 7);
  *(_QWORD *)(v20 + 16) = v28;
  *(_QWORD *)(v20 + 24) = a2;
  aBlock[4] = sub_1002A1314;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006378;
  aBlock[3] = &unk_1005FF648;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a2);
  swift_release();
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100005E90();
  v24 = sub_10002A750((uint64_t *)&unk_100640F40);
  v25 = sub_100023FEC((unint64_t *)&qword_1006447E0, (uint64_t *)&unk_100640F40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v5, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v29)(v17, v11);
}

uint64_t sub_1002EC56C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1002EC590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  void *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;

  v3 = type metadata accessor for IndexPath(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v5);
  v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v45 = (uint64_t)&v40 - v8;
  v9 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v13 = *((_QWORD *)v12 - 1);
  __chkstk_darwin(v12);
  v44 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  v53 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v55 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a1 + 16);
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    v40 = v1;
    v56 = _swiftEmptyArrayStorage;
    sub_1003D8070(0, v17, 0);
    v19 = sub_10002A750(&qword_10063F178);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = (void **)(a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)));
    v51 = *(_QWORD *)(v20 + 72);
    v52 = v19;
    v42 = v13;
    v43 = v11;
    v41 = v15;
    do
    {
      v22 = *v21;
      sub_10000735C((uint64_t)v21 + *(int *)(v52 + 48), (uint64_t)v11, (uint64_t *)&unk_100654F20);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) == 1)
      {
        sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_100654F20);
        v23 = v55;
        *v55 = v22;
        swift_storeEnumTagMultiPayload(v23, v15, 1);
        v24 = v22;
      }
      else
      {
        v25 = v44;
        sub_10001F580((uint64_t)v11, v44, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        v26 = v45;
        sub_10002B1E8(v25 + v12[5], v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v28 = v47;
        v27 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v54, v25 + v12[6], v48);
        v29 = v46;
        sub_10002B1E8(v25 + v12[7], v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v49 = *(unsigned __int8 *)(v25 + v12[8]);
        v50 = v17;
        v30 = v41;
        sub_10001F544(v25, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        v31 = (char *)v55;
        sub_10001F580(v26, (uint64_t)v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v32 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
        v33 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        v11 = v43;
        v33(&v31[v32[5]], v54, v27);
        v34 = v29;
        v13 = v42;
        sub_10001F580(v34, (uint64_t)&v31[v32[6]], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v31[v32[7]] = v49;
        v35 = v31;
        v15 = v30;
        v36 = v30;
        v17 = v50;
        swift_storeEnumTagMultiPayload(v35, v36, 0);
      }
      v18 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
      {
        sub_1003D8070(0, v18[2] + 1, 1);
        v18 = v56;
      }
      v38 = v18[2];
      v37 = v18[3];
      if (v38 >= v37 >> 1)
      {
        sub_1003D8070(v37 > 1, v38 + 1, 1);
        v18 = v56;
      }
      v18[2] = v38 + 1;
      sub_10001F580((uint64_t)v55, (uint64_t)v18+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v38, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      v21 = (void **)((char *)v21 + v51);
      --v17;
    }
    while (v17);
  }
  return v18;
}

uint64_t sub_1002EC998@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a4;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_100646950);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v22 - v16;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_coordinator);
  if (Strong)
  {
    v19 = Strong;
    sub_1000412D8(v4, (uint64_t)&off_1005FF670, a1, a2, a3, (uint64_t)v17);
    swift_unknownObjectRelease(v19);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, v20, 1, v8);
  sub_10000F614((uint64_t)v17, (uint64_t)v15, &qword_100646950);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v11, v8);
    return sub_1000073A0((uint64_t)v15, &qword_100646950);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v15, v8);
  }
}

void sub_1002ECB68(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  BOOL v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  Class isa;
  id v64;
  id v65;
  double x;
  double y;
  double width;
  double height;
  double v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat MinY;
  uint64_t v76;
  BOOL v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  double v81;
  double v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  BOOL v87;
  double MaxY;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD aBlock[7];
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;

  v101 = a6;
  v98 = a5;
  v96 = a4;
  v99 = a3;
  v105 = a7;
  v106 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v106);
  v102 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  __chkstk_darwin(v100);
  *(_QWORD *)&v104 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin(v11);
  v97 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v103 = (char *)&v93 - v15;
  v16 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v16);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v93 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v93 - v23;
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v93 - v27;
  objc_msgSend(a2, "locationInView:", a1, v26);
  v30 = v29;
  v32 = v31;
  v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v12[7];
  v33(v28, 1, 1, v11);
  v33(v24, 1, 1, v11);
  v34 = swift_allocObject(&unk_1005FF738, 56, 7);
  *(_QWORD *)(v34 + 16) = v28;
  *(_QWORD *)(v34 + 24) = a1;
  *(_QWORD *)(v34 + 32) = v30;
  *(double *)(v34 + 40) = v32;
  v107 = v24;
  *(_QWORD *)(v34 + 48) = v24;
  v35 = swift_allocObject(&unk_1005FF760, 32, 7);
  *(_QWORD *)(v35 + 16) = sub_1002F1D70;
  *(_QWORD *)(v35 + 24) = v34;
  aBlock[4] = sub_10001B278;
  aBlock[5] = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_1005FF778;
  v36 = _Block_copy(aBlock);
  v37 = a1;
  swift_retain();
  objc_msgSend(v37, "performUsingPresentationValues:", v36, swift_release().n128_f64[0]);
  _Block_release(v36);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v35, "", 150, 68, 55, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_10000735C((uint64_t)v28, (uint64_t)v21, &qword_100646950);
    v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
    if (v40(v21, 1, v11) == 1)
    {
      sub_1000073A0((uint64_t)v21, &qword_100646950);
      v41 = sub_10002A750((uint64_t *)&unk_100654F50);
      v42 = v105;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v105, 1, 1, v41);
      swift_storeEnumTagMultiPayload(v42, v106, 2);
      v43 = (uint64_t)v107;
LABEL_34:
      sub_1000073A0(v43, &qword_100646950);
      sub_1000073A0((uint64_t)v28, &qword_100646950);
      swift_release();
      return;
    }
    v44 = v12;
    v93 = v37;
    v95 = v34;
    v94 = v28;
    v45 = (void (*)(char *, char *, uint64_t))v12[4];
    v46 = v103;
    v45(v103, v21, v11);
    v47 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
    v48 = *(_QWORD *)&v104;
    v47(*(_QWORD *)&v104, v101, v11);
    v49 = v100;
    v47(v48 + *(int *)(v100 + 20), (uint64_t)v46, v11);
    v43 = (uint64_t)v107;
    sub_10000735C((uint64_t)v107, v48 + *(int *)(v49 + 24), &qword_100646950);
    v34 = (uint64_t)v44;
    v50 = v102;
    sub_10002B1E8(v48, v102, type metadata accessor for TTRICollectionViewHitIndexPaths);
    swift_storeEnumTagMultiPayload(v50, v106, 1);
    sub_10000735C(v43, (uint64_t)v18, &qword_100646950);
    if (v40(v18, 1, v11) == 1)
    {
      sub_10001F544(v48, type metadata accessor for TTRICollectionViewHitIndexPaths);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v11);
      sub_1000073A0((uint64_t)v18, &qword_100646950);
      sub_10001F580(v50, v105, type metadata accessor for TTRICollectionViewHitTestResult);
      v28 = v94;
      goto LABEL_34;
    }
    v35 = (uint64_t)v97;
    v45(v97, v18, v11);
    v18 = *(char **)(v99 + 16);
    v12 = *(_QWORD **)(v96 + 16);
    v39 = v98;
    isEscapingClosureAtFileLocation = v98 >> 62;
    if (!(v98 >> 62))
    {
      v51 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_8;
    }
  }
  if (v39 < 0)
    v92 = v39;
  else
    v92 = v39 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v39);
  v51 = _CocoaArrayWrapper.endIndex.getter(v92);
  swift_bridgeObjectRelease(v98);
  v39 = v98;
LABEL_8:
  v52 = v103;
  v53 = *(_QWORD *)&v104;
  v54 = (char *)v12 + v51;
  if (__OFADD__(v12, v51))
  {
    __break(1u);
  }
  else
  {
    if (!v18)
    {
LABEL_12:
      if (!v12)
      {
        if (isEscapingClosureAtFileLocation)
        {
          if (v39 < 0)
            v57 = v39;
          else
            v57 = v39 & 0xFFFFFFFFFFFFFF8;
          v58 = v39;
          swift_bridgeObjectRetain(v39);
          v59 = _CocoaArrayWrapper.endIndex.getter(v57);
          swift_bridgeObjectRelease(v58);
          if (v59)
            goto LABEL_23;
        }
        else if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_23;
        }
        if (v18 == (char *)1)
        {
          v60 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
          v61 = *(unsigned __int8 *)(*(_QWORD *)(v60 - 8) + 80);
          if ((static IndexPath.== infix(_:_:)(v99 + *(int *)(v60 + 20) + ((v61 + 32) & ~v61), v35) & 1) != 0)
          {
            v62 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
            v62(v35, v11);
            sub_10001F544(v53, type metadata accessor for TTRICollectionViewHitIndexPaths);
            v62((uint64_t)v52, v11);
            sub_10001F580(v102, v105, type metadata accessor for TTRICollectionViewHitTestResult);
            goto LABEL_27;
          }
        }
      }
LABEL_23:
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v64 = v93;
      v65 = objc_msgSend(v93, "cellForItemAtIndexPath:", isa);

      if (v65)
      {
        objc_msgSend(v65, "bounds");
        objc_msgSend(v64, "convertRect:fromCoordinateSpace:", v65);
        x = v109.origin.x;
        y = v109.origin.y;
        width = v109.size.width;
        height = v109.size.height;
        v70 = CGRectGetHeight(v109) * 0.5;
        v110.origin.x = x;
        v110.origin.y = y;
        v110.size.width = width;
        v110.size.height = height;
        CGRectGetHeight(v110);
        v104 = x;
        v111.origin.x = sub_100038048(x, y, width, height, v70, 0.0);
        v71 = v111.origin.x;
        v72 = v111.origin.y;
        v73 = v111.size.width;
        v74 = v111.size.height;
        MinY = CGRectGetMinY(v111);
        v43 = (uint64_t)v107;
        v76 = v102;
        if (v32 >= MinY)
        {
          v112.origin.x = v71;
          v112.origin.y = v72;
          v112.size.width = v73;
          v112.size.height = v74;
          v77 = CGRectGetMaxY(v112) < v32;
        }
        else
        {
          v77 = 0;
        }
        v81 = v104;
        v113.origin.x = v104;
        v113.origin.y = y;
        v113.size.width = width;
        v113.size.height = height;
        v82 = CGRectGetHeight(v113) * 0.2;
        v114.origin.x = v81;
        v114.origin.y = y;
        v114.size.width = width;
        v114.size.height = height;
        CGRectGetHeight(v114);
        v115.origin.x = sub_100038048(v81, y, width, height, v82, 0.0);
        v83 = v115.origin.x;
        v84 = v115.origin.y;
        v85 = v115.size.width;
        v86 = v115.size.height;
        if (v32 >= CGRectGetMinY(v115))
        {
          v116.origin.x = v83;
          v116.origin.y = v84;
          v116.size.width = v85;
          v116.size.height = v86;
          MaxY = CGRectGetMaxY(v116);

          v87 = MaxY >= v32;
        }
        else
        {

          v87 = 0;
        }
        v89 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v89(v35, v11);
        sub_10001F544(v76, type metadata accessor for TTRICollectionViewHitTestResult);
        v89((uint64_t)v52, v11);
        v90 = v105;
        sub_10001F580(v53, v105, type metadata accessor for TTRICollectionViewHitIndexPaths);
        v91 = type metadata accessor for TTRICollectionViewItemHit(0);
        *(_BYTE *)(v90 + *(int *)(v91 + 20)) = v77;
        *(_BYTE *)(v90 + *(int *)(v91 + 24)) = v87;
        swift_storeEnumTagMultiPayload(v90, v106, 0);
        goto LABEL_33;
      }
      v78 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v78(v35, v11);
      sub_10001F544(v102, type metadata accessor for TTRICollectionViewHitTestResult);
      sub_10001F544(v53, type metadata accessor for TTRICollectionViewHitIndexPaths);
      v78((uint64_t)v52, v11);
      v79 = sub_10002A750((uint64_t *)&unk_100654F50);
      v80 = v105;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v105, 1, 1, v79);
      swift_storeEnumTagMultiPayload(v80, v106, 2);
LABEL_27:
      v43 = (uint64_t)v107;
LABEL_33:
      v28 = v94;
      goto LABEL_34;
    }
    v55 = __OFADD__(v18, v54);
    v56 = &v54[(_QWORD)v18];
    if (!v55)
    {
      if (v56 != (char *)1)
        goto LABEL_23;
      goto LABEL_12;
    }
  }
  __break(1u);
}

uint64_t sub_1002ED490(uint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v27;

  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v27 - v17;
  v19 = objc_msgSend(a2, "indexPathForItemAtPoint:", a4, a5);
  if (v19)
  {
    v20 = v19;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v21 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 0, 1, v21);
  }
  else
  {
    v21 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  }
  sub_100041F2C((uint64_t)v18, a1, &qword_100646950);
  sub_10000735C(a1, (uint64_t)v15, &qword_100646950);
  type metadata accessor for IndexPath(0);
  v22 = *(_QWORD *)(v21 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) != 1)
  {
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
  }
  v24 = objc_msgSend(a2, "dataSourceIndexPathForPresentationIndexPath:", isa);

  if (v24)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v12, v25, 1, v21);
  return sub_100041F2C((uint64_t)v12, a3, &qword_100646950);
}

uint64_t sub_1002ED6A0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10002A750(&qword_10063F190);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v22 - v15;
  v17 = (uint64_t)objc_msgSend(a2, "numberOfSections", v14);
  if (v17 < 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    v20 = sub_10002A750((uint64_t *)&unk_100654F50);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 0, 1, v20);
  }
  else
  {
    sub_1002ED8B8((char *)a2, (char *)(v17 - 1), a1, (uint64_t)v16);
    sub_10000F614((uint64_t)v16, (uint64_t)v12, &qword_10063F190);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
    {
      sub_1000073A0((uint64_t)v12, &qword_10063F190);
      v18 = sub_10002A750((uint64_t *)&unk_100654F50);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
    }
    else
    {
      sub_10001F580((uint64_t)v12, (uint64_t)v9, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_10001F580((uint64_t)v9, a3, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
      v21 = sub_10002A750((uint64_t *)&unk_100654F50);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 0, 1, v21);
    }
  }
}

uint64_t sub_1002ED8B8@<X0>(char *a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  CGFloat *v41;
  CGFloat *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  double v50;
  double v51;
  double v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  double v63;
  double v64;
  double MaxY;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  double v81;
  double v82;
  double v83;
  double v84;
  char v85;
  CGRect v86;
  CGRect v87;

  v75 = a3;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v72 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v74 = (char *)&v72 - v11;
  v12 = sub_10002A750(&qword_100654F60);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v73 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v72 - v16;
  v18 = sub_10002A750(&qword_100654F68);
  __chkstk_darwin(v18);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char **)((char *)&v72 - v23);
  v79 = a1;
  result = (uint64_t)objc_msgSend(a1, "numberOfItemsInSection:", a2, v22);
  if ((result & 0x8000000000000000) == 0)
  {
    v76 = v8;
    v77 = v7;
    v78 = a4;
    v81 = 0.0;
    v82 = *(double *)&result;
    __chkstk_darwin(result);
    v26 = v79;
    *(&v72 - 2) = a2;
    *(&v72 - 1) = v26;
    v27 = sub_10002A750(&qword_100654F70);
    v28 = sub_100023FEC(&qword_100654F78, &qword_100654F70, (uint64_t)&protocol conformance descriptor for ReversedCollection<A>);
    Sequence.firstMap<A>(_:)(v24, sub_1002F1D90, &v72 - 4, v27, v12, v28);
    sub_10000735C((uint64_t)v24, (uint64_t)v20, &qword_100654F68);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12) == 1)
    {
      sub_1000073A0((uint64_t)v20, &qword_100654F68);
      v29 = v74;
      IndexPath.init(item:section:)(0, a2);
      v30 = sub_10002A750((uint64_t *)&unk_100654F80);
      v31 = swift_allocObject(v30, 64, 7);
      *(_OWORD *)(v31 + 16) = xmmword_1005201E0;
      *(_QWORD *)(v31 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
      *(_QWORD *)(v31 + 40) = v32;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      *(_QWORD *)(v31 + 48) = v33;
      *(_QWORD *)(v31 + 56) = v34;
      v80 = v31;
      __chkstk_darwin(v33);
      *(&v72 - 2) = v79;
      *(&v72 - 1) = v29;
      v35 = sub_10002A750(&qword_1006466D0);
      type metadata accessor for CGRect(0);
      v37 = v36;
      v38 = sub_100023FEC((unint64_t *)&qword_100654F90, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
      Sequence.firstMap<A>(_:)(&v81, sub_1002F1DA8, &v72 - 4, v35, v37, v38);
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v80).n128_u64[0];
      if ((v85 & 1) != 0)
      {
        sub_1000073A0((uint64_t)v24, &qword_100654F68);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v29, v77);
LABEL_11:
        v69 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56);
        v71 = v78;
        return v70(v71, 1, 1, v69);
      }
      v60 = v83;
      v59 = v84;
      v62 = v81;
      v61 = v82;
      objc_msgSend(v75, "locationInView:", v79, v39);
      v64 = v63;
      v87.origin.x = v62;
      v87.origin.y = v61;
      v87.size.width = v60;
      v87.size.height = v59;
      MaxY = CGRectGetMaxY(v87);
      sub_1000073A0((uint64_t)v24, &qword_100654F68);
      v66 = v77;
      v54 = v78;
      v67 = v76;
      if (MaxY >= v64)
      {
        (*(void (**)(char *, uint64_t))(v76 + 8))(v29, v77);
        v69 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56);
        v71 = v54;
        return v70(v71, 1, 1, v69);
      }
      v68 = v72;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v72, v29, v77);
      TTRAdjustedIndexPath.init(_:)(v68);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v29, v66);
      v55 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      v56 = v54;
      v57 = v55;
      v58 = 0;
    }
    else
    {
      v40 = *(int *)(v12 + 48);
      v41 = (CGFloat *)&v17[v40];
      v42 = (CGFloat *)&v20[v40];
      v43 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
      v44 = v20;
      v45 = v77;
      v43(v17, v44, v77);
      v46 = *v42;
      v47 = v42[1];
      v48 = v42[2];
      v49 = v42[3];
      *v41 = *v42;
      v41[1] = v47;
      v41[2] = v48;
      v41[3] = v49;
      objc_msgSend(v75, "locationInView:", v79);
      v51 = v50;
      v86.origin.x = v46;
      v86.origin.y = v47;
      v86.size.width = v48;
      v86.size.height = v49;
      v52 = CGRectGetMaxY(v86);
      sub_1000073A0((uint64_t)v24, &qword_100654F68);
      if (v52 >= v51)
      {
        sub_1000073A0((uint64_t)v17, &qword_100654F60);
        goto LABEL_11;
      }
      v53 = v73;
      v43(v73, v17, v45);
      v54 = v78;
      TTRUnadjustedIndexPath.init(_:)(v53);
      v55 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      v56 = v54;
      v57 = v55;
      v58 = 2;
    }
    swift_storeEnumTagMultiPayload(v56, v57, v58);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002EDE20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Class isa;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(item:section:)(*a1, a2);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a3, "layoutAttributesForItemAtIndexPath:", isa);

  if (v13)
  {
    v14 = sub_10002A750(&qword_100654F60);
    v15 = (_QWORD *)(a4 + *(int *)(v14 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4, v11, v8);
    objc_msgSend(v13, "frame");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *v15 = v17;
    v15[1] = v19;
    v15[2] = v21;
    v15[3] = v23;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a4, 0, 1, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v25 = sub_10002A750(&qword_100654F60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a4, 1, 1, v25);
  }
}

void sub_1002EDFB0(void *a1@<X1>, uint64_t a2@<X8>)
{
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", v4, isa);

  if (v6)
  {
    objc_msgSend(v6, "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

  }
  else
  {
    v8 = 0;
    v10 = 0;
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 32) = v6 == 0;
}

void sub_1002EE090(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  Class v23;
  void (*v24)(char *, uint64_t);
  id v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  Class v35;
  id v36;
  double v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  NSString *v56;
  Class isa;
  id v58;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat MaxY;
  double v64;
  CGFloat MinX;
  char v66;
  Class v67;
  id v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  Class v80;
  id v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  CGFloat MinY;
  double v91;
  CGFloat v92;
  CGFloat v93;
  uint64_t v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v94 = a5;
  v10 = type metadata accessor for IndexPath(0);
  v93 = *(double *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v93 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v93 - v17;
  v19 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
  v20 = (uint64_t)objc_msgSend(v19, "numberOfItemsInSection:", a4);
  v21 = v20 < 1;
  v22 = v20 - 1;
  if (v21)
  {
    v26 = 0.0;
    if ((a3 & 1) != 0)
    {
      v56 = UICollectionElementKindSectionHeader;
      IndexPath.init(item:section:)(0, a4);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8))(v13, v10);
      v58 = objc_msgSend(v19, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", v56, isa);

      if (v58)
      {
        objc_msgSend(v58, "frame");
        x = v101.origin.x;
        y = v101.origin.y;
        width = v101.size.width;
        height = v101.size.height;
        MaxY = CGRectGetMaxY(v101);
        v50 = v94;
        if (qword_10063D5B0 != -1)
          swift_once(&qword_10063D5B0, sub_10028ADB4);
        v64 = *(double *)&qword_100673758;
        v102.origin.x = x;
        v102.origin.y = y;
        v102.size.width = width;
        v102.size.height = height;
        MinX = CGRectGetMinX(v102);
        v103.origin.x = x;
        v103.origin.y = y;
        v103.size.width = width;
        v103.size.height = height;
        v104.size.width = CGRectGetWidth(v103);
        v104.size.height = 0.0;
        v104.origin.x = MinX;
        v104.origin.y = MaxY;
        v105 = CGRectInset(v104, 0.0, v64 * -0.5);
        v26 = v105.origin.x;
        v53 = v105.origin.y;
        v54 = v105.size.width;
        v55 = v105.size.height;

        goto LABEL_13;
      }
    }
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    if (a1 | a2)
    {
      IndexPath.init(item:section:)(v22, a4);
      v67 = IndexPath._bridgeToObjectiveC()().super.isa;
      v68 = objc_msgSend(v19, "layoutAttributesForItemAtIndexPath:", v67);

      if (v68)
      {
        objc_msgSend(v68, "frame");
        v70 = v69;
        v72 = v71;
        v74 = v73;
        v76 = v75;

        v106.origin.x = v70;
        v106.origin.y = v72;
        v106.size.width = v74;
        v106.size.height = v76;
        v77 = CGRectGetMaxY(v106);
        if (qword_10063D5B0 != -1)
          swift_once(&qword_10063D5B0, sub_10028ADB4);
        v78 = *(double *)&qword_100673758;
        v107.origin.x = v70;
        v107.origin.y = v72;
        v107.size.width = v74;
        v107.size.height = v76;
        v79 = CGRectGetMinX(v107);
        v108.origin.x = v70;
        v108.origin.y = v72;
        v108.size.width = v74;
        v108.size.height = v76;
        v109.size.width = CGRectGetWidth(v108);
        v109.size.height = 0.0;
        v109.origin.x = v79;
        v109.origin.y = v77;
        v110 = CGRectInset(v109, 0.0, v78 * -0.5);
        v26 = v110.origin.x;
        v53 = v110.origin.y;
        v54 = v110.size.width;
        v55 = v110.size.height;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8))(v16, v10);
LABEL_24:
        v66 = 0;
LABEL_29:
        v50 = v94;
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8))(v16, v10);
    }
    else
    {
      IndexPath.init(item:section:)(0, a4);
      v80 = IndexPath._bridgeToObjectiveC()().super.isa;
      v81 = objc_msgSend(v19, "layoutAttributesForItemAtIndexPath:", v80);

      if (v81)
      {
        objc_msgSend(v81, "frame");
        v83 = v82;
        v85 = v84;
        v87 = v86;
        v89 = v88;

        v111.origin.x = v83;
        v111.origin.y = v85;
        v111.size.width = v87;
        v111.size.height = v89;
        MinY = CGRectGetMinY(v111);
        if (qword_10063D5B0 != -1)
          swift_once(&qword_10063D5B0, sub_10028ADB4);
        v91 = *(double *)&qword_100673758;
        v112.origin.x = v83;
        v112.origin.y = v85;
        v112.size.width = v87;
        v112.size.height = v89;
        v92 = CGRectGetMinX(v112);
        v113.origin.x = v83;
        v113.origin.y = v85;
        v113.size.width = v87;
        v113.size.height = v89;
        v114.size.width = CGRectGetWidth(v113);
        v114.size.height = 0.0;
        v114.origin.x = v92;
        v114.origin.y = MinY;
        v115 = CGRectInset(v114, 0.0, v91 * -0.5);
        v26 = v115.origin.x;
        v53 = v115.origin.y;
        v54 = v115.size.width;
        v55 = v115.size.height;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8))(v18, v10);
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8))(v18, v10);
    }
    v66 = 1;
    v26 = 0.0;
    goto LABEL_28;
  }
  IndexPath.init(item:section:)(a1, a4);
  v23 = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v93 + 8);
  v24(v13, v10);
  v25 = objc_msgSend(v19, "layoutAttributesForItemAtIndexPath:", v23);

  v26 = 0.0;
  if (!v25)
    goto LABEL_14;
  objc_msgSend(v25, "frame");
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  IndexPath.init(item:section:)(a2, a4);
  v35 = IndexPath._bridgeToObjectiveC()().super.isa;
  v24(v13, v10);
  v36 = objc_msgSend(v19, "layoutAttributesForItemAtIndexPath:", v35);

  if (!v36)
  {
LABEL_14:
    v66 = 1;
LABEL_28:
    v53 = 0.0;
    v54 = 0.0;
    v55 = 0.0;
    goto LABEL_29;
  }
  objc_msgSend(v36, "frame");
  v93 = v37;
  v39 = v38;
  v41 = v40;
  v43 = v42;

  v95.origin.x = v28;
  v95.origin.y = v30;
  v95.size.width = v32;
  v95.size.height = v34;
  v44 = v34;
  v45 = v32;
  v46 = v30;
  v47 = v28;
  v48 = CGRectGetMaxY(v95);
  v96.origin.x = v93;
  v96.origin.y = v39;
  v96.size.width = v41;
  v96.size.height = v43;
  v49 = (v48 + CGRectGetMinY(v96)) * 0.5;
  v50 = v94;
  if (qword_10063D5B0 != -1)
    swift_once(&qword_10063D5B0, sub_10028ADB4);
  v51 = *(double *)&qword_100673758;
  v97.origin.x = v47;
  v97.origin.y = v46;
  v97.size.width = v45;
  v97.size.height = v44;
  v52 = CGRectGetMinX(v97);
  v98.origin.x = v47;
  v98.origin.y = v46;
  v98.size.width = v45;
  v98.size.height = v44;
  v99.size.width = CGRectGetWidth(v98);
  v99.size.height = 0.0;
  v99.origin.x = v52;
  v99.origin.y = v49;
  v100 = CGRectInset(v99, 0.0, v51 * -0.5);
  v26 = v100.origin.x;
  v53 = v100.origin.y;
  v54 = v100.size.width;
  v55 = v100.size.height;
LABEL_13:
  v66 = 0;
LABEL_30:
  *(CGFloat *)v50 = v26;
  *(CGFloat *)(v50 + 8) = v53;
  *(CGFloat *)(v50 + 16) = v54;
  *(CGFloat *)(v50 + 24) = v55;
  *(_BYTE *)(v50 + 32) = v66;
}

uint64_t sub_1002EE7D0()
{
  return type metadata accessor for TTRIBoardColumnDragAndDropController(0);
}

uint64_t type metadata accessor for TTRIBoardColumnDragAndDropController(uint64_t a1)
{
  uint64_t result;

  result = qword_100654E50;
  if (!qword_100654E50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIBoardColumnDragAndDropController);
  return result;
}

uint64_t sub_1002EE814(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10052D778;
  result = type metadata accessor for TTRRemindersListViewModel.ItemID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1002EE89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  return swift_task_switch(sub_1002EE908, v8, v9);
}

uint64_t sub_1002EE908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(v0 + 48);
    v5 = *(id *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);

    objc_msgSend(v4, "locationInView:", v5);
    objc_msgSend(v5, "updateInteractiveMovementTargetPosition:");

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EE9B4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v21 = a3;
  v22 = a4;
  v20 = a2;
  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(a5, (uint64_t)v12, &qword_100646950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000073A0((uint64_t)v12, &qword_100646950);
    sub_1002ED6A0(a1, *(void **)(v6 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), a6);
    v17 = type metadata accessor for TTRICollectionViewHitTestResult(0);
    return swift_storeEnumTagMultiPayload(a6, v17, 2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1002ECB68(*(void **)(v6 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), a1, v20, v21, v22, (uint64_t)v16, a6);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

id sub_1002EEB3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  Class isa;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v3 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000073A0((uint64_t)v5, &qword_100646950);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "cellForItemAtIndexPath:", isa);

    if (v13)
    {
      v14 = objc_msgSend(v13, "_visiblePathForBackgroundConfiguration");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
        objc_msgSend(v16, "setVisiblePath:", v15);
        v17 = objc_allocWithZone((Class)UITargetedDragPreview);
        v18 = v13;
        v10 = objc_msgSend(v17, "initWithView:parameters:", v18, v16);

        v13 = v16;
      }
      else
      {
        v10 = objc_msgSend(objc_allocWithZone((Class)UITargetedDragPreview), "initWithView:", v13);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return 0;
    }
  }
  return v10;
}

uint64_t sub_1002EF2E8(char *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  uint64_t result;
  uint64_t v10;
  id v11;
  char *v12;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_coordinator]);
  if (result)
  {
    v10 = result;
    v11 = a3;
    swift_unknownObjectRetain(a4);
    v12 = a1;
    a5();

    swift_unknownObjectRelease(a4);
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_1002EF500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  char v21;
  double v22[4];
  char v23;

  v7 = IndexPath.section.getter(a1);
  result = IndexPath.item.getter();
  v9 = result;
  if (!result)
    goto LABEL_4;
  if ((uint64_t)objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), "numberOfItemsInSection:", v7) < result)
  {
    v9 = 0;
    result = 1;
LABEL_4:
    v10 = 1;
    goto LABEL_7;
  }
  result = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    return result;
  }
  v10 = 0;
LABEL_7:
  sub_1002EE090(result, v9, v10, v7, (uint64_t)v20);
  v11 = v20[0];
  v12 = v20[1];
  v13 = v20[2];
  v14 = v20[3];
  v15 = v21;
  result = sub_10000F614((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_1006547A0);
  if ((v23 & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), "convertRect:toCoordinateSpace:", a2, v22[0], v22[1], v22[2], v22[3]);
    v11 = v16;
    v12 = v17;
    v13 = v18;
    v14 = v19;
    v15 = 0;
  }
  *(_QWORD *)a4 = v11;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = v13;
  *(_QWORD *)(a4 + 24) = v14;
  *(_BYTE *)(a4 + 32) = v15;
  return result;
}

uint64_t sub_1002EF624(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  _BYTE v20[24];

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1003F4DB0(a2);
  v9 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v20, 0, 0);
  sub_10002B1E8(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v10 = type metadata accessor for TTRIRemindersBoardDropContext(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = sub_1004ECE10((uint64_t)v8, (uint64_t)a2);
  v12 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext) = v11;
  swift_unknownObjectRetain(a2);
  swift_release();
  if ((sub_1002EF7CC(a3, a1) & 1) == 0)
  {
    v13 = *(void **)(a3
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
    if (v13)
      objc_msgSend(v13, "removeFromSuperview");
  }
  if (*(_QWORD *)(a3 + v12))
  {
    v14 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
    swift_retain();

    swift_release();
  }
  v15 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
  if (v15)
  {
    v16 = v15;
    TTRIDebugDropIndicatorView.stopShowing()();

  }
  result = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (result)
  {
    v18 = result;
    UIViewController.endFirstResponderEditing()();
    return swift_unknownObjectRelease(v18);
  }
  return result;
}

uint64_t sub_1002EF7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  int v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  char **v40;
  id v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  char v48[24];
  _BYTE v49[40];
  _QWORD v50[4];
  char v51;

  v46 = a2;
  v3 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100654F40);
  __chkstk_darwin(v7);
  v45 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRUnadjustedIndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
  v17 = objc_msgSend(v16, "window");

  if (!v17)
    return 0;
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (!v18)
    return 0;
  v44 = v16;
  v42 = a1;
  v43 = v12;
  v19 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID;
  v20 = v46 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess(v46 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v48, 0, 0);
  sub_10002B1E8(v20, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_retain();
  LOBYTE(v20) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v19, v15);
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v20 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  v21 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  v22 = swift_beginAccess(v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v47, 0, 0);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v21, 1, v3, v22);
  v24 = v44;
  if (v23)
  {
    v25 = v45;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v45, 1, 1, v9);
LABEL_8:
    swift_release();
    sub_1000073A0(v25, (uint64_t *)&unk_100654F40);
    return 0;
  }
  sub_10002B1E8(v21, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  v25 = v45;
  sub_1004EC810(v45);
  sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v25, 1, v9) == 1)
    goto LABEL_8;
  v27 = (uint64_t)v43;
  sub_10001F580(v25, (uint64_t)v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_1002EF500(v27, (uint64_t)v24, v46, (uint64_t)v49);
  sub_10000F614((uint64_t)v49, (uint64_t)v50, (uint64_t *)&unk_1006547A0);
  if ((v51 & 1) != 0)
  {
    swift_release();
    sub_10001F544(v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
    return 0;
  }
  v28 = *(double *)v50;
  v29 = *(double *)&v50[1];
  v30 = *(double *)&v50[2];
  v31 = *(double *)&v50[3];
  v32 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView;
  v33 = v42;
  v34 = *(void **)(v42
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  if (v34)
  {
    v35 = *(id *)(v42
                + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  }
  else
  {
    v36 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRITreeViewMultiRowReorderingDropIndicatorView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v37 = *(void **)(v33 + v32);
    *(_QWORD *)(v33 + v32) = v36;
    v35 = v36;

    v34 = 0;
  }
  v38 = v34;
  v39 = objc_msgSend(v35, "superview");
  v40 = &selRef_addSubview_;
  if (v39)
  {
    v41 = v39;

    if (v41 == v24)
      v40 = &selRef_bringSubviewToFront_;
  }
  objc_msgSend(v24, *v40, v35);
  objc_msgSend(v35, "setFrame:", v28, v29, v30, v31);

  swift_release();
  sub_10001F544((uint64_t)v43, (uint64_t (*)(_QWORD))&type metadata accessor for TTRUnadjustedIndexPath);
  return 1;
}

id sub_1002EFC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  unsigned __int8 v70;
  uint64_t v71;
  void *v72;
  int v73;
  void *v74;
  void *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[24];
  _BYTE v98[24];
  _BYTE v99[32];

  v92 = a3;
  v7 = sub_10002A750(&qword_100649BA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v93 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v89 = (uint64_t *)((char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v90 = (uint64_t)&v85 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - v14;
  v16 = sub_10002A750((uint64_t *)&unk_100644950);
  __chkstk_darwin(v16);
  v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v85 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v85 - v23;
  __chkstk_darwin(v25);
  v95 = (uint64_t)&v85 - v26;
  v27 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v27);
  v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v30);
  v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a4;
  v33 = *(_QWORD *)(a4 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (v33)
  {
    v87 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
    v88 = v9;
    v86 = a2;
    v34 = v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID;
    v91 = a1;
    v35 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess(v35, v99, 0, 0);
    sub_10002B1E8(v35, (uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_retain();
    LOBYTE(v34) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v34, v32);
    sub_10001F544((uint64_t)v32, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v34 & 1) != 0)
    {
      v85 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo;
      v36 = *(_QWORD *)(v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo);
      v37 = v92;
      sub_10000735C(v92, (uint64_t)v29, &qword_100646950);
      v38 = v36 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
      swift_beginAccess(v36 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput, v98, 33, 0);
      swift_retain();
      sub_100041F2C((uint64_t)v29, v38, &qword_100646950);
      swift_endAccess(v98);
      swift_release();
      v39 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection;
      if ((*(_BYTE *)(v33
                     + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection) & 1) != 0)
      {
        v40 = v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
        swift_beginAccess(v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v97, 0, 0);
        sub_10000735C(v40, (uint64_t)v24, (uint64_t *)&unk_100644950);
        v41 = v93;
        v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
        v43 = v96;
        if (v42(v24, 1, v96) != 1)
        {
          sub_10001F580((uint64_t)v24, (uint64_t)v15, type metadata accessor for TTRIRemindersBoardDropProposal);
          v56 = v95;
          sub_10001F580((uint64_t)v15, v95, type metadata accessor for TTRIRemindersBoardDropProposal);
          v55 = 1;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v56, 0, 1, v43);
          goto LABEL_18;
        }
        sub_1000073A0((uint64_t)v24, (uint64_t *)&unk_100644950);
        v37 = v92;
      }
      v44 = v91;
      sub_10003E898(v33, v91, (uint64_t)&off_1005FF670, v37, (uint64_t)v21);
      v45 = v95;
      sub_10000F614((uint64_t)v21, v95, (uint64_t *)&unk_100644950);
      sub_10000735C(v45, (uint64_t)v18, (uint64_t *)&unk_100644950);
      v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
      if (v42(v18, 1, v96) == 1)
      {
        sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100644950);
      }
      else
      {
        v52 = (uint64_t)v18;
        v53 = v89;
        sub_10001F580(v52, (uint64_t)v89, type metadata accessor for TTRIRemindersBoardDropProposal);
        v54 = sub_1002F19F0(v53, v44);
        sub_10001F544((uint64_t)v53, type metadata accessor for TTRIRemindersBoardDropProposal);
        if ((v54 & 1) != 0)
        {
          v55 = 1;
LABEL_18:
          v57 = v95;
          sub_10000735C(v95, (uint64_t)v21, (uint64_t *)&unk_100644950);
          v58 = v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
          swift_beginAccess(v33 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v98, 33, 0);
          v59 = (uint64_t)v21;
          v60 = v57;
          sub_100041F2C(v59, v58, (uint64_t *)&unk_100644950);
          swift_endAccess(v98);
          v61 = *(unsigned __int8 *)(v33 + v39);
          *(_BYTE *)(v33 + v39) = v55;
          if (v42((char *)v57, 1, v96))
          {
            v62 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
          }
          else
          {
            v63 = v90;
            sub_10002B1E8(v57, v90, type metadata accessor for TTRIRemindersBoardDropProposal);
            v62 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", *(_QWORD *)(v63 + 32), sub_1004ECA68());
            sub_10001F544(v63, type metadata accessor for TTRIRemindersBoardDropProposal);
          }
          v64 = v85;
          v65 = *(_QWORD *)(v33 + v85);
          v66 = *(void **)(v65
                         + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal);
          *(_QWORD *)(v65 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal) = v62;
          v51 = v62;

          v67 = *(_QWORD *)(v33 + v64);
          v68 = v91;
          v69 = *(void **)(v91 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
          swift_retain();
          v70 = objc_msgSend(v69, "hasUncommittedUpdates");
          *(_BYTE *)(v67
                   + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates) = v70;
          swift_release();
          v71 = v94;
          if ((sub_1002EF7CC(v94, v68) & 1) == 0)
          {
            v72 = *(void **)(v71
                           + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
            if (v72)
              objc_msgSend(v72, "removeFromSuperview");
          }
          v73 = v61 ^ 1;
          if (*(_QWORD *)(v71 + v87))
          {
            v74 = *(void **)(v71 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
            swift_retain();

            swift_release();
          }
          v75 = *(void **)(v71
                         + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
          v76 = (uint64_t)v88;
          if (v75)
          {
            v77 = v75;
            TTRIDebugDropIndicatorView.stopShowing()();

          }
          if ((v55 & v73) != 0)
          {
            v78 = type metadata accessor for TaskPriority(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v76, 1, 1, v78);
            v79 = swift_allocObject(&unk_1005FF6E8, 24, 7);
            swift_unknownObjectWeakInit(v79 + 16, v68);
            type metadata accessor for MainActor(0);
            swift_retain();
            v80 = v86;
            swift_unknownObjectRetain(v86);
            v82 = static MainActor.shared.getter(v81);
            v83 = (_QWORD *)swift_allocObject(&unk_1005FF710, 48, 7);
            v83[2] = v82;
            v83[3] = &protocol witness table for MainActor;
            v83[4] = v79;
            v83[5] = v80;
            swift_release();
            sub_100148368(v76, (uint64_t)&unk_100654F38, (uint64_t)v83);
            swift_release();
          }
          swift_release();
          sub_1000073A0(v60, (uint64_t *)&unk_100644950);
          return v51;
        }
      }
      v55 = 0;
      goto LABEL_18;
    }
    swift_release();
  }
  if (qword_10063D2A8 != -1)
    swift_once(&qword_10063D2A8, sub_10003E418);
  v46 = type metadata accessor for Logger(0);
  v47 = sub_100012DC4(v46, (uint64_t)qword_10063F040);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "TTRIRemindersBoardDragAndDropCoordinator: missing activeDropContext", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

  return objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:", 0);
}

double sub_1002F0494(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t Strong;
  id v27;
  double result;
  void *v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100644950);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14.n128_f64[0] = __chkstk_darwin(v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)(a3
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
  if (v17)
    objc_msgSend(v17, "removeFromSuperview", v14.n128_f64[0]);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID, v12, v14);
  v18 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (v18)
  {
    v30 = a2;
    v19 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID;
    v29 = a1;
    v20 = (uint64_t)a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess(v20, v32, 0, 0);
    sub_10002B1E8(v20, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_retain();
    LOBYTE(v19) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v19, v8);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    if ((v19 & 1) != 0)
    {
      v21 = v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
      swift_beginAccess(v18 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, v31, 0, 0);
      sub_10000735C(v21, (uint64_t)v11, (uint64_t *)&unk_100644950);
      swift_release();
      a1 = v29;
      a2 = v30;
      goto LABEL_8;
    }
    swift_release();
    a1 = v29;
    a2 = v30;
  }
  v22 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
LABEL_8:
  v23 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator(0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v24 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dragAndDropCoordinatorID, v16, v12);
  v25 = (_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_column);
  *v25 = a1;
  v25[1] = &off_1005FF670;
  sub_10000F614((uint64_t)v11, v24 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_lastDropProposal, (uint64_t *)&unk_100644950);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  v27 = a1;
  swift_unknownObjectRetain(a2);
  if (Strong)
  {
    sub_10036EBF4(v24);
    swift_release();
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1002F0774(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68[24];
  uint64_t v69;
  uint64_t v70;

  LODWORD(v63) = a5;
  v67 = a4;
  v62 = a1;
  v66 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  __chkstk_darwin(v66);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  v60 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v12 = (id *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v64 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext;
  v17 = *(_QWORD *)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_internalActiveDropContext);
  if (!v17)
    goto LABEL_3;
  v18 = v17 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID;
  v19 = a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
  swift_beginAccess(v19, v68, 0, 0);
  sub_10002B1E8(v19, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_retain();
  LOBYTE(v19) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(v18, v15);
  swift_release();
  sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v19 & 1) != 0)
  {
LABEL_3:
    if (qword_10063D2A8 != -1)
      swift_once(&qword_10063D2A8, sub_10003E418);
    v21 = type metadata accessor for Logger(0);
    sub_100012DC4(v21, (uint64_t)qword_10063F040);
    v22 = swift_bridgeObjectRetain_n(v67, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v27 = v67;
      v59 = a6;
      v28 = v26;
      v70 = v26;
      *(_DWORD *)v25 = 136315138;
      v58 = v25 + 4;
      swift_bridgeObjectRetain(v27);
      v69 = sub_100027E40(a3, v27, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v58, v25 + 12);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIRemindersBoardDragAndDropCoordinator: session ended - %s", v25, 0xCu);
      swift_arrayDestroy(v28, 1, &type metadata for Any[8]);
      v29 = v28;
      a6 = v59;
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v67, 2);
    }
    *(_QWORD *)(a6 + v16) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
    v31 = *(void **)(a6
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_multiRowReorderingDropIndicatorView);
    if (v31)
      objc_msgSend(v31, "removeFromSuperview", result);
    if (*(_QWORD *)(a6 + v16))
    {
      v32 = *(void **)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_rootView);
      swift_retain();

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
    v33 = *(void **)(a6 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_dropPointIndicatorView);
    if (v33)
    {
      v34 = v33;
      TTRIDebugDropIndicatorView.stopShowing()();

    }
    if ((v63 & 1) != 0)
    {
      v35 = v62;
      swift_getObjectType(v62, v30);
      v36 = sub_10004181C(v35, a6);
      v37 = sub_1002EC590(v36);
      swift_bridgeObjectRelease(v36);
      v38 = v37[2];
      if (v38)
      {
        v67 = a6 + 16;
        v39 = *(unsigned __int8 *)(v60 + 80);
        v62 = v37;
        v40 = (uint64_t)v37 + ((v39 + 32) & ~v39);
        v41 = *(_QWORD *)(v60 + 72);
        v42 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo;
        v63 = xmmword_100520250;
        v44 = v65;
        v43 = v66;
        v61 = v10;
        do
        {
          sub_10002B1E8(v40, (uint64_t)v12, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
          if (swift_getEnumCaseMultiPayload(v12, v44) == 1)
          {

          }
          else
          {
            sub_10001F580((uint64_t)v12, (uint64_t)v10, v42);
            if ((v10[*(int *)(v43 + 28)] & 1) != 0)
            {
              Strong = swift_unknownObjectWeakLoadStrong(v67);
              if (Strong)
              {
                v46 = Strong;
                v47 = (uint64_t)&v10[*(int *)(v43 + 24)];
                v48 = sub_10002A750(&qword_100642EB0);
                v49 = *(unsigned __int8 *)(v64 + 80);
                v50 = v42;
                v51 = (v49 + 32) & ~v49;
                v52 = swift_allocObject(v48, v51 + *(_QWORD *)(v64 + 72), v49 | 7);
                *(_OWORD *)(v52 + 16) = v63;
                v53 = v52 + v51;
                v42 = v50;
                sub_10002B1E8(v47, v53, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                v70 = v52;
                swift_retain();
                v54 = sub_10002A750((uint64_t *)&unk_100646F50);
                v55 = sub_100023FEC((unint64_t *)&qword_100642EB8, (uint64_t *)&unk_100646F50, (uint64_t)&protocol conformance descriptor for [A]);
                TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:)(&v70, v54, v55);
                swift_unknownObjectRelease(v46);
                v10 = v61;
                swift_bridgeObjectRelease(v52);
                v44 = v65;
                v43 = v66;
                swift_release();
              }
            }
            sub_10001F544((uint64_t)v10, v42);
          }
          v40 += v41;
          --v38;
        }
        while (v38);
        v56 = v62;
      }
      else
      {
        v56 = v37;
      }
      *(_QWORD *)&result = swift_bridgeObjectRelease(v56).n128_u64[0];
    }
  }
  return result;
}

_QWORD *sub_1002F0D10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];

  v40 = a4;
  v39 = a3;
  v6 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v38 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - v17;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_10001F580((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F580((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v19 = a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID;
    swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_columnID, v42, 0, 0);
    sub_10002B1E8(v19, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v20 = &v8[*(int *)(v6 + 20)];
    v21 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a2, v21);
    sub_10002B1E8((uint64_t)v18, (uint64_t)&v8[*(int *)(v6 + 24)], (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v22 = v40;
    v23 = (void *)sub_100041A84((uint64_t)v8);
    sub_10001F544((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemInfo);
    if (!v23)
    {
LABEL_15:
      sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return _swiftEmptyArrayStorage;
    }
    if ((v39 & 1) == 0)
    {
LABEL_17:
      v34 = sub_10002A750((uint64_t *)&unk_1006415A0);
      v35 = swift_allocObject(v34, 40, 7);
      *(_OWORD *)(v35 + 16) = xmmword_100521140;
      *(_QWORD *)(v35 + 32) = v23;
      v41 = v35;
      specialized Array._endMutation()(v35);
      v33 = v41;
      sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return (_QWORD *)v33;
    }
    v24 = v22;
    Strong = swift_unknownObjectWeakLoadStrong(v22 + 16);
    if (Strong)
    {
      v26 = Strong;
      sub_10036E870();
      v28 = v27;
      swift_unknownObjectRelease(v26);
      v29 = v28[2];
      if (v29)
      {
LABEL_7:
        v30 = (char *)v28
            + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        v31 = *(_QWORD *)(v38 + 72);
        swift_bridgeObjectRetain(v28);
        while ((static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)(&v30[*(int *)(v6 + 24)], v18) & 1) == 0)
        {
          v30 += v31;
          if (!--v29)
          {
            swift_bridgeObjectRelease_n(v28, 2);
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease(v28);
        v32 = v28[2];
        swift_bridgeObjectRelease(v28);
        if (v32 >= 2)
        {
          *(_BYTE *)(v24
                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) = 1;

          goto LABEL_15;
        }
        goto LABEL_17;
      }
    }
    else
    {
      v28 = _swiftEmptyArrayStorage;
      v29 = _swiftEmptyArrayStorage[2];
      if (v29)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(v28);
    goto LABEL_17;
  }
  sub_1000073A0((uint64_t)v11, (uint64_t *)&unk_1006463C0);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1002F1064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if ((*(_BYTE *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                 + 16) & 1) == 0)
    return sub_1002F0D10(a1, a2, 1, a3);
  if (qword_10063D2A8 != -1)
    swift_once(&qword_10063D2A8, sub_10003E418);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100012DC4(v4, (uint64_t)qword_10063F040);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "TTRIRemindersBoardDragAndDropCoordinator: disallow starting a drag because there is an in-progress drag", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return _swiftEmptyArrayStorage;
}

void sub_1002F1164(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750(&qword_100654FA0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10002A750(&qword_100654FA8);
  __chkstk_darwin(v10);
  v12 = (void **)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10002A750((uint64_t *)&unk_100654F20);
  __chkstk_darwin(v13);
  v40 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - v19;
  sub_1003F4B5C(a1);
  swift_getObjectType(a1, v21);
  v22 = sub_10004181C(a1, a2);
  v23 = v22;
  if (*(_QWORD *)(v22 + 16) != 1)
  {
    swift_bridgeObjectRelease(v22);
    return;
  }
  v38 = v6;
  v39 = v4;
  v24 = sub_10002A750(&qword_10063F178);
  v25 = *(_QWORD *)(v24 - 8);
  sub_10000735C(v23 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), (uint64_t)v9, &qword_10063F178);
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v25 + 56))(v9, 0, 1, v24);
  swift_bridgeObjectRelease(v23);
  v26 = sub_10002A750(&qword_10063F178);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v9, 1, v26) == 1)
  {
    v27 = &qword_100654FA0;
    v28 = (uint64_t)v9;
  }
  else
  {
    v29 = (uint64_t)v9 + *(int *)(v26 + 48);
    v30 = (uint64_t)v12 + *(int *)(v10 + 48);
    *v12 = *v9;
    sub_10000F614(v29, v30, (uint64_t *)&unk_100654F20);
    v31 = *v12;
    sub_10000F614((uint64_t)v12 + *(int *)(v10 + 48), (uint64_t)v20, (uint64_t *)&unk_100654F20);
    sub_10000735C((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_100654F20);
    v32 = v41;
    v33 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v17, 1, v39) != 1)
    {
      v34 = (uint64_t)v38;
      sub_10001F580((uint64_t)v17, (uint64_t)v38, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
      Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
      if (Strong)
      {
        v36 = Strong;
        if ((sub_1000A3A00(v34 + *(int *)(v33 + 28)) & 1) != 0)
        {
          *(_BYTE *)(v34 + *(int *)(v33 + 32)) = 1;
          v37 = v40;
          sub_10002B1E8(v34, v40, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v33);
          sub_10003E564(v37);
          swift_unknownObjectRelease(v36);

          sub_1000073A0(v37, (uint64_t *)&unk_100654F20);
          sub_10001F544(v34, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
          v28 = (uint64_t)v20;
          v27 = (uint64_t *)&unk_100654F20;
          goto LABEL_12;
        }
        swift_unknownObjectRelease(v36);
      }

      sub_10001F544(v34, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
      v27 = (uint64_t *)&unk_100654F20;
      v28 = (uint64_t)v20;
      goto LABEL_12;
    }
    sub_1000073A0((uint64_t)v20, (uint64_t *)&unk_100654F20);

    v28 = (uint64_t)v17;
    v27 = (uint64_t *)&unk_100654F20;
  }
LABEL_12:
  sub_1000073A0(v28, v27);
}

_QWORD *sub_1002F1548(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v8 = sub_10002A750(&qword_10063F178);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType(a2, v12);
  v13 = sub_10004181C(a2, a4);
  v14 = v13;
  v15 = *(_QWORD *)(v13 + 16);
  if (v15)
  {
    v22 = a3;
    v16 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      sub_10000735C(v16, (uint64_t)v11, &qword_10063F178);
      v18 = &v11[*(int *)(v8 + 48)];
      v19 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
      LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19);
      sub_1000073A0((uint64_t)v11, &qword_10063F178);
      if ((_DWORD)v18 != 1)
        break;
      v16 += v17;
      if (!--v15)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v14);
    return sub_1002F0D10(a1, v22, 0, a4);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v14);
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_1002F16A4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  char v31;
  uint64_t v33;
  _BYTE v34[16];

  v4 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (id *)&v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v34[-v9];
  swift_getObjectType(a1, v11);
  v12 = objc_msgSend(a1, "items");
  v13 = sub_100041E10();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v33 = v14;
    else
      v33 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v14);
  if (!v15)
    goto LABEL_19;
  if ((*(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                 + 16) & 1) != 0)
  {
    v16 = sub_10004181C(a1, a2);
    v17 = sub_1002EC590(v16);
    swift_bridgeObjectRelease(v16);
    v18 = v17[2];
    if (!v18)
    {
      swift_bridgeObjectRelease(v17);
LABEL_11:
      if (qword_10063D2A8 != -1)
        swift_once(&qword_10063D2A8, sub_10003E418);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100012DC4(v21, (uint64_t)qword_10063F040);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIRemindersBoardDragAndDropCoordinator: reject external drop session because there is an in-progress local drag", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

      goto LABEL_19;
    }
    v19 = (uint64_t)v17 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v20 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n(v17, 2);
    swift_unknownObjectRetain(a1);
    while (1)
    {
      sub_10002B1E8(v19, (uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      sub_10002B1E8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      if (swift_getEnumCaseMultiPayload(v7, v4) != 1)
        break;

      sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
      v19 += v20;
      if (!--v18)
      {
        swift_unknownObjectRelease(a1);
        swift_bridgeObjectRelease_n(v17, 3);
        goto LABEL_11;
      }
    }
    sub_10001F544((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    sub_10001F544((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease_n(v17, 3);
  }
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
  {
LABEL_19:
    v31 = 0;
    return v31 & 1;
  }
  v28 = Strong;
  v29 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter), v27);
  v31 = (*(uint64_t (**)(void *, uint64_t))(*(_QWORD *)(v29 + 8) + 480))(a1, ObjectType);
  swift_unknownObjectRelease(v28);
  return v31 & 1;
}

uint64_t sub_1002F19F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v22 - v8);
  v10 = a1[3];
  v11 = *(_QWORD *)(a1[1] + 16);
  v12 = *(_QWORD *)(a1[2] + 16);
  if (!((unint64_t)v10 >> 62))
  {
    v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v12 + v13;
    if (!__OFADD__(v12, v13))
      goto LABEL_3;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v10 < 0)
    v20 = a1[3];
  else
    v20 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1[3]);
  v13 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v10);
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_24;
LABEL_3:
  if (!v11)
  {
    sub_10002B1E8((uint64_t)a1, (uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    goto LABEL_9;
  }
  v15 = v11 + v14;
  if (__OFADD__(v11, v14))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_10002B1E8((uint64_t)a1, (uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (v15 != 1)
  {
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    sub_10002B1E8((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
LABEL_7:
    sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
    return 0;
  }
LABEL_9:
  if (*(_QWORD *)(v9[1] + 16) != 1 || *(_QWORD *)(v9[2] + 16))
  {
    sub_10001F544((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
    sub_10002B1E8((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
    goto LABEL_12;
  }
  v13 = v9[3];
  if (!((unint64_t)v13 >> 62))
  {
    v19 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_17;
  }
LABEL_26:
  if (v13 < 0)
    v21 = v13;
  else
    v21 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v19 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v13);
LABEL_17:
  sub_10001F544((uint64_t)v9, type metadata accessor for TTRIRemindersBoardDropProposal);
  sub_10002B1E8((uint64_t)a1, (uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (!v19)
    goto LABEL_7;
LABEL_12:
  v16 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", *((_QWORD *)v6 + 4), sub_1004ECA68());
  v17 = objc_msgSend(v16, "intent");

  sub_10001F544((uint64_t)v6, type metadata accessor for TTRIRemindersBoardDropProposal);
  if (v17 == (id)1)
    return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView), "hasUncommittedUpdates") ^ 1;
  return 0;
}

uint64_t sub_1002F1C7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F1CA0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002F1CD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100654F34);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10004A08C;
  return sub_1002EE89C(a1, v4, v5, v7, v6);
}

uint64_t sub_1002F1D4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002F1D70()
{
  uint64_t v0;

  return sub_1002ED490(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1002F1D80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F1D90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002EDE20(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_1002F1DA8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1002EDFB0(*(void **)(v1 + 16), a1);
}

char *sub_1002F1DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  id v17;
  double v18;
  NSString v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  Class isa;
  char *v29;
  char *v30;
  uint64_t v32;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  v9 = objc_msgSend(v7, "init");
  static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = sub_100005ED8(0, (unint64_t *)&qword_10064ACC0, UIFont_ptr);
  v14 = (void *)static UIFont.roundedBodyFont.getter(v13);
  objc_msgSend(v9, "setFont:", v14);

  v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v15);

  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v9, "setNumberOfLines:", 0);
  LODWORD(v16) = 1132068864;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 0, v16);
  *(_QWORD *)&v8[qword_100654FB0] = v9;
  v17 = v9;

  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  v33.receiver = v8;
  v33.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v33, "initWithStyle:reuseIdentifier:", a1, v19, v18);

  v21 = *(void **)&v20[direct field offset for TTRITableViewContainerCell.containerView];
  v22 = v20;
  v23 = v21;
  objc_msgSend(v23, "setHorizontalAlignment:", 1);
  objc_msgSend(v23, "setVerticalAlignment:", 0);
  v24 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100521140;
  *(_QWORD *)(v25 + 32) = v17;
  v32 = v25;
  specialized Array._endMutation()(v25);
  sub_100005ED8(0, (unint64_t *)&qword_1006406F0, UIView_ptr);
  v26 = v17;
  v27 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v29 = v22;
  UITableViewCell.setSeparatorInsetType(_:)(0);

  v30 = v29;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  return v30;
}

char *sub_1002F2098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_1002F1DC0(a3, a4, v6);
}

void sub_1002F20E0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010056F5E0, "Reminders/TTRIRemindersListRecentlyDeletedDisclaimerCell.swift", 62, 2, 46, 0);
  __break(1u);
}

void sub_1002F2138()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010055F310, "Reminders/TTRIRemindersListRecentlyDeletedDisclaimerCell.swift", 62, 2, 50, 0);
  __break(1u);
}

Class sub_1002F2190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  Class isa;

  v2 = sub_10002A750((uint64_t *)&unk_10064B8C0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100520250;
  v4 = *(void **)(a1 + qword_100654FB0);
  *(_QWORD *)(v3 + 56) = sub_100005ED8(0, &qword_10063F908, UILabel_ptr);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

void sub_1002F222C()
{
  uint64_t v0;

}

void sub_1002F223C(uint64_t a1)
{

}

uint64_t type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell(uint64_t a1)
{
  uint64_t result;

  result = qword_100654FE0;
  if (!qword_100654FE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TTRIRemindersListRecentlyDeletedDisclaimerCell);
  return result;
}

uint64_t sub_1002F2288()
{
  return type metadata accessor for TTRIRemindersListRecentlyDeletedDisclaimerCell(0);
}

uint64_t type metadata accessor for TTRIGroupMembershipRouter()
{
  return objc_opt_self(_TtC9Reminders25TTRIGroupMembershipRouter);
}

uint64_t TTRListDetailViewModel.layoutContext.getter()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 192));
}

__n128 TTRListDetailViewModel.init(changeItem:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[13];

  sub_1002F2DB4(a1, (uint64_t)v9);
  v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[13];

  sub_1002F371C(a1, (uint64_t)v9);
  v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  _OWORD v10[13];

  sub_1002F34E4(a1, (uint64_t)v10);

  v4 = v10[11];
  *(_OWORD *)(a2 + 160) = v10[10];
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 192) = v10[12];
  v5 = v10[7];
  *(_OWORD *)(a2 + 96) = v10[6];
  *(_OWORD *)(a2 + 112) = v5;
  v6 = v10[9];
  *(_OWORD *)(a2 + 128) = v10[8];
  *(_OWORD *)(a2 + 144) = v6;
  v7 = v10[3];
  *(_OWORD *)(a2 + 32) = v10[2];
  *(_OWORD *)(a2 + 48) = v7;
  v8 = v10[5];
  *(_OWORD *)(a2 + 64) = v10[4];
  *(_OWORD *)(a2 + 80) = v8;
  result = (__n128)v10[1];
  *(_OWORD *)a2 = v10[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

__n128 TTRListDetailViewModel.init(changeItem:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[13];

  sub_1002F2678(a1, (uint64_t)v9);
  swift_release();
  v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

BOOL TTRListDetailViewModel.canSave.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  else
    v2 = *v0 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

uint64_t TTRSmartListFilterEditorViewModel.ListData.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t TTRListDetailViewModel.badge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F3AAC(v1 + 16, a1);
}

void *TTRListDetailViewModel.filter.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 112);
  v2 = v1;
  return v1;
}

uint64_t TTRListDetailViewModel.isListTypePickerHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t TTRListDetailViewModel.isFilterHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 121);
}

uint64_t TTRListDetailViewModel.canChangeEmblemOrEmoji.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t TTRListDetailViewModel.canMakeIntoCustomSmartList.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 123);
}

uint64_t TTRListDetailViewModel.supportsCustomSmartLists.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 124);
}

uint64_t TTRListDetailViewModel.canMakeIntoGroceriesList.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 125);
}

uint64_t TTRListDetailViewModel.filterDisclosureTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 136));
  return v1;
}

void *TTRListDetailViewModel.filterDisclosureSubtitle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 144);
  v2 = v1;
  return v1;
}

uint64_t TTRListDetailViewModel.dialogViewTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 160));
  return v1;
}

uint64_t TTRListDetailViewModel.dialogViewTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.dialogViewTitle.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRListDetailViewModel.placeholderText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
  return v1;
}

uint64_t TTRListDetailViewModel.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 176));
  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.placeholderText.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t TTRListDetailViewModel.listType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t TTRListDetailViewModel.listType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 184) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *TTRListDetailViewModel.listType.modify())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

id sub_1002F2678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unsigned int v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t countAndFlagsBits;
  id v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  void *v48;
  id v49;
  Swift::String v50;
  BOOL v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  char v55;
  Swift::Int v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void *v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v73;
  int v74;
  id v75;
  id *v76;
  void *object;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[40];
  _QWORD v97[3];
  uint64_t v98;
  _UNKNOWN **v99;
  _BYTE v100[8];
  _BYTE v101[8];
  _QWORD v102[8];
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 v106;
  unsigned __int8 v107;

  v4 = *(_QWORD *)a1;
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 40, v101, 0, 0);
  v9 = *(_QWORD *)(a1 + 48);
  v95 = *(_QWORD *)(a1 + 40);
  v10 = *(void **)(a1 + 24);
  v94 = v9;
  swift_bridgeObjectRetain(v9);
  v11 = objc_msgSend(v10, "capabilities");
  v93 = objc_msgSend(v11, "supportsListAppearance");

  v76 = (id *)(a1 + 72);
  swift_beginAccess(a1 + 72, v100, 0, 0);
  v12 = *(_QWORD *)(a1 + 72);
  v98 = v4;
  v99 = &protocol witness table for TTRListDetailCreationChangeItem;
  v97[0] = a1;
  swift_retain(a1);
  TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)(v102, v97, v12 != 0);
  v92 = v102[0];
  v91 = v102[1];
  v90 = v102[2];
  v89 = v102[3];
  v88 = v102[4];
  v87 = v102[5];
  v86 = v102[6];
  v85 = v102[7];
  v84 = v103;
  v83 = v104;
  v82 = v105;
  v81 = v106;
  v80 = v107;
  v13 = type metadata accessor for REMGroceryDummyModel(0);
  v14 = static Locale.current.getter(v13);
  v15 = Locale.identifier.getter(v14);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LODWORD(v8) = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v15, v17);
  swift_bridgeObjectRelease(v17);
  v18 = v12;
  v19 = objc_msgSend(v10, "capabilities");
  v20 = objc_msgSend(v19, "supportsCustomSmartLists");

  v21 = objc_msgSend(v10, "capabilities");
  LODWORD(v4) = objc_msgSend(v21, "supportsGroceriesList");

  v78 = v4 & v8;
  v79 = v20;
  if ((v4 & v8) != 1)
  {
    v35._countAndFlagsBits = 0xD000000000000014;
    v36._countAndFlagsBits = 0xD00000000000002BLL;
    v37._object = (void *)0x8000000100573740;
    v35._object = (void *)0x8000000100573770;
    v36._object = (void *)0x8000000100573790;
    v37._countAndFlagsBits = 0xD000000000000026;
    v38 = TTRLocalizedString(_:value:comment:)(v37, v35, v36);
    countAndFlagsBits = v38._countAndFlagsBits;
    object = v38._object;
    if (*v76)
    {
      v39 = *v76;
      v40 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
      _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v40);
      v42 = v41;
      v43 = objc_allocWithZone((Class)NSAttributedString);
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v42);
      v27 = objc_msgSend(v43, "initWithString:", v44);

    }
    else
    {
      v45._countAndFlagsBits = 0xD000000000000029;
      v46._countAndFlagsBits = 0xD00000000000002ELL;
      v45._object = (void *)0x800000010056CE30;
      v47._object = (void *)0x800000010056CE60;
      v46._object = (void *)0x800000010056CE90;
      v47._countAndFlagsBits = 0xD000000000000026;
      v48 = TTRLocalizedString(_:value:comment:)(v45, v47, v46)._object;
      v49 = objc_allocWithZone((Class)NSAttributedString);
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v48);
      v27 = objc_msgSend(v49, "initWithString:", v44);
    }

    v28 = v20 ^ 1;
    if (v18)
      goto LABEL_3;
LABEL_8:
    v74 = v28;
    v75 = v27;
    v76 = (id *)countAndFlagsBits;
    v31 = 0xD00000000000001ALL;
    v29 = 0x8000000100570FB0;
    v30 = 0x8000000100570FD0;
    v32 = 0x7473694C2077654ELL;
    v33 = 0xE800000000000000;
    v34 = 0xD00000000000001ALL;
    goto LABEL_9;
  }
  v22._countAndFlagsBits = 0xD00000000000001BLL;
  v22._object = (void *)0x8000000100573820;
  v23._object = (void *)0x8000000100573840;
  v24._countAndFlagsBits = 0x707954207473694CLL;
  v24._object = (void *)0xE900000000000065;
  v23._countAndFlagsBits = 0xD000000000000020;
  v25 = TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  countAndFlagsBits = v25._countAndFlagsBits;
  object = v25._object;
  v27 = 0;
  v28 = 0;
  if (!v18)
    goto LABEL_8;
LABEL_3:
  v74 = v28;
  v75 = v27;
  v76 = (id *)countAndFlagsBits;
  v29 = 0x80000001005737C0;
  v30 = 0x80000001005737F0;
  v31 = 0xD000000000000020;
  v32 = 0x72616D532077654ELL;
  v33 = 0xEE007473694C2074;
  v34 = 0xD000000000000020;
LABEL_9:
  v50 = TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v31, *(Swift::String *)&v32, *(Swift::String *)&v34);
  v73 = v50._countAndFlagsBits;
  v51 = v18 == 0;
  v52._countAndFlagsBits = 0xD000000000000026;
  v52._object = (void *)0x800000010056D090;
  v53._countAndFlagsBits = 0x6D614E207473694CLL;
  v53._object = (void *)0xE900000000000065;
  v54 = TTRLocalizedString(_:comment:)(v53, v52);
  swift_beginAccess(a1 + 80, v96, 0, 0);
  v55 = *(_BYTE *)(a1 + 80);
  v56 = sub_10048F960((uint64_t)&off_1005EA850);
  v57 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v56);
  v98 = type metadata accessor for TTRUserDefaults(0);
  v99 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  v97[0] = v57;
  v58 = type metadata accessor for TTRRemindersListDataModelSourceLayoutContext(0);
  swift_allocObject(v58, 49, 7);
  v59 = v57;
  v60 = TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)(v56, v97, 0, 255);
  v61 = *(void **)(a1 + 72);
  v62 = v84;
  LOBYTE(v97[0]) = v84;
  v63 = v81;
  v96[24] = v81;
  v64 = v94;
  *(_QWORD *)a2 = v95;
  *(_QWORD *)(a2 + 8) = v64;
  v65 = v91;
  *(_QWORD *)(a2 + 16) = v92;
  *(_QWORD *)(a2 + 24) = v65;
  v66 = v89;
  *(_QWORD *)(a2 + 32) = v90;
  *(_QWORD *)(a2 + 40) = v66;
  v67 = v87;
  *(_QWORD *)(a2 + 48) = v88;
  *(_QWORD *)(a2 + 56) = v67;
  v68 = v85;
  *(_QWORD *)(a2 + 64) = v86;
  *(_QWORD *)(a2 + 72) = v68;
  *(_BYTE *)(a2 + 80) = v62;
  v69 = v82;
  *(_QWORD *)(a2 + 88) = v83;
  *(_QWORD *)(a2 + 96) = v69;
  *(_BYTE *)(a2 + 104) = v63;
  *(_BYTE *)(a2 + 105) = v80;
  *(_QWORD *)(a2 + 112) = v61;
  *(_BYTE *)(a2 + 120) = v74;
  *(_BYTE *)(a2 + 121) = v51;
  *(_BYTE *)(a2 + 122) = v93;
  *(_BYTE *)(a2 + 123) = 0;
  *(_BYTE *)(a2 + 124) = v79;
  *(_BYTE *)(a2 + 125) = v78;
  v70 = object;
  *(_QWORD *)(a2 + 128) = v76;
  *(_QWORD *)(a2 + 136) = v70;
  v71 = v73;
  *(_QWORD *)(a2 + 144) = v75;
  *(_QWORD *)(a2 + 152) = v71;
  *(_QWORD *)(a2 + 160) = v50._object;
  *(Swift::String *)(a2 + 168) = v54;
  *(_BYTE *)(a2 + 184) = v55;
  *(_QWORD *)(a2 + 192) = v60;
  *(_QWORD *)(a2 + 200) = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  return v61;
}

void sub_1002F2DB4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char **v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  unsigned int v32;
  int v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  id v41;
  void *v42;
  unsigned __int8 v43;
  _BOOL4 v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  BOOL v51;
  char v52;
  char v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  void *v77;
  uint64_t v78;
  void *object;
  uint64_t countAndFlagsBits;
  id v81;
  unsigned int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char v99;
  _QWORD v100[6];
  _QWORD v101[8];
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  unsigned __int8 v106;

  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "displayName");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a1, "appearanceContext");
  v13 = v12;
  if (v12)

  v81 = v13;
  v14 = a1;
  TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)(v101, a1, 0);
  v94 = v101[0];
  v93 = v101[1];
  v92 = v101[2];
  v91 = v101[3];
  v90 = v101[4];
  v89 = v101[5];
  v88 = v101[6];
  v87 = v101[7];
  v86 = v102;
  v85 = v103;
  v84 = v104;
  v83 = v105;
  v95 = v106;
  v76 = objc_msgSend(v14, "isShared");
  v15 = objc_msgSend(v14, "accountCapabilities");
  v82 = objc_msgSend(v15, "supportsCustomSmartLists");

  v16 = objc_msgSend(v14, "groceryContextChangeItem");
  v17 = &selRef_supportsTemplates;
  v97 = v9;
  v98 = a1;
  v96 = v11;
  if (!v16)
  {
LABEL_8:
    v24 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
    v25 = objc_msgSend(v24, "preferredLocalizations");

    if (v25)
    {
      v27 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String);

      if (v27[2])
      {
        v21 = v27[4];
        v23 = v27[5];
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRelease(v27);
        goto LABEL_13;
      }
      v26 = swift_bridgeObjectRelease(v27);
    }
    v28 = static Locale.current.getter(v26);
    v21 = Locale.identifier.getter(v28);
    v23 = v29;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_13;
  }
  v18 = v16;
  if (!objc_msgSend(v16, "shouldCategorizeGroceryItems"))
  {

    goto LABEL_8;
  }
  v19 = objc_msgSend(v18, "groceryLocaleID");
  if (!v19)
  {
    v68 = objc_msgSend((id)objc_opt_self(REMUserDefaults), "daemonUserDefaults");
    v69 = objc_msgSend(v68, "preferredLocalizations");

    if (v69)
    {
      v71 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for String);

      if (v71[2])
      {
        v21 = v71[4];
        v23 = v71[5];
        swift_bridgeObjectRetain(v23);

        swift_bridgeObjectRelease(v71);
        v17 = &selRef_supportsTemplates;
        goto LABEL_13;
      }
      v70 = swift_bridgeObjectRelease(v71);
    }
    v72 = static Locale.current.getter(v70);
    v21 = Locale.identifier.getter(v72);
    v23 = v73;

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = &selRef_supportsTemplates;
    goto LABEL_13;
  }
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  v17 = &selRef_supportsTemplates;
LABEL_13:
  type metadata accessor for REMGroceryDummyModel(0);
  v30 = static REMGroceryDummyModel.isSupported(localeIdentifier:)(v21, v23);
  swift_bridgeObjectRelease(v23);
  v31 = objc_msgSend(v14, "accountCapabilities");
  v32 = objc_msgSend(v31, "supportsGroceriesList");

  v33 = v32 & v30;
  v34._countAndFlagsBits = 0xD000000000000020;
  v35._object = (void *)0xE90000000000006FLL;
  v36._object = (void *)0x8000000100573950;
  v34._object = (void *)0x8000000100573970;
  v36._countAndFlagsBits = 0xD00000000000001BLL;
  v35._countAndFlagsBits = 0x666E49207473694CLL;
  v37 = TTRLocalizedString(_:value:comment:)(v36, v35, v34);
  v38._countAndFlagsBits = 0xD000000000000026;
  v38._object = (void *)0x800000010056D090;
  v39._countAndFlagsBits = 0x6D614E207473694CLL;
  v39._object = (void *)0xE900000000000065;
  v40 = TTRLocalizedString(_:comment:)(v39, v38);
  v41 = objc_msgSend(v14, "groceryContextChangeItem");
  v44 = 0;
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend(v41, v17[9]);

    if ((v43 & 1) != 0)
      v44 = 1;
  }
  v45 = v81;
  countAndFlagsBits = v37._countAndFlagsBits;
  object = v37._object;
  v78 = v40._countAndFlagsBits;
  v77 = v40._object;
  LODWORD(v81) = v44;
  if (v33)
  {
    v46._countAndFlagsBits = 0xD000000000000020;
    v47._object = (void *)0x8000000100573820;
    v46._object = (void *)0x8000000100573840;
    v47._countAndFlagsBits = 0xD00000000000001BLL;
    v48._countAndFlagsBits = 0x707954207473694CLL;
    v48._object = (void *)0xE900000000000065;
    v49 = TTRLocalizedString(_:value:comment:)(v47, v48, v46);
    v75 = v49._countAndFlagsBits;
    v50 = v49._object;
  }
  else
  {
    v75 = 0;
    v50 = 0;
  }
  v51 = v45 != 0;
  v52 = v82;
  v53 = v82 & (v76 ^ 1);
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext(0);
  v54 = v14;
  v55 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v54);
  v100[3] = type metadata accessor for TTRUserDefaults(0);
  v100[4] = &protocol witness table for TTRUserDefaults;
  v100[0] = v55;
  v56 = v55;
  v57 = TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)(v98, 0, v100);

  v58 = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  if (!v57)
    v58 = 0;
  v59 = v86;
  LOBYTE(v100[0]) = v86;
  v99 = v83;
  v60 = v96;
  *(_QWORD *)a2 = v97;
  *(_QWORD *)(a2 + 8) = v60;
  v61 = v93;
  *(_QWORD *)(a2 + 16) = v94;
  *(_QWORD *)(a2 + 24) = v61;
  v62 = v91;
  *(_QWORD *)(a2 + 32) = v92;
  *(_QWORD *)(a2 + 40) = v62;
  v63 = v89;
  *(_QWORD *)(a2 + 48) = v90;
  *(_QWORD *)(a2 + 56) = v63;
  v64 = v87;
  *(_QWORD *)(a2 + 64) = v88;
  *(_QWORD *)(a2 + 72) = v64;
  *(_BYTE *)(a2 + 80) = v59;
  v65 = v84;
  *(_QWORD *)(a2 + 88) = v85;
  *(_QWORD *)(a2 + 96) = v65;
  *(_BYTE *)(a2 + 104) = v99;
  *(_BYTE *)(a2 + 105) = v95;
  *(_QWORD *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = v33 ^ 1;
  *(_BYTE *)(a2 + 121) = 1;
  *(_BYTE *)(a2 + 122) = v51;
  *(_BYTE *)(a2 + 123) = v53;
  *(_BYTE *)(a2 + 124) = v52;
  *(_BYTE *)(a2 + 125) = v33;
  *(_QWORD *)(a2 + 128) = v75;
  *(_QWORD *)(a2 + 136) = v50;
  v66 = countAndFlagsBits;
  *(_QWORD *)(a2 + 144) = 0;
  *(_QWORD *)(a2 + 152) = v66;
  v67 = v78;
  *(_QWORD *)(a2 + 160) = object;
  *(_QWORD *)(a2 + 168) = v67;
  *(_QWORD *)(a2 + 176) = v77;
  *(_BYTE *)(a2 + 184) = (_BYTE)v81;
  *(_QWORD *)(a2 + 192) = v57;
  *(_QWORD *)(a2 + 200) = v58;
}

double sub_1002F34E4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  char v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  double result;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  void *v35;
  _OWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v4 = objc_msgSend(a1, "name");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v31 = v6;
  v32 = v5;

  v34 = sub_100005ED8(0, &qword_100643738, REMTemplateChangeItem_ptr);
  v35 = &protocol witness table for REMTemplateChangeItem;
  v33[0] = a1;
  v7 = a1;
  TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)(v36, v33, 0);
  v29 = v36[1];
  v30 = v36[0];
  v28 = v36[2];
  v26 = v38;
  v27 = v37;
  v8 = v39;
  v24 = v41;
  v25 = v40;
  v9 = v42;
  v10._countAndFlagsBits = 0xD000000000000024;
  v23 = v43;
  v11._object = (void *)0x80000001005736F0;
  v10._object = (void *)0x8000000100573710;
  v11._countAndFlagsBits = 0xD00000000000001FLL;
  v12._countAndFlagsBits = 0x6574616C706D6554;
  v12._object = (void *)0xED00006F666E4920;
  v13 = TTRLocalizedString(_:value:comment:)(v11, v12, v10);
  v14 = static TTRLocalizableStrings.Templates.namePlaceholderText.getter();
  v16 = v15;
  v17 = sub_10048F960((uint64_t)&off_1005EA8A0);
  v18 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v17);
  v34 = type metadata accessor for TTRUserDefaults(0);
  v35 = &protocol witness table for TTRUserDefaults;
  v33[0] = v18;
  v19 = type metadata accessor for TTRRemindersListDataModelSourceLayoutContext(0);
  swift_allocObject(v19, 49, 7);
  v20 = v18;
  v21 = TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)(v17, v33, 0, 255);
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v31;
  *(_OWORD *)(a2 + 16) = v30;
  *(_OWORD *)(a2 + 32) = v29;
  *(_OWORD *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 64) = v27;
  *(_QWORD *)(a2 + 72) = v26;
  *(_BYTE *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v25;
  *(_QWORD *)(a2 + 96) = v24;
  *(_BYTE *)(a2 + 104) = v9;
  *(_BYTE *)(a2 + 105) = v23;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)&result = 65793;
  *(_DWORD *)(a2 + 120) = 65793;
  *(_WORD *)(a2 + 124) = 0;
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  *(Swift::String *)(a2 + 152) = v13;
  *(_QWORD *)(a2 + 168) = v14;
  *(_QWORD *)(a2 + 176) = v16;
  *(_BYTE *)(a2 + 184) = 0;
  *(_QWORD *)(a2 + 192) = v21;
  *(_QWORD *)(a2 + 200) = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  return result;
}

double sub_1002F371C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  double result;
  id v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[5];
  _QWORD v56[8];
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;

  v56[0] = a1;
  v4 = sub_100005ED8(0, &qword_100641B38, REMSmartListChangeItem_ptr);
  v5 = protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartListChangeItem(v4, &protocol witness table for REMSmartListChangeItem);
  v7 = v6;
  v8 = a1;
  TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)(v56, a1, 1);
  v9 = v56[0];
  v10 = v56[1];
  v50 = v56[3];
  v51 = v56[2];
  v48 = v56[5];
  v49 = v56[4];
  v46 = v56[7];
  v47 = v56[6];
  v11 = v57;
  v44 = v59;
  v45 = v58;
  v42 = v60;
  v12._countAndFlagsBits = 0xD000000000000011;
  v13._countAndFlagsBits = 0xD000000000000023;
  v14._countAndFlagsBits = 0xD000000000000028;
  v43 = v61;
  v13._object = (void *)0x8000000100573870;
  v12._object = (void *)0x80000001005738A0;
  v14._object = (void *)0x80000001005738C0;
  v15 = TTRLocalizedString(_:value:comment:)(v13, v12, v14);
  v16 = objc_msgSend(v8, "customContext");
  v41 = v5;
  v53 = v9;
  v54 = v7;
  v52 = v10;
  if (v16 && (v17 = v16, v18 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v17, v18))
  {
    v19 = REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
    _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(v19);
    v21 = v20;
    v22 = objc_allocWithZone((Class)NSAttributedString);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    v40 = objc_msgSend(v22, "initWithString:", v23);

  }
  else
  {
    v40 = 0;
  }
  v24._countAndFlagsBits = 0xD000000000000021;
  v24._object = (void *)0x80000001005738F0;
  v25._object = (void *)0x8000000100573920;
  v26._countAndFlagsBits = 0x694C207472616D53;
  v26._object = (void *)0xEF6F666E49207473;
  v25._countAndFlagsBits = 0xD000000000000026;
  v27 = TTRLocalizedString(_:value:comment:)(v24, v26, v25);
  v28._object = (void *)0x800000010056D090;
  v29._countAndFlagsBits = 0x6D614E207473694CLL;
  v29._object = (void *)0xE900000000000065;
  v28._countAndFlagsBits = 0xD000000000000026;
  v30 = TTRLocalizedString(_:comment:)(v29, v28);
  type metadata accessor for TTRRemindersListDataModelSourceLayoutContext(0);
  v31 = v8;
  v32 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(v31);
  v55[3] = type metadata accessor for TTRUserDefaults(0);
  v55[4] = &protocol witness table for TTRUserDefaults;
  v55[0] = v32;
  v33 = v32;
  v34 = TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)(a1, 1, v55);
  v35 = objc_msgSend(v31, "customContext");
  if (v35)
  {
    v36 = v35;
    v37 = REMSmartListCustomContextChangeItem.filter.getter();

  }
  else
  {
    v37 = 0;
  }

  v38 = &protocol witness table for TTRRemindersListDataModelSourceLayoutContext;
  if (!v34)
    v38 = 0;
  *(_QWORD *)a2 = v41;
  *(_QWORD *)(a2 + 8) = v54;
  *(_QWORD *)(a2 + 16) = v53;
  *(_QWORD *)(a2 + 24) = v52;
  *(_QWORD *)(a2 + 32) = v51;
  *(_QWORD *)(a2 + 40) = v50;
  *(_QWORD *)(a2 + 48) = v49;
  *(_QWORD *)(a2 + 56) = v48;
  *(_QWORD *)(a2 + 64) = v47;
  *(_QWORD *)(a2 + 72) = v46;
  *(_BYTE *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = v45;
  *(_QWORD *)(a2 + 96) = v44;
  *(_BYTE *)(a2 + 104) = v42;
  *(_BYTE *)(a2 + 105) = v43;
  *(_QWORD *)(a2 + 112) = v37;
  *(_QWORD *)&result = 0x1000100010001;
  *(_DWORD *)(a2 + 120) = 65537;
  *(_WORD *)(a2 + 124) = 0;
  *(Swift::String *)(a2 + 128) = v15;
  *(_QWORD *)(a2 + 144) = v40;
  *(Swift::String *)(a2 + 152) = v27;
  *(Swift::String *)(a2 + 168) = v30;
  *(_BYTE *)(a2 + 184) = 2;
  *(_QWORD *)(a2 + 192) = v34;
  *(_QWORD *)(a2 + 200) = v38;
  return result;
}

uint64_t sub_1002F3AAC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRListDetailBadgeViewModel - 1) + 16))(a2, a1);
  return a2;
}

uint64_t destroy for TTRListDetailViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  sub_10002B328(*(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  sub_10002B318(*(void **)(a1 + 88), *(id *)(a1 + 96), *(_BYTE *)(a1 + 104));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 160));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 176));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 192));
}

uint64_t initializeWithCopy for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  __int128 v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_10002B764(v6, v7, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  v13 = *(void **)(a2 + 88);
  v14 = *(void **)(a2 + 96);
  LOBYTE(v7) = *(_BYTE *)(a2 + 104);
  sub_10002B7A0(v13, v14, v7);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v7;
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v15 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v15;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_WORD *)(a1 + 124) = *(_WORD *)(a2 + 124);
  v16 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v16;
  v18 = *(void **)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v17;
  v20 = *(_QWORD *)(a2 + 160);
  v19 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v20;
  *(_QWORD *)(a1 + 168) = v19;
  v21 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v21;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v25 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 192) = v25;
  v22 = v15;
  swift_bridgeObjectRetain(v16);
  v23 = v18;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_unknownObjectRetain(v25);
  return a1;
}

uint64_t assignWithCopy for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  char v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  sub_10002B764(v8, v9, v10, v11, v12, v13, v14);
  v15 = *(void **)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  sub_10002B328(v15, v16, v17, v18, v19, v20, v21);
  v22 = *(void **)(a2 + 88);
  v23 = *(void **)(a2 + 96);
  LOBYTE(v10) = *(_BYTE *)(a2 + 104);
  sub_10002B7A0(v22, v23, v10);
  v24 = *(void **)(a1 + 88);
  v25 = *(void **)(a1 + 96);
  v26 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = v22;
  *(_QWORD *)(a1 + 96) = v23;
  *(_BYTE *)(a1 + 104) = v10;
  sub_10002B318(v24, v25, v26);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v27 = *(void **)(a1 + 112);
  v28 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v28;
  v29 = v28;

  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_BYTE *)(a1 + 125) = *(_BYTE *)(a2 + 125);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v30 = *(_QWORD *)(a2 + 136);
  v31 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  v32 = *(void **)(a1 + 144);
  v33 = *(void **)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v33;
  v34 = v33;

  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v35 = *(_QWORD *)(a2 + 160);
  v36 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v37 = *(_QWORD *)(a2 + 176);
  v38 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v39 = *(_QWORD *)(a2 + 192);
  v40 = *(_QWORD *)(a2 + 200);
  v41 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v39;
  swift_unknownObjectRetain(v39);
  swift_unknownObjectRelease(v41);
  *(_QWORD *)(a1 + 200) = v40;
  return a1;
}

__n128 initializeWithTake for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for TTRListDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_BYTE *)(a2 + 80);
  v9 = *(void **)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 80);
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v8;
  sub_10002B328(v9, v10, v11, v12, v13, v14, v15);
  v17 = *(_BYTE *)(a2 + 104);
  v18 = *(void **)(a1 + 88);
  v19 = *(void **)(a1 + 96);
  v20 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v17;
  sub_10002B318(v18, v19, v20);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v21 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_BYTE *)(a1 + 123) = *(_BYTE *)(a2 + 123);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_BYTE *)(a1 + 125) = *(_BYTE *)(a2 + 125);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 136));
  v22 = *(void **)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);

  v23 = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v23;
  swift_bridgeObjectRelease(v24);
  v25 = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v25;
  swift_bridgeObjectRelease(v26);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 192));
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRListDetailViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRListDetailViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListDetailViewModel()
{
  return &type metadata for TTRListDetailViewModel;
}

uint64_t sub_1002F40C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655160);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655160);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *sub_1002F4154()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 48);
  }
  else
  {
    v2 = sub_1002DDBE4(*(id *)(*(_QWORD *)(v0 + 56) + 32));
    v3 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v3);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

void sub_1002F41B8(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t *v24;
  void *v25;
  void *v26;
  id v27;
  void *Strong;
  void *v29;
  _BYTE v30[8];
  char v31[128];
  char v32[8];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D640 != -1)
    swift_once(&qword_10063D640, sub_1002F40C4);
  v8 = sub_100012DC4(v4, (uint64_t)qword_100655160);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v9, v31);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  strcpy((char *)(inited + 32), "participantID");
  *(_WORD *)(inited + 46) = -4864;
  sub_1002F56AC((uint64_t)a1, (uint64_t)v32);
  sub_1002F56AC((uint64_t)v32, (uint64_t)v30);
  v11 = sub_10002A750(&qword_100642AC0);
  *(_QWORD *)(inited + 48) = Optional.descriptionOrNil.getter(v11);
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0x44497473696CLL;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  v13 = objc_msgSend(*(id *)(v1[7] + 32), "objectID");
  *(_QWORD *)(inited + 120) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 96) = v13;
  v14 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List sharing show participant {participantID: %@, listID: %@}", 61, 2, v14);
  swift_bridgeObjectRelease(v14);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v15 = v2[15];
  v16 = sub_10035A038(a1[9], a1[10], a1[11], a1[12]);
  if (v16)
  {
    v17 = (id)v16;
    v18 = sub_10001413C(v2 + 9, v2[12]);
    v19 = *(void **)(v15 + 32);
    v20 = *v18;
    v21 = (void *)objc_opt_self(CNContactViewController);
    v22 = v19;
    v23 = objc_msgSend(v21, "viewControllerForContact:", v17);
  }
  else
  {
    v17 = sub_10035A380((uint64_t)a1);
    v24 = sub_10001413C(v2 + 9, v2[12]);
    v25 = *(void **)(v15 + 32);
    v20 = *v24;
    v26 = (void *)objc_opt_self(CNContactViewController);
    v22 = v25;
    v23 = objc_msgSend(v26, "viewControllerForUnknownContact:", v17);
  }
  v27 = v23;
  objc_msgSend(v27, "setContactStore:", v22);
  objc_msgSend(v27, "setAllowsEditing:", 0);
  objc_msgSend(v27, "setAllowsActions:", 0);
  objc_msgSend(v27, "setDisplayMode:", 1);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v20 + 16);
  if (Strong)
  {
    v29 = Strong;
    objc_msgSend(Strong, "pushViewController:animated:", v27, 1);

    v17 = v22;
    v22 = v27;
    v27 = v29;
  }

}

void sub_1002F44DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  NSString v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  _QWORD *v33;
  void *Strong;
  void *v35;
  _QWORD v36[3];
  uint64_t v37;
  _BYTE v38[80];

  v1 = v0;
  v2 = *v0;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D640 != -1)
    swift_once(&qword_10063D640, sub_1002F40C4);
  v7 = sub_100012DC4(v3, (uint64_t)qword_100655160);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v8, v38);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497473696CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v10 = v1[7];
  v11 = objc_msgSend(*(id *)(v10 + 32), "objectID");
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v11;
  v12 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List sharing show add sharees {listID: %@}", 42, 2, v12);
  swift_bridgeObjectRelease(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = objc_msgSend(*(id *)(v10 + 32), "account");
  v14 = objc_msgSend(v13, "daSupportsPhoneNumbers");

  v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TTRIAddShareesViewController()), "initWithAllowsPhoneNumbers:", v14);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "navigationItem");
    v18 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v1, "requestCancelAddingSharees");
    objc_msgSend(v17, "setLeftBarButtonItem:", v18);

    v19 = objc_msgSend(v16, "navigationItem");
    v20._object = (void *)0x8000000100573AE0;
    v21._countAndFlagsBits = 6579265;
    v21._object = (void *)0xE300000000000000;
    v20._countAndFlagsBits = 0xD000000000000029;
    object = TTRLocalizedString(_:comment:)(v21, v20)._object;
    v37 = v2;
    v36[0] = v1;
    swift_retain(v1);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v24 = v37;
    if (v37)
    {
      v25 = sub_10001413C(v36, v37);
      v26 = *(_QWORD *)(v24 - 8);
      __chkstk_darwin(v25);
      v28 = (char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v28);
      v29 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v24);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v24);
      sub_100027F10(v36);
    }
    else
    {
      v29 = 0;
    }
    v30 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v23, 2, v29, "requestCommitAddingSharees");

    swift_unknownObjectRelease(v29);
    objc_msgSend(v19, "setRightBarButtonItem:", v30);

    v31 = (void *)v1[16];
    v1[16] = v16;
    v32 = v16;

    v33 = sub_10001413C(v1 + 9, v1[12]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v33 + 16);
    if (Strong)
    {
      v35 = Strong;
      objc_msgSend(Strong, "pushViewController:animated:", v32, 1);

      v32 = v35;
    }

  }
}

void sub_1002F48BC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  _BYTE v19[136];
  _QWORD *v20;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1002F4154();
  sub_100079688(a1);
  v8 = sub_1002F5284((uint64_t)&v20, a1);
  sub_10007970C(a1);
  v9 = v20[2];
  if (v9 < v8)
  {
    __break(1u);
LABEL_7:
    swift_once(&qword_10063D640, sub_1002F40C4);
    goto LABEL_4;
  }
  sub_10043ACCC(v8, v9);
  v10 = v1[6];
  v1[6] = v20;
  swift_bridgeObjectRelease(v10);
  if (!*(_QWORD *)a1)
    return;
  v11 = qword_10063D640;
  v1 = *(id *)a1;
  if (v11 != -1)
    goto LABEL_7;
LABEL_4:
  v12 = sub_100012DC4(v4, (uint64_t)qword_100655160);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  v13 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v13, v19);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 0x44497473696CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v15 = objc_msgSend(*(id *)(v2[7] + 32), "objectID");
  v16 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = 0x4449656572616873;
  *(_QWORD *)(inited + 120) = v16;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = v1;
  v17 = v1;
  v18 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List sharing delete sharee {listID: %@, shareeID: %@}", 53, 2, v18);
  swift_bridgeObjectRelease(v18);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  sub_100320E90(v17, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));

}

uint64_t sub_1002F4ADC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  _BYTE v19[80];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10063D640 != -1)
    swift_once(&qword_10063D640, sub_1002F40C4);
  v6 = sub_100012DC4(v2, (uint64_t)qword_100655160);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v7, v19);
  *(_OWORD *)(inited + 16) = xmmword_100520250;
  *(_QWORD *)(inited + 32) = 0x44497473696CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v9 = objc_msgSend(*(id *)(v1[7] + 32), "objectID");
  *(_QWORD *)(inited + 72) = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  *(_QWORD *)(inited + 48) = v9;
  v10 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"List sharing done {listID: %@}", 30, 2, v10);
  swift_bridgeObjectRelease(v10);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v11 = *sub_10001413C(v1 + 9, v1[12]);
  if (qword_10063D670 != -1)
    swift_once(&qword_10063D670, sub_10032BBD4);
  sub_100012DC4(v2, (uint64_t)qword_100655DA8);
  sub_1002EB4BC(0x616853207473694CLL, 0xEC000000676E6972);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11 + 16);
  if (Strong)
  {
    v13 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 4);
  if (result)
  {
    v16 = result;
    v17 = v1[5];
    ObjectType = swift_getObjectType(result, v15);
    (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v17 + 8))(v1, &off_1005FF878, ObjectType, v17);
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

void sub_1002F4DC8()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  void *Strong;
  void *v15;
  id v16;
  void *v17;

  v1 = (void *)v0[16];
  if (v1)
  {
    v2 = v0;
    v3 = *(id *)(v0[7] + 32);
    v4 = v1;
    objc_msgSend(v4, "commit");
    v5 = objc_msgSend(v3, "account");
    v6 = objc_msgSend(v5, "objectID");

    v7 = objc_msgSend(v3, "objectID");
    v8 = objc_msgSend(v4, "recipients");
    if (v8)
    {
      v9 = v8;
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for Any[8]);

      v11 = v6;
      v6 = v7;
      v12 = sub_1002F5134(v10, v11, v6);

      swift_bridgeObjectRelease(v10);
      v3 = v11;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
    }

    sub_100320128((unint64_t)v12);
    swift_bridgeObjectRelease(v12);
    v13 = sub_10001413C(v0 + 9, v0[12]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*v13 + 16);
    if (Strong)
    {
      v15 = Strong;
      v16 = objc_msgSend(Strong, "popViewControllerAnimated:", 1);

      v4 = v16;
    }

    v17 = (void *)v2[16];
    v2[16] = 0;

  }
}

uint64_t sub_1002F4FC0()
{
  uint64_t v0;

  sub_1000381C8(v0 + 16);
  sub_1000381C8(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  sub_100027F10((_QWORD *)(v0 + 72));

  swift_release();
  return v0;
}

uint64_t sub_1002F5014()
{
  uint64_t v0;

  sub_1002F4FC0();
  return swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for TTRIListSharingPresenter()
{
  return objc_opt_self(_TtC9Reminders24TTRIListSharingPresenter);
}

void sub_1002F5054()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  BOOL v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;

  v1 = sub_1002DDBE4(*(id *)(*(_QWORD *)(v0 + 56) + 32));
  v2 = sub_1002F4154();
  v3 = sub_100096250((uint64_t)v1, (uint64_t)v2);
  swift_bridgeObjectRelease(v2);
  if (v3)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v1;
    swift_bridgeObjectRelease(v4);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (Strong)
    {
      v6 = Strong;
      v7 = objc_msgSend(Strong, "tableView");
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, "reloadData");
        swift_unknownObjectRelease(v6);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

_QWORD *sub_1002F5134(uint64_t a1, void *a2, void *a3)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v17;
  _BYTE v18[32];
  unint64_t v19;

  result = _swiftEmptyArrayStorage;
  v19 = (unint64_t)_swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v15 = a1;
    v7 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    do
    {
      sub_100028CFC(v7, (uint64_t)v18);
      v9 = sub_100005ED8(0, &qword_100655250, CNComposeRecipient_ptr);
      if (swift_dynamicCast(&v17, v18, &type metadata for Any[8], v9, 6))
      {
        v10 = v17;
        v11 = sub_100049B4C(v17, a2, a3);

        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v13 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v8);
        }
      }
      v7 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v15);
    return (_QWORD *)v19;
  }
  return result;
}

uint64_t sub_1002F5284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68[8];
  uint64_t v69;
  uint64_t v70;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v3)
    return 0;
  sub_1002F56AC(a2, (uint64_t)v68);
  v4 = 0;
  v5 = 0;
  while (1)
  {
    v6 = v2[v4 + 4];
    result = sub_1002F56AC((uint64_t)v68, (uint64_t)&v70);
    if (!v6)
    {
      if (!v70)
        break;
      goto LABEL_4;
    }
    if (v70 && v6 == v70)
      break;
LABEL_4:
    ++v5;
    v4 += 14;
    if (v3 == v5)
      return v3;
  }
  v9 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_36;
  if (v9 == v3)
    return v5;
  v10 = v4 * 8 + 144;
  while (2)
  {
    v19 = v2[2];
    if (v9 < v19)
    {
      v20 = *(_QWORD *)((char *)v2 + v10);
      result = sub_1002F56AC((uint64_t)v68, (uint64_t)&v69);
      if (v20)
      {
        if (!v69 || v20 != v69)
          goto LABEL_23;
      }
      else if (v69)
      {
LABEL_23:
        if (v9 != v5)
        {
          if (v5 >= v19)
            goto LABEL_34;
          v58 = 14 * v5;
          v21 = (uint64_t)&v2[14 * v5 + 4];
          v22 = *(void **)v21;
          v49 = *(_QWORD *)(v21 + 8);
          v23 = *(_QWORD *)(v21 + 16);
          v47 = *(_QWORD *)(v21 + 24);
          v24 = *(_QWORD *)(v21 + 32);
          v45 = *(_QWORD *)(v21 + 40);
          v25 = *(_QWORD *)(v21 + 48);
          v43 = *(_QWORD *)(v21 + 56);
          v26 = *(_QWORD *)(v21 + 64);
          v41 = *(_QWORD *)(v21 + 72);
          v27 = *(_QWORD *)(v21 + 80);
          v39 = *(_QWORD *)(v21 + 88);
          v60 = *(_QWORD *)(v21 + 96);
          v38 = *(_BYTE *)(v21 + 104);
          v67 = *(void **)((char *)v2 + v10);
          v57 = *(_QWORD *)((char *)v2 + v10 + 8);
          v65 = *(_QWORD *)((char *)v2 + v10 + 16);
          v56 = *(_QWORD *)((char *)v2 + v10 + 24);
          v64 = *(_QWORD *)((char *)v2 + v10 + 32);
          v55 = *(_QWORD *)((char *)v2 + v10 + 40);
          v63 = *(_QWORD *)((char *)v2 + v10 + 48);
          v54 = *(_QWORD *)((char *)v2 + v10 + 56);
          v62 = *(_QWORD *)((char *)v2 + v10 + 64);
          v53 = *(_QWORD *)((char *)v2 + v10 + 72);
          v61 = *(_QWORD *)((char *)v2 + v10 + 80);
          v51 = *(_QWORD *)((char *)v2 + v10 + 96);
          v52 = *(_QWORD *)((char *)v2 + v10 + 88);
          v50 = *((_BYTE *)v2 + v10 + 104);
          swift_bridgeObjectRetain(v51);
          v28 = v22;
          v48 = v23;
          swift_bridgeObjectRetain(v23);
          v46 = v24;
          swift_bridgeObjectRetain(v24);
          v44 = v25;
          swift_bridgeObjectRetain(v25);
          v42 = v26;
          swift_bridgeObjectRetain(v26);
          v40 = v27;
          swift_bridgeObjectRetain(v27);
          swift_bridgeObjectRetain(v60);
          v29 = v67;
          swift_bridgeObjectRetain(v65);
          swift_bridgeObjectRetain(v64);
          swift_bridgeObjectRetain(v63);
          swift_bridgeObjectRetain(v62);
          swift_bridgeObjectRetain(v61);
          if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
            v2 = sub_1002B37FC(v2);
          v30 = &v2[v58];
          v31 = (void *)v2[v58 + 4];
          v32 = v2[v58 + 6];
          v33 = v2[v58 + 8];
          v34 = v2[v58 + 10];
          v35 = v2[v58 + 12];
          v36 = v2[v58 + 14];
          v59 = v2[v58 + 16];
          v30[4] = v67;
          v30[5] = v57;
          v30[6] = v65;
          v30[7] = v56;
          v30[8] = v64;
          v30[9] = v55;
          v30[10] = v63;
          v30[11] = v54;
          v30[12] = v62;
          v30[13] = v53;
          v30[14] = v61;
          v30[15] = v52;
          v30[16] = v51;
          *((_BYTE *)v30 + 136) = v50;

          swift_bridgeObjectRelease(v32);
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v34);
          swift_bridgeObjectRelease(v35);
          swift_bridgeObjectRelease(v36);
          result = swift_bridgeObjectRelease(v59);
          if (v9 >= v2[2])
            goto LABEL_35;
          v11 = (char *)v2 + v10;
          v12 = *(void **)((char *)v2 + v10);
          v13 = *(_QWORD *)((char *)v2 + v10 + 16);
          v14 = *(_QWORD *)((char *)v2 + v10 + 32);
          v15 = *(_QWORD *)((char *)v2 + v10 + 48);
          v16 = *(_QWORD *)((char *)v2 + v10 + 64);
          v17 = *(_QWORD *)((char *)v2 + v10 + 80);
          v66 = *(_QWORD *)((char *)v2 + v10 + 96);
          *(_QWORD *)v11 = v22;
          *((_QWORD *)v11 + 1) = v49;
          *((_QWORD *)v11 + 2) = v48;
          *((_QWORD *)v11 + 3) = v47;
          *((_QWORD *)v11 + 4) = v46;
          *((_QWORD *)v11 + 5) = v45;
          *((_QWORD *)v11 + 6) = v44;
          *((_QWORD *)v11 + 7) = v43;
          *((_QWORD *)v11 + 8) = v42;
          *((_QWORD *)v11 + 9) = v41;
          *((_QWORD *)v11 + 10) = v40;
          *((_QWORD *)v11 + 11) = v39;
          *((_QWORD *)v11 + 12) = v60;
          v11[104] = v38;

          swift_bridgeObjectRelease(v13);
          swift_bridgeObjectRelease(v14);
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v17);
          result = swift_bridgeObjectRelease(v66);
          *(_QWORD *)a1 = v2;
        }
        if (__OFADD__(v5++, 1))
          goto LABEL_33;
      }
      ++v9;
      v10 += 112;
      if (v9 == v2[2])
        return v5;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1002F56AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100642AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1002F56F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTTestClass();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002F5724(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  _OWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t result;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  objc_super v49;
  _QWORD *v50;

  v3 = a2;
  v4 = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette] = 0;
  v5 = &v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v46 = *(_QWORD *)(a1 + 16);
  if (v46)
  {
    v43 = v5;
    swift_bridgeObjectRetain_n(a1, 2);
    v45 = v2;
    v6 = v2;
    v7 = 0;
    v44 = v4;
    v8 = (_OWORD *)(v4 + 56);
    v9 = &_swiftEmptyDictionarySingleton;
    while (1)
    {
      v16 = *((_QWORD *)v8 - 3);
      v15 = *((_QWORD *)v8 - 2);
      v47 = *((_QWORD *)v8 - 1);
      v48 = *v8;
      swift_bridgeObjectRetain_n(v15, 4);
      swift_bridgeObjectRetain_n(v48, 3);
      v17 = *((id *)&v48 + 1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
      v50 = v9;
      v20 = sub_100005CF4(v16, v15);
      v21 = v9[2];
      v22 = (v19 & 1) == 0;
      v23 = v21 + v22;
      if (__OFADD__(v21, v22))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v24 = v19;
      if (v9[3] >= v23)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v9 = v50;
          if ((v19 & 1) != 0)
            goto LABEL_3;
        }
        else
        {
          sub_1002B004C();
          v9 = v50;
          if ((v24 & 1) != 0)
            goto LABEL_3;
        }
      }
      else
      {
        sub_10045A3CC(v23, isUniquelyReferenced_nonNull_native);
        v25 = sub_100005CF4(v16, v15);
        if ((v24 & 1) != (v26 & 1))
          goto LABEL_25;
        v20 = v25;
        v9 = v50;
        if ((v24 & 1) != 0)
        {
LABEL_3:
          v10 = v9[7] + 56 * v20;
          v11 = *(_QWORD *)(v10 + 16);
          v12 = *(_QWORD *)(v10 + 32);
          v13 = *(_QWORD *)(v10 + 48);

          swift_bridgeObjectRelease(v12);
          swift_bridgeObjectRelease(v11);
          swift_bridgeObjectRelease(v13);
          *(_QWORD *)v10 = v7;
          *(_QWORD *)(v10 + 8) = v16;
          v14 = v48;
          *(_QWORD *)(v10 + 16) = v15;
          *(_QWORD *)(v10 + 24) = v47;
          *(_QWORD *)(v10 + 32) = v48;
          *(_QWORD *)(v10 + 40) = v17;
          *(_QWORD *)(v10 + 48) = 0;
          goto LABEL_4;
        }
      }
      v9[(v20 >> 6) + 8] |= 1 << v20;
      v27 = (uint64_t *)(v9[6] + 16 * v20);
      *v27 = v16;
      v27[1] = v15;
      v28 = v9[7] + 56 * v20;
      *(_QWORD *)v28 = v7;
      *(_QWORD *)(v28 + 8) = v16;
      *(_QWORD *)(v28 + 16) = v15;
      *(_QWORD *)(v28 + 24) = v47;
      *(_OWORD *)(v28 + 32) = v48;
      *(_QWORD *)(v28 + 48) = 0;
      v29 = v9[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_22;
      v9[2] = v31;
      swift_bridgeObjectRetain(v15);
      v14 = v48;
LABEL_4:
      ++v7;
      v8 = (_OWORD *)((char *)v8 + 40);

      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease_n(v15, 3);
      swift_bridgeObjectRelease(0x8000000000000000);
      if (v46 == v7)
      {
        v4 = v44;
        swift_bridgeObjectRelease(v44);
        v2 = v45;
        v3 = a2;
        v5 = v43;
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain(a1);
  v32 = v2;
  v9 = &_swiftEmptyDictionarySingleton;
LABEL_18:
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID] = v9;
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_23;
  if (*(_QWORD *)(v4 + 16) <= v3)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
  }
  else
  {
    v33 = (_QWORD *)(v4 + 40 * v3);
    v34 = v33[4];
    v35 = v33[5];
    v37 = v33[7];
    v36 = (void *)v33[8];
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v37);
    v38 = v36;
    swift_bridgeObjectRelease(v4);
    v39 = *((_QWORD *)v5 + 1);
    *(_QWORD *)v5 = v34;
    *((_QWORD *)v5 + 1) = v35;
    swift_bridgeObjectRetain(v35);

    swift_bridgeObjectRelease(v39);
    v49.receiver = v2;
    v49.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
    v40 = objc_msgSendSuper2(&v49, "initWithRootViewController:", v38);

    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v35);
    return (uint64_t)v40;
  }
  return result;
}

uint64_t sub_1002F5AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID);
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID);
  swift_beginAccess(v3, v17, 0, 0);
  v4 = *v3;
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v4);
  v5 = sub_100005CF4(v2, v1);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v7 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 56 * v5);
  v8 = *v7;
  v9 = v7[1];
  v10 = v7[2];
  v11 = v7[3];
  v12 = v7[4];
  v13 = (void *)v7[5];
  v14 = v7[6];
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  v15 = v13;
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v4);
  if (!v10)
    return 0;
  sub_1000CE1D4(v8, v9, v10, v11, v12, v15, v14);
  return v8;
}

uint64_t (*sub_1002F5BDC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID, a1, 33, 0);
  return j__swift_endAccess_0;
}

void sub_1002F5C20()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38[24];
  __int128 v39;
  __int128 v40;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID];
  swift_beginAccess(&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID], v38, 0, 0);
  v2 = *v1;
  if (*(_QWORD *)(*v1 + 16) >= 2uLL)
  {
    swift_bridgeObjectRetain_n(*v1, 2);
    v3 = sub_1002AC3D8(v2);
    swift_bridgeObjectRelease(v2);
    *(_QWORD *)&v40 = v3;
    sub_1002F64C8((uint64_t *)&v40);
    swift_bridgeObjectRelease(v2);
    v4 = v40;
    v5 = *(_QWORD *)(v40 + 16);
    if (v5)
    {
      v34 = v1;
      v36 = v0;
      v6 = v0;
      specialized ContiguousArray.reserveCapacity(_:)(v5);
      sub_100005ED8(0, (unint64_t *)&qword_1006415C0, UIAction_ptr);
      v7 = (__int128 *)(v4 + 40);
      do
      {
        v39 = *v7;
        v8 = *((_QWORD *)v7 + 2);
        v9 = *((_QWORD *)v7 + 3);
        v10 = (void *)*((_QWORD *)v7 + 4);
        v40 = v39;
        v11 = swift_allocObject(&unk_1005FF990, 24, 7);
        swift_unknownObjectWeakInit(v11 + 16, v6);
        v12 = swift_allocObject(&unk_1005FF9B8, 64, 7);
        *(_QWORD *)(v12 + 16) = v11;
        *(_OWORD *)(v12 + 24) = v39;
        *(_QWORD *)(v12 + 40) = v8;
        *(_QWORD *)(v12 + 48) = v9;
        *(_QWORD *)(v12 + 56) = v10;
        swift_bridgeObjectRetain_n(v9, 2);
        sub_1001EF324((uint64_t)&v40);
        v13 = v10;
        v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v9, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002F6D58, v12);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v15 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
        v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
        specialized ContiguousArray._endMutation()(v16);
        v7 = (__int128 *)((char *)v7 + 56);
        --v5;
      }
      while (v5);
      swift_release();

      v1 = v34;
      v0 = v36;
    }
    else
    {
      swift_release();
    }
    v17 = sub_1002DEC04((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v18 = objc_allocWithZone((Class)UISegmentedControl);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(v18, "initWithItems:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

    v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8];
    if (v21)
    {
      v22 = *v1;
      if (*(_QWORD *)(*v1 + 16))
      {
        v23 = *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
        swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID
                                              + 8]);
        swift_bridgeObjectRetain(v22);
        v24 = sub_100005CF4(v23, v21);
        if ((v25 & 1) != 0)
        {
          v26 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 56 * v24);
          v27 = v26[2];
          v35 = v26[1];
          v37 = *v26;
          v28 = v26[4];
          v33 = v26[3];
          v29 = (void *)v26[5];
          v30 = v26[6];
          swift_bridgeObjectRetain(v30);
          swift_bridgeObjectRetain(v27);
          swift_bridgeObjectRetain(v28);
          v31 = v29;
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v22);
          if (v27)
          {
            sub_1000CE1D4(v37, v35, v27, v33, v28, v31, v30);
            objc_msgSend(v20, "setSelectedSegmentIndex:", v37);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v22);
        }
      }
    }
    v32 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
    *(_QWORD *)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl] = v20;

  }
}

void sub_1002F5FB8(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Width;
  double v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  CGRect v26;

  v2 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
  if (v2)
  {
    v4 = OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette;
    v5 = *(void **)&v1[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_palette];
    if (v5)
    {
      v6 = v2;
      v7 = v5;
LABEL_7:
      v24 = v5;
      v25 = objc_msgSend(a1, "navigationItem");
      objc_msgSend(v25, "_setBottomPalette:", v7);

      return;
    }
    v8 = v2;
    v9 = objc_msgSend(v1, "view");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "bounds");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;

      v26.origin.x = v12;
      v26.origin.y = v14;
      v26.size.width = v16;
      v26.size.height = v18;
      Width = CGRectGetWidth(v26);
      objc_msgSend(v8, "sizeThatFits:", 0.0, 0.0);
      v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, Width, v20 + 12.0);
      objc_msgSend(v21, "addSubview:", v8);
      v22 = objc_msgSend(objc_allocWithZone((Class)_UINavigationBarPalette), "initWithContentView:", v21);
      v23 = *(void **)&v1[v4];
      *(_QWORD *)&v1[v4] = v22;
      v7 = v22;

      v5 = 0;
      goto LABEL_7;
    }
    __break(1u);
  }
}

void sub_1002F617C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t *v6;
  uint64_t v7;
  BOOL v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  void (*v38)(_QWORD *);
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  Class isa;
  void (*v43)(_QWORD *, _QWORD, __n128);
  id v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  _QWORD v47[4];
  _QWORD v48[4];
  char v49[24];

  v3 = v2;
  v6 = (uint64_t *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_selectedTabID + 8];
  if (!v7
    || (*v6 == a1 ? (v8 = v7 == a2) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *v6, v7, 0) & 1) == 0))
  {
    v9 = &v2[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID];
    swift_beginAccess(&v3[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_tabStateByID], v49, 0, 0);
    v10 = *(_QWORD *)v9;
    if (*(_QWORD *)(v10 + 16))
    {
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(v10);
      v11 = sub_100005CF4(a1, a2);
      if ((v12 & 1) != 0)
      {
        v13 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 56 * v11);
        v14 = v13[2];
        v16 = v13[4];
        v15 = (void *)v13[5];
        v17 = v13[6];
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v16);
        v18 = v15;
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v10);
        v19 = v6[1];
        if (v19)
        {
          v46 = v16;
          v20 = *v6;
          swift_bridgeObjectRetain(v19);
          v45 = sub_1002F5BDC((uint64_t)v48);
          v22 = sub_1000CABAC(v47, v20, v19);
          if (*(_QWORD *)(v21 + 16))
          {
            v23 = v21;
            v43 = (void (*)(_QWORD *, _QWORD, __n128))v22;
            v44 = v18;
            v24 = objc_msgSend(v3, "viewControllers");
            v25 = sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
            v26 = v14;
            v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

            v18 = v44;
            v28 = *(_QWORD *)(v23 + 48);
            *(_QWORD *)(v23 + 48) = v27;
            v14 = v26;
            v29 = swift_bridgeObjectRelease(v28);
            v43(v47, 0, v29);
          }
          else
          {
            ((void (*)(_QWORD *, _QWORD))v22)(v47, 0);
          }
          v30 = swift_bridgeObjectRelease(v19);
          ((void (*)(_QWORD *, _QWORD, __n128))v45)(v48, 0, v30);
          v16 = v46;
        }
        v31 = v6[1];
        *v6 = a1;
        v6[1] = a2;
        swift_bridgeObjectRetain(a2);
        swift_bridgeObjectRelease(v31);
        v32 = v17;
        if (!v17)
        {
          v33 = sub_10002A750((uint64_t *)&unk_1006415A0);
          v34 = swift_allocObject(v33, 40, 7);
          *(_OWORD *)(v34 + 16) = xmmword_100521140;
          *(_QWORD *)(v34 + 32) = v18;
          v48[0] = v34;
          specialized Array._endMutation()(v34);
          v32 = v48[0];
          v35 = v18;
        }
        swift_bridgeObjectRetain(a2);
        swift_bridgeObjectRetain(v17);
        v36 = sub_1002F5BDC((uint64_t)v48);
        v38 = sub_1000CABAC(v47, a1, a2);
        if (*(_QWORD *)(v37 + 16))
        {
          v40 = *(_QWORD *)(v37 + 48);
          *(_QWORD *)(v37 + 48) = 0;
          v39 = swift_bridgeObjectRelease(v40);
        }
        ((void (*)(_QWORD *, _QWORD, __n128))v38)(v47, 0, v39);
        v41 = swift_bridgeObjectRelease(a2);
        ((void (*)(_QWORD *, _QWORD, __n128))v36)(v48, 0, v41);
        sub_100005ED8(0, (unint64_t *)&qword_1006415E8, UIViewController_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v3, "setViewControllers:animated:", isa, 0, swift_bridgeObjectRelease(v32).n128_f64[0]);
        swift_bridgeObjectRelease(v17);

        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v14);

      }
      else
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v10);
      }
    }
  }
}

void sub_1002F64C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100393308(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1002F6D64(v4);
  *a1 = v2;
}

uint64_t sub_1002F6530@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

void sub_1002F6634()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double Height;
  id v26;
  id v27;
  double v28;
  double v29;
  objc_super v30;
  CGRect v31;
  CGRect v32;

  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
  objc_msgSendSuper2(&v30, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders33TTRISegmentedNavigationController_segmentedControl];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "layoutMargins");
      v6 = v5;
      v8 = v7;

      v9 = objc_msgSend(v0, "navigationBar");
      objc_msgSend(v9, "bounds");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

      v31.origin.x = v11;
      v31.origin.y = v13;
      v31.size.width = v15;
      v31.size.height = v17;
      v18 = CGRectGetWidth(v31) - v6 - v8;
      v19 = objc_msgSend(v0, "traitCollection");
      v20 = objc_msgSend(v19, "horizontalSizeClass");

      v21 = v18;
      if (v20 != (id)2)
        goto LABEL_13;
      if (qword_10063D648 != -1)
        swift_once(&qword_10063D648, sub_1002F68A8);
      v22 = *(double *)&qword_100655280;
      v21 = v18;
      if (*(double *)&qword_100655280 >= v18)
        goto LABEL_13;
      objc_msgSend(v2, "sizeThatFits:", v18, 0.0);
      if (v22 <= v18)
      {
        if (v23 <= v22)
          v23 = v22;
        if (v18 >= v23)
          v21 = v23;
        else
          v21 = v18;
LABEL_13:
        v24 = v6 + (v18 - v21) * 0.5;
        objc_msgSend(v2, "bounds");
        Height = CGRectGetHeight(v32);
        v26 = v2;
        v27 = objc_msgSend(v0, "traitCollection");
        objc_msgSend(v27, "displayScale");
        v29 = v28;

        UIRectRoundToScale(v24, 0.0, v21, Height, v29);
        objc_msgSend(v26, "setFrame:");

        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1002F68A8()
{
  qword_100655280 = 0x4076E00000000000;
}

void sub_1002F68BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1002F617C(*a3, a3[1]);

  }
}

id sub_1002F69A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISegmentedNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TTRISegmentedNavigationController()
{
  return objc_opt_self(_TtC9Reminders33TTRISegmentedNavigationController);
}

uint64_t destroy for TTRISegmentedNavigationController.TabState(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for TTRISegmentedNavigationController.TabState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for TTRISegmentedNavigationController.TabState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a2[2];
  v5 = a1[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[3] = a2[3];
  v6 = a2[4];
  v7 = a1[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a2[5];
  v9 = (void *)a1[5];
  a1[5] = v8;
  v10 = v8;

  v11 = a1[6];
  v12 = a2[6];
  a1[6] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for TTRISegmentedNavigationController.TabState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRISegmentedNavigationController.TabState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISegmentedNavigationController.TabState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISegmentedNavigationController.TabState()
{
  return &type metadata for TTRISegmentedNavigationController.TabState;
}

uint64_t sub_1002F6CF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F6D1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1002F6D58(uint64_t a1)
{
  uint64_t v1;

  sub_1002F68BC(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24));
}

void sub_1002F6D64(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  _QWORD *v121;
  Swift::Int v122;
  Swift::Int v123;
  uint64_t v124;
  char *__dst;
  uint64_t v126;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v100 = 0;
      v101 = *a1;
      v102 = 1;
      while (1)
      {
        v103 = *(_QWORD *)(v101 + 56 * v102);
        v104 = v100;
        do
        {
          v105 = v101 + v104;
          if (v103 >= *(_QWORD *)(v101 + v104))
            break;
          if (!v101)
            goto LABEL_142;
          v106 = v101 + v104;
          v107 = *(_OWORD *)(v101 + v104 + 64);
          v108 = *(_QWORD *)(v101 + v104 + 80);
          v109 = *(_QWORD *)(v101 + v104 + 104);
          v110 = *(_OWORD *)(v101 + v104 + 88);
          v111 = *(_OWORD *)(v105 + 16);
          *(_OWORD *)(v101 + v104 + 56) = *(_OWORD *)v105;
          *(_OWORD *)(v101 + v104 + 72) = v111;
          *(_OWORD *)(v101 + v104 + 88) = *(_OWORD *)(v105 + 32);
          *(_QWORD *)(v101 + v104 + 104) = *(_QWORD *)(v105 + 48);
          *(_QWORD *)v106 = v103;
          *(_OWORD *)(v106 + 8) = v107;
          *(_QWORD *)(v106 + 24) = v108;
          *(_OWORD *)(v106 + 32) = v110;
          v104 -= 56;
          *(_QWORD *)(v106 + 48) = v109;
        }
        while (v104 != -56);
        ++v102;
        v100 += 56;
        if (v102 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v126 = v1;
  v119 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for TTRISegmentedNavigationController.TabState);
    *(_QWORD *)(v8 + 16) = v7;
    v121 = (_QWORD *)v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v120 = *a1 + 112;
  v118 = *a1 + 48;
  v12 = (char *)_swiftEmptyArrayStorage;
  v122 = v6;
  v123 = v3;
  v124 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 56 * v10);
      v16 = *(_QWORD *)(v11 + 56 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v120 + 56 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 7;
          v19 = v20;
          if (v15 < v16 == v20 >= v18)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_139;
        if (v14 < v10)
        {
          v21 = 56 * v10;
          v22 = v10;
          v23 = v14;
          v24 = 56 * v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_145;
              v25 = v11 + v24;
              v26 = v11 + v21;
              v27 = *(_QWORD *)(v11 + v24 + 16);
              v28 = *(_QWORD *)(v11 + v24 + 24);
              v29 = *(_QWORD *)(v11 + v24 + 48);
              v30 = *(_OWORD *)(v11 + v24 + 32);
              v31 = *(_OWORD *)(v11 + v24);
              v32 = *(_OWORD *)(v11 + v21 - 40);
              v33 = *(_OWORD *)(v11 + v21 - 24);
              v34 = *(_OWORD *)(v11 + v21 - 56);
              *(_QWORD *)(v25 + 48) = *(_QWORD *)(v11 + v21 - 8);
              *(_OWORD *)(v25 + 16) = v32;
              *(_OWORD *)(v25 + 32) = v33;
              *(_OWORD *)v25 = v34;
              *(_OWORD *)(v26 - 56) = v31;
              *(_QWORD *)(v26 - 40) = v27;
              *(_QWORD *)(v26 - 32) = v28;
              *(_OWORD *)(v26 - 24) = v30;
              *(_QWORD *)(v26 - 8) = v29;
            }
            ++v23;
            v21 -= 56;
            v24 += 56;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_137;
      if (v10 - v14 < v6)
      {
        v35 = v14 + v6;
        if (__OFADD__(v14, v6))
          goto LABEL_140;
        if (v35 >= v3)
          v35 = v3;
        if (v35 < v14)
          goto LABEL_141;
        if (v10 != v35)
        {
          v36 = v118 + 56 * v10;
          do
          {
            v37 = *(_QWORD *)(v11 + 56 * v10);
            v38 = v14;
            v39 = v36;
            do
            {
              v40 = v39 - 104;
              if (v37 >= *(_QWORD *)(v39 - 104))
                break;
              if (!v11)
                goto LABEL_143;
              v41 = *(_QWORD *)(v39 - 56);
              *(_QWORD *)(v39 - 56) = *(_QWORD *)v39;
              v39 -= 56;
              v42 = *(_QWORD *)(v39 + 16);
              v43 = *(_QWORD *)(v39 + 24);
              v44 = *(_QWORD *)(v39 + 32);
              v45 = *(_OWORD *)(v39 + 40);
              v46 = *(_OWORD *)(v40 + 16);
              *(_OWORD *)(v40 + 56) = *(_OWORD *)v40;
              *(_OWORD *)(v40 + 72) = v46;
              *(_OWORD *)(v40 + 88) = *(_OWORD *)(v40 + 32);
              *(_QWORD *)(v40 + 104) = v41;
              *(_QWORD *)(v39 - 48) = v37;
              *(_QWORD *)(v39 - 40) = v42;
              *(_QWORD *)(v39 - 32) = v43;
              *(_QWORD *)(v39 - 24) = v44;
              *(_OWORD *)(v39 - 16) = v45;
              ++v38;
            }
            while (v10 != v38);
            ++v10;
            v36 += 56;
          }
          while (v10 != v35);
          v10 = v35;
        }
      }
    }
    if (v10 < v14)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_100392A60(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v48 = *((_QWORD *)v12 + 2);
    v47 = *((_QWORD *)v12 + 3);
    v13 = v48 + 1;
    v11 = v124;
    if (v48 >= v47 >> 1)
    {
      v97 = sub_100392A60((char *)(v47 > 1), v48 + 1, 1, v12);
      v11 = v124;
      v12 = v97;
    }
    *((_QWORD *)v12 + 2) = v13;
    v49 = v12 + 32;
    v50 = &v12[16 * v48 + 32];
    *(_QWORD *)v50 = v14;
    *((_QWORD *)v50 + 1) = v10;
    if (v48)
      break;
    v13 = 1;
LABEL_15:
    v6 = v122;
    v3 = v123;
    if (v10 >= v123)
    {
      v9 = v121;
LABEL_104:
      v99 = v12;
      v121 = v9;
      if (v13 < 2)
        goto LABEL_95;
      v112 = *v119;
      while (1)
      {
        v113 = v13 - 2;
        if (v13 < 2)
          break;
        if (!v112)
          goto LABEL_146;
        v98 = v99;
        v114 = *(_QWORD *)&v99[16 * v113 + 32];
        v115 = *(_QWORD *)&v99[16 * v13 + 24];
        sub_1002F74D0((char *)(v112 + 56 * v114), (char *)(v112 + 56 * *(_QWORD *)&v99[16 * v13 + 16]), v112 + 56 * v115, __dst);
        if (v126)
          goto LABEL_94;
        if (v115 < v114)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0)
          v98 = sub_100392EE4((uint64_t)v98);
        if (v113 >= *((_QWORD *)v98 + 2))
          goto LABEL_135;
        v116 = &v98[16 * v113 + 32];
        *(_QWORD *)v116 = v114;
        *((_QWORD *)v116 + 1) = v115;
        v117 = *((_QWORD *)v98 + 2);
        if (v13 > v117)
          goto LABEL_136;
        memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v117 - v13));
        v99 = v98;
        *((_QWORD *)v98 + 2) = v117 - 1;
        v13 = v117 - 1;
        if (v117 <= 2)
          goto LABEL_95;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v51 = v13 - 1;
    if (v13 >= 4)
    {
      v56 = &v49[16 * v13];
      v57 = *((_QWORD *)v56 - 8);
      v58 = *((_QWORD *)v56 - 7);
      v62 = __OFSUB__(v58, v57);
      v59 = v58 - v57;
      if (v62)
        goto LABEL_121;
      v61 = *((_QWORD *)v56 - 6);
      v60 = *((_QWORD *)v56 - 5);
      v62 = __OFSUB__(v60, v61);
      v54 = v60 - v61;
      v55 = v62;
      if (v62)
        goto LABEL_122;
      v63 = v13 - 2;
      v64 = &v49[16 * v13 - 32];
      v66 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v62 = __OFSUB__(v65, v66);
      v67 = v65 - v66;
      if (v62)
        goto LABEL_124;
      v62 = __OFADD__(v54, v67);
      v68 = v54 + v67;
      if (v62)
        goto LABEL_127;
      if (v68 >= v59)
      {
        v86 = &v49[16 * v51];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v62 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v62)
          goto LABEL_131;
        v79 = v54 < v89;
        goto LABEL_83;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v80 = *((_QWORD *)v12 + 4);
        v81 = *((_QWORD *)v12 + 5);
        v62 = __OFSUB__(v81, v80);
        v73 = v81 - v80;
        v74 = v62;
        goto LABEL_77;
      }
      v53 = *((_QWORD *)v12 + 4);
      v52 = *((_QWORD *)v12 + 5);
      v62 = __OFSUB__(v52, v53);
      v54 = v52 - v53;
      v55 = v62;
    }
    if ((v55 & 1) != 0)
      goto LABEL_123;
    v63 = v13 - 2;
    v69 = &v49[16 * v13 - 32];
    v71 = *(_QWORD *)v69;
    v70 = *((_QWORD *)v69 + 1);
    v72 = __OFSUB__(v70, v71);
    v73 = v70 - v71;
    v74 = v72;
    if (v72)
      goto LABEL_126;
    v75 = &v49[16 * v51];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v62 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v62)
      goto LABEL_129;
    if (__OFADD__(v73, v78))
      goto LABEL_130;
    if (v73 + v78 >= v54)
    {
      v79 = v54 < v78;
LABEL_83:
      if (v79)
        v51 = v63;
      goto LABEL_85;
    }
LABEL_77:
    if ((v74 & 1) != 0)
      goto LABEL_125;
    v82 = &v49[16 * v51];
    v84 = *(_QWORD *)v82;
    v83 = *((_QWORD *)v82 + 1);
    v62 = __OFSUB__(v83, v84);
    v85 = v83 - v84;
    if (v62)
      goto LABEL_128;
    if (v85 < v73)
      goto LABEL_15;
LABEL_85:
    v90 = v51 - 1;
    if (v51 - 1 >= v13)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v11)
      goto LABEL_144;
    v91 = v12;
    v92 = &v49[16 * v90];
    v93 = *(_QWORD *)v92;
    v94 = &v49[16 * v51];
    v95 = *((_QWORD *)v94 + 1);
    sub_1002F74D0((char *)(v11 + 56 * *(_QWORD *)v92), (char *)(v11 + 56 * *(_QWORD *)v94), v11 + 56 * v95, __dst);
    if (v126)
      break;
    if (v95 < v93)
      goto LABEL_118;
    if (v51 > *((_QWORD *)v91 + 2))
      goto LABEL_119;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v49[16 * v90 + 8] = v95;
    v96 = *((_QWORD *)v91 + 2);
    if (v51 >= v96)
      goto LABEL_120;
    v12 = v91;
    v13 = v96 - 1;
    memmove(&v49[16 * v51], v94 + 16, 16 * (v96 - 1 - v51));
    *((_QWORD *)v91 + 2) = v96 - 1;
    v11 = v124;
    if (v96 <= 2)
      goto LABEL_15;
  }
  v98 = v91;
LABEL_94:
  v99 = v98;
LABEL_95:
  swift_bridgeObjectRelease(v99);
  v121[2] = 0;
  swift_bridgeObjectRelease(v121);
}

uint64_t sub_1002F74D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t result;
  char *v32;
  char *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  v34 = __src;
  v33 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[56 * v11] <= __dst)
        memmove(__dst, a2, 56 * v11);
      v20 = &v4[56 * v11];
      v32 = v20;
      v34 = v6;
      if (v7 < v6 && v10 >= 56)
      {
        v21 = a3 - 56;
        v22 = v6;
        while (1)
        {
          v23 = (char *)(v21 + 56);
          v24 = *((_QWORD *)v22 - 7);
          v22 -= 56;
          if (*((_QWORD *)v20 - 7) >= v24)
          {
            v32 = v20 - 56;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              v28 = *(_OWORD *)(v20 - 56);
              v29 = *(_OWORD *)(v20 - 40);
              v30 = *(_OWORD *)(v20 - 24);
              *(_QWORD *)(v21 + 48) = *((_QWORD *)v20 - 1);
              *(_OWORD *)(v21 + 16) = v29;
              *(_OWORD *)(v21 + 32) = v30;
              *(_OWORD *)v21 = v28;
            }
            v22 = v6;
            v20 -= 56;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v23 != v6 || v21 >= (unint64_t)v6)
            {
              v25 = *(_OWORD *)v22;
              v26 = *((_OWORD *)v22 + 1);
              v27 = *((_OWORD *)v22 + 2);
              *(_QWORD *)(v21 + 48) = *((_QWORD *)v22 + 6);
              *(_OWORD *)(v21 + 16) = v26;
              *(_OWORD *)(v21 + 32) = v27;
              *(_OWORD *)v21 = v25;
            }
            v34 = v22;
            if (v22 <= v7)
              goto LABEL_38;
          }
          v21 -= 56;
          v6 = v22;
          if (v20 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[56 * v9] <= __dst)
      memmove(__dst, __src, 56 * v9);
    v12 = &v4[56 * v9];
    v32 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
          {
            v17 = *(_OWORD *)v4;
            v18 = *((_OWORD *)v4 + 1);
            v19 = *((_OWORD *)v4 + 2);
            *((_QWORD *)v7 + 6) = *((_QWORD *)v4 + 6);
            *((_OWORD *)v7 + 1) = v18;
            *((_OWORD *)v7 + 2) = v19;
            *(_OWORD *)v7 = v17;
          }
          v4 += 56;
          v33 = v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 56;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            v14 = *(_OWORD *)v6;
            v15 = *((_OWORD *)v6 + 1);
            v16 = *((_OWORD *)v6 + 2);
            *((_QWORD *)v7 + 6) = *((_QWORD *)v6 + 6);
            *((_OWORD *)v7 + 1) = v15;
            *((_OWORD *)v7 + 2) = v16;
            *(_OWORD *)v7 = v14;
          }
        }
        v7 += 56;
        if (v4 >= v12)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v34 = v7;
    }
LABEL_38:
    sub_100392C70((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void destroy for TTRISegmentedNavigationTab(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for TTRISegmentedNavigationTab(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for TTRISegmentedNavigationTab(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a2[4];
  v9 = (void *)a1[4];
  a1[4] = v8;
  v10 = v8;

  return a1;
}

_QWORD *assignWithTake for TTRISegmentedNavigationTab(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = (void *)a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISegmentedNavigationTab()
{
  return &type metadata for TTRISegmentedNavigationTab;
}

void *sub_1002F799C()
{
  return &protocol witness table for String;
}

void sub_1002F79A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  __int128 v12[2];

  if (*(_BYTE *)(v1 + 32) == 1)
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v5 == v6)
    goto LABEL_8;
  if (v5 >= v6)
  {
    __break(1u);
LABEL_10:
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v3);
    if (v2 == v9)
      goto LABEL_7;
    goto LABEL_14;
  }
  v7 = *(_QWORD *)v1 + 40 * v5 + 32;
  *(_QWORD *)(v1 + 8) = v5 + 1;
  sub_100010634(v7, (uint64_t)v12);
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if ((unint64_t)v3 >> 62)
    goto LABEL_10;
  if (v2 == *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    sub_100027F10(v12);
LABEL_8:
    *(_BYTE *)(v1 + 32) = 1;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    return;
  }
LABEL_14:
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(id *)(v3 + 8 * v2 + 32);
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_24;
  }
  v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v3);
LABEL_18:
  v11 = v10;
  if (__OFADD__(v2, 1))
  {
LABEL_24:
    __break(1u);
    return;
  }
  *(_QWORD *)(v1 + 24) = v2 + 1;
  sub_10002E37C(v12, a1);
  *(_QWORD *)(a1 + 40) = v11;
}

_QWORD *sub_1002F7AFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(id), uint64_t a4, void (*a5)(id *, id), uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  uint8_t *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *result;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(id);
  uint64_t ObjectType;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, __n128);
  __n128 v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  id v83;
  unint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(id *, id);
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  __int128 v96;
  uint64_t (*v97)(id);
  id v98;
  unint64_t v99;
  uint64_t v100;

  v7 = v6;
  v92 = a5;
  v93 = a6;
  v12 = sub_10002A750((uint64_t *)&unk_100654930);
  v90 = *(_QWORD *)(v12 - 8);
  v91 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v89 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v87 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - v18;
  v20 = sub_100086E5C(a1, a2);
  v21 = _swiftEmptyArrayStorage;
  if (!v20)
    return v21;
  v22 = (void *)v20;
  *(_QWORD *)&v96 = a4;
  v97 = a3;
  if (qword_10063D330 != -1)
    swift_once(&qword_10063D330, sub_100086DCC);
  v23 = type metadata accessor for Logger(0);
  sub_100012DC4(v23, (uint64_t)qword_100641660);
  v24 = v22;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.info.getter();
  v27 = os_log_type_enabled(v25, v26);
  v85 = v14;
  v86 = v19;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = (_QWORD *)swift_slowAlloc(8, -1);
    v95 = (_QWORD *)a1;
    *(_DWORD *)v28 = 138412290;
    v30 = objc_msgSend(v24, "objectID");
    v99 = (unint64_t)v30;
    v19 = v86;
    a1 = (uint64_t)v95;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v28 + 4, v28 + 12);
    *v29 = v30;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "performDrop: accepting drop {targetListID: %@}", v28, 0xCu);
    v31 = sub_10002A750(&qword_100642D60);
    swift_arrayDestroy(v29, 1, v31);
    swift_slowDealloc(v29, -1, -1);
    v32 = v28;
    v21 = _swiftEmptyArrayStorage;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

  }
  v33 = v97(v24);
  v34 = v33;
  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v78 = v33;
    else
      v78 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v79 = _CocoaArrayWrapper.endIndex.getter(v78);
    swift_bridgeObjectRelease(v34);
    if (!v79)
      goto LABEL_32;
    swift_bridgeObjectRetain(v34);
    v35 = _CocoaArrayWrapper.endIndex.getter(v78);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
    {
LABEL_32:
      swift_bridgeObjectRelease(v34);
      goto LABEL_33;
    }
  }
  result = sub_100087090(a1, a2, v35, v7);
  if (!result)
    goto LABEL_32;
  v37 = result;
  v99 = (unint64_t)_swiftEmptyArrayStorage;
  v84 = result[2];
  if (!v84)
  {
    swift_bridgeObjectRelease(v34);
    v72 = _swiftEmptyArrayStorage;
    v21 = _swiftEmptyArrayStorage;
LABEL_26:
    sub_10002A750(&qword_100655520);
    v98 = v72;
    v73 = sub_10002A750(&qword_100655528);
    v74 = sub_100023FEC(&qword_100655530, &qword_100655528, (uint64_t)&protocol conformance descriptor for [A]);
    static Promise.all<A>(_:)(&v98, v73, v74);
    swift_bridgeObjectRelease(v72);
    v76 = (void *)zalgoIfMain.getter(v75);
    v77 = swift_allocObject(&unk_1005FFE90, 24, 7);
    *(_QWORD *)(v77 + 16) = v37;
    dispatch thunk of Promise.then<A>(on:closure:)(v76, sub_1002FDA40, v77, (char *)&type metadata for () + 8);
    swift_release();
    swift_release();

    swift_release();
LABEL_33:

    return v21;
  }
  v82 = v34 & 0xC000000000000001;
  v83 = v24;
  if ((v34 & 0xC000000000000001) != 0 || v84 <= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain(result);
    v39 = 0;
    v80 = v34;
    v81 = v37;
    do
    {
      v96 = *(_OWORD *)&v37[2 * v39 + 4];
      v40 = (uint64_t (*)(id))v96;
      ObjectType = swift_getObjectType(v96, v38);
      v42 = *((_QWORD *)&v96 + 1);
      v43 = *(void (**)(uint64_t, uint64_t, __n128))(*((_QWORD *)&v96 + 1) + 16);
      v44 = swift_unknownObjectRetain(v40);
      v43(ObjectType, v42, v44);
      v94 = v39;
      if (v82)
        v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v34);
      else
        v45 = *(id *)(v34 + 8 * v39 + 32);
      v46 = v45;
      v47 = (uint64_t)v85;
      v98 = v45;
      v48 = (uint64_t)v85 + *(int *)(v91 + 48);
      *v85 = v45;
      sub_10002B1E8((uint64_t)v19, v48, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v49 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        v21 = (_QWORD *)sub_100455CB4(0, v21[2] + 1, 1, (unint64_t)v21);
      v51 = v21[2];
      v50 = v21[3];
      v97 = v40;
      if (v51 >= v50 >> 1)
        v21 = (_QWORD *)sub_100455CB4(v50 > 1, v51 + 1, 1, (unint64_t)v21);
      v21[2] = v51 + 1;
      v52 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v95 = v21;
      sub_10000F614(v47, (uint64_t)v21 + v52 + *(_QWORD *)(v90 + 72) * v51, (uint64_t *)&unk_100654930);
      v92(&v98, v83);
      v53 = swift_retain();
      v54 = (void *)zalgoIfMain.getter(v53);
      v19 = v86;
      v55 = v87;
      sub_10002B1E8((uint64_t)v86, v87, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v56 = *(unsigned __int8 *)(v89 + 80);
      v57 = (v56 + 16) & ~v56;
      v58 = v57 + v88;
      v59 = v56 | 7;
      v60 = (v57 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      v61 = swift_allocObject(&unk_1005FFE40, v60 + 16, v56 | 7);
      sub_10001F580(v55, v61 + v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(_OWORD *)(v61 + v60) = v96;
      v62 = type metadata accessor for TTRRemindersListImportedContent(0);
      swift_unknownObjectRetain(v97);
      dispatch thunk of Promise.then<A>(on:closure:)(v54, sub_1002FD97C, v61, v62);
      swift_release();

      swift_release();
      sub_10002B1E8((uint64_t)v19, v55, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v63 = swift_allocObject(&unk_1005FFE68, v58, v59);
      v64 = sub_10001F580(v55, v63 + v57, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v65 = (void *)zalgo.getter(v64);
      dispatch thunk of Promise.error(on:closure:)(v65, sub_1002FD9E0, v63);
      swift_release();
      swift_release();

      swift_release();
      v66 = swift_retain();
      v67 = Promise.errorAsNil()(v66);
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
      v70 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v69 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v70 >= v69 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
      v39 = v94 + 1;
      v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v67);
      specialized Array._endMutation()(v71);
      swift_release();
      swift_unknownObjectRelease(v97);

      sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v21 = v95;
      v34 = v80;
      v37 = v81;
    }
    while (v84 != v39);
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v37);
    v72 = (_QWORD *)v99;
    v24 = v83;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002F8280(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;

  v6 = v5;
  v37 = a4;
  v38 = a5;
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v5 + 16), v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 328))(a1, ObjectType, v13);
  if (v17 == -1)
    return _swiftEmptyArrayStorage;
  v18 = (void *)v16;
  v19 = v17;
  v36 = v10;
  v20 = a2(v16, v17 & 1);
  v21 = v20;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v33 = v20;
    else
      v33 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v21);
    if (v34)
      goto LABEL_4;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease(v21);
    sub_1000760F4(v18, v19);
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  __chkstk_darwin(v20);
  v22 = (uint64_t)v38;
  *(&v36 - 6) = v37;
  *(&v36 - 5) = v22;
  *(&v36 - 4) = (uint64_t)v18;
  *((_BYTE *)&v36 - 24) = v23;
  *(&v36 - 2) = a1;
  v24 = sub_10046A5E0((void (*)(uint64_t *__return_ptr, id *))sub_1002FDA64, (uint64_t)(&v36 - 8), v21);
  sub_10002A750(&qword_100655520);
  v39 = v24;
  v25 = sub_10002A750(&qword_100655528);
  v38 = v18;
  v26 = v25;
  v27 = sub_100023FEC(&qword_100655530, &qword_100655528, (uint64_t)&protocol conformance descriptor for [A]);
  static Promise.all<A>(_:)(&v39, v26, v27);
  swift_bridgeObjectRelease(v24);
  v29 = (void *)zalgoIfMain.getter(v28);
  sub_10002B1E8(a1, (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v30 = *(unsigned __int8 *)(v36 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = swift_allocObject(&unk_1005FFEB8, v31 + v11, v30 | 7);
  *(_QWORD *)(v32 + 16) = v6;
  sub_10001F580((uint64_t)v12, v32 + v31, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  dispatch thunk of Promise.then<A>(on:closure:)(v29, sub_1002FDE6C, v32, (char *)&type metadata for () + 8);
  swift_release();
  swift_release();

  swift_release();
  sub_1000760F4(v38, v19);
  return (_QWORD *)v21;
}

uint64_t sub_1002F8524(uint64_t a1, void (*a2)(uint64_t *, uint64_t, uint64_t, double), uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v10 = a5 & 1;
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v28 = a1;
  a2(&v28, a4, v10, v14);
  sub_10002B1E8(a6, (uint64_t)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_1005FFEE0, v16 + v13, v15 | 7);
  sub_10001F580((uint64_t)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v18 = swift_retain();
  v19 = (void *)zalgo.getter(v18);
  v20 = type metadata accessor for TTRRemindersListImportedContent(0);
  dispatch thunk of Promise.then<A>(on:closure:)(v19, sub_1002FE280, v17, v20);
  swift_release();
  swift_release();

  v22 = (void *)zalgo.getter(v21);
  v23 = dispatch thunk of Promise.error(on:closure:)(v22, sub_100088498, 0);
  swift_release();

  swift_release();
  v24 = swift_retain();
  v25 = Promise.errorAsNil()(v24);
  swift_release_n(v23, 2);
  return v25;
}

uint64_t sub_1002F86C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(id), uint64_t a4, void (*a5)(id *, id), uint64_t a6)
{
  uint64_t v6;
  __int128 *v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t ObjectType;
  void (*v23)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  int v43;
  int v44;
  void *v45;
  void *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, _QWORD *);
  uint64_t v61;
  void *v62;
  void *v63;
  char v64;
  uint64_t v65;
  uint64_t (**v66)(uint64_t, void *);
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(id *, id);
  unint64_t v73;
  id v74;
  void *v75;
  id v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  void *v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  unsigned int v114;
  id v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(id *, id);
  uint64_t (*v120)(id);
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  id v124;
  uint64_t v125;
  __int128 v126[3];
  _QWORD v127[5];
  id v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  unint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  void *v137;
  _QWORD v138[2];
  uint64_t v139;
  uint64_t v140;
  __int16 v141;
  unint64_t v142;
  _QWORD v143[3];
  void *v144;
  uint64_t (**v145)(uint64_t, void *);
  _QWORD v146[3];
  uint64_t v147;
  uint64_t v148;

  v7 = (__int128 *)v6;
  v120 = a3;
  v12 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  v125 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v121 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = v16;
  __chkstk_darwin(v17);
  v123 = (uint64_t (*)(uint64_t))((char *)&v104 - v18);
  result = sub_100088920(a1, a2);
  if (result)
  {
    v118 = a6;
    v119 = a5;
    v124 = (id)result;
    v21 = *(_QWORD **)(v6 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(v6 + 16), v20);
    v23 = (void (*)(unint64_t *__return_ptr, uint64_t, uint64_t))v21[67];
    v117 = ObjectType;
    v23(&v132, a1, a2);
    if (!(_QWORD)v134)
    {

      sub_1000073A0((uint64_t)&v132, &qword_100641738);
      return 0;
    }
    sub_10002E37C((__int128 *)&v132, (uint64_t)v146);
    v24 = v147;
    v25 = v148;
    sub_10001413C(v146, v147);
    (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v14, 1, v15) == 1)
    {

      v26 = &qword_1006436F0;
      v27 = v14;
LABEL_5:
      sub_1000073A0((uint64_t)v27, v26);
      goto LABEL_58;
    }
    v28 = v123;
    sub_10001F580((uint64_t)v14, (uint64_t)v123, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    v29 = v147;
    v30 = v148;
    sub_10001413C(v146, v147);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
    if ((_BYTE)v32 == 0xFF)
    {
      sub_10001F544((uint64_t)v28, type metadata accessor for TTRRemindersListMatchedAttributeValue);

    }
    else
    {
      v33 = (id)v31;
      LODWORD(v34) = v32;
      v35 = v120(v124);
      v120 = (uint64_t (*)(id))((unint64_t)v35 >> 62);
      if ((unint64_t)v35 >> 62)
        goto LABEL_52;
      if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        do
        {
          v115 = v33;
          v116 = v34;
          v36 = v147;
          v37 = v148;
          sub_10001413C(v146, v147);
          v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
          v40 = v39;
          v42 = v41;
          v44 = v43;
          sub_100089894(v38, v39, v41, v43);
          sub_100490090((uint64_t)v38, (uint64_t)v40, (uint64_t)v42, v44);
          v113 = v46;
          v114 = v47;
          if ((_BYTE)v47 == 0xFF)
          {
            sub_10001F544((uint64_t)v28, type metadata accessor for TTRRemindersListMatchedAttributeValue);

            sub_1000893FC(v38, v40, v42, v44);
            v51 = v115;
            v52 = v116;
            goto LABEL_57;
          }
          v105 = v38;
          v106 = v40;
          v48 = *((_QWORD *)v7 + 4);
          v111 = *((_QWORD *)v7 + 5);
          v112 = v45;
          v49 = v116;
          v50 = v115;
          v108 = v44;
          v107 = v42;
          if (v120)
          {
            if (v35 < 0)
              v53 = v35;
            else
              v53 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v35);
            v109 = _CocoaArrayWrapper.endIndex.getter(v53);
            swift_bridgeObjectRelease(v35);
          }
          else
          {
            v109 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v54 = swift_getObjectType(v48, v46);
          v55 = TTRRemindersListReminderInsertionPosition.init(relativePosition:)(v50, v49);
          v110 = v48;
          v56 = (void *)v55;
          v57 = v50;
          v59 = v58;
          LOBYTE(v58) = v49;
          v60 = (uint64_t (*)(uint64_t, _QWORD *))v21[54];
          sub_1000898F4(v57, v58);
          v61 = v60(v117, v21);
          v103 = v54;
          v63 = v112;
          v62 = v113;
          v64 = v114;
          (*(void (**)(unint64_t *__return_ptr, uint64_t, _QWORD, void *, void *, _QWORD, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 168))(&v132, v109, 0, v112, v113, v114, v56, v59, v61, v103, v111);
          swift_bridgeObjectRelease(v61);
          sub_100089908(v56, v59);
          if (!(_QWORD)v134)
          {
            sub_10001F544((uint64_t)v123, type metadata accessor for TTRRemindersListMatchedAttributeValue);

            sub_1000893FC(v105, v106, v107, v108);
            sub_1000894A4(v115, v116);
            sub_10008991C(v63, v62, v64);
            swift_bridgeObjectRelease(v35);
            v26 = &qword_100641758;
            v27 = (char *)&v132;
            goto LABEL_5;
          }
          sub_10002E37C((__int128 *)&v132, (uint64_t)v143);
          v65 = (uint64_t)v144;
          v66 = v145;
          sub_10001413C(v143, (uint64_t)v144);
          v67 = v66[1](v65, v66);
          swift_retain();
          v68 = sub_1000894FC(v67, (unint64_t)v7);
          swift_bridgeObjectRelease(v67);
          swift_release();
          v142 = (unint64_t)_swiftEmptyArrayStorage;
          v34 = v144;
          v33 = v145;
          sub_10001413C(v143, (uint64_t)v144);
          v69 = (*((uint64_t (**)(void *, id))v33 + 1))(v34, v33);
          v136 = v35;
          v138[0] = v68;
          v138[1] = 0;
          v139 = v69;
          v140 = 0;
          v141 = 0;
          if (v120)
          {
            if (v35 < 0)
              v71 = v35;
            else
              v71 = v35 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v35);
            v70 = _CocoaArrayWrapper.endIndex.getter(v71);
            swift_bridgeObjectRelease(v35);
          }
          else
          {
            v70 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v72 = v119;
          if (!v70)
          {
LABEL_48:
            v93 = v136;
            v94 = v138[0];
            swift_bridgeObjectRelease(v139);
            swift_bridgeObjectRelease(v94);
            swift_bridgeObjectRelease(v93);
            sub_10002A750(&qword_100655520);
            v95 = v142;
            v132 = v142;
            v96 = sub_10002A750(&qword_100655528);
            v97 = sub_100023FEC(&qword_100655530, &qword_100655528, (uint64_t)&protocol conformance descriptor for [A]);
            static Promise.all<A>(_:)(&v132, v96, v97);
            swift_bridgeObjectRelease(v95);
            v99 = (void *)zalgoIfMain.getter(v98);
            sub_100010634((uint64_t)v143, (uint64_t)&v132);
            v100 = swift_allocObject(&unk_1005FFDC8, 56, 7);
            sub_10002E37C((__int128 *)&v132, v100 + 16);
            dispatch thunk of Promise.then<A>(on:closure:)(v99, sub_1002FD468, v100, (char *)&type metadata for () + 8);

            sub_10008991C(v112, v113, v114);
            swift_release();
            swift_release();

            swift_release();
            sub_1000894A4(v115, v116);
            sub_1000893FC(v105, v106, v107, v108);
            sub_10001F544((uint64_t)v123, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            sub_100027F10(v143);
            sub_100027F10(v146);
            return 1;
          }
          v73 = 0;
          v21 = v138;
          v7 = &v133;
          v28 = type metadata accessor for TTRRemindersListMatchedAttributeValue;
          while (1)
          {
            if ((v35 & 0xC000000000000001) != 0)
            {
              v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v73, v35);
              goto LABEL_33;
            }
            if ((v73 & 0x8000000000000000) != 0)
              break;
            if (v73 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_50;
            v74 = *(id *)(v35 + 8 * v73 + 32);
LABEL_33:
            v34 = v74;
            if (__OFADD__(v73, 1))
              goto LABEL_51;
            v137 = (void *)(v73 + 1);
            sub_1002F79A8((uint64_t)&v129);
            if (!*((_QWORD *)&v130 + 1))
            {

              sub_1000073A0((uint64_t)&v129, &qword_100655518);
              goto LABEL_48;
            }
            v134 = v130;
            v135 = v131;
            v133 = v129;
            v132 = (unint64_t)v34;
            v75 = (void *)*((_QWORD *)&v131 + 1);
            v128 = v34;
            sub_10002E37C(&v133, (uint64_t)&v129);
            *((_QWORD *)&v131 + 1) = v75;
            sub_100010634((uint64_t)&v129, (uint64_t)v126);
            sub_10002E37C(v126, (uint64_t)v127);
            v76 = v75;
            v72(&v128, v124);
            v77 = swift_retain();
            v78 = (void *)zalgoIfMain.getter(v77);
            sub_100010634((uint64_t)v127, (uint64_t)v126);
            v79 = v121;
            sub_10002B1E8((uint64_t)v123, v121, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            v80 = *(unsigned __int8 *)(v125 + 80);
            v81 = (v80 + 56) & ~v80;
            v82 = swift_allocObject(&unk_1005FFDF0, v81 + v122, v80 | 7);
            sub_10002E37C(v126, v82 + 16);
            sub_10001F580(v79, v82 + v81, type metadata accessor for TTRRemindersListMatchedAttributeValue);
            v83 = type metadata accessor for TTRRemindersListImportedContent(0);
            dispatch thunk of Promise.then<A>(on:closure:)(v78, sub_1002FD534, v82, v83);
            swift_release();

            swift_release();
            v84 = swift_allocObject(&unk_1005FFE18, 24, 7);
            *(_QWORD *)(v84 + 16) = v76;
            v33 = v76;
            v85 = (void *)zalgo.getter(v33);
            dispatch thunk of Promise.error(on:closure:)(v85, sub_1002FD5A4, v84);
            swift_release();
            swift_release();

            swift_release();
            v86 = swift_retain();
            v87 = Promise.errorAsNil()(v86);
            swift_release();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v88);
            v90 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v89 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v90 >= v89 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v89 > 1, v90 + 1, 1);
            v91 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v90, v87);
            specialized Array._endMutation()(v91);
            swift_release();

            sub_100027F10(v127);
            sub_1000073A0((uint64_t)&v129, &qword_100655538);

            v72 = v119;
            if ((v141 & 0x100) != 0)
              goto LABEL_48;
            v35 = v136;
            v73 = (unint64_t)v137;
            if ((unint64_t)v136 >> 62)
            {
              if (v136 < 0)
                v92 = v136;
              else
                v92 = v136 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v136);
              v34 = (void *)_CocoaArrayWrapper.endIndex.getter(v92);
              swift_bridgeObjectRelease(v35);
              if ((void *)v73 == v34)
                goto LABEL_48;
            }
            else
            {
              v34 = *(void **)((v136 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v137 == v34)
                goto LABEL_48;
            }
          }
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          if (v35 < 0)
            v101 = v35;
          else
            v101 = v35 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v35);
          v102 = _CocoaArrayWrapper.endIndex.getter(v101);
          swift_bridgeObjectRelease(v35);
        }
        while (v102);
      }
      sub_10001F544((uint64_t)v28, type metadata accessor for TTRRemindersListMatchedAttributeValue);

      v51 = v33;
      v52 = v34;
LABEL_57:
      sub_1000894A4(v51, v52);
      swift_bridgeObjectRelease(v35);
    }
LABEL_58:
    sub_100027F10(v146);
    return 0;
  }
  return result;
}

uint64_t sub_1002F90B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_1006552D0);
  v1 = sub_100012DC4(v0, (uint64_t)qword_1006552D0);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIRemindersListUnsupportedDropRequest()
{
  return objc_opt_self(_TtC9Reminders39TTRIRemindersListUnsupportedDropRequest);
}

uint64_t sub_1002F9164(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[4];
  ObjectType = swift_getObjectType(v3[3], v10);
  sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v9 + 520))(&v28, v8, a2, ObjectType, v9);
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
  if (v29)
  {
    sub_10002E37C(&v28, (uint64_t)v31);
    v13 = v32;
    v14 = v33;
    sub_10001413C(v31, v32);
    v15 = v3[2];
    v16 = *(_QWORD *)(v15 + 16);
    v17 = _swiftEmptyArrayStorage;
    if (v16)
    {
      *(_QWORD *)&v28 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v15);
      specialized ContiguousArray.reserveCapacity(_:)(v16);
      v18 = 32;
      do
      {
        v19 = *(id *)(v15 + v18);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v20 = *(_QWORD *)(v28 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
        specialized ContiguousArray._endMutation()(v21);
        v18 += 16;
        --v16;
      }
      while (v16);
      v17 = (_QWORD *)v28;
      swift_bridgeObjectRelease(v15);
    }
    v22 = sub_1002DE5EC((uint64_t)v17);
    v23 = swift_bridgeObjectRelease(v17);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))(v14 + 32))(&v28, v22, v13, v14, v23);
    swift_bridgeObjectRelease(v22);
    v24 = v29;
    v25 = v30;
    sub_10001413C(&v28, v29);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25) ^ 1;
    sub_100027F10(&v28);
    sub_100027F10(v31);
  }
  else
  {
    sub_1000073A0((uint64_t)&v28, &qword_100641748);
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1002F9390(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v4 = v2[4];
  ObjectType = swift_getObjectType(v2[3], a2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v4 + 528))(&v21, a1, ObjectType, v4);
  if (v22)
  {
    sub_10002E37C(&v21, (uint64_t)v24);
    v6 = v25;
    v7 = v26;
    sub_10001413C(v24, v25);
    v8 = v2[2];
    v9 = *(_QWORD *)(v8 + 16);
    v10 = _swiftEmptyArrayStorage;
    if (v9)
    {
      *(_QWORD *)&v21 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v8);
      specialized ContiguousArray.reserveCapacity(_:)(v9);
      v11 = 32;
      do
      {
        v12 = *(id *)(v8 + v11);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v13 = *(_QWORD *)(v21 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
        specialized ContiguousArray._endMutation()(v14);
        v11 += 16;
        --v9;
      }
      while (v9);
      v10 = (_QWORD *)v21;
      swift_bridgeObjectRelease(v8);
    }
    v15 = sub_1002DE5EC((uint64_t)v10);
    v16 = swift_bridgeObjectRelease(v10);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(&v21, v15, v6, v7, v16);
    swift_bridgeObjectRelease(v15);
    v17 = v22;
    v18 = v23;
    sub_10001413C(&v21, v22);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18) ^ 1;
    sub_100027F10(&v21);
    sub_100027F10(v24);
  }
  else
  {
    sub_1000073A0((uint64_t)&v21, &qword_100641748);
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1002F953C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BYTE v23[16];
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v3[4];
  ObjectType = swift_getObjectType(v3[3], v10);
  sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v12 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 536))(&v24, v8, a2, ObjectType, v9);
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
  if (v25)
  {
    v13 = sub_10002E37C(&v24, (uint64_t)v26);
    v14 = v3[2];
    v15 = *(_QWORD *)(v14 + 16);
    v16 = _swiftEmptyArrayStorage;
    if (v15)
    {
      *(_QWORD *)&v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v14);
      specialized ContiguousArray.reserveCapacity(_:)(v15);
      v17 = 32;
      do
      {
        v18 = *(id *)(v14 + v17);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v19 = *(_QWORD *)(v24 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
        specialized ContiguousArray._endMutation()(v20);
        v17 += 16;
        --v15;
      }
      while (v15);
      v16 = (_QWORD *)v24;
      swift_bridgeObjectRelease(v14);
    }
    __chkstk_darwin(v13);
    *(_QWORD *)&v23[-16] = v26;
    v21 = sub_10031B5DC(sub_1002FD410, (uint64_t)&v23[-32], (uint64_t)v16);
    swift_bridgeObjectRelease(v16);
    sub_100027F10(v26);
  }
  else
  {
    sub_1000073A0((uint64_t)&v24, &qword_100641738);
    v21 = 0;
  }
  return v21 & 1;
}

_QWORD *sub_1002F9730(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  void (*v15)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  int v57;
  void *v58;
  void *v59;
  void *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  void *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  _QWORD *v98;
  int v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  int v106;
  int v107;
  uint64_t v108;
  void (*v109)(__int128 *__return_ptr, _QWORD *, void *, void *, unint64_t, void *, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  void *v111;
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  id v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  _QWORD v123[3];
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;

  v3 = v2;
  v6 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v6);
  v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType(v9, v11);
  sub_10002B1E8(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v8, 0, 1, v13);
  v15 = *(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v10 + 520);
  v120 = a2;
  v15(&v126, v8, a2, ObjectType, v10);
  sub_1000073A0((uint64_t)v8, (uint64_t *)&unk_100640EB0);
  if (!v127)
  {
    sub_1000073A0((uint64_t)&v126, &qword_100641748);
    return _swiftEmptyArrayStorage;
  }
  v112 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v14;
  v113 = v13;
  v114 = a1;
  v115 = ObjectType;
  v116 = v9;
  v117 = v10;
  v118 = v8;
  sub_10002E37C(&v126, (uint64_t)&v129);
  v16 = (uint64_t)v130;
  v17 = v131;
  sub_10001413C(&v129, (uint64_t)v130);
  v18 = *(_QWORD *)(v3 + 16);
  v19 = *(_QWORD *)(v18 + 16);
  v20 = _swiftEmptyArrayStorage;
  if (v19)
  {
    v123[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v18);
    specialized ContiguousArray.reserveCapacity(_:)(v19);
    v21 = 32;
    do
    {
      v22 = *(id *)(v18 + v21);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v23 = *(_QWORD *)(v123[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
      v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
      specialized ContiguousArray._endMutation()(v24);
      v21 += 16;
      --v19;
    }
    while (v19);
    v20 = (_QWORD *)v123[0];
    swift_bridgeObjectRelease(v18);
  }
  v25 = sub_1002DE5EC((uint64_t)v20);
  v26 = swift_bridgeObjectRelease(v20);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, __n128))(v17 + 32))(&v126, v25, v16, v17, v26);
  swift_bridgeObjectRelease(v25);
  v28 = *(_QWORD *)(v18 + 16);
  v29 = _swiftEmptyArrayStorage;
  if (v28)
  {
    v123[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v18);
    specialized ContiguousArray.reserveCapacity(_:)(v28);
    v30 = 32;
    do
    {
      v31 = *(id *)(v18 + v30);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v32 = *(_QWORD *)(v123[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
      v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v31);
      specialized ContiguousArray._endMutation()(v33);
      v30 += 16;
      --v28;
    }
    while (v28);
    v29 = (_QWORD *)v123[0];
    swift_bridgeObjectRelease(v18);
  }
  __chkstk_darwin(v27);
  *(&v98 - 2) = &v126;
  v34 = 0;
  v35 = (uint64_t)sub_1004766FC((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1002FC9A4, (uint64_t)(&v98 - 4), (uint64_t)v29);
  swift_bridgeObjectRelease(v29);
  v36 = (_QWORD *)((unint64_t)v35 >> 62);
  if ((unint64_t)v35 >> 62)
    goto LABEL_60;
  if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_64:
    swift_bridgeObjectRelease(v35);
    goto LABEL_65;
  }
  while (1)
  {
    v37 = v127;
    v38 = v128;
    sub_10001413C(&v126, v127);
    v119 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
    if ((_BYTE)v39 == 0xFF)
      goto LABEL_64;
    v40 = v39;
    v101 = v34;
    if (v36)
    {
      if (v35 < 0)
        v42 = v35;
      else
        v42 = v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v35);
      v41 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v35);
    }
    else
    {
      v41 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v36 = _swiftEmptyArrayStorage;
    if (v41)
    {
      v123[0] = _swiftEmptyArrayStorage;
      v43 = v123;
      specialized ContiguousArray.reserveCapacity(_:)(v41);
      if (v41 < 0)
      {
        __break(1u);
        goto LABEL_69;
      }
      v44 = 0;
      do
      {
        if ((v35 & 0xC000000000000001) != 0)
          v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v35);
        else
          v45 = (char *)*(id *)(v35 + 8 * v44 + 32);
        v46 = v45;
        ++v44;
        v47 = *(id *)&v45[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v48);
        v49 = *(_QWORD *)(v123[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v49);
        v50 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
        specialized ContiguousArray._endMutation()(v50);
      }
      while (v41 != v44);
      v36 = (_QWORD *)v123[0];
    }
    v58 = v130;
    v51 = v131;
    sub_10001413C(&v129, (uint64_t)v130);
    v52 = (void *)(*(uint64_t (**)(void *, uint64_t))(v51 + 8))(v58, v51);
    v54 = v53;
    v56 = v55;
    LODWORD(v58) = v57;
    sub_100089894(v52, v53, v55, v57);
    sub_100490090((uint64_t)v52, (uint64_t)v54, (uint64_t)v56, (char)v58);
    if ((_BYTE)v61 == 0xFF)
    {
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v35);
LABEL_46:
      sub_1000893FC(v52, v54, v56, (char)v58);
      sub_1000894A4(v119, v40);
      goto LABEL_65;
    }
    v62 = v61;
    v103 = v52;
    v104 = v54;
    v105 = v56;
    v106 = (int)v58;
    v63 = *(_QWORD *)(v3 + 48);
    v111 = *(void **)(v3 + 40);
    v100 = v3;
    v108 = v63;
    v58 = v59;
    v64 = v60;
    v110 = swift_getObjectType(v111, v60);
    v65 = v119;
    v66 = (void *)TTRRemindersListReminderInsertionPosition.init(relativePosition:)(v119, v40);
    v67 = v40;
    v69 = v68;
    v109 = *(void (**)(__int128 *__return_ptr, _QWORD *, void *, void *, unint64_t, void *, uint64_t, uint64_t, uint64_t))(v63 + 176);
    v107 = v67;
    sub_10012B0FC(v65, v67);
    v102 = v64;
    v109(&v121, v36, v58, v64, v62, v66, v69, v110, v108);
    swift_bridgeObjectRelease(v36);
    sub_100089908(v66, v69);
    v3 = v62;
    if (!v122)
    {
      sub_10008991C(v58, v102, v62);
      swift_bridgeObjectRelease(v35);
      sub_1000073A0((uint64_t)&v121, &qword_100641758);
      LOBYTE(v40) = v107;
      LOBYTE(v58) = v106;
      v56 = v105;
      v54 = v104;
      v52 = v103;
      goto LABEL_46;
    }
    v111 = v58;
    sub_10002E37C(&v121, (uint64_t)v123);
    v70 = v124;
    v38 = v125;
    sub_10001413C(v123, v124);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v70, v38);
    *(_QWORD *)&v121 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v16);
    sub_1003D814C(0, 0, 0);
    v43 = (_QWORD *)v121;
    v110 = (unint64_t)v16 >> 62;
    v98 = (_QWORD *)v41;
    if (!((unint64_t)v16 >> 62))
    {
      v71 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v16);
      goto LABEL_32;
    }
LABEL_69:
    v97 = v16 < 0 ? v16 : v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v71 = _CocoaArrayWrapper.endIndex.getter(v97);
LABEL_32:
    v99 = v3;
    if (!v71)
    {
LABEL_42:
      swift_bridgeObjectRelease_n(v16, 2);
      v78 = (uint64_t)v118;
      sub_10002B1E8(v114, (uint64_t)v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v112(v78, 0, 1, v113);
      v79 = sub_1002DE7B4((uint64_t)v43);
      v80 = swift_release();
      v38 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, __n128))(v117 + 416))(v78, v79, v115, v80);
      swift_bridgeObjectRelease(v79);
      sub_1000073A0(v78, (uint64_t *)&unk_100640EB0);
      v36 = *(_QWORD **)(v38 + 16);
      if (v110)
      {
        if (v16 < 0)
          v81 = v16;
        else
          v81 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v3 = _CocoaArrayWrapper.endIndex.getter(v81);
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        v3 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      LOBYTE(v71) = v107;
      if (v36 != (_QWORD *)v3 || v36 != v98)
      {
        swift_bridgeObjectRelease(v35);
        if (qword_10063D650 != -1)
          goto LABEL_74;
        goto LABEL_55;
      }
      swift_bridgeObjectRelease(v16);
      v82 = v124;
      v83 = v125;
      sub_10001413C(v123, v124);
      (*(void (**)(uint64_t, uint64_t))(v83 + 16))(v82, v83);
      v84 = *(_QWORD *)(v38 + 16);
      swift_bridgeObjectRetain(v35);
      v85 = v100;
      swift_retain();
      swift_bridgeObjectRetain(v38);
      sub_1002FD00C(0, v84, v85, v35, v38);
      v87 = v86;
      swift_release();
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v38);
      sub_1000893FC(v103, v104, v105, v106);
      sub_1000894A4(v119, v71);
      sub_10008991C(v111, v102, v99);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v35);
      sub_100027F10(v123);
      sub_100027F10(&v126);
      sub_100027F10(&v129);
      return (_QWORD *)v87;
    }
    if (v71 < 1)
      break;
    v72 = 0;
    v34 = v16 & 0xC000000000000001;
    v73 = v16;
    while (1)
    {
      v74 = v34
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v72, v16)
          : *(id *)(v16 + 8 * v72 + 32);
      v75 = v74;
      v16 = v120 + v72;
      if (__OFADD__(v120, v72))
        break;
      *(_QWORD *)&v121 = v43;
      v3 = v43[2];
      v76 = v43[3];
      v36 = (_QWORD *)(v3 + 1);
      if (v3 >= v76 >> 1)
      {
        sub_1003D814C(v76 > 1, v3 + 1, 1);
        v43 = (_QWORD *)v121;
      }
      ++v72;
      v43[2] = v36;
      v77 = &v43[2 * v3];
      v77[4] = v75;
      v77[5] = v16;
      v16 = v73;
      if (v71 == v72)
        goto LABEL_42;
    }
    __break(1u);
LABEL_60:
    if (v35 < 0)
      v94 = v35;
    else
      v94 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v95 = _CocoaArrayWrapper.endIndex.getter(v94);
    swift_bridgeObjectRelease(v35);
    if (!v95)
      goto LABEL_64;
  }
  __break(1u);
LABEL_74:
  swift_once(&qword_10063D650, sub_1002F90B4);
LABEL_55:
  v88 = type metadata accessor for Logger(0);
  sub_100012DC4(v88, (uint64_t)qword_1006552D0);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v38);
  v90 = Logger.logObject.getter(v89);
  v91 = static os_log_type_t.fault.getter(v90);
  if (os_log_type_enabled(v90, v91))
  {
    v92 = swift_slowAlloc(22, -1);
    *(_DWORD *)v92 = 134218240;
    swift_bridgeObjectRelease(v38);
    *(_QWORD *)&v121 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, (char *)&v121 + 8, v92 + 4, v92 + 12);
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v92 + 12) = 2048;
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&v121 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, (char *)&v121 + 8, v92 + 14, v92 + 22);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "items count not matching reminderChangeItems count {items: %ld, reminderChangeItems: %ld}", (uint8_t *)v92, 0x16u);
    swift_slowDealloc(v92, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v38, 2);
    swift_bridgeObjectRelease_n(v16, 2);
  }
  v93 = v99;
  sub_1000893FC(v103, v104, v105, v106);
  sub_1000894A4(v119, v71);
  sub_10008991C(v111, v102, v93);
  sub_100027F10(v123);
LABEL_65:
  sub_100027F10(&v126);
  sub_100027F10(&v129);
  return _swiftEmptyArrayStorage;
}

void sub_1002FA2BC(unint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD v13[5];
  unsigned __int8 v14;

  v5 = *a1;
  v4 = (void *)a1[1];
  v6 = a2[3];
  v7 = a2[4];
  sub_10001413C(a2, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  v9 = v4;
  v10 = v8(v6, v7);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = v10;
  if (v5 >= *(_QWORD *)(v10 + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_1002FD3C8(v10 + 48 * v5 + 32, (uint64_t)v13);
  swift_bridgeObjectRelease(v11);
  v12 = v14;
  sub_100027F10(v13);
  if (v12 != 1)
  {

    v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_1002FA388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD v67[9];
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  __int128 v76;
  uint64_t v77;
  _QWORD v78[6];
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[136];

  v74 = a2;
  v3 = type metadata accessor for REMHashtagLabelSpecifier(0);
  v67[7] = *(_QWORD *)(v3 - 8);
  v67[8] = v3;
  __chkstk_darwin(v3);
  v69 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v67[6] = (char *)v67 - v6;
  v7 = type metadata accessor for DateComponents(0);
  v67[4] = *(_QWORD *)(v7 - 8);
  v67[5] = v7;
  __chkstk_darwin(v7);
  v67[1] = v8;
  v67[2] = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v67[3] = (char *)v67 - v10;
  v11 = sub_10002A750(&qword_1006436F0);
  __chkstk_darwin(v11);
  v72 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v68 = (uint64_t)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v70 = (uint64_t)v67 - v15;
  v16 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v16);
  v18 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Logger(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D650 != -1)
    swift_once(&qword_10063D650, sub_1002F90B4);
  v23 = sub_100012DC4(v19, (uint64_t)qword_1006552D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  v24 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v24, v82);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 48;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v26 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v27 = sub_10008945C();
  *(_QWORD *)(inited + 48) = TTRTreeStorageItem.treeItemDescription.getter(v26, v27);
  *(_QWORD *)(inited + 56) = v28;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 49;
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  v29 = v74;
  *(_QWORD *)(inited + 96) = v74;
  v30 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List perform drop to match attributes {toMatch: (%@, %d)}", 67, 2, v30);
  v31 = swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v31);
  v32 = v75;
  v33 = v75[4];
  ObjectType = swift_getObjectType(v75[3], v34);
  sub_10002B1E8(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 0, 1, v26);
  (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v33 + 536))(&v76, v18, v29, ObjectType, v33);
  sub_1000073A0((uint64_t)v18, (uint64_t *)&unk_100640EB0);
  if (v77)
  {
    sub_10002E37C(&v76, (uint64_t)v79);
    v36 = v80;
    v37 = v81;
    sub_10001413C(v79, v80);
    v38 = (uint64_t)v72;
    (*(void (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v38, 1, v73) == 1)
    {
      sub_1000073A0(v38, &qword_1006436F0);
      sub_100027F10(v79);
      return 0;
    }
    v40 = v70;
    v41 = sub_10001F580(v38, v70, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    v42 = v32[2];
    v43 = *(_QWORD *)(v42 + 16);
    if (v43)
    {
      v44 = v32;
      *(_QWORD *)&v76 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v42);
      specialized ContiguousArray.reserveCapacity(_:)(v43);
      v45 = 32;
      do
      {
        v46 = *(id *)(v42 + v45);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v47 = *(_QWORD *)(v76 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v47);
        v48 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v46);
        specialized ContiguousArray._endMutation()(v48);
        v45 += 16;
        --v43;
      }
      while (v43);
      v49 = (_QWORD *)v76;
      swift_bridgeObjectRelease(v42);
      v32 = v44;
    }
    else
    {
      v49 = _swiftEmptyArrayStorage;
    }
    __chkstk_darwin(v41);
    v67[-2] = v79;
    v50 = (uint64_t)sub_1003E6914(sub_1002FE2C8, &v67[-4], (unint64_t)v49);
    v51 = v50;
    if ((unint64_t)v50 >> 62)
    {
      if (v50 >= 0)
        v50 &= 0xFFFFFFFFFFFFFF8uLL;
      v52 = _CocoaArrayWrapper.endIndex.getter(v50);
      if (v52)
        goto LABEL_14;
    }
    else
    {
      v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v52)
      {
LABEL_14:
        v53 = v32;
        *(_QWORD *)&v76 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v52);
        if (v52 < 0)
        {
          __break(1u);
          JUMPOUT(0x1002FB0ECLL);
        }
        v54 = 0;
        do
        {
          if ((v51 & 0xC000000000000001) != 0)
            v55 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v54, v51);
          else
            v55 = (char *)*(id *)(v51 + 8 * v54 + 32);
          v56 = v55;
          ++v54;
          v57 = *(id *)&v55[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v58);
          v59 = *(_QWORD *)(v76 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v59);
          v60 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v57);
          specialized ContiguousArray._endMutation()(v60);
        }
        while (v52 != v54);
        v61 = (_QWORD *)v76;
        swift_bridgeObjectRelease(v51);
        v32 = v53;
        v40 = v70;
LABEL_25:
        v63 = v32[6];
        v64 = swift_getObjectType(v32[5], v62);
        (*(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t))(v63 + 48))(v78, v61, v64, v63);
        swift_bridgeObjectRelease(v61);
        v65 = v68;
        sub_10002B1E8(v40, v68, type metadata accessor for TTRRemindersListMatchedAttributeValue);
        v66 = (char *)&loc_1002FA9D0 + *((int *)qword_1002FB100 + swift_getEnumCaseMultiPayload(v65, v73));
        __asm { BR              X10 }
      }
    }
    swift_bridgeObjectRelease(v51);
    v61 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  sub_1000073A0((uint64_t)&v76, &qword_100641738);
  return 0;
}

uint64_t sub_1002FB114(void **a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);
  id v6;
  char v7;
  _QWORD v9[5];

  v2 = *a1;
  v3 = a2[3];
  v4 = a2[4];
  sub_10001413C(a2, v3);
  v9[3] = type metadata accessor for TTRIRemindersListDragReminder();
  v9[4] = &off_1006053C8;
  v9[0] = v2;
  v5 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v4 + 8);
  v6 = v2;
  v7 = v5(v9, v3, v4);
  sub_100027F10(v9);
  return v7 & 1;
}

uint64_t sub_1002FB1A4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for TTRDateChangeType(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10001413C(a1, v7);
  v9 = type metadata accessor for DateComponents(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, a2, v9);
  swift_storeEnumTagMultiPayload(v6, v4, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 8))(v6, v7, v8);
  return sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRDateChangeType);
}

uint64_t sub_1002FB284()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRIRemindersListInAppDragReminderDropRequest()
{
  return objc_opt_self(_TtC9Reminders45TTRIRemindersListInAppDragReminderDropRequest);
}

uint64_t sub_1002FB2E0(uint64_t a1, uint64_t a2)
{
  return sub_1002F9164(a1, a2) & 1;
}

uint64_t sub_1002FB304(uint64_t a1, uint64_t a2)
{
  return sub_1002F9390(a1, a2) & 1;
}

uint64_t sub_1002FB328()
{
  return sub_1002FB354((uint64_t (*)(char *, uint64_t))sub_1002F9164) & 1;
}

uint64_t sub_1002FB354(uint64_t (*a1)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002FC4FC((uint64_t)v4);
  v11 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100641740);
    v12 = 0;
  }
  else
  {
    v13 = *(_QWORD *)&v4[*(int *)(v11 + 48)];
    v14 = *(int *)(v5 + 48);
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v7[v14] = v13;
    v15 = *(_QWORD *)&v7[*(int *)(v5 + 48)];
    sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v12 = a1(v10, v15);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v12 & 1;
}

uint64_t sub_1002FB4EC(uint64_t a1, uint64_t a2)
{
  return sub_1002F953C(a1, a2) & 1;
}

uint64_t sub_1002FB510()
{
  return sub_1002FB354((uint64_t (*)(char *, uint64_t))sub_1002F953C) & 1;
}

BOOL sub_1002FB53C(uint64_t (*a1)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002FC4FC((uint64_t)v4);
  v11 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_1000073A0((uint64_t)v4, &qword_100641740);
    return 0;
  }
  else
  {
    v13 = *(_QWORD *)&v4[*(int *)(v11 + 48)];
    v14 = *(int *)(v5 + 48);
    sub_10001F580((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v7[v14] = v13;
    v15 = *(_QWORD *)&v7[*(int *)(v5 + 48)];
    sub_10001F580((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v12 = sub_1002FBC10((uint64_t)v10, v15, a1);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v12;
}

_QWORD *sub_1002FB6D8(uint64_t a1, uint64_t a2)
{
  return sub_1002F9730(a1, a2);
}

_QWORD *sub_1002FB6F8()
{
  return sub_1002FB948();
}

_QWORD *sub_1002FB718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002FC4FC((uint64_t)v6);
  v14 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v6, 1, v14) == 1)
  {
    sub_1000073A0((uint64_t)v6, &qword_100641740);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    v16 = *(_QWORD *)&v6[*(int *)(v14 + 48)];
    v17 = *(int *)(v7 + 48);
    sub_10001F580((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v9[v17] = v16;
    v18 = *(_QWORD *)&v9[*(int *)(v7 + 48)];
    sub_10001F580((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10002B1E8((uint64_t)v13, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v10);
    v15 = sub_1002F7AFC((uint64_t)v3, v18, (uint64_t (*)(id))sub_1002FD42C, v0, (void (*)(id *, id))sub_1002FBD64, 0);
    sub_1000073A0((uint64_t)v3, (uint64_t *)&unk_100640EB0);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v15;
}

_QWORD *sub_1002FB948()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_10002A750(&qword_100641740);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10002A750((uint64_t *)&unk_100654950);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002FC4FC((uint64_t)v2);
  v9 = sub_10002A750(&qword_100641750);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v2, 1, v9) == 1)
  {
    sub_1000073A0((uint64_t)v2, &qword_100641740);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    v11 = *(_QWORD *)&v2[*(int *)(v9 + 48)];
    v12 = *(int *)(v3 + 48);
    sub_10001F580((uint64_t)v2, (uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(_QWORD *)&v5[v12] = v11;
    v13 = *(_QWORD *)&v5[*(int *)(v3 + 48)];
    sub_10001F580((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v10 = sub_1002F9730((uint64_t)v8, v13);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return v10;
}

uint64_t sub_1002FBAD8(uint64_t a1, uint64_t a2)
{
  return sub_1002FA388(a1, a2) & 1;
}

uint64_t sub_1002FBAFC()
{
  return sub_1002FB354((uint64_t (*)(char *, uint64_t))sub_1002FA388) & 1;
}

BOOL sub_1002FBB28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  v5 = *(_QWORD *)(v2 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 24), a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 328))(a1, ObjectType, v5);
  if (v8 == -1)
    return 0;
  v9 = (void *)v7;
  v10 = v8;
  v11 = v8 & 1;
  v12 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain(v12);
  v14 = (uint64_t)sub_1002FC9BC(v13, v9, v11);
  swift_bridgeObjectRelease(v12);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v17 = v14;
    else
      v17 = v14 & 0xFFFFFFFFFFFFFF8;
    v15 = _CocoaArrayWrapper.endIndex.getter(v17);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1000760F4(v9, v10);
  swift_bridgeObjectRelease(v14);
  return v15 != 0;
}

BOOL sub_1002FBC10(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v5 = v3;
  v8 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B1E8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = (void *)a3(v10, a2);
  sub_1000073A0((uint64_t)v10, (uint64_t *)&unk_100640EB0);
  if (!v12)
    return 0;
  v13 = *(_QWORD *)(v5 + 16);
  v14 = v12;
  swift_bridgeObjectRetain(v13);
  v16 = (uint64_t)sub_1002FCCD8(v15, v14);
  swift_bridgeObjectRelease(v13);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v19 = v16;
    else
      v19 = v16 & 0xFFFFFFFFFFFFFF8;
    v17 = _CocoaArrayWrapper.endIndex.getter(v19);
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v16);

  return v17 != 0;
}

_QWORD *sub_1002FBD68(void *a1, char a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = a1;
  swift_bridgeObjectRetain(v5);
  v8 = sub_1002FC9BC(v7, a1, v4);
  swift_bridgeObjectRelease(v5);

  return v8;
}

uint64_t sub_1002FBDD8(void **a1, void *a2, char a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;
  id v11;
  char v12;
  char v13;
  uint64_t v14;

  v5 = *a1;
  type metadata accessor for TTRRemindersListImportedContent(0);
  v6 = objc_msgSend(v5, "itemProvider");
  v7 = objc_msgSend(a2, "attachmentContext");
  v8 = v7;
  if ((a3 & 1) == 0)
  {
    if (v7)

    v9 = a2;
    v10 = REMReminder.canAddURL.getter();

    if ((v10 & 1) != 0)
    {
      if (!v8)
        goto LABEL_15;
      goto LABEL_11;
    }
    if (v8)
    {
LABEL_13:
      v13 = 1;
      goto LABEL_17;
    }
LABEL_16:
    v13 = 0;
    goto LABEL_17;
  }
  if (v7)

  v11 = a2;
  v12 = REMReminderChangeItem.canAddURL.getter();

  if (!v8)
  {
    if ((v12 & 1) != 0)
    {
LABEL_15:
      v13 = 2;
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if ((v12 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  v13 = 3;
LABEL_17:
  v14 = sub_1004D894C(v6, v13);

  return v14;
}

uint64_t sub_1002FBEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD v21[2];
  _BYTE v22[128];

  v4 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D650 != -1)
    swift_once(&qword_10063D650, sub_1002F90B4);
  v11 = sub_100012DC4(v7, (uint64_t)qword_1006552D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_10002A750((uint64_t *)&unk_100640F20);
  inited = swift_initStackObject(v12, v22);
  *(_OWORD *)(inited + 16) = xmmword_1005201E0;
  *(_QWORD *)(inited + 32) = 48;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v14 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v15 = sub_10008945C();
  *(_QWORD *)(inited + 48) = TTRTreeStorageItem.treeItemDescription.getter(v14, v15);
  *(_QWORD *)(inited + 56) = v16;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 49;
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  *(_QWORD *)(inited + 96) = a2;
  v17 = sub_10002D32C(inited);
  sub_1000143B4((uint64_t)"Reminders List perform drop to match attributes {toMatch: (%@, %d)}", 67, 2, v17);
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v18);
  v19 = v21[1];
  sub_10002B1E8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  LOBYTE(v19) = sub_1002F86C0((uint64_t)v6, a2, (uint64_t (*)(id))sub_1002FD42C, v19, (void (*)(id *, id))sub_1002FBD64, 0);
  sub_1000073A0((uint64_t)v6, (uint64_t *)&unk_100640EB0);
  return v19 & 1;
}

_QWORD *sub_1002FC110(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = a1;
  swift_bridgeObjectRetain(v2);
  v5 = sub_1002FCCD8(v4, v3);
  swift_bridgeObjectRelease(v2);

  return v5;
}

uint64_t sub_1002FC16C(void **a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;

  v3 = *a1;
  type metadata accessor for TTRRemindersListImportedContent(0);
  v4 = objc_msgSend(v3, "itemProvider");
  v5 = objc_msgSend(a2, "account");
  v6 = objc_msgSend(v5, "capabilities");

  LODWORD(v5) = objc_msgSend(v6, "supportsAttachments");
  if ((_DWORD)v5)
    v7 = 15;
  else
    v7 = 14;
  v8 = sub_1004D894C(v4, v7);

  return v8;
}

uint64_t sub_1002FC22C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TTRIRemindersListOutOfAppDragItemDropRequest()
{
  return objc_opt_self(_TtC9Reminders44TTRIRemindersListOutOfAppDragItemDropRequest);
}

ValueMetadata *type metadata accessor for TTRIRemindersListInAppDragReminderDropRequest.InAppDragRemindersContext()
{
  return &type metadata for TTRIRemindersListInAppDragReminderDropRequest.InAppDragRemindersContext;
}

BOOL sub_1002FC298(uint64_t a1, uint64_t a2)
{
  return sub_1002FBC10(a1, a2, (uint64_t (*)(char *, uint64_t))sub_100086E5C);
}

BOOL sub_1002FC2C4(uint64_t a1, uint64_t a2)
{
  return sub_1002FBB28(a1, a2);
}

BOOL sub_1002FC2E8()
{
  return sub_1002FB53C((uint64_t (*)(char *, uint64_t))sub_100086E5C);
}

BOOL sub_1002FC314(uint64_t a1, uint64_t a2)
{
  return sub_1002FBC10(a1, a2, (uint64_t (*)(char *, uint64_t))sub_100088920);
}

BOOL sub_1002FC340()
{
  return sub_1002FB53C((uint64_t (*)(char *, uint64_t))sub_100088920);
}

_QWORD *sub_1002FC36C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v5 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_10002B1E8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v9 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  v10 = sub_1002F7AFC((uint64_t)v7, a2, (uint64_t (*)(id))sub_1002FD42C, v8, (void (*)(id *, id))sub_1002FBD64, 0);
  sub_1000073A0((uint64_t)v7, (uint64_t *)&unk_100640EB0);
  return v10;
}

_QWORD *sub_1002FC454(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002F8280(a1, (uint64_t (*)(uint64_t, _QWORD))sub_1002FDA58, *v1, (uint64_t)sub_1002FBDD8, 0);
}

_QWORD *sub_1002FC48C()
{
  return sub_1002FB718();
}

uint64_t sub_1002FC4AC(uint64_t a1, uint64_t a2)
{
  return sub_1002FBEE0(a1, a2) & 1;
}

uint64_t sub_1002FC4D0()
{
  return sub_1002FB354((uint64_t (*)(char *, uint64_t))sub_1002FBEE0) & 1;
}

uint64_t sub_1002FC4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v33 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750(&qword_1006554F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_1006554F8);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v17 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 24), v18);
  (*(void (**)(uint64_t, uint64_t))(v17 + 360))(ObjectType, v17);
  v20 = sub_10002A750(&qword_100655500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v7, 1, v20) == 1)
  {
    v21 = &qword_1006554F0;
    v22 = (uint64_t)v7;
LABEL_5:
    sub_1000073A0(v22, v21);
    v26 = sub_10002A750(&qword_100641750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
  }
  v23 = *(_QWORD *)&v7[*(int *)(v20 + 48)];
  v24 = *(int *)(v8 + 48);
  sub_10000F614((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_100640EB0);
  *(_QWORD *)&v10[v24] = v23;
  v25 = *(_QWORD *)&v10[*(int *)(v8 + 48)];
  sub_10000F614((uint64_t)v10, (uint64_t)v16, (uint64_t *)&unk_100640EB0);
  sub_10000F614((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
  {
    v21 = (uint64_t *)&unk_100640EB0;
    v22 = (uint64_t)v13;
    goto LABEL_5;
  }
  v28 = v33;
  sub_10001F580((uint64_t)v13, v33, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v29 = sub_10002A750(&qword_100641750);
  v30 = *(int *)(v29 + 48);
  v31 = v28;
  v32 = v34;
  sub_10001F580(v31, v34, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v32 + v30) = v25;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v32, 0, 1, v29);
}

uint64_t sub_1002FC7AC()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002FC7D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FC7E8()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002FC814()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  sub_10001413C(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 72))(v1, v3, v2);
}

uint64_t sub_1002FC860()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FC870()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1002FC894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  sub_10001413C((_QWORD *)(v0 + 16), v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v1, v2, v3);
}

uint64_t sub_1002FC8E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FC8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DateComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_100027F10((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002FC964()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DateComponents(0) - 8) + 80);
  return sub_1002FB1A4((_QWORD *)(v0 + 16), v0 + ((v1 + 56) & ~v1));
}

uint64_t sub_1002FC994()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002FC9A4(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1002FA2BC(a1, *(_QWORD **)(v2 + 16), a2);
}

_QWORD *sub_1002FC9BC(uint64_t a1, void *a2, int a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[2];
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _QWORD *v43;

  v4 = v3;
  v42 = a3;
  v7 = type metadata accessor for UTType(0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v35 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_35;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v34[1] = v4;
      v10 = 0;
      v40 = a1 & 0xFFFFFFFFFFFFFF8;
      v41 = a1 & 0xC000000000000001;
      v39 = v9;
      while (v41)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
LABEL_9:
        v4 = v14;
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_34;
        v16 = objc_msgSend(v14, "itemProvider");
        v17 = objc_msgSend(a2, "attachmentContext");
        v18 = v17;
        if ((v42 & 1) != 0)
        {
          if (v17)

          v22 = a2;
          v23 = REMReminderChangeItem.canAddURL.getter();

          if (!v18)
          {
            if ((v23 & 1) == 0)
              goto LABEL_30;
            goto LABEL_29;
          }
          if ((v23 & 1) != 0)
            v21 = 3;
          else
            v21 = 1;
        }
        else
        {
          if (v17)

          v19 = a2;
          v20 = REMReminder.canAddURL.getter();

          if ((v20 & 1) != 0)
          {
            if (!v18)
              goto LABEL_29;
            v21 = 2;
          }
          else
          {
            if (!v18)
              goto LABEL_30;
            v21 = 1;
          }
        }
        v24 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
        v25 = objc_msgSend(v16, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v24));
        if ((v25 & 1) != 0)
          goto LABEL_4;
        v38 = v21;
        v26 = v35;
        v27 = static UTType.image.getter(v25);
        UTType.identifier.getter(v27);
        v29 = v28;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v37);
        v30 = String._bridgeToObjectiveC()();
        LOBYTE(v29) = objc_msgSend(v16, "hasItemConformingToTypeIdentifier:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

        if ((v29 & 1) != 0)
          goto LABEL_4;
        if (v38 < 2)
          goto LABEL_30;
LABEL_29:
        v31 = sub_100005ED8(0, &qword_100649BC8, NSURL_ptr);
        if ((objc_msgSend(v16, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v31)) & 1) == 0)
        {
LABEL_30:

          goto LABEL_5;
        }
LABEL_4:

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v12 = v43[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v4);
        specialized ContiguousArray._endMutation()(v13);
LABEL_5:
        ++v10;
        if (v15 == v39)
          return v43;
      }
      if (v10 < *(_QWORD *)(v40 + 16))
        break;
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      if (a1 < 0)
        v33 = a1;
      else
        v33 = a1 & 0xFFFFFFFFFFFFFF8;
      v9 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v9)
        return _swiftEmptyArrayStorage;
    }
    v14 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1002FCCD8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  _QWORD *v41;

  v3 = v2;
  v39 = a2;
  v5 = type metadata accessor for UTType(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v36 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_23;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v9 = a1 & 0xC000000000000001;
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
      v34[1] = v3;
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
      while (v9)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
        v12 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_20:
          __break(1u);
          return v41;
        }
LABEL_7:
        v40 = v11;
        v13 = objc_msgSend(v11, "itemProvider");
        v14 = objc_msgSend(v39, "account");
        v15 = objc_msgSend(v14, "capabilities");

        LODWORD(v14) = objc_msgSend(v15, "supportsAttachments");
        if ((_DWORD)v14)
        {
          v16 = sub_100005ED8(0, (unint64_t *)&unk_100642D70, UIImage_ptr);
          v17 = objc_msgSend(v13, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v16));
          if ((v17 & 1) != 0)
            goto LABEL_12;
          v18 = v36;
          v19 = static UTType.image.getter(v17);
          UTType.identifier.getter(v19);
          v20 = a1;
          v21 = v7;
          v22 = v9;
          v24 = v23;
          (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
          v25 = String._bridgeToObjectiveC()();
          v26 = v24;
          v9 = v22;
          v7 = v21;
          a1 = v20;
          v10 = v35;
          LOBYTE(v18) = objc_msgSend(v13, "hasItemConformingToTypeIdentifier:", v25, swift_bridgeObjectRelease(v26).n128_f64[0]);

          if ((v18 & 1) != 0)
            goto LABEL_12;
        }
        v27 = sub_100005ED8(0, &qword_100649BC8, NSURL_ptr);
        if ((objc_msgSend(v13, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v27)) & 1) != 0
          || (v28 = sub_100005ED8(0, (unint64_t *)&qword_100649BD0, NSUserActivity_ptr),
              (objc_msgSend(v13, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v28)) & 1) != 0))
        {
LABEL_12:

        }
        else
        {
          v31 = sub_100005ED8(0, (unint64_t *)&qword_100649BD8, NSString_ptr);
          v3 = objc_msgSend(v13, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v31));

          if ((v3 & 1) == 0)
          {

            goto LABEL_14;
          }
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v3 = (id)v41[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3);
        v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v40);
        specialized ContiguousArray._endMutation()(v30);
LABEL_14:
        ++v8;
        if (v12 == v7)
          return v41;
      }
      if (v8 < *(_QWORD *)(v10 + 16))
        break;
      __break(1u);
LABEL_23:
      if (a1 < 0)
        v33 = a1;
      else
        v33 = a1 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v7)
        return _swiftEmptyArrayStorage;
    }
    v11 = *(id *)(a1 + 8 * v8 + 32);
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_20;
    goto LABEL_7;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1002FD00C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v6 = v5;
  v37 = a5;
  v41 = a4;
  v10 = sub_10002A750((uint64_t *)&unk_100654930);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  __chkstk_darwin(v10);
  v42 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v43 = (uint64_t *)((char *)&v33 - v13);
  __chkstk_darwin(v14);
  v34 = (uint64_t)&v33 - v15;
  if (a1 != a2)
  {
    if (a2 >= (uint64_t)a1)
    {
      v39 = *(_QWORD *)(a3 + 16);
      v40 = v41 & 0xC000000000000001;
      v33 = v41 & 0xFFFFFFFFFFFFFF8;
      v16 = _swiftEmptyArrayStorage;
      v38 = a2;
      while ((uint64_t)a1 < a2)
      {
        if (v40)
        {
          v17 = v6;
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v41);
        }
        else
        {
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_23;
          if (a1 >= *(_QWORD *)(v33 + 16))
            goto LABEL_24;
          v17 = v6;
          v18 = *(id *)(v41 + 8 * a1 + 32);
        }
        v19 = v18;
        v44 = v39;
        __chkstk_darwin(v39);
        *(&v33 - 2) = (uint64_t)v19;
        swift_bridgeObjectRetain(v20);
        v21 = sub_10002A750(&qword_100655508);
        v22 = sub_100005ED8(0, (unint64_t *)&qword_100650570, UIDragItem_ptr);
        v23 = sub_100023FEC(&qword_100655510, &qword_100655508, (uint64_t)&protocol conformance descriptor for [A]);
        Sequence.firstMap<A>(_:)(&v45, sub_1002FD378, &v33 - 4, v21, v22, v23);
        v6 = v17;
        v24 = v44;

        swift_bridgeObjectRelease(v24);
        if (v45)
        {
          v25 = v37;
          v26 = *(int *)(v36 + 48);
          *v43 = v45;
          if ((a1 & 0x8000000000000000) != 0)
            goto LABEL_21;
          if (a1 >= *(_QWORD *)(v25 + 16))
            goto LABEL_22;
          v27 = (uint64_t)v43;
          v28 = (uint64_t)v43 + v26;
          v29 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          sub_10002B1E8(v25+ ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * a1, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v30 = v34;
          sub_10000F614(v27, v34, (uint64_t *)&unk_100654930);
          sub_10000F614(v30, v42, (uint64_t *)&unk_100654930);
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = (_QWORD *)sub_100455CB4(0, v16[2] + 1, 1, (unint64_t)v16);
          v32 = v16[2];
          v31 = v16[3];
          if (v32 >= v31 >> 1)
            v16 = (_QWORD *)sub_100455CB4(v31 > 1, v32 + 1, 1, (unint64_t)v16);
          v16[2] = v32 + 1;
          sub_10000F614(v42, (uint64_t)v16+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v32, (uint64_t *)&unk_100654930);
        }
        a2 = v38;
        if (v38 == ++a1)
          return;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
  }
}

_QWORD *sub_1002FD378@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;

  if (*result == *(_QWORD *)(v2 + 16))
  {
    v4 = (void *)result[1];
    result = v4;
  }
  else
  {
    v4 = 0;
  }
  *a2 = v4;
  return result;
}

uint64_t sub_1002FD3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_100647B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002FD410(void **a1)
{
  uint64_t v1;

  return sub_1002FB114(a1, *(_QWORD **)(v1 + 16)) & 1;
}

_QWORD *sub_1002FD42C(void *a1)
{
  uint64_t v1;

  return sub_1002FC110(a1, v1);
}

uint64_t sub_1002FD444()
{
  uint64_t v0;

  sub_100027F10((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002FD468(uint64_t a1)
{
  uint64_t v1;

  return sub_100089260(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1002FD480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_100027F10((_QWORD *)(v0 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v7 = type metadata accessor for REMHashtagLabelSpecifier(0);
      goto LABEL_6;
    case 2:

      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 0:
      v7 = type metadata accessor for DateComponents(0);
LABEL_6:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      break;
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1002FD534(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListMatchedAttributeValue(0) - 8) + 80);
  sub_100088B54(a1, (_QWORD *)(v1 + 16), v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_1002FD580()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002FD5A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10008908C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002FD5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        break;
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        break;
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  v24 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v24));
  return swift_deallocObject(v0, v25, v3 | 7);
}

uint64_t sub_1002FD97C(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100087C18(a1, v1 + v4, *v5, v5[1]);
}

void sub_1002FD9E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  sub_100087F30(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1002FDA1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FDA40(uint64_t a1)
{
  uint64_t v1;

  return sub_10008819C(a1, *(_QWORD *)(v1 + 16));
}

_QWORD *sub_1002FDA58(void *a1, char a2)
{
  uint64_t v2;

  return sub_1002FBD68(a1, a2 & 1, v2);
}

uint64_t sub_1002FDA64@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1002F8524(*a1, *(void (**)(uint64_t *, uint64_t, uint64_t, double))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1002FDAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_1002FDE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_100088670(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1002FDECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v1 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v7))
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload(v0 + v4, v8))
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          v9 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
          break;
        default:
          break;
      }
LABEL_22:
      v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v21 = (char *)v6 + *(int *)(v20 + 20);
      v22 = *((_QWORD *)v21 + 1);
      if (v22)
      {
        swift_bridgeObjectRelease(v22);
        sub_10003E2EC(*((void **)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), *((_QWORD *)v21 + 6), *((_QWORD *)v21 + 7), v21[64]);
        v23 = v21[120];
        if (v23 != 255)
          sub_10002B328(*((void **)v21 + 9), *((_QWORD *)v21 + 10), *((_QWORD *)v21 + 11), *((_QWORD *)v21 + 12), *((_QWORD *)v21 + 13), *((_QWORD *)v21 + 14), v23 & 1);
      }
      v13 = *(id *)((char *)v6 + *(int *)(v20 + 44));
      goto LABEL_26;
    case 2u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v10 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v10))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 3u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v11 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v11))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 4u:

      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20));
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload(v6, v12))
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            return swift_deallocObject(v0, v4 + v5, v3 | 7);
        }
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      v13 = (id)*v6;
      goto LABEL_26;
    case 7u:
      v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v0 + v4, 1, v14))
      {
        swift_bridgeObjectRelease(*v6);
        v15 = (char *)v6 + *(int *)(v14 + 20);
        v16 = type metadata accessor for REMHashtagLabelSpecifier(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      }
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20));
      v17 = v6[1];
      if (!v17)
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
      swift_bridgeObjectRelease(v17);
LABEL_16:
      v13 = (id)v6[2];
LABEL_26:

      break;
    case 8u:
      v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v0 + v4, 1, v18))
        return swift_deallocObject(v0, v4 + v5, v3 | 7);
LABEL_18:
      v19 = type metadata accessor for Date(0);
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
      break;
    case 9u:
      v6 = (_QWORD *)((char *)v6 + *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20));
      v19 = type metadata accessor for AnyTip(0);
      goto LABEL_20;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002FE280(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRRemindersListViewModel.Item(0) - 8) + 80);
  return sub_100088264(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1002FE2C8(void **a1)
{
  return sub_1002FD410(a1) & 1;
}

uint64_t sub_1002FE2F8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_1002B3758(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002FE3E0(unint64_t a1)
{
  return sub_1002FE5C4(a1, (uint64_t (*)(uint64_t))sub_1002B375C);
}

uint64_t sub_1002FE3EC(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1002B3798(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002FE4C8(unint64_t a1)
{
  return sub_1002FE4D4(a1, sub_1002B3758);
}

uint64_t sub_1002FE4D4(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  char v15;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      v11 = v7 + 8 * a1;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(_QWORD *)(v7 + 16) = v9;
      specialized Array._endMutation()(v13);
      return v12;
    }
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002FE5B8(unint64_t a1)
{
  return sub_1002FE5C4(a1, (uint64_t (*)(uint64_t))sub_1002B37D4);
}

uint64_t sub_1002FE5C4(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = a2(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 16 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 48), 16 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      *v2 = v5;
      return v10;
    }
  }
  v12 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v12, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002FE6A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  char v16;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_1002B3878(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  v13 = v7 - a1;
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    v16 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v16, 1046, 0);
    __break(1u);
    return result;
  }
  v14 = v11 + v10;
  if (v10 > 0 || v11 >= v11 + v10 + v10 * v13)
  {
    result = swift_arrayInitWithTakeFrontToBack(v11, v14, v13, v8);
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront(v11, v14);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_1002FE7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_100012DDC(v0, qword_100655540);
  v1 = sub_100012DC4(v0, (uint64_t)qword_100655540);
  if (qword_10063D610 != -1)
    swift_once(&qword_10063D610, sub_10002D530);
  v2 = sub_100012DC4(v0, (uint64_t)qword_100673780);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1002FE870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList) = 0;
  v5 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties;
  *(_QWORD *)(v2 + v5) = TTRRemindersListEditingSessionProperties.init()();
  v6 = v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  v7 = type metadata accessor for TTRRemindersListUndoContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames) = _swiftEmptyArrayStorage;
  sub_10001F580(a1, v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) = a2;
  return v2;
}

uint64_t sub_1002FE96C()
{
  uint64_t v0;

  sub_10001F544(v0 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties));
  sub_1000073A0(v0 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext, &qword_10063F270);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002FEA0C()
{
  return type metadata accessor for TTRRemindersListEditingSessionState(0);
}

uint64_t type metadata accessor for TTRRemindersListEditingSessionState(uint64_t a1)
{
  return sub_100007328(a1, (uint64_t *)&unk_100655598, (uint64_t)&nominal type descriptor for TTRRemindersListEditingSessionState);
}

void sub_1002FEA28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v2 = type metadata accessor for TTRRemindersListViewModel.Item(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10052DCA8;
    v6[2] = &unk_10052DCC0;
    v6[3] = &unk_10052DCC0;
    v6[4] = &unk_10052DCC0;
    v6[5] = &unk_10052DCD8;
    v6[6] = &unk_10052DCC0;
    v6[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[8] = &unk_10052DCD8;
    v6[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_1002FEAEC(319);
    if (v5 <= 0x3F)
    {
      v6[10] = *(_QWORD *)(v4 - 8) + 64;
      v6[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 80);
    }
  }
}

void sub_1002FEAEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1006555A8)
  {
    v2 = type metadata accessor for TTRRemindersListUndoContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1006555A8);
  }
}

uint64_t sub_1002FEB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  unint64_t v13;
  Swift::String v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void *object;
  uint64_t v30;
  double v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  uint64_t v38;
  double v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD v55[2];

  v1 = v0;
  v2 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002A750((uint64_t *)&unk_100654F80);
  v6 = swift_allocObject(v5, 144, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100520EB0;
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v54);
  v53 = 0xD000000000000011;
  v54 = 0x8000000100573FE0;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    v9 = (void *)0xE500000000000000;
    v10 = 0x65736C6166;
    v11 = 0x65736C6166;
    if (EnumCaseMultiPayload)
      goto LABEL_5;
  }
  else
  {
    v9 = (void *)0xE400000000000000;
    v10 = 1702195828;
  }
  sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  v11 = v10;
LABEL_5:
  v12._countAndFlagsBits = v11;
  v12._object = v9;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v9);
  v13 = v54;
  *(_QWORD *)(v6 + 32) = v53;
  *(_QWORD *)(v6 + 40) = v13;
  v53 = 0;
  v54 = 0xE000000000000000;
  v14._countAndFlagsBits = 0x7461745365766173;
  v14._object = (void *)0xEA00000000003D65;
  String.append(_:)(v14);
  LOBYTE(v55[0]) = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState);
  _print_unlocked<A, B>(_:_:)(v55, &v53, &type metadata for TTRRemindersListEditingSessionState.SaveState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15 = v54;
  *(_QWORD *)(v6 + 48) = v53;
  *(_QWORD *)(v6 + 56) = v15;
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v54);
  v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion);
  v53 = 0xD000000000000014;
  v54 = 0x8000000100574000;
  if (v16)
    v17 = 1702195828;
  else
    v17 = 0x65736C6166;
  if (v16)
    v18 = 0xE400000000000000;
  else
    v18 = 0xE500000000000000;
  v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease(v18);
  v20 = v54;
  *(_QWORD *)(v6 + 64) = v53;
  *(_QWORD *)(v6 + 72) = v20;
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v54);
  v53 = 0xD000000000000018;
  v54 = 0x8000000100574020;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid))
    v21 = 1702195828;
  else
    v21 = 0x65736C6166;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid))
    v22 = 0xE400000000000000;
  else
    v22 = 0xE500000000000000;
  v23 = v22;
  String.append(_:)(*(Swift::String *)&v21);
  swift_bridgeObjectRelease(v22);
  v24 = v54;
  *(_QWORD *)(v6 + 80) = v53;
  *(_QWORD *)(v6 + 88) = v24;
  v53 = 0;
  v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v54);
  strcpy((char *)v55, "acquirerNames=");
  HIBYTE(v55[1]) = -18;
  v25 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v53, 0, 0);
  v26 = *v25;
  swift_bridgeObjectRetain(*v25);
  v28._countAndFlagsBits = Array.description.getter(v27, &type metadata for String);
  object = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(object);
  v30 = v55[1];
  *(_QWORD *)(v6 + 96) = v55[0];
  *(_QWORD *)(v6 + 104) = v30;
  v55[0] = 0;
  v55[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v55[1]).n128_u64[0];
  v55[0] = 0xD000000000000013;
  v55[1] = 0x8000000100574040;
  v32 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "objectID", v31);
  v33 = objc_msgSend(v32, "description");
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v37._countAndFlagsBits = v34;
  v37._object = v36;
  String.append(_:)(v37);

  swift_bridgeObjectRelease(v36);
  v38 = v55[1];
  *(_QWORD *)(v6 + 112) = v55[0];
  *(_QWORD *)(v6 + 120) = v38;
  v55[0] = 0;
  v55[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  *(_QWORD *)&v39 = swift_bridgeObjectRelease(v55[1]).n128_u64[0];
  v55[0] = 0xD000000000000016;
  v55[1] = 0x8000000100574060;
  v40 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  if (v40)
  {
    v41 = objc_msgSend(v40, "objectID", v39);
    v42 = objc_msgSend(v41, "description");

    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

  }
  else
  {
    v45 = (void *)0xE300000000000000;
    v43 = 7104878;
  }
  v46._countAndFlagsBits = v43;
  v46._object = v45;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v45);
  v47 = v55[1];
  *(_QWORD *)(v6 + 128) = v55[0];
  *(_QWORD *)(v6 + 136) = v47;
  v55[0] = v6;
  v48 = sub_10002A750(&qword_1006466D0);
  v49 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
  v50 = BidirectionalCollection<>.joined(separator:)(2604, 0xE200000000000000, v48, v49);
  swift_bridgeObjectRelease(v6);
  return v50;
}

uint64_t sub_1002FF01C()
{
  return sub_1002FEB40();
}

uint64_t sub_1002FF03C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v31[24];
  __int128 v32;
  __int128 v33;
  void *v34;

  v5 = v4;
  v10 = sub_10002A750(&qword_10063F270);
  v11 = __chkstk_darwin(v10);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  UUID.init()(v11);
  v14 = v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate;
  *(_QWORD *)(v14 + 8) = 0;
  swift_unknownObjectWeakInit(v14, 0);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) = 0;
  v15 = (_QWORD *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  *v15 = a1;
  v15[1] = a2;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState) = a3;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) = a4;
  v16 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100521140;
  v18 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)&v32 = v17;
  specialized Array._endMutation()(v17);
  v19 = v32;
  v20 = a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext, v31, 0, 0);
  sub_10030685C(v20, (uint64_t)v13);
  v21 = type metadata accessor for TTRRemindersListUndoContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v13, 1, v21) == 1)
  {
    swift_retain();
    v22 = v18;
    sub_1000073A0((uint64_t)v13, &qword_10063F270);
    v32 = 0u;
    v33 = 0u;
    v34 = 0;
  }
  else
  {
    *((_QWORD *)&v33 + 1) = v21;
    v34 = &protocol witness table for TTRRemindersListUndoContext;
    v23 = sub_100028D70(&v32);
    sub_10001F580((uint64_t)v13, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
    swift_retain();
    v24 = v18;
  }
  v25 = type metadata accessor for TTRRemindersListChangeItemAttributeEditorProvider(0);
  swift_allocObject(v25, 80, 7);
  v26 = TTRRemindersListChangeItemAttributeEditorProvider.init(reminderChangeItems:undoContext:)(v19, &v32);
  *((_QWORD *)&v33 + 1) = v25;
  v34 = &protocol witness table for TTRRemindersListChangeItemAttributeEditorProvider;
  *(_QWORD *)&v32 = v26;
  v27 = type metadata accessor for TTRRemindersListAttributeEditor(0);
  swift_allocObject(v27, 56, 7);
  swift_retain();
  v28 = TTRRemindersListAttributeEditor.init(editorProvider:)(&v32);
  swift_release();
  swift_release();
  *(_QWORD *)(v5
            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_internalAttributeEditor) = v28;
  return v5;
}

uint64_t sub_1002FF29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) & 1) == 0
    && (*(_BYTE *)(v0
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) & 1) != 0)
  {
    sub_1002FF9C0(0);
  }
  v1 = v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                                      + 8));
  swift_release();
  sub_1000381C8(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002FF358()
{
  return type metadata accessor for EditingSessionImp(0);
}

uint64_t type metadata accessor for EditingSessionImp(uint64_t a1)
{
  return sub_100007328(a1, qword_1006556E0, (uint64_t)&nominal type descriptor for EditingSessionImp);
}

uint64_t sub_1002FF374(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10052DD28;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = &unk_10052DCC0;
    v4[4] = &unk_10052DD40;
    v4[5] = &unk_10052DCC0;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

double sub_1002FF410(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void *v31;
  double result;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;

  v49 = a1;
  v2 = type metadata accessor for TTRRemindersListUndoContext(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v6;
  v48 = v1;
  v7 = *(char **)(v1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  v8 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList;
  v9 = *(void **)&v7[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList];
  if (v10)
  {
    v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v11 = v9;
    v12 = objc_msgSend(v49, "objectID");
    v13 = v12;
    if (!v9)
    {
      if (!v12)
        goto LABEL_16;
      goto LABEL_11;
    }
  }
  else
  {
    v11 = v9;
    if (!v9)
      goto LABEL_16;
    v46 = v5;
    v13 = 0;
  }
  v14 = objc_msgSend(v11, "objectID");
  v15 = v14;
  if (!v13)
  {
    if (v14)
      goto LABEL_13;
LABEL_16:

    return result;
  }
  if (!v14)
  {
LABEL_11:
    v15 = v13;
LABEL_13:

    goto LABEL_14;
  }
  sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v16 = v13;
  v17 = static NSObject.== infix(_:_:)(v16, v15);

  if ((v17 & 1) != 0)
    goto LABEL_16;
LABEL_14:
  v18 = *(void **)&v7[v8];
  v19 = v49;
  *(_QWORD *)&v7[v8] = v49;
  v20 = v19;

  v21 = type metadata accessor for EditingSessionImp(0);
  v22 = TTRRemindersListEditingSession.reminderAndList.getter(v50, v21, &off_1005FFFC0);
  TTRReminderProtocolWithPendingMove.effectiveParentList.getter(&v53, v22);
  sub_1003079C4((uint64_t)v50);
  v23 = &unk_100673000;
  if (v54)
  {
    sub_10002E37C(&v53, (uint64_t)v50);
    v24 = *(void **)&v7[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem];
    v49 = v7;
    v25 = v51;
    v26 = v52;
    sub_10001413C(v50, v51);
    v27 = v20;
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 64);
    v29 = v24;
    v7 = v49;
    v30 = v28(v25, v26);
    v20 = v27;
    v31 = (void *)v30;
    objc_msgSend(v29, "updateAccountCapabilities:", v30);

    v23 = (_QWORD *)&unk_100673000;
    sub_100027F10(v50);
  }
  else
  {
    sub_1000073A0((uint64_t)&v53, &qword_100649C80);
  }
  v33 = *(id *)&v7[v23[264]];
  v34 = objc_msgSend(v33, "objectID");
  v51 = sub_100005ED8(0, qword_100646430, REMObjectID_ptr);
  v50[0] = v34;
  v35 = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
  v54 = sub_10002A750(&qword_100655920);
  *(_QWORD *)&v53 = v35;
  v36 = TTRUndoNavigationEditingTarget.init(id:itemType:)(v50, &v53);

  v37 = &v7[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext];
  v38 = swift_beginAccess(&v7[OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext], v50, 0, 0);
  v39 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v37, 1, v47, v38))
  {
    swift_bridgeObjectRelease(v36);

  }
  else
  {
    v40 = (uint64_t)v37;
    v41 = (uint64_t)v46;
    sub_10002B1E8(v40, (uint64_t)v46, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
    v42 = swift_allocObject(&unk_100600468, 24, 7);
    swift_weakInit(v42 + 16, v48);
    v43 = swift_allocObject(&unk_100600490, 32, 7);
    *(_QWORD *)(v43 + 16) = v42;
    *(_QWORD *)(v43 + 24) = v9;
    v44 = v9;
    swift_retain();
    TTRUndoContext.registerUndo(forEditing:action:)(v36, sub_1003079FC, v43, v39, &protocol witness table for TTRRemindersListUndoContext);

    swift_bridgeObjectRelease(v36);
    swift_release();
    sub_10001F544(v41, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1002FF834(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  double result;
  id v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    v6 = a3;
    sub_1002FF410(a3);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_1002FF8A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v2 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) == 1)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100012DC4(v4, (uint64_t)qword_100655540);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.fault.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "attributeEditor called after -[TTRRemindersListEditingSession finish] is called", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

  }
  v9 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_internalAttributeEditor);
  a1[3] = type metadata accessor for TTRRemindersListAttributeEditor(0);
  a1[4] = &protocol witness table for TTRRemindersListAttributeEditor;
  *a1 = v9;
  return swift_retain();
}

void sub_1002FF9C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v11;
  NSObject *oslog;

  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100012DC4(v7, (uint64_t)qword_100655540);
    oslog = Logger.logObject.getter(v8);
    v4 = static os_log_type_t.fault.getter(oslog);
    if (!os_log_type_enabled(oslog, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) & 1) != 0)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100655540);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.fault.getter(oslog);
    if (!os_log_type_enabled(oslog, v4))
      goto LABEL_12;
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    v6 = "-[TTRRemindersListEditingSession finish] called twice";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, v6, v5, 2u);
    swift_slowDealloc(v5, -1, -1);
LABEL_12:

    return;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) = 1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  if (Strong)
  {
    v11 = Strong;
    sub_100302768(v1, a1);
    swift_unknownObjectRelease(v11);
  }
}

void *sub_1002FFBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_100655540);
    v4 = Logger.logObject.getter(v9);
    v5 = static os_log_type_t.fault.getter(v4);
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  v1 = OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) & 1) != 0)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100655540);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.fault.getter(v4);
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "-[TTRRemindersListEditingSession finishAndForceSave] called after calling finish";
    goto LABEL_11;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  if (Strong)
  {
    v13 = Strong;
    *(_BYTE *)(v0 + v1) = 1;
    v10 = sub_1003030DC(v0);
    swift_unknownObjectRelease(v13);
    return v10;
  }
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100012DC4(v14, (uint64_t)qword_100655540);
  v4 = Logger.logObject.getter(v15);
  v5 = static os_log_type_t.fault.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "-[TTRRemindersListEditingSession finishAndForceSave] missing delegate";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
LABEL_12:

  return 0;
}

uint64_t sub_1002FFDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_100655540);
    v4 = Logger.logObject.getter(v9);
    v5 = static os_log_type_t.fault.getter(v4);
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "Calling finish on this editing session is not allowed";
    goto LABEL_11;
  }
  v1 = OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) & 1) != 0)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100012DC4(v2, (uint64_t)qword_100655540);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.fault.getter(v4);
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "-[TTRRemindersListEditingSession finishAndForceSave] called after calling finish";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1, -1);
LABEL_12:

    return 0;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  if (!Strong)
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100012DC4(v14, (uint64_t)qword_100655540);
    v4 = Logger.logObject.getter(v15);
    v5 = static os_log_type_t.fault.getter(v4);
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    v7 = "-[TTRRemindersListEditingSession finishAndForceSave] missing delegate";
    goto LABEL_11;
  }
  v12 = Strong;
  *(_BYTE *)(v0 + v1) = 1;
  v13 = sub_1003037B0(v0);
  swift_unknownObjectRelease(v12);
  return v13 & 1;
}

uint64_t sub_10030004C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_id;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100300090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002B1E8(*(_QWORD *)(v1+ OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)+ OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, a1, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1003000C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                                     + 8));
  return v1;
}

id sub_100300100@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(*(_QWORD *)(v1
                         + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
             + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  a1[3] = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
  a1[4] = &protocol witness table for REMReminderChangeItem;
  *a1 = v4;
  return v4;
}

id sub_10030016C()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                           + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem));
}

void *sub_100300188()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(v0
                            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  v2 = v1;
  return v1;
}

double (*sub_1003001C4(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  a1[1] = v1;
  v2 = *(void **)(*(_QWORD *)(v1
                            + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  *a1 = v2;
  v3 = v2;
  return sub_100300214;
}

double sub_100300214(char **a1, char a2)
{
  char *v2;
  double result;
  char *v4;

  v2 = *a1;
  if ((a2 & 1) == 0)
    return sub_1002FF410(*a1);
  v4 = v2;
  sub_1002FF410(v2);

  return result;
}

uint64_t sub_10030026C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0
                                                        + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)
                                            + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties));
}

uint64_t sub_100300288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*sub_1003002AC(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  v4 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_sharedProperties;
  a1[1] = v3;
  a1[2] = v4;
  v5 = *(_QWORD *)(v3 + v4);
  *a1 = v5;
  swift_bridgeObjectRetain(v5);
  return sub_1003002FC;
}

uint64_t sub_1003002FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v1 = a1[2];
  v3 = *a1;
  v4 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = v3;
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_100300310(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate);
  if (result)
  {
    v4 = result;
    sub_100302DC8(v1, a1);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void *sub_100300374()
{
  return sub_1002FFBA0();
}

uint64_t sub_10030038C()
{
  return sub_1002FFDF0() & 1;
}

uint64_t sub_1003003A4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char *v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  void *object;
  unint64_t v63;
  id v64;
  NSString v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  _QWORD **v75;
  _QWORD *v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[24];
  unint64_t v97;
  unint64_t v98;
  _BYTE v99[32];

  v92 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v92);
  v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750((uint64_t *)&unk_100665590);
  __chkstk_darwin(v9);
  v90 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMFeatureFlags(0);
  v94 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10002A750(&qword_10063F270);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v85 - v21;
  v89 = a1;
  v93 = a3;
  v95 = v3;
  v23 = sub_100300AE8(a1, a2, a3);
  if (!v23)
    return 0;
  v25 = v23;
  v91 = a2;
  v88 = v8;
  if ((v24 & 1) != 0)
  {
    v26 = v95;
    v27 = v95 + 72;
    swift_beginAccess(v95 + 72, v96, 0, 0);
    v28 = *(_QWORD *)(v26 + 72);
    swift_retain();
    swift_bridgeObjectRetain(v28);
    v30 = sub_10007324C(v29, v25);
    v32 = v31;
    swift_bridgeObjectRelease(v28);
    swift_release();
    if ((v32 & 1) == 0)
    {
      if (qword_10063D658 != -1)
        swift_once(&qword_10063D658, sub_1002FE7E0);
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100012DC4(v33, (uint64_t)qword_100655540);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        v86 = (uint64_t (*)(char *, uint64_t, uint64_t))v30;
        v38 = v20;
        v39 = v37;
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Reminder Editing Session: Removing editing session from needsSave pool", v37, 2u);
        v40 = v39;
        v20 = v38;
        v30 = (unint64_t)v86;
        swift_slowDealloc(v40, -1, -1);
      }

      swift_beginAccess(v27, v99, 33, 0);
      sub_1002FE4D4(v30, sub_1002B3758);
      swift_endAccess(v99);
      swift_release();
    }
  }
  v87 = v20;
  v41 = v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
  swift_beginAccess(v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext, v99, 0, 0);
  sub_10030685C(v41, (uint64_t)v22);
  v42 = type metadata accessor for TTRRemindersListUndoContext(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v22, 1, v42);
  sub_1000073A0((uint64_t)v22, &qword_10063F270);
  v45 = enum case for REMFeatureFlags.undoByAttribute(_:);
  v46 = v94;
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 104);
  if (v44 == 1)
  {
    v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 104);
    v48 = v47(v16, enum case for REMFeatureFlags.undoByAttribute(_:), v14);
    v49 = REMFeatureFlags.isEnabled.getter(v48);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v14);
    if ((v49 & 1) != 0)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v95 + 16);
      v51 = (uint64_t)v87;
      if (Strong)
      {
        v52 = Strong;
        v53 = swift_unknownObjectWeakLoadStrong(Strong + 16);
        if (v53)
        {
          v55 = v53;
          v56 = *(_QWORD *)(v52 + 24);
          ObjectType = swift_getObjectType(v53, v54);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v56 + 48))(v52, &off_100606F60, ObjectType, v56);
          swift_unknownObjectRelease(v52);
          swift_unknownObjectRelease(v55);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v51, 1, 1, v42);
          swift_unknownObjectRelease(v52);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v87, 1, 1, v42);
      }
    }
    else
    {
      v97 = 0;
      v98 = 0xE000000000000000;
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease(v98);
      v97 = 0xD00000000000001FLL;
      v98 = 0x8000000100573FC0;
      v60 = TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v59);
      v61._countAndFlagsBits = TTRRemindersListViewModel.ItemID.description.getter(v60);
      object = v61._object;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(object);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v63 = v98;
      v64 = objc_allocWithZone((Class)TTRUndoManager);
      v65 = String._bridgeToObjectiveC()();
      v66 = objc_msgSend(v64, "initWithDebugIdentifier:", v65, swift_bridgeObjectRelease(v63).n128_f64[0]);

      v67 = type metadata accessor for TTRListType(0);
      v68 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v90, 1, 1, v67);
      v51 = (uint64_t)v87;
      TTRRemindersListUndoContext.init(undoManager:listType:)(v66, v68);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v51, 0, 1, v42);
    }
    swift_beginAccess(v41, &v97, 33, 0);
    sub_1003068A4(v51, v41);
    swift_endAccess(&v97);
    v46 = v94;
    v47 = v86;
  }
  v69 = v47(v16, v45, v14);
  v70 = REMFeatureFlags.isEnabled.getter(v69);
  v71 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v16, v14);
  v72 = v93;
  if ((v70 & 1) != 0)
  {
    v73 = (uint64_t)v88;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v71);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v73, v92);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
        sub_10001F544((uint64_t)v88, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    else
    {
      sub_10001F544(v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      sub_100301B10(v25);
    }
  }
  v75 = (_QWORD **)(v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess(v25 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v97, 33, 0);
  v76 = *v75;
  swift_bridgeObjectRetain(v72);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v76);
  *v75 = v76;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v76 = sub_10001D840(0, v76[2] + 1, 1, v76);
    *v75 = v76;
  }
  v79 = v76[2];
  v78 = v76[3];
  if (v79 >= v78 >> 1)
  {
    v76 = sub_10001D840((_QWORD *)(v78 > 1), v79 + 1, 1, v76);
    *v75 = v76;
  }
  v76[2] = v79 + 1;
  v80 = &v76[2 * v79];
  v81 = v91;
  v80[4] = v91;
  v80[5] = v72;
  swift_endAccess(&v97);
  v82 = type metadata accessor for EditingSessionImp(0);
  swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
  swift_bridgeObjectRetain(v72);
  v58 = sub_1002FF03C(v81, v72, v25, 1);
  v83 = v58 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_delegate;
  *(_QWORD *)(v83 + 8) = &off_1005FFF98;
  swift_unknownObjectWeakAssign(v83, v95);
  return v58;
}

uint64_t sub_100300AE8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a3;
  v48 = a2;
  v5 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  v6 = __chkstk_darwin(v5);
  v44 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v45 = (char *)v42 - v8;
  v47 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v47);
  v46 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v10 = *(_QWORD *)(v49 - 8);
  v11 = __chkstk_darwin(v49);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)v42 - v15;
  v17 = __chkstk_darwin(v14);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)v42 - v19;
  __chkstk_darwin(v18);
  v50 = (uint64_t)v42 - v21;
  v23 = *(_QWORD *)(v3 + 48);
  v22 = *(_QWORD *)(v3 + 56);
  v43 = v3;
  ObjectType = swift_getObjectType(v23, v24);
  v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 464))(a1, ObjectType, v22);
  if (!v51)
  {
    v42[1] = v20;
    v42[2] = v13;
    v42[0] = v10;
    v42[3] = v16;
    v42[4] = ObjectType;
    v42[5] = v23;
    v50 = v22;
    v39 = v46;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(0);
    v40 = (char *)&loc_100300E94 + 4 * word_10052DC60[swift_getEnumCaseMultiPayload(v39, v47)];
    __asm { BR              X10 }
  }
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v26 = type metadata accessor for Logger(0);
  sub_100012DC4(v26, (uint64_t)qword_100655540);
  v27 = a1;
  v28 = v50;
  sub_10002B1E8(v27, v50, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v29 = v52;
  v30 = swift_bridgeObjectRetain_n(v52, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc(22, -1);
    v34 = swift_slowAlloc(64, -1);
    v54 = v34;
    *(_DWORD *)v33 = 136315394;
    swift_bridgeObjectRetain(v29);
    v53 = sub_100027E40(v48, v29, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease_n(v29, 3);
    *(_WORD *)(v33 + 12) = 2080;
    v35 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v36 = TTRTreeStorageItem.treeItemDescription.getter(v49, v35);
    v38 = v37;
    v53 = sub_100027E40(v36, v37, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v33 + 14, v33 + 22);
    swift_bridgeObjectRelease(v38);
    sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Reminder Editing Session: Reusing existing session {acquirer: %s, item: %s}", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy(v34, 2, &type metadata for Any[8]);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v29, 2);
    sub_10001F544(v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  return v51;
}

double sub_100301B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  void (*v28)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10002A750(&qword_100655900);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10002A750(&qword_10063F270);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
  {
    v30 = type metadata accessor for TTRRemindersListUndoContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v14, 1, 1, v30);
LABEL_7:
    sub_1000073A0((uint64_t)v14, &qword_10063F270);
    return result;
  }
  v16 = Strong;
  v49 = v8;
  v17 = swift_unknownObjectWeakLoadStrong(Strong + 16);
  if (v17)
  {
    v19 = v17;
    v50 = (uint64_t)v7;
    v20 = v4;
    v21 = v5;
    v22 = v11;
    v23 = v2;
    v24 = v9;
    v25 = a1;
    v26 = *(_QWORD *)(v16 + 24);
    ObjectType = swift_getObjectType(v17, v18);
    v28 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v26 + 48);
    v29 = v26;
    a1 = v25;
    v9 = v24;
    v2 = v23;
    v11 = v22;
    v5 = v21;
    v4 = v20;
    v7 = (char *)v50;
    v28(v16, &off_100606F60, ObjectType, v29);
    swift_unknownObjectRelease(v16);
    v16 = v19;
  }
  else
  {
    v31 = type metadata accessor for TTRRemindersListUndoContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
  }
  swift_unknownObjectRelease(v16);
  v32 = type metadata accessor for TTRRemindersListUndoContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v14, 1, v32) == 1)
    goto LABEL_7;
  v34 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {

  }
  else
  {
    v50 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation;
    v35 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v48 = a1;
    v36 = TTRUndoManagerWillRegisterUndoNotification;
    v37 = v34;
    NSNotificationCenter.publisher(for:object:)(v36, v34);

    v38 = sub_1000175C8(&qword_100655908, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    Publisher.first()(v4, v38);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v39 = swift_allocObject(&unk_100600058, 24, 7);
    swift_weakInit(v39 + 16, v2);
    v40 = swift_allocObject(&unk_100600080, 24, 7);
    v41 = v48;
    swift_weakInit(v40 + 16, v48);
    v42 = swift_allocObject(&unk_1006000A8, 32, 7);
    *(_QWORD *)(v42 + 16) = v39;
    *(_QWORD *)(v42 + 24) = v40;
    v43 = sub_100023FEC(&qword_100655910, &qword_100655900, (uint64_t)&protocol conformance descriptor for Publishers.First<A>);
    v44 = v49;
    v45 = Publisher<>.sink(receiveValue:)(sub_1003069CC, v42, v49, v43);

    v46 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v44, v46);
    *(_QWORD *)(v41 + v50) = v45;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100301EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    v6 = a3 + 16;
    swift_beginAccess(v6, v22, 0, 0);
    Strong = swift_weakLoadStrong(v6);
    if (Strong)
    {
      v8 = Strong;
      if (qword_10063D658 != -1)
        swift_once(&qword_10063D658, sub_1002FE7E0);
      v9 = type metadata accessor for Logger(0);
      sub_100012DC4(v9, (uint64_t)qword_100655540);
      v10 = swift_retain_n(v8, 2);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(12, -1);
        v14 = swift_slowAlloc(32, -1);
        *(_DWORD *)v13 = 136315138;
        v21 = v14;
        v15 = type metadata accessor for TTRRemindersListViewModel.Item(0);
        v16 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
        v17 = TTRTreeStorageItem.treeItemDescription.getter(v15, v16);
        v19 = v18;
        v20 = sub_100027E40(v17, v18, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v13 + 4, v13 + 12);
        swift_release_n(v8, 2);
        swift_bridgeObjectRelease(v19);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Reminder Editing Session: detected first edit {item: %s}", v13, 0xCu);
        swift_arrayDestroy(v14, 1, &type metadata for Any[8]);
        swift_slowDealloc(v14, -1, -1);
        swift_slowDealloc(v13, -1, -1);

      }
      else
      {

        swift_release_n(v8, 2);
      }
      sub_100302114(v8);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100302114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char isEscapingClosureAtFileLocation;
  uint64_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_10002A750(&qword_10063F270);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
  {
    v14 = type metadata accessor for TTRRemindersListUndoContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
LABEL_7:
    sub_1000073A0((uint64_t)v6, &qword_10063F270);
    return;
  }
  v8 = Strong;
  v9 = swift_unknownObjectWeakLoadStrong(Strong + 16);
  if (v9)
  {
    v11 = v9;
    v12 = *(_QWORD *)(v8 + 24);
    ObjectType = swift_getObjectType(v9, v10);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 48))(v8, &off_100606F60, ObjectType, v12);
    swift_unknownObjectRelease(v8);
    v8 = v11;
  }
  else
  {
    v15 = type metadata accessor for TTRRemindersListUndoContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  }
  swift_unknownObjectRelease(v8);
  v16 = type metadata accessor for TTRRemindersListUndoContext(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v6, 1, v16) == 1)
    goto LABEL_7;
  v17 = (void *)TTRRemindersListUndoContext.undoManager.getter();
  sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
  v18 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) & 1) != 0)
    goto LABEL_16;
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v19 = type metadata accessor for Logger(0);
  sub_100012DC4(v19, (uint64_t)qword_100655540);
  v20 = swift_retain_n(a1, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v40 = v17;
    *(_DWORD *)v23 = 136315138;
    aBlock[0] = v24;
    v39 = v23 + 4;
    v25 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v26 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v27 = TTRTreeStorageItem.treeItemDescription.getter(v25, v26);
    v29 = v28;
    v41 = sub_100027E40(v27, v28, aBlock);
    v17 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock, v39, v23 + 12);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Reminder Editing Session: register undo for adding new reminder {item: %s}", v23, 0xCu);
    swift_arrayDestroy(v24, 1, &type metadata for Any[8]);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  *(_BYTE *)(a1 + v18) = 1;
  v30 = (void *)objc_opt_self(TTRUndoManager);
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v34 = swift_allocObject(&unk_1006000D0, 32, 7);
  *(_QWORD *)(v34 + 16) = a1;
  *(_QWORD *)(v34 + 24) = v2;
  v35 = swift_allocObject(&unk_1006000F8, 32, 7);
  *(_QWORD *)(v35 + 16) = sub_1003069D8;
  *(_QWORD *)(v35 + 24) = v34;
  aBlock[4] = (uint64_t)sub_10001B278;
  aBlock[5] = v35;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10001B258;
  aBlock[3] = (uint64_t)&unk_100600110;
  v36 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  objc_msgSend(v30, "withActionName:block:", v33, v36, swift_release().n128_f64[0]);

  _Block_release(v36);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v35, "", 109, 498, 85, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    NSUndoManager.addUndoGroupBoundary()();
    swift_release();
LABEL_16:

    return;
  }
  __break(1u);
}

void sub_100302584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;

  v7 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "objectID");
  v4 = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 40);
  ObjectType = swift_getObjectType(v4, v5);
  (*(void (**)(id, uint64_t, uint64_t))(v3 + 224))(v7, ObjectType, v3);

}

uint64_t sub_1003025F0()
{
  _QWORD *v0;

  sub_1000381C8((uint64_t)(v0 + 2));
  swift_unknownObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[6]);
  swift_release();
  swift_bridgeObjectRelease(v0[9]);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for TTRRemindersListEditingSessionProvider()
{
  return objc_opt_self(_TtC9Reminders38TTRRemindersListEditingSessionProvider);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListEditingSessionState.SaveState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003026A0 + 4 * byte_10052DC6D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003026D4 + 4 * byte_10052DC68[v4]))();
}

uint64_t sub_1003026D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003026DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003026E4);
  return result;
}

uint64_t sub_1003026F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003026F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003026FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100302704(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListEditingSessionState.SaveState()
{
  return &type metadata for TTRRemindersListEditingSessionState.SaveState;
}

unint64_t sub_100302724()
{
  unint64_t result;

  result = qword_1006558F8;
  if (!qword_1006558F8)
  {
    result = swift_getWitnessTable(&unk_10052DE34, &type metadata for TTRRemindersListEditingSessionState.SaveState);
    atomic_store(result, (unint64_t *)&qword_1006558F8);
  }
  return result;
}

void sub_100302768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  _QWORD v62[2];
  uint64_t v63;
  char *v64;
  char v65[24];
  uint64_t v66[3];
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _BYTE v70[16];

  v3 = v2;
  v6 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100012DC4(v9, (uint64_t)qword_100655540);
  v11 = swift_retain_n(a1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v62[1] = v10;
    v15 = v14;
    v16 = swift_slowAlloc(64, -1);
    v62[0] = a2;
    v17 = v16;
    v66[0] = v16;
    *(_DWORD *)v15 = 136315394;
    v63 = v6;
    v64 = v8;
    v18 = v2;
    v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    v19 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain(v19);
    v69 = sub_100027E40(v20, v19, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v15 + 12) = 2080;
    v21 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v22 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v23 = TTRTreeStorageItem.treeItemDescription.getter(v21, v22);
    v25 = v24;
    v69 = sub_100027E40(v23, v24, v66);
    v3 = v18;
    v6 = v63;
    v8 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v15 + 14, v15 + 22);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Reminder Editing Session: finish {acquirer: %s, item: %s}", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v17, 2, &type metadata for Any[8]);
    v26 = v17;
    a2 = v62[0];
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) == 1
    && sub_1003069F0(a1))
  {
    v27 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
    if ((*(_QWORD *)TTRRemindersListEditingSessionFinishingOption.markedForDeletion.unsafeMutableAddressor() & ~a2) == 0)
      *(_BYTE *)(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion) = 1;
    if ((*(_QWORD *)TTRRemindersListEditingSessionFinishingOption.doNotSave.unsafeMutableAddressor() & ~a2) == 0)
      *(_BYTE *)(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave) = 1;
    if ((*(_QWORD *)TTRRemindersListEditingSessionFinishingOption.deletesIfTitleIsInvalid.unsafeMutableAddressor() & ~a2) == 0)
      *(_BYTE *)(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid) = 1;
    v28 = v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
    swift_beginAccess(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v69, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)v28 + 16))
    {
      v30 = (_QWORD *)(v3 + 72);
      swift_beginAccess(v3 + 72, v65, 0, 0);
      v31 = *(_QWORD *)(v3 + 72);
      swift_retain();
      swift_bridgeObjectRetain(v31);
      sub_10007324C(v32, v27);
      v34 = v33;
      swift_bridgeObjectRelease(v31);
      swift_release();
      if ((v34 & 1) != 0)
      {
        swift_beginAccess(v3 + 72, v66, 33, 0);
        v35 = swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
        v37 = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v36 = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v37 >= v36 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
        v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v27);
        specialized Array._endMutation()(v38);
        swift_endAccess(v66);
        v39._object = (void *)0x80000001005740D0;
        v39._countAndFlagsBits = 0xD00000000000001DLL;
        TTRDeferredAction.scheduleNextRunLoop(reason:)(v39);
      }
    }
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v29);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!(_DWORD)EnumCaseMultiPayload)
        EnumCaseMultiPayload = sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      v55 = Logger.logObject.getter(EnumCaseMultiPayload);
      v56 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Reminder Editing Session: about to donate reminder update", v57, 2u);
        swift_slowDealloc(v57, -1, -1);
      }

      type metadata accessor for RDIDispatchQueue(0);
      v58 = static RDIDispatchQueue.utilityQueue.getter();
      v59 = type metadata accessor for TTRRemindersInteraction(0);
      swift_allocObject(v59, 24, 7);
      TTRRemindersInteraction.init(queue:)(v58);
      v60 = *(void **)(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      v67 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      v68 = &protocol witness table for REMReminderChangeItem;
      v66[0] = (uint64_t)v60;
      v61 = v60;
      TTRRemindersInteraction.donateReminderUpdate(_:)(v66);
      swift_release();
      sub_100027F10(v66);
    }
    else
    {
      sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      type metadata accessor for RDIDispatchQueue(0);
      v41 = static RDIDispatchQueue.utilityQueue.getter();
      v42 = type metadata accessor for TTRRemindersInteraction(0);
      swift_allocObject(v42, 24, 7);
      TTRRemindersInteraction.init(queue:)(v41);
      v43 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem;
      v44 = *(void **)(v27 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
      v67 = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
      v68 = &protocol witness table for REMReminderChangeItem;
      v66[0] = (uint64_t)v44;
      v45 = v44;
      TTRRemindersInteraction.donateReminderCreation(_:)(v66);
      swift_release();
      sub_100027F10(v66);
      Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
      if (Strong)
      {
        v47 = Strong;
        v48 = *(_QWORD *)(v27 + v43);
        v49 = swift_unknownObjectWeakLoadStrong(Strong + 16);
        if (v49)
        {
          v51 = v49;
          v52 = *(_QWORD *)(v47 + 24);
          ObjectType = swift_getObjectType(v49, v50);
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v52 + 64))(v47, &off_100606F60, v48, ObjectType, v52);
          swift_unknownObjectRelease(v47);
          v54 = v51;
        }
        else
        {
          v54 = v47;
        }
        swift_unknownObjectRelease(v54);
      }
    }
  }
}

uint64_t sub_100302DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v5 = type metadata accessor for Logger(0);
  sub_100012DC4(v5, (uint64_t)qword_100655540);
  v6 = swift_retain_n(a1, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v29 = a2;
    v10 = swift_slowAlloc(64, -1);
    v31 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    v12 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain(v12);
    v30 = sub_100027E40(v11, v12, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v9 + 12) = 2080;
    v13 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v14 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v15 = TTRTreeStorageItem.treeItemDescription.getter(v13, v14);
    v17 = v16;
    v30 = sub_100027E40(v15, v16, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v9 + 14, v9 + 22);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Reminder Editing Session: update item {acquirer: %s, item: %s}", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, &type metadata for Any[8]);
    v18 = v10;
    a2 = v29;
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  result = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (result)
  {
    v20 = result;
    v21 = sub_10002A750((uint64_t *)&unk_1006469C0);
    v22 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(_QWORD *)(v23 + 72);
    v25 = *(unsigned __int8 *)(v23 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = swift_allocObject(v21, v26 + v24, v25 | 7);
    *(_OWORD *)(v27 + 16) = xmmword_100520250;
    v28 = v27 + v26;
    sub_10002B1E8(*(_QWORD *)(a1+ OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState)+ OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10041D610(a2, v27);
    swift_unknownObjectRelease(v20);
    swift_setDeallocating(v27);
    swift_arrayDestroy(v28, *(_QWORD *)(v27 + 16), v22);
    return swift_deallocClassInstance(v27, 32, 7);
  }
  return result;
}

void *sub_1003030DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  void *v37;
  int EnumCaseMultiPayload;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[5];
  uint64_t v48;
  _BYTE v49[16];

  v2 = v1;
  v4 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100012DC4(v7, (uint64_t)qword_100655540);
  v9 = swift_retain_n(a1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v44 = v6;
    v14 = v13;
    v47[0] = v13;
    *(_DWORD *)v12 = 136315394;
    v45 = v2;
    v43 = v8;
    v15 = v4;
    v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    v16 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain(v16);
    v48 = sub_100027E40(v17, v16, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v12 + 12) = 2080;
    v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v19 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v20 = TTRTreeStorageItem.treeItemDescription.getter(v18, v19);
    v22 = v21;
    v48 = sub_100027E40(v20, v21, v47);
    v2 = v45;
    v4 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v12 + 14, v12 + 22);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Reminder Editing Session: finish and force save session {acquirer: %s, item: %s}", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v14, 2, &type metadata for Any[8]);
    v23 = v14;
    v6 = v44;
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1
    || !sub_1003069F0(a1))
  {
    return 0;
  }
  v24 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  v25 = (_QWORD *)(v24 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess(v24 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v48, 0, 0);
  v26 = *v25;
  if (*(_QWORD *)(*v25 + 16))
  {
    v27 = swift_bridgeObjectRetain_n(*v25, 2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.fault.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v44 = (char *)v4;
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v47[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = Array.description.getter(v26, &type metadata for String);
      v45 = v2;
      v34 = v33;
      v46 = sub_100027E40(v32, v33, v47);
      v4 = (uint64_t)v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease_n(v26, 2);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Reminder Editing Session: session is still held by some acquirers, force saving may cause problems {acquirers: %s}", v30, 0xCu);
      swift_arrayDestroy(v31, 1, &type metadata for Any[8]);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v26, 2);
    }
  }
  sub_100303610(v24);
  v35 = v37;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v37);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload)
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  else
  {
    sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    if (v35)
    {
      type metadata accessor for RDIDispatchQueue(0);
      v39 = v35;
      v40 = static RDIDispatchQueue.utilityQueue.getter();
      v41 = type metadata accessor for TTRRemindersInteraction(0);
      swift_allocObject(v41, 24, 7);
      TTRRemindersInteraction.init(queue:)(v40);
      v47[3] = sub_100005ED8(0, &qword_100649C20, REMReminder_ptr);
      v47[4] = (uint64_t)&protocol witness table for REMReminder;
      v47[0] = (uint64_t)v39;
      v42 = v39;
      TTRRemindersInteraction.donateReminderCreation(_:)(v47);
      swift_release();

      sub_100027F10(v47);
    }
  }
  return v35;
}

void sub_100303610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];
  uint64_t v11;

  sub_100304558(a1);
  v11 = 0;
  v3 = objc_opt_self(TTRUndoManager);
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1006003F0, 40, 7);
  v7[2] = &v11;
  v7[3] = v1;
  v7[4] = a1;
  v8 = swift_allocObject(&unk_100600418, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_1003079A8;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100600430;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  objc_msgSend((id)v3, "withActionName:block:", v6, v9, swift_release().n128_f64[0]);

  _Block_release(v9);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v8, "", 109, 799, 85, 1);
  swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100305BF8(a1);
    swift_release();
  }
}

uint64_t sub_1003037B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[5];
  uint64_t v73;
  _BYTE v74[16];

  v2 = v1;
  v70 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v70);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v65 = (char *)&v64 - v7;
  v8 = type metadata accessor for REMFeatureFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  *(_QWORD *)&v68 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100012DC4(v11, (uint64_t)qword_100655540);
  v13 = swift_retain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  v16 = os_log_type_enabled(v14, v15);
  v69 = v5;
  if (v16)
  {
    v17 = swift_slowAlloc(22, -1);
    v64 = v12;
    v18 = v17;
    v19 = swift_slowAlloc(64, -1);
    v72[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v66 = v2;
    v67 = v8;
    v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
    v21 = *(_QWORD *)(a1
                    + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                    + 8);
    swift_bridgeObjectRetain(v21);
    v73 = sub_100027E40(v20, v21, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v18 + 12) = 2080;
    v22 = v9;
    v23 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    v24 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
    v25 = v23;
    v9 = v22;
    v26 = TTRTreeStorageItem.treeItemDescription.getter(v25, v24);
    v28 = v27;
    v73 = sub_100027E40(v26, v27, v72);
    v2 = v66;
    v8 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v18 + 14, v18 + 22);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Reminder Editing Session: finish and force save session asynchronously {acquirer: %s, item: %s}", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, &type metadata for Any[8]);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  if (*(_BYTE *)(a1
                + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_isFormallyAcquired) != 1
    || !sub_1003069F0(a1))
  {
    return 0;
  }
  v29 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  v30 = (_QWORD *)(v29 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess(v29 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v73, 0, 0);
  v31 = *v30;
  if (*(_QWORD *)(*v30 + 16))
  {
    v32 = swift_bridgeObjectRetain_n(*v30, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.fault.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v67 = v8;
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v72[0] = v36;
      v66 = v2;
      *(_DWORD *)v35 = 136315138;
      v37 = Array.description.getter(v31, &type metadata for String);
      v38 = v9;
      v40 = v39;
      v71 = sub_100027E40(v37, v39, v72);
      v2 = v66;
      v8 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease_n(v31, 2);
      v41 = v40;
      v9 = v38;
      swift_bridgeObjectRelease(v41);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Reminder Editing Session: session is still held by some acquirers, force saving may cause problems {acquirers: %s}", v35, 0xCu);
      swift_arrayDestroy(v36, 1, &type metadata for Any[8]);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v31, 2);
    }
  }
  sub_100304558(v29);
  v42 = v44 & 1;
  v45 = *(void **)(v29 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  v46 = v68;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v9 + 104))(v68, enum case for REMFeatureFlags.undoByAttribute(_:), v8);
  v47 = v45;
  LOBYTE(v45) = REMFeatureFlags.isEnabled.getter(v47);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v46, v8);
  if ((v45 & 1) != 0)
  {
    v49 = (uint64_t)v65;
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v48);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49, v70);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
        sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    else
    {
      v51 = sub_10001F544(v49, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (*(_BYTE *)(v29
                    + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) == 1)
      {
        v52 = *(_QWORD *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor(v51);
        goto LABEL_21;
      }
    }
  }
  v52 = 0;
LABEL_21:
  v53 = swift_allocObject(&unk_100600300, 64, 7);
  *(_QWORD *)(v53 + 16) = v47;
  v68 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v53 + 24) = v68;
  *(_QWORD *)(v53 + 40) = v52;
  *(_QWORD *)(v53 + 48) = v2;
  *(_QWORD *)(v53 + 56) = v29;
  v54 = sub_10002A750(&qword_100649C18);
  swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  v55 = v47;
  swift_unknownObjectRetain(v68);
  swift_retain();
  swift_retain();
  v72[0] = Future.init(_:)(sub_100307818, v53);
  v56 = sub_100023FEC(&qword_100649C30, &qword_100649C18, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v57 = Publisher<>.sinkNextOutput(_:)(TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, v54, v56);
  v58 = (uint64_t)v69;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v57);
  v59 = swift_getEnumCaseMultiPayload(v58, v70);
  if ((v59 - 1) >= 2)
  {
    if (!v59)
      sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  else
  {
    sub_10001F544(v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    type metadata accessor for RDIDispatchQueue(0);
    v60 = v55;
    v61 = static RDIDispatchQueue.utilityQueue.getter();
    v62 = type metadata accessor for TTRRemindersInteraction(0);
    swift_allocObject(v62, 24, 7);
    TTRRemindersInteraction.init(queue:)(v61);
    v72[3] = sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v72[4] = (uint64_t)&protocol witness table for REMReminderChangeItem;
    v72[0] = (uint64_t)v60;
    v63 = v60;
    TTRRemindersInteraction.donateReminderCreation(_:)(v72);
    swift_release();

    sub_100027F10(v72);
  }
  return v42;
}

void sub_100303ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t aBlock[6];
  uint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = type metadata accessor for REMFeatureFlags(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin(v4);
  v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v12 = type metadata accessor for Logger(0);
  sub_100012DC4(v12, (uint64_t)qword_100655540);
  v13 = swift_retain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v64 = v8;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc(32, -1);
    v63 = v1;
    v19 = v18;
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v20 = sub_1002FEB40();
    v62 = v9;
    v21 = v11;
    v23 = v22;
    v69 = sub_100027E40(v20, v22, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v17 + 4, v17 + 12);
    swift_release_n(a1, 2);
    v24 = v23;
    v11 = v21;
    v9 = v62;
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Reminder Editing Session: perform deletion {sessionState: %s}", v17, 0xCu);
    swift_arrayDestroy(v19, 1, &type metadata for Any[8]);
    v25 = v19;
    v2 = v63;
    swift_slowDealloc(v25, -1, -1);
    v26 = v17;
    v8 = v64;
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
  v27 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames;
  swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, &v69, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v27 + 16))
  {
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.fault.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Reminder Editing Session: session is still held by some acquirers, item deletion may cause problems", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  v32 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v35 = v65;
    v34 = v66;
    v36 = v67;
    v37 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v65 + 104))(v67, enum case for REMFeatureFlags.undoByAttribute(_:), v66);
    v38 = REMFeatureFlags.isEnabled.getter(v37);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    if ((v38 & 1) == 0)
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "removeFromList");
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
    if (Strong)
    {
      v40 = Strong;
      sub_10041C9E8(v32, *(_BYTE *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder));
      swift_unknownObjectRelease(v40);
    }
    return;
  }
  if ((_DWORD)EnumCaseMultiPayload)
    goto LABEL_21;
  sub_10001F580((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  v41 = *(_QWORD *)(v2 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 48), v42);
  v44 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v41 + 240))(*v8, ObjectType, v41);
  if (v44)
  {
    v45 = (void *)v44;
    v46 = (void *)objc_opt_self(TTRUndoManager);
    static TTRLocalizableStrings.UndoAction.deleteReminder.getter();
    v48 = v47;
    v49 = v2;
    v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    v51 = swift_allocObject(&unk_1006001E8, 32, 7);
    *(_QWORD *)(v51 + 16) = v49;
    *(_QWORD *)(v51 + 24) = v45;
    v52 = swift_allocObject(&unk_100600210, 32, 7);
    *(_QWORD *)(v52 + 16) = sub_100307728;
    *(_QWORD *)(v52 + 24) = v51;
    aBlock[4] = (uint64_t)sub_1000381EC;
    aBlock[5] = v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10001B258;
    aBlock[3] = (uint64_t)&unk_100600228;
    v53 = _Block_copy(aBlock);
    swift_retain();
    v54 = v45;
    swift_retain();
    objc_msgSend(v46, "withActionName:block:", v50, v53, swift_release().n128_f64[0]);

    _Block_release(v53);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    LOBYTE(v53) = swift_isEscapingClosureAtFileLocation(v52, "", 109, 681, 92, 1);
    swift_release();
    swift_release();
    if ((v53 & 1) == 0)
      return;
    __break(1u);
LABEL_21:
    v55 = Logger.logObject.getter(EnumCaseMultiPayload);
    v56 = static os_log_type_t.fault.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Reminder Editing Session: handleDeletion: invalid item type", v57, 2u);
      swift_slowDealloc(v57, -1, -1);
    }

    return;
  }
  v58 = Logger.logObject.getter(0);
  v59 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Reminder Editing Session: handleDeletion: missing REMReminder", v60, 2u);
    swift_slowDealloc(v60, -1, -1);
  }

  sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
}

void sub_100304558(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  void **v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  double v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  void **v59;
  id v60;
  uint64_t Strong;
  uint64_t v62;
  _QWORD *v63;
  uint64_t ObjectType;
  uint64_t v65;
  uint64_t (*v66)(void ***, uint64_t, uint64_t, _QWORD *);
  void **v67;
  char v68;
  const char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int EnumCaseMultiPayload;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  __n128 v91;
  void **v92;
  uint64_t (**v93)(uint64_t, void *);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void (**v98)(uint64_t, void **, uint64_t, void *);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(char *, uint64_t, uint64_t);
  void *v120;
  uint64_t v121;
  __n128 v122;
  void *v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSString v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  id v141;
  id v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  void **v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  void **v154;
  uint64_t v155;
  void **aBlock;
  uint64_t v157;
  uint64_t (*v158)(uint64_t);
  void *v159;
  uint64_t (*v160)();
  uint64_t v161;

  v2 = sub_10002A750(&qword_10063F270);
  __chkstk_darwin(v2);
  v4 = (char *)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMFeatureFlags(0);
  v150 = *(_QWORD *)(v5 - 8);
  v151 = v5;
  __chkstk_darwin(v5);
  v149 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v153);
  v8 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v143 - v10;
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v143 - v13);
  if (qword_10063D658 != -1)
    swift_once(&qword_10063D658, sub_1002FE7E0);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100012DC4(v15, (uint64_t)qword_100655540);
  v17 = swift_retain_n(a1, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.info.getter();
  v20 = os_log_type_enabled(v18, v19);
  v146 = v14;
  v152 = v8;
  v148 = v11;
  if (v20)
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = (void **)swift_slowAlloc(32, -1);
    aBlock = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_1002FEB40();
    v25 = v24;
    v155 = sub_100027E40(v23, v24, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v21 + 4, v21 + 12);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Reminder Editing Session: save sessionState {sessionState: %s}", v21, 0xCu);
    swift_arrayDestroy(v22, 1, &type metadata for Any[8]);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    v26 = swift_release_n(a1, 2);
  }
  v147 = OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
  {
    v28 = Logger.logObject.getter(v26);
    v29 = static os_log_type_t.fault.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Reminder Editing Session: Attempting to save a sessionState twice", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_firstEditObservation))
  {
    swift_retain();
    AnyCancellable.cancel()();
    *(_QWORD *)&v27 = swift_release().n128_u64[0];
  }
  v31 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
  if (v31)
  {
    v32 = v31;
    swift_retain_n(a1, 2);
    v33 = v32;
    v145 = v16;
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(22, -1);
      v37 = swift_slowAlloc(8, -1);
      v144 = v4;
      v38 = (_QWORD *)v37;
      v39 = (void **)swift_slowAlloc(32, -1);
      aBlock = v39;
      *(_DWORD *)v36 = 136315394;
      v40 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v41 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v42 = TTRTreeStorageItem.treeItemDescription.getter(v40, v41);
      v44 = v43;
      v155 = sub_100027E40(v42, v43, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v36 + 4, v36 + 12);
      swift_release_n(a1, 2);
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v44).n128_u64[0];
      *(_WORD *)(v36 + 12) = 2112;
      v46 = objc_msgSend(v33, "objectID", v45);
      v155 = (uint64_t)v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v36 + 14, v36 + 22);
      *v38 = v46;

      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Reminder Editing Session: moving to target list {item: %s, targetList: %@}", (uint8_t *)v36, 0x16u);
      v47 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v38, 1, v47);
      v48 = v38;
      v4 = v144;
      swift_slowDealloc(v48, -1, -1);
      swift_arrayDestroy(v39, 1, &type metadata for Any[8]);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2);
    }
    aBlock = (void **)_typeName(_:qualified:)(*v154, 0);
    v157 = v49;
    v50._countAndFlagsBits = 0x73694C65766F6D2DLL;
    v50._object = (void *)0xE900000000000074;
    String.append(_:)(v50);
    v51 = (uint64_t)aBlock;
    v52 = v157;
    v53 = type metadata accessor for EditingSessionImp(0);
    swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
    swift_retain();
    v54 = sub_1002FF03C(v51, v52, a1, 0);
    v16 = v145;
    if (*(_BYTE *)(v54 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_finishCalled) == 1)
    {
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.fault.getter(v55);
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "attributeEditor called after -[TTRRemindersListEditingSession finish] is called", v57, 2u);
        swift_slowDealloc(v57, -1, -1);
      }

    }
    swift_retain();
    TTRRemindersListAttributeEditor.setList(_:)(v33);
    swift_release();
    swift_release();

  }
  v58 = 0xD000000000000019;
  v59 = *(void ***)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  v60 = objc_msgSend(v59, "listID", v27);

  if (v60)
  {
    v63 = v154[7];
    ObjectType = swift_getObjectType(v154[6], v62);
    v159 = (void *)sub_100005ED8(0, &qword_100649E20, REMReminderChangeItem_ptr);
    v160 = (uint64_t (*)())&protocol witness table for REMReminderChangeItem;
    aBlock = v59;
    v65 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item;
    v66 = (uint64_t (*)(void ***, uint64_t, uint64_t, _QWORD *))v63[48];
    v67 = v59;
    v68 = v66(&aBlock, v65, ObjectType, v63);
    Strong = sub_100027F10(&aBlock);
    if ((v68 & 1) != 0)
      goto LABEL_35;
    v58 = 0xD000000000000026;
    v69 = "reminder does not match list predicate";
  }
  else
  {
    v69 = "reminder has been deleted";
  }
  v70 = (unint64_t)(v69 - 32) | 0x8000000000000000;
  v71 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item;
  v72 = (uint64_t)v146;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(Strong);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v72, v153);
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload)
      sub_10001F544((uint64_t)v146, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    swift_bridgeObjectRelease(v70);
  }
  else
  {
    v144 = v4;
    sub_10001F544(v72, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    swift_retain_n(a1, 2);
    swift_bridgeObjectRetain(v70);
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc(22, -1);
      v145 = v16;
      v78 = v77;
      v146 = (void **)swift_slowAlloc(64, -1);
      aBlock = v146;
      *(_DWORD *)v78 = 136315394;
      v143 = v78 + 4;
      v79 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v80 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v81 = TTRTreeStorageItem.treeItemDescription.getter(v79, v80);
      v83 = v82;
      v155 = sub_100027E40(v81, v82, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v143, v78 + 12);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v83);
      *(_WORD *)(v78 + 12) = 2080;
      swift_bridgeObjectRetain(v70);
      v155 = sub_100027E40(v58, v70, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v78 + 14, v78 + 22);
      swift_bridgeObjectRelease_n(v70, 3);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "Discarding uncommitted reminder {item: %s, reason: %s}", (uint8_t *)v78, 0x16u);
      v84 = (uint64_t)v146;
      swift_arrayDestroy(v146, 2, &type metadata for Any[8]);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v78, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v70, 2);
      swift_release_n(a1, 2);
    }
    v4 = v144;
    Strong = swift_unknownObjectWeakLoadStrong(v154 + 2);
    if (Strong)
    {
      v86 = Strong;
      v87 = *(_QWORD *)(Strong + 40);
      v88 = swift_getObjectType(*(_QWORD *)(Strong + 32), v85);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 464))(v71, v88, v87);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 424))(v71, v88, v87);
      swift_unknownObjectRelease(v86);
      swift_release();
    }
  }
LABEL_35:
  v89 = (uint64_t)v148;
  *(_BYTE *)(a1 + v147) = 1;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter(Strong);
  v90 = swift_getEnumCaseMultiPayload(v89, v153);
  if ((v90 - 1) >= 2)
  {
    v101 = (uint64_t)v152;
    if (!v90)
      sub_10001F544(v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  else
  {
    sub_10001F544(v89, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v92 = v154;
    v93 = (uint64_t (**)(uint64_t, void *))v154[7];
    v95 = swift_getObjectType(v154[6], v94);
    v96 = v93[55](v95, v93);
    v97 = v92[4];
    v98 = (void (**)(uint64_t, void **, uint64_t, void *))v92[5];
    v100 = swift_getObjectType(v97, v99);
    v98[23](v96, v59, v100, v98);
    v91 = swift_bridgeObjectRelease(v96);
    v101 = (uint64_t)v152;
  }
  v103 = v149;
  v102 = v150;
  v104 = v151;
  v105 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v150 + 104))(v149, enum case for REMFeatureFlags.undoByAttribute(_:), v151, v91);
  v106 = REMFeatureFlags.isEnabled.getter(v105);
  v107 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v103, v104);
  if ((v106 & 1) == 0)
  {
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v107);
    v108 = swift_getEnumCaseMultiPayload(v101, v153);
    if ((v108 - 1) < 2)
    {
      sub_10001F544(v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      return;
    }
    if (!v108)
      sub_10001F544(v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    v109 = swift_unknownObjectWeakLoadStrong(v154 + 2);
    if (!v109)
    {
      v116 = type metadata accessor for TTRRemindersListUndoContext(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v4, 1, 1, v116);
LABEL_50:
      sub_1000073A0((uint64_t)v4, &qword_10063F270);
      return;
    }
    v110 = v109;
    v111 = swift_unknownObjectWeakLoadStrong(v109 + 16);
    if (v111)
    {
      v113 = v111;
      v114 = *(_QWORD *)(v110 + 24);
      v115 = swift_getObjectType(v111, v112);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v114 + 48))(v110, &off_100606F60, v115, v114);
      swift_unknownObjectRelease(v110);
      v110 = v113;
    }
    else
    {
      v117 = type metadata accessor for TTRRemindersListUndoContext(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v4, 1, 1, v117);
    }
    swift_unknownObjectRelease(v110);
    v118 = type metadata accessor for TTRRemindersListUndoContext(0);
    v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48);
    if (v119(v4, 1, v118) == 1)
      goto LABEL_50;
    v120 = (void *)TTRRemindersListUndoContext.undoManager.getter();
    sub_10001F544((uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListUndoContext);
    v121 = a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext;
    v122 = swift_beginAccess(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_undoContext, &aBlock, 32, 0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v119)(v121, 1, v118, v122))
    {
      swift_endAccess(&aBlock);

    }
    else
    {
      v123 = (void *)TTRRemindersListUndoContext.undoManager.getter();
      swift_endAccess(&aBlock);
      if (v123 == v120)
      {

      }
      else
      {
        v124 = swift_retain_n(a1, 2);
        v125 = Logger.logObject.getter(v124);
        v126 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v125, v126))
        {
          v127 = (uint8_t *)swift_slowAlloc(12, -1);
          v154 = (void **)swift_slowAlloc(32, -1);
          aBlock = v154;
          *(_DWORD *)v127 = 136315138;
          v153 = (uint64_t)(v127 + 4);
          v128 = type metadata accessor for TTRRemindersListViewModel.Item(0);
          v129 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
          v130 = TTRTreeStorageItem.treeItemDescription.getter(v128, v129);
          v132 = v131;
          v155 = sub_100027E40(v130, v131, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, &aBlock, v153, v127 + 12);
          swift_release_n(a1, 2);
          swift_bridgeObjectRelease(v132);
          _os_log_impl((void *)&_mh_execute_header, v125, v126, "Reminder Editing Session: registering combined undo {item: %s}", v127, 0xCu);
          v133 = v154;
          swift_arrayDestroy(v154, 1, &type metadata for Any[8]);
          swift_slowDealloc(v133, -1, -1);
          swift_slowDealloc(v127, -1, -1);

        }
        else
        {

          swift_release_n(a1, 2);
        }
        v134 = objc_opt_self(TTRUndoManager);
        static TTRLocalizableStrings.UndoAction.editReminder.getter();
        v136 = v135;
        v137 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v136);
        v138 = swift_allocObject(&unk_100600288, 32, 7);
        *(_QWORD *)(v138 + 16) = v120;
        *(_QWORD *)(v138 + 24) = v123;
        v139 = swift_allocObject(&unk_1006002B0, 32, 7);
        *(_QWORD *)(v139 + 16) = sub_1003077A4;
        *(_QWORD *)(v139 + 24) = v138;
        v160 = sub_1000381EC;
        v161 = v139;
        aBlock = _NSConcreteStackBlock;
        v157 = 1107296256;
        v158 = sub_10001B258;
        v159 = &unk_1006002C8;
        v140 = _Block_copy(&aBlock);
        v141 = v120;
        v142 = v123;
        swift_retain();
        objc_msgSend((id)v134, "withActionName:block:", v137, v140, swift_release().n128_f64[0]);

        _Block_release(v140);
        LOBYTE(v134) = swift_isEscapingClosureAtFileLocation(v139, "", 109, 761, 90, 1);
        swift_release();
        swift_release();
        if ((v134 & 1) != 0)
          __break(1u);
      }
    }
  }
}

double sub_100305494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  double result;

  v6 = *(_QWORD *)(a1 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 32), a2);
  v8 = swift_allocObject(&unk_100600058, 24, 7);
  swift_weakInit(v8 + 16, a1);
  v9 = swift_allocObject(&unk_100600260, 32, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = *(void (**)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 200);
  swift_retain();
  swift_retain();
  v10(a2, sub_100307770, v9, ObjectType, v6);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100305560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66[24];
  uint64_t v67;
  _QWORD v68[3];
  char v69[8];
  _QWORD *v70;
  char v71[32];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v71, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    swift_beginAccess(a3 + 16, v66, 0, 0);
    v8 = *(_QWORD *)(a3 + 16);
    v61 = a1;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v31 = *(_QWORD *)(a3 + 16);
      else
        v31 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v9)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
LABEL_39:
          swift_once(&qword_10063D658, sub_1002FE7E0);
          goto LABEL_34;
        }
        v10 = 0;
        v11 = v8 & 0xC000000000000001;
        v12 = (_QWORD *)&unk_100673000;
        v62 = v7;
        v63 = v9;
        v64 = v8;
        v65 = v8 & 0xC000000000000001;
        do
        {
          if (v11)
          {
            v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
          }
          else
          {
            v16 = *(_QWORD *)(v8 + 8 * v10 + 32);
            swift_retain();
          }
          *(_BYTE *)(v16 + v12[260]) = 2;
          v17 = objc_msgSend(*(id *)(v16 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "saveRequest");
          if ((objc_msgSend(v17, "isSaved") & 1) == 0)
          {
            if (qword_10063D658 != -1)
              swift_once(&qword_10063D658, sub_1002FE7E0);
            v18 = type metadata accessor for Logger(0);
            sub_100012DC4(v18, (uint64_t)qword_100655540);
            v19 = swift_retain_n(v16, 2);
            v20 = Logger.logObject.getter(v19);
            v21 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v20, v21))
            {
              v22 = swift_slowAlloc(12, -1);
              v23 = (_QWORD *)swift_slowAlloc(32, -1);
              v70 = v23;
              *(_DWORD *)v22 = 136315138;
              v24 = type metadata accessor for TTRRemindersListViewModel.Item(0);
              v25 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
              v26 = TTRTreeStorageItem.treeItemDescription.getter(v24, v25);
              v28 = v27;
              *(_QWORD *)(v22 + 4) = sub_100027E40(v26, v27, (uint64_t *)&v70);
              swift_release_n(v16, 2);
              swift_bridgeObjectRelease(v28);
              _os_log_impl((void *)&_mh_execute_header, v20, v21, "Reminder Editing Session: remove editing session state due to no-op'ed save {item: %s}", (uint8_t *)v22, 0xCu);
              swift_arrayDestroy(v23, 1, &type metadata for Any[8]);
              v29 = v23;
              v7 = v62;
              v8 = v64;
              swift_slowDealloc(v29, -1, -1);
              v30 = v22;
              v9 = v63;
              swift_slowDealloc(v30, -1, -1);

            }
            else
            {

              swift_release_n(v16, 2);
            }
            v14 = *(_QWORD *)(v7 + 56);
            ObjectType = swift_getObjectType(*(_QWORD *)(v7 + 48), v13);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 472))(v16 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, ObjectType, v14);
            v11 = v65;
            v12 = &unk_100673000;
          }
          ++v10;
          swift_release();

        }
        while (v9 != v10);
      }
    }
    swift_release();
    swift_bridgeObjectRelease(v8);
    a1 = v61;
  }
  v32 = *(_QWORD *)(a1 + 16);
  if (v32)
  {
    v70 = _swiftEmptyArrayStorage;
    sub_1003D7FFC(0, v32, 0);
    v33 = v70;
    v34 = (_QWORD *)(a1 + 32);
    do
    {
      v35 = *v34;
      swift_getErrorValue(*v34, v69, v68);
      v36 = v68[1];
      v37 = v68[2];
      swift_errorRetain(v35);
      v38 = Error.localizedDescription.getter(v36, v37);
      v40 = v39;
      swift_errorRelease(v35);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      v70 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1003D7FFC(0, v33[2] + 1, 1);
        v33 = v70;
      }
      v43 = v33[2];
      v42 = v33[3];
      if (v43 >= v42 >> 1)
      {
        sub_1003D7FFC(v42 > 1, v43 + 1, 1);
        v33 = v70;
      }
      v33[2] = v43 + 1;
      v44 = &v33[2 * v43];
      v44[4] = v38;
      v44[5] = v40;
      ++v34;
      --v32;
    }
    while (v32);
    v70 = v33;
    v45 = sub_10002A750(&qword_1006466D0);
    v46 = sub_100023FEC((unint64_t *)&qword_10064C980, &qword_1006466D0, (uint64_t)&protocol conformance descriptor for [A]);
    v47 = BidirectionalCollection<>.joined(separator:)(2128928, 0xE300000000000000, v45, v46);
    v49 = v48;
    swift_release();
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v50 = type metadata accessor for Logger(0);
    sub_100012DC4(v50, (uint64_t)qword_100655540);
    swift_bridgeObjectRetain(v49);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = (_QWORD *)swift_slowAlloc(32, -1);
      v70 = v55;
      *(_DWORD *)v54 = 136315138;
      swift_bridgeObjectRetain(v49);
      v67 = sub_100027E40(v47, v49, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease_n(v49, 3);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Reminder Editing Session: failed to save reminder(s) {errors: %s}", v54, 0xCu);
      swift_arrayDestroy(v55, 1, &type metadata for Any[8]);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v49, 2);
    }
    return;
  }
  if (qword_10063D658 != -1)
    goto LABEL_39;
LABEL_34:
  v56 = type metadata accessor for Logger(0);
  v57 = sub_100012DC4(v56, (uint64_t)qword_100655540);
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Reminder Editing Session: reminder(s) saved", v60, 2u);
    swift_slowDealloc(v60, -1, -1);
  }

}

void sub_100305BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _QWORD *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState) = 2;
  v21 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "saveRequest");
  if ((objc_msgSend(v21, "isSaved") & 1) != 0)
  {

  }
  else
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v4 = type metadata accessor for Logger(0);
    sub_100012DC4(v4, (uint64_t)qword_100655540);
    v5 = swift_retain_n(a1, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.info.getter();
    v8 = &unk_100673000;
    if (os_log_type_enabled(v6, v7))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v23 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = type metadata accessor for TTRRemindersListViewModel.Item(0);
      v12 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v13 = v11;
      v8 = (_QWORD *)&unk_100673000;
      v14 = TTRTreeStorageItem.treeItemDescription.getter(v13, v12);
      v16 = v15;
      v22 = sub_100027E40(v14, v15, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 4, v9 + 12);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Reminder Editing Session: remove editing session state due to no-op'ed save {item: %s}", v9, 0xCu);
      swift_arrayDestroy(v10, 1, &type metadata for Any[8]);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2);
    }
    v18 = *(_QWORD *)(v2 + 48);
    v19 = *(_QWORD *)(v2 + 56);
    ObjectType = swift_getObjectType(v18, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 472))(a1 + v8[259], ObjectType, v19);

  }
}

double sub_100305E70(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;
  double result;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 40);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 32), a2);
  v5 = sub_10002A750((uint64_t *)&unk_1006415A0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100521140;
  *(_QWORD *)(v6 + 32) = a2;
  v11 = v6;
  specialized Array._endMutation()(v6);
  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v9 = a2;
  v8(v11, ObjectType, v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_100305F18(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void **v26;

  v26 = a1;
  v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMFeatureFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v25 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v9 + 104))(v12, enum case for REMFeatureFlags.undoByAttribute(_:), v8, v10);
  v16 = REMFeatureFlags.isEnabled.getter(v15);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v19 = 0;
  if ((v16 & 1) != 0)
  {
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v17);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v5);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
        sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    }
    else
    {
      v21 = sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      if (*(_BYTE *)(a3
                    + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) == 1)
      {
        v19 = *(_QWORD *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor(v21);
        goto LABEL_8;
      }
    }
    v19 = 0;
  }
LABEL_8:
  ObjectType = swift_getObjectType(v13, v18);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 208))(v25, v19, ObjectType, v14);
  v24 = *v26;
  *v26 = (void *)v23;

}

void sub_1003060D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  _QWORD aBlock[6];

  v16 = swift_allocObject(&unk_100600328, 32, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_retain();
  v17 = objc_msgSend(a3, "objectID");
  v26 = (id)objc_opt_self(TTRUndoManager);
  static TTRLocalizableStrings.UndoAction.addReminder.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_100600350, 88, 7);
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = a3;
  v21[5] = a6;
  v21[6] = a7;
  v21[7] = a8;
  v21[8] = v17;
  v21[9] = sub_10009DC10;
  v21[10] = v16;
  v22 = swift_allocObject(&unk_100600378, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_100307898;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1000381EC;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B258;
  aBlock[3] = &unk_100600390;
  v23 = _Block_copy(aBlock);
  swift_unknownObjectRetain(a4);
  v24 = a3;
  swift_retain();
  swift_retain();
  v25 = v17;
  swift_retain();
  objc_msgSend(v26, "withActionName:block:", v20, v23, swift_release().n128_f64[0]);

  _Block_release(v23);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v22, "", 109, 814, 89, 1);
  swift_release();
  swift_release();
  if ((v25 & 1) != 0)
    __break(1u);
}

double sub_1003062D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v21;
  id v22;
  double result;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1, a2);
  v16 = sub_10002A750(&qword_100655918);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100520250;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  v18 = swift_allocObject(&unk_100600058, 24, 7);
  swift_weakInit(v18 + 16, a5);
  v19 = (_QWORD *)swift_allocObject(&unk_1006003C8, 56, 7);
  v19[2] = v18;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a8;
  v19[6] = a9;
  v20 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(a2 + 200);
  v21 = a3;
  swift_retain();
  swift_retain();
  v22 = a7;
  swift_retain();
  v20(v17, sub_100307918, v19, ObjectType, a2);
  swift_bridgeObjectRelease(v17);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100306404(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, _QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(_QWORD, _QWORD);
  uint64_t v36;
  _QWORD v37[3];
  char v38[8];
  uint64_t v39;
  _BYTE v40[24];

  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v40, 0, 0);
  if (swift_weakLoadStrong(v9))
  {
    sub_100305BF8(a3);
    swift_release();
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v10 = *(_QWORD *)(a1 + 32);
    swift_errorRetain(v10);
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v11 = type metadata accessor for Logger(0);
    sub_100012DC4(v11, (uint64_t)qword_100655540);
    v12 = a4;
    swift_errorRetain(v10);
    v13 = v12;
    v14 = swift_errorRetain(v10);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(22, -1);
      v35 = a5;
      v18 = (_QWORD *)swift_slowAlloc(8, -1);
      v34 = swift_slowAlloc(32, -1);
      v39 = v34;
      *(_DWORD *)v17 = 136315394;
      swift_getErrorValue(v10, v38, v37);
      v19 = Error.rem_errorDescription.getter(v37[1], v37[2]);
      v21 = v20;
      v36 = sub_100027E40(v19, v20, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v21);
      swift_errorRelease(v10);
      swift_errorRelease(v10);
      *(_WORD *)(v17 + 12) = 2112;
      v36 = (uint64_t)v13;
      v22 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v17 + 14, v17 + 22);
      *v18 = v13;

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Reminder Editing Session: error saving reminder async {error: %s, objectID: %@}", (uint8_t *)v17, 0x16u);
      v23 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v18, 1, v23);
      v24 = v18;
      a5 = v35;
      swift_slowDealloc(v24, -1, -1);
      swift_arrayDestroy(v34, 1, &type metadata for Any[8]);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {
      swift_errorRelease(v10);
      swift_errorRelease(v10);

    }
    swift_errorRetain(v10);
    a5(v10, 1);
    swift_errorRelease(v10);
    return swift_errorRelease(v10);
  }
  else
  {
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v25 = type metadata accessor for Logger(0);
    sub_100012DC4(v25, (uint64_t)qword_100655540);
    v26 = a4;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v29 = 138412290;
      v39 = (uint64_t)v26;
      v31 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v29 + 4, v29 + 12);
      *v30 = v26;

      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Reminder Editing Session: reminder saved async {objectID: %@}", v29, 0xCu);
      v32 = sub_10002A750(&qword_100642D60);
      swift_arrayDestroy(v30, 1, v32);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

    }
    return ((uint64_t (*)(id, _QWORD))a5)(v26, 0);
  }
}

uint64_t sub_10030685C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10063F270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003068A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10002A750(&qword_10063F270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003068EC(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  _QWORD v10[2];

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = (uint64_t *)(a3 + 16 * v4 + 24);
    do
    {
      v7 = *v6;
      v10[0] = *(v6 - 1);
      v10[1] = v7;
      swift_bridgeObjectRetain(v7);
      v8 = a1(v10);
      swift_bridgeObjectRelease(v7);
      if (v3)
        break;
      v6 -= 2;
      --v4;
    }
    while (!(v8 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_1003069A4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003069CC(uint64_t a1)
{
  uint64_t v1;

  return sub_100301EC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003069D8()
{
  uint64_t v0;

  sub_100302584(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003069E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_1003069F0(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _BYTE v49[4];
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54[16];
  uint64_t *v55;
  uint64_t v56[3];
  uint64_t v57;
  uint64_t v58;
  char v59[24];

  v52 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v52);
  v3 = &v49[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v49[-v5];
  __chkstk_darwin(v7);
  v9 = &v49[-v8];
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName);
  v10 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_acquirerName
                  + 8);
  v12 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC9RemindersP33_8AEE7A17A62BF3829E25EA98F3C74A2617EditingSessionImp_editingSessionState);
  sub_10002B1E8(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item, (uint64_t)&v49[-v8], v13);
  v14 = (uint64_t *)(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames);
  swift_beginAccess(v12 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_acquirerNames, v59, 0, 0);
  v15 = *v14;
  v56[0] = v11;
  v56[1] = v10;
  v55 = v56;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v15);
  v16 = sub_1003068EC(sub_100307928, (uint64_t)v54, v15);
  LODWORD(v18) = v17;
  swift_bridgeObjectRelease(v15);
  if ((v18 & 1) != 0)
  {
    v53 = v18;
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v38 = type metadata accessor for Logger(0);
    sub_100012DC4(v38, (uint64_t)qword_100655540);
    sub_10002B1E8((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRetain(v10);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.fault.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(64, -1);
      v56[0] = v43;
      *(_DWORD *)v42 = 136315394;
      swift_bridgeObjectRetain(v10);
      v57 = sub_100027E40(v11, v10, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v42 + 4, v42 + 12);
      swift_bridgeObjectRelease_n(v10, 3);
      *(_WORD *)(v42 + 12) = 2080;
      v44 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v45 = TTRTreeStorageItem.treeItemDescription.getter(v52, v44);
      v47 = v46;
      v57 = sub_100027E40(v45, v46, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v42 + 14, v42 + 22);
      swift_bridgeObjectRelease(v47);
      sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Reminder Editing Session: acquirer to be removed is not found {acquirerName: %s, item: %s}", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 2, &type metadata for Any[8]);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

      sub_10001F544((uint64_t)v3, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease_n(v10, 2);
    }
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    LOBYTE(v18) = v53;
  }
  else
  {
    swift_beginAccess(v14, v56, 33, 0);
    sub_1002FE3EC(v16);
    v20 = v19;
    swift_endAccess(v56);
    swift_bridgeObjectRelease(v20);
    if (qword_10063D658 != -1)
      swift_once(&qword_10063D658, sub_1002FE7E0);
    v21 = type metadata accessor for Logger(0);
    sub_100012DC4(v21, (uint64_t)qword_100655540);
    sub_10002B1E8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain_n(v12, 2);
    swift_bridgeObjectRetain(v10);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.info.getter();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc(32, -1);
      v53 = v18;
      v18 = v26;
      v51 = swift_slowAlloc(96, -1);
      v56[0] = v51;
      *(_DWORD *)v18 = 136315650;
      v50 = v25;
      swift_bridgeObjectRetain(v10);
      v57 = sub_100027E40(v11, v10, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(v10, 3);
      *(_WORD *)(v18 + 12) = 2080;
      v27 = *v14;
      swift_bridgeObjectRetain(*v14);
      v29 = Array.description.getter(v28, &type metadata for String);
      v31 = v30;
      swift_bridgeObjectRelease(v27);
      v57 = sub_100027E40(v29, v31, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v18 + 14, v18 + 22);
      swift_release_n(v12, 2);
      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v18 + 22) = 2080;
      v32 = sub_1000175C8((unint64_t *)&qword_100649BF0, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t)&protocol conformance descriptor for TTRRemindersListViewModel.Item);
      v33 = TTRTreeStorageItem.treeItemDescription.getter(v52, v32);
      v35 = v34;
      v57 = sub_100027E40(v33, v34, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v18 + 24, v18 + 32);
      swift_bridgeObjectRelease(v35);
      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v50, "Reminder Editing Session: Removed acquirer from editing session {removing: %s, remaining: %s, item: %s}", (uint8_t *)v18, 0x20u);
      v36 = v51;
      swift_arrayDestroy(v51, 3, &type metadata for Any[8]);
      swift_slowDealloc(v36, -1, -1);
      v37 = v18;
      LOBYTE(v18) = v53;
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      sub_10001F544((uint64_t)v6, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_bridgeObjectRelease_n(v10, 2);
      swift_release_n(v12, 2);
    }
    sub_10001F544((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return (v18 & 1) == 0;
}

void sub_100307034()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *object;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Bool isValid;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[6];
  char v65[24];
  Swift::tuple_title_String_isValid_Bool v66;

  v1 = v0;
  v58 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem(0);
  __chkstk_darwin(v58);
  v3 = (uint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for REMFeatureFlags(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  object = v0 + 9;
  swift_beginAccess(v0 + 9, v65, 1, 0);
  v8 = v0[9];
  if ((unint64_t)v8 >> 62)
    goto LABEL_40;
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      v59 = v3;
      v9 = *object;
      *object = (uint64_t)_swiftEmptyArrayStorage;
      v10 = swift_allocObject(&unk_100600148, 24, 7);
      v56 = v10;
      *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
      v11 = (uint64_t *)(v10 + 16);
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          object = (uint64_t *)v9;
        else
          object = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(v9);
        v12 = _CocoaArrayWrapper.endIndex.getter(object);
        swift_bridgeObjectRelease(v9);
        if (!v12)
        {
LABEL_49:
          swift_bridgeObjectRelease(v9);
          v3 = (uint64_t)_swiftEmptyArrayStorage;
          if ((unint64_t)_swiftEmptyArrayStorage >> 62)
            goto LABEL_50;
          goto LABEL_21;
        }
      }
      else
      {
        v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v12)
          goto LABEL_49;
      }
      if (v12 < 1)
        goto LABEL_58;
      v13 = 0;
      v14 = v9 & 0xC000000000000001;
      v57 = v6;
      do
      {
        if (v14)
        {
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
        }
        else
        {
          v15 = *(_QWORD *)(v9 + 8 * v13 + 32);
          swift_retain();
        }
        if ((*(_BYTE *)(v15 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_isMarkedForDeletion) & 1) != 0)
          goto LABEL_7;
        if (*(_BYTE *)(v15 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_deletesIfTitleIsInvalid) != 1)
          goto LABEL_16;
        v16 = objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), "titleAsString");
        if (!v16)
          goto LABEL_7;
        v17 = v16;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v18 = v14;
        v19 = v12;
        v20 = v9;
        v21 = v11;
        v22 = v1;
        v24 = v23;

        v66 = String.validatedReminderTitle()();
        object = (uint64_t *)v66.title._object;
        isValid = v66.isValid;
        v66.title._countAndFlagsBits = v24;
        v1 = v22;
        v11 = v21;
        v9 = v20;
        v12 = v19;
        v14 = v18;
        v6 = v57;
        swift_bridgeObjectRelease(v66.title._countAndFlagsBits);
        swift_bridgeObjectRelease(object);
        if (!isValid)
        {
LABEL_7:
          sub_100303ED4(v15);
        }
        else
        {
LABEL_16:
          sub_100304558(v15);
          if ((*(_BYTE *)(v15 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_doNotSave) & 1) == 0)
          {
            v26 = swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
            object = *(uint64_t **)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v27 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if ((unint64_t)object >= v27 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, (char *)object + 1, 1);
            v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(object, v15);
            specialized Array._endMutation()(v28);
          }
        }
        ++v13;
        swift_release();
      }
      while (v12 != v13);
      swift_bridgeObjectRelease(v9);
      v3 = *v11;
      if ((unint64_t)*v11 >> 62)
      {
LABEL_50:
        if (v3 < 0)
          object = (uint64_t *)v3;
        else
          object = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(v3);
        v29 = _CocoaArrayWrapper.endIndex.getter(object);
        v55 = v1;
        if (!v29)
        {
LABEL_54:
          swift_bridgeObjectRelease(v3);
          v1 = _swiftEmptyArrayStorage;
LABEL_55:
          v47 = objc_opt_self(TTRUndoManager);
          static TTRLocalizableStrings.UndoAction.addReminder.getter();
          v49 = v48;
          v50 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v49);
          v51 = (_QWORD *)swift_allocObject(&unk_100600170, 40, 7);
          v52 = v56;
          v51[2] = v55;
          v51[3] = v1;
          v51[4] = v52;
          v53 = swift_allocObject(&unk_100600198, 32, 7);
          *(_QWORD *)(v53 + 16) = sub_100307708;
          *(_QWORD *)(v53 + 24) = v51;
          aBlock[4] = sub_1000381EC;
          aBlock[5] = v53;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10001B258;
          aBlock[3] = &unk_1006001B0;
          v54 = _Block_copy(aBlock);
          swift_retain();
          swift_retain();
          swift_retain();
          objc_msgSend((id)v47, "withActionName:block:", v50, v54, swift_release().n128_f64[0]);

          _Block_release(v54);
          LOBYTE(v47) = swift_isEscapingClosureAtFileLocation(v53, "", 109, 643, 85, 1);
          swift_release();
          swift_release();
          swift_release();
          if ((v47 & 1) == 0)
            return;
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          return;
        }
        goto LABEL_22;
      }
LABEL_21:
      v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v3);
      v55 = v1;
      if (!v29)
        goto LABEL_54;
LABEL_22:
      aBlock[0] = _swiftEmptyArrayStorage;
      v8 = (uint64_t)aBlock;
      sub_1003D85AC(0, v29 & ~(v29 >> 63), 0);
      if (v29 < 0)
        goto LABEL_59;
      v30 = 0;
      v1 = (_QWORD *)aBlock[0];
      v61 = v3 & 0xC000000000000001;
      v60 = enum case for REMFeatureFlags.undoByAttribute(_:);
      v31 = v3;
      while (v29 != v30)
      {
        if (v61)
        {
          v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v3);
        }
        else
        {
          v32 = *(_QWORD *)(v3 + 8 * v30 + 32);
          swift_retain();
        }
        v33 = *(void **)(v32 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        v35 = v62;
        v34 = v63;
        (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v6, v60, v63);
        v36 = v33;
        v8 = REMFeatureFlags.isEnabled.getter(v36);
        v37 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v6, v34);
        if ((v8 & 1) == 0)
          goto LABEL_34;
        v8 = v32 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_item;
        v38 = v59;
        TTRRemindersListViewModel.Item.reminderCasesOnly.getter(v37);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v58);
        if ((EnumCaseMultiPayload - 1) >= 2)
        {
          if (!EnumCaseMultiPayload)
            sub_10001F544(v59, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_34:
          v41 = 0;
          goto LABEL_35;
        }
        v40 = sub_10001F544(v38, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        if (*(_BYTE *)(v32
                      + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_registeredUndoForAddingReminder) != 1)
          goto LABEL_34;
        v41 = *(_QWORD *)TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor(v40);
LABEL_35:
        swift_release();
        aBlock[0] = v1;
        v43 = v1[2];
        v42 = v1[3];
        object = (uint64_t *)(v43 + 1);
        if (v43 >= v42 >> 1)
        {
          v8 = (uint64_t)aBlock;
          sub_1003D85AC(v42 > 1, v43 + 1, 1);
          v1 = (_QWORD *)aBlock[0];
        }
        ++v30;
        v1[2] = object;
        v44 = &v1[2 * v43];
        v44[4] = v36;
        v44[5] = v41;
        v3 = v31;
        if (v29 == v30)
        {
          swift_bridgeObjectRelease(v31);
          goto LABEL_55;
        }
      }
      __break(1u);
LABEL_40:
      if (v8 < 0)
        v45 = v8;
      else
        v45 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v46 = _CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v8);
    }
    while (v46);
  }
}

uint64_t sub_1003076B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003076D4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100307708()
{
  uint64_t *v0;

  return sub_100305494(v0[2], v0[3], v0[4]);
}

uint64_t sub_100307714()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100307728()
{
  uint64_t v0;

  return sub_100305E70(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100307730()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100307744()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100307770(uint64_t a1)
{
  uint64_t v1;

  sub_100305560(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100307778()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003077A4()
{
  uint64_t v0;

  return NSUndoManager.registerUndo(draining:groupSavesInto:)(*(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_1003077CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003077DC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100307818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003060D0(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100307828()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10030784C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

double sub_100307898()
{
  uint64_t v0;

  return sub_1003062D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1003078CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003078DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100307918(uint64_t a1)
{
  uint64_t v1;

  return sub_100306404(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(_QWORD, _QWORD))(v1 + 40));
}

uint64_t sub_100307928(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  if (v4 == *v3 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v3, v6, 0) & 1;
}

uint64_t sub_10030797C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1003079A8()
{
  uint64_t v0;

  sub_100305F18(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1003079B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003079C4(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRReminderProtocolWithPendingMove - 1) + 8))();
  return a1;
}

double sub_1003079FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002FF834(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100307A44(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  uint64_t v25;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v6 = v5;
  v12 = (uint64_t *)(v5 + 80);
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v5 + 80, v28, 32, 0);
    v13 = *v12;
    if (!*(_QWORD *)(*v12 + 16))
    {
LABEL_10:
      swift_endAccess(v28);
      if ((a5 & 1) != 0)
      {
        sub_100352F0C((uint64_t)_swiftEmptyArrayStorage);
      }
      else
      {
        v21 = sub_10002A750(qword_10063F670);
        inited = swift_initStackObject(v21, &v27);
        *(_OWORD *)(inited + 16) = xmmword_100520250;
        *(_BYTE *)(inited + 32) = a3;
        *(_QWORD *)(inited + 40) = a4;
        sub_100352F0C(inited);
        swift_setDeallocating(inited);
      }
      __asm { BR              X10 }
    }
  }
  else
  {
    swift_beginAccess(v5 + 80, v28, 32, 0);
    v13 = *(_QWORD *)(v5 + 88);
    if (!*(_QWORD *)(v13 + 16))
      goto LABEL_10;
  }
  v14 = sub_1002AA398(a2);
  if ((v15 & 1) == 0)
    goto LABEL_10;
  v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
  v17 = *v16;
  v18 = v16[1];
  swift_endAccess(v28);
  swift_bridgeObjectRetain(v17);
  v29 = v17;
  if ((a5 & 1) == 0)
    sub_10022BD50(a4, 0, a3);
  v19 = qword_10052DEC8[a3] | v18;
  v20 = v29;
  swift_beginAccess(v12, v28, 33, 0);
  swift_retain();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
    v29 = *v12;
    *v12 = 0x8000000000000000;
    sub_100096F0C(v20, v19, a2, isUniquelyReferenced_nonNull_native);
    v25 = *v12;
    *v12 = v29;
  }
  else
  {
    v24 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v6 + 88));
    v29 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v6 + 88) = 0x8000000000000000;
    sub_100096F0C(v20, v19, a2, v24);
    v25 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v6 + 88) = v29;
  }
  swift_release();
  swift_bridgeObjectRelease(v25);
  return swift_endAccess(v28);
}

uint64_t sub_100307CB4(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  uint64_t v25;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;

  v6 = v5;
  v12 = (uint64_t *)(v5 + 80);
  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v5 + 80, v28, 32, 0);
    v13 = *v12;
    if (!*(_QWORD *)(*v12 + 16))
    {
LABEL_10:
      swift_endAccess(v28);
      if ((a5 & 1) != 0)
      {
        sub_100352F0C((uint64_t)_swiftEmptyArrayStorage);
      }
      else
      {
        v21 = sub_10002A750(qword_10063F670);
        inited = swift_initStackObject(v21, &v27);
        *(_OWORD *)(inited + 16) = xmmword_100520250;
        *(_BYTE *)(inited + 32) = a3;
        *(_QWORD *)(inited + 40) = a4;
        sub_100352F0C(inited);
        swift_setDeallocating(inited);
      }
      __asm { BR              X10 }
    }
  }
  else
  {
    swift_beginAccess(v5 + 80, v28, 32, 0);
    v13 = *(_QWORD *)(v5 + 88);
    if (!*(_QWORD *)(v13 + 16))
      goto LABEL_10;
  }
  v14 = sub_1002AA398(a2);
  if ((v15 & 1) == 0)
    goto LABEL_10;
  v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
  v17 = *v16;
  v18 = v16[1];
  swift_endAccess(v28);
  swift_bridgeObjectRetain(v17);
  v29 = v17;
  if ((a5 & 1) == 0)
    sub_10022BD50(a4, 0, a3);
  v19 = qword_10052DEC8[a3] | v18;
  v20 = v29;
  swift_beginAccess(v12, v28, 33, 0);
  swift_retain(a2);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
    v29 = *v12;
    *v12 = 0x8000000000000000;
    sub_100097880(v20, v19, a2, isUniquelyReferenced_nonNull_native);
    v25 = *v12;
    *v12 = v29;
  }
  else
  {
    v24 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v6 + 88));
    v29 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v6 + 88) = 0x8000000000000000;
    sub_100097880(v20, v19, a2, v24);
    v25 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v6 + 88) = v29;
  }
  swift_release(a2);
  swift_bridgeObjectRelease(v25);
  return swift_endAccess(v28);
}

uint64_t sub_100307F24(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, signed __int8 a5, uint64_t a6, char a7)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  unsigned __int8 v59;
  uint64_t v60;
  _QWORD v61[3];

  v8 = a4 >> 1;
  if (a4 >> 1 == a3)
    return result;
  v9 = v7;
  v11 = a3;
  v60 = v7 + 80;
  v54 = result;
  swift_unknownObjectRetain(result);
  v56 = a5;
  v59 = a5;
  while (v11 < v8)
  {
    v15 = *(_QWORD *)(a2 + 8 * v11);
    swift_beginAccess(v60, v61, 32, 0);
    v16 = *(_QWORD *)(v9 + 88);
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = sub_1002AA398(v15);
      if ((v18 & 1) != 0)
      {
        v19 = (_QWORD *)(*(_QWORD *)(v16 + 56) + 16 * v17);
        v21 = (_QWORD *)*v19;
        v20 = v19[1];
        swift_endAccess(v61);
        swift_retain();
        swift_bridgeObjectRetain(v21);
        if ((a7 & 1) != 0)
          goto LABEL_26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
        v61[0] = v21;
        v24 = sub_1002AA3B8(a5);
        v25 = v21[2];
        v26 = (v23 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          goto LABEL_45;
        v28 = v23;
        if (v21[3] >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v21 = (_QWORD *)v61[0];
            if ((v23 & 1) == 0)
              goto LABEL_23;
          }
          else
          {
            sub_1002AE948();
            v21 = (_QWORD *)v61[0];
            if ((v28 & 1) == 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_100457F24(v27, isUniquelyReferenced_nonNull_native);
          v29 = sub_1002AA3B8(v59);
          if ((v28 & 1) != (v30 & 1))
            goto LABEL_48;
          v24 = v29;
          v21 = (_QWORD *)v61[0];
          if ((v28 & 1) == 0)
          {
LABEL_23:
            v21[(v24 >> 6) + 8] |= 1 << v24;
            *(_BYTE *)(v21[6] + v24) = v59;
            *(_QWORD *)(v21[7] + 8 * v24) = a6;
            v37 = v21[2];
            v34 = __OFADD__(v37, 1);
            v38 = v37 + 1;
            if (v34)
              goto LABEL_46;
            v21[2] = v38;
LABEL_25:
            swift_bridgeObjectRelease(0x8000000000000000);
LABEL_26:
            v36 = qword_10052DEC8[v56] | v20;
            goto LABEL_27;
          }
        }
        *(_QWORD *)(v21[7] + 8 * v24) = a6;
        goto LABEL_25;
      }
    }
    swift_endAccess(v61);
    v21 = _swiftEmptyDictionarySingleton;
    if ((a7 & 1) == 0)
    {
      sub_10002A750(&qword_100640EC0);
      v21 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
      v31 = sub_1002AA3B8(a5);
      if ((v32 & 1) != 0)
        goto LABEL_43;
      v21[(v31 >> 6) + 8] |= 1 << v31;
      *(_BYTE *)(v21[6] + v31) = a5;
      *(_QWORD *)(v21[7] + 8 * v31) = a6;
      v33 = v21[2];
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_44;
      v21[2] = v35;
    }
    v36 = qword_10052DEC8[v56];
    swift_retain();
LABEL_27:
    swift_beginAccess(v60, v61, 33, 0);
    swift_retain();
    v39 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v9 + 88));
    v40 = *(_QWORD **)(v9 + 88);
    *(_QWORD *)(v9 + 88) = 0x8000000000000000;
    v42 = sub_1002AA398(v15);
    v43 = v40[2];
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
      goto LABEL_41;
    v46 = v41;
    if (v40[3] >= v45)
    {
      if ((v39 & 1) != 0)
      {
        v49 = v40;
        if ((v41 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002AE7AC();
        v49 = v40;
        if ((v46 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_100457C50(v45, v39);
      v47 = sub_1002AA398(v15);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_47;
      v42 = v47;
      v49 = v40;
      if ((v46 & 1) != 0)
      {
LABEL_3:
        v12 = (uint64_t *)(v49[7] + 16 * v42);
        v13 = *v12;
        *v12 = (uint64_t)v21;
        v12[1] = v36;
        swift_bridgeObjectRelease(v13);
        goto LABEL_4;
      }
    }
    v49[(v42 >> 6) + 8] |= 1 << v42;
    *(_QWORD *)(v49[6] + 8 * v42) = v15;
    v50 = (_QWORD *)(v49[7] + 16 * v42);
    *v50 = v21;
    v50[1] = v36;
    v51 = v49[2];
    v34 = __OFADD__(v51, 1);
    v52 = v51 + 1;
    if (v34)
      goto LABEL_42;
    v49[2] = v52;
    swift_retain();
LABEL_4:
    ++v11;
    v14 = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v9 + 88) = v49;
    swift_release();
    swift_bridgeObjectRelease(v14);
    swift_endAccess(v61);
    swift_release();
    a5 = v59;
    if (v8 == v11)
      return swift_unknownObjectRelease(v54);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  v53 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v53);
  __break(1u);
LABEL_48:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
  __break(1u);
  return result;
}

uint64_t sub_100308358(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  _QWORD v63[3];

  v5 = v4;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_50;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v62 = v5 + 80;
    v59 = v7;
    v60 = v7 & 0xC000000000000001;
    v54 = (char)a2;
    v9 = 4;
    v56 = a2;
    v57 = a2;
    v58 = v8;
    while (1)
    {
      v13 = v9 - 4;
      if (v60)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7);
        v7 = v9 - 3;
        if (__OFADD__(v13, 1))
          goto LABEL_43;
      }
      else
      {
        v14 = *(_QWORD *)(v7 + 8 * v9);
        swift_retain(v14);
        v7 = v9 - 3;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
      }
      swift_beginAccess(v62, v63, 32, 0);
      v15 = *(_QWORD *)(v5 + 88);
      if (!*(_QWORD *)(v15 + 16))
        break;
      v16 = sub_1002AA398(v14);
      if ((v17 & 1) == 0)
        break;
      v18 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
      v20 = (_QWORD *)*v18;
      v19 = v18[1];
      swift_endAccess(v63);
      swift_bridgeObjectRetain(v20);
      if ((a4 & 1) != 0)
        goto LABEL_31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
      v63[0] = v20;
      v23 = sub_1002AA3B8(v56);
      v24 = v20[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
        goto LABEL_48;
      a2 = v22;
      if (v20[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v20 = (_QWORD *)v63[0];
          if ((v22 & 1) == 0)
            goto LABEL_28;
        }
        else
        {
          sub_1002AE948();
          v20 = (_QWORD *)v63[0];
          if ((a2 & 1) == 0)
            goto LABEL_28;
        }
      }
      else
      {
        sub_100457F24(v26, isUniquelyReferenced_nonNull_native);
        v27 = sub_1002AA3B8(v56);
        if ((a2 & 1) != (v28 & 1))
          goto LABEL_56;
        v23 = v27;
        v20 = (_QWORD *)v63[0];
        if ((a2 & 1) == 0)
        {
LABEL_28:
          v20[(v23 >> 6) + 8] |= 1 << v23;
          *(_BYTE *)(v20[6] + v23) = v56;
          *(_QWORD *)(v20[7] + 8 * v23) = a3;
          v35 = v20[2];
          v33 = __OFADD__(v35, 1);
          v36 = v35 + 1;
          if (v33)
            goto LABEL_49;
          v20[2] = v36;
          goto LABEL_30;
        }
      }
      *(_QWORD *)(v20[7] + 8 * v23) = a3;
LABEL_30:
      swift_bridgeObjectRelease(0x8000000000000000);
LABEL_31:
      v37 = qword_10052DEC8[v54] | v19;
      swift_beginAccess(v62, v63, 33, 0);
      swift_retain(v14);
      v38 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 88));
      v39 = *(_QWORD **)(v5 + 88);
      *(_QWORD *)(v5 + 88) = 0x8000000000000000;
      v41 = sub_1002AA398(v14);
      v42 = v39[2];
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
        goto LABEL_44;
      a2 = v40;
      if (v39[3] >= v44)
      {
        if ((v38 & 1) != 0)
        {
          v47 = v39;
          if ((v40 & 1) == 0)
            goto LABEL_38;
        }
        else
        {
          sub_1002AF934();
          v47 = v39;
          if ((a2 & 1) == 0)
            goto LABEL_38;
        }
      }
      else
      {
        sub_100459900(v44, v38);
        v45 = sub_1002AA398(v14);
        if ((a2 & 1) != (v46 & 1))
        {
          v53 = sub_10002A750((uint64_t *)&unk_100640E20);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v53);
          __break(1u);
LABEL_56:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
          __break(1u);
          JUMPOUT(0x100308838);
        }
        v41 = v45;
        v47 = v39;
        if ((a2 & 1) == 0)
        {
LABEL_38:
          v47[(v41 >> 6) + 8] |= 1 << v41;
          *(_QWORD *)(v47[6] + 8 * v41) = v14;
          v48 = (_QWORD *)(v47[7] + 16 * v41);
          *v48 = v20;
          v48[1] = v37;
          v49 = v47[2];
          v33 = __OFADD__(v49, 1);
          v50 = v49 + 1;
          if (v33)
            goto LABEL_45;
          v47[2] = v50;
          swift_retain(v14);
          goto LABEL_5;
        }
      }
      v10 = (_QWORD *)(v47[7] + 16 * v41);
      swift_bridgeObjectRelease(*v10);
      *v10 = v20;
      v10[1] = v37;
LABEL_5:
      v11 = *(_QWORD *)(v5 + 88);
      *(_QWORD *)(v5 + 88) = v47;
      swift_release(v14);
      swift_bridgeObjectRelease(v11);
      swift_endAccess(v63);
      swift_release(v14);
      ++v9;
      v12 = v7 == v58;
      v7 = v59;
      if (v12)
        return swift_bridgeObjectRelease(v59);
    }
    swift_endAccess(v63);
    if ((a4 & 1) != 0)
      goto LABEL_23;
    sub_10002A750(&qword_100640EC0);
    v29 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
    a2 = v56;
    v30 = sub_1002AA3B8(v56);
    if ((v31 & 1) != 0)
      goto LABEL_46;
    v29[(v30 >> 6) + 8] |= 1 << v30;
    *(_BYTE *)(v29[6] + v30) = v56;
    *(_QWORD *)(v29[7] + 8 * v30) = a3;
    v32 = v29[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (!v33)
    {
      v29[2] = v34;
LABEL_23:
      __asm { BR              X8 }
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (v7 < 0)
      v52 = v7;
    else
      v52 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v52);
  }
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_10030884C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, signed __int8 a5, uint64_t a6, char a7)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  unsigned __int8 v58;
  uint64_t v59;
  _QWORD v60[3];

  v8 = a4 >> 1;
  if (a4 >> 1 == a3)
    return result;
  v9 = v7;
  v11 = a3;
  v59 = v7 + 80;
  v53 = result;
  swift_unknownObjectRetain(result);
  v55 = a5;
  v58 = a5;
  while (v11 < v8)
  {
    v14 = *(_QWORD *)(a2 + 8 * v11);
    swift_beginAccess(v59, v60, 32, 0);
    v15 = *(_QWORD *)(v9 + 88);
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = sub_1002AA398(v14);
      if ((v17 & 1) != 0)
      {
        v18 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
        v20 = (_QWORD *)*v18;
        v19 = v18[1];
        swift_endAccess(v60);
        swift_retain(v14);
        swift_bridgeObjectRetain(v20);
        if ((a7 & 1) != 0)
          goto LABEL_26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
        v60[0] = v20;
        v23 = sub_1002AA3B8(a5);
        v24 = v20[2];
        v25 = (v22 & 1) == 0;
        v26 = v24 + v25;
        if (__OFADD__(v24, v25))
          goto LABEL_45;
        v27 = v22;
        if (v20[3] >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v20 = (_QWORD *)v60[0];
            if ((v22 & 1) == 0)
              goto LABEL_23;
          }
          else
          {
            sub_1002AE948();
            v20 = (_QWORD *)v60[0];
            if ((v27 & 1) == 0)
              goto LABEL_23;
          }
        }
        else
        {
          sub_100457F24(v26, isUniquelyReferenced_nonNull_native);
          v28 = sub_1002AA3B8(v58);
          if ((v27 & 1) != (v29 & 1))
            goto LABEL_48;
          v23 = v28;
          v20 = (_QWORD *)v60[0];
          if ((v27 & 1) == 0)
          {
LABEL_23:
            v20[(v23 >> 6) + 8] |= 1 << v23;
            *(_BYTE *)(v20[6] + v23) = v58;
            *(_QWORD *)(v20[7] + 8 * v23) = a6;
            v36 = v20[2];
            v33 = __OFADD__(v36, 1);
            v37 = v36 + 1;
            if (v33)
              goto LABEL_46;
            v20[2] = v37;
LABEL_25:
            swift_bridgeObjectRelease(0x8000000000000000);
LABEL_26:
            v35 = qword_10052DEC8[v55] | v19;
            goto LABEL_27;
          }
        }
        *(_QWORD *)(v20[7] + 8 * v23) = a6;
        goto LABEL_25;
      }
    }
    swift_endAccess(v60);
    v20 = &_swiftEmptyDictionarySingleton;
    if ((a7 & 1) == 0)
    {
      sub_10002A750(&qword_100640EC0);
      v20 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
      v30 = sub_1002AA3B8(a5);
      if ((v31 & 1) != 0)
        goto LABEL_43;
      v20[(v30 >> 6) + 8] |= 1 << v30;
      *(_BYTE *)(v20[6] + v30) = a5;
      *(_QWORD *)(v20[7] + 8 * v30) = a6;
      v32 = v20[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_44;
      v20[2] = v34;
    }
    v35 = qword_10052DEC8[v55];
    swift_retain(v14);
LABEL_27:
    swift_beginAccess(v59, v60, 33, 0);
    swift_retain(v14);
    v38 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v9 + 88));
    v39 = *(_QWORD **)(v9 + 88);
    *(_QWORD *)(v9 + 88) = 0x8000000000000000;
    v41 = sub_1002AA398(v14);
    v42 = v39[2];
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      goto LABEL_41;
    v45 = v40;
    if (v39[3] >= v44)
    {
      if ((v38 & 1) != 0)
      {
        v48 = v39;
        if ((v40 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002AF934();
        v48 = v39;
        if ((v45 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_100459900(v44, v38);
      v46 = sub_1002AA398(v14);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_47;
      v41 = v46;
      v48 = v39;
      if ((v45 & 1) != 0)
      {
LABEL_3:
        v12 = (_QWORD *)(v48[7] + 16 * v41);
        swift_bridgeObjectRelease(*v12);
        *v12 = v20;
        v12[1] = v35;
        goto LABEL_4;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    *(_QWORD *)(v48[6] + 8 * v41) = v14;
    v49 = (_QWORD *)(v48[7] + 16 * v41);
    *v49 = v20;
    v49[1] = v35;
    v50 = v48[2];
    v33 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (v33)
      goto LABEL_42;
    v48[2] = v51;
    swift_retain(v14);
LABEL_4:
    ++v11;
    v13 = *(_QWORD *)(v9 + 88);
    *(_QWORD *)(v9 + 88) = v48;
    swift_release(v14);
    swift_bridgeObjectRelease(v13);
    swift_endAccess(v60);
    swift_release(v14);
    a5 = v58;
    if (v8 == v11)
      return swift_unknownObjectRelease(v53);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  v52 = sub_10002A750((uint64_t *)&unk_100640E20);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v52);
  __break(1u);
LABEL_48:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
  __break(1u);
  return result;
}

void sub_100308C80(Swift::Int a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  unint64_t v49;
  uint64_t v50;
  char v51[24];

  v5 = v2;
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = IndexPath.row.getter(v14);
  v16 = IndexPath.row.getter(v15);
  v17 = v16 + a2;
  if (__OFADD__(v16, a2))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v17 < v15)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v18 = IndexPath.section.getter(v16);
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  a1 = v18;
  v3 = (_QWORD *)*v5;
  if (v18 >= *(_QWORD *)(*v5 + 16))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v19 = &v3[2 * v18];
  a2 = v19[4];
  v4 = v19[5];
  v49 = (unint64_t)v4 >> 62;
  if (!((unint64_t)v4 >> 62))
  {
    v20 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    swift_retain();
    if (v20 >= v15)
      goto LABEL_7;
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_42:
  v43 = a2;
  if (v4 < 0)
    v44 = v4;
  else
    v44 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v4, 2);
  swift_retain();
  v45 = v44;
  a2 = v43;
  v20 = _CocoaArrayWrapper.endIndex.getter(v45);
  swift_bridgeObjectRelease(v4);
  if (v20 < v15)
    goto LABEL_46;
LABEL_7:
  if (v15 < 0)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    v3 = sub_1002B375C(v3);
    goto LABEL_26;
  }
  v47 = a2;
  v48 = a1;
  if (v49)
  {
    a1 = v15;
    if (v4 < 0)
      v21 = v4;
    else
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    a2 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    a1 = v15;
    a2 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 < v17)
    goto LABEL_48;
  if ((v4 & 0xC000000000000001) != 0 && a1 != v17)
  {
    if (a1 >= (unint64_t)v17)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v22 = a1;
    do
    {
      sub_10002A750(&qword_1006463D0);
      _ArrayBuffer._typeCheckSlowPath(_:)(v22++);
    }
    while (v17 != v22);
  }
  a2 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v49)
  {
    if (v4 < 0)
      a2 = v4;
    swift_bridgeObjectRetain(v4);
    v20 = a1;
    a2 = _CocoaArrayWrapper.subscript.getter(a1, v17, a2);
    v24 = v23;
    v49 = v25;
    v15 = v26;
    swift_release();
    v27 = v4;
    v4 = v24;
    swift_bridgeObjectRelease_n(v27, 2);
  }
  else
  {
    swift_release();
    v4 = a2 + 32;
    v15 = (2 * v17) | 1;
    v20 = a1;
    v49 = a1;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  a1 = v48;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_49;
LABEL_26:
  if (a1 >= v3[2])
  {
    __break(1u);
    goto LABEL_51;
  }
  sub_10043AFF4(v20, v17);
  *v5 = v3;
  v29 = v15;
  v30 = v49;
  v31 = __OFSUB__((unint64_t)v15 >> 1, v49);
  v32 = ((unint64_t)v15 >> 1) - v49;
  if (!v32)
    return;
  v48 = v29;
  if ((v32 < 0) ^ v31 | (v32 == 0))
  {
LABEL_52:
    __break(1u);
    return;
  }
  v47 = a2;
  swift_unknownObjectRetain(a2);
  v46 = v4;
  v33 = (uint64_t *)(v4 + 8 * v30);
  do
  {
    v34 = *v33;
    v35 = *v33 + *(_QWORD *)(*(_QWORD *)*v33 + 144);
    swift_beginAccess(v35, v51, 0, 0);
    sub_10002B1E8(v35, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v36 = swift_retain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v36);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100309A88((uint64_t)v13, v34);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v37 = sub_1002AA398(v34);
    if ((v38 & 1) != 0)
    {
      v39 = v37;
      v40 = swift_isUniquelyReferenced_nonNull_native(v5[2]);
      v41 = v5[2];
      v50 = v41;
      v5[2] = 0x8000000000000000;
      if ((v40 & 1) == 0)
      {
        sub_1002AE404();
        v41 = v50;
      }
      swift_release();
      sub_1002AD01C(v39, v41);
      v42 = v5[2];
      v5[2] = v41;
      swift_release();
      swift_bridgeObjectRelease(v42);
    }
    else
    {
      swift_release();
    }
    ++v33;
    --v32;
  }
  while (v32);
  swift_unknownObjectRelease(v47);
}

uint64_t sub_1003090C0(Swift::Int a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  unint64_t v49;
  uint64_t v50;
  char v51[24];

  v5 = v2;
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = IndexPath.row.getter(v12);
  v16 = IndexPath.row.getter(v15);
  v17 = v16 + a2;
  if (__OFADD__(v16, a2))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v17 < v15)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v18 = IndexPath.section.getter(v16);
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  a1 = v18;
  v3 = (_QWORD *)*v5;
  if (v18 >= *(_QWORD *)(*v5 + 16))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v19 = &v3[2 * v18];
  a2 = v19[4];
  v4 = v19[5];
  v49 = (unint64_t)v4 >> 62;
  if (!((unint64_t)v4 >> 62))
  {
    v20 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    result = swift_retain(a2);
    if (v20 >= v15)
      goto LABEL_7;
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_42:
  v43 = a2;
  if (v4 < 0)
    v44 = v4;
  else
    v44 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v4, 2);
  swift_retain(v43);
  v45 = v44;
  a2 = v43;
  v20 = _CocoaArrayWrapper.endIndex.getter(v45);
  result = swift_bridgeObjectRelease(v4);
  if (v20 < v15)
    goto LABEL_46;
LABEL_7:
  if (v15 < 0)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    result = (uint64_t)sub_1002B37D4(v3);
    v3 = (_QWORD *)result;
    goto LABEL_26;
  }
  v47 = a2;
  v48 = a1;
  if (v49)
  {
    a1 = v15;
    if (v4 < 0)
      v22 = v4;
    else
      v22 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    a2 = _CocoaArrayWrapper.endIndex.getter(v22);
    result = swift_bridgeObjectRelease(v4);
  }
  else
  {
    a1 = v15;
    a2 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 < v17)
    goto LABEL_48;
  if ((v4 & 0xC000000000000001) != 0 && a1 != v17)
  {
    if (a1 >= (unint64_t)v17)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v23 = a1;
    do
    {
      sub_10002A750((uint64_t *)&unk_100640E20);
      _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
    }
    while (v17 != v23);
  }
  a2 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v49)
  {
    if (v4 < 0)
      a2 = v4;
    swift_bridgeObjectRetain(v4);
    v20 = a1;
    a2 = _CocoaArrayWrapper.subscript.getter(a1, v17, a2);
    v25 = v24;
    v49 = v26;
    v15 = v27;
    swift_release(v47);
    v28 = v4;
    v4 = v25;
    swift_bridgeObjectRelease_n(v28, 2);
  }
  else
  {
    swift_release(v47);
    v4 = a2 + 32;
    v15 = (2 * v17) | 1;
    v20 = a1;
    v49 = a1;
  }
  result = swift_isUniquelyReferenced_nonNull_native(v3);
  a1 = v48;
  if ((result & 1) == 0)
    goto LABEL_49;
LABEL_26:
  if (a1 >= v3[2])
  {
    __break(1u);
    goto LABEL_51;
  }
  result = sub_10043B2F0(v20, v17);
  *v5 = v3;
  v29 = v15;
  v30 = v49;
  v31 = __OFSUB__((unint64_t)v15 >> 1, v49);
  v32 = ((unint64_t)v15 >> 1) - v49;
  if (!v32)
    return a2;
  v48 = v29;
  if (!((v32 < 0) ^ v31 | (v32 == 0)))
  {
    v47 = a2;
    swift_unknownObjectRetain(a2);
    v46 = v4;
    v33 = (uint64_t *)(v4 + 8 * v30);
    do
    {
      v34 = *v33;
      v35 = *v33 + *(_QWORD *)(*(_QWORD *)*v33 + 144);
      swift_beginAccess(v35, v51, 0, 0);
      sub_10002B1E8(v35, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v36 = swift_retain(v34);
      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v36);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100309D34((uint64_t)v14, v34);
      sub_10001F544((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v37 = sub_1002AA398(v34);
      if ((v38 & 1) != 0)
      {
        v39 = v37;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5[2]);
        v41 = v5[2];
        v50 = v41;
        v5[2] = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002AF55C();
          v41 = v50;
        }
        swift_release(*(_QWORD *)(*(_QWORD *)(v41 + 48) + 8 * v39));
        sub_1002AD01C(v39, v41);
        v42 = v5[2];
        v5[2] = v41;
        swift_release(v34);
        swift_bridgeObjectRelease(v42);
      }
      else
      {
        swift_release(v34);
      }
      ++v33;
      --v32;
    }
    while (v32);
    a2 = v47;
    swift_unknownObjectRelease(v47);
    return a2;
  }
LABEL_52:
  __break(1u);
  return result;
}

void sub_100309500(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  v7 = a3;
  v9 = (_QWORD *)*v5;
  if (*(_QWORD *)(*v5 + 16) <= a3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v13 = a5;
  v6 = a2;
  v11 = a1;
  v24 = v5;
  v14 = &v9[2 * a3];
  v8 = v14[4];
  v12 = v14[5];
  v5 = (_QWORD *)((unint64_t)v12 >> 62);
  if (!((unint64_t)v12 >> 62))
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    swift_retain();
    if (v15 >= v11)
      goto LABEL_5;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_35:
  if (v12 < 0)
    v22 = v12;
  else
    v22 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v12, 2);
  swift_retain();
  v15 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v12);
  if (v15 < v11)
    goto LABEL_39;
LABEL_5:
  if (v11 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v5)
  {
    if (v12 < 0)
      v16 = v12;
    else
      v16 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v15 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < (uint64_t)v6)
    goto LABEL_41;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    v9 = sub_1002B375C(v9);
    goto LABEL_27;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (v6 < v11)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v11 != v6)
    {
      if (v11 >= v6)
      {
LABEL_48:
        __break(1u);
        return;
      }
      v17 = v11;
      do
      {
        sub_10002A750(&qword_1006463D0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v17++);
      }
      while (v6 != v17);
    }
  }
  v23 = v13;
  v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if (v5)
  {
    if (v12 < 0)
      v18 = v12;
    else
      v18 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.subscript.getter(v11, v6, v18);
    v8 = v19;
    v10 = v20;
    v15 = v21;
    swift_release();
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    swift_release();
    v8 = v13 + 32;
    v15 = (2 * v6) | 1;
    v10 = v11;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    goto LABEL_43;
LABEL_27:
  if (v9[2] <= v7)
  {
    __break(1u);
    goto LABEL_45;
  }
  sub_10043AFF4(v11, v6);
  swift_unknownObjectRetain(v13);
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v9[2] <= a4)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_100438618(v23, v23, v13, v8, v10, v15);
  *v24 = v9;
  if (v7 != a4)
    sub_10006A484(v13, v8, v10, v15, a4);
}

void sub_1003097C4(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  v7 = a3;
  v9 = (_QWORD *)*v5;
  if (*(_QWORD *)(*v5 + 16) <= a3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v13 = a5;
  v6 = a2;
  v11 = a1;
  v25 = v5;
  v14 = &v9[2 * a3];
  v8 = v14[4];
  v12 = v14[5];
  v5 = (_QWORD *)((unint64_t)v12 >> 62);
  if (!((unint64_t)v12 >> 62))
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    swift_retain(v8);
    if (v15 >= v11)
      goto LABEL_5;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_35:
  if (v12 < 0)
    v22 = v12;
  else
    v22 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v12, 2);
  swift_retain(v8);
  v15 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v12);
  if (v15 < v11)
    goto LABEL_39;
LABEL_5:
  if (v11 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v5)
  {
    if (v12 < 0)
      v16 = v12;
    else
      v16 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v15 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < (uint64_t)v6)
    goto LABEL_41;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    v9 = sub_1002B37D4(v9);
    goto LABEL_27;
  }
  v24 = v8;
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (v6 < v11)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v11 != v6)
    {
      if (v11 >= v6)
      {
LABEL_48:
        __break(1u);
        return;
      }
      v17 = v11;
      do
      {
        sub_10002A750((uint64_t *)&unk_100640E20);
        _ArrayBuffer._typeCheckSlowPath(_:)(v17++);
      }
      while (v6 != v17);
    }
  }
  v23 = v13;
  v13 = v12 & 0xFFFFFFFFFFFFFF8;
  if (v5)
  {
    if (v12 < 0)
      v18 = v12;
    else
      v18 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.subscript.getter(v11, v6, v18);
    v8 = v19;
    v10 = v20;
    v15 = v21;
    swift_release(v24);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  else
  {
    swift_release(v24);
    v8 = v13 + 32;
    v15 = (2 * v6) | 1;
    v10 = v11;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    goto LABEL_43;
LABEL_27:
  if (v9[2] <= v7)
  {
    __break(1u);
    goto LABEL_45;
  }
  sub_10043B2F0(v11, v6);
  swift_unknownObjectRetain(v13);
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v9[2] <= a4)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_100439158(v23, v23, v13, v8, v10, v15);
  *v25 = v9;
  if (v7 != a4)
    sub_10006AA60(v13, v8, v10, v15, a4);
}

uint64_t sub_100309A88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v5 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  v14 = (_QWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 8);
  if (!*(_QWORD *)(v15 + 16))
    return 0;
  v16 = sub_1002AA39C(a1);
  if ((v17 & 1) == 0)
    return 0;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain(v18);
  if ((sub_10037B2B0(a2, v18) & 1) == 0)
  {
    swift_bridgeObjectRelease(v18);
    return 0;
  }
  if ((v18 & 0xC000000000000001) != 0)
  {
    if (v18 < 0)
      v19 = v18;
    else
      v19 = v18 & 0xFFFFFFFFFFFFFF8;
    v20 = __CocoaSet.count.getter(v19);
  }
  else
  {
    v20 = *(_QWORD *)(v18 + 16);
  }
  swift_bridgeObjectRelease(v18);
  if (v20 == 1)
  {
    v23 = sub_1002AC9F0(a1);
    swift_bridgeObjectRelease(v23);
    return 1;
  }
  sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10002B1E8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  sub_10002B1E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v34 = *v14;
  v25 = v34;
  *v14 = 0x8000000000000000;
  v27 = sub_1002AA39C((uint64_t)v7);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = (v26 & 1) == 0;
  v30 = v28 + v29;
  if (__OFADD__(v28, v29))
  {
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v20) = v26;
  if (*(_QWORD *)(v25 + 24) >= v30)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v26 & 1) != 0)
        goto LABEL_22;
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    sub_1002AE58C();
    if ((v20 & 1) != 0)
      goto LABEL_22;
    goto LABEL_25;
  }
  sub_1004578F4(v30, isUniquelyReferenced_nonNull_native);
  v31 = sub_1002AA39C((uint64_t)v7);
  if ((v20 & 1) == (v32 & 1))
  {
    v27 = v31;
    if ((v20 & 1) == 0)
      goto LABEL_25;
LABEL_22:
    v33 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v27);
    sub_1000F4778(a2);
    swift_release();
    v21 = 1;
    sub_1000721AC(&v33, 1, &v34, v27, (uint64_t)v7);
    swift_bridgeObjectRelease(v33);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *v14 = v34;
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return v21;
  }
LABEL_26:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v5);
  __break(1u);
  return result;
}

uint64_t sub_100309D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v34 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v34 - v12;
  v14 = (_QWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 8);
  if (!*(_QWORD *)(v15 + 16))
    return 0;
  v16 = sub_1002AA6DC(a1);
  if ((v17 & 1) == 0)
    return 0;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain(v18);
  if ((sub_10037B2B0(a2, v18) & 1) == 0)
  {
    swift_bridgeObjectRelease(v18);
    return 0;
  }
  if ((v18 & 0xC000000000000001) != 0)
  {
    if (v18 < 0)
      v19 = v18;
    else
      v19 = v18 & 0xFFFFFFFFFFFFFF8;
    v20 = __CocoaSet.count.getter(v19);
  }
  else
  {
    v20 = *(_QWORD *)(v18 + 16);
  }
  swift_bridgeObjectRelease(v18);
  if (v20 == 1)
  {
    v23 = sub_1002ACAE0(a1);
    swift_bridgeObjectRelease(v23);
    return 1;
  }
  sub_10002B1E8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_10002B1E8((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  sub_10002B1E8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v35 = *v14;
  v25 = v35;
  *v14 = 0x8000000000000000;
  v27 = sub_1002AA6DC((uint64_t)v8);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = (v26 & 1) == 0;
  v30 = v28 + v29;
  if (__OFADD__(v28, v29))
  {
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v20) = v26;
  if (*(_QWORD *)(v25 + 24) >= v30)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v26 & 1) != 0)
        goto LABEL_22;
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    sub_1002AF6FC();
    if ((v20 & 1) != 0)
      goto LABEL_22;
    goto LABEL_25;
  }
  sub_100459584(v30, isUniquelyReferenced_nonNull_native);
  v31 = sub_1002AA6DC((uint64_t)v8);
  if ((v20 & 1) == (v32 & 1))
  {
    v27 = v31;
    if ((v20 & 1) == 0)
      goto LABEL_25;
LABEL_22:
    v34 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v27);
    v33 = sub_1000F4984(a2);
    swift_release(v33);
    v21 = 1;
    sub_10007229C(&v34, 1, &v35, v27, (uint64_t)v8);
    swift_bridgeObjectRelease(v34);
    sub_10001F544((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *v14 = v35;
    sub_10001F544((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return v21;
  }
LABEL_26:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v5);
  __break(1u);
  return result;
}

uint64_t sub_100309FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  return sub_100309FFC(a1, a2, a3, a4, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, a5);
}

uint64_t sub_100309FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t (*a5)(uint64_t)@<X5>, uint64_t (*a6)(uint64_t, uint64_t)@<X6>, void (*a7)(uint64_t, _QWORD *)@<X7>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v47)(void);
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t, _QWORD *);
  char v60[24];
  _QWORD v61[5];

  v59 = a7;
  v15 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v58 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_57;
  result = a5(a1);
  if ((v22 & 1) == 0)
    goto LABEL_75;
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * result);
  if ((v23 & 0x8000000000000000) != 0)
    goto LABEL_67;
  if (v23 >= *(_QWORD *)(a2 + 16))
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (*(_QWORD *)(a2 + 16 * v23 + 32) != a1)
  {
LABEL_75:
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_57;
    result = a5(a1);
    if ((v24 & 1) == 0)
      goto LABEL_57;
    v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * result);
    v57 = v19;
    if ((a4 & 1) != 0)
    {
      v53 = v25;
      Strong = swift_weakLoadStrong(a1 + 56);
      result = swift_retain(a1);
      v27 = 0;
      if (Strong)
      {
        v28 = a1;
        v55 = v18;
        v56 = a8;
        v54 = v17;
        do
        {
          v29 = __OFADD__(v27++, 1);
          if (v29)
          {
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          a1 = Strong;
          swift_beginAccess(Strong + 64, v60, 0, 0);
          v30 = *(_QWORD *)(Strong + 64);
          if ((unint64_t)v30 >> 62)
          {
            if (v30 < 0)
              v38 = *(_QWORD *)(Strong + 64);
            else
              v38 = v30 & 0xFFFFFFFFFFFFFF8;
            swift_retain(a1);
            swift_bridgeObjectRetain(v30);
            result = _CocoaArrayWrapper.endIndex.getter(v38);
            v31 = result;
            if (!result)
            {
LABEL_11:
              swift_release(v28);
              swift_bridgeObjectRelease(v30);
              goto LABEL_12;
            }
          }
          else
          {
            v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain(Strong);
            result = swift_bridgeObjectRetain(v30);
            if (!v31)
              goto LABEL_11;
          }
          if ((v30 & 0xC000000000000001) != 0)
          {
            result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v30);
            v32 = result;
            if (result != v28)
              goto LABEL_19;
          }
          else
          {
            if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_66;
            v32 = *(_QWORD *)(v30 + 32);
            result = swift_retain(v32);
            if (v32 != v28)
            {
LABEL_19:
              v33 = 0;
              v34 = v31 - 1;
              while (1)
              {
                v29 = __OFADD__(v27, 1);
                v35 = v27 + 1;
                if (v29)
                  break;
                if ((*(_BYTE *)(v32 + 48) & 1) != 0)
                {
                  v61[0] = 0;
                  v59(v32, v61);
                  v36 = v61[0];
                  *(_QWORD *)(v32 + 40) = v61[0];
                  *(_BYTE *)(v32 + 48) = 0;
                }
                else
                {
                  v36 = *(_QWORD *)(v32 + 40);
                }
                result = swift_release(v32);
                v29 = __OFADD__(v35, v36);
                v27 = v35 + v36;
                if (v29)
                  goto LABEL_62;
                if (v34 == v33)
                {
                  swift_release(v28);
                  swift_bridgeObjectRelease(v30);
                  goto LABEL_35;
                }
                v37 = v33 + 1;
                if ((v30 & 0xC000000000000001) != 0)
                {
                  result = specialized _ArrayBuffer._getElementSlowPath(_:)(v33 + 1, v30);
                  v32 = result;
                  if (__OFADD__(v37, 1))
                    goto LABEL_63;
                }
                else
                {
                  if (v37 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_64;
                  v32 = *(_QWORD *)(v30 + 8 * v33 + 40);
                  result = swift_retain(v32);
                  if (__OFADD__(v37, 1))
                    goto LABEL_63;
                }
                ++v33;
                if (v32 == v28)
                  goto LABEL_33;
              }
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease(v30);
          swift_release_n(v28, 2);
LABEL_35:
          v18 = v55;
          a8 = v56;
          v17 = v54;
          v19 = v57;
LABEL_12:
          Strong = swift_weakLoadStrong(a1 + 56);
          result = swift_release(a1);
          v28 = a1;
        }
        while (Strong);
      }
      swift_release(a1);
      result = v27 - 1;
      if (!__OFSUB__(v27, 1))
      {
        if ((result & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)(result, v53);
LABEL_54:
          v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
          v46((uint64_t)v17, 0, 1, v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
          {
            v47 = *(void (**)(void))(v19 + 32);
            v48 = v58;
            v47();
            result = IndexPath.row.modify(v61);
            if (!__OFADD__(*v49, 1))
            {
              ++*v49;
              ((void (*)(_QWORD *, _QWORD))result)(v61, 0);
              ((void (*)(uint64_t, char *, uint64_t))v47)(a8, v48, v18);
              v50 = a8;
              v51 = 0;
              return v46(v50, v51, 1, v18);
            }
            goto LABEL_72;
          }
LABEL_58:
          sub_1000073A0((uint64_t)v17, &qword_100646950);
          v50 = a8;
          v51 = 1;
          return v46(v50, v51, 1, v18);
        }
LABEL_57:
        v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
        v46((uint64_t)v17, 1, 1, v18);
        goto LABEL_58;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return result;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(_QWORD *)(a2 + 16))
      {
        v41 = *(_QWORD *)(a2 + 16 * v25 + 40);
        swift_retain(a1);
        v42 = swift_bridgeObjectRetain(v41);
        v43 = a6(v42, a1);
        v45 = v44;
        swift_bridgeObjectRelease(v41);
        swift_release(a1);
        if ((v45 & 1) != 0)
        {
          v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
          v46((uint64_t)v17, 1, 1, v18);
          goto LABEL_58;
        }
        IndexPath.init(row:section:)(v43, v25);
        v19 = v57;
        goto LABEL_54;
      }
      goto LABEL_70;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (!*(_QWORD *)(a3 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(a8, 1, 1, v18);
  v39 = a5(a1);
  if ((v40 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(a8, 1, 1, v18);
  IndexPath.init(row:section:)(0, *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v39));
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a8, 0, 1, v18);
}

uint64_t sub_10030A52C(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v20[24];

  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v20[-v12 - 8];
  v14 = a1[72];
  v15 = (uint64_t)&a1[*(_QWORD *)(*(_QWORD *)a1 + 144)];
  if (v14 == 1)
  {
    swift_beginAccess(v15, v20, 0, 0);
    v16 = sub_10002B1E8(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v16);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1004809C4((uint64_t)v13, (uint64_t)v10);
    return sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  else
  {
    swift_beginAccess(v15, v20, 0, 0);
    v18 = sub_10002B1E8(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v18);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000F4754((uint64_t)v13, (uint64_t)v4);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
  }
}

uint64_t sub_10030A704(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v20[24];

  v2 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v13 = &v20[-v12 - 8];
  v14 = a1[72];
  v15 = (uint64_t)&a1[*(_QWORD *)(*(_QWORD *)a1 + 144)];
  if (v14 == 1)
  {
    swift_beginAccess(v15, v20, 0, 0);
    v16 = sub_10002B1E8(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v16);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100481964((uint64_t)v13, (uint64_t)v11);
    return sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  else
  {
    swift_beginAccess(v15, v20, 0, 0);
    v18 = sub_10002B1E8(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v18);
    sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1000F4960((uint64_t)v13, (uint64_t)v4);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006462C0);
  }
}

double sub_10030A8DC(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  char v37;
  void *Strong;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  double result;
  uint64_t v74;
  _QWORD *v75;
  _QWORD v76[4];
  _QWORD v77[4];
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[24];
  _QWORD v93[3];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108[8];
  char v109[8];

  v7 = (char *)v6;
  v91 = qword_100645F40;
  v11 = *(_QWORD *)(v6 + qword_100645F40);
  if (!v11)
  {
    v12 = sub_1000EEB2C(v6, a3, a4);
    if (a5)
      goto LABEL_3;
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v6 + qword_100645F40);
  if (!a5)
    goto LABEL_9;
LABEL_3:
  v13 = swift_allocObject(&unk_1006005D8, 32, 7);
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  v14 = (_QWORD *)(v12 + 64);
  swift_beginAccess(v12 + 64, &v96, 33, 0);
  v15 = *(_QWORD **)(v12 + 64);
  swift_retain();
  sub_100053DE4(a5, a6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
  *(_QWORD *)(v12 + 64) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_1004557BC(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_1004557BC((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[2 * v18];
  v19[4] = sub_10031B5D8;
  v19[5] = v13;
  swift_endAccess(&v96);
LABEL_10:
  a1(v12);
  if (!v11)
  {
    if ((*(_BYTE *)(v12 + 72) & 1) != 0)
    {
      swift_release();
LABEL_27:
      *(_QWORD *)&v7[v91] = 0;
      goto LABEL_28;
    }
    swift_beginAccess(v12 + 80, v109, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)(v12 + 80) + 16) && !*(_QWORD *)(*(_QWORD *)(v12 + 88) + 16))
    {
      swift_beginAccess(v12 + 96, v92, 0, 0);
      if (!*(_QWORD *)(*(_QWORD *)(v12 + 96) + 16))
      {
        sub_100010634(v6 + qword_100645F08, (uint64_t)&v96);
        v74 = v99;
        v75 = v100;
        sub_10001413C(&v96, v99);
        ((void (*)(uint64_t, _QWORD *))v75[3])(v74, v75);
        swift_release();
        v72 = &v96;
LABEL_26:
        sub_100027F10(v72);
        goto LABEL_27;
      }
    }
    v20 = *(_QWORD *)(v12 + 48);
    v21 = *(_QWORD *)(v12 + 56);
    v22 = (uint64_t *)(v6 + qword_100645F48);
    swift_beginAccess(&v7[qword_100645F48], v108, 0, 0);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    if ((sub_10034169C(v20, v23) & 1) != 0)
    {
      v25 = sub_10034169C(v21, v24);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v23);
      if ((v25 & 1) != 0)
      {
LABEL_21:
        __chkstk_darwin(v26);
        v77[2] = v7;
        swift_beginAccess(&v7[qword_100645F50], &v96, 33, 0);
        __chkstk_darwin(v29);
        v76[2] = sub_10031B3E4;
        v76[3] = v77;
        v30 = sub_10002A750((uint64_t *)&unk_100646F30);
        Set.removeAll(where:)(sub_10031B3EC, v76, v30);
        swift_endAccess(&v96);
        v31 = (_QWORD *)sub_10006B3DC();
        v87 = v31;
        v33 = v32;
        v86 = (uint64_t)v32;
        v35 = v34;
        v85 = v34;
        v37 = v36;
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v7[qword_100645EF8]);
        ObjectType = swift_getObjectType(Strong, v39);

        v41 = _typeName(_:qualified:)(ObjectType, 0);
        v43 = v42;
        sub_1000E02D4(v31, v33, v35, v37 & 1, v41, v42, &v96);
        v44 = v97;
        v90 = v96;
        v45 = v99;
        v89 = v98;
        v47 = v100;
        v46 = v101;
        v49 = v102;
        v48 = v103;
        v80 = v7;
        v50 = v104;
        v79 = v105;
        v51 = v106;
        v88 = v107;
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRelease(v86);
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v43);
        v96 = v90;
        v97 = v44;
        v87 = v44;
        v98 = v89;
        v99 = v45;
        v86 = v45;
        v85 = v47;
        v100 = v47;
        v101 = v46;
        v84 = v46;
        v83 = v49;
        v102 = v49;
        v103 = v48;
        v82 = v48;
        v81 = v50;
        v104 = v50;
        v7 = v80;
        v105 = v79;
        v106 = v51;
        v79 = v51;
        v52 = *(_QWORD *)&v80[qword_100645F18];
        if (v52
          && (v53 = *(uint64_t (**)(uint64_t))(v52 + 16),
              v54 = swift_retain(),
              v55 = v53(v54),
              swift_release(),
              (v55 & 1) != 0))
        {
          v56 = swift_allocObject(&unk_1006005B0, 32, 7);
          *(_QWORD *)(v56 + 16) = v7;
          *(_QWORD *)(v56 + 24) = v12;
          v57 = v56;
          v58 = v7;
          swift_retain();
          v59 = sub_10031B40C;
        }
        else
        {
          v59 = 0;
          v57 = 0;
        }
        v60 = swift_allocObject(&unk_100600588, 24, 7);
        swift_unknownObjectWeakInit(v60 + 16, v7);
        v61 = (uint64_t)&v7[qword_100645F08];
        sub_100010634((uint64_t)&v7[qword_100645F08], (uint64_t)v93);
        v62 = v94;
        v63 = v95;
        sub_10001413C(v93, v94);
        v64 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v63 + 32);
        swift_retain();
        v78 = v57;
        v64(&v96, sub_1001034F4, v60, v59, v57, sub_10031B37C, v12, v62, v63);
        swift_release();
        swift_bridgeObjectRelease(v79);
        swift_bridgeObjectRelease(v81);
        swift_bridgeObjectRelease(v82);
        swift_bridgeObjectRelease(v83);
        swift_bridgeObjectRelease(v84);
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRelease(v86);
        swift_bridgeObjectRelease(v89);
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v90);
        sub_100027F10(v93);
        v65 = *(_QWORD *)(v12 + 16);
        v66 = *(_QWORD *)(v12 + 24);
        v67 = *(_QWORD *)(v12 + 32);
        v68 = *(_BYTE *)(v12 + 40);
        swift_bridgeObjectRetain(v65);
        swift_bridgeObjectRetain(v66);
        swift_bridgeObjectRetain(v67);
        v69 = v88;
        sub_1000EFCAC(v88, v65, v66, v67, v68);
        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v65);
        swift_bridgeObjectRelease(v69);
        sub_100010634(v61, (uint64_t)v93);
        v70 = v94;
        v71 = v95;
        sub_10001413C(v93, v94);
        (*(void (**)(uint64_t, uint64_t))(v71 + 24))(v70, v71);
        swift_release();
        sub_1000381B8((uint64_t)v59, v78);
        swift_release();
        v72 = v93;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v23);
    }
    v27 = *v22;
    swift_retain();
    swift_bridgeObjectRetain(v27);
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)(v28);
    swift_release();
    swift_bridgeObjectRelease(v27);
    goto LABEL_21;
  }
LABEL_28:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_10030B054(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  void *Strong;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[4];
  _QWORD v78[4];
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93[24];
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109[8];
  char v110[8];

  v7 = (char *)v6;
  v92 = qword_100645F40;
  v11 = *(_QWORD *)(v6 + qword_100645F40);
  if (!v11)
  {
    v12 = sub_1000EEB48(v6, a3, a4);
    if (a5)
      goto LABEL_3;
LABEL_9:
    swift_retain(v11);
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v6 + qword_100645F40);
  if (!a5)
    goto LABEL_9;
LABEL_3:
  v13 = swift_allocObject(&unk_100600560, 32, 7);
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  v14 = (_QWORD *)(v12 + 64);
  swift_beginAccess(v12 + 64, &v97, 33, 0);
  v15 = *(_QWORD **)(v12 + 64);
  swift_retain(v11);
  sub_100053DE4(a5, a6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
  *(_QWORD *)(v12 + 64) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_1004557BC(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_1004557BC((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v18 + 1;
  v19 = &v15[2 * v18];
  v19[4] = sub_100266FD0;
  v19[5] = v13;
  swift_endAccess(&v97);
LABEL_10:
  a1(v12);
  if (!v11)
  {
    if ((*(_BYTE *)(v12 + 72) & 1) != 0)
    {
      swift_release(v12);
LABEL_27:
      v12 = *(_QWORD *)&v7[v92];
      *(_QWORD *)&v7[v92] = 0;
      return swift_release(v12);
    }
    swift_beginAccess(v12 + 80, v110, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)(v12 + 80) + 16) && !*(_QWORD *)(*(_QWORD *)(v12 + 88) + 16))
    {
      swift_beginAccess(v12 + 96, v93, 0, 0);
      if (!*(_QWORD *)(*(_QWORD *)(v12 + 96) + 16))
      {
        sub_100010634(v6 + qword_100645F08, (uint64_t)&v97);
        v75 = v100;
        v76 = v101;
        sub_10001413C(&v97, v100);
        (*(void (**)(uint64_t, uint64_t))(v76 + 24))(v75, v76);
        swift_release(v12);
        v73 = &v97;
LABEL_26:
        sub_100027F10(v73);
        goto LABEL_27;
      }
    }
    v20 = *(_QWORD *)(v12 + 48);
    v21 = *(_QWORD *)(v12 + 56);
    v22 = (uint64_t *)(v6 + qword_100645F48);
    swift_beginAccess(&v7[qword_100645F48], v109, 0, 0);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    if ((sub_100341C00(v20, v23) & 1) != 0)
    {
      v25 = sub_100341C00(v21, v24);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v24);
      v26 = swift_bridgeObjectRelease(v23);
      if ((v25 & 1) != 0)
      {
LABEL_21:
        __chkstk_darwin(v26);
        v78[2] = v7;
        v30 = swift_beginAccess(&v7[qword_100645F50], &v97, 33, 0);
        __chkstk_darwin(v30);
        v77[2] = sub_10031B334;
        v77[3] = v78;
        v31 = sub_10002A750(&qword_100640E78);
        Set.removeAll(where:)(sub_10031B33C, v77, v31);
        swift_endAccess(&v97);
        v32 = sub_10006B64C();
        v88 = v32;
        v34 = v33;
        v87 = v33;
        v36 = v35;
        v86 = v35;
        v38 = v37;
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v7[qword_100645EF8]);
        ObjectType = swift_getObjectType(Strong, v40);

        v42 = _typeName(_:qualified:)(ObjectType, 0);
        v44 = v43;
        sub_1000E0E74(v32, v34, v36, v38 & 1, v42, v43, &v97);
        v45 = v98;
        v91 = v97;
        v46 = v100;
        v90 = v99;
        v48 = v101;
        v47 = v102;
        v50 = v103;
        v49 = v104;
        v81 = v7;
        v51 = v105;
        v80 = v106;
        v52 = v107;
        v89 = v108;
        swift_bridgeObjectRelease(v86);
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v88);
        swift_bridgeObjectRelease(v44);
        v97 = v91;
        v98 = v45;
        v88 = v45;
        v99 = v90;
        v100 = v46;
        v87 = v46;
        v86 = v48;
        v101 = v48;
        v102 = v47;
        v85 = v47;
        v84 = v50;
        v103 = v50;
        v104 = v49;
        v83 = v49;
        v82 = v51;
        v105 = v51;
        v7 = v81;
        v106 = v80;
        v107 = v52;
        v80 = v52;
        v53 = *(_QWORD *)&v81[qword_100645F18];
        if (v53
          && (v54 = *(uint64_t (**)(uint64_t))(v53 + 16),
              v55 = swift_retain(*(_QWORD *)&v81[qword_100645F18]),
              v56 = v54(v55),
              swift_release(v53),
              (v56 & 1) != 0))
        {
          v57 = swift_allocObject(&unk_100600538, 32, 7);
          *(_QWORD *)(v57 + 16) = v7;
          *(_QWORD *)(v57 + 24) = v12;
          v58 = v57;
          v59 = v7;
          swift_retain(v12);
          v60 = sub_10031B388;
        }
        else
        {
          v60 = 0;
          v58 = 0;
        }
        v61 = swift_allocObject(&unk_100600510, 24, 7);
        swift_unknownObjectWeakInit(v61 + 16, v7);
        v62 = (uint64_t)&v7[qword_100645F08];
        sub_100010634((uint64_t)&v7[qword_100645F08], (uint64_t)v94);
        v63 = v95;
        v64 = v96;
        sub_10001413C(v94, v95);
        v65 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v64 + 32);
        swift_retain(v12);
        v79 = v58;
        v65(&v97, sub_100100050, v61, v60, v58, sub_10031B37C, v12, v63, v64);
        swift_release(v12);
        swift_bridgeObjectRelease(v80);
        swift_bridgeObjectRelease(v82);
        swift_bridgeObjectRelease(v83);
        swift_bridgeObjectRelease(v84);
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRelease(v86);
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v90);
        swift_bridgeObjectRelease(v88);
        swift_bridgeObjectRelease(v91);
        sub_100027F10(v94);
        v66 = *(_QWORD *)(v12 + 16);
        v67 = *(_QWORD *)(v12 + 24);
        v68 = *(_QWORD *)(v12 + 32);
        v69 = *(_BYTE *)(v12 + 40);
        swift_bridgeObjectRetain(v66);
        swift_bridgeObjectRetain(v67);
        swift_bridgeObjectRetain(v68);
        v70 = v89;
        sub_1000F0078(v89, v66, v67, v68, v69);
        swift_bridgeObjectRelease(v68);
        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v70);
        sub_100010634(v62, (uint64_t)v94);
        v71 = v95;
        v72 = v96;
        sub_10001413C(v94, v95);
        (*(void (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72);
        swift_release(v61);
        sub_1000381B8((uint64_t)v60, v79);
        swift_release(v12);
        v73 = v94;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v23);
    }
    v27 = *(_QWORD *)&v7[qword_100645EF0];
    v28 = *v22;
    swift_retain(v27);
    v29 = swift_bridgeObjectRetain(v28);
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)(v29);
    swift_release(v27);
    v26 = swift_bridgeObjectRelease(v28);
    goto LABEL_21;
  }
  return swift_release(v12);
}

uint64_t sub_10030B7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *))
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  __int128 v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)&v24 = a6();
  *((_QWORD *)&v24 + 1) = v13;
  v25 = v14;
  v26 = v15 & 1;
  v16 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a7(a3, a4, a5, a1, &v24);
  v17 = v25;
  v18 = v26;
  v19 = a2 + qword_100645F30;
  v20 = *(_QWORD *)(a2 + qword_100645F30);
  v21 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v22 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v19 = v24;
  *(_QWORD *)(v19 + 16) = v17;
  *(_BYTE *)(v19 + 24) = v18;
  result = sub_1000072F0(v20, v21, v22);
  *(_BYTE *)(a2 + v16) = 0;
  return result;
}

void sub_10030B890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(_QWORD **, _QWORD);
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *Strong;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  void (*v83)(_QWORD **, _QWORD);
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v107;
  unint64_t v108;
  uint64_t v109;
  _BOOL8 v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  char v114;
  _QWORD *v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char v125;
  unint64_t v126;
  uint64_t v127;
  _BOOL8 v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t i;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175[8];
  _QWORD *v176;
  _QWORD *v177;

  v158 = a5;
  v173 = a3;
  v166 = a2;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v9 = (char *)&i - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v157 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v168 = (uint64_t)&i - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for IndexSet(0);
  v156 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v155 = (char *)&i - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for IndexSet.Index(0);
  v165 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v161 = (char *)&i - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v160 = (char *)&i - v15;
  v16 = sub_10002A750(&qword_100655950);
  __chkstk_darwin(v16);
  v159 = (char *)&i - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v18);
  v20 = (char *)&i - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for IndexPath(0);
  v21 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)&i - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v167 = (char *)&i - v24;
  __chkstk_darwin(v25);
  v164 = (char *)&i - v26;
  if ((IndexSet.isEmpty.getter(v27) & 1) != 0)
    return;
  v28 = *(_QWORD *)(v5 + qword_100645F10);
  if (!v28)
    return;
  v153 = v5;
  v150 = v10;
  v29 = *(uint64_t (**)(uint64_t))(v28 + 16);
  v30 = swift_retain();
  if ((v29(v30) & 1) == 0)
    goto LABEL_72;
  v154 = v21;
  v149 = v28;
  v148 = v9;
  v31 = v153;
  v32 = sub_10006B3DC();
  v34 = v33;
  v36 = v35;
  v37 = sub_100073228(v166, v33);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v32);
  if (!v37)
    goto LABEL_72;
  if (*(_BYTE *)(v37 + 72) != 2)
  {
    swift_release();
    goto LABEL_72;
  }
  v38 = sub_10006B3DC();
  v40 = v39;
  v42 = v41;
  sub_100309FFC(v37, v38, v41, v43 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v20);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v40);
  v44 = swift_bridgeObjectRelease(v38);
  v45 = v154;
  v46 = v170;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v154 + 48))(v20, 1, v170, v44) == 1)
  {
    sub_1000073A0((uint64_t)v20, &qword_100646950);
    if (qword_10063D3C8 != -1)
      goto LABEL_85;
    goto LABEL_8;
  }
  v147 = v37;
  v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v45 + 32))(v164, v20, v46);
  v53 = (uint64_t)v159;
  IndexSet.makeIterator()(v52);
  v54 = v53 + *(int *)(v16 + 36);
  v145 = v31 + qword_100645EF8;
  v174 = a4 + 80;
  v146 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 16);
  for (i = v54; ; v54 = i)
  {
    v56 = v160;
    v57 = v162;
    v146(v160, v54, v162);
    v58 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v59 = v161;
    v60 = v163;
    dispatch thunk of Collection.endIndex.getter(v163);
    v61 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v62 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v59, v57, v61);
    v63 = *(void (**)(char *, uint64_t))(v165 + 8);
    v63(v59, v57);
    v63(v56, v57);
    v64 = (uint64_t)v148;
    if ((v62 & 1) != 0)
    {
      swift_release();
      swift_release();
      sub_1000073A0(v53, &qword_100655950);
      (*(void (**)(char *, uint64_t))(v154 + 8))(v164, v170);
      return;
    }
    v65 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v177, v54, v60, v58);
    v67 = *v66;
    v65(&v177, 0);
    v68 = v156;
    v69 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v155, v53, v60);
    dispatch thunk of Collection.formIndex(after:)(v54, v60, v58);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v60);
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v145);
    sub_10002B1E8(v166, v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v157 + 56))(v64, 0, 1, v150);
    v71 = v168;
    (*(void (**)(void *, uint64_t, uint64_t))(v149 + 48))(Strong, v67, v64);

    sub_1000073A0(v64, (uint64_t *)&unk_100640EB0);
    v72 = sub_10002A750((uint64_t *)&unk_100646400);
    v73 = swift_allocObject(v72, 24, 7);
    v74 = v147;
    swift_retain();
    *(_QWORD *)(v73 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
    v75 = v158;
    v76 = v170;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      v137 = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
      v172 = v137;
      if (v137)
      {
        if (v172 < 1)
        {
          __break(1u);
LABEL_87:
          v143 = sub_10002A750(&qword_1006463D0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v143);
          __break(1u);
LABEL_88:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
          __break(1u);
          return;
        }
        v138 = &_swiftEmptyArrayStorage[4];
        do
        {
          v139 = *v138++;
          swift_weakAssign(v139 + 56, 0);
          swift_beginAccess(v139 + 64, v175, 1, 0);
          v140 = *(_QWORD *)(v139 + 64);
          *(_QWORD *)(v139 + 64) = _swiftEmptyArrayStorage;
          v71 = v168;
          swift_bridgeObjectRelease(v140);
          --v172;
        }
        while (v172);
      }
    }
    v77 = sub_10006F808(v71, v74, v73);
    swift_release();
    swift_release();
    v78 = sub_100313414(v77, v67, (void (*)(uint64_t, _QWORD *))sub_10019D874, (void (*)(uint64_t, uint64_t, uint64_t))sub_10043860C, (uint64_t (*)(_QWORD *))sub_1000778C0);
    v80 = v79;
    v81 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
    v82 = v167;
    v81(v167, v164, v76);
    v83 = (void (*)(_QWORD **, _QWORD))IndexPath.row.modify(&v177);
    if (__OFADD__(*v84, v80))
      goto LABEL_81;
    *v84 += v80;
    v83(&v177, 0);
    v85 = ((uint64_t (*)(char *, char *, uint64_t))v81)(v169, v82, v76);
    v86 = IndexPath.section.getter(v85);
    swift_bridgeObjectRetain(v78);
    v88 = IndexPath.row.getter(v87);
    v89 = (_QWORD *)*v75;
    if ((swift_isUniquelyReferenced_nonNull_native(*v75) & 1) != 0)
    {
      if ((v86 & 0x8000000000000000) != 0)
        goto LABEL_82;
    }
    else
    {
      v89 = sub_1002B375C(v89);
      if ((v86 & 0x8000000000000000) != 0)
        goto LABEL_82;
    }
    if (v86 >= v89[2])
      break;
    v152 = v77;
    v90 = sub_1004381E0(v88, v88, v78);
    *v75 = v89;
    v91 = v169;
    v92 = IndexPath.section.getter(v90);
    sub_10006A14C(v78, v92);
    v151 = *(void (**)(char *, uint64_t))(v154 + 8);
    v151(v91, v76);
    if ((unint64_t)v78 >> 62)
    {
      if (v78 < 0)
        v141 = v78;
      else
        v141 = v78 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v78, 2);
      v142 = _CocoaArrayWrapper.endIndex.getter(v141);
      swift_bridgeObjectRelease(v78);
      v172 = v142;
      if (v142)
      {
LABEL_24:
        if (v172 < 1)
          goto LABEL_84;
        v94 = 0;
        v171 = v78 & 0xC000000000000001;
LABEL_28:
        if (v171)
        {
          v98 = specialized _ArrayBuffer._getElementSlowPath(_:)(v94, v78);
        }
        else
        {
          v98 = *(_QWORD *)(v78 + 8 * v94 + 32);
          swift_retain();
        }
        swift_beginAccess(v174, &v177, 32, 0);
        v99 = *(_QWORD *)(a4 + 88);
        if (!*(_QWORD *)(v99 + 16) || (v100 = sub_1002AA398(v98), (v101 & 1) == 0))
        {
          swift_endAccess(&v177);
          sub_10002A750(&qword_100640EC0);
          v115 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
          v116 = sub_1002AA3B8(0);
          if ((v117 & 1) != 0)
            goto LABEL_76;
          v115[(v116 >> 6) + 8] |= 1 << v116;
          *(_BYTE *)(v115[6] + v116) = 0;
          *(_QWORD *)(v115[7] + 8 * v116) = v173;
          v118 = v115[2];
          v119 = __OFADD__(v118, 1);
          v120 = v118 + 1;
          if (v119)
            goto LABEL_77;
          v103 = 0;
          v115[2] = v120;
          goto LABEL_48;
        }
        v102 = (_QWORD *)(*(_QWORD *)(v99 + 56) + 16 * v100);
        v104 = (_QWORD *)*v102;
        v103 = v102[1];
        swift_endAccess(&v177);
        swift_bridgeObjectRetain(v104);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v105);
        v177 = v104;
        v108 = sub_1002AA3B8(0);
        v109 = v104[2];
        v110 = (v107 & 1) == 0;
        v111 = v109 + v110;
        if (__OFADD__(v109, v110))
          goto LABEL_79;
        v112 = v107;
        if (v104[3] >= v111)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v115 = v177;
            if ((v107 & 1) == 0)
              goto LABEL_45;
          }
          else
          {
            sub_1002AE948();
            v115 = v177;
            if ((v112 & 1) == 0)
              goto LABEL_45;
          }
        }
        else
        {
          sub_100457F24(v111, isUniquelyReferenced_nonNull_native);
          v113 = sub_1002AA3B8(0);
          if ((v112 & 1) != (v114 & 1))
            goto LABEL_88;
          v108 = v113;
          v115 = v177;
          if ((v112 & 1) == 0)
          {
LABEL_45:
            v115[(v108 >> 6) + 8] |= 1 << v108;
            *(_BYTE *)(v115[6] + v108) = 0;
            *(_QWORD *)(v115[7] + 8 * v108) = v173;
            v121 = v115[2];
            v119 = __OFADD__(v121, 1);
            v122 = v121 + 1;
            if (v119)
              goto LABEL_80;
            v115[2] = v122;
LABEL_47:
            swift_bridgeObjectRelease(0x8000000000000000);
LABEL_48:
            swift_beginAccess(v174, &v177, 33, 0);
            swift_retain();
            v123 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a4 + 88));
            v176 = *(_QWORD **)(a4 + 88);
            v124 = v176;
            *(_QWORD *)(a4 + 88) = 0x8000000000000000;
            v126 = sub_1002AA398(v98);
            v127 = v124[2];
            v128 = (v125 & 1) == 0;
            v129 = v127 + v128;
            if (__OFADD__(v127, v128))
            {
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
              break;
            }
            v130 = v125;
            if (v124[3] >= v129)
            {
              if ((v123 & 1) != 0)
              {
                v133 = v176;
                if ((v125 & 1) == 0)
                  goto LABEL_55;
              }
              else
              {
                sub_1002AE7AC();
                v133 = v176;
                if ((v130 & 1) == 0)
                  goto LABEL_55;
              }
            }
            else
            {
              sub_100457C50(v129, v123);
              v131 = sub_1002AA398(v98);
              if ((v130 & 1) != (v132 & 1))
                goto LABEL_87;
              v126 = v131;
              v133 = v176;
              if ((v130 & 1) == 0)
              {
LABEL_55:
                v133[(v126 >> 6) + 8] |= 1 << v126;
                *(_QWORD *)(v133[6] + 8 * v126) = v98;
                v134 = (_QWORD *)(v133[7] + 16 * v126);
                *v134 = v115;
                v134[1] = v103;
                v135 = v133[2];
                v119 = __OFADD__(v135, 1);
                v136 = v135 + 1;
                if (v119)
                  goto LABEL_78;
                v133[2] = v136;
                swift_retain();
                goto LABEL_27;
              }
            }
            v95 = (uint64_t *)(v133[7] + 16 * v126);
            v96 = *v95;
            *v95 = (uint64_t)v115;
            v95[1] = v103;
            swift_bridgeObjectRelease(v96);
LABEL_27:
            ++v94;
            v97 = *(_QWORD *)(a4 + 88);
            *(_QWORD *)(a4 + 88) = v133;
            swift_release();
            swift_bridgeObjectRelease(v97);
            swift_endAccess(&v177);
            swift_release();
            if (v172 == v94)
              goto LABEL_14;
            goto LABEL_28;
          }
        }
        *(_QWORD *)(v115[7] + 8 * v108) = v173;
        goto LABEL_47;
      }
    }
    else
    {
      v93 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v78);
      v172 = v93;
      if (v93)
        goto LABEL_24;
    }
LABEL_14:
    swift_release();
    v55 = swift_bridgeObjectRelease(v78);
    ((void (*)(char *, uint64_t, __n128))v151)(v167, v170, v55);
    sub_10001F544(v168, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_bridgeObjectRelease(v78);
    v53 = (uint64_t)v159;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  swift_once(&qword_10063D3C8, sub_1000E35C8);
LABEL_8:
  v47 = type metadata accessor for Logger(0);
  v48 = sub_100012DC4(v47, (uint64_t)qword_100645EC0);
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.fault.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unable to find childrenStartIndexPath", v51, 2u);
    swift_slowDealloc(v51, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
LABEL_72:
  swift_release();
}

uint64_t sub_10030C640(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, _QWORD);
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *Strong;
  uint64_t v73;
  uint64_t v74;
  uint64_t inited;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  void (*v83)(char *, _QWORD);
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char v124[24];
  char v125[16];
  char v126[8];

  v6 = v5;
  v123 = a5;
  v108 = a4;
  v107 = a3;
  v122 = a2;
  v8 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v8);
  v114 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v118 = (uint64_t)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for IndexSet(0);
  v111 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v110 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexSet.Index(0);
  v120 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v116 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v115 = (char *)&v97 - v15;
  v16 = sub_10002A750(&qword_100655950);
  __chkstk_darwin(v16);
  v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v19);
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  v109 = (char *)&v97 - v28;
  v29 = __chkstk_darwin(v27);
  v119 = (char *)&v97 - v30;
  v104 = a1;
  result = IndexSet.isEmpty.getter(v29);
  if ((result & 1) != 0)
    return result;
  v32 = *(_QWORD *)(v6 + qword_100645F10);
  if (!v32)
    return result;
  v106 = v6;
  v121 = v23;
  v33 = *(uint64_t (**)(uint64_t))(v32 + 16);
  v34 = swift_retain(v32);
  if ((v33(v34) & 1) == 0)
    return swift_release(v32);
  v105 = v32;
  v35 = sub_10006B64C();
  v37 = v36;
  v39 = v38;
  v40 = sub_100073338(v122, v36);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v35);
  if (!v40)
    return swift_release(v105);
  if (*(_BYTE *)(v40 + 72) != 2)
  {
    swift_release(v40);
    return swift_release(v105);
  }
  v41 = sub_10006B64C();
  v43 = v42;
  v45 = v44;
  sub_100309FFC(v40, v41, v44, v46 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v21);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v41);
  v47 = v121;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v21, 1, v22) != 1)
  {
    v99 = v26;
    v101 = v12;
    v103 = v40;
    v53 = *(uint64_t (**)(char *, char *, uint64_t))(v47 + 32);
    v102 = v22;
    v54 = v53(v119, v21, v22);
    IndexSet.makeIterator()(v54);
    v55 = *(int *)(v16 + 36);
    v104 = v18;
    v56 = &v18[v55];
    v98 = v106 + qword_100645EF8;
    v100 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    v57 = v118;
    v97 = &v18[v55];
    v58 = v101;
    while (1)
    {
      v59 = v115;
      v100(v115, v56, v58);
      v60 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v62 = v116;
      v61 = v117;
      v63 = (uint64_t)v104;
      dispatch thunk of Collection.endIndex.getter(v117);
      v64 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v59, v62, v58, v64);
      v66 = *(void (**)(char *, uint64_t))(v120 + 8);
      v66(v62, v58);
      v66(v59, v58);
      if ((v65 & 1) != 0)
        goto LABEL_29;
      v67 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read(v126, v56, v61, v60);
      v69 = *v68;
      v67(v126, 0);
      v70 = v111;
      v71 = v110;
      (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v110, v63, v61);
      dispatch thunk of Collection.formIndex(after:)(v56, v61, v60);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v61);
      Strong = (void *)swift_unknownObjectUnownedLoadStrong(v98);
      v73 = v114;
      sub_10002B1E8(v122, v114, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v112 + 56))(v73, 0, 1, v113);
      (*(void (**)(void *, uint64_t, uint64_t))(v105 + 48))(Strong, v69, v73);

      sub_1000073A0(v73, (uint64_t *)&unk_100640E00);
      v74 = sub_10002A750((uint64_t *)&unk_100640E10);
      inited = swift_initStackObject(v74, v125);
      v76 = v103;
      swift_retain(v103);
      *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
      v63 = v102;
      v77 = v99;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
        if (result)
        {
          v93 = result;
          if (result < 1)
          {
            __break(1u);
            return result;
          }
          v94 = &_swiftEmptyArrayStorage[4];
          do
          {
            v95 = *v94++;
            swift_weakAssign(v95 + 56, 0);
            swift_beginAccess(v95 + 64, v124, 1, 0);
            v96 = *(_QWORD *)(v95 + 64);
            *(_QWORD *)(v95 + 64) = _swiftEmptyArrayStorage;
            v57 = v118;
            swift_bridgeObjectRelease(v96);
            --v93;
          }
          while (v93);
        }
      }
      v78 = sub_10006FA80(v57, v76, inited);
      swift_setDeallocating(inited);
      swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
      swift_release(v76);
      v79 = sub_100313414(v78, v69, (void (*)(uint64_t, _QWORD *))sub_10019D874, (void (*)(uint64_t, uint64_t, uint64_t))sub_100438E68, (uint64_t (*)(_QWORD *))sub_10006FCF8);
      v81 = v80;
      v82 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
      v40 = (uint64_t)v109;
      v82(v109, v119, v63);
      v83 = (void (*)(char *, _QWORD))IndexPath.row.modify(v126);
      if (__OFADD__(*v84, v81))
        break;
      *v84 += v81;
      v83(v126, 0);
      v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))v82)(v77, v40, v63);
      v86 = IndexPath.section.getter(v85);
      v87 = swift_bridgeObjectRetain(v79);
      v88 = IndexPath.row.getter(v87);
      v89 = (_QWORD *)*v123;
      if ((swift_isUniquelyReferenced_nonNull_native(*v123) & 1) != 0)
      {
        if ((v86 & 0x8000000000000000) != 0)
          goto LABEL_28;
      }
      else
      {
        v89 = sub_1002B37D4(v89);
        if ((v86 & 0x8000000000000000) != 0)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          swift_release(v103);
          swift_release(v105);
          sub_1000073A0(v63, &qword_100655950);
          return (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v119, v102);
        }
      }
      if (v86 >= v89[2])
        goto LABEL_34;
      v90 = sub_100438AA0(v88, v88, v79);
      *v123 = v89;
      v91 = IndexPath.section.getter(v90);
      sub_10006A734(v79, v91);
      v92 = *(void (**)(char *, uint64_t))(v121 + 8);
      v92(v77, v63);
      sub_100308358(v79, 0, v107, 0);
      swift_release(v78);
      v92((char *)v40, v63);
      v57 = v118;
      sub_10001F544(v118, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_bridgeObjectRelease(v79);
      v56 = v97;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1000073A0((uint64_t)v21, &qword_100646950);
  if (qword_10063D3C8 != -1)
LABEL_35:
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v48 = type metadata accessor for Logger(0);
  v49 = sub_100012DC4(v48, (uint64_t)qword_100645EC0);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.fault.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Unable to find childrenStartIndexPath", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
    swift_release(v40);

  }
  else
  {

    swift_release(v40);
  }
  return swift_release(v105);
}

uint64_t sub_10030CFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  __int128 v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)&v24 = a6();
  *((_QWORD *)&v24 + 1) = v13;
  v25 = v14;
  v26 = v15 & 1;
  v16 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a7(&v24, a3, a4, a2, a1, a5);
  v17 = v25;
  v18 = v26;
  v19 = a2 + qword_100645F30;
  v20 = *(_QWORD *)(a2 + qword_100645F30);
  v21 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v22 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v19 = v24;
  *(_QWORD *)(v19 + 16) = v17;
  *(_BYTE *)(v19 + 24) = v18;
  result = sub_1000072F0(v20, v21, v22);
  *(_BYTE *)(a2 + v16) = 0;
  return result;
}

uint64_t sub_10030D0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(uint64_t *, _QWORD);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char v73[24];
  uint64_t v74;
  char v75[40];
  uint64_t v76[2];

  v58 = a6;
  v57 = a5;
  v66 = a3;
  v72 = a1;
  v7 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v7);
  v65 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexSet(0);
  v62 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v61 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexSet.Index(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v70 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v69 = (char *)&v53 - v17;
  v18 = sub_10002A750(&qword_100655950);
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()(v21);
  v22 = *(int *)(v18 + 36);
  v68 = v20;
  v23 = &v20[v22];
  v59 = a4;
  v60 = a4 + qword_100645EF8;
  v71 = v14;
  v67 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v55 = xmmword_100521140;
  v56 = v23;
  v24 = (uint64_t)v68;
  while (1)
  {
    v25 = v69;
    v67(v69, v23, v13);
    v26 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v27 = v70;
    dispatch thunk of Collection.endIndex.getter(v11);
    v28 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v29 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v27, v13, v28);
    v30 = *(void (**)(char *, uint64_t))(v71 + 8);
    v30(v27, v13);
    v30(v25, v13);
    if ((v29 & 1) != 0)
      return sub_1000073A0(v24, &qword_100655950);
    v31 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(v76, v23, v11, v26);
    v33 = *v32;
    v31(v76, 0);
    v34 = v62;
    v35 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v24, v11);
    dispatch thunk of Collection.formIndex(after:)(v23, v11, v26);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v11);
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v60);
    v37 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v65, 1, 1, v64);
    (*(void (**)(void *, uint64_t, uint64_t))(v66 + 48))(Strong, v33, v37);

    sub_1000073A0(v37, (uint64_t *)&unk_100640EB0);
    v38 = sub_10002A750((uint64_t *)&unk_100646400);
    v39 = swift_allocObject(v38, 24, 7);
    *(_QWORD *)(v39 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
      if (result)
      {
        v49 = result;
        if (result < 1)
          goto LABEL_15;
        v50 = &_swiftEmptyArrayStorage[4];
        v54 = v10;
        do
        {
          v51 = *v50++;
          swift_weakAssign(v51 + 56, 0);
          swift_beginAccess(v51 + 64, v73, 1, 0);
          v52 = *(_QWORD *)(v51 + 64);
          *(_QWORD *)(v51 + 64) = _swiftEmptyArrayStorage;
          v10 = v54;
          swift_bridgeObjectRelease(v52);
          --v49;
        }
        while (v49);
      }
    }
    v40 = sub_10006F808((uint64_t)v10, 0, v39);
    swift_release();
    v76[0] = (uint64_t)_swiftEmptyArrayStorage;
    result = (uint64_t)sub_1000778C0(v76);
    if (*(_QWORD *)(*(_QWORD *)v72 + 16) < v33)
      break;
    if (v33 < 0)
      goto LABEL_14;
    v42 = v76[0];
    swift_retain();
    swift_bridgeObjectRetain(v42);
    sub_1004397B4(v33, v33, v40, v42);
    swift_bridgeObjectRelease(v42);
    sub_100069868(v33, 1);
    v43 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v43, v75);
    *(_OWORD *)(inited + 16) = v55;
    *(_QWORD *)(inited + 32) = v40;
    v74 = inited;
    specialized Array._endMutation()(inited);
    v45 = (uint64_t)v10;
    v46 = v74;
    swift_retain();
    sub_10006A14C(v46, v33);
    v47 = v46;
    v10 = (char *)v45;
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRetain(v42);
    sub_10006A14C(v48, v33);
    swift_bridgeObjectRelease(v42);
    sub_100307A44(1, v40, 0, v58, 0);
    swift_bridgeObjectRelease(v42);
    swift_release_n(v40, 2);
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v23 = v56;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10030D668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(_QWORD **, _QWORD);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  uint64_t v73;
  char v74[40];
  char v75[24];
  _QWORD *v76;

  v57 = a6;
  v56 = a5;
  v65 = a3;
  v71 = a1;
  v7 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v7);
  v64 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexSet(0);
  v61 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v60 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexSet.Index(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v69 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v68 = (char *)&v52 - v17;
  v18 = sub_10002A750(&qword_100655950);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()(v19);
  v22 = *(int *)(v18 + 36);
  v67 = v21;
  v23 = &v21[v22];
  v58 = a4;
  v59 = a4 + qword_100645EF8;
  v70 = v14;
  v66 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v54 = xmmword_100521140;
  v55 = v23;
  v24 = (uint64_t)v67;
  while (1)
  {
    v25 = v68;
    v66(v68, v23, v13);
    v26 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v27 = v69;
    dispatch thunk of Collection.endIndex.getter(v11);
    v28 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v29 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v27, v13, v28);
    v30 = *(void (**)(char *, uint64_t))(v70 + 8);
    v30(v27, v13);
    v30(v25, v13);
    if ((v29 & 1) != 0)
      return sub_1000073A0(v24, &qword_100655950);
    v31 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v76, v23, v11, v26);
    v33 = *v32;
    v31(&v76, 0);
    v34 = v61;
    v35 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v24, v11);
    dispatch thunk of Collection.formIndex(after:)(v23, v11, v26);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v11);
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(v59);
    v37 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v64, 1, 1, v63);
    (*(void (**)(void *, uint64_t, uint64_t))(v65 + 48))(Strong, v33, v37);

    sub_1000073A0(v37, (uint64_t *)&unk_100640E00);
    v38 = sub_10002A750((uint64_t *)&unk_100640E10);
    inited = swift_initStackObject(v38, v75);
    *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
      if (result)
      {
        v48 = result;
        if (result < 1)
          goto LABEL_15;
        v49 = &_swiftEmptyArrayStorage[4];
        v53 = v10;
        do
        {
          v50 = *v49++;
          swift_weakAssign(v50 + 56, 0);
          swift_beginAccess(v50 + 64, v72, 1, 0);
          v51 = *(_QWORD *)(v50 + 64);
          *(_QWORD *)(v50 + 64) = _swiftEmptyArrayStorage;
          v10 = v53;
          swift_bridgeObjectRelease(v51);
          --v48;
        }
        while (v48);
      }
    }
    v40 = sub_10006FA80((uint64_t)v10, 0, inited);
    swift_setDeallocating(inited);
    swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
    v76 = _swiftEmptyArrayStorage;
    result = (uint64_t)sub_10006FCF8((uint64_t *)&v76);
    if (*(_QWORD *)(*(_QWORD *)v71 + 16) < v33)
      break;
    if (v33 < 0)
      goto LABEL_14;
    v42 = (uint64_t)v76;
    swift_retain_n(v40, 2);
    swift_bridgeObjectRetain(v42);
    sub_100438918(v33, v33, v40, v42);
    sub_100069B3C(v33, 1);
    v43 = sub_10002A750((uint64_t *)&unk_1006415A0);
    v44 = swift_initStackObject(v43, v74);
    *(_OWORD *)(v44 + 16) = v54;
    *(_QWORD *)(v44 + 32) = v40;
    v73 = v44;
    specialized Array._endMutation()(v44);
    v45 = (uint64_t)v10;
    v46 = v73;
    swift_retain(v40);
    sub_10006A734(v46, v33);
    v47 = v46;
    v10 = (char *)v45;
    swift_bridgeObjectRelease(v47);
    sub_10006A734(v42, v33);
    sub_100307CB4(1, v40, 0, v57, 0);
    swift_bridgeObjectRelease(v42);
    swift_release_n(v40, 2);
    sub_10001F544(v45, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v23 = v55;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

void sub_10030DC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  v46 = a3;
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((IndexSet.isEmpty.getter(v20) & 1) == 0)
  {
    sub_10000735C(a2, (uint64_t)v15, (uint64_t *)&unk_100640EB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      v21 = sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640EB0);
      __chkstk_darwin(v21);
      *(&v43 - 4) = v3;
      *(&v43 - 3) = a1;
      *(&v43 - 2) = v46;
      sub_10030A8DC((void (*)(uint64_t))sub_10031B4B0, (uint64_t)(&v43 - 6), 0, 0, 0, 0);
      return;
    }
    sub_10001F580((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22 = sub_10006B3DC();
    v24 = v23;
    v26 = v25;
    v27 = sub_100073228((uint64_t)v19, v23);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v22);
    if (!v27)
      goto LABEL_12;
    if (*(_BYTE *)(v27 + 72) == 2)
    {
      v28 = sub_10006B3DC();
      v30 = v29;
      v32 = v31;
      sub_100309FFC(v27, v28, v31, v33 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v9);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v30);
      v34 = swift_bridgeObjectRelease(v28);
      v36 = v44;
      v35 = v45;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v44 + 48))(v9, 1, v45, v34) == 1)
      {
        sub_1000073A0((uint64_t)v9, &qword_100646950);
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v37 = type metadata accessor for Logger(0);
        v38 = sub_100012DC4(v37, (uint64_t)qword_100645EC0);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.fault.getter(v39);
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unable to find childrenStartIndexPath", v41, 2u);
          swift_slowDealloc(v41, -1, -1);
        }
        swift_release();

LABEL_12:
        sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        return;
      }
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v12, v9, v35);
      __chkstk_darwin(v42);
      *(&v43 - 6) = v4;
      *(&v43 - 5) = a1;
      *(&v43 - 4) = v27;
      *(&v43 - 3) = (uint64_t)v12;
      *(&v43 - 2) = v46;
      sub_10030A8DC((void (*)(uint64_t))sub_10031B4DC, (uint64_t)(&v43 - 8), 0, 0, 0, 0);
      swift_release();
      sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v35);
    }
    else
    {
      sub_10001F544((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
    }
  }
}

uint64_t sub_10030E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  v46 = a3;
  v7 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10002A750((uint64_t *)&unk_100640E00);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = IndexSet.isEmpty.getter(v18);
  if ((result & 1) == 0)
  {
    sub_10000735C(a2, (uint64_t)v15, (uint64_t *)&unk_100640E00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      v22 = sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_100640E00);
      __chkstk_darwin(v22);
      *(&v43 - 4) = v3;
      *(&v43 - 3) = a1;
      *(&v43 - 2) = v46;
      return sub_10030B054((void (*)(uint64_t))sub_10031B5C8, (uint64_t)(&v43 - 6), 0, 0, 0, 0);
    }
    sub_10001F580((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v23 = sub_10006B64C();
    v25 = v24;
    v27 = v26;
    v28 = sub_100073338((uint64_t)v20, v24);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v23);
    if (!v28)
      return sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if (*(_BYTE *)(v28 + 72) == 2)
    {
      v29 = sub_10006B64C();
      v31 = v30;
      v33 = v32;
      sub_100309FFC(v28, v29, v32, v34 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v9);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v29);
      v36 = v44;
      v35 = v45;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v9, 1, v45) == 1)
      {
        sub_1000073A0((uint64_t)v9, &qword_100646950);
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v37 = type metadata accessor for Logger(0);
        v38 = sub_100012DC4(v37, (uint64_t)qword_100645EC0);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.fault.getter(v39);
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unable to find childrenStartIndexPath", v41, 2u);
          swift_slowDealloc(v41, -1, -1);
        }
        swift_release(v28);

        return sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v12, v9, v35);
      __chkstk_darwin(v42);
      *(&v43 - 6) = v4;
      *(&v43 - 5) = a1;
      *(&v43 - 4) = v28;
      *(&v43 - 3) = (uint64_t)v12;
      *(&v43 - 2) = v46;
      sub_10030B054((void (*)(uint64_t))sub_10031B2C8, (uint64_t)(&v43 - 8), 0, 0, 0, 0);
      swift_release(v28);
      sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v35);
    }
    else
    {
      sub_10001F544((uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return swift_release(v28);
    }
  }
  return result;
}

uint64_t sub_10030E484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), void (*a8)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  __int128 v26;
  uint64_t v27;
  char v28;

  *(_QWORD *)&v26 = a7();
  *((_QWORD *)&v26 + 1) = v15;
  v27 = v16;
  v28 = v17 & 1;
  v18 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a8(&v26, a3, a4, a5, a2, a1, a6);
  v19 = v27;
  v20 = v28;
  v21 = a2 + qword_100645F30;
  v22 = *(_QWORD *)(a2 + qword_100645F30);
  v23 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v24 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v21 = v26;
  *(_QWORD *)(v21 + 16) = v19;
  *(_BYTE *)(v21 + 24) = v20;
  result = sub_1000072F0(v22, v23, v24);
  *(_BYTE *)(a2 + v18) = 0;
  return result;
}

void sub_10030E554(_QWORD *a1, int64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, int64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t *, _QWORD);
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::Int v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  unint64_t v82;
  int64_t v83;
  int64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  unint64_t v133;
  char v134[24];
  char v135[24];
  char v136[8];
  uint64_t v137;

  v113 = a7;
  v112 = a6;
  v133 = a5;
  v115 = a4;
  v114 = a3;
  v132 = a2;
  v8 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v8);
  v110 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for IndexPath(0);
  v127 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v125 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v126 = (char *)&v108 - v18;
  v122 = type metadata accessor for IndexSet.Index(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v119 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v120 = (char *)&v108 - v21;
  v22 = sub_10002A750(&qword_100646348);
  __chkstk_darwin(v22);
  v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_10002A750(&qword_100646350);
  __chkstk_darwin(v131);
  v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v108 - v28;
  v30 = type metadata accessor for IndexSet(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, int64_t, uint64_t))(v31 + 16);
  v32(v24, v132, v30);
  v32(v26, (int64_t)v24, v30);
  v33 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v34 = v120;
  v128 = v33;
  dispatch thunk of Collection.endIndex.getter(v30);
  v35 = *(void (**)(char *, uint64_t))(v31 + 8);
  v117 = v30;
  v35(v24, v30);
  v36 = v131;
  v37 = v121;
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(&v26[*(int *)(v131 + 36)], v34, v122);
  sub_10000F614((uint64_t)v26, (uint64_t)v29, &qword_100646350);
  v38 = *(int *)(v36 + 36);
  v118 = v29;
  v39 = &v29[v38];
  v123 = v133 + qword_100645F48;
  v116 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v111 = &v29[v38];
  v109 = a1;
  while (1)
  {
    v44 = v120;
    v45 = v122;
    v116(v120, v39, v122);
    v46 = v119;
    v47 = (uint64_t)v118;
    v48 = v117;
    dispatch thunk of Collection.startIndex.getter(v117, v128);
    v49 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    LODWORD(v133) = dispatch thunk of static Equatable.== infix(_:_:)(v44, v46, v45, v49);
    v50 = *(void (**)(char *, uint64_t))(v121 + 8);
    v50(v46, v45);
    v50(v44, v45);
    if ((v133 & 1) != 0)
    {
      sub_1000073A0(v47, &qword_100646350);
      return;
    }
    v51 = sub_1000175C8(&qword_100646368, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)(v39, v48, v51);
    v52 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v137, v39, v48, v128);
    v54 = *v53;
    v52(&v137, 0);
    v55 = sub_10030FB7C(v54, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)sub_1002FE2F8);
    v57 = v56;
    v58 = v126;
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
    v60 = v129;
    v59(v126, v115, v129);
    v61 = (void (*)(uint64_t *, _QWORD))IndexPath.row.modify(&v137);
    if (__OFADD__(*v62, v55))
      break;
    *v62 += v55;
    v61(&v137, 0);
    v63 = ((uint64_t (*)(char *, char *, uint64_t))v59)(v125, v58, v60);
    v95 = __OFSUB__(v57, v55);
    v64 = v57 - v55;
    if (v95)
      goto LABEL_61;
    v65 = IndexPath.row.getter(v63);
    v66 = IndexPath.row.getter(v65);
    v67 = v66 + v64;
    if (__OFADD__(v66, v64))
      goto LABEL_62;
    if (v67 < v65)
      goto LABEL_63;
    v68 = IndexPath.section.getter(v66);
    if ((v68 & 0x8000000000000000) != 0)
      goto LABEL_64;
    v69 = (_QWORD *)*a1;
    if (v68 >= *(_QWORD *)(*a1 + 16))
      goto LABEL_65;
    v130 = v68;
    v70 = &v69[2 * v68];
    v72 = (void (*)(char *, uint64_t))v70[4];
    v71 = v70[5];
    v132 = (unint64_t)v71 >> 62;
    v124 = v72;
    if ((unint64_t)v71 >> 62)
    {
      if (v71 < 0)
        v107 = v71;
      else
        v107 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v71, 2);
      swift_retain();
      v73 = _CocoaArrayWrapper.endIndex.getter(v107);
      swift_bridgeObjectRelease(v71);
    }
    else
    {
      v73 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v71);
      swift_retain();
    }
    if (v73 < v65)
      goto LABEL_66;
    if (v65 < 0)
      goto LABEL_67;
    if (v132)
    {
      if (v71 < 0)
        v74 = v71;
      else
        v74 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v71);
      v75 = _CocoaArrayWrapper.endIndex.getter(v74);
      swift_bridgeObjectRelease(v71);
      if (v75 < v67)
        goto LABEL_68;
    }
    else if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10) < v67)
    {
      goto LABEL_68;
    }
    v133 = v65;
    if ((v71 & 0xC000000000000001) != 0 && v133 != v67)
    {
      if (v133 >= v67)
        goto LABEL_70;
      v76 = v133;
      do
      {
        sub_10002A750(&qword_1006463D0);
        _ArrayBuffer._typeCheckSlowPath(_:)(v76++);
      }
      while (v67 != v76);
    }
    v77 = v71 & 0xFFFFFFFFFFFFFF8;
    if (v132)
    {
      if (v71 < 0)
        v79 = v71;
      else
        v79 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v71);
      v77 = _CocoaArrayWrapper.subscript.getter(v133, v67, v79);
      v131 = v80;
      v132 = v81;
      v78 = v82;
      swift_release();
      swift_bridgeObjectRelease_n(v71, 2);
    }
    else
    {
      swift_release();
      v78 = (2 * v67) | 1;
      v131 = v77 + 32;
      v132 = v133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v69) & 1) == 0)
      v69 = sub_1002B375C(v69);
    if (v130 >= v69[2])
      goto LABEL_69;
    v130 = v77;
    sub_10043AFF4(v133, v67);
    v40 = v130;
    *a1 = v69;
    v133 = v78;
    v83 = v78 >> 1;
    v42 = v132;
    v84 = v83 - v132;
    if (v83 != v132)
    {
      if (v83 <= v132)
        goto LABEL_71;
      swift_unknownObjectRetain(v40);
      v85 = (uint64_t *)(v131 + 8 * v42);
      do
      {
        v86 = *v85;
        v87 = *v85 + *(_QWORD *)(*(_QWORD *)*v85 + 144);
        swift_beginAccess(v87, v136, 0, 0);
        sub_10002B1E8(v87, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v88 = swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v88);
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100309A88((uint64_t)v15, v86);
        sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        v89 = sub_1002AA398(v86);
        if ((v90 & 1) != 0)
        {
          v91 = v89;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1[2]);
          v93 = a1[2];
          v137 = v93;
          a1[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1002AE404();
            v93 = v137;
          }
          swift_release();
          sub_1002AD01C(v91, v93);
          v94 = a1[2];
          a1[2] = v93;
          swift_release();
          swift_bridgeObjectRelease(v94);
        }
        else
        {
          swift_release();
        }
        ++v85;
        --v84;
      }
      while (v84);
      v40 = v130;
      swift_unknownObjectRelease(v130);
      v42 = v132;
    }
    v43 = *(void (**)(char *, uint64_t))(v127 + 8);
    v41 = v129;
    v43(v125, v129);
    swift_beginAccess(v123, &v137, 33, 0);
    v95 = __OFSUB__(v83, v42);
    v96 = v83 - v42;
    if (v96)
    {
      if ((v96 < 0) ^ v95 | (v96 == 0))
        goto LABEL_72;
      v124 = v43;
      swift_unknownObjectRetain(v40);
      if ((v133 & 1) != 0)
      {
        v102 = (uint64_t *)(v131 + 8 * v42);
        v103 = (uint64_t)v110;
        do
        {
          v104 = *v102++;
          v105 = v104 + *(_QWORD *)(*(_QWORD *)v104 + 144);
          swift_beginAccess(v105, v135, 0, 0);
          sub_10002B1E8(v105, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v106 = swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v106);
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v15, v103);
          sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0(v103, (uint64_t *)&unk_1006463C0);
          swift_release();
          --v96;
        }
        while (v96);
      }
      else
      {
        v97 = (uint64_t *)(v131 + 8 * v42);
        v98 = (uint64_t)v110;
        do
        {
          v99 = *v97++;
          v100 = v99 + *(_QWORD *)(*(_QWORD *)v99 + 144);
          swift_beginAccess(v100, v134, 0, 0);
          sub_10002B1E8(v100, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v101 = swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v101);
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v15, v98);
          sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0(v98, (uint64_t *)&unk_1006463C0);
          swift_release();
          --v96;
        }
        while (v96);
      }
      v40 = v130;
      swift_unknownObjectRelease(v130);
      v41 = v129;
      v42 = v132;
      a1 = v109;
      v43 = v124;
    }
    swift_endAccess(&v137);
    sub_100307F24(v40, v131, v42, v133, 1, v113, 0);
    v43(v126, v41);
    swift_unknownObjectRelease(v40);
    v39 = v111;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
}

unint64_t sub_10030F068(_QWORD *a1, int64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, int64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  unint64_t result;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::Int v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  unint64_t v130;
  char v131[24];
  char v132[24];
  char v133[8];
  uint64_t v134;

  v110 = a7;
  v109 = a6;
  v130 = a5;
  v112 = a4;
  v111 = a3;
  v129 = a2;
  v8 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v8);
  v107 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for IndexPath(0);
  v124 = *(_QWORD *)(v126 - 8);
  v16 = __chkstk_darwin(v126);
  v122 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v123 = (char *)&v105 - v18;
  v119 = type metadata accessor for IndexSet.Index(0);
  v118 = *(_QWORD *)(v119 - 8);
  v19 = __chkstk_darwin(v119);
  v116 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v117 = (char *)&v105 - v21;
  v22 = sub_10002A750(&qword_100646348);
  __chkstk_darwin(v22);
  v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10002A750(&qword_100646350);
  v25 = __chkstk_darwin(v128);
  v27 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v105 - v28;
  v30 = type metadata accessor for IndexSet(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, int64_t, uint64_t))(v31 + 16);
  v32(v24, v129, v30);
  v32(v27, (int64_t)v24, v30);
  v33 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v34 = v117;
  v125 = v33;
  dispatch thunk of Collection.endIndex.getter(v30);
  v35 = *(void (**)(char *, uint64_t))(v31 + 8);
  v114 = v30;
  v35(v24, v30);
  v36 = v128;
  v37 = v118;
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v27[*(int *)(v128 + 36)], v34, v119);
  sub_10000F614((uint64_t)v27, (uint64_t)v29, &qword_100646350);
  v38 = *(int *)(v36 + 36);
  v115 = v29;
  v39 = &v29[v38];
  v120 = v130 + qword_100645F48;
  v113 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v108 = &v29[v38];
  v106 = a1;
  while (1)
  {
    v44 = v117;
    v45 = v119;
    v113(v117, v39, v119);
    v46 = v116;
    v47 = (uint64_t)v115;
    v48 = v114;
    dispatch thunk of Collection.startIndex.getter(v114, v125);
    v49 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    LODWORD(v130) = dispatch thunk of static Equatable.== infix(_:_:)(v44, v46, v45, v49);
    v50 = *(void (**)(char *, uint64_t))(v118 + 8);
    v50(v46, v45);
    v50(v44, v45);
    if ((v130 & 1) != 0)
      return sub_1000073A0(v47, &qword_100646350);
    v51 = sub_1000175C8(&qword_100646368, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)(v39, v48, v51);
    v52 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v134, v39, v48, v125);
    v54 = *v53;
    v52(&v134, 0);
    v55 = sub_10030FB7C(v54, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)sub_1002FE4C8);
    v57 = v56;
    v58 = v123;
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
    v60 = v126;
    v59(v123, v112, v126);
    result = IndexPath.row.modify(&v134);
    if (__OFADD__(*v62, v55))
      break;
    *v62 += v55;
    ((void (*)(uint64_t *, _QWORD))result)(&v134, 0);
    result = ((uint64_t (*)(char *, char *, uint64_t))v59)(v122, v58, v60);
    v92 = __OFSUB__(v57, v55);
    v63 = v57 - v55;
    if (v92)
      goto LABEL_61;
    v64 = IndexPath.row.getter(result);
    result = IndexPath.row.getter(v64);
    v65 = result + v63;
    if (__OFADD__(result, v63))
      goto LABEL_62;
    if (v65 < v64)
      goto LABEL_63;
    result = IndexPath.section.getter(result);
    if ((result & 0x8000000000000000) != 0)
      goto LABEL_64;
    v66 = (_QWORD *)*a1;
    if (result >= *(_QWORD *)(*a1 + 16))
      goto LABEL_65;
    v127 = result;
    v67 = &v66[2 * result];
    v69 = (void (*)(char *, uint64_t))v67[4];
    v68 = v67[5];
    v129 = (unint64_t)v68 >> 62;
    v121 = v69;
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0)
        v104 = v68;
      else
        v104 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v68, 2);
      swift_retain(v69);
      v70 = _CocoaArrayWrapper.endIndex.getter(v104);
      result = swift_bridgeObjectRelease(v68);
    }
    else
    {
      v70 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v68);
      result = swift_retain(v69);
    }
    if (v70 < v64)
      goto LABEL_66;
    if (v64 < 0)
      goto LABEL_67;
    if (v129)
    {
      if (v68 < 0)
        v71 = v68;
      else
        v71 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v68);
      v72 = _CocoaArrayWrapper.endIndex.getter(v71);
      result = swift_bridgeObjectRelease(v68);
      if (v72 < v65)
        goto LABEL_68;
    }
    else if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10) < v65)
    {
      goto LABEL_68;
    }
    v130 = v64;
    if ((v68 & 0xC000000000000001) != 0 && v130 != v65)
    {
      if (v130 >= v65)
        goto LABEL_70;
      v73 = v130;
      do
      {
        sub_10002A750((uint64_t *)&unk_100640E20);
        _ArrayBuffer._typeCheckSlowPath(_:)(v73++);
      }
      while (v65 != v73);
    }
    v74 = v68 & 0xFFFFFFFFFFFFFF8;
    if (v129)
    {
      if (v68 < 0)
        v76 = v68;
      else
        v76 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v68);
      v74 = _CocoaArrayWrapper.subscript.getter(v130, v65, v76);
      v128 = v77;
      v129 = v78;
      v75 = v79;
      swift_release(v121);
      swift_bridgeObjectRelease_n(v68, 2);
    }
    else
    {
      swift_release(v121);
      v75 = (2 * v65) | 1;
      v128 = v74 + 32;
      v129 = v130;
    }
    result = swift_isUniquelyReferenced_nonNull_native(v66);
    if ((result & 1) == 0)
    {
      result = (unint64_t)sub_1002B37D4(v66);
      v66 = (_QWORD *)result;
    }
    if (v127 >= v66[2])
      goto LABEL_69;
    v127 = v74;
    result = sub_10043B2F0(v130, v65);
    v40 = v127;
    *a1 = v66;
    v130 = v75;
    v80 = v75 >> 1;
    v42 = v129;
    v81 = v80 - v129;
    if (v80 != v129)
    {
      if (v80 <= v129)
        goto LABEL_71;
      swift_unknownObjectRetain(v40);
      v82 = (uint64_t *)(v128 + 8 * v42);
      do
      {
        v83 = *v82;
        v84 = *v82 + *(_QWORD *)(*(_QWORD *)*v82 + 144);
        swift_beginAccess(v84, v133, 0, 0);
        sub_10002B1E8(v84, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v85 = swift_retain(v83);
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v85);
        sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_100309D34((uint64_t)v15, v83);
        sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v86 = sub_1002AA398(v83);
        if ((v87 & 1) != 0)
        {
          v88 = v86;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1[2]);
          v90 = a1[2];
          v134 = v90;
          a1[2] = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1002AF55C();
            v90 = v134;
          }
          swift_release(*(_QWORD *)(*(_QWORD *)(v90 + 48) + 8 * v88));
          sub_1002AD01C(v88, v90);
          v91 = a1[2];
          a1[2] = v90;
          swift_release(v83);
          swift_bridgeObjectRelease(v91);
        }
        else
        {
          swift_release(v83);
        }
        ++v82;
        --v81;
      }
      while (v81);
      v40 = v127;
      swift_unknownObjectRelease(v127);
      v42 = v129;
    }
    v43 = *(void (**)(char *, uint64_t))(v124 + 8);
    v41 = v126;
    v43(v122, v126);
    result = swift_beginAccess(v120, &v134, 33, 0);
    v92 = __OFSUB__(v80, v42);
    v93 = v80 - v42;
    if (v93)
    {
      if ((v93 < 0) ^ v92 | (v93 == 0))
        goto LABEL_72;
      v121 = v43;
      swift_unknownObjectRetain(v40);
      if ((v130 & 1) != 0)
      {
        v99 = (uint64_t *)(v128 + 8 * v42);
        v100 = (uint64_t)v107;
        do
        {
          v101 = *v99++;
          v102 = v101 + *(_QWORD *)(*(_QWORD *)v101 + 144);
          swift_beginAccess(v102, v132, 0, 0);
          sub_10002B1E8(v102, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v103 = swift_retain(v101);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v103);
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v15, v100);
          sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0(v100, (uint64_t *)&unk_1006462C0);
          swift_release(v101);
          --v93;
        }
        while (v93);
      }
      else
      {
        v94 = (uint64_t *)(v128 + 8 * v42);
        v95 = (uint64_t)v107;
        do
        {
          v96 = *v94++;
          v97 = v96 + *(_QWORD *)(*(_QWORD *)v96 + 144);
          swift_beginAccess(v97, v131, 0, 0);
          sub_10002B1E8(v97, (uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v98 = swift_retain(v96);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v98);
          sub_10001F544((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v15, v95);
          sub_10001F544((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0(v95, (uint64_t *)&unk_1006462C0);
          swift_release(v96);
          --v93;
        }
        while (v93);
      }
      v40 = v127;
      swift_unknownObjectRelease(v127);
      v41 = v126;
      v42 = v129;
      a1 = v106;
      v43 = v121;
    }
    swift_endAccess(&v134);
    sub_10030884C(v40, v128, v42, v130, 1, v110, 0);
    v43(v123, v41);
    swift_unknownObjectRelease(v40);
    v39 = v108;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_10030FB7C(unint64_t a1, void (*a2)(uint64_t, _QWORD *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  _QWORD v24[3];

  v6 = v3;
  if (*(_BYTE *)(v3 + 72) == 2)
    goto LABEL_6;
  if (qword_10063D408 != -1)
    goto LABEL_29;
  while (1)
  {
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100012DC4(v8, (uint64_t)qword_10064A340);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.fault.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Remove requires expanded state", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

LABEL_6:
    swift_beginAccess(v6 + 64, v24, 32, 0);
    v13 = *(_QWORD *)(v6 + 64);
    if ((v13 & 0xC000000000000001) != 0)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v13);
    }
    else
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) <= a1)
        goto LABEL_25;
      v14 = *(_QWORD *)(v13 + 8 * a1 + 32);
      swift_retain(v14);
    }
    swift_endAccess(v24);
    v15 = sub_100317B84(a1, a2);
    if (*(_BYTE *)(v14 + 48) == 1)
    {
      v24[0] = 0;
      a2(v14, v24);
      v16 = v24[0];
      *(_QWORD *)(v14 + 40) = v24[0];
      *(_BYTE *)(v14 + 48) = 0;
    }
    else
    {
      v16 = *(_QWORD *)(v14 + 40);
    }
    a2 = (void (*)(uint64_t, _QWORD *))(v16 + 1);
    if (__OFADD__(v16, 1))
      goto LABEL_26;
    swift_beginAccess(v6 + 64, v24, 33, 0);
    v17 = ((uint64_t (*)(unint64_t))a3)(a1);
    swift_endAccess(v24);
    result = swift_release(v17);
    if ((*(_BYTE *)(v6 + 48) & 1) == 0)
      break;
LABEL_17:
    Strong = swift_weakLoadStrong(v6 + 56);
    if (Strong)
    {
      v6 = Strong;
      a3 = 1;
      do
      {
        *(_QWORD *)(v6 + 40) = 0;
        *(_BYTE *)(v6 + 48) = 1;
        v23 = swift_weakLoadStrong(v6 + 56);
        swift_release(v6);
        v6 = v23;
      }
      while (v23);
    }
    swift_release(v14);
    if (__OFADD__(v15, a2))
      goto LABEL_27;
    if ((uint64_t)a2 + v15 >= v15)
      return v15;
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once(&qword_10063D408, sub_10019D650);
  }
  v19 = *(_QWORD *)(v6 + 40);
  v20 = __OFSUB__(v19, a2);
  v21 = v19 - (_QWORD)a2;
  if (!v20)
  {
    *(_QWORD *)(v6 + 40) = v21;
    *(_BYTE *)(v6 + 48) = 0;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_10030FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  __int128 v22;
  uint64_t v23;
  char v24;

  *(_QWORD *)&v22 = a5();
  *((_QWORD *)&v22 + 1) = v11;
  v23 = v12;
  v24 = v13 & 1;
  v14 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a6(&v22, a3, a2, a1, a4);
  v15 = v23;
  v16 = v24;
  v17 = a2 + qword_100645F30;
  v18 = *(_QWORD *)(a2 + qword_100645F30);
  v19 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v20 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v17 = v22;
  *(_QWORD *)(v17 + 16) = v15;
  *(_BYTE *)(v17 + 24) = v16;
  result = sub_1000072F0(v18, v19, v20);
  *(_BYTE *)(a2 + v14) = 0;
  return result;
}

uint64_t sub_10030FE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t *, _QWORD);
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107[24];
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[16];
  char v112[8];
  uint64_t v113;

  v93 = a5;
  v92 = a4;
  v106 = a3;
  v105 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v6);
  v94 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for IndexSet.Index(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - v16;
  v18 = sub_10002A750(&qword_100646348);
  __chkstk_darwin(v18);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_10002A750(&qword_100646350);
  __chkstk_darwin(v103);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v104 = (uint64_t)&v89 - v24;
  v25 = type metadata accessor for IndexSet(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v20, v105, v25);
  v27(v22, (uint64_t)v20, v25);
  v28 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Collection.endIndex.getter(v25);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v97 = v25;
  v29(v20, v25);
  v30 = v103;
  v31 = &v22[*(int *)(v103 + 36)];
  v32 = v100;
  v33 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
  v98 = v17;
  v33(v31, v17, v101);
  v34 = v104;
  sub_10000F614((uint64_t)v22, v104, &qword_100646350);
  v35 = v34 + *(int *)(v30 + 36);
  v102 = v106 + qword_100645F48;
  v96 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v95 = xmmword_100521140;
  v91 = v28;
  for (i = v35; ; v35 = i)
  {
    v37 = v98;
    v38 = v101;
    v96(v98, v35, v101);
    v39 = v99;
    v40 = v97;
    dispatch thunk of Collection.startIndex.getter(v97, v28);
    v41 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    LODWORD(v106) = dispatch thunk of static Equatable.== infix(_:_:)(v37, v39, v38, v41);
    v42 = *(void (**)(char *, uint64_t))(v100 + 8);
    v42(v39, v38);
    v42(v37, v38);
    if ((v106 & 1) != 0)
      return sub_1000073A0(v104, &qword_100646350);
    v43 = sub_1000175C8(&qword_100646368, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)(v35, v40, v43);
    v44 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v113, v35, v40, v28);
    v46 = *v45;
    v44(&v113, 0);
    v47 = sub_1002FE3E0(v46);
    v106 = v48;
    v49 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v49, v112);
    *(_OWORD *)(inited + 16) = v95;
    *(_QWORD *)(inited + 32) = v47;
    v113 = inited;
    specialized Array._endMutation()(inited);
    v51 = v113;
    v105 = v47;
    swift_retain();
    if ((v51 & 0xC000000000000001) != 0)
    {
      v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v51);
    }
    else
    {
      v52 = *(_QWORD *)(v51 + 32);
      swift_retain();
    }
    v53 = v52 + *(_QWORD *)(*(_QWORD *)v52 + 144);
    swift_beginAccess(v53, v111, 0, 0);
    v54 = sub_10002B1E8(v53, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v54);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100309A88((uint64_t)v13, v52);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    v55 = sub_1002AA398(v52);
    if ((v56 & 1) != 0)
    {
      v57 = v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 16));
      v59 = *(_QWORD *)(a1 + 16);
      v113 = v59;
      *(_QWORD *)(a1 + 16) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1002AE404();
        v59 = v113;
      }
      swift_release();
      sub_1002AD01C(v57, v59);
      v60 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v59;
      swift_release();
      swift_bridgeObjectRelease(v60);
    }
    else
    {
      swift_release();
    }
    swift_bridgeObjectRelease(v51);
    v61 = v106;
    v103 = v46;
    if ((unint64_t)v106 >> 62)
    {
      if (v106 < 0)
        v75 = v106;
      else
        v75 = v106 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v106, 2);
      result = _CocoaArrayWrapper.endIndex.getter(v75);
      v62 = result;
      if (!result)
        goto LABEL_30;
    }
    else
    {
      v62 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n(v106, 2);
      if (!v62)
        goto LABEL_30;
    }
    if (v62 < 1)
      break;
    v64 = 0;
    v65 = v61 & 0xC000000000000001;
    do
    {
      if (v65)
      {
        v66 = specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v61);
      }
      else
      {
        v66 = *(_QWORD *)(v61 + 8 * v64 + 32);
        swift_retain();
      }
      v67 = v66 + *(_QWORD *)(*(_QWORD *)v66 + 144);
      swift_beginAccess(v67, v110, 0, 0);
      v68 = sub_10002B1E8(v67, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v68);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100309A88((uint64_t)v13, v66);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v69 = sub_1002AA398(v66);
      if ((v70 & 1) != 0)
      {
        v71 = v69;
        v72 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 16));
        v73 = *(_QWORD *)(a1 + 16);
        v113 = v73;
        *(_QWORD *)(a1 + 16) = 0x8000000000000000;
        if ((v72 & 1) == 0)
        {
          sub_1002AE404();
          v73 = v113;
        }
        swift_release();
        sub_1002AD01C(v71, v73);
        v74 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v73;
        swift_release();
        swift_bridgeObjectRelease(v74);
      }
      else
      {
        swift_release();
      }
      ++v64;
      v61 = v106;
    }
    while (v62 != v64);
LABEL_30:
    swift_bridgeObjectRelease_n(v61, 2);
    sub_100069868(v103, -1);
    swift_beginAccess(v102, &v113, 33, 0);
    v76 = v105 + *(_QWORD *)(*(_QWORD *)v105 + 144);
    swift_beginAccess(v76, v109, 0, 0);
    v77 = sub_10002B1E8(v76, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v77);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v78 = v94;
    sub_1000F4754((uint64_t)v13, v94);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    result = sub_1000073A0(v78, (uint64_t *)&unk_1006463C0);
    if (v62)
    {
      if (v62 < 1)
        goto LABEL_41;
      v79 = v61;
      if ((v61 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n(v61, 2);
        v80 = 0;
        do
        {
          v81 = specialized _ArrayBuffer._getElementSlowPath(_:)(v80++, v61);
          v82 = v81 + *(_QWORD *)(*(_QWORD *)v81 + 144);
          swift_beginAccess(v82, v108, 0, 0);
          v83 = sub_10002B1E8(v82, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v83);
          sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v13, v78);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0(v78, (uint64_t *)&unk_1006463C0);
          v84 = v81;
          v61 = v106;
          swift_unknownObjectRelease(v84);
        }
        while (v62 != v80);
        swift_bridgeObjectRelease(v61);
      }
      else
      {
        v85 = (uint64_t *)(v61 + 32);
        swift_bridgeObjectRetain(v79);
        do
        {
          v86 = *v85++;
          v87 = v86 + *(_QWORD *)(*(_QWORD *)v86 + 144);
          swift_beginAccess(v87, v107, 0, 0);
          sub_10002B1E8(v87, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v88 = swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v88);
          sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v13, v78);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0(v78, (uint64_t *)&unk_1006463C0);
          swift_release();
          --v62;
        }
        while (v62);
      }
    }
    else
    {
      swift_bridgeObjectRetain(v61);
    }
    swift_endAccess(&v113);
    v36 = v106;
    swift_bridgeObjectRelease(v106);
    sub_100307A44(1, v105, 1, v93, 0);
    swift_bridgeObjectRelease(v36);
    swift_release();
    v28 = v91;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003108E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108[24];
  char v109[24];
  char v110[24];
  char v111[24];
  char v112[16];
  char v113[8];
  uint64_t v114;

  v94 = a5;
  v93 = a4;
  v107 = a3;
  v106 = a2;
  v6 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v6);
  v95 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for IndexSet.Index(0);
  v101 = *(_QWORD *)(v102 - 8);
  v14 = __chkstk_darwin(v102);
  v100 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v90 - v16;
  v18 = sub_10002A750(&qword_100646348);
  __chkstk_darwin(v18);
  v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10002A750(&qword_100646350);
  v21 = __chkstk_darwin(v104);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v105 = (uint64_t)&v90 - v24;
  v25 = type metadata accessor for IndexSet(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v20, v106, v25);
  v27(v23, (uint64_t)v20, v25);
  v28 = sub_1000175C8(&qword_100646358, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Collection.endIndex.getter(v25);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v98 = v25;
  v29(v20, v25);
  v30 = v104;
  v31 = &v23[*(int *)(v104 + 36)];
  v32 = v101;
  v33 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
  v99 = v17;
  v33(v31, v17, v102);
  v34 = v105;
  sub_10000F614((uint64_t)v23, v105, &qword_100646350);
  v35 = v34 + *(int *)(v30 + 36);
  v103 = v107 + qword_100645F48;
  v97 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v96 = xmmword_100521140;
  v92 = v28;
  for (i = v35; ; v35 = i)
  {
    v38 = v99;
    v39 = v102;
    v97(v99, v35, v102);
    v40 = v100;
    v41 = v98;
    dispatch thunk of Collection.startIndex.getter(v98, v28);
    v42 = sub_1000175C8(&qword_100646360, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    LODWORD(v107) = dispatch thunk of static Equatable.== infix(_:_:)(v38, v40, v39, v42);
    v43 = *(void (**)(char *, uint64_t))(v101 + 8);
    v43(v40, v39);
    v43(v38, v39);
    if ((v107 & 1) != 0)
      return sub_1000073A0(v105, &qword_100646350);
    v44 = sub_1000175C8(&qword_100646368, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)(v35, v41, v44);
    v45 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v114, v35, v41, v28);
    v47 = *v46;
    v45(&v114, 0);
    v48 = sub_1002FE5B8(v47);
    v107 = v49;
    v50 = sub_10002A750((uint64_t *)&unk_1006415A0);
    inited = swift_initStackObject(v50, v113);
    *(_OWORD *)(inited + 16) = v96;
    *(_QWORD *)(inited + 32) = v48;
    v114 = inited;
    specialized Array._endMutation()(inited);
    v52 = v114;
    v106 = v48;
    swift_retain(v48);
    if ((v52 & 0xC000000000000001) != 0)
    {
      v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v52);
    }
    else
    {
      v53 = *(_QWORD *)(v52 + 32);
      swift_retain(v53);
    }
    v54 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 144);
    swift_beginAccess(v54, v112, 0, 0);
    v55 = sub_10002B1E8(v54, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v55);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100309D34((uint64_t)v13, v53);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    v56 = sub_1002AA398(v53);
    if ((v57 & 1) != 0)
    {
      v58 = v56;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 16));
      v60 = *(_QWORD *)(a1 + 16);
      v114 = v60;
      *(_QWORD *)(a1 + 16) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1002AF55C();
        v60 = v114;
      }
      swift_release(*(_QWORD *)(*(_QWORD *)(v60 + 48) + 8 * v58));
      sub_1002AD01C(v58, v60);
      v61 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v60;
      swift_release(v53);
      swift_bridgeObjectRelease(v61);
    }
    else
    {
      swift_release(v53);
    }
    swift_bridgeObjectRelease(v52);
    v62 = v107;
    v104 = v47;
    if ((unint64_t)v107 >> 62)
    {
      if (v107 < 0)
        v76 = v107;
      else
        v76 = v107 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v107, 2);
      result = _CocoaArrayWrapper.endIndex.getter(v76);
      v63 = result;
      if (!result)
        goto LABEL_30;
    }
    else
    {
      v63 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n(v107, 2);
      if (!v63)
        goto LABEL_30;
    }
    if (v63 < 1)
      break;
    v65 = 0;
    v66 = v62 & 0xC000000000000001;
    do
    {
      if (v66)
      {
        v67 = specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v62);
      }
      else
      {
        v67 = *(_QWORD *)(v62 + 8 * v65 + 32);
        swift_retain(v67);
      }
      v68 = v67 + *(_QWORD *)(*(_QWORD *)v67 + 144);
      swift_beginAccess(v68, v111, 0, 0);
      v69 = sub_10002B1E8(v68, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v69);
      sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100309D34((uint64_t)v13, v67);
      sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      v70 = sub_1002AA398(v67);
      if ((v71 & 1) != 0)
      {
        v72 = v70;
        v73 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a1 + 16));
        v74 = *(_QWORD *)(a1 + 16);
        v114 = v74;
        *(_QWORD *)(a1 + 16) = 0x8000000000000000;
        if ((v73 & 1) == 0)
        {
          sub_1002AF55C();
          v74 = v114;
        }
        swift_release(*(_QWORD *)(*(_QWORD *)(v74 + 48) + 8 * v72));
        sub_1002AD01C(v72, v74);
        v75 = *(_QWORD *)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v74;
        swift_release(v67);
        swift_bridgeObjectRelease(v75);
      }
      else
      {
        swift_release(v67);
      }
      ++v65;
      v62 = v107;
    }
    while (v63 != v65);
LABEL_30:
    swift_bridgeObjectRelease_n(v62, 2);
    sub_100069B3C(v104, -1);
    swift_beginAccess(v103, &v114, 33, 0);
    v77 = v106 + *(_QWORD *)(*(_QWORD *)v106 + 144);
    swift_beginAccess(v77, v110, 0, 0);
    v78 = sub_10002B1E8(v77, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v78);
    sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v79 = v95;
    sub_1000F4960((uint64_t)v13, v95);
    sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    result = sub_1000073A0(v79, (uint64_t *)&unk_1006462C0);
    if (v63)
    {
      if (v63 < 1)
        goto LABEL_41;
      v80 = v62;
      if ((v62 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n(v62, 2);
        v81 = 0;
        do
        {
          v82 = specialized _ArrayBuffer._getElementSlowPath(_:)(v81++, v62);
          v83 = v82 + *(_QWORD *)(*(_QWORD *)v82 + 144);
          swift_beginAccess(v83, v109, 0, 0);
          v84 = sub_10002B1E8(v83, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v84);
          sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v13, v79);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0(v79, (uint64_t *)&unk_1006462C0);
          v85 = v82;
          v62 = v107;
          swift_unknownObjectRelease(v85);
        }
        while (v63 != v81);
        swift_bridgeObjectRelease(v62);
      }
      else
      {
        v86 = (uint64_t *)(v62 + 32);
        swift_bridgeObjectRetain(v80);
        do
        {
          v87 = *v86++;
          v88 = v87 + *(_QWORD *)(*(_QWORD *)v87 + 144);
          swift_beginAccess(v88, v108, 0, 0);
          sub_10002B1E8(v88, (uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v89 = swift_retain(v87);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v89);
          sub_10001F544((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v13, v79);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0(v79, (uint64_t *)&unk_1006462C0);
          swift_release(v87);
          --v63;
        }
        while (v63);
      }
    }
    else
    {
      swift_bridgeObjectRetain(v62);
    }
    swift_endAccess(&v114);
    v36 = v107;
    swift_bridgeObjectRelease(v107);
    v37 = v106;
    sub_100307CB4(1, v106, 1, v94, 0);
    swift_bridgeObjectRelease(v36);
    swift_release(v37);
    v28 = v92;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100311324(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  BOOL v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  __n128 v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t result;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  id v130;
  uint64_t v131;

  v129 = a2;
  v128 = a4;
  v118 = a1;
  v7 = type metadata accessor for IndexSet(0);
  v126 = *(_QWORD *)(v7 - 8);
  v127 = v7;
  __chkstk_darwin(v7);
  v125 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v120 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v121 = (uint64_t)&v116 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  v123 = v13;
  v124 = (char *)v14;
  __chkstk_darwin(v13);
  v119 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v122 = (char *)&v116 - v17;
  v18 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v116 - v23;
  v25 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v25);
  v27 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v116 - v29;
  v31 = sub_10002A750(&qword_10064B6A8);
  __chkstk_darwin(v31);
  v34 = (char *)&v116 + *(int *)(v33 + 48) - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a3;
  v36 = (char *)&v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(v35, (uint64_t)v36, (uint64_t *)&unk_100640EB0);
  sub_10000735C(a5, (uint64_t)v34, (uint64_t *)&unk_100640EB0);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v37(v36, 1, v18) != 1)
  {
    v117 = v36;
    sub_10000735C((uint64_t)v36, (uint64_t)v30, (uint64_t *)&unk_100640EB0);
    if (v37(v34, 1, v18) == 1)
    {
      sub_10001F544((uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_35;
    }
    v39 = (uint64_t)v30;
    v40 = v24;
    sub_10001F580(v39, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v41 = (uint64_t)v34;
    v42 = (uint64_t)v21;
    sub_10001F580(v41, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v43 = sub_10006B3DC();
    v45 = v44;
    v47 = v46;
    v48 = sub_100073228((uint64_t)v24, v44);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v43);
    if (v48)
    {
      v116 = (uint64_t)v40;
      v49 = sub_10006B3DC();
      v51 = v50;
      v53 = v52;
      v54 = sub_100073228((uint64_t)v21, v50);
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v49);
      v36 = v117;
      if (v54)
      {
        if (*(_BYTE *)(v54 + 72) == 2)
        {
          v127 = v54;
          v55 = sub_10006B3DC();
          v57 = v56;
          v59 = v58;
          v61 = v121;
          sub_100309FFC(v48, v55, v58, v60 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, v121);
          swift_bridgeObjectRelease(v59);
          swift_bridgeObjectRelease(v57);
          v62 = swift_bridgeObjectRelease(v55);
          v64 = v123;
          v63 = (uint64_t)v124;
          v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v124 + 6);
          if (v65(v61, 1, v123, v62) == 1)
          {
            v66 = v61;
            v67 = v116;
          }
          else
          {
            v89 = v61;
            v90 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
            v90(v122, v89, v64);
            v91 = sub_10006B3DC();
            v93 = v92;
            v95 = v94;
            v66 = v120;
            sub_100309FFC(v127, v91, v94, v96 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, v120);
            swift_bridgeObjectRelease(v95);
            swift_bridgeObjectRelease(v93);
            v97 = swift_bridgeObjectRelease(v91);
            v98 = v65(v66, 1, v64, v97);
            v67 = v116;
            if (v98 != 1)
            {
              v105 = v119;
              v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v90)(v119, v66, v64);
              if (*(_BYTE *)(v48 + 72) == 1)
              {
                __chkstk_darwin(v106);
                v107 = v118;
                *(&v116 - 4) = (uint64_t)v130;
                *(&v116 - 3) = v107;
                v114 = v127;
                v115 = v128;
                sub_10030A8DC((void (*)(uint64_t))sub_10031B484, (uint64_t)(&v116 - 6), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v108 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
                v108(v105, v64);
                v109 = v122;
              }
              else
              {
                __chkstk_darwin(v106);
                v110 = v129;
                *(&v116 - 8) = (uint64_t)v130;
                *(&v116 - 7) = v48;
                v111 = (uint64_t)v105;
                v112 = v127;
                *(&v116 - 6) = v110;
                *(&v116 - 5) = v112;
                v113 = v122;
                *(&v116 - 4) = v128;
                *(&v116 - 3) = (uint64_t)v113;
                v114 = v111;
                sub_10030A8DC((void (*)(uint64_t))sub_10031B438, (uint64_t)(&v116 - 10), 0, 0, 0, 0);
                swift_release();
                swift_release();
                sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_10001F544(v67, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                v108 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
                v108((char *)v111, v64);
                v109 = v113;
              }
              v108(v109, v64);
              return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640EB0);
            }
            (*((void (**)(char *, uint64_t))v124 + 1))(v122, v64);
          }
          sub_1000073A0(v66, &qword_100646950);
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v99 = type metadata accessor for Logger(0);
          v100 = sub_100012DC4(v99, (uint64_t)qword_100645EC0);
          v101 = Logger.logObject.getter(v100);
          v102 = static os_log_type_t.fault.getter(v101);
          if (os_log_type_enabled(v101, v102))
          {
            v103 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v103 = 0;
            _os_log_impl((void *)&_mh_execute_header, v101, v102, "Unable to find old/newChildrenStartIndexPath", v103, 2u);
            swift_slowDealloc(v103, -1, -1);
          }
          swift_release();
          swift_release();

          sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v74 = v67;
          goto LABEL_28;
        }
        swift_release();
      }
      v128 = v48;
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v124 = v21;
      v75 = type metadata accessor for Logger(0);
      v76 = sub_100012DC4(v75, (uint64_t)qword_100645EC0);
      v77 = Logger.logObject.getter(v76);
      v78 = static os_log_type_t.info.getter();
      v79 = os_log_type_enabled(v77, v78);
      v80 = v116;
      if (v79)
      {
        v81 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v81 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "newParentNode is not found or not expanded, treating this as a delete.", v81, 2u);
        swift_slowDealloc(v81, -1, -1);
      }

      v82 = sub_10002A750((uint64_t *)&unk_10064FA40);
      v83 = swift_allocObject(v82, 40, 7);
      *(_OWORD *)(v83 + 16) = xmmword_100520250;
      *(_QWORD *)(v83 + 32) = v129;
      v131 = v83;
      v84 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v85 = sub_10002A750(&qword_100641150);
      v86 = sub_1000798C0();
      v87 = (uint64_t)v125;
      v88 = v127;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v131, v85, v86, v127, v84);
      sub_10002B1E8(v80, (uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v27, 0, 1, v18);
      sub_10030DC24(v87, (uint64_t)v27, 100);
      swift_release();
      sub_1000073A0((uint64_t)v27, (uint64_t *)&unk_100640EB0);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v87, v88);
      sub_10001F544((uint64_t)v124, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v74 = v80;
    }
    else
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v68 = type metadata accessor for Logger(0);
      v69 = sub_100012DC4(v68, (uint64_t)qword_100645EC0);
      v70 = Logger.logObject.getter(v69);
      v71 = static os_log_type_t.info.getter();
      v72 = os_log_type_enabled(v70, v71);
      v36 = v117;
      if (v72)
      {
        v73 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v73 = 0;
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "oldParentNode is not found, nothing to do.", v73, 2u);
        swift_slowDealloc(v73, -1, -1);
      }

      sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      v74 = (uint64_t)v40;
    }
LABEL_28:
    sub_10001F544(v74, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640EB0);
  }
  if (v37(v34, 1, v18) == 1)
  {
    v38 = v130;
    sub_10010081C(0, 0, 0, 0, (uint64_t)v38, (uint64_t)v38, v129, v128);

    return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640EB0);
  }
LABEL_35:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x7070757320746F4ELL, 0xED0000646574726FLL, "Reminders/TTRITreeViewTableAdapter.swift", 40, 2, 439, 0);
  __break(1u);
  return result;
}

uint64_t sub_100311DA0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t result;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  id v130;
  uint64_t v131;

  v129 = a2;
  v128 = a4;
  v118 = a1;
  v7 = type metadata accessor for IndexSet(0);
  v126 = *(_QWORD *)(v7 - 8);
  v127 = v7;
  __chkstk_darwin(v7);
  v125 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10002A750(&qword_100646950);
  v10 = __chkstk_darwin(v9);
  v120 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v121 = (uint64_t)&v116 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  v123 = v13;
  v124 = (char *)v14;
  v15 = __chkstk_darwin(v13);
  v119 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v122 = (char *)&v116 - v17;
  v18 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v116 - v23;
  v25 = sub_10002A750((uint64_t *)&unk_100640E00);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v116 - v29;
  v31 = sub_10002A750(&qword_100655958);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v116 + *(int *)(v32 + 48) - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a3;
  v36 = (char *)&v116 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000735C(v35, (uint64_t)v36, (uint64_t *)&unk_100640E00);
  sub_10000735C(a5, (uint64_t)v34, (uint64_t *)&unk_100640E00);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v37(v36, 1, v18) != 1)
  {
    v117 = v36;
    sub_10000735C((uint64_t)v36, (uint64_t)v30, (uint64_t *)&unk_100640E00);
    if (v37(v34, 1, v18) == 1)
    {
      sub_10001F544((uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_35;
    }
    v39 = (uint64_t)v30;
    v40 = v24;
    sub_10001F580(v39, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v41 = (uint64_t)v34;
    v42 = (uint64_t)v22;
    sub_10001F580(v41, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v43 = sub_10006B64C();
    v45 = v44;
    v47 = v46;
    v48 = sub_100073338((uint64_t)v24, v44);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v43);
    if (v48)
    {
      v116 = (uint64_t)v40;
      v49 = sub_10006B64C();
      v51 = v50;
      v53 = v52;
      v54 = sub_100073338((uint64_t)v22, v50);
      swift_bridgeObjectRelease(v53);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v49);
      v36 = v117;
      if (v54)
      {
        if (*(_BYTE *)(v54 + 72) == 2)
        {
          v127 = v54;
          v55 = sub_10006B64C();
          v57 = v56;
          v59 = v58;
          v61 = v121;
          sub_100309FFC(v48, v55, v58, v60 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, v121);
          swift_bridgeObjectRelease(v59);
          swift_bridgeObjectRelease(v57);
          swift_bridgeObjectRelease(v55);
          v63 = v123;
          v62 = (uint64_t)v124;
          v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v124 + 6);
          if (v64(v61, 1, v123) == 1)
          {
            v65 = v61;
            v66 = v116;
          }
          else
          {
            v88 = v61;
            v89 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
            v89(v122, v88, v63);
            v90 = sub_10006B64C();
            v92 = v91;
            v94 = v93;
            v65 = v120;
            sub_100309FFC(v127, v90, v93, v95 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, v120);
            swift_bridgeObjectRelease(v94);
            swift_bridgeObjectRelease(v92);
            swift_bridgeObjectRelease(v90);
            v96 = v64(v65, 1, v63);
            v66 = v116;
            if (v96 != 1)
            {
              v104 = v119;
              v105 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v119, v65, v63);
              if (*(_BYTE *)(v48 + 72) == 1)
              {
                __chkstk_darwin(v105);
                v106 = v118;
                *(&v116 - 4) = (uint64_t)v130;
                *(&v116 - 3) = v106;
                v107 = v127;
                v114 = v127;
                v115 = v128;
                sub_10030B054((void (*)(uint64_t))sub_10031B3A4, (uint64_t)(&v116 - 6), 0, 0, 0, 0);
                swift_release(v48);
                swift_release(v107);
                sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                v108 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
                v108(v104, v63);
                v109 = v122;
              }
              else
              {
                __chkstk_darwin(v105);
                v110 = v129;
                *(&v116 - 8) = (uint64_t)v130;
                *(&v116 - 7) = v48;
                v111 = (uint64_t)v104;
                v112 = v127;
                *(&v116 - 6) = v110;
                *(&v116 - 5) = v112;
                v113 = v122;
                *(&v116 - 4) = v128;
                *(&v116 - 3) = (uint64_t)v113;
                v114 = v111;
                sub_10030B054((void (*)(uint64_t))sub_10031B390, (uint64_t)(&v116 - 10), 0, 0, 0, 0);
                swift_release(v48);
                swift_release(v112);
                sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                v108 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
                v108((char *)v111, v63);
                v109 = v113;
              }
              v108(v109, v63);
              return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640E00);
            }
            (*((void (**)(char *, uint64_t))v124 + 1))(v122, v63);
          }
          v97 = v48;
          sub_1000073A0(v65, &qword_100646950);
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v98 = type metadata accessor for Logger(0);
          v99 = sub_100012DC4(v98, (uint64_t)qword_100645EC0);
          v100 = Logger.logObject.getter(v99);
          v101 = static os_log_type_t.fault.getter(v100);
          if (os_log_type_enabled(v100, v101))
          {
            v102 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v102 = 0;
            _os_log_impl((void *)&_mh_execute_header, v100, v101, "Unable to find old/newChildrenStartIndexPath", v102, 2u);
            swift_slowDealloc(v102, -1, -1);
          }
          swift_release(v127);
          swift_release(v97);

          sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v73 = v66;
          goto LABEL_28;
        }
        swift_release(v54);
      }
      v128 = v48;
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v124 = v22;
      v74 = type metadata accessor for Logger(0);
      v75 = sub_100012DC4(v74, (uint64_t)qword_100645EC0);
      v76 = Logger.logObject.getter(v75);
      v77 = static os_log_type_t.info.getter();
      v78 = os_log_type_enabled(v76, v77);
      v79 = v116;
      if (v78)
      {
        v80 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v80 = 0;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "newParentNode is not found or not expanded, treating this as a delete.", v80, 2u);
        swift_slowDealloc(v80, -1, -1);
      }

      v81 = sub_10002A750((uint64_t *)&unk_10064FA40);
      v82 = swift_allocObject(v81, 40, 7);
      *(_OWORD *)(v82 + 16) = xmmword_100520250;
      *(_QWORD *)(v82 + 32) = v129;
      v131 = v82;
      v83 = sub_1000175C8((unint64_t *)&qword_100646370, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v84 = sub_10002A750(&qword_100641150);
      v85 = sub_1000798C0();
      v86 = (uint64_t)v125;
      v87 = v127;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v131, v84, v85, v127, v83);
      sub_10002B1E8(v79, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v28, 0, 1, v18);
      sub_10030E054(v86, (uint64_t)v28, 100);
      swift_release(v128);
      sub_1000073A0((uint64_t)v28, (uint64_t *)&unk_100640E00);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v86, v87);
      sub_10001F544((uint64_t)v124, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v73 = v79;
    }
    else
    {
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v67 = type metadata accessor for Logger(0);
      v68 = sub_100012DC4(v67, (uint64_t)qword_100645EC0);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.info.getter();
      v71 = os_log_type_enabled(v69, v70);
      v36 = v117;
      if (v71)
      {
        v72 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v72 = 0;
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "oldParentNode is not found, nothing to do.", v72, 2u);
        swift_slowDealloc(v72, -1, -1);
      }

      sub_10001F544(v42, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v73 = (uint64_t)v40;
    }
LABEL_28:
    sub_10001F544(v73, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640E00);
  }
  if (v37(v34, 1, v18) == 1)
  {
    v38 = v130;
    sub_1000FEEDC(0, 0, 0, 0, (uint64_t)v38, (uint64_t)v38, v129, v128);

    return sub_1000073A0((uint64_t)v36, (uint64_t *)&unk_100640E00);
  }
LABEL_35:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x7070757320746F4ELL, 0xED0000646574726FLL, "Reminders/TTRITreeViewTableAdapter.swift", 40, 2, 439, 0);
  __break(1u);
  return result;
}

uint64_t sub_10031281C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  __int128 v24;
  uint64_t v25;
  char v26;

  *(_QWORD *)&v24 = a6();
  *((_QWORD *)&v24 + 1) = v13;
  v25 = v14;
  v26 = v15 & 1;
  v16 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a7(&v24, a2, a3, a4, a5, a1);
  v17 = v25;
  v18 = v26;
  v19 = a2 + qword_100645F30;
  v20 = *(_QWORD *)(a2 + qword_100645F30);
  v21 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v22 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v19 = v24;
  *(_QWORD *)(v19 + 16) = v17;
  *(_BYTE *)(v19 + 24) = v18;
  result = sub_1000072F0(v20, v21, v22);
  *(_BYTE *)(a2 + v16) = 0;
  return result;
}

void sub_1003128E4(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t isUniquelyReferenced_nonNull_native, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char *v38;
  void (*v39)(_BYTE *, _QWORD);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, __n128);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  _QWORD *v79;
  char v80[24];
  _QWORD *v81;
  _BYTE v82[32];

  v11 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v78 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v75 = (char *)&v72 - v17;
  v18 = sub_10002A750((uint64_t *)&unk_100646400);
  v19 = swift_allocObject(v18, 24, 7);
  v20 = (unint64_t)_swiftEmptyArrayStorage;
  *(_QWORD *)(v19 + 16) = sub_100071630((uint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    goto LABEL_38;
  do
  {
LABEL_2:
    v77 = a1;
    v21 = sub_10006F808((uint64_t)a3, a4, v19);
    swift_release();
    v20 = (unint64_t)sub_10019D874;
    v74 = v21;
    v22 = (_QWORD *)sub_100313414(v21, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t, _QWORD *))sub_10019D874, (void (*)(uint64_t, uint64_t, uint64_t))sub_10043860C, (uint64_t (*)(_QWORD *))sub_1000778C0);
    v24 = v23;
    v25 = sub_10006B3DC();
    v27 = v26;
    v29 = v28;
    sub_100309FFC(a4, v25, v28, v30 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v13);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v27);
    v31 = swift_bridgeObjectRelease(v25);
    v32 = v76;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v13, 1, v76, v31) == 1)
    {
      swift_bridgeObjectRelease(v22);
      sub_1000073A0((uint64_t)v13, &qword_100646950);
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v33 = type metadata accessor for Logger(0);
      v34 = sub_100012DC4(v33, (uint64_t)qword_100645EC0);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Can't find indexPath to insert currentItem into", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

      swift_release();
      return;
    }
    v79 = v22;
    v38 = v75;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v75, v13, v32);
    v39 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v82);
    if (__OFADD__(*v40, v24))
    {
      __break(1u);
    }
    else
    {
      *v40 += v24;
      v39(v82, 0);
      v13 = v78;
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 16))(v78, v38, v32);
      v20 = IndexPath.section.getter(v41);
      v29 = (uint64_t)v79;
      swift_bridgeObjectRetain(v79);
      v27 = IndexPath.row.getter(v42);
      v22 = v77;
      v24 = (_QWORD *)*v77;
      if ((swift_isUniquelyReferenced_nonNull_native(*v77) & 1) != 0)
      {
        if ((v20 & 0x8000000000000000) != 0)
          goto LABEL_45;
        goto LABEL_11;
      }
    }
    v24 = sub_1002B375C(v24);
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      if (v29 < 0)
        v69 = v29;
      else
        v69 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v46 = _CocoaArrayWrapper.endIndex.getter(v69);
      if (!v46)
      {
LABEL_51:
        swift_release();
        v70 = swift_bridgeObjectRelease(v29);
        v73(v75, v76, v70);
        swift_bridgeObjectRelease(v29);
        return;
      }
      goto LABEL_14;
    }
LABEL_11:
    if (v20 >= v24[2])
      goto LABEL_46;
    v43 = sub_1004381E0(v27, v27, v29);
    *v22 = v24;
    v44 = IndexPath.section.getter(v43);
    sub_10006A14C(v29, v44);
    v45 = *(void (**)(char *, uint64_t))(v14 + 8);
    v45(v13, v32);
    v73 = (void (*)(char *, uint64_t, __n128))v45;
    if ((unint64_t)v29 >> 62)
      goto LABEL_47;
    v46 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v29);
    if (!v46)
      goto LABEL_51;
LABEL_14:
    if (v46 < 1)
    {
      __break(1u);
      goto LABEL_53;
    }
    a1 = 0;
    v77 = (_QWORD *)v46;
    v78 = (char *)(v29 & 0xC000000000000001);
    v13 = (char *)(a6 + 80);
    while (1)
    {
      if (v78)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v29);
      }
      else
      {
        v14 = *(_QWORD *)(v29 + 8 * (_QWORD)a1 + 32);
        swift_retain();
      }
      swift_beginAccess(a6 + 80, v82, 32, 0);
      v50 = *(_QWORD *)(a6 + 88);
      if (*(_QWORD *)(v50 + 16) && (v51 = sub_1002AA398(v14), (v52 & 1) != 0))
      {
        v53 = *(_QWORD *)(v50 + 56) + 16 * v51;
        v54 = *(_QWORD **)v53;
        a4 = *(_QWORD *)(v53 + 8);
        swift_endAccess(v82);
        swift_bridgeObjectRetain(v54);
      }
      else
      {
        swift_endAccess(v82);
        a4 = 0;
        v54 = _swiftEmptyDictionarySingleton;
      }
      swift_beginAccess(a6 + 80, v82, 33, 0);
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a6 + 88));
      v81 = *(_QWORD **)(a6 + 88);
      a3 = v81;
      *(_QWORD *)(a6 + 88) = 0x8000000000000000;
      v19 = sub_1002AA398(v14);
      v56 = a3[2];
      v57 = (v55 & 1) == 0;
      v58 = v56 + v57;
      if (__OFADD__(v56, v57))
        break;
      v20 = v55;
      if (a3[3] >= v58)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = (uint64_t)v81;
          if ((v55 & 1) != 0)
            goto LABEL_16;
        }
        else
        {
          a3 = &v81;
          sub_1002AE7AC();
          isUniquelyReferenced_nonNull_native = (uint64_t)v81;
          if ((v20 & 1) != 0)
            goto LABEL_16;
        }
      }
      else
      {
        sub_100457C50(v58, isUniquelyReferenced_nonNull_native);
        a3 = v81;
        v59 = sub_1002AA398(v14);
        if ((v20 & 1) != (v60 & 1))
          goto LABEL_54;
        v19 = v59;
        isUniquelyReferenced_nonNull_native = (uint64_t)v81;
        if ((v20 & 1) != 0)
        {
LABEL_16:
          v47 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v19);
          v48 = *v47;
          *v47 = (uint64_t)v54;
          v47[1] = a4;
          swift_bridgeObjectRelease(v48);
          goto LABEL_17;
        }
      }
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v19 >> 6) + 64) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v19) = v14;
      v61 = (_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v19);
      *v61 = v54;
      v61[1] = a4;
      v62 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
      v63 = __OFADD__(v62, 1);
      v64 = v62 + 1;
      if (v63)
        goto LABEL_37;
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v64;
      swift_retain();
LABEL_17:
      a1 = (_QWORD *)((char *)a1 + 1);
      v49 = *(_QWORD *)(a6 + 88);
      *(_QWORD *)(a6 + 88) = isUniquelyReferenced_nonNull_native;
      swift_release();
      swift_bridgeObjectRelease(v49);
      swift_endAccess(v82);
      swift_release();
      v29 = (uint64_t)v79;
      if (v77 == a1)
        goto LABEL_51;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    v65 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  while (!v65);
  if (v65 >= 1)
  {
    v66 = (uint64_t *)(v20 + 32);
    do
    {
      v79 = (_QWORD *)v65;
      v67 = *v66;
      v77 = v66 + 1;
      swift_weakAssign(v67 + 56, 0);
      swift_beginAccess(v67 + 64, v80, 1, 0);
      v68 = *(_QWORD *)(v67 + 64);
      *(_QWORD *)(v67 + 64) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v68);
      v66 = v77;
      v65 = (uint64_t)v79 - 1;
    }
    while (v79 != (_QWORD *)1);
    goto LABEL_2;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  v71 = sub_10002A750(&qword_1006463D0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v71);
  __break(1u);
}

uint64_t sub_100312FAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD *);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t result;
  unint64_t v36;
  char *v37;
  void (*v38)(_BYTE *, _QWORD);
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  char v53[24];
  _BYTE v54[32];
  char v55[24];

  v48[1] = a6;
  v50 = a1;
  v9 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v9);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v49 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v51 = (char *)v48 - v16;
  v17 = sub_10002A750((uint64_t *)&unk_100640E10);
  inited = swift_initStackObject(v17, v55);
  *(_QWORD *)(inited + 16) = sub_1000719F4((unint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
    if (result)
    {
      if (result < 1)
      {
LABEL_22:
        __break(1u);
        return result;
      }
      v45 = &_swiftEmptyArrayStorage[4];
      do
      {
        v52 = result;
        v46 = *v45++;
        swift_weakAssign(v46 + 56, 0);
        swift_beginAccess(v46 + 64, v53, 1, 0);
        v47 = *(_QWORD *)(v46 + 64);
        *(_QWORD *)(v46 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v47);
        result = v52 - 1;
      }
      while (v52 != 1);
    }
  }
  v19 = sub_10006FA80(a3, a4, inited);
  swift_setDeallocating(inited);
  swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
  v20 = sub_10019D874;
  v52 = v19;
  v21 = sub_100313414(v19, a5, (void (*)(uint64_t, _QWORD *))sub_10019D874, (void (*)(uint64_t, uint64_t, uint64_t))sub_100438E68, (uint64_t (*)(_QWORD *))sub_10006FCF8);
  v23 = v22;
  v24 = sub_10006B64C();
  v26 = v25;
  v28 = (_QWORD *)v27;
  sub_100309FFC(a4, v24, v27, v29 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v11);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v36 = v13;
    v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v51, v11, v12);
    v38 = (void (*)(_BYTE *, _QWORD))IndexPath.row.modify(v54);
    if (__OFADD__(*v39, v23))
    {
      __break(1u);
    }
    else
    {
      *v39 += v23;
      v38(v54, 0);
      v11 = v49;
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 16))(v49, v37, v12);
      v36 = IndexPath.section.getter(v40);
      v41 = swift_bridgeObjectRetain(v21);
      v20 = (uint64_t (*)(uint64_t, _QWORD *))IndexPath.row.getter(v41);
      v28 = v50;
      v23 = (_QWORD *)*v50;
      result = swift_isUniquelyReferenced_nonNull_native(*v50);
      if ((result & 1) != 0)
      {
        if ((v36 & 0x8000000000000000) == 0)
          goto LABEL_11;
        goto LABEL_20;
      }
    }
    result = (uint64_t)sub_1002B37D4(v23);
    v23 = (_QWORD *)result;
    if ((v36 & 0x8000000000000000) == 0)
    {
LABEL_11:
      if (v36 < v23[2])
      {
        v42 = sub_100438AA0((uint64_t)v20, (uint64_t)v20, v21);
        *v28 = v23;
        v43 = IndexPath.section.getter(v42);
        sub_10006A734(v21, v43);
        v44 = *(void (**)(char *, uint64_t))(v13 + 8);
        v44(v11, v12);
        sub_100308358(v21, 0, 0, 1);
        swift_release(v52);
        v44(v37, v12);
        return swift_bridgeObjectRelease(v21);
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease(v21);
  sub_1000073A0((uint64_t)v11, &qword_100646950);
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v30 = type metadata accessor for Logger(0);
  v31 = sub_100012DC4(v30, (uint64_t)qword_100645EC0);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Can't find indexPath to insert currentItem into", v34, 2u);
    swift_slowDealloc(v34, -1, -1);
  }

  return swift_release(v52);
}

uint64_t sub_100313414(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD *), void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(_QWORD *))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];

  v9 = v5;
  if (*(_BYTE *)(v5 + 72) != 2)
  {
    if (qword_10063D408 != -1)
      swift_once(&qword_10063D408, sub_10019D650);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100012DC4(v12, (uint64_t)qword_10064A340);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Insert requires expanded state", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
  Strong = swift_weakLoadStrong(a1 + 56);
  if (Strong)
  {
    v18 = Strong;
    swift_release(Strong);
    if (v18 == v9)
      goto LABEL_13;
  }
  if (qword_10063D408 != -1)
    goto LABEL_30;
  while (1)
  {
    v19 = type metadata accessor for Logger(0);
    v20 = sub_100012DC4(v19, (uint64_t)qword_10064A340);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Subtree parent is not set correctly before calling insert.", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

LABEL_13:
    a3 = (void (*)(uint64_t, _QWORD *))sub_100317B84(a2, a3);
    swift_beginAccess(v9 + 64, v38, 33, 0);
    v24 = *(_QWORD *)(v9 + 64);
    if ((unint64_t)v24 >> 62)
    {
      if (v24 < 0)
        v34 = *(_QWORD *)(v9 + 64);
      else
        v34 = v24 & 0xFFFFFFFFFFFFFF8;
      swift_retain(a1);
      swift_bridgeObjectRetain(v24);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v24);
      if (v35 < a2)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(a1);
      if (v25 < a2)
        goto LABEL_28;
    }
    if ((a2 & 0x8000000000000000) == 0)
      break;
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once(&qword_10063D408, sub_10019D650);
  }
  a4(a2, a2, a1);
  swift_endAccess(v38);
  v38[0] = _swiftEmptyArrayStorage;
  result = sub_100317AC8(v38, a5);
  if ((*(_BYTE *)(v9 + 48) & 1) != 0)
  {
LABEL_20:
    v31 = swift_weakLoadStrong(v9 + 56);
    if (v31)
    {
      v32 = v31;
      do
      {
        *(_QWORD *)(v32 + 40) = 0;
        *(_BYTE *)(v32 + 48) = 1;
        v33 = swift_weakLoadStrong(v32 + 56);
        swift_release(v32);
        v32 = v33;
      }
      while (v33);
    }
    return v38[0];
  }
  v27 = *(_QWORD *)(v9 + 40);
  v28 = v38[0];
  if (v38[0] >> 62)
  {
    if (v38[0] < 0)
      v36 = v38[0];
    else
      v36 = v38[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38[0]);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    result = swift_bridgeObjectRelease(v28);
    v30 = v27 + v37;
    if (__OFADD__(v27, v37))
      goto LABEL_36;
LABEL_19:
    *(_QWORD *)(v9 + 40) = v30;
    *(_BYTE *)(v9 + 48) = 0;
    goto LABEL_20;
  }
  v29 = *(_QWORD *)((v38[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v30 = v27 + v29;
  if (!__OFADD__(v27, v29))
    goto LABEL_19;
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100313754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), void (*a10)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  __int128 v29;
  uint64_t v30;
  char v31;

  *(_QWORD *)&v29 = a9();
  *((_QWORD *)&v29 + 1) = v18;
  v30 = v19;
  v31 = v20 & 1;
  v21 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a10(&v29, a3, a4, a5, a6, a7, a8, a1);
  v22 = v30;
  v23 = v31;
  v24 = a2 + qword_100645F30;
  v25 = *(_QWORD *)(a2 + qword_100645F30);
  v26 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v27 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v24 = v29;
  *(_QWORD *)(v24 + 16) = v22;
  *(_BYTE *)(v24 + 24) = v23;
  result = sub_1000072F0(v25, v26, v27);
  *(_BYTE *)(a2 + v21) = 0;
  return result;
}

uint64_t sub_100313838(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  BOOL v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v5 = sub_100313AE8(a3, a4, a5, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)sub_1002FE2F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10043860C, (uint64_t (*)(_QWORD *))sub_1000778C0);
  v7 = v6;
  v9 = v8;
  result = IndexPath.row.getter(v5);
  v11 = __OFADD__(result, v5);
  v12 = result + v5;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = __OFADD__(result, v7);
  v13 = result + v7;
  if (v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v13 < v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = IndexPath.row.getter(result);
  v11 = __OFADD__(result, v9);
  v14 = result + v9;
  if (v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = IndexPath.section.getter(result);
  result = IndexPath.section.getter(v15);
  if (v15 != result || v12 >= v14)
    goto LABEL_9;
  v16 = v13 - v12;
  if (__OFSUB__(v13, v12))
    goto LABEL_14;
  v11 = __OFSUB__(v14, v16);
  v14 -= v16;
  if (!v11)
  {
LABEL_9:
    v17 = IndexPath.section.getter(result);
    v18 = IndexPath.section.getter(v17);
    sub_100309500(v12, v13, v17, v18, v14);
    v20 = v19;
    sub_100307F24(v19, v21, v22, v23, 2, 0, 1);
    return swift_unknownObjectRelease(v20);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100313990(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  BOOL v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v5 = sub_100313AE8(a3, a4, a5, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)sub_1002FE4C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100438E68, (uint64_t (*)(_QWORD *))sub_10006FCF8);
  v7 = v6;
  v9 = v8;
  result = IndexPath.row.getter(v5);
  v11 = __OFADD__(result, v5);
  v12 = result + v5;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = __OFADD__(result, v7);
  v13 = result + v7;
  if (v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v13 < v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = IndexPath.row.getter(result);
  v11 = __OFADD__(result, v9);
  v14 = result + v9;
  if (v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = IndexPath.section.getter(result);
  result = IndexPath.section.getter(v15);
  if (v15 != result || v12 >= v14)
    goto LABEL_9;
  v16 = v13 - v12;
  if (__OFSUB__(v13, v12))
    goto LABEL_14;
  v11 = __OFSUB__(v14, v16);
  v14 -= v16;
  if (!v11)
  {
LABEL_9:
    v17 = IndexPath.section.getter(result);
    v18 = IndexPath.section.getter(v17);
    sub_1003097C4(v12, v13, v17, v18, v14);
    v20 = v19;
    sub_10030884C(v19, v21, v22, v23, 2, 0, 1);
    return swift_unknownObjectRelease(v20);
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100313AE8(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), uint64_t (*a7)(_QWORD *))
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];

  v11 = v7;
  if (*(_BYTE *)(v7 + 72) == 2 && *(_BYTE *)(a2 + 72) == 2)
    goto LABEL_7;
  if (qword_10063D408 != -1)
    goto LABEL_20;
  while (1)
  {
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100012DC4(v15, (uint64_t)qword_10064A340);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Move requires expanded state", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

LABEL_7:
    if (a2 != v11 || (uint64_t)a1 >= a3)
    {
      result = a3;
      goto LABEL_12;
    }
    result = a3 + 1;
    if (__OFADD__(a3, 1))
      break;
LABEL_12:
    sub_100317B84(result, a4);
    swift_beginAccess(v11 + 64, v26, 32, 0);
    v21 = *(_QWORD *)(v11 + 64);
    if ((v21 & 0xC000000000000001) != 0)
    {
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v21);
      goto LABEL_16;
    }
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v22 = *(_QWORD *)(v21 + 8 * a1 + 32);
      swift_retain(v22);
LABEL_16:
      swift_endAccess(v26);
      v23 = sub_10030FB7C(a1, a4, a5);
      swift_weakAssign(v22 + 56, a2);
      v24 = sub_100313414(v22, a3, a4, a6, a7);
      swift_release(v22);
      swift_bridgeObjectRelease(v24);
      return v23;
    }
    __break(1u);
LABEL_20:
    swift_once(&qword_10063D408, sub_10019D650);
  }
  __break(1u);
  return result;
}

void sub_100313D0C(uint64_t a1, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  void *Strong;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  uint64_t v86;
  void *v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  BOOL v104;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  os_log_type_t v109;
  BOOL v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  _BOOL4 v116;
  uint64_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  BOOL v123;
  uint64_t v124;
  uint8_t *v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  uint8_t *v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  BOOL v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  int v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  char v171[24];
  char v172[24];
  char v173[32];

  v4 = v3;
  v170 = a3;
  v169 = a2;
  v6 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v6);
  v163 = (uint64_t)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v164 = (char *)&v159 - v9;
  v10 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v10);
  v166 = (uint64_t)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v167 = *(_QWORD *)(v12 - 8);
  v168 = v12;
  __chkstk_darwin(v12);
  v165 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10002A750((uint64_t *)&unk_100640EB0);
  __chkstk_darwin(v14);
  v16 = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v159 - v18;
  v20 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v159 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v159 - v28;
  sub_10000735C(a1, (uint64_t)v19, (uint64_t *)&unk_100640EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    v161 = v26;
    sub_10001F580((uint64_t)v19, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    v40 = sub_10006B3DC();
    v42 = v41;
    v44 = v43;
    v45 = sub_100073228((uint64_t)v29, v41);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v40);
    if (!v45)
    {
      v64 = (uint64_t)v29;
LABEL_58:
      sub_10001F544(v64, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
      return;
    }
    v162 = v29;
    v46 = sub_10006B3DC();
    v48 = v47;
    v50 = v49;
    v51 = sub_1000FA9FC(v45, v46, v49);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v46);
    v160 = v51;
    if ((v51 & 1) != 0)
    {
      v52 = (uint64_t)v4;
      v53 = sub_10006B3DC();
      v55 = v54;
      v57 = v56;
      if (*(_QWORD *)(v56 + 16))
      {
        v58 = (uint64_t)v16;
        v59 = sub_1002AA398(v45);
        if ((v60 & 1) != 0)
        {
          v159 = v45;
          v61 = *(_QWORD *)(*(_QWORD *)(v57 + 56) + 8 * v59);
          swift_bridgeObjectRelease(v57);
          swift_bridgeObjectRelease(v55);
          v62 = swift_bridgeObjectRelease(v53);
          v63 = 1;
LABEL_26:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(v58, v63, 1, v20, v62);
          v77 = qword_100645F10;
          v78 = *(_QWORD *)(v52 + qword_100645F10);
          if (v78)
          {
            v79 = v52;
            v80 = *(uint64_t (**)(uint64_t))(v78 + 16);
            v81 = swift_retain();
            if ((v80(v81) & 1) != 0)
            {
              v82 = v52 + qword_100645EF8;
              Strong = (void *)swift_unknownObjectUnownedLoadStrong(v52 + qword_100645EF8);
              (*(void (**)(void *, uint64_t, uint64_t))(v78 + 48))(Strong, v61, v58);
              swift_release();

              sub_10001F580((uint64_t)v23, (uint64_t)v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v84 = *(_QWORD *)(v52 + v77);
              if (v84)
              {
                v85 = *(uint64_t (**)(uint64_t))(v84 + 16);
                v86 = swift_retain();
                if ((v85(v86) & 1) != 0)
                {
                  v87 = (void *)swift_unknownObjectUnownedLoadStrong(v82);
                  v88 = (*(uint64_t (**)(void *, char *))(v84 + 64))(v87, v161);
                  swift_release();

                  if ((v88 & 1) != 0)
                  {
                    v89 = *(_BYTE *)(v159 + 72);
                    v91 = v167;
                    v90 = v168;
                    if (!v89)
                    {
                      v92 = (uint64_t *)(v52 + qword_100645F48);
                      swift_beginAccess(v52 + qword_100645F48, v171, 0, 0);
                      v93 = *v92;
                      v94 = v92[1];
                      swift_bridgeObjectRetain(*v92);
                      swift_bridgeObjectRetain(v94);
                      v95 = (uint64_t)v164;
                      TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v96);
                      LOBYTE(v92) = sub_10037B2B4(v95, v93);
                      v97 = v163;
                      sub_10002B1E8(v95, v163, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                      if ((v92 & 1) != 0)
                      {
                        v98 = (sub_10037B2B4(v97, v94) & 1) == 0;
                        v99 = v97;
                        if (v98)
                          v89 = 1;
                        else
                          v89 = 2;
                      }
                      else
                      {
                        v99 = v97;
                        v89 = 2;
                      }
                      sub_10001F544(v99, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                      swift_bridgeObjectRelease(v94);
                      swift_bridgeObjectRelease(v93);
                      sub_10001F544(v95, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                    }
                  }
                  else
                  {
                    v89 = 0;
                    v91 = v167;
                    v90 = v168;
                  }
                  v137 = v58;
                  v138 = sub_10006B3DC();
                  v140 = v139;
                  v142 = v141;
                  v144 = v166;
                  v145 = v159;
                  sub_100309FFC(v159, v138, v141, v143 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, v166);
                  swift_bridgeObjectRelease(v142);
                  swift_bridgeObjectRelease(v140);
                  v146 = v138;
                  v147 = v144;
                  v148 = swift_bridgeObjectRelease(v146);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v91 + 48))(v144, 1, v90, v148) != 1)
                  {
                    v155 = (uint64_t)v165;
                    v156 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 32))(v165, v147, v90);
                    __chkstk_darwin(v156);
                    *(&v159 - 6) = v79;
                    *(&v159 - 5) = v145;
                    v157 = (uint64_t)v161;
                    *(&v159 - 4) = (uint64_t)v161;
                    *((_BYTE *)&v159 - 24) = v89;
                    *((_BYTE *)&v159 - 23) = v160 & 1;
                    *((_BYTE *)&v159 - 22) = v169 & 1;
                    *(&v159 - 2) = v170;
                    *(&v159 - 1) = v155;
                    sub_10030A8DC((void (*)(uint64_t))sub_10031B570, (uint64_t)(&v159 - 8), 0, 0, 0, 0);
                    sub_1000073A0(v137, (uint64_t *)&unk_100640EB0);
                    sub_10001F544((uint64_t)v162, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
                    v158 = swift_release();
                    (*(void (**)(uint64_t, uint64_t, __n128))(v91 + 8))(v155, v90, v158);
                    v64 = v157;
                    goto LABEL_58;
                  }
                  sub_1000073A0(v144, &qword_100646950);
                  if (qword_10063D3C8 != -1)
                    swift_once(&qword_10063D3C8, sub_1000E35C8);
                  v149 = type metadata accessor for Logger(0);
                  v150 = sub_100012DC4(v149, (uint64_t)qword_100645EC0);
                  v151 = Logger.logObject.getter(v150);
                  v152 = static os_log_type_t.fault.getter(v151);
                  v153 = os_log_type_enabled(v151, v152);
                  v132 = (uint64_t)v162;
                  if (v153)
                  {
                    v154 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v154 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v151, v152, "Unable to find childrenStartIndexPath", v154, 2u);
                    swift_slowDealloc(v154, -1, -1);
                  }
                  swift_release();

                  v136 = v137;
                  goto LABEL_65;
                }
                swift_release();
              }
              if (qword_10063D3C8 != -1)
                swift_once(&qword_10063D3C8, sub_1000E35C8);
              v127 = type metadata accessor for Logger(0);
              v128 = sub_100012DC4(v127, (uint64_t)qword_100645EC0);
              v129 = Logger.logObject.getter(v128);
              v130 = static os_log_type_t.fault.getter(v129);
              v131 = os_log_type_enabled(v129, v130);
              v132 = (uint64_t)v162;
              if (v131)
              {
                v133 = v58;
                v134 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v134 = 0;
                _os_log_impl((void *)&_mh_execute_header, v129, v130, "Unable to get new item.", v134, 2u);
                v135 = v134;
                v58 = v133;
                swift_slowDealloc(v135, -1, -1);
              }
              swift_release();

              v136 = v58;
LABEL_65:
              sub_1000073A0(v136, (uint64_t *)&unk_100640EB0);
              sub_10001F544(v132, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
              v64 = (uint64_t)v161;
              goto LABEL_58;
            }
            swift_release();
          }
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v119 = type metadata accessor for Logger(0);
          v120 = sub_100012DC4(v119, (uint64_t)qword_100645EC0);
          v121 = Logger.logObject.getter(v120);
          v122 = static os_log_type_t.fault.getter(v121);
          v123 = os_log_type_enabled(v121, v122);
          v105 = (uint64_t)v162;
          if (v123)
          {
            v124 = v58;
            v125 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v125 = 0;
            _os_log_impl((void *)&_mh_execute_header, v121, v122, "Unable to get new item.", v125, 2u);
            v126 = v125;
            v58 = v124;
            swift_slowDealloc(v126, -1, -1);
          }
          swift_release();

          sub_1000073A0(v58, (uint64_t *)&unk_100640EB0);
          goto LABEL_57;
        }
      }
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease(v55);
      swift_bridgeObjectRelease(v53);
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v100 = type metadata accessor for Logger(0);
      v101 = sub_100012DC4(v100, (uint64_t)qword_100645EC0);
      v102 = Logger.logObject.getter(v101);
      v103 = static os_log_type_t.fault.getter(v102);
      v104 = os_log_type_enabled(v102, v103);
      v105 = (uint64_t)v162;
      if (v104)
      {
        v106 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v106 = 0;
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "Unable to find section index.", v106, 2u);
        swift_slowDealloc(v106, -1, -1);
      }
    }
    else
    {
      v52 = (uint64_t)v4;
      v70 = swift_weakLoadStrong(v45 + 56);
      v58 = (uint64_t)v16;
      v71 = v45;
      if (v70)
      {
        v72 = (_QWORD *)v70;
        swift_beginAccess(v70 + 64, v173, 0, 0);
        v73 = v72[8];
        swift_bridgeObjectRetain(v73);
        v61 = sub_10031589C(v45, v73);
        v75 = v74;
        swift_bridgeObjectRelease(v73);
        if ((v75 & 1) != 0)
        {
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v112 = type metadata accessor for Logger(0);
          v113 = sub_100012DC4(v112, (uint64_t)qword_100645EC0);
          v114 = Logger.logObject.getter(v113);
          v115 = static os_log_type_t.fault.getter(v114);
          v116 = os_log_type_enabled(v114, v115);
          v117 = (uint64_t)v162;
          if (v116)
          {
            v118 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v118 = 0;
            _os_log_impl((void *)&_mh_execute_header, v114, v115, "Unable to find index in parent.", v118, 2u);
            swift_slowDealloc(v118, -1, -1);
          }
          swift_release();
          swift_release();

          v64 = v117;
          goto LABEL_58;
        }
        v159 = v71;
        v76 = (uint64_t)v72 + *(_QWORD *)(*v72 + 144);
        swift_beginAccess(v76, v172, 0, 0);
        sub_10002B1E8(v76, v58, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v62 = swift_release();
        v63 = 0;
        goto LABEL_26;
      }
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v107 = type metadata accessor for Logger(0);
      v108 = sub_100012DC4(v107, (uint64_t)qword_100645EC0);
      v102 = Logger.logObject.getter(v108);
      v109 = static os_log_type_t.fault.getter(v102);
      v110 = os_log_type_enabled(v102, v109);
      v105 = (uint64_t)v162;
      if (v110)
      {
        v111 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v111 = 0;
        _os_log_impl((void *)&_mh_execute_header, v102, v109, "Unable to find parent node.", v111, 2u);
        swift_slowDealloc(v111, -1, -1);
      }
    }
    swift_release();

LABEL_57:
    v64 = v105;
    goto LABEL_58;
  }
  sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_100640EB0);
  v30 = *(_QWORD *)&v4[qword_100645F10];
  if (v30)
  {
    v31 = v4;
    v32 = *(uint64_t (**)(uint64_t))(v30 + 16);
    v33 = swift_retain();
    if ((v32(v33) & 1) != 0)
    {
      if ((v169 & 1) == 0)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v34 = type metadata accessor for Logger(0);
        v35 = sub_100012DC4(v34, (uint64_t)qword_100645EC0);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Reloading the root(nil) only is not supported, treating reloadChildren as true", v38, 2u);
          swift_slowDealloc(v38, -1, -1);
        }

      }
      swift_retain();
      v39 = v31;
      sub_100101070(0, 0, 0, 0, (uint64_t)v39, (uint64_t)v39, v30, v170);

      swift_release_n(v30, 2);
      return;
    }
    swift_release();
  }
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v65 = type metadata accessor for Logger(0);
  v66 = sub_100012DC4(v65, (uint64_t)qword_100645EC0);
  v67 = Logger.logObject.getter(v66);
  v68 = static os_log_type_t.fault.getter(v67);
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v69 = 0;
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "dataSource is nil", v69, 2u);
    swift_slowDealloc(v69, -1, -1);
  }

}

void sub_100314AE0(uint64_t a1, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  char *v82;
  uint64_t Strong;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t v88;
  void *v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  BOOL v106;
  uint64_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  BOOL v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  _BOOL4 v119;
  uint64_t v120;
  uint8_t *v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  BOOL v126;
  uint64_t v127;
  uint8_t *v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  uint8_t *v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  _BYTE *v146;
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  _BOOL4 v153;
  uint8_t *v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE v158[12];
  int v159;
  _BYTE *v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  char v170[24];
  char v171[24];
  char v172[32];

  v4 = v3;
  v169 = a3;
  v168 = a2;
  v6 = sub_10002A750(&qword_100646950);
  __chkstk_darwin(v6);
  v165 = &v158[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for IndexPath(0);
  v166 = *(_QWORD *)(v8 - 8);
  v167 = v8;
  __chkstk_darwin(v8);
  v164 = &v158[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v11 = __chkstk_darwin(v10);
  v162 = &v158[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v163 = &v158[-v13];
  v14 = sub_10002A750((uint64_t *)&unk_100640E00);
  v15 = __chkstk_darwin(v14);
  v17 = &v158[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v158[-v18];
  v20 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = &v158[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __chkstk_darwin(v22);
  v27 = &v158[-v26];
  __chkstk_darwin(v25);
  v29 = &v158[-v28];
  sub_10000735C(a1, (uint64_t)v19, (uint64_t *)&unk_100640E00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    v160 = v27;
    sub_10001F580((uint64_t)v19, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
    v40 = sub_10006B64C();
    v42 = v41;
    v44 = v43;
    v45 = sub_100073338((uint64_t)v29, v41);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v40);
    if (!v45)
    {
      v66 = (uint64_t)v29;
LABEL_58:
      sub_10001F544(v66, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
      return;
    }
    v161 = v29;
    v46 = sub_10006B64C();
    v48 = v47;
    v50 = v49;
    v51 = sub_1000FA9FC(v45, v46, v49);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v46);
    v52 = v45;
    v159 = v51;
    if ((v51 & 1) != 0)
    {
      v53 = v45;
      v54 = v4;
      v55 = sub_10006B64C();
      v57 = v56;
      v59 = v58;
      if (*(_QWORD *)(v58 + 16))
      {
        v60 = (uint64_t)v17;
        v61 = sub_1002AA398(v53);
        if ((v62 & 1) != 0)
        {
          v63 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v61);
          swift_bridgeObjectRelease(v59);
          swift_bridgeObjectRelease(v57);
          swift_bridgeObjectRelease(v55);
          v64 = 1;
          v52 = v53;
          v65 = v63;
LABEL_26:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v60, v64, 1, v20);
          v77 = qword_100645F10;
          v78 = *(_QWORD *)&v54[qword_100645F10];
          if (v78)
          {
            v79 = v54;
            v80 = *(uint64_t (**)(uint64_t))(v78 + 16);
            v81 = swift_retain(*(_QWORD *)&v54[qword_100645F10]);
            if ((v80(v81) & 1) != 0)
            {
              v82 = &v54[qword_100645EF8];
              Strong = swift_unknownObjectUnownedLoadStrong(&v54[qword_100645EF8]);
              v84 = v52;
              v85 = (void *)Strong;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(Strong, v65, v60);
              swift_release(v78);

              sub_10001F580((uint64_t)v24, (uint64_t)v160, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              v86 = *(_QWORD *)&v79[v77];
              if (v86)
              {
                v87 = *(uint64_t (**)(uint64_t))(v86 + 16);
                v88 = swift_retain(*(_QWORD *)&v79[v77]);
                if ((v87(v88) & 1) != 0)
                {
                  v89 = (void *)swift_unknownObjectUnownedLoadStrong(v82);
                  v90 = (*(uint64_t (**)(void *, _BYTE *))(v86 + 64))(v89, v160);
                  swift_release(v86);

                  if ((v90 & 1) != 0)
                  {
                    v91 = *(_BYTE *)(v84 + 72);
                    v93 = v166;
                    v92 = v167;
                    if (!v91)
                    {
                      v94 = (uint64_t *)&v79[qword_100645F48];
                      swift_beginAccess(&v79[qword_100645F48], v170, 0, 0);
                      v95 = *v94;
                      v96 = v94[1];
                      swift_bridgeObjectRetain(*v94);
                      v97 = swift_bridgeObjectRetain(v96);
                      v98 = (uint64_t)v163;
                      TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v97);
                      LOBYTE(v94) = sub_10037B6FC(v98, v95);
                      v99 = v162;
                      sub_10002B1E8(v98, (uint64_t)v162, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                      if ((v94 & 1) != 0)
                      {
                        v100 = (sub_10037B6FC((uint64_t)v99, v96) & 1) == 0;
                        v101 = (uint64_t)v99;
                        if (v100)
                          v91 = 1;
                        else
                          v91 = 2;
                      }
                      else
                      {
                        v101 = (uint64_t)v99;
                        v91 = 2;
                      }
                      sub_10001F544(v101, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                      swift_bridgeObjectRelease(v96);
                      swift_bridgeObjectRelease(v95);
                      sub_10001F544(v98, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                    }
                  }
                  else
                  {
                    v91 = 0;
                    v93 = v166;
                    v92 = v167;
                  }
                  v167 = v60;
                  v140 = sub_10006B64C();
                  v142 = v141;
                  v144 = v143;
                  v146 = v165;
                  sub_100309FFC(v84, v140, v143, v145 & 1, sub_1002AA398, sub_100073214, (void (*)(uint64_t, _QWORD *))sub_10019D874, (uint64_t)v165);
                  swift_bridgeObjectRelease(v144);
                  swift_bridgeObjectRelease(v142);
                  v147 = v140;
                  v148 = v146;
                  swift_bridgeObjectRelease(v147);
                  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v93 + 48))(v146, 1, v92) != 1)
                  {
                    v155 = v164;
                    v156 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v93 + 32))(v164, v148, v92);
                    __chkstk_darwin(v156);
                    *(_QWORD *)&v158[-48] = v79;
                    *(_QWORD *)&v158[-40] = v84;
                    v157 = (uint64_t)v160;
                    *(_QWORD *)&v158[-32] = v160;
                    v158[-24] = v91;
                    v158[-23] = v159 & 1;
                    v158[-22] = v168 & 1;
                    *(_QWORD *)&v158[-16] = v169;
                    *(_QWORD *)&v158[-8] = v155;
                    sub_10030B054((void (*)(uint64_t))sub_10031B3D0, (uint64_t)&v158[-64], 0, 0, 0, 0);
                    swift_release(v84);
                    sub_1000073A0(v167, (uint64_t *)&unk_100640E00);
                    sub_10001F544((uint64_t)v161, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
                    (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v155, v92);
                    v66 = v157;
                    goto LABEL_58;
                  }
                  sub_1000073A0((uint64_t)v146, &qword_100646950);
                  if (qword_10063D3C8 != -1)
                    swift_once(&qword_10063D3C8, sub_1000E35C8);
                  v149 = type metadata accessor for Logger(0);
                  v150 = sub_100012DC4(v149, (uint64_t)qword_100645EC0);
                  v151 = Logger.logObject.getter(v150);
                  v152 = static os_log_type_t.fault.getter(v151);
                  v153 = os_log_type_enabled(v151, v152);
                  v135 = (uint64_t)v161;
                  if (v153)
                  {
                    v154 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v154 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v151, v152, "Unable to find childrenStartIndexPath", v154, 2u);
                    swift_slowDealloc(v154, -1, -1);
                  }
                  swift_release(v84);

                  v139 = v167;
                  goto LABEL_65;
                }
                swift_release(v86);
              }
              if (qword_10063D3C8 != -1)
                swift_once(&qword_10063D3C8, sub_1000E35C8);
              v130 = type metadata accessor for Logger(0);
              v131 = sub_100012DC4(v130, (uint64_t)qword_100645EC0);
              v132 = Logger.logObject.getter(v131);
              v133 = static os_log_type_t.fault.getter(v132);
              v134 = os_log_type_enabled(v132, v133);
              v135 = (uint64_t)v161;
              if (v134)
              {
                v136 = v60;
                v137 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v137 = 0;
                _os_log_impl((void *)&_mh_execute_header, v132, v133, "Unable to get new item.", v137, 2u);
                v138 = v137;
                v60 = v136;
                swift_slowDealloc(v138, -1, -1);
              }
              swift_release(v84);

              v139 = v60;
LABEL_65:
              sub_1000073A0(v139, (uint64_t *)&unk_100640E00);
              sub_10001F544(v135, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
              v66 = (uint64_t)v160;
              goto LABEL_58;
            }
            swift_release(v78);
          }
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v122 = type metadata accessor for Logger(0);
          v123 = sub_100012DC4(v122, (uint64_t)qword_100645EC0);
          v124 = Logger.logObject.getter(v123);
          v125 = static os_log_type_t.fault.getter(v124);
          v126 = os_log_type_enabled(v124, v125);
          v107 = (uint64_t)v161;
          if (v126)
          {
            v127 = v60;
            v128 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v128 = 0;
            _os_log_impl((void *)&_mh_execute_header, v124, v125, "Unable to get new item.", v128, 2u);
            v129 = v128;
            v60 = v127;
            swift_slowDealloc(v129, -1, -1);
          }
          swift_release(v52);

          sub_1000073A0(v60, (uint64_t *)&unk_100640E00);
          goto LABEL_57;
        }
      }
      swift_bridgeObjectRelease(v59);
      swift_bridgeObjectRelease(v57);
      swift_bridgeObjectRelease(v55);
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v102 = type metadata accessor for Logger(0);
      v103 = sub_100012DC4(v102, (uint64_t)qword_100645EC0);
      v104 = Logger.logObject.getter(v103);
      v105 = static os_log_type_t.fault.getter(v104);
      v106 = os_log_type_enabled(v104, v105);
      v107 = (uint64_t)v161;
      if (v106)
      {
        v108 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v108 = 0;
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "Unable to find section index.", v108, 2u);
        swift_slowDealloc(v108, -1, -1);
      }

      swift_release(v53);
    }
    else
    {
      v54 = v4;
      v72 = swift_weakLoadStrong(v52 + 56);
      if (v72)
      {
        v73 = (uint64_t *)v72;
        v60 = (uint64_t)v17;
        swift_beginAccess(v72 + 64, v172, 0, 0);
        v74 = sub_10031589C(v52, v73[8]);
        if ((v75 & 1) != 0)
        {
          if (qword_10063D3C8 != -1)
            swift_once(&qword_10063D3C8, sub_1000E35C8);
          v115 = type metadata accessor for Logger(0);
          v116 = sub_100012DC4(v115, (uint64_t)qword_100645EC0);
          v117 = Logger.logObject.getter(v116);
          v118 = static os_log_type_t.fault.getter(v117);
          v119 = os_log_type_enabled(v117, v118);
          v120 = (uint64_t)v161;
          if (v119)
          {
            v121 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v121 = 0;
            _os_log_impl((void *)&_mh_execute_header, v117, v118, "Unable to find index in parent.", v121, 2u);
            swift_slowDealloc(v121, -1, -1);
          }
          swift_release(v52);
          swift_release(v73);

          v66 = v120;
          goto LABEL_58;
        }
        v65 = v74;
        v76 = (uint64_t)v73 + *(_QWORD *)(*v73 + 144);
        swift_beginAccess(v76, v171, 0, 0);
        sub_10002B1E8(v76, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release(v73);
        v64 = 0;
        goto LABEL_26;
      }
      if (qword_10063D3C8 != -1)
        swift_once(&qword_10063D3C8, sub_1000E35C8);
      v109 = type metadata accessor for Logger(0);
      v110 = sub_100012DC4(v109, (uint64_t)qword_100645EC0);
      v111 = Logger.logObject.getter(v110);
      v112 = static os_log_type_t.fault.getter(v111);
      v113 = os_log_type_enabled(v111, v112);
      v107 = (uint64_t)v161;
      if (v113)
      {
        v114 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v114 = 0;
        _os_log_impl((void *)&_mh_execute_header, v111, v112, "Unable to find parent node.", v114, 2u);
        swift_slowDealloc(v114, -1, -1);
      }
      swift_release(v52);

    }
LABEL_57:
    v66 = v107;
    goto LABEL_58;
  }
  sub_1000073A0((uint64_t)v19, (uint64_t *)&unk_100640E00);
  v30 = *(_QWORD *)&v4[qword_100645F10];
  if (v30)
  {
    v31 = v4;
    v32 = *(uint64_t (**)(uint64_t))(v30 + 16);
    v33 = swift_retain(v30);
    if ((v32(v33) & 1) != 0)
    {
      if ((v168 & 1) == 0)
      {
        if (qword_10063D3C8 != -1)
          swift_once(&qword_10063D3C8, sub_1000E35C8);
        v34 = type metadata accessor for Logger(0);
        v35 = sub_100012DC4(v34, (uint64_t)qword_100645EC0);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Reloading the root(nil) only is not supported, treating reloadChildren as true", v38, 2u);
          swift_slowDealloc(v38, -1, -1);
        }

      }
      swift_retain(v30);
      v39 = v31;
      sub_1000FDF30(0, 0, 0, 0, (uint64_t)v39, (uint64_t)v39, v30, v169);

      swift_release_n(v30, 2);
      return;
    }
    swift_release(v30);
  }
  if (qword_10063D3C8 != -1)
    swift_once(&qword_10063D3C8, sub_1000E35C8);
  v67 = type metadata accessor for Logger(0);
  v68 = sub_100012DC4(v67, (uint64_t)qword_100645EC0);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.fault.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v71 = 0;
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "dataSource is nil", v71, 2u);
    swift_slowDealloc(v71, -1, -1);
  }

}

uint64_t sub_10031589C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = result;
  if (!((unint64_t)a2 >> 62))
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
  if (a2 < 0)
    v7 = a2;
  else
    v7 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v4 = _CocoaArrayWrapper.endIndex.getter(v7);
  result = swift_bridgeObjectRelease(a2);
  if (!v4)
    return 0;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    v9 = *(_QWORD *)(v8 + 16);
    v6 = *(_QWORD *)(v3 + 16);
    swift_unknownObjectRelease(v8);
    if (v9 == v6)
      return 0;
    v5 = a2 & 0xFFFFFFFFFFFFFF8;
LABEL_14:
    v10 = 0;
    result = 1;
    do
    {
      if (v4 - 1 == v10)
        return 0;
      v13 = v10 + 1;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10 + 1, a2);
        v12 = *(_QWORD *)(v11 + 16);
        swift_unknownObjectRelease(v11);
        if (v12 == v6)
          return v10 + 1;
      }
      else
      {
        if (v13 >= *(_QWORD *)(v5 + 16))
          goto LABEL_25;
        if (*(_QWORD *)(*(_QWORD *)(a2 + 8 * v10 + 40) + 16) == v6)
          return result;
      }
      ++v10;
      result = v13 + 1;
    }
    while (!__OFADD__(v13, 1));
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16) == v6)
      return 0;
    goto LABEL_14;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100315A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v11[56];
  _BYTE v12[56];

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  sub_1000AE578(a2 + 32, (uint64_t)v12);
  sub_1000AD9D0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
  v5 = static TTRListColors.Color.__derived_enum_equals(_:_:)(v12, a1);
  sub_1000AD9D0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
  if ((v5 & 1) != 0)
    return 0;
  v6 = 0;
  v7 = v2 - 1;
  v8 = a2 + 88;
  while (v7 != v6)
  {
    sub_1000AE578(v8, (uint64_t)v11);
    sub_1000AD9D0((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B764);
    v9 = static TTRListColors.Color.__derived_enum_equals(_:_:)(v11, a1);
    sub_1000AD9D0((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10002B328);
    v8 += 56;
    ++v6;
    if ((v9 & 1) != 0)
      return v6;
  }
  return 0;
}

uint64_t sub_100315B28(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3)
      return result;
  }
  return 0;
}

uint64_t sub_100315B8C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void *v13;
  unsigned int v14;
  id v15;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v6 = a2 & 1;
  v7 = *(void **)(a3 + 32);
  v8 = *(unsigned __int8 *)(a3 + 40);
  v9 = v7;
  LOBYTE(v7) = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v7, v8, a1, v6);

  if ((v7 & 1) != 0)
    return 0;
  v10 = 0;
  v11 = v3 - 1;
  v12 = (unsigned __int8 *)(a3 + 56);
  while (v11 != v10)
  {
    v13 = (void *)*((_QWORD *)v12 - 1);
    v14 = *v12;
    v12 += 16;
    v15 = v13;
    LOBYTE(v13) = static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)(v13, v14, a1, v6);

    ++v10;
    if ((v13 & 1) != 0)
      return v10;
  }
  return 0;
}

uint64_t sub_100315C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), void (*a11)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  __int128 v30;
  uint64_t v31;
  char v32;

  *(_QWORD *)&v30 = a10();
  *((_QWORD *)&v30 + 1) = v18;
  v31 = v19;
  v32 = v20 & 1;
  v21 = qword_100645F38;
  *(_BYTE *)(a2 + qword_100645F38) = 1;
  a11(&v30, a3, a4, a5, a6, a7, a1, a8, a2, a9);
  v22 = v31;
  v23 = v32;
  v24 = a2 + qword_100645F30;
  v25 = *(_QWORD *)(a2 + qword_100645F30);
  v26 = *(_QWORD *)(a2 + qword_100645F30 + 8);
  v27 = *(_QWORD *)(a2 + qword_100645F30 + 16);
  *(_OWORD *)v24 = v30;
  *(_QWORD *)(v24 + 16) = v22;
  *(_BYTE *)(v24 + 24) = v23;
  result = sub_1000072F0(v25, v26, v27);
  *(_BYTE *)(a2 + v21) = 0;
  return result;
}

void sub_100315D68(uint64_t *a1, _BYTE *a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, Swift::Int a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t Strong;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _BOOL8 v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  char *v117;
  uint64_t *v118;
  int64_t v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  Swift::Int v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131[3];
  _BYTE v132[24];
  _BYTE v133[24];
  uint64_t v134[3];
  __int128 v135;
  _QWORD v136[2];
  char v137[8];

  v129 = a8;
  LODWORD(v124) = a6;
  LODWORD(v126) = a5;
  LODWORD(v127) = a4;
  v128 = a1;
  v125 = a9;
  v13 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v115 - v23;
  v25 = (uint64_t)&a2[*(_QWORD *)(*(_QWORD *)a2 + 144)];
  swift_beginAccess(v25, v137, 0, 0);
  sub_10002B1E8(v25, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_beginAccess(v25, v136, 33, 0);
  sub_1000763D8(a3, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  v26 = swift_endAccess(v136);
  a2[72] = v127;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v26);
  LOBYTE(a3) = sub_100309A88((uint64_t)v18, (uint64_t)a2);
  v27 = sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((a3 & 1) != 0)
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v27);
    sub_10006AD10((uint64_t)v18, (uint64_t)a2);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  v28 = v124;
  if ((v126 & 1) == 0 || (v124 & 1) != 0)
  {
    sub_100307A44(0, (uint64_t)a2, 3, v129, 0);
  }
  else
  {
    swift_beginAccess(a7 + 96, v136, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a7 + 96));
    v134[0] = *(_QWORD *)(a7 + 96);
    *(_QWORD *)(a7 + 96) = 0x8000000000000000;
    sub_100097264(v129, 0, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
    v30 = *(_QWORD *)(a7 + 96);
    *(_QWORD *)(a7 + 96) = v134[0];
    swift_release();
    swift_bridgeObjectRelease(v30);
    swift_endAccess(v136);
  }
  v31 = v125;
  if (*(_BYTE *)(v125 + qword_100645F58) == 1)
  {
    swift_beginAccess(v125 + qword_100645F48, v136, 33, 0);
    sub_10030A52C(a2);
    swift_endAccess(v136);
  }
  if ((v28 & 1) == 0)
  {
    sub_10001F544((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
    return;
  }
  v32 = a2[48] == 1;
  v117 = v24;
  if (v32)
  {
    v136[0] = 0;
    sub_10019D874((uint64_t)a2, v136);
    v33 = v136[0];
    *((_QWORD *)a2 + 5) = v136[0];
    a2[48] = 0;
  }
  else
  {
    v33 = *((_QWORD *)a2 + 5);
  }
  swift_beginAccess(a2 + 64, v136, 1, 0);
  v34 = *((_QWORD *)a2 + 8);
  *((_QWORD *)a2 + 8) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v34);
  v123 = a10;
  sub_100308C80(a10, v33);
  v36 = v35;
  v122 = (_QWORD *)v37;
  v39 = v38;
  v41 = v40;
  v42 = (uint64_t *)(v31 + qword_100645F48);
  swift_beginAccess(v31 + qword_100645F48, v134, 1, 0);
  v118 = v42;
  v43 = *v42;
  v44 = v42[1];
  *(_QWORD *)&v135 = v43;
  *((_QWORD *)&v135 + 1) = v44;
  v124 = v41;
  v45 = v41 >> 1;
  v46 = __OFSUB__(v41 >> 1, v39);
  v47 = (v41 >> 1) - v39;
  v121 = v39;
  v120 = v36;
  v119 = v45;
  if (v47)
  {
    if ((v47 < 0) ^ v46 | (v47 == 0))
    {
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      v114 = sub_10002A750(&qword_1006463D0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v114);
      __break(1u);
LABEL_96:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TTRITreeViewUpdate);
      __break(1u);
      return;
    }
    v116 = a2;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v44);
    swift_unknownObjectRetain(v36);
    if ((v124 & 1) != 0)
    {
      v52 = &v122[v39];
      do
      {
        v53 = *v52++;
        v54 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 144);
        swift_beginAccess(v54, v133, 0, 0);
        sub_10002B1E8(v54, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v55 = swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v55);
        sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000F4754((uint64_t)v18, (uint64_t)v15);
        sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
        swift_release();
        --v47;
      }
      while (v47);
    }
    else
    {
      v48 = &v122[v39];
      do
      {
        v49 = *v48++;
        v50 = v49 + *(_QWORD *)(*(_QWORD *)v49 + 144);
        swift_beginAccess(v50, v133, 0, 0);
        sub_10002B1E8(v50, (uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        v51 = swift_retain();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v51);
        sub_10001F544((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000F4754((uint64_t)v18, (uint64_t)v15);
        sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006463C0);
        swift_release();
        --v47;
      }
      while (v47);
    }
    v36 = v120;
    swift_unknownObjectRelease(v120);
    a2 = v116;
    v39 = v121;
  }
  else
  {
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v44);
  }
  v56 = sub_10002A750((uint64_t *)&unk_100646400);
  v57 = swift_allocObject(v56, 24, 7);
  v58 = swift_unknownObjectRetain_n(v36, 2);
  v59 = v122;
  *(_QWORD *)(v57 + 16) = sub_10007183C(v58, (uint64_t)v122, v39, v124);
  v60 = v119 - v39;
  if (v119 != v39)
  {
    if (v119 <= v39)
      goto LABEL_94;
    swift_unknownObjectRetain(v36);
    if ((v124 & 1) != 0)
    {
      v64 = &v59[v39];
      do
      {
        v65 = *v64++;
        swift_weakAssign(v65 + 56, 0);
        swift_beginAccess(v65 + 64, v132, 1, 0);
        v66 = *(_QWORD *)(v65 + 64);
        *(_QWORD *)(v65 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v66);
        --v60;
      }
      while (v60);
    }
    else
    {
      v61 = &v59[v39];
      do
      {
        v62 = *v61++;
        swift_weakAssign(v62 + 56, 0);
        swift_beginAccess(v62 + 64, v132, 1, 0);
        v63 = *(_QWORD *)(v62 + 64);
        *(_QWORD *)(v62 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v63);
        --v60;
      }
      while (v60);
    }
    swift_unknownObjectRelease(v36);
  }
  swift_unknownObjectRelease(v36);
  v67 = _swiftEmptyArrayStorage;
  if (v127 == 2)
    v67 = sub_10006C5BC((uint64_t)a2, v57);
  v68 = *((_QWORD *)a2 + 8);
  *((_QWORD *)a2 + 8) = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
  v131[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1000778C0(v131);
  Strong = swift_weakLoadStrong(a2 + 56);
  if (Strong)
  {
    v70 = Strong;
    do
    {
      *(_QWORD *)(v70 + 40) = 0;
      *(_BYTE *)(v70 + 48) = 1;
      v71 = swift_weakLoadStrong(v70 + 56);
      swift_release();
      v70 = v71;
    }
    while (v71);
  }
  swift_bridgeObjectRelease(v67);
  v72 = v131[0];
  v74 = IndexPath.section.getter(v73);
  swift_bridgeObjectRetain(v72);
  v76 = IndexPath.row.getter(v75);
  v77 = *v128;
  if ((swift_isUniquelyReferenced_nonNull_native(*v128) & 1) == 0)
    goto LABEL_84;
  if ((v74 & 0x8000000000000000) == 0)
    goto LABEL_40;
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  do
  {
    if (v72 < 0)
      v113 = v72;
    else
      v113 = v72 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v72);
    v74 = _CocoaArrayWrapper.endIndex.getter(v113);
    if (!v74)
      goto LABEL_91;
LABEL_45:
    if (v74 < 1)
    {
      __break(1u);
      goto LABEL_93;
    }
    v76 = 0;
    v128 = (uint64_t *)(v72 & 0xC000000000000001);
    v57 = a7 + 80;
    v127 = v72;
    v126 = v74;
    while (1)
    {
      if (v128)
      {
        a2 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v72);
      }
      else
      {
        a2 = *(_BYTE **)(v72 + 8 * v76 + 32);
        swift_retain();
      }
      swift_beginAccess(a7 + 80, v131, 32, 0);
      v84 = *(_QWORD *)(a7 + 88);
      if (*(_QWORD *)(v84 + 16))
      {
        v85 = sub_1002AA398(a2);
        if ((v86 & 1) != 0)
        {
          v87 = (uint64_t *)(*(_QWORD *)(v84 + 56) + 16 * v85);
          v88 = *v87;
          v72 = v87[1];
          swift_endAccess(v131);
          swift_bridgeObjectRetain(v88);
          v77 = swift_isUniquelyReferenced_nonNull_native(v89);
          v131[0] = v88;
          v36 = sub_1002AA3B8(3u);
          v91 = *(_QWORD *)(v88 + 16);
          v92 = (v90 & 1) == 0;
          v93 = v91 + v92;
          if (__OFADD__(v91, v92))
            goto LABEL_82;
          v74 = v90;
          if (*(_QWORD *)(v88 + 24) < v93)
          {
            sub_100457F24(v93, v77);
            v94 = sub_1002AA3B8(3u);
            if ((v74 & 1) != (v95 & 1))
              goto LABEL_96;
            v36 = v94;
            v59 = (_QWORD *)v131[0];
            if ((v74 & 1) == 0)
              goto LABEL_66;
LABEL_64:
            *(_QWORD *)(v59[7] + 8 * v36) = v129;
LABEL_68:
            swift_bridgeObjectRelease(0x8000000000000000);
            v72 |= 1uLL;
            goto LABEL_69;
          }
          if ((v77 & 1) != 0)
          {
            v59 = (_QWORD *)v131[0];
            if ((v90 & 1) != 0)
              goto LABEL_64;
          }
          else
          {
            sub_1002AE948();
            v59 = (_QWORD *)v131[0];
            if ((v74 & 1) != 0)
              goto LABEL_64;
          }
LABEL_66:
          v59[(v36 >> 6) + 8] |= 1 << v36;
          *(_BYTE *)(v59[6] + v36) = 3;
          *(_QWORD *)(v59[7] + 8 * v36) = v129;
          v100 = v59[2];
          v46 = __OFADD__(v100, 1);
          v101 = v100 + 1;
          if (v46)
            goto LABEL_83;
          v59[2] = v101;
          goto LABEL_68;
        }
      }
      swift_endAccess(v131);
      sub_10002A750(&qword_100640EC0);
      v59 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
      v96 = sub_1002AA3B8(3u);
      if ((v97 & 1) != 0)
        goto LABEL_79;
      v59[(v96 >> 6) + 8] |= 1 << v96;
      *(_BYTE *)(v59[6] + v96) = 3;
      *(_QWORD *)(v59[7] + 8 * v96) = v129;
      v98 = v59[2];
      v46 = __OFADD__(v98, 1);
      v99 = v98 + 1;
      if (v46)
        goto LABEL_80;
      v59[2] = v99;
      v72 = 1;
LABEL_69:
      swift_beginAccess(a7 + 80, v131, 33, 0);
      swift_retain();
      v77 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a7 + 88));
      v130 = *(_QWORD **)(a7 + 88);
      v102 = v130;
      *(_QWORD *)(a7 + 88) = 0x8000000000000000;
      v36 = sub_1002AA398(a2);
      v104 = v102[2];
      v105 = (v103 & 1) == 0;
      v106 = v104 + v105;
      if (__OFADD__(v104, v105))
        break;
      v74 = v103;
      if (v102[3] >= v106)
      {
        if ((v77 & 1) == 0)
          sub_1002AE7AC();
      }
      else
      {
        sub_100457C50(v106, v77);
        v107 = sub_1002AA398(a2);
        if ((v74 & 1) != (v108 & 1))
          goto LABEL_95;
        v36 = v107;
      }
      v109 = v130;
      if ((v74 & 1) != 0)
      {
        v82 = (uint64_t *)(v130[7] + 16 * v36);
        v83 = *v82;
        *v82 = (uint64_t)v59;
        v82[1] = v72;
        swift_bridgeObjectRelease(v83);
      }
      else
      {
        v130[(v36 >> 6) + 8] |= 1 << v36;
        *(_QWORD *)(v109[6] + 8 * v36) = a2;
        v110 = (_QWORD *)(v109[7] + 16 * v36);
        *v110 = v59;
        v110[1] = v72;
        v111 = v109[2];
        v46 = __OFADD__(v111, 1);
        v112 = v111 + 1;
        if (v46)
          goto LABEL_81;
        v109[2] = v112;
        swift_retain();
      }
      ++v76;
      v74 = *(_QWORD *)(a7 + 88);
      *(_QWORD *)(a7 + 88) = v109;
      swift_release();
      swift_bridgeObjectRelease(v74);
      swift_endAccess(v131);
      swift_release();
      v72 = v127;
      if (v126 == v76)
        goto LABEL_91;
    }
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    v77 = (uint64_t)sub_1002B375C((_QWORD *)v77);
    if (v74 < 0)
      goto LABEL_85;
LABEL_40:
    if ((unint64_t)v74 >= *(_QWORD *)(v77 + 16))
      goto LABEL_86;
    v78 = sub_1004381E0(v76, v76, v72);
    *v128 = v77;
    v79 = IndexPath.section.getter(v78);
    sub_10006A14C(v72, v79);
    sub_100317350(v72);
    v81 = *v118;
    v80 = v118[1];
    *(_OWORD *)v118 = v135;
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v81);
    if ((v126 & 1) != 0)
      sub_100307A44(1, (uint64_t)a2, 3, v129, 0);
    v125 = v57;
    sub_100307F24(v36, (uint64_t)v59, v121, v124, 3, v129, 0);
  }
  while ((unint64_t)v72 >> 62);
  v74 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v72);
  if (v74)
    goto LABEL_45;
LABEL_91:
  swift_release();
  swift_bridgeObjectRelease(v72);
  swift_unknownObjectRelease(v120);
  sub_10001F544((uint64_t)v117, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_bridgeObjectRelease(v72);
}

uint64_t sub_100316A60(_QWORD *a1, _BYTE *a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, Swift::Int a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t inited;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t Strong;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t *v78;
  int64_t v79;
  Swift::Int v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  _QWORD *v91;
  _QWORD *v92;
  _BYTE v93[24];
  char v94[24];
  _BYTE v95[24];
  uint64_t v96[3];
  __int128 v97;
  uint64_t v98;
  char v99[8];

  v89 = a8;
  LODWORD(v86) = a6;
  v88 = a5;
  v90 = a4;
  v91 = a1;
  v87 = a9;
  v13 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v77 - v23;
  v25 = (uint64_t)&a2[*(_QWORD *)(*(_QWORD *)a2 + 144)];
  swift_beginAccess(v25, v99, 0, 0);
  sub_10002B1E8(v25, (uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  swift_beginAccess(v25, &v98, 33, 0);
  sub_1000763D8(a3, v25, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  v26 = swift_endAccess(&v98);
  a2[72] = v90;
  v85 = v24;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v26);
  LOBYTE(a3) = sub_100309D34((uint64_t)v18, (uint64_t)a2);
  v27 = sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  if ((a3 & 1) != 0)
  {
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v27);
    sub_10006B068((uint64_t)v18, (uint64_t)a2);
    sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  v28 = v86;
  v84 = a7;
  if ((v88 & 1) == 0 || (v86 & 1) != 0)
  {
    sub_100307CB4(0, (uint64_t)a2, 3, v89, 0);
  }
  else
  {
    swift_beginAccess(a7 + 96, &v98, 33, 0);
    swift_retain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a7 + 96));
    v96[0] = *(_QWORD *)(a7 + 96);
    *(_QWORD *)(a7 + 96) = 0x8000000000000000;
    sub_100097CA0(v89, 0, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
    v30 = *(_QWORD *)(a7 + 96);
    *(_QWORD *)(a7 + 96) = v96[0];
    swift_release(a2);
    swift_bridgeObjectRelease(v30);
    swift_endAccess(&v98);
  }
  v31 = v87;
  if (*(_BYTE *)(v87 + qword_100645F58) == 1)
  {
    swift_beginAccess(v87 + qword_100645F48, &v98, 33, 0);
    sub_10030A704(a2);
    swift_endAccess(&v98);
  }
  if ((v28 & 1) == 0)
    return sub_10001F544((uint64_t)v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  if (a2[48] == 1)
  {
    v98 = 0;
    sub_10019D874((uint64_t)a2, &v98);
    v32 = v98;
    *((_QWORD *)a2 + 5) = v98;
    a2[48] = 0;
  }
  else
  {
    v32 = *((_QWORD *)a2 + 5);
  }
  swift_beginAccess(a2 + 64, &v98, 1, 0);
  v34 = *((_QWORD *)a2 + 8);
  *((_QWORD *)a2 + 8) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v34);
  v80 = a10;
  v86 = sub_1003090C0(a10, v32);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = (uint64_t *)(v31 + qword_100645F48);
  swift_beginAccess(v31 + qword_100645F48, v96, 1, 0);
  v78 = v41;
  result = *v41;
  v42 = v41[1];
  *(_QWORD *)&v97 = result;
  *((_QWORD *)&v97 + 1) = v42;
  v43 = (v40 >> 1) - v38;
  v83 = v36;
  v82 = v38;
  v81 = v40;
  v79 = v40 >> 1;
  if (v40 >> 1 == v38)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(v42);
    v44 = v86;
  }
  else
  {
    if ((uint64_t)(v40 >> 1) <= v38)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v77 = a2;
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(v42);
    swift_unknownObjectRetain(v86);
    v45 = (uint64_t *)(v36 + 8 * v38);
    if ((v40 & 1) != 0)
    {
      do
      {
        v49 = *v45++;
        v50 = v49 + *(_QWORD *)(*(_QWORD *)v49 + 144);
        swift_beginAccess(v50, v95, 0, 0);
        sub_10002B1E8(v50, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v51 = swift_retain(v49);
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v51);
        sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_1000F4960((uint64_t)v18, (uint64_t)v15);
        sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006462C0);
        swift_release(v49);
        --v43;
      }
      while (v43);
    }
    else
    {
      do
      {
        v46 = *v45++;
        v47 = v46 + *(_QWORD *)(*(_QWORD *)v46 + 144);
        swift_beginAccess(v47, v95, 0, 0);
        sub_10002B1E8(v47, (uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v48 = swift_retain(v46);
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v48);
        sub_10001F544((uint64_t)v22, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_1000F4960((uint64_t)v18, (uint64_t)v15);
        sub_10001F544((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_1000073A0((uint64_t)v15, (uint64_t *)&unk_1006462C0);
        swift_release(v46);
        --v43;
      }
      while (v43);
    }
    v44 = v86;
    swift_unknownObjectRelease(v86);
    a2 = v77;
    v36 = v83;
    v38 = v82;
    v40 = v81;
  }
  v52 = sub_10002A750((uint64_t *)&unk_100640E10);
  inited = swift_initStackObject(v52, v94);
  v54 = swift_unknownObjectRetain_n(v44, 2);
  result = sub_100071C10(v54, v36, v38, v40);
  *(_QWORD *)(inited + 16) = result;
  v55 = v79 - v38;
  if (v79 != v38)
  {
    if (v79 <= v38)
    {
LABEL_44:
      __break(1u);
      return result;
    }
    swift_unknownObjectRetain(v44);
    v56 = (uint64_t *)(v36 + 8 * v38);
    if ((v40 & 1) != 0)
    {
      do
      {
        v59 = *v56++;
        swift_weakAssign(v59 + 56, 0);
        swift_beginAccess(v59 + 64, v93, 1, 0);
        v60 = *(_QWORD *)(v59 + 64);
        *(_QWORD *)(v59 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v60);
        --v55;
      }
      while (v55);
    }
    else
    {
      do
      {
        v57 = *v56++;
        swift_weakAssign(v57 + 56, 0);
        swift_beginAccess(v57 + 64, v93, 1, 0);
        v58 = *(_QWORD *)(v57 + 64);
        *(_QWORD *)(v57 + 64) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v58);
        --v55;
      }
      while (v55);
    }
    swift_unknownObjectRelease(v44);
  }
  swift_unknownObjectRelease(v44);
  v61 = _swiftEmptyArrayStorage;
  if (v90 == 2)
    v61 = sub_10006C8BC((uint64_t)a2, inited);
  v62 = *((_QWORD *)a2 + 8);
  *((_QWORD *)a2 + 8) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  v92 = _swiftEmptyArrayStorage;
  sub_10006FCF8((uint64_t *)&v92);
  Strong = swift_weakLoadStrong(a2 + 56);
  if (Strong)
  {
    v64 = Strong;
    do
    {
      *(_QWORD *)(v64 + 40) = 0;
      *(_BYTE *)(v64 + 48) = 1;
      v65 = swift_weakLoadStrong(v64 + 56);
      swift_release(v64);
      v64 = v65;
    }
    while (v65);
  }
  v66 = swift_bridgeObjectRelease(v61);
  v67 = (uint64_t)v92;
  v68 = IndexPath.section.getter(v66);
  v69 = swift_bridgeObjectRetain(v67);
  v70 = IndexPath.row.getter(v69);
  v71 = (_QWORD *)*v91;
  result = swift_isUniquelyReferenced_nonNull_native(*v91);
  if ((result & 1) != 0)
  {
    if ((v68 & 0x8000000000000000) == 0)
      goto LABEL_36;
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  result = (uint64_t)sub_1002B37D4(v71);
  v71 = (_QWORD *)result;
  if ((v68 & 0x8000000000000000) != 0)
    goto LABEL_41;
LABEL_36:
  if (v68 >= v71[2])
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v72 = sub_100438AA0(v70, v70, v67);
  *v91 = v71;
  v73 = IndexPath.section.getter(v72);
  sub_10006A734(v67, v73);
  sub_10031770C(v67);
  v75 = *v78;
  v74 = v78[1];
  *(_OWORD *)v78 = v97;
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v75);
  v76 = v89;
  if ((v88 & 1) != 0)
    sub_100307CB4(1, (uint64_t)a2, 3, v89, 0);
  sub_10030884C(v44, v83, v82, v81, 3, v76, 0);
  sub_100308358(v67, 3, v76, 0);
  swift_setDeallocating(inited);
  swift_bridgeObjectRelease(*(_QWORD *)(inited + 16));
  swift_unknownObjectRelease(v44);
  sub_10001F544((uint64_t)v85, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return swift_bridgeObjectRelease(v67);
}

void sub_100317350(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];
  _BYTE v29[24];

  v2 = sub_10002A750((uint64_t *)&unk_1006463C0);
  __chkstk_darwin(v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRRemindersListViewModel.ItemID(0);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v28[-v12];
  if (!((unint64_t)a1 >> 62))
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v14)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v26 = a1;
  else
    v26 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v26);
  if (!v14)
    goto LABEL_20;
LABEL_3:
  if (v14 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v14; ++i)
      {
        v17 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v18 = v17;
        v19 = (uint64_t)&v17[*(_QWORD *)(*(_QWORD *)v17 + 144)];
        if (v17[72] == 1)
        {
          swift_beginAccess(&v17[*(_QWORD *)(*(_QWORD *)v17 + 144)], v28, 0, 0);
          v16 = sub_10002B1E8(v19, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v16);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1004809C4((uint64_t)v13, (uint64_t)v10);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        }
        else
        {
          swift_beginAccess(&v17[*(_QWORD *)(*(_QWORD *)v17 + 144)], v29, 0, 0);
          v20 = sub_10002B1E8(v19, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v20);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v13, (uint64_t)v4);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
        }
        swift_unknownObjectRelease(v18);
      }
    }
    else
    {
      for (j = 0; j != v14; ++j)
      {
        v23 = *(_BYTE **)(a1 + 8 * j + 32);
        v24 = (uint64_t)&v23[*(_QWORD *)(*(_QWORD *)v23 + 144)];
        if (v23[72] == 1)
        {
          swift_beginAccess(&v23[*(_QWORD *)(*(_QWORD *)v23 + 144)], v28, 0, 0);
          sub_10002B1E8(v24, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v22 = swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v22);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1004809C4((uint64_t)v13, (uint64_t)v10);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        }
        else
        {
          swift_beginAccess(&v23[*(_QWORD *)(*(_QWORD *)v23 + 144)], v29, 0, 0);
          sub_10002B1E8(v24, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          v25 = swift_retain();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter(v25);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1000F4754((uint64_t)v13, (uint64_t)v4);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006463C0);
        }
        swift_release();
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_10031770C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t i;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];
  _BYTE v30[24];

  v2 = sub_10002A750((uint64_t *)&unk_1006462C0);
  __chkstk_darwin(v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  __chkstk_darwin(v5);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  v9 = __chkstk_darwin(v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v29[-v12];
  if (!((unint64_t)a1 >> 62))
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v14)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v27 = a1;
  else
    v27 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v27);
  v14 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v14 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v14; ++i)
      {
        v18 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v19 = v18;
        v20 = (uint64_t)&v18[*(_QWORD *)(*(_QWORD *)v18 + 144)];
        if (v18[72] == 1)
        {
          swift_beginAccess(&v18[*(_QWORD *)(*(_QWORD *)v18 + 144)], v29, 0, 0);
          v17 = sub_10002B1E8(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v17);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_100481964((uint64_t)v13, (uint64_t)v11);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        }
        else
        {
          swift_beginAccess(&v18[*(_QWORD *)(*(_QWORD *)v18 + 144)], v30, 0, 0);
          v21 = sub_10002B1E8(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v21);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v13, (uint64_t)v4);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006462C0);
        }
        swift_unknownObjectRelease(v19);
      }
    }
    else
    {
      for (j = 0; j != v14; ++j)
      {
        v24 = *(_BYTE **)(a1 + 8 * j + 32);
        v25 = (uint64_t)&v24[*(_QWORD *)(*(_QWORD *)v24 + 144)];
        if (v24[72] == 1)
        {
          swift_beginAccess(&v24[*(_QWORD *)(*(_QWORD *)v24 + 144)], v29, 0, 0);
          sub_10002B1E8(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v23 = swift_retain(v24);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v23);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_100481964((uint64_t)v13, (uint64_t)v11);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        }
        else
        {
          swift_beginAccess(&v24[*(_QWORD *)(*(_QWORD *)v24 + 144)], v30, 0, 0);
          sub_10002B1E8(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          v26 = swift_retain(v24);
          TTRAccountsListsViewModel.Item.treeItemIdentifier.getter(v26);
          sub_10001F544((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.Item);
          sub_1000F4960((uint64_t)v13, (uint64_t)v4);
          sub_10001F544((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
          sub_1000073A0((uint64_t)v4, (uint64_t *)&unk_1006462C0);
        }
        swift_release(v24);
      }
    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100317AC8(_QWORD *a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  unint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  Strong = swift_weakLoadStrong(v3 + 56);
  if (!Strong
    || (v6 = *(_QWORD *)(Strong + 24), v7 = *(unsigned __int8 *)(Strong + 32), swift_release(Strong), v7 == 1))
  {
    v6 = -1;
  }
  v8 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)(v3 + 24) = v8;
  *(_BYTE *)(v3 + 32) = 0;
  v9 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v6 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v6 >= v8 >> 1)
LABEL_8:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v6 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v3);
  specialized Array._endMutation()(v10);
  return a2(a1);
}

uint64_t sub_100317B84(uint64_t a1, void (*a2)(uint64_t, _QWORD *))
{
  void (*v2)(uint64_t, _QWORD *);
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t result;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  if (a1 < 0)
    goto LABEL_28;
  v2 = a2;
  v6 = a1;
  result = swift_beginAccess(v3 + 64, v24, 32, 0);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_29;
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < v6)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  else
  {
    while (1)
    {
      if (v6 && (v4 & 0xC000000000000001) != 0)
      {
        v8 = 0;
        do
        {
          v9 = v8 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v8);
          v8 = v9;
        }
        while (v6 != v9);
      }
      if (v5)
      {
        v12 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v10 = _CocoaArrayWrapper.subscript.getter(0, v6, v12);
        v11 = v13;
        v5 = v14;
        v16 = v15;
        swift_bridgeObjectRelease(v4);
        v6 = v16 >> 1;
      }
      else
      {
        v10 = v4 & 0xFFFFFFFFFFFFFF8;
        v11 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
        swift_bridgeObjectRetain(v4);
      }
      result = swift_endAccess(v24);
      v4 = v6 - v5;
      if (v6 == v5)
        break;
      if (v6 <= v5)
        goto LABEL_35;
      swift_unknownObjectRetain(v10);
      v17 = 0;
      v18 = v11 + 8 * v5;
      while (1)
      {
        v5 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        v19 = *(_QWORD *)v18;
        if (*(_BYTE *)(*(_QWORD *)v18 + 48) == 1)
        {
          v24[0] = 0;
          v20 = swift_retain(v19);
          v2(v20, v24);
          v6 = v24[0];
          *(_QWORD *)(v19 + 40) = v24[0];
          *(_BYTE *)(v19 + 48) = 0;
          swift_release(v19);
        }
        else
        {
          v6 = *(_QWORD *)(v19 + 40);
        }
        v17 = v5 + v6;
        if (__OFADD__(v5, v6))
          goto LABEL_27;
        v18 += 8;
        if (!--v4)
        {
          swift_unknownObjectRelease(v10);
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      if (v4 < 0)
        v21 = v4;
      else
        v21 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      result = swift_bridgeObjectRelease(v4);
      if (v22 < 0)
        goto LABEL_36;
      swift_bridgeObjectRetain(v4);
      v23 = _CocoaArrayWrapper.endIndex.getter(v21);
      result = swift_bridgeObjectRelease(v4);
      if (v23 < v6)
        goto LABEL_34;
    }
    v17 = 0;
LABEL_25:
    swift_unknownObjectRelease(v10);
    return v17;
  }
  return result;
}

