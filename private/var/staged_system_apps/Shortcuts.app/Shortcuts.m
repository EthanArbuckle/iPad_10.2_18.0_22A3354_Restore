uint64_t sub_100003680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = Image.init(systemName:)(1937075312, 0xE400000000000000);
  v3 = static Font.title3.getter();
  result = swift_getKeyPath(&unk_10009B480);
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

void sub_1000036D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[14];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for RootNavigationDestination(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000438C(319, &qword_1000D0C58, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[6] = &unk_100096FD8;
      v6[7] = &unk_100096FF0;
      v6[8] = &unk_100096FF0;
      v6[9] = &unk_100096FF0;
      v6[10] = &unk_100096FF0;
      v6[11] = &unk_100096FF0;
      v6[12] = &unk_100096FF0;
      v6[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 14, v6, a1 + 80);
    }
  }
}

uint64_t _s16EmptySectionCellCMa()
{
  return objc_opt_self(_TtCC9Shortcuts21LibraryViewControllerP33_92562CD5492E919F87A213A8E0FD4AE916EmptySectionCell);
}

uint64_t sub_1000037C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_1000037EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource);
  }
  else
  {
    v3 = sub_1000060F0(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v4);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_100003850(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[29];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_10009A978;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for LibraryConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = &unk_10009A990;
    v4[6] = &unk_10009A9A8;
    v4[7] = &unk_10009A9C0;
    v4[8] = &unk_10009A9D8;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = &unk_10009A9A8;
    v4[11] = &unk_10009A9A8;
    v4[12] = &unk_10009A9A8;
    v4[13] = &unk_10009A9D8;
    v4[14] = &unk_10009A9A8;
    v4[15] = &unk_10009A9D8;
    v4[16] = &unk_10009A9A8;
    v4[17] = &unk_10009A9D8;
    v4[18] = &unk_10009A9A8;
    v4[19] = &unk_10009A9A8;
    v4[20] = &unk_10009A990;
    v4[21] = &unk_10009A9A8;
    v4[22] = &unk_10009A9F0;
    v4[23] = &unk_10009A9A8;
    v4[24] = &unk_10009A9D8;
    v4[25] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[26] = &unk_10009AA08;
    v4[27] = &unk_10009A9A8;
    v4[28] = (char *)&value witness table for Builtin.BridgeObject + 64;
    return swift_updateClassMetadata2(a1, 256, 29, v4, a1 + 80);
  }
  return result;
}

uint64_t type metadata accessor for Toolbar()
{
  return objc_opt_self(_TtC9ShortcutsP33_8702A5D8D13AC095577E43331996DAF77Toolbar);
}

uint64_t sub_100003974(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SidebarViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D3968;
  if (!qword_1000D3968)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SidebarViewController);
  return result;
}

uint64_t sub_1000039F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  result = type metadata accessor for SidebarStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = &unk_10009AB88;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_10009ABA0;
    v4[6] = &unk_10009ABB8;
    v4[7] = &unk_10009ABD0;
    v4[8] = &unk_10009ABE8;
    v4[9] = &unk_10009AC00;
    return swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
  return result;
}

uint64_t type metadata accessor for SearchStateStore()
{
  return objc_opt_self(_TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore);
}

uint64_t _s10TopHitCellCMa()
{
  return objc_opt_self(_TtCC9Shortcuts21LibraryViewControllerP33_92562CD5492E919F87A213A8E0FD4AE910TopHitCell);
}

uint64_t sub_100003B2C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for FloatingToolbarViewController()
{
  return objc_opt_self(_TtC9Shortcuts29FloatingToolbarViewController);
}

void sub_100003B84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_100096FF0;
  v2 = type metadata accessor for GalleryNavigationDestination(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = &unk_100097030;
    v6[4] = &unk_100097048;
    v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[6] = &unk_100096FD8;
    sub_10000438C(319, &qword_1000D0F80, (void (*)(uint64_t))&type metadata accessor for RootPPTTestCase);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      v6[8] = &unk_100097060;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for SearchStateController()
{
  return objc_opt_self(_TtC9Shortcuts21SearchStateController);
}

_QWORD *sub_100003C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100012E2C(&qword_1000D1048);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t _s27MiniTipCollectionHeaderViewCMa()
{
  return objc_opt_self(_TtCC9Shortcuts21LibraryViewController27MiniTipCollectionHeaderView);
}

uint64_t _s17SectionHeaderViewCMa()
{
  return objc_opt_self(SectionHeaderView);
}

void sub_100003E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)(uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void (*v25)(_QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (**v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  sub_100018190();
  v4 = sub_100079E40();
  sub_10004282C();
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100079E48();
  v27 = *(uint64_t (***)(uint64_t, uint64_t))(v8 - 8);
  sub_100018044();
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100047F14();
  sub_10002728C();
  __chkstk_darwin(v13);
  sub_100018488();
  v28 = v1;
  v14 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
  sub_100026D70(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v29);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v14, v12);
  LibraryConfiguration.editingBehavior.getter(v15);
  v16 = v2;
  v17 = v27;
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v16, v12);
  v18 = v17[11]((uint64_t)v11, v8);
  if (v18 == enum case for LibraryEditingBehavior.option(_:))
  {
    sub_100007564(v28);
    sub_100027560((uint64_t)v11, v17[1]);
  }
  else
  {
    v19 = v28;
    if (v18 == enum case for LibraryEditingBehavior.options(_:))
    {
      sub_100027560((uint64_t)v11, v17[12]);
      v20 = *(_QWORD *)v11;
      v21 = *(_QWORD *)(*(_QWORD *)v11 + 16);
      if (v21)
      {
        v22 = v20 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v23 = enum case for LibraryEditingOption.selection(_:);
        v24 = *(_QWORD *)(v3 + 72);
        v25 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16);
        while (1)
        {
          v25(v7, v22, v4);
          if (sub_100026C54((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88)) == v23)
            break;
          sub_100026C54((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
          v22 += v24;
          if (!--v21)
            goto LABEL_8;
        }
        sub_100018420();
        sub_100026C54((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
        swift_bridgeObjectRelease(*v7);
        sub_100007564(v19);
      }
      else
      {
LABEL_8:
        sub_100018420();
      }
    }
    else
    {
      sub_100027560((uint64_t)v11, v17[1]);
    }
  }
  sub_100018094();
}

void sub_100004038(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1000143E4(a2);
    atomic_store(sub_100030658(v3), a1);
  }
  sub_100018188();
}

void sub_10000406C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_1000143E4(a2);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_100018188();
}

void sub_1000040A8(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = a2(255);
    atomic_store(sub_100030658(v3), a1);
  }
  sub_100018188();
}

uint64_t sub_1000040DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(id *)(a1 + 16);
  swift_bridgeObjectRetain(v2);
  sub_1000123BC(v3, v4);
  sub_1000123BC(v5, v6);
  return a1;
}

void sub_10000413C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[16];

  v2 = type metadata accessor for SidebarStyle(319);
  if (v3 <= 0x3F)
  {
    v19[0] = *(_QWORD *)(v2 - 8) + 64;
    v19[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v19[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v19[3] = &unk_100099E90;
    v19[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_100004344(319, &qword_1000D24C0, &qword_1000D1100);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v19[5] = v6;
      v19[6] = &unk_100099E90;
      sub_1000043D0(319, &qword_1000D0C58, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
      if (v8 <= 0x3F)
      {
        v19[7] = *(_QWORD *)(v7 - 8) + 64;
        sub_100004344(319, &qword_1000D24C8, (uint64_t *)&unk_1000D4470);
        if (v10 <= 0x3F)
        {
          v19[8] = *(_QWORD *)(v9 - 8) + 64;
          sub_1000043D0(319, &qword_1000D24D0, (uint64_t (*)(uint64_t))&type metadata accessor for AutoShortcutsAppsDataSource);
          if (v12 <= 0x3F)
          {
            v19[9] = *(_QWORD *)(v11 - 8) + 64;
            sub_1000043D0(319, &qword_1000D24D8, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode);
            if (v14 <= 0x3F)
            {
              v19[10] = *(_QWORD *)(v13 - 8) + 64;
              v19[11] = v6;
              sub_100004344(319, &qword_1000D24E0, &qword_1000D24E8);
              if (v16 <= 0x3F)
              {
                v19[12] = *(_QWORD *)(v15 - 8) + 64;
                sub_100015820();
                if (v18 <= 0x3F)
                {
                  v19[13] = *(_QWORD *)(v17 - 8) + 64;
                  v19[14] = &unk_100099EA8;
                  v19[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
                  swift_updateClassMetadata2(a1, 256, 16, v19, a1 + 80);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100004344(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v4 = sub_1000143E4(a3);
    v5 = sub_10005E7DC(v4);
    if (!v6)
      atomic_store(v5, a2);
  }
  sub_100018388();
}

void sub_10000438C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1000276C0();
    v6 = type metadata accessor for Optional(v4, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
  sub_100018188();
}

void sub_1000043D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v4 = a3(255);
    v5 = sub_10005E7DC(v4);
    if (!v6)
      atomic_store(v5, a2);
  }
  sub_100018388();
}

void sub_100004460(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t WFGeneralLogObject;
  NSObject *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint8_t buf[4];
  const char *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  uint64_t v28;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "inputStream"));
    objc_msgSend(v7, "open");
    v20 = 0;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization propertyListWithStream:options:format:error:](NSPropertyListSerialization, "propertyListWithStream:options:format:error:", v7, 0, 0, &v20));
    v9 = v20;
    v10 = objc_opt_class(NSDictionary);
    v11 = v8;
    v12 = v11;
    if (v11 && (objc_opt_isKindOfClass(v11, v10) & 1) == 0)
    {
      WFGeneralLogObject = getWFGeneralLogObject();
      v15 = objc_claimAutoreleasedReturnValue(WFGeneralLogObject);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
      {
        v16 = (void *)objc_opt_class(v12);
        *(_DWORD *)buf = 136315906;
        v22 = "WFEnforceClass";
        v23 = 2114;
        v24 = v12;
        v25 = 2114;
        v26 = v16;
        v27 = 2114;
        v28 = v10;
        v17 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "%s Warning: %{public}@ is of type %{public}@, not %{public}@! Falling back to nil.", buf, 0x2Au);

      }
      v13 = 0;
    }
    else
    {
      v13 = v12;
    }

    objc_msgSend(v7, "close");
    if (v13)
      objc_msgSend(*(id *)(a1 + 32), "setValuesForKeysWithDictionary:", v13);
  }
  else
  {
    v9 = 0;
    v13 = 0;
  }
  v18 = *(_QWORD *)(a1 + 40);
  if (v18)
  {
    if (v6)
      v19 = v6;
    else
      v19 = v9;
    (*(void (**)(uint64_t, id, id))(v18 + 16))(v18, v13, v19);
  }

}

void sub_10000483C(id a1, NSDictionary *a2, NSError *a3)
{
  NSError *v3;
  uint64_t WFGeneralLogObject;
  NSObject *v5;
  int v6;
  const char *v7;
  __int16 v8;
  NSError *v9;

  v3 = a3;
  WFGeneralLogObject = getWFGeneralLogObject();
  v5 = objc_claimAutoreleasedReturnValue(WFGeneralLogObject);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 136315394;
    v7 = "-[WFAppDelegate application:willFinishLaunchingWithOptions:]_block_invoke_2";
    v8 = 2114;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s Finished updating remote user defaults with error: %{public}@", (uint8_t *)&v6, 0x16u);
  }

}

double sub_1000048F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v0 = type metadata accessor for SidebarView.DataSource(0);
  sub_1000040A8(&qword_1000D28C0, type metadata accessor for SidebarView.DataSource);
  v2 = ObservableObject<>.objectWillChange.getter(v0, v1);
  ObservableObjectPublisher.send()();
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_100004954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t type metadata accessor for SidebarView.DataSource(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D24B0, (uint64_t)&nominal type descriptor for SidebarView.DataSource);
}

void sub_100004998(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_100018188();
}

uint64_t sub_1000049F4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = sub_1000507EC();
  v1 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v0, &method descriptor for LibraryDataSource.isEditing.getter);
  return v1();
}

uint64_t start(int a1, char **a2)
{
  void *v4;
  objc_class *v5;
  NSString *v6;
  NSString *v7;
  uint64_t v8;

  v4 = objc_autoreleasePoolPush();
  v5 = (objc_class *)objc_opt_class(WFAppDelegate);
  v6 = NSStringFromClass(v5);
  v7 = (NSString *)objc_claimAutoreleasedReturnValue(v6);
  v8 = UIApplicationMain(a1, a2, 0, v7);

  objc_autoreleasePoolPop(v4);
  return v8;
}

void sub_100004A84(id a1)
{
  BOOL v1;
  uint64_t WFGeneralLogObject;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Dl_info v7;
  uint8_t buf[4];
  const char *v9;

  memset(&v7, 0, sizeof(v7));
  if (dladdr(sub_10001159C, &v7))
    v1 = v7.dli_fname == 0;
  else
    v1 = 1;
  if (v1)
  {
    WFGeneralLogObject = getWFGeneralLogObject();
    v3 = objc_claimAutoreleasedReturnValue(WFGeneralLogObject);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      v9 = "WFCurrentBundle_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s WFLocalizedString failed to locate current bundle", buf, 0xCu);
    }
  }
  else
  {
    v3 = objc_msgSend(objc_alloc((Class)NSURL), "initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:", v7.dli_fname, 0, 0);
    v4 = (void *)_CFBundleCopyBundleURLForExecutableURL();
    v5 = objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithURL:](NSBundle, "bundleWithURL:", v4));
    v6 = (void *)qword_1000DAD98;
    qword_1000DAD98 = v5;

  }
}

void sub_100004BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (Strong)
  {
    v3 = sub_100079FAC(Strong);
    v4 = dispatch thunk of LibraryDelegate.isPresentingViewController.getter(v3, v1);
    if ((v4 & 1) == 0)

    sub_100027130();
  }
  sub_100018388();
}

void sub_100004C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  CGAffineTransform v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v5 = v4;

    if (v4)
    {
      v6 = objc_msgSend(v5, "imageView");

      if (v6)
      {
        CGAffineTransformMakeScale(&v11, 0.95, 0.95);
        objc_msgSend(v6, "setTransform:", &v11);

      }
    }
  }
  swift_beginAccess(v1, &v11, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v1);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(void **)(v7 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v10 = v9;

    if (v9)
    {
      objc_msgSend(v10, "setAlpha:", 0.0);

    }
  }
}

void sub_100004D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD v11[6];
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v5 = v4;

    if (v4)
    {
      v6 = objc_msgSend(v5, "imageView");

      if (v6)
      {
        v11[0] = 0x3FF0000000000000;
        v11[1] = 0;
        v11[2] = 0;
        v11[3] = 0x3FF0000000000000;
        v11[4] = 0;
        v11[5] = 0;
        objc_msgSend(v6, "setTransform:", v11);

      }
    }
  }
  swift_beginAccess(v1, v11, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v1);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(void **)(v7 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v10 = v9;

    if (v9)
    {
      objc_msgSend(v10, "setAlpha:", 1.0);

    }
  }
}

void sub_10000500C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_100018190();
  v6 = v5;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_1000272A4();
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)(sub_100026B08() - 8);
  sub_100018044();
  __chkstk_darwin(v11);
  v12 = sub_100019DBC();
  type metadata accessor for RootNavigationContext.TransitionType(v12);
  sub_100018034();
  __chkstk_darwin(v13);
  sub_100018458();
  sub_100012E2C(&qword_1000D1088);
  sub_100018034();
  __chkstk_darwin(v14);
  sub_100026BD8();
  v15 = sub_100026C5C();
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100018470();
  v17 = objc_msgSend(v6, "horizontalSizeClass") == (id)1;
  *((_BYTE *)v6 + OBJC_IVAR___WFMainViewController_display) = v17;
  v18 = sub_1000273D4();
  v21 = sub_100026B84(v3, v19, v20, v18);
  static RootNavigationContext.TransitionType.default.getter(v21);
  RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)(0, 0, 0, 0, v4, v3);
  v22 = (uint64_t)v6 + OBJC_IVAR___WFMainViewController_currentDestination;
  sub_100026D70((uint64_t)v6 + OBJC_IVAR___WFMainViewController_currentDestination, (uint64_t)&v32);
  sub_100026854(v22, (uint64_t)v10, &qword_1000D1100);
  sub_100026C7C((uint64_t)v10);
  if (v23)
  {
    sub_100026D60(v2, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_10001222C((uint64_t)v10, &qword_1000D1100);
  }
  else
  {
    v24 = v31;
    sub_100026DA4(v1, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
    sub_100026FD4(v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
    sub_100015D74(v0, 0, 1, v15);
    v25 = sub_100015138();
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    v26 = sub_100026FE0();
    v29 = RootView.navigate(to:with:)(v26, v27, v25, v28);
    sub_1000273B4(v29, &qword_1000D10F8);
    sub_100026C54(v1, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    sub_100026D60(v2, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  sub_100018094();
}

void sub_100005348(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_100012E2C(&qword_1000D4298);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = sub_100012E2C((uint64_t *)&unk_1000D42A0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v23 - v14;
  sub_100006598((uint64_t)&v23 - v14);
  if (a1[5])
  {
    v16 = swift_allocObject(&unk_1000C39F8, 88, 7);
    memcpy((void *)(v16 + 16), a1, 0x48uLL);
    sub_1000040DC((uint64_t)a1);
    v17 = sub_100012E2C(&qword_1000D1FE8);
    v18 = sub_10001579C();
    Button.init(action:label:)(sub_10008B49C, v16, sub_100003680, 0, v17, v18);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  v20 = sub_100012E2C(&qword_1000D2DE0);
  sub_100015D74((uint64_t)v9, v19, 1, v20);
  sub_10000D74C((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1000D42A0);
  sub_10000D74C((uint64_t)v9, (uint64_t)v7, &qword_1000D4298);
  sub_10000D74C((uint64_t)v13, a2, (uint64_t *)&unk_1000D42A0);
  v21 = sub_100012E2C((uint64_t *)&unk_1000D42B0);
  v22 = a2 + *(int *)(v21 + 48);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  sub_10000D74C((uint64_t)v7, a2 + *(int *)(v21 + 64), &qword_1000D4298);
  sub_10001222C((uint64_t)v9, &qword_1000D4298);
  sub_10001222C((uint64_t)v15, (uint64_t *)&unk_1000D42A0);
  sub_10001222C((uint64_t)v7, &qword_1000D4298);
  sub_10001222C((uint64_t)v13, (uint64_t *)&unk_1000D42A0);
}

void sub_100005578(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = a3 & 1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v9 = v8;

    if (v8)
    {
      LibraryLayoutMode.symbolName.getter(v4);
      v11 = v10;
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      objc_msgSend(v9, "setSymbolName:pointSizeToWidthRatio:", v12, 3.3);

    }
  }
  swift_beginAccess(v5, v24, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v5);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = *(void **)(v13 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v16 = v15;

    if (v15)
    {
      v17 = LibraryLayoutMode.accessibilityLabel.getter(v4);
      sub_10007CEA0(v17, v18, v16);

    }
  }
  v19 = (void *)objc_opt_self(UIView);
  v22[4] = sub_100014E6C;
  v23 = a2;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100007DA8;
  v22[3] = &unk_1000C3490;
  v20 = _Block_copy(v22);
  v21 = v23;
  swift_retain(a2);
  swift_release(v21);
  objc_msgSend(v19, "animateWithDuration:animations:", v20, 0.125);
  _Block_release(v20);
}

char *sub_100005878(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  objc_super v14;

  v5 = OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar;
  v6 = type metadata accessor for Toolbar();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_backgroundColor] = 0;

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  v9 = (char *)objc_msgSendSuper2(&v14, "initWithNibName:bundle:", 0, 0);
  v10 = *(void **)&v9[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar];
  v11 = v9;
  objc_msgSend(v10, "setTranslucent:", a2 & 1);
  v12 = v10;
  sub_10002DCB4(a1, v12);

  return v11;
}

uint64_t sub_100005970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100012E2C(&qword_1000D13F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_100012E2C(&qword_1000D13B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void _s20LibrarySectionHeaderC13SectionHeaderVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  if (*(_QWORD *)(a1 + 40))
    swift_release(*(_QWORD *)(a1 + 48));
  if (*(_QWORD *)(a1 + 56))
    swift_release(*(_QWORD *)(a1 + 64));
}

void sub_100005A48(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingShortcutItem"));
  if (v2)
    goto LABEL_3;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingOpenURLContexts"));
  if (v2)
    goto LABEL_3;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingUserActivity"));

  if (!v14)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "window"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "rootViewController"));
    v16 = WFUserInterfaceFromViewController(v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    WFPresentResumeSyncConfirmationAlertWithUserInterfaceIfNeeded();

LABEL_3:
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingShortcutItem"));

  if (v3)
  {
    v4 = *(void **)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pendingShortcutItem"));
    objc_msgSend(v4, "handleShortcutItem:", v5);

    objc_msgSend(*(id *)(a1 + 32), "setPendingShortcutItem:", 0);
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingOpenURLContexts"));

  if (v6)
  {
    v7 = *(void **)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pendingOpenURLContexts"));
    objc_msgSend(v7, "scene:openURLContexts:", v8, v9);

    objc_msgSend(*(id *)(a1 + 32), "setPendingOpenURLContexts:", 0);
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingUserActivity"));

  if (v10)
  {
    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "pendingUserActivity"));
    objc_msgSend(v11, "scene:continueUserActivity:", v12, v13);

    objc_msgSend(*(id *)(a1 + 32), "setPendingUserActivity:", 0);
  }
}

void sub_100005C24(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void **aBlock;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char v33[24];

  v5 = *a1;
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  v8 = (void *)Strong;
  if (Strong)
  {
    v9 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    v10 = v9;

    if (v9)
    {
      v11 = objc_msgSend(v10, "symbolName");

      v8 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v13 = v12;

      goto LABEL_6;
    }
    v8 = 0;
  }
  v13 = 0;
LABEL_6:
  v14 = LibraryLayoutMode.symbolName.getter(v5);
  v16 = v15;
  if (!v13)
  {
    swift_bridgeObjectRelease(v15);
    goto LABEL_14;
  }
  if (v8 == (void *)v14 && v13 == v15)
  {
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v13);
    goto LABEL_16;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v13, v14, v15, 0);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v13);
  if ((v18 & 1) == 0)
  {
LABEL_14:
    v19 = (void *)objc_opt_self(UIView);
    v31 = sub_100014E64;
    v32 = a2;
    aBlock = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_100007DA8;
    v30 = &unk_1000C3418;
    v20 = _Block_copy(&aBlock);
    v21 = v32;
    swift_retain(a2);
    swift_release(v21);
    v22 = swift_allocObject(&unk_1000C3450, 40, 7);
    *(_QWORD *)(v22 + 16) = a2;
    *(_BYTE *)(v22 + 24) = v5;
    *(_QWORD *)(v22 + 32) = a3;
    v31 = sub_100014E74;
    v32 = v22;
    aBlock = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_100014BC8;
    v30 = &unk_1000C3468;
    v23 = _Block_copy(&aBlock);
    v24 = v32;
    swift_retain(a2);
    swift_release(v24);
    objc_msgSend(v19, "animateWithDuration:animations:completion:", v20, v23, 0.125);
    _Block_release(v23);
    _Block_release(v20);
  }
LABEL_16:
  swift_beginAccess(v6, &aBlock, 0, 0);
  v25 = swift_unknownObjectWeakLoadStrong(v6);
  if (v25)
  {
    v26 = (void *)v25;
    sub_10000C5DC(v5);

  }
}

id sub_100005E8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v2 = type metadata accessor for LibraryEditingBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for LibraryConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", *(_QWORD *)(a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout), 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "systemBackgroundColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  objc_msgSend(v12, "setDelegate:", a1);
  objc_msgSend(v12, "setDragDelegate:", a1);
  objc_msgSend(v12, "setDragInteractionEnabled:", 1);
  objc_msgSend(v12, "setDropDelegate:", a1);
  objc_msgSend(v12, "setAlwaysBounceVertical:", 1);
  objc_msgSend(v12, "setAllowsMultipleSelectionDuringEditing:", 1);
  objc_msgSend(v12, "setAllowsFocus:", 1);
  objc_msgSend(v12, "setSelectionFollowsFocus:", 1);
  v14 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
  swift_beginAccess(v14, v19, 0, 0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  LibraryConfiguration.editingBehavior.getter(v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v14) = LibraryEditingBehavior.allowsMultipleSelection.getter(v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v12, "setAllowsMultipleSelection:", v14 & 1);
  return v12;
}

uint64_t sub_1000060F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  void (**v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53[5];

  v2 = type metadata accessor for SidebarStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D1100);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RootNavigationDestination(0);
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v49 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v48 - v13;
  __chkstk_darwin(v12);
  v50 = (uint64_t)&v48 - v15;
  v16 = a1 + OBJC_IVAR___WFSidebarViewController_rootView;
  swift_beginAccess(a1 + OBJC_IVAR___WFSidebarViewController_rootView, v53, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = v2;
    v20 = v9;
    v21 = Strong + OBJC_IVAR___WFMainViewController_currentDestination;
    swift_beginAccess(Strong + OBJC_IVAR___WFMainViewController_currentDestination, v52, 0, 0);
    v22 = v21;
    v9 = v20;
    v2 = v19;
    sub_1000064AC(v22, (uint64_t)v7);

    if (sub_100019D44((uint64_t)v7, 1, v8) != 1)
    {
      ((void (**)(uint64_t, char *, uint64_t))v9)[4](v50, v7, v8);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100015D74((uint64_t)v7, 1, 1, v8);
  }
  v23 = swift_unknownObjectWeakLoadStrong(v16);
  if (v23)
  {
    v24 = (void *)v23;
    ((void (**)(char *, uint64_t, uint64_t))v9)[2](v14, v23 + OBJC_IVAR___WFMainViewController_initialDestination, v8);

    ((void (**)(uint64_t, char *, uint64_t))v9)[4](v50, v14, v8);
  }
  else
  {
    v9[13](v50, enum case for RootNavigationDestination.allShortcuts(_:), v8);
  }
  sub_10000D778((uint64_t)v7, &qword_1000D1100);
LABEL_9:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v51, a1 + OBJC_IVAR___WFSidebarViewController_style, v2);
  v25 = *(void **)(a1 + OBJC_IVAR___WFSidebarViewController_database);
  v26 = *(_QWORD *)(a1 + OBJC_IVAR___WFSidebarViewController_sections);
  v27 = swift_unknownObjectWeakLoadStrong(v16);
  v48 = (uint64_t)v25;
  if (v27)
  {
    v28 = (void *)v27;
    v29 = a1;
    v30 = *(void **)(v27 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
    v31 = v25;
    swift_bridgeObjectRetain(v26);
    v32 = v30;

  }
  else
  {
    v29 = a1;
    v33 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource(0));
    v34 = v25;
    swift_bridgeObjectRetain(v26);
    v32 = (id)AutoShortcutsAppsDataSource.init(organizedCollections:)(1);
  }
  v35 = v49;
  v36 = v50;
  v9[2](v49, v50, v8);
  v37 = v8;
  v38 = v36;
  v39 = v9;
  v40 = *(unsigned __int8 *)(v29 + OBJC_IVAR___WFSidebarViewController_isCompact);
  v41 = *(_QWORD *)(v29 + OBJC_IVAR___WFSidebarViewController_shortcutMoveService);
  v42 = type metadata accessor for SidebarView.DataSource(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  swift_retain(v41);
  sub_100051D3C(v51, v48, v26, (uint64_t)v32, v35, v40, v41, v43, v48, v49, v50, v51, v52[0], v52[1], v52[2], v53[0], v53[1], v53[2], v53[3],
    v53[4]);
  v45 = v44;
  ((void (*)(uint64_t, uint64_t))v39[1])(v38, v37);
  v46 = v45 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate;
  *(_QWORD *)(v46 + 8) = &off_1000C3578;
  swift_unknownObjectWeakAssign(v46, v29);
  return v45;
}

uint64_t sub_1000064AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D1100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s20LibrarySectionHeaderC13SectionHeaderVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  v8 = v5;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  v10 = *(_QWORD *)(a2 + 56);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

void sub_100006598(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t OpaqueTypeConformance2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  ValueMetadata *v76;
  uint64_t v77;
  unint64_t v78;

  v2 = v1;
  v74 = a1;
  v69 = sub_100012E2C(&qword_1000D42D8);
  __chkstk_darwin(v69);
  v73 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100012E2C(&qword_1000D42E0);
  v62 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v61 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100012E2C(&qword_1000D42E8);
  v64 = *(_QWORD *)(v72 - 8);
  v5 = __chkstk_darwin(v72);
  v60 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v63 = (char *)&v60 - v7;
  v8 = sub_100012E2C((uint64_t *)&unk_1000D42A0);
  __chkstk_darwin(v8);
  v71 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessibilityTraits(0);
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E2C(&qword_1000D42F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E2C(&qword_1000D42F8);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100012E2C(&qword_1000D4300);
  __chkstk_darwin(v67);
  v68 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[7];
  v21 = v2[8];
  if (v20)
  {
    v22 = swift_allocObject(&unk_1000C3A48, 32, 7);
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v21;
    v23 = sub_1000269F4;
  }
  else
  {
    v23 = 0;
    v22 = 0;
  }
  sub_1000123BC(v20, v21);
  v24 = sub_10000A798((uint64_t)v23, v22);
  *(_QWORD *)v15 = static VerticalAlignment.center.getter(v24);
  *((_QWORD *)v15 + 1) = 0x4018000000000000;
  v15[16] = 0;
  v25 = sub_100012E2C(&qword_1000D4308);
  sub_100007EAC(v2, v20 != 0, (uint64_t)&v15[*(int *)(v25 + 44)]);
  v27 = static Edge.Set.leading.getter(v26);
  v28 = EdgeInsets.init(_all:)(2.0);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10000D74C((uint64_t)v15, (uint64_t)v18, &qword_1000D42F0);
  v35 = &v18[*(int *)(v16 + 36)];
  *v35 = v27;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10001222C((uint64_t)v15, &qword_1000D42F0);
  static AccessibilityTraits.isHeader.getter();
  v36 = sub_100015718();
  v37 = (uint64_t)v68;
  View.accessibilityAddTraits(_:)(v12, v16, v36);
  (*(void (**)(char *, unint64_t))(v65 + 8))(v12, v66);
  sub_10001222C((uint64_t)v18, &qword_1000D42F8);
  if (v20)
  {
    v38 = swift_allocObject(&unk_1000C3A20, 88, 7);
    v39 = memcpy((void *)(v38 + 16), v2, 0x48uLL);
    __chkstk_darwin(v39);
    *(&v60 - 2) = (char *)v37;
    sub_1000040DC((uint64_t)v2);
    v66 = sub_100015620();
    v40 = v61;
    v41 = v67;
    Button.init(action:label:)(sub_10008B804, v38, sub_10008B828, &v60 - 4, v67, v66);
    sub_100004038(&qword_1000D4320, &qword_1000D42E0);
    v43 = v42;
    v44 = sub_1000152C4();
    v45 = v60;
    v46 = v37;
    v47 = v70;
    View.buttonStyle<A>(_:)(v44, v70, &type metadata for HeaderButtonStyle, v43, v44);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v47);
    v49 = v63;
    v48 = v64;
    v50 = v72;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v45, v72);
    v51 = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v73, v49, v50);
    swift_storeEnumTagMultiPayload(v51, v69, 0);
    v75 = v47;
    v37 = v46;
    v76 = &type metadata for HeaderButtonStyle;
    v77 = v43;
    v78 = v44;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v53 = (uint64_t)v71;
    _ConditionalContent<>.init(storage:)(v51, v50, v41, OpaqueTypeConformance2, v66);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  else
  {
    v54 = v73;
    sub_10000D74C(v37, v73, &qword_1000D4300);
    swift_storeEnumTagMultiPayload(v54, v69, 1);
    sub_100004038(&qword_1000D4320, &qword_1000D42E0);
    v56 = v55;
    v57 = sub_1000152C4();
    v75 = v70;
    v76 = &type metadata for HeaderButtonStyle;
    v77 = v56;
    v78 = v57;
    v58 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v59 = sub_100015620();
    v53 = (uint64_t)v71;
    _ConditionalContent<>.init(storage:)(v54, v72, v67, v58, v59);
  }
  sub_1000123CC(v53, v74, (uint64_t *)&unk_1000D42A0);
  sub_10001222C(v37, &qword_1000D4300);
}

void sub_100006B94()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  char *v24;
  void *v25;
  void *Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  uint64_t v42[3];

  v1 = type metadata accessor for RootNavigationDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WFLog.subscript.getter(WFLogCategoryGeneral);
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v39 = v1;
  if (v12)
  {
    v36 = v6;
    v37 = v4;
    v38 = v2;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v42[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (uint64_t)&v9[OBJC_IVAR___WFMainViewController_currentDestination];
    swift_beginAccess(&v9[OBJC_IVAR___WFMainViewController_currentDestination], v41, 0, 0);
    if (sub_100019D44(v15, 1, v1))
    {
      v16 = 0xE300000000000000;
      v17 = 7104878;
    }
    else
    {
      v34 = v14;
      v35 = v5;
      v19 = v37;
      v18 = v38;
      v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v15, v1);
      v17 = RootNavigationDestination.displayName.getter(v20);
      v16 = v21;
      v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v23 = v19;
      v14 = v34;
      v5 = v35;
      v22(v23, v1);
    }
    v40 = sub_100015868(v17, v16, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v13 + 4, v13 + 12);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Current destination changed to %{public}s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v5);
    v4 = v37;
    v2 = v38;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_10000D9FC();
  v25 = v24;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateLockObserver]);

  if (Strong)
  {
    v27 = (uint64_t)&v9[OBJC_IVAR___WFMainViewController_currentDestination];
    swift_beginAccess(&v9[OBJC_IVAR___WFMainViewController_currentDestination], v42, 0, 0);
    v28 = v39;
    v29 = 0;
    v30 = 0;
    if (!sub_100019D44(v27, 1, v39))
    {
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v27, v28);
      v29 = RootNavigationDestination.sidebarIdentifier.getter(v31);
      v30 = v32;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v28);
    }
    sub_100069358(v29, v30);

  }
}

void sub_100006ED4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  sub_1000115DC();
  if (!v0)
    return;
  v1 = v0;
  v2 = objc_allocWithZone((Class)UIBarButtonItem);
  sub_100045EFC();
  v4 = v3;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v33 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v33 = v1;
    swift_bridgeObjectRetain(v1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v1);
    if (v5)
      goto LABEL_4;
LABEL_22:
    swift_bridgeObjectRelease(v1);
    v34 = objc_allocWithZone((Class)type metadata accessor for FloatingToolbarViewController());
    sub_100005878((uint64_t)_swiftEmptyArrayStorage, 1);

    return;
  }
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_22;
LABEL_4:
  if (v5 >= 1)
  {
    v6 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v1);
      else
        v7 = *(id *)(v1 + 8 * v6 + 32);
      v8 = v7;
      if (v6)
      {
        v9 = v4;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9, v10, v11, v12, v13, v14, v15, v16);
        v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v9);
        specialized Array._endMutation()(v19, v20);
      }
      v21 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21, v22, v23, v24, v25, v26, v27, v28);
      v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v29 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
      ++v6;
      v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v21);
      specialized Array._endMutation()(v31, v32);

    }
    while (v5 != v6);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_1000070EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  type metadata accessor for UIListContentConfiguration.TextProperties(0);
  sub_100079E30();
  __chkstk_darwin(v14);
  v15 = type metadata accessor for UIListContentConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100026BF0();
  v17 = static UIListContentConfiguration.prominentInsetGroupedHeader()();
  UIListContentConfiguration.textProperties.getter(v17);
  v18 = sub_100079B54(v8, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v19 = (void *)UIListContentConfiguration.TextProperties.font.getter(v18);
  sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  objc_msgSend(v19, "pointSize");

  sub_100047E90(v20, (unint64_t *)&unk_1000D43D0, WFSymbolIcon_ptr);
  objc_opt_self(UIColor);
  v21 = swift_bridgeObjectRetain(a4);
  v22 = sub_100019EAC(v21, "tintColor");
  v23 = sub_100026D9C(objc_allocWithZone((Class)WFColor), "initWithPlatformColor:");

  v24 = objc_msgSend((id)objc_opt_self(WFColor), "clearColor");
  v25 = sub_100026D9C(objc_allocWithZone((Class)WFIconColorBackground), "initWithColor:");

  v26 = sub_100088644(a3, a4, v23, v25);
  sub_10000A0AC(a1, a2, v26, a5, a6, a7, a8);

}

id sub_1000072D8()
{
  void *v0;
  id v1;
  id result;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  CGRect v23;

  v1 = objc_msgSend(v0, "traitCollection");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "frame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v23.origin.x = v5;
    v23.origin.y = v7;
    v23.size.width = v9;
    v23.size.height = v11;
    Width = CGRectGetWidth(v23);
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v13 = result;
      objc_msgSend(result, "layoutMargins");
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v21 = v20;

      v22 = objc_msgSend((id)objc_opt_self(WFLibraryLayoutMetrics), "metricsCompatibleWithTraitCollection:viewWidth:layoutMargins:needsTopPadding:", v1, 1, Width, v15, v17, v19, v21);
      return v22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100007410()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  sub_100026FEC(v1, "setSearchResultsUpdater:");
  objc_msgSend(v1, "setObscuresBackgroundDuringPresentation:", 0);
  objc_msgSend(v1, "setHidesNavigationBarDuringPresentation:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_hidesNavigationBarDuringPresentation));
  v2 = sub_100069E24();
  objc_msgSend(v2, "setClipsToBounds:", 1);

  v3 = sub_100069E24();
  sub_100026FEC(v3, "setDelegate:");

  v4 = sub_100069E24();
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder + 8);
  swift_bridgeObjectRetain(v6);
  sub_100069D80(v5, v6, v4);

  sub_100068FF8();
  v7 = sub_100069E24();
  objc_msgSend(v7, "setLookToDictateEnabled:", 1);

  v8 = sub_100069E24();
  v9 = sub_1000695B8();
  sub_100069DC4(v9, v10, v8);

  return v1;
}

id sub_100007564(uint64_t a1)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = sub_100011544(v3);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  sub_100079640(v6, v8, 0, v2);
  v9 = objc_msgSend(v2, "titleLabel");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);

  }
  v11 = objc_msgSend(v2, "titleLabel");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v12, "setFont:", v13);

  }
  objc_msgSend(v2, "addTarget:action:forControlEvents:", a1, "startEditing", 64);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = objc_msgSend(v2, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintGreaterThanOrEqualToConstant:", 30.0);

  objc_msgSend(v15, "setActive:", 1);
  v16 = v2;
  sub_100073AC0((uint64_t)v2);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v16);

  return v17;
}

_QWORD *sub_10000778C(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[4];
  uint64_t v42;

  v2 = type metadata accessor for LibraryIndirectMenuDataSource();
  swift_allocObject(v2, 24, 7);
  v3 = a1;
  sub_100061A54(a1);
  v5 = v4;
  sub_100012A90();
  v7 = v6;
  v8 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database];
  v9 = &v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate]);
  v11 = *((_QWORD *)v9 + 1);
  v38 = 0;
  swift_unknownObjectWeakInit(&v37, 0);
  v33 = 0;
  v12 = v8;
  v13 = sub_100012E2C((uint64_t *)&unk_1000D3880);
  State.init(wrappedValue:)(v41, &v33, v13);
  v39 = v41[0];
  v40 = 0x403A000000000000;
  v14 = type metadata accessor for LibraryDataSource(0);
  sub_1000040A8(&qword_1000D2038, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  v36[0] = ObservedObject.init(wrappedValue:)(v7, v14, v15);
  v36[1] = v16;
  v36[2] = v12;
  v38 = v11;
  swift_unknownObjectWeakAssign(&v37, Strong);
  swift_unknownObjectRelease(Strong);
  KeyPath = swift_getKeyPath(&unk_10009AB30);
  v35[3] = v2;
  sub_1000040A8(&qword_1000D3890, (uint64_t (*)(uint64_t))type metadata accessor for LibraryIndirectMenuDataSource);
  v35[4] = v18;
  v35[0] = v5;
  sub_1000798BC((uint64_t)v35, (uint64_t)&v34, &qword_1000D3898);
  v33 = KeyPath;
  sub_10004B244(v36, v41);
  sub_1000798BC((uint64_t)&v33, (uint64_t)&v42, &qword_1000D38A0);
  swift_retain(v5);
  sub_100007AEC((uint64_t)&v33, &qword_1000D38A0);
  sub_1000798E8((uint64_t)v36);
  sub_100007AEC((uint64_t)v35, &qword_1000D3898);
  v19 = sub_100012E2C(&qword_1000D38A8);
  v20 = sub_10007991C();
  v21 = AnyView.init<A>(_:)(v41, v19, v20);
  v22 = objc_allocWithZone((Class)sub_100012E2C(&qword_1000D38C8));
  v23 = (_QWORD *)sub_100072B78(v21);
  *(_QWORD *)&v41[0] = *(_QWORD *)((char *)v23 + *(_QWORD *)(qword_1000DB138 + (swift_isaMask & *v23) + 16));
  v24 = *(_QWORD *)&v41[0];
  v25 = swift_allocObject(&unk_1000C3180, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v3);
  v26 = swift_allocObject(&unk_1000C33B0, 32, 7);
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = v23;
  swift_retain(v24);
  v27 = v23;
  v28 = sub_100012E2C((uint64_t *)&unk_1000D37F8);
  sub_100004038((unint64_t *)&unk_1000D38D0, (uint64_t *)&unk_1000D37F8);
  v30 = Publisher<>.sink(receiveValue:)(sub_1000799E0, v26, v28, v29);
  swift_release(v26);
  swift_release(*(_QWORD *)&v41[0]);
  v31 = &v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables];
  swift_beginAccess(v31, v41, 33, 0);
  AnyCancellable.store(in:)(v31);
  swift_endAccess(v41);
  swift_release(v30);
  swift_release(v5);
  return v27;
}

void sub_100007AEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_100012E2C(a2);
  v2 = sub_100079CCC();
  v3(v2);
  sub_100018188();
}

void sub_100007B18()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  objc_super v35;

  v35.receiver = v0;
  v35.super_class = (Class)sub_100026C10();
  objc_msgSendSuper2(&v35, "viewDidLoad");
  sub_10000DF98();
  v2 = v1;
  sub_100026FEC(v1, "setDelegate:");
  sub_100015140();
  v4 = (void *)v3;
  sub_10001ACF8(v3);
  v6 = v5;

  v7 = *(void **)&v0[OBJC_IVAR___WFMainViewController_splitView];
  objc_msgSend(v7, "setViewController:forColumn:", v6, 0);
  objc_msgSend(v7, "setViewController:forColumn:", v2, 3);
  v8 = sub_1000270BC(v0, "addChildViewController:");
  v9 = sub_100026DC4((uint64_t)v8, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_8;
  }
  v10 = v9;
  v11 = sub_100019D50((uint64_t)v9, "view");
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = v11;
  objc_msgSend(v11, "bounds");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  objc_msgSend(v10, "setFrame:", v14, v16, v18, v20);
  v22 = sub_100026DC4(v21, "view");
  if (!v22)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v23 = v22;
  objc_msgSend(v22, "setAutoresizingMask:", 18);

  v25 = sub_100019D50(v24, "view");
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v26 = v25;
  v27 = sub_100026DC4((uint64_t)v25, "view");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v26, "addSubview:", v27);

    v29 = sub_100026FEC(v7, "didMoveToParentViewController:");
    v30 = sub_100019D50((uint64_t)v29, "traitCollection");
    sub_10000500C();

    v31 = (uint64_t)&v0[OBJC_IVAR___WFMainViewController_initialDestination];
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026DE0(v31, v33, v32);
    v34 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v34, "addObserver:selector:name:object:", v0, "didBecomeActive:", UIApplicationDidBecomeActiveNotification, 0);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_100007DA8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100007DD4()
{
  uint64_t v0;

  sub_100007DE0(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100007DE0(void *a1, char a2)
{
  void *v4;
  char **v5;
  id v6;

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_tertiaryLabelColor;
  if ((a2 & 1) == 0)
    v5 = &selRef_systemBlueColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(a1, "setTintColor:", v6);

}

id sub_100007E58(id *a1)
{
  id v1;
  id result;
  double v3;

  v1 = *a1;
  result = objc_msgSend(*a1, "alpha");
  if (v3 == 0.5)
    return objc_msgSend(v1, "setAlpha:", 0.0);
  return result;
}

void sub_100007EAC(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  double v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t KeyPath;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[3];

  v100 = a2;
  v5 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  __chkstk_darwin(v5);
  v97 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIListContentConfiguration(0);
  v102 = *(_QWORD *)(v7 - 8);
  v103 = v7;
  __chkstk_darwin(v7);
  v101 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100012E2C(&qword_1000D4340);
  __chkstk_darwin(v95);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IconView.DisplayMode(0);
  v93 = *(_QWORD *)(v11 - 8);
  v94 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IconSize(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (double *)((char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for IconView(0);
  v96 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100012E2C(&qword_1000D4348);
  v22 = __chkstk_darwin(v21);
  v106 = (uint64_t)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (void *)a1[2];
  v104 = a3;
  v105 = (uint64_t)&v91 - v24;
  if (v25)
  {
    v26 = objc_opt_self(WFSymbolIcon);
    v27 = swift_dynamicCastObjCClass(v25, v26);
    v92 = a1;
    v28 = (double *)(a1 + 3);
    if (v27)
    {
      v29 = v27;
      v30 = round(*v28 * 1.35);
      *v17 = v30;
      v17[1] = v30;
      (*(void (**)(double *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for IconSize.custom(_:), v14);
      v31 = (void *)objc_opt_self(UIColor);
      v32 = v25;
      v33 = objc_msgSend(v31, "wf_accentColor");
      v34 = objc_msgSend(objc_allocWithZone((Class)WFColor), "initWithPlatformColor:", v33);

      *(_QWORD *)v13 = v34;
      v13[8] = 0;
      (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v13, enum case for IconView.DisplayMode.customColor(_:), v94);
      IconView.init(_:size:displayMode:animated:)(v29, v17, v13, 1);
      v35 = v96;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v10, v20, v18);
      v36 = v10;
      v37 = v95;
      v38 = 0;
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v28;
      (*(void (**)(double *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for IconSize.custom(_:), v14);
      (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v13, enum case for IconView.DisplayMode.default(_:), v94);
      v32 = v25;
      ((void (*)(void))IconView.init(_:size:displayMode:animated:))();
      v35 = v96;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v10, v20, v18);
      v36 = v10;
      v37 = v95;
      v38 = 1;
    }
    swift_storeEnumTagMultiPayload(v36, v37, v38);
    sub_1000040A8(&qword_1000D3F80, (uint64_t (*)(uint64_t))&type metadata accessor for IconView);
    v45 = v106;
    _ConditionalContent<>.init(storage:)(v10, v18, v18, v46, v46);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v18);
    v47 = sub_100012E2C((uint64_t *)&unk_1000D4350);
    sub_100015D74(v45, 0, 1, v47);
    sub_1000123CC(v45, v105, &qword_1000D4348);
    v41 = v100;
    v43 = v98;
    v42 = v99;
    v44 = v97;
    a1 = v92;
  }
  else
  {
    v39 = (char *)&v91 - v24;
    v40 = sub_100012E2C((uint64_t *)&unk_1000D4350);
    sub_100015D74((uint64_t)v39, 1, 1, v40);
    v41 = v100;
    v43 = v98;
    v42 = v99;
    v44 = v97;
  }
  v48 = a1[1];
  v107[0] = *a1;
  v107[1] = v48;
  v49 = sub_100014C08();
  swift_bridgeObjectRetain(v48);
  v50 = Text.init<A>(_:)(v107, &type metadata for String, v49);
  v52 = v51;
  v54 = v53;
  v56 = v55 & 1;
  v57 = v101;
  v58 = static UIListContentConfiguration.prominentInsetGroupedHeader()(v50);
  UIListContentConfiguration.textProperties.getter(v58);
  v59 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v57, v103);
  v60 = UIListContentConfiguration.TextProperties.font.getter(v59);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  v61 = Font.init(_:)(v60);
  v62 = Text.font(_:)(v61, v50, v52, v56, v54);
  v102 = v63;
  v103 = v64;
  v66 = v65;
  swift_release(v61);
  sub_1000085A4(v50, v52, v56);
  v67 = swift_bridgeObjectRelease(v54);
  v100 = static Edge.Set.leading.getter(v67);
  v68 = EdgeInsets.init(_all:)(1.0);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  if ((v41 & 1) != 0)
  {
    v101 = (char *)Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
    v75 = static HierarchicalShapeStyle.secondary.getter();
    v76 = static Font.callout.getter();
    static Font.Weight.semibold.getter();
    v77 = Font.weight(_:)(v76);
    swift_release(v76);
    KeyPath = swift_getKeyPath(&unk_10009B480);
    v79 = v75;
  }
  else
  {
    v101 = 0;
    v79 = 0;
    KeyPath = 0;
    v77 = 0;
  }
  v81 = v105;
  v80 = v106;
  v82 = v66 & 1;
  sub_10000D74C(v105, v106, &qword_1000D4348);
  v83 = v104;
  sub_10000D74C(v80, v104, &qword_1000D4348);
  v84 = sub_100012E2C((uint64_t *)&unk_1000D4360);
  v85 = v83 + *(int *)(v84 + 48);
  v86 = v102;
  *(_QWORD *)v85 = v62;
  *(_QWORD *)(v85 + 8) = v86;
  *(_BYTE *)(v85 + 16) = v66 & 1;
  v87 = v62;
  v88 = v103;
  *(_QWORD *)(v85 + 24) = v103;
  *(_BYTE *)(v85 + 32) = v100;
  *(double *)(v85 + 40) = v68;
  *(_QWORD *)(v85 + 48) = v70;
  *(_QWORD *)(v85 + 56) = v72;
  *(_QWORD *)(v85 + 64) = v74;
  *(_BYTE *)(v85 + 72) = 0;
  v89 = (_QWORD *)(v83 + *(int *)(v84 + 64));
  v90 = (uint64_t)v101;
  *v89 = v101;
  v89[1] = v79;
  v89[2] = KeyPath;
  v89[3] = v77;
  sub_100015610(v87, v86, v82);
  swift_bridgeObjectRetain(v88);
  sub_1000156A4(v90, v79, KeyPath, v77);
  sub_10001222C(v81, &qword_1000D4348);
  sub_1000156E0(v90, v79, KeyPath, v77);
  sub_1000085A4(v87, v86, v82);
  swift_bridgeObjectRelease(v88);
  sub_10001222C(v80, &qword_1000D4348);
}

uint64_t sub_1000085A4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

id sub_1000085B4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  id v19;
  id result;
  void *v21;
  id v22;
  id v23;
  NSString v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  UIMenuElementSize v42;
  id v43;
  Swift::String v44;
  Class isa;
  id v46;
  Swift::OpaquePointer v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t (*v50)(char *, char *, uint64_t);
  id v51;
  UIMenuElementSize v52;
  char v53[24];
  UIImage_optional v54;

  v2 = type metadata accessor for LibraryWorkflowCreationBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v48 - v7;
  v9 = type metadata accessor for LibraryConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  v13 = &a1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  swift_beginAccess(&a1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration], v53, 0, 0);
  v50 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 16);
  v14 = v50(v12, v13, v9);
  LibraryConfiguration.workflowCreationBehavior.getter(v14);
  v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  v15(v12, v9);
  v49 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v49(v6, enum case for LibraryWorkflowCreationBehavior.none(_:), v2);
  sub_1000040A8(&qword_1000D3868, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryWorkflowCreationBehavior);
  v17 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v2, v16);
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v6, v2);
  v18(v8, v2);
  v19 = 0;
  if ((v17 & 1) != 0)
    return v19;
  v48 = v15;
  result = objc_msgSend(v51, "view");
  if (result)
  {
    v21 = result;
    v22 = objc_msgSend(result, "effectiveUserInterfaceLayoutDirection");

    v23 = objc_msgSend((id)objc_opt_self(WFCustomSymbolToolbarButton), "buttonWithType:", 1);
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setSymbolName:pointSizeToWidthRatio:", v24, 1.7);

    v25 = 5.0;
    if (v22 == (id)1)
      v26 = 5.0;
    else
      v26 = 0.0;
    if (v22 == (id)1)
      v25 = 0.0;
    objc_msgSend(v23, "setImageEdgeInsets:", 0.0, v25, 0.0, v26);
    v27 = v51;
    objc_msgSend(v23, "addTarget:action:forControlEvents:", v51, "createWorkflow:", 64);
    v28 = v50(v12, v13, v9);
    LibraryConfiguration.workflowCreationBehavior.getter(v28);
    v48(v12, v9);
    v49(v6, enum case for LibraryWorkflowCreationBehavior.inRoot(_:), v2);
    v29 = static LibraryWorkflowCreationBehavior.== infix(_:_:)(v8, v6);
    v18(v6, v2);
    v18(v8, v2);
    if ((v29 & 1) != 0)
    {
      sub_100003B2C(0, (unint64_t *)&unk_1000D3870, UIDeferredMenuElement_ptr);
      v30 = swift_allocObject(&unk_1000C3180, 24, 7);
      swift_unknownObjectWeakInit(v30 + 16, v27);
      v31 = sub_100073958((uint64_t)sub_10007987C, v30);
      sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
      v32 = v23;
      v33 = String._bridgeToObjectiveC()();
      v34 = String._bridgeToObjectiveC()();
      v35 = sub_100011544(v33);

      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      v39 = sub_100012E2C((uint64_t *)&unk_1000D3690);
      v40 = swift_allocObject(v39, 40, 7);
      *(_OWORD *)(v40 + 16) = xmmword_100096F90;
      *(_QWORD *)(v40 + 32) = v31;
      v52 = v40;
      specialized Array._endMutation()(v40, v41);
      v42 = v52;
      v43 = v31;
      v44._countAndFlagsBits = v36;
      v44._object = v38;
      v54.value.super.isa = 0;
      v54.is_nil = 0;
      isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v54, 0, 0xFFFFFFFFFFFFFFFFLL, v42, v47).super.super.isa;
      objc_msgSend(v32, "setMenu:", isa);

    }
    v46 = v23;
    sub_1000733E4((uint64_t)v23);
    v19 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v46);

    return v19;
  }
  __break(1u);
  return result;
}

void sub_100008B0C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  int isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;

  sub_100018190();
  v66 = v1;
  v70 = v2;
  v3 = sub_100026B08();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10004248C();
  v64 = v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - v7;
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v9);
  sub_10004248C();
  v67 = v10;
  __chkstk_darwin(v11);
  v68 = v0;
  v69 = (char *)&v64 - v12;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR___WFSidebarViewController_sections);
  v14 = *(_QWORD *)(v13 + 16);
  v71 = v3;
  if (!v14)
  {
    v16 = _swiftEmptyArrayStorage;
LABEL_24:
    v34 = v16[2];
    if (v34)
    {
      v35 = (char *)v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v36 = *(_QWORD *)(v4 + 72);
      v37 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain(v16);
      while (1)
      {
        v38 = v37(v8, v35, v3);
        v39 = RootNavigationDestination.sidebarIdentifier.getter(v38);
        v41 = v40;
        v42 = RootNavigationDestination.sidebarIdentifier.getter(v39);
        if (v39 == v42 && v41 == v43)
          break;
        v45 = sub_10007D0E4(v39, v41, v42);
        sub_100030630();
        sub_100018420();
        if ((v45 & 1) != 0)
          goto LABEL_35;
        v3 = v71;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v71);
        v35 += v36;
        if (!--v34)
        {
          sub_100042A00();
          goto LABEL_33;
        }
      }
      sub_100042A00();
      sub_100030630();
LABEL_35:
      sub_100030630();
      v47 = (uint64_t)v69;
      v3 = v71;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v69, v8, v71);
      v46 = 0;
    }
    else
    {
LABEL_33:
      v46 = 1;
      v47 = (uint64_t)v69;
    }
    sub_100015D74(v47, v46, 1, v3);
    sub_100042A00();
    v48 = sub_100019D44(v47, 1, v3);
    sub_10000D778(v47, &qword_1000D1100);
    if (v48 == 1)
      goto LABEL_50;
    v49 = sub_1000037EC();
    KeyPath = swift_getKeyPath(&unk_10009ACC8);
    v51 = swift_getKeyPath(&unk_10009ACF0);
    v52 = v67;
    static Published.subscript.getter(v67, v49, KeyPath, v51);
    sub_100019D9C();
    swift_release(KeyPath);
    v53 = v71;
    swift_release(v51);
    if (sub_100019D44((uint64_t)v52, 1, v53))
    {
      v54 = sub_10000D778((uint64_t)v52, &qword_1000D1100);
      v55 = 0;
      v56 = 0;
    }
    else
    {
      v57 = v64;
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v4 + 16))(v64, v52, v53);
      v58 = sub_10000D778((uint64_t)v52, &qword_1000D1100);
      v55 = RootNavigationDestination.sidebarIdentifier.getter(v58);
      v56 = v59;
      v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v57, v53);
    }
    v60 = RootNavigationDestination.sidebarIdentifier.getter(v54);
    if (v56)
    {
      if (v55 == v60 && v56 == v61)
      {
        sub_100047F0C();
        sub_100018420();
        goto LABEL_50;
      }
      v63 = sub_10007D0E4(v55, v56, v60);
      sub_100047F0C();
      sub_100018420();
      if ((v63 & 1) != 0)
        goto LABEL_50;
    }
    else
    {
      sub_100018420();
    }
    sub_1000037EC();
    sub_100051550(v70, v66 & 1);
    sub_100019D9C();
LABEL_50:
    sub_100018094();
    return;
  }
  v65 = swift_bridgeObjectRetain(v13);
  v15 = (uint64_t *)(v65 + 40);
  v16 = _swiftEmptyArrayStorage;
  while (1)
  {
    v17 = *(v15 - 1);
    v18 = *v15;
    ObjectType = swift_getObjectType(v17);
    swift_unknownObjectRetain(v17);
    v20 = dispatch thunk of SidebarSection.destinations.getter(ObjectType, v18);
    swift_unknownObjectRelease(v17);
    v21 = *(_QWORD *)(v20 + 16);
    v22 = v16[2];
    v23 = v22 + v21;
    if (__OFADD__(v22, v21))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
    if (!isUniquelyReferenced_nonNull_native || v23 > v16[3] >> 1)
    {
      if (v22 <= v23)
        v25 = v22 + v21;
      else
        v25 = v22;
      v16 = (_QWORD *)sub_100008FCC(isUniquelyReferenced_nonNull_native, v25, 1, (uint64_t)v16);
    }
    if (*(_QWORD *)(v20 + 16))
    {
      v26 = v16[2];
      if ((v16[3] >> 1) - v26 < v21)
        goto LABEL_53;
      v27 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v28 = *(_QWORD *)(v4 + 72);
      v29 = (char *)v16 + v27 + v28 * v26;
      if (v20 + v27 < (unint64_t)&v29[v28 * v21] && (unint64_t)v29 < v20 + v27 + v28 * v21)
        goto LABEL_55;
      swift_arrayInitWithCopy(v29, v20 + v27, v21, v71);
      if (v21)
      {
        v31 = v16[2];
        v32 = __OFADD__(v31, v21);
        v33 = v31 + v21;
        if (v32)
          goto LABEL_54;
        v16[2] = v33;
      }
    }
    else if (v21)
    {
      goto LABEL_52;
    }
    sub_100018420();
    v15 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      v3 = v71;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
}

uint64_t sub_100008FCC(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100065764(a1, a2, a3, a4, &qword_1000D1248, (void (*)(_QWORD))&type metadata accessor for RootNavigationDestination);
}

uint64_t sub_100009398(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v11[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return 0;
  v8 = (void *)Strong;
  v9 = sub_100087BD4(a1, a2);

  return v9;
}

void sub_100009428(void *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;

  v3 = v1;
  objc_msgSend(a1, "addChildViewController:", v1);
  v5 = sub_10002DE40();
  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  v6 = v5;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v7 = sub_10002DE18();
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  v9 = sub_100026DBC((uint64_t)v7, *(const char **)(v2 + 520));
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v9;
  sub_1000271CC(v8, "addSubview:");

  v12 = sub_100026DBC(v11, *(const char **)(v2 + 520));
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "bottomAnchor");

  v15 = sub_10002DE18();
  if (!v15)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = objc_msgSend(v15, "bottomAnchor");
  sub_10002DE78();
  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", &selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_);

  sub_10002D56C((uint64_t)v17);
  v18 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v19 = sub_100026B2C(v18, 56);
  *(_OWORD *)(v19 + 16) = xmmword_100096F80;
  v20 = sub_100026DBC(v19, *(const char **)(v2 + 520));
  if (!v20)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "leadingAnchor");

  v23 = sub_10002DE18();
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "leadingAnchor");
  sub_100027568();
  v27 = sub_10002DE34(v26, "constraintEqualToAnchor:");
  sub_10002DE78();

  *(_QWORD *)(v19 + 32) = v24;
  v29 = sub_100026DBC(v28, *(const char **)(v2 + 520));
  if (!v29)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "trailingAnchor");

  v32 = sub_10002DE18();
  if (!v32)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "trailingAnchor");
  sub_100027568();
  v36 = sub_10002DE34(v35, "constraintEqualToAnchor:");
  sub_10002DE78();

  *(_QWORD *)(v19 + 40) = v33;
  v37 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint];
  if (v37)
  {
    v38 = (void *)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v19 + 48) = v37;
    sub_10002DE6C((uint64_t)v38, v39);
    v40 = (void *)sub_100003B2C(0, &qword_1000D1398, NSLayoutConstraint_ptr);
    v41 = v37;
    Array._bridgeToObjectiveC()();
    sub_10002DE88();
    sub_1000271CC(v38, "activateConstraints:");

    objc_msgSend(v3, "didMoveToParentViewController:", a1);
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_100009730(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  NSString *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  NSString v28;
  uint64_t v29;
  void *v30;
  NSString *v31;
  NSString v32;
  uint64_t v33;
  void *v34;
  NSString *v35;
  NSString v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;

  v2 = v1;
  v4 = type metadata accessor for LibraryCell();
  sub_10008C60C(v4);
  v5 = sub_100012E2C(&qword_1000D4430);
  sub_10008C390(v5, v6);
  v7 = sub_10008C5B0();
  sub_100047F0C();
  sub_10008C288();

  v8 = _s16EmptySectionCellCMa();
  sub_10008C60C(v8);
  v9 = sub_100012E2C(&qword_1000D4438);
  sub_10008C390(v9, v10);
  v11 = sub_10008C5B0();
  sub_100047F0C();
  sub_10008C288();

  v12 = _s10TopHitCellCMa();
  sub_10008C60C(v12);
  v13 = sub_100012E2C((uint64_t *)&unk_1000D4440);
  sub_10008C390(v13, v14);
  v15 = sub_10008C5B0();
  sub_100047F0C();
  sub_10008C288();

  v16 = _s17SectionHeaderViewCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v18 = UICollectionElementKindSectionHeader;
  v19 = sub_10008C598();
  objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v18, v19);

  v20 = _s21AppShortcutHeaderViewCMa();
  v21 = swift_getObjCClassFromMetadata(v20);
  v22 = v18;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v21, v22, v23);

  v25 = sub_100047E90(v24, &qword_1000D0AB8, UICollectionReusableView_ptr);
  v26 = swift_getObjCClassFromMetadata(v25);
  v27 = UICollectionElementKindSectionFooter;
  v28 = sub_10008C598();
  objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v26, v27, v28);

  v29 = _s27MiniTipCollectionHeaderViewCMa();
  swift_getObjCClassFromMetadata(v29);
  v30 = (void *)qword_1000D0620;
  v31 = v22;
  if (v30 != (void *)-1)
    swift_once(&qword_1000D0620, sub_100014DD0);
  v32 = String._bridgeToObjectiveC()();
  sub_10008C29C((uint64_t)v32);

  v33 = _s35SyncUnavailableCollectionHeaderViewCMa();
  v34 = (void *)qword_1000D0618;
  v35 = v31;
  if (v34 != (void *)-1)
    swift_once(&qword_1000D0618, sub_100048AD8);
  swift_getObjCClassFromMetadata(v33);
  v36 = String._bridgeToObjectiveC()();
  sub_10008C29C((uint64_t)v36);

  v37 = sub_10008C240((uint64_t)&unk_1000C3B10);
  sub_100079D60(v37);
  v38 = objc_allocWithZone((Class)sub_100012E2C((uint64_t *)&unk_1000D4450));
  v39 = a1;
  v40 = v38;
  UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v39, sub_100014470, v37);
  v41 = sub_10008C3F8();
  v42 = sub_10008C240(v41);
  sub_100079D60(v42);
  sub_100042B1C();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_100014618, v42);
  swift_release(v42);
  v43 = *(void **)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database];
  v44 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_shortcutMoveService];
  v45 = _s10DataSourceCMa(0);
  sub_100068E6C(v45);
  v46 = v2;
  v47 = v43;
  sub_100042B1C();
  return sub_100086B6C(v40, v46, (uint64_t)v47, v44);
}

uint64_t sub_100009AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v2 = type metadata accessor for SidebarStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E2C(&qword_1000D1210);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100096F70;
  v8 = type metadata accessor for MyShortcutsSidebarSection(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = MyShortcutsSidebarSection.init(name:)(0);
  sub_10000A060(&qword_1000D1218, (void (*)(uint64_t))&type metadata accessor for MyShortcutsSidebarSection);
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  v11 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_database);
  v12 = objc_msgSend(v11, "sortedVisibleFolders");
  v13 = type metadata accessor for FoldersSidebarSection(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = FoldersSidebarSection.init(folders:)(v12);
  sub_10000A060(&qword_1000D1220, (void (*)(uint64_t))&type metadata accessor for FoldersSidebarSection);
  *(_QWORD *)(v7 + 48) = v14;
  *(_QWORD *)(v7 + 56) = v15;
  v16 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
  v17 = type metadata accessor for AutoShortcutsSidebarSection(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = AutoShortcutsSidebarSection.init(dataSource:)(v16);
  sub_10000A060(&qword_1000D1228, (void (*)(uint64_t))&type metadata accessor for AutoShortcutsSidebarSection);
  *(_QWORD *)(v7 + 64) = v18;
  *(_QWORD *)(v7 + 72) = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for SidebarStyle.compact(_:), v2);
  v20 = v11;
  sub_10001A040();
  v22 = v21;
  v23 = (objc_class *)type metadata accessor for SidebarViewController(0);
  v24 = objc_allocWithZone(v23);
  sub_10007ACB0((uint64_t)v5, (uint64_t)v20, v22, (void *)v7, (void *)1);
  v26 = v25;
  sub_10000A060(&qword_1000D1040, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
  RootViewSidebar.setup(with:)(a1, v23, v27);
  return v26;
}

uint64_t sub_100009CF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v2 = type metadata accessor for SidebarStyle(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D1210);
  v6 = swift_allocObject(v5, 96, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100096F50;
  v7 = sub_100012E2C(&qword_1000D1248);
  v8 = type metadata accessor for RootNavigationDestination(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v7, v12 + 2 * v10, v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100096F60;
  v14 = v13 + v12;
  v15 = enum case for GalleryNavigationDestination.home(_:);
  v16 = type metadata accessor for GalleryNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  sub_100015D74(v14, 0, 1, v16);
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104);
  v17(v14, enum case for RootNavigationDestination.gallery(_:), v8);
  v17(v14 + v10, enum case for RootNavigationDestination.automations(_:), v8);
  v18 = type metadata accessor for StaticSidebarSection(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = StaticSidebarSection.init(name:destinations:)(0, 0, v13);
  sub_10000A060((unint64_t *)&unk_1000D1250, (void (*)(uint64_t))&type metadata accessor for StaticSidebarSection);
  *(_QWORD *)(v6 + 32) = v19;
  *(_QWORD *)(v6 + 40) = v20;
  v21 = type metadata accessor for MyShortcutsSidebarSection(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = MyShortcutsSidebarSection.init(name:)(1);
  sub_10000A060(&qword_1000D1218, (void (*)(uint64_t))&type metadata accessor for MyShortcutsSidebarSection);
  *(_QWORD *)(v6 + 48) = v22;
  *(_QWORD *)(v6 + 56) = v23;
  v24 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_database);
  v25 = objc_msgSend(v24, "sortedVisibleFolders");
  v26 = type metadata accessor for FoldersSidebarSection(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = FoldersSidebarSection.init(folders:)(v25);
  sub_10000A060(&qword_1000D1220, (void (*)(uint64_t))&type metadata accessor for FoldersSidebarSection);
  *(_QWORD *)(v6 + 64) = v27;
  *(_QWORD *)(v6 + 72) = v28;
  v29 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
  v30 = type metadata accessor for AutoShortcutsSidebarSection(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = AutoShortcutsSidebarSection.init(dataSource:)(v29);
  sub_10000A060(&qword_1000D1228, (void (*)(uint64_t))&type metadata accessor for AutoShortcutsSidebarSection);
  *(_QWORD *)(v6 + 80) = v31;
  *(_QWORD *)(v6 + 88) = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v4, enum case for SidebarStyle.column(_:), v43);
  v33 = v24;
  sub_10001A040();
  v35 = v34;
  v36 = (objc_class *)type metadata accessor for SidebarViewController(0);
  v37 = objc_allocWithZone(v36);
  sub_10007ACB0((uint64_t)v4, (uint64_t)v33, v35, (void *)v6, 0);
  v39 = v38;
  sub_10000A060(&qword_1000D1040, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
  RootViewSidebar.setup(with:)(a1, v36, v40);
  return v39;
}

void sub_10000A060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  if (!*a1)
  {
    a2(255);
    v3 = sub_1000276C0();
    atomic_store(swift_getWitnessTable(v3, v4), a1);
  }
  sub_100018188();
}

uint64_t type metadata accessor for MainViewController(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D0C48, (uint64_t)&nominal type descriptor for MainViewController);
}

uint64_t sub_10000A0AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Class isa;
  id v52;
  uint64_t v53;
  _QWORD v55[9];

  v8 = v7;
  v15 = OBJC_IVAR____TtCC9Shortcuts21LibraryViewController20LibrarySectionHeader_header;
  v16 = *(void **)&v7[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController20LibrarySectionHeader_header];
  if (v16 && (objc_msgSend(v16, "removeFromSuperview"), (v17 = *(void **)&v7[v15]) != 0))
  {
    sub_10008C4E8();
    v18 = a3;
    sub_10008C39C();
    sub_10008C2F0();
    v19 = v18;
    sub_10008C430();
    v20 = v17;
    dispatch thunk of _UIHostingView.rootView.setter(v55);

  }
  else
  {
    sub_10008C4E8();
    v21 = objc_allocWithZone((Class)sub_100012E2C(&qword_1000D43C8));
    v22 = a3;
    sub_10008C39C();
    sub_10008C2F0();
    v23 = v22;
    sub_10008C430();
    v24 = _UIHostingView.init(rootView:)(v55);
    sub_10008871C(v24);
  }
  v25 = *(void **)&v8[v15];
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v8, "addSubview:", v26);
    v52 = (id)objc_opt_self(NSLayoutConstraint);
    v27 = sub_100012E2C((uint64_t *)&unk_1000D3690);
    v28 = sub_100026B2C(v27, 64);
    *(_OWORD *)(v28 + 16) = xmmword_100097450;
    v53 = a7;
    v29 = sub_10008C478(v28, "leadingAnchor");
    v30 = objc_msgSend(v8, "layoutMarginsGuide");
    v31 = objc_msgSend(v30, "leadingAnchor");

    v32 = sub_100026D9C(v29, "constraintEqualToAnchor:");
    *(_QWORD *)(v28 + 32) = v32;
    v34 = sub_10008C478(v33, "trailingAnchor");
    v35 = sub_10008C480();
    v36 = objc_msgSend(v35, "trailingAnchor");

    v37 = sub_10008C4D8();
    sub_10008C57C();

    *(_QWORD *)(v28 + 40) = v35;
    v39 = sub_10008C478(v38, "topAnchor");
    v40 = sub_10008C480();
    v41 = objc_msgSend(v40, "topAnchor");

    v42 = sub_10008C4D8();
    sub_10008C57C();

    *(_QWORD *)(v28 + 48) = v40;
    v44 = sub_10008C478(v43, "bottomAnchor");
    v45 = objc_msgSend(v8, "layoutMarginsGuide");
    a7 = v53;
    v46 = objc_msgSend(v45, "bottomAnchor");

    v47 = objc_msgSend(v44, "constraintEqualToAnchor:", v46);
    sub_10008C57C();

    *(_QWORD *)(v28 + 56) = v45;
    v55[0] = v28;
    specialized Array._endMutation()(v48, v49);
    sub_100003B2C(0, &qword_1000D1398, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    sub_1000183D0();
    objc_msgSend(v52, "activateConstraints:", isa);
    swift_bridgeObjectRelease(a2);

  }
  else
  {
    swift_bridgeObjectRelease(a2);
  }

  sub_10000A798(a4, a5);
  return sub_10000A798(a6, a7);
}

void sub_10000A458()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  objc_super v43;

  v2 = v0;
  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  objc_msgSendSuper2(&v43, "viewDidLoad");
  v3 = *(void **)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_10002DE40();
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v7 = sub_100026B2C(v6, 64);
  *(_OWORD *)(v7 + 16) = xmmword_100097450;
  v8 = sub_100026DBC(v7, "leadingAnchor");
  v9 = sub_10002DE18();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = v9;
  v11 = sub_10002DE64(v9);
  sub_100027568();
  v13 = sub_100027650(v12, "leadingAnchor");
  sub_10002DE80();
  v14 = sub_10002DE24();
  sub_10002DE5C();

  *(_QWORD *)(v7 + 32) = v1;
  v16 = sub_100026DBC(v15, "topAnchor");
  v17 = sub_10002DE18();
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = v17;
  v19 = sub_10002DE64(v17);
  sub_100027568();
  v21 = sub_100027650(v20, "topAnchor");
  sub_10002DE80();
  v22 = sub_10002DE24();
  sub_10002DE5C();

  *(_QWORD *)(v7 + 40) = v1;
  v24 = sub_100026DBC(v23, "trailingAnchor");
  v25 = sub_10002DE18();
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v26 = v25;
  v27 = sub_10002DE64(v25);
  sub_100027568();
  v29 = sub_100027650(v28, "trailingAnchor");
  sub_10002DE80();
  v30 = sub_10002DE24();
  sub_10002DE5C();

  *(_QWORD *)(v7 + 48) = v1;
  v32 = sub_100026DBC(v31, "bottomAnchor");
  v33 = sub_10002DE18();
  if (v33)
  {
    v34 = v33;
    v35 = (void *)objc_opt_self(NSLayoutConstraint);
    v36 = sub_100027650((uint64_t)v35, "safeAreaLayoutGuide");

    v37 = objc_msgSend(v36, "bottomAnchor");
    v39 = sub_10002DE34(v38, "constraintEqualToAnchor:");

    *(_QWORD *)(v7 + 56) = v39;
    sub_10002DE6C(v40, v41);
    sub_100003B2C(0, &qword_1000D1398, NSLayoutConstraint_ptr);
    Array._bridgeToObjectiveC()();
    sub_10002DE88();
    sub_1000271CC(v35, "activateConstraints:");

    v42 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v42, "addObserver:selector:name:object:", v2, "keyboardWillChange:", WFKeyboardWillChangeNotification, 0);

    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_10000A798(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

id sub_10000A7A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  id v12;
  _BYTE v14[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (!Strong)
    return 0;
  v11 = (void *)Strong;
  v12 = sub_10000A83C(a1, a2, a3, a4);

  return v12;
}

id sub_10000A83C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(_QWORD, _QWORD, _QWORD);
  int v55;
  uint64_t v56;
  void *v57;
  NSString v58;
  NSString v59;
  Class isa;
  id v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t (*v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSString v84;
  NSString v85;
  Class v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  NSString v95;
  NSString v96;
  Class v97;
  id v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  NSString v103;
  NSString v104;
  Class v105;
  NSString v106;
  NSString v107;
  Class v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  double v113;
  double v114;
  double v115;
  double v116;
  id v117;
  id result;
  void *v119;
  double v120;
  double v121;
  void *v122;
  double v123;
  double v124;
  uint64_t v125;
  void (*v126)(uint64_t, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;

  v149 = a2;
  v150 = a3;
  v148 = a1;
  v131 = type metadata accessor for LibrarySectionOptions.Footer(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v138 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AutoShortcutApp(0);
  v136 = *(_QWORD *)(v7 - 8);
  v137 = v7;
  v8 = __chkstk_darwin(v7);
  v133 = v9;
  v134 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v135 = (char *)&v125 - v10;
  v11 = type metadata accessor for LibraryWorkflowCreationBehavior(0);
  v144 = *(_QWORD *)(v11 - 8);
  v145 = v11;
  v12 = __chkstk_darwin(v11);
  v143 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v142 = (char *)&v125 - v14;
  v15 = type metadata accessor for LibrarySectionOptions(0);
  v140 = *(_QWORD *)(v15 - 8);
  v141 = v15;
  __chkstk_darwin(v15);
  v139 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = (_QWORD *)type metadata accessor for LibrarySectionOptions.Header(0);
  v17 = *(v146 - 1);
  __chkstk_darwin(v146);
  v19 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100012E2C(&qword_1000D0AD0);
  __chkstk_darwin(v20);
  v22 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ShortcutsLibrarySection(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  v26 = __chkstk_darwin(v23);
  v132 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v125 - v28;
  v151 = v4;
  v30 = sub_100012A90(v27);
  v147 = a4;
  IndexPath.section.getter(v30);
  sub_100012D0C();
  v31 = v30;
  v32 = v23;
  swift_release(v31);
  if (sub_100019D44((uint64_t)v22, 1, v23) == 1)
  {
    sub_10001222C((uint64_t)v22, &qword_1000D0AD0);
    return 0;
  }
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v129 = v29;
  v126 = v34;
  v34((uint64_t)v29, v22, v23);
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v37 = v149;
  v38 = v150;
  v39 = v35 == v149 && v36 == v150;
  v40 = v24;
  v128 = v32;
  if (v39)
  {
    v43 = swift_bridgeObjectRelease(v150);
LABEL_16:
    v47 = v129;
    ShortcutsLibrarySection.header.getter(v43);
    v54 = (void (*)(_QWORD, _QWORD, _QWORD))v146;
    v55 = (*(uint64_t (**)(char *, _QWORD *))(v17 + 88))(v19, v146);
    v127 = v40;
    if (v55 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
    {
      (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v17 + 96))(v19, v54);
      v146 = *(_QWORD **)v19;
      v56 = *((_QWORD *)v19 + 1);
      v138 = *((_QWORD *)v19 + 2);
      v57 = (void *)*((_QWORD *)v19 + 3);
      v58 = String._bridgeToObjectiveC()();
      v59 = String._bridgeToObjectiveC()();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v61 = objc_msgSend(v148, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v58, v59, isa);

      v62 = _s17SectionHeaderViewCMa();
      v33 = (id)swift_dynamicCastClassUnconditional(v61, v62, 0, 0, 0);
      v63 = v139;
      v64 = ShortcutsLibrarySection.options.getter(v33);
      v65 = v142;
      LibrarySectionOptions.workflowCreationBehavior.getter(v64);
      (*(void (**)(char *, uint64_t))(v140 + 8))(v63, v141);
      v67 = v143;
      v66 = v144;
      v68 = v145;
      (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v143, enum case for LibraryWorkflowCreationBehavior.none(_:), v145);
      sub_1000040A8(&qword_1000D3868, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryWorkflowCreationBehavior);
      LOBYTE(isa) = dispatch thunk of static Equatable.== infix(_:_:)(v65, v67, v68, v69);
      v70 = *(void (**)(char *, uint64_t))(v66 + 8);
      v70(v67, v68);
      v70(v65, v68);
      v71 = 0;
      v72 = 0;
      v51 = v151;
      if ((isa & 1) == 0)
      {
        v73 = swift_allocObject(&unk_1000C3B10, 24, 7);
        swift_unknownObjectWeakInit(v73 + 16, v51);
        v74 = v127;
        v75 = v132;
        v76 = v47;
        v77 = v128;
        (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v132, v76, v128);
        v78 = *(unsigned __int8 *)(v74 + 80);
        v79 = (v78 + 24) & ~v78;
        v72 = swift_allocObject(&unk_1000C3B60, v79 + v25, v78 | 7);
        *(_QWORD *)(v72 + 16) = v73;
        v80 = v77;
        v47 = v129;
        v126(v72 + v79, v75, v80);
        v71 = sub_10008BE30;
      }
      sub_1000070EC((uint64_t)v146, v56, v138, v57, (uint64_t)v71, v72, 0, 0);
      sub_10000A798((uint64_t)v71, v72);
      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v57);
    }
    else if (v55 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
    {
      (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v17 + 96))(v19, v54);
      v81 = (uint64_t)v135;
      v82 = v136;
      v146 = *(_QWORD **)(v136 + 32);
      v83 = v137;
      ((void (*)(char *, char *, uint64_t))v146)(v135, v19, v137);
      v84 = String._bridgeToObjectiveC()();
      v85 = String._bridgeToObjectiveC()();
      v86 = IndexPath._bridgeToObjectiveC()().super.isa;
      v87 = objc_msgSend(v148, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v84, v85, v86);

      v88 = _s21AppShortcutHeaderViewCMa();
      v33 = (id)swift_dynamicCastClassUnconditional(v87, v88, 0, 0, 0);
      v89 = swift_allocObject(&unk_1000C3B10, 24, 7);
      v51 = v151;
      swift_unknownObjectWeakInit(v89 + 16, v151);
      v90 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v134, v81, v83);
      v91 = *(unsigned __int8 *)(v82 + 80);
      v92 = (v91 + 24) & ~v91;
      v93 = swift_allocObject(&unk_1000C3B38, v92 + v133, v91 | 7);
      *(_QWORD *)(v93 + 16) = v89;
      ((void (*)(uint64_t, char *, uint64_t))v146)(v93 + v92, v90, v83);
      swift_retain(v89);
      sub_100088728(v81, (uint64_t)sub_10008BDA4, v93);
      v94 = swift_release(v93);
      (*(void (**)(uint64_t, uint64_t, __n128))(v82 + 8))(v81, v83, v94);
      swift_release(v89);
    }
    else
    {
      v51 = v151;
      if (v55 == enum case for LibrarySectionOptions.Header.tip(_:))
      {
        v95 = String._bridgeToObjectiveC()();
        if (qword_1000D0620 != -1)
          swift_once(&qword_1000D0620, sub_100014DD0);
        v96 = String._bridgeToObjectiveC()();
        v97 = IndexPath._bridgeToObjectiveC()().super.isa;
        v98 = objc_msgSend(v148, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v95, v96, v97);

        v99 = _s27MiniTipCollectionHeaderViewCMa();
        v100 = (void *)swift_dynamicCastClass(v98, v99);
        if (!v100)

        v33 = sub_10008C634(v100);
        if (!v33)
          goto LABEL_41;
      }
      else
      {
        if (v55 != enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
        {
          (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v128);
          (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v17 + 8))(v19, v54);
          return 0;
        }
        v106 = String._bridgeToObjectiveC()();
        if (qword_1000D0618 != -1)
          swift_once(&qword_1000D0618, sub_100048AD8);
        v107 = String._bridgeToObjectiveC()();
        v108 = IndexPath._bridgeToObjectiveC()().super.isa;
        v109 = objc_msgSend(v148, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v106, v107, v108);

        v110 = _s35SyncUnavailableCollectionHeaderViewCMa();
        v111 = swift_dynamicCastClass(v109, v110);
        if (!v111)
        {

          v53 = *(void (**)(char *, uint64_t))(v127 + 8);
          goto LABEL_46;
        }
        v112 = (char *)v111;
        sub_100019CBC(v111);
        v33 = sub_10008BAF4((uint64_t)v51, v112, v113, v114, v115, v116);

      }
    }
    goto LABEL_38;
  }
  v41 = v36;
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v149, v150, 0);
  v43 = swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
    goto LABEL_16;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v46 = v44 == v37 && v45 == v38;
  v47 = v129;
  if (v46)
  {
    v50 = swift_bridgeObjectRelease(v38);
    v51 = v151;
    v52 = v138;
  }
  else
  {
    v48 = v45;
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v37, v38, 0);
    v50 = swift_bridgeObjectRelease(v48);
    v51 = v151;
    v52 = v138;
    if ((v49 & 1) == 0)
    {
      v53 = *(void (**)(char *, uint64_t))(v40 + 8);
LABEL_46:
      v53(v47, v128);
      return 0;
    }
  }
  ShortcutsLibrarySection.footer.getter(v50);
  v101 = v130;
  v102 = v131;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v130 + 88))(v52, v131) != enum case for LibrarySectionOptions.Footer.spacer(_:))
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v128);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v52, v102);
    return 0;
  }
  v127 = v40;
  v103 = String._bridgeToObjectiveC()();
  v104 = String._bridgeToObjectiveC()();
  v105 = IndexPath._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v148, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v103, v104, v105);

  if (!v33)
  {
LABEL_41:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v47, v128);
    return v33;
  }
LABEL_38:
  v117 = v33;
  result = objc_msgSend(v51, "view");
  if (result)
  {
    v119 = result;
    objc_msgSend(result, "layoutMargins");
    v121 = v120;

    result = objc_msgSend(v51, "view");
    if (result)
    {
      v122 = result;
      objc_msgSend(result, "layoutMargins");
      v124 = v123;

      objc_msgSend(v117, "setLayoutMargins:", 0.0, v121, 0.0, v124);
      goto LABEL_41;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10000B398()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  char v24[24];
  char v25[24];
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v0;
  v3 = sub_100012E2C(&qword_1000D10D0);
  __chkstk_darwin(v3);
  sub_1000184A0();
  v4 = type metadata accessor for TipType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LibraryConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  sub_100026D70((uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip], (uint64_t)v25);
  sub_10008D81C(v12, (uint64_t)&v28);
  if (v29)
  {
    sub_10008D970(&v28, (uint64_t)&v26);
  }
  else
  {
    v13 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
    sub_100026D70((uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration], (uint64_t)v24);
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v8);
    LibraryConfiguration.tipType.getter(v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_10002E054(*(void **)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database], (uint64_t)&v26);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10008DAC8((uint64_t)&v28, &qword_1000D3910);
  }
  if (v27)
  {
    sub_10008D970(&v26, (uint64_t)&v28);
    if ((byte_1000DADD0 & 1) == 0)
      sub_10002DE94();
    sub_10008DB44();
    sub_10005E630(v12, (uint64_t)v23);
    sub_10008D8EC((uint64_t)&v26, v12);
    swift_endAccess(v23);
    v15 = v29;
    v16 = v30;
    sub_10001465C(&v28, v29);
    v17 = Tip.shouldDisplay.getter(v15, v16);
    v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation];
    sub_10008DB44();
    if (v18)
    {
      swift_retain(v18);
    }
    else
    {
      v19 = type metadata accessor for TaskPriority(0);
      sub_100015D74(v1, 1, 1, v19);
      sub_10008D988((uint64_t)&v26, (uint64_t)v23);
      type metadata accessor for MainActor(0);
      v20 = v2;
      v21 = static MainActor.shared.getter();
      v22 = swift_allocObject(&unk_1000C3CD0, 88, 7);
      *(_QWORD *)(v22 + 16) = v21;
      *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
      sub_10008D970(v23, v22 + 32);
      *(_BYTE *)(v22 + 72) = v17 & 1;
      *(_QWORD *)(v22 + 80) = v20;
      v18 = sub_10005F17C(v1, (uint64_t)&unk_1000D4538, v22);
    }
    sub_10000B6E4(&v26);
    sub_100074240(v18);
    sub_10000B6E4(&v28);
  }
  else
  {
    sub_10008DAC8((uint64_t)&v26, &qword_1000D3910);
  }
  sub_100018094();
}

uint64_t sub_10000B680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_100012E2C(&qword_1000D13F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_100012E2C(&qword_1000D13B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_10000B6E4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10000B704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  _BYTE v9[24];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v2 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip;
  sub_100026D70(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip, (uint64_t)v9);
  sub_10008D81C(v2, (uint64_t)v10);
  v3 = v11;
  if (v11)
  {
    v4 = v12;
    v5 = sub_10001465C(v10, v11);
    v6 = *(_QWORD *)(v3 - 8);
    __chkstk_darwin(v5);
    sub_1000184A0();
    (*(void (**)(uint64_t))(v6 + 16))(v1);
    sub_10008DAC8((uint64_t)v10, &qword_1000D3910);
    v7 = Tip.shouldDisplay.getter(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v3);
  }
  else
  {
    sub_10008DAC8((uint64_t)v10, &qword_1000D3910);
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_10000B7FC(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1000143E4(&qword_1000D13D0);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10000B864(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100012E2C(&qword_1000D13F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_100012E2C(&qword_1000D13B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

void sub_10000B954(const char **a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)sub_1000273E4();
  sub_100079EA8((uint64_t)v9.super_class, *a1, v3, v4, v5, v6, v7, v8, v9);
  sub_1000752B8();
  sub_1000270C4();
}

uint64_t type metadata accessor for LibraryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D3758;
  if (!qword_1000D3758)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryViewController);
  return result;
}

void sub_10000B9BC()
{
  uint64_t v0;

  sub_10000B9C4(v0);
}

void sub_10000B9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10000BA14();

  }
}

void sub_10000BA14()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  _BOOL4 v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  id v35;
  id v36;
  id v37;
  id v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t i;
  id v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  id v91;
  _QWORD v92[4];
  double v93;
  _QWORD v94[11];
  _QWORD v95[11];
  _QWORD v96[11];
  _QWORD v97[9];
  id v98;
  _OWORD v99[4];
  uint64_t v100;
  _QWORD v101[3];
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[11];
  _QWORD v107[11];
  _QWORD v108[11];
  _QWORD v109[11];
  __int128 v110;
  id v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[11];
  _QWORD v119[11];
  _QWORD v120[11];
  id v121;
  __int128 v122;
  id v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD v130[2];
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD v138[4];
  uint64_t v139;
  id v140;
  uint64_t v141;
  _OWORD v142[2];
  CGFloat v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  CGRect v148;
  CGRect v149;

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
    goto LABEL_55;
  v3 = v2;
  objc_msgSend(v2, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v148.origin.x = v5;
  v148.origin.y = v7;
  v148.size.width = v9;
  v148.size.height = v11;
  Width = CGRectGetWidth(v148);
  sub_100012AF4(v92);
  sub_100012E6C(v92);
  v13 = Width != v93;
  if (Width != v93)
  {
    v14 = objc_msgSend(v1, "view");
    if (!v14)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v15 = v14;
    objc_msgSend(v14, "frame");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;

    v149.origin.x = v17;
    v149.origin.y = v19;
    v149.size.width = v21;
    v149.size.height = v23;
    v24 = CGRectGetWidth(v149);
    sub_100012AF4(v94);
    v142[0] = *(_OWORD *)v94;
    v142[1] = *(_OWORD *)&v94[2];
    v143 = v24;
    v144 = *(_OWORD *)&v94[5];
    v145 = *(_OWORD *)&v94[7];
    v146 = v94[9];
    v147 = v94[10];
    sub_100073060((uint64_t)v142);
  }
  sub_100012AF4(v95);
  sub_100012E6C(v95);
  v25 = objc_msgSend(v1, "view");
  if (!v25)
    goto LABEL_56;
  v26 = v25;
  v27 = *(double *)&v95[6];
  objc_msgSend(v25, "layoutMargins");
  v29 = v28;

  if (v27 != v29)
    goto LABEL_9;
  sub_100012AF4(v96);
  sub_100012E6C(v96);
  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_59:
    __break(1u);
    return;
  }
  v31 = v30;
  v32 = *(double *)&v96[8];
  objc_msgSend(v30, "layoutMargins");
  v34 = v33;

  if (v32 != v34)
LABEL_9:
    v13 = 1;
  v35 = objc_msgSend(v1, "traitCollection");
  sub_100012AF4(v97);
  v36 = v98;
  v37 = v98;
  sub_100012E6C(v97);
  if (v35)
  {
    if (v36)
    {
      sub_100003B2C(0, (unint64_t *)&unk_1000D0AC0, UITraitCollection_ptr);
      v38 = v35;
      v39 = static NSObject.== infix(_:_:)(v38, v37);

      if ((v39 & 1) != 0)
        goto LABEL_19;
LABEL_18:
      v40 = objc_msgSend(v1, "traitCollection");
      sub_100012AF4(v99);
      v41 = v101[1];
      v42 = v100;
      v89 = v99[2];
      v90 = v99[3];
      v87 = v99[1];
      v88 = v99[0];
      sub_100014B7C((uint64_t)v101, (uint64_t)&v121);
      sub_100014B54(&v121);
      v138[0] = v88;
      v138[1] = v87;
      v138[2] = v89;
      v138[3] = v90;
      v139 = v42;
      v140 = v40;
      v141 = v41;
      sub_100073060((uint64_t)v138);
      v13 = 1;
      goto LABEL_19;
    }
    v37 = v35;
LABEL_17:

    goto LABEL_18;
  }
  if (v36)
    goto LABEL_17;
LABEL_19:
  v43 = objc_msgSend(v1, "view", v87, v88, v89);
  if (!v43)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v44 = v43;
  objc_msgSend(v43, "layoutMargins");
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;

  sub_100012AF4(v102);
  v130[0] = v102[0];
  v130[1] = v102[1];
  v131 = v103;
  v132 = v46;
  v133 = v48;
  v134 = v50;
  v135 = v52;
  v136 = v104;
  v137 = v105;
  sub_100073060((uint64_t)v130);
  if (!v13)
    return;
  v53 = sub_1000072D8();
  sub_100012AF4(v106);
  v54 = (id)v106[3];
  sub_100012E6C(v106);
  objc_msgSend(v53, "sectionInset");
  objc_msgSend(v54, "setSectionInset:");

  sub_100012AF4(v107);
  v55 = (id)v107[3];
  sub_100012E6C(v107);
  objc_msgSend(v53, "interitemSpacing");
  objc_msgSend(v55, "setMinimumInteritemSpacing:");

  sub_100012AF4(v108);
  v56 = (id)v108[3];
  sub_100012E6C(v108);
  objc_msgSend(v53, "lineSpacing");
  objc_msgSend(v56, "setMinimumLineSpacing:");

  sub_100012AF4(v109);
  v57 = (id)v109[3];
  sub_100012E6C(v109);
  objc_msgSend(v53, "workflowSize");
  objc_msgSend(v57, "setItemSize:");

  v58 = v53;
  sub_100012AF4(&v110);
  v59 = v117;
  v60 = v116;
  v61 = v115;
  v62 = v112;

  v122 = v110;
  v123 = v58;
  v124 = v62;
  v125 = v113;
  v126 = v114;
  v127 = v61;
  v128 = v60;
  v129 = v59;
  sub_100073060((uint64_t)&v122);
  sub_100012AF4(v118);
  v63 = (id)v118[3];
  sub_100012E6C(v118);
  v64 = objc_msgSend(v63, "collectionView");

  if (v64)
  {
    v91 = v58;
    v65 = objc_msgSend(v64, "visibleCells");
    v66 = sub_100003B2C(0, &qword_1000D0AB0, UICollectionViewCell_ptr);
    v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v65, v66);

    if ((unint64_t)v67 >> 62)
    {
      if (v67 < 0)
        v85 = v67;
      else
        v85 = v67 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v67);
      v68 = _CocoaArrayWrapper.endIndex.getter(v85);
      swift_bridgeObjectRelease(v67);
      if (!v68)
        goto LABEL_32;
    }
    else
    {
      v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v68)
        goto LABEL_32;
    }
    if (v68 < 1)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    for (i = 0; i != v68; ++i)
    {
      if ((v67 & 0xC000000000000001) != 0)
        v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v67);
      else
        v70 = *(id *)(v67 + 8 * i + 32);
      v71 = v70;
      v72 = type metadata accessor for LibraryCell();
      if (swift_dynamicCastClass(v71, v72))
      {
        v73 = v71;
        sub_100012AF4(v119);
        v74 = (id)v119[2];
        sub_100012E6C(v119);
        sub_10008A1D0(v74);

      }
    }
LABEL_32:
    swift_bridgeObjectRelease(v67);
    v75 = objc_msgSend(v64, "visibleSupplementaryViewsOfKind:", UICollectionElementKindSectionHeader);
    v76 = sub_100003B2C(0, &qword_1000D0AB8, UICollectionReusableView_ptr);
    v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, v76);

    if ((unint64_t)v77 >> 62)
    {
      if (v77 < 0)
        v86 = v77;
      else
        v86 = v77 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v77);
      v78 = _CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(v77);
      if (v78)
      {
LABEL_34:
        if (v78 >= 1)
        {
          v79 = 0;
          do
          {
            if ((v77 & 0xC000000000000001) != 0)
              v80 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v79, v77);
            else
              v80 = *(id *)(v77 + 8 * v79 + 32);
            v81 = v80;
            ++v79;
            sub_100019B88((uint64_t)v80);
            objc_msgSend(v81, "setLayoutMargins:", 0.0);

          }
          while (v78 != v79);
          goto LABEL_40;
        }
        goto LABEL_54;
      }
    }
    else
    {
      v78 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v78)
        goto LABEL_34;
    }
LABEL_40:

    swift_bridgeObjectRelease(v77);
    v58 = v91;
  }
  sub_100012AF4(v120);
  v82 = (id)v120[3];
  sub_100012E6C(v120);
  objc_msgSend(v82, "invalidateLayout");

  v84 = sub_100012A90(v83);
  sub_10000C9A0();

  swift_release(v84);
}

char *sub_10000C254()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  uint64_t KeyPath;
  uint64_t v20;
  void *v21;
  objc_super v23;

  sub_10008C330();
  type metadata accessor for ShortcutChiclet.Model.Metrics(0);
  sub_100018034();
  __chkstk_darwin(v2);
  sub_100026BF0();
  sub_100012E2C(&qword_1000D4398);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_10001827C();
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_hostingView] = 0;
  v4 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_model;
  v5 = sub_10008C62C();
  sub_100026B84(v1, v6, v7, v5);
  v8 = v0;
  static ShortcutChiclet.Model.Metrics.default.getter();
  v9 = type metadata accessor for ShortcutChiclet.Model(0);
  sub_100068E6C(v9);
  *(_QWORD *)&v0[v4] = sub_10008C24C();
  v10 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_progress;
  v11 = type metadata accessor for ShortcutChiclet.Progress(0);
  v12 = (void *)sub_100068E6C(v11);
  *(_QWORD *)&v8[v10] = ShortcutChiclet.Progress.init()();
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut] = 0;
  v13 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_associatedBundleId];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_layoutMetrics] = 0;
  sub_10008C420(OBJC_IVAR____TtC9Shortcuts11LibraryCell_delegate);
  v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled] = 0;
  v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isJiggling] = 0;
  v14 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  sub_10008C524(OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect);
  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for LibraryCell();
  sub_10008C274(&v23, "initWithFrame:");
  v16 = objc_allocWithZone((Class)UIPointerInteraction);
  v17 = (char *)sub_100027640();
  v18 = sub_100026D9C(v12, "initWithDelegate:");
  sub_10008C2E4((uint64_t)objc_msgSend(v17, "addInteraction:", v18), "setClipsToBounds:");
  KeyPath = swift_getKeyPath(&unk_10009B4B8);
  v20 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100007E58, 0, &protocol witness table for NSObject);
  swift_release(KeyPath);

  v21 = *(void **)&v17[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation];
  *(_QWORD *)&v17[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation] = v20;

  return v17;
}

void sub_10000C4A4(char a1, double a2)
{
  void *v2;
  void *v5;
  void *v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  CGRect v13;

  sub_10000C98C();
  v6 = v5;
  objc_msgSend(v5, "contentInset");

  if ((a1 & 1) == 0)
  {
    sub_100014270();
    if (v7)
    {
      v8 = v7;
      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar], "frame");
      CGRectGetHeight(v13);

    }
  }
  if (a2 > 0.0)
  {
    sub_10000C98C();
    v10 = v9;
    objc_msgSend(v9, "safeAreaInsets");

  }
  v11 = objc_msgSend(v2, "contentScrollViewForEdge:", 4);
  if (v11)
  {
    v12 = v11;
    sub_100047E60(v11, "setContentInset:");
    sub_100047E60(v12, "setScrollIndicatorInsets:");

  }
}

void sub_10000C5DC(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void (*v32)(void);
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;

  v3 = v1;
  sub_10000C98C();
  v6 = objc_msgSend(v5, "superview");
  sub_100079D98();

  if (v2)
  {
    sub_10000C98C();
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

    goto LABEL_5;
  }
  sub_10001507C();
  v10 = sub_100079D8C(v9);
  sub_100071E84();
  if (v1)
  {
    v12 = sub_100019D50(v11, "superview");
    sub_100079D98();

LABEL_5:
    if ((a1 & 1) != 0)
    {
      sub_100012A90();
      v31 = sub_1000507EC();
      v32 = (void (*)(void))method lookup function for LibraryDataSource(v31, &method descriptor for LibraryDataSource.selectedWorkflowIds.getter);
      v32();
      sub_100019D9C();
      sub_10000CFB4();
      sub_100047F0C();
      sub_10000C98C();
      v28 = v33;
      objc_msgSend(v33, "wf_scrollToTopAnimated:", 0);

      sub_100079B5C();
      objc_msgSend(v34, "setAutoresizingMask:", 18);

      sub_100079B5C();
      v36 = sub_100019EAC(v35, "view");
      if (v36)
      {
        objc_msgSend(v36, "bounds");
        sub_100079BEC();
        sub_100079D1C(v37, "setFrame:");

        v39 = sub_100019EAC(v38, "view");
        if (v39)
        {
          v40 = v39;
          sub_100079B5C();
          sub_100079E70(v41, "insertSubview:atIndex:");

          sub_100047E10();
          sub_100079E50();
          sub_100019D9C();
          sub_100079B5C();
          goto LABEL_13;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    sub_10001507C();
    v14 = sub_100079FEC(v13);
    sub_1000270D0();
    if (v3)
    {
      objc_msgSend(v3, "setAutoresizingMask:", 18);

      sub_10001507C();
      v16 = sub_100079FEC(v15);
      sub_1000270D0();
      v18 = sub_100019EAC(v17, "view");
      if (v18)
      {
        objc_msgSend(v18, "bounds");
        sub_100079BEC();
        sub_100079D1C(v19, "setFrame:");

        v21 = sub_100019EAC(v20, "view");
        if (v21)
        {
          v22 = v21;
          sub_10001507C();
          v24 = sub_100079D8C(v23);
          sub_100071E84();
          sub_100079E70(v25, "insertSubview:atIndex:");

          sub_10001507C();
          v27 = (void *)v26;
          sub_100079D80(v26, "addChildViewController:");

          sub_100047E10();
          sub_100079E50();
          sub_100019D9C();
          v28 = v3;
          sub_10001507C();
          v30 = objc_msgSend(v29, "contentScrollViewForEdge:", 1);
          sub_1000270D0();
LABEL_13:
          objc_msgSend(v3, "setContentScrollView:forEdge:", v28, 15);

          v43 = sub_100019EAC(v42, "isEditing");
          sub_10000C4A4(v43 ^ 1, 0.0);
          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    __break(1u);
    goto LABEL_17;
  }
LABEL_19:
  __break(1u);
  __break(1u);
}

void sub_10000C944(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    v4 = (void *)a2(v2);
    sub_100027600(v4);
    sub_100027368();
    v3 = 0;
  }
  v5 = v3;
  sub_100018388();
}

void sub_10000C98C()
{
  sub_10000C944(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_100005E8C);
}

void sub_10000C9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t (*v24)(void);
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t);
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id Strong;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[15];
  uint64_t v99;
  uint64_t v100;

  sub_100018190();
  v99 = v3;
  v100 = v4;
  v6 = v5;
  v8 = v7;
  v95 = ((uint64_t (*)(_QWORD))type metadata accessor for LibrarySectionOptions.Header)(0);
  v88 = *(_QWORD *)(v95 - 8);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_10004248C();
  v94 = v10;
  sub_100042654();
  __chkstk_darwin(v11);
  v93 = (char *)&v73 - v12;
  v92 = type metadata accessor for LibrarySectionOptions(0);
  v87 = *(_QWORD *)(v92 - 8);
  sub_100018044();
  __chkstk_darwin(v13);
  sub_10008C3C0(v14, v73);
  v15 = sub_100019EFC();
  v89 = *(_QWORD *)(v15 - 8);
  sub_100018044();
  __chkstk_darwin(v16);
  sub_100018548();
  v97 = v17;
  v18 = sub_100012E2C(&qword_1000D1EB0);
  sub_100079E30();
  __chkstk_darwin(v19);
  sub_100018458();
  v78 = sub_100012E2C((uint64_t *)&unk_1000D43E0);
  v20 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  sub_100018548();
  v79 = v21;
  if ((v6 & 1) == 0 && (*(uint64_t *)(v0 + qword_1000D3FC0) > 0 || *(_BYTE *)(v0 + qword_1000D3FE8) == 1))
  {
    sub_100087810();
    return;
  }
  v22 = sub_1000507EC();
  v23 = (void (*)(_QWORD, _QWORD))method lookup function for LibraryDataSource(v22, &method descriptor for LibraryDataSource.reload(animated:force:));
  v23(v8 & 1, v6 & 1);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v0 + qword_1000D3FD0);
  if (Strong)
  {
    v24 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v22, &method descriptor for LibraryDataSource.layoutMode.getter);
    v25 = v24();
    v26 = LibraryLayoutMode.rawValue.getter(v25 & 1);
    v28 = v27;
    v29 = LibraryLayoutMode.rawValue.getter(1);
    if (v26 == v29 && v28 == v30)
    {
      sub_10008C614();
    }
    else
    {
      v32 = sub_100068E08(v26, v28, v29, v30);
      sub_1000183D0();
      sub_100018420();
      if ((v32 & 1) == 0)
      {
LABEL_33:
        v72 = Strong;
        sub_10000FC34();

        goto LABEL_34;
      }
    }
    v33 = v18;
    v34 = sub_1000732C0();
    v35 = ((uint64_t (*)(void *, void *, void *, void *))NSDiffableDataSourceSnapshot.init())(&type metadata for String, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    dispatch thunk of LibraryDataSource.sortedSections.getter(v35);
    v36 = ((uint64_t (*)(uint64_t))OrderedDictionary.values.getter)(v33);
    sub_100026C54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (!*(_QWORD *)(v36 + 16))
    {
      sub_1000183D0();
LABEL_32:
      v71 = v79;
      ((void (*)(uint64_t, _QWORD, _QWORD, _QWORD))dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:))(v79, v8 & 1, 0, 0);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v71, v78);
      goto LABEL_33;
    }
    v75 = v20;
    v76 = v8;
    sub_100047E74();
    v74 = v36;
    v39 = v36 + v38;
    v41 = *(_QWORD *)(v40 + 72);
    v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
    v84 = v41;
    v82 = enum case for LibrarySectionOptions.Header.tip(_:);
    v80 = enum case for LibrarySectionOptions.Header.syncUnavailable(_:);
    v77 = xmmword_100096E80;
    v85 = v15;
    v86 = v0;
    v81 = v34;
    while (1)
    {
      v96 = v37;
      v83(v97, v39, v15);
      v42 = v91;
      sub_10008C5A4();
      sub_1000879B0(v42, v34 & 1);
      v43 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
      v43(v42, v92);
      v44 = sub_10008C5A4();
      v45 = v34;
      v46 = (uint64_t)v93;
      ((void (*)(uint64_t))LibrarySectionOptions.header.getter)(v44);
      v47 = sub_100026FE0();
      ((void (*)(uint64_t))v43)(v47);
      v48 = *(void (**)(uint64_t, _QWORD, uint64_t))(v88 + 104);
      v49 = v94;
      v48(v94, v82, v95);
      v50 = sub_10008C564();
      sub_10008C470(v49);
      v51 = sub_10008C470(v46);
      if ((v50 & 1) != 0)
      {
        v51 = sub_10000B704();
        if ((v45 & 1) == 0)
          goto LABEL_23;
        v52 = v51;
        v34 = v45;
      }
      else
      {
        if ((v45 & 1) == 0)
          goto LABEL_23;
        v34 = v45;
        v52 = 0;
      }
      v53 = ((uint64_t (*)(void))ShortcutsLibrarySection.items.getter)();
      v54 = *(_QWORD *)(v53 + 16);
      v51 = swift_bridgeObjectRelease(v53);
      if (v54 || (v52 & 1) != 0)
      {
LABEL_23:
        v55 = v91;
        v56 = ((uint64_t (*)(uint64_t))ShortcutsLibrarySection.options.getter)(v51);
        v57 = (uint64_t)v93;
        ((void (*)(uint64_t))LibrarySectionOptions.header.getter)(v56);
        v43(v55, v92);
        v59 = v94;
        v58 = v95;
        v48(v94, v80, v95);
        LOBYTE(v55) = sub_10008C564();
        sub_10008C470(v59);
        sub_10008C470(v57);
        if ((v55 & 1) != 0
          && ((objc_msgSend(objc_msgSend(Strong, "traitCollection"), "horizontalSizeClass"), sub_100042738(), v58 == 2)|| (sub_100048810(), (v60 & 1) == 0)))
        {
          v69 = *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8);
          v70 = v97;
        }
        else
        {
          v61 = sub_100012E2C(&qword_1000D12C0);
          v62 = sub_100026B2C(v61, 48);
          *(_OWORD *)(v62 + 16) = v77;
          v63 = v97;
          *(_QWORD *)(v62 + 32) = ((uint64_t (*)(void))ShortcutsLibrarySection.id.getter)();
          *(_QWORD *)(v62 + 40) = v64;
          v65 = v78;
          NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v62);
          v66 = sub_1000183D0();
          v67 = ((uint64_t (*)(uint64_t))ShortcutsLibrarySection.items.getter)(v66);
          v68 = sub_1000864F4(v67);
          sub_1000183D0();
          v98[0] = 0;
          v98[1] = 0;
          ((void (*)(_QWORD *, _QWORD *, uint64_t))NSDiffableDataSourceSnapshot.appendItems(_:toSection:))(v68, v98, v65);
          swift_bridgeObjectRelease(v68);
          v69 = *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8);
          v70 = v63;
        }
        v15 = v85;
        sub_100079B54(v70, v69);
        v34 = v81;
        goto LABEL_29;
      }
      v15 = v85;
      sub_100079B54(v97, *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8));
LABEL_29:
      v39 += v84;
      v37 = v96 - 1;
      if (v96 == 1)
      {
        swift_bridgeObjectRelease(v74);
        LOBYTE(v8) = v76;
        v20 = v75;
        goto LABEL_32;
      }
    }
  }
LABEL_34:
  sub_100018094();
}

void sub_10000CF78(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_10000CF94(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_10000CF94(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100046B14(a1, a2, a3, a4, &qword_1000D12C0, (void (*)(uint64_t, uint64_t, _QWORD *))sub_100065BFC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_100065D8C);
}

void sub_10000CFB4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;

  sub_100018190();
  v60 = v3;
  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  v62 = *(_QWORD *)(v4 - 8);
  sub_100018044();
  __chkstk_darwin(v5);
  sub_100018488();
  v6 = sub_100012E2C(&qword_1000D1EB0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100026BD8();
  v61 = v0;
  sub_100012A90();
  dispatch thunk of LibraryDataSource.sortedSections.getter(v8);
  sub_100019D9C();
  v9 = OrderedDictionary.values.getter(v6);
  sub_100026D60(v2, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(type metadata accessor for ShortcutsLibrarySection(0) - 8);
    v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    v59 = v9;
    v14 = swift_bridgeObjectRetain(v9);
    v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      v16 = ShortcutsLibrarySection.items.getter(v14);
      v17 = *(_QWORD *)(v16 + 16);
      v18 = v15[2];
      v19 = v18 + v17;
      if (__OFADD__(v18, v17))
        break;
      v20 = v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
      if (!isUniquelyReferenced_nonNull_native || v19 > v15[3] >> 1)
      {
        if (v18 <= v19)
          v22 = v18 + v17;
        else
          v22 = v18;
        v15 = (_QWORD *)sub_100065914(isUniquelyReferenced_nonNull_native, v22, 1, (uint64_t)v15);
      }
      if (*(_QWORD *)(v20 + 16))
      {
        v23 = v15[2];
        if ((v15[3] >> 1) - v23 < v17)
          goto LABEL_35;
        v24 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
        v25 = *(_QWORD *)(v62 + 72);
        v26 = (char *)v15 + v24 + v25 * v23;
        if (v20 + v24 < (unint64_t)&v26[v25 * v17] && (unint64_t)v26 < v20 + v24 + v25 * v17)
          goto LABEL_37;
        swift_arrayInitWithCopy(v26, v20 + v24, v17, v4);
        if (v17)
        {
          v28 = v15[2];
          v29 = __OFADD__(v28, v17);
          v30 = v28 + v17;
          if (v29)
            goto LABEL_36;
          v15[2] = v30;
        }
      }
      else if (v17)
      {
        goto LABEL_34;
      }
      v14 = sub_100027154();
      v12 += v13;
      if (!--v10)
      {
        sub_100026FC4(v59);
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    sub_100027030();
    sub_100026EE8((uint64_t)"Fatal error", v54, v55, (uint64_t)"UnsafeMutablePointer.initialize overlapping range", v56, v57, (uint64_t)"Swift/UnsafePointer.swift", v58, v59, v60, (int)v61);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v15 = _swiftEmptyArrayStorage;
LABEL_24:
    v31 = v15[2];
    if (v31)
    {
      sub_100047E74();
      v33 = (char *)v15 + v32;
      v35 = *(_QWORD *)(v34 + 72);
      v36 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain(v15);
      do
      {
        v37 = v36(v1, v33, v4);
        v38 = ShortcutsLibraryItem.workflow.getter(v37);
        v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v1, v4);
        if (v38)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39, v40, v41, v42, v43, v44, v45, v46);
          v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v48 >= v47 >> 1)
            sub_100026AD8(v48 + 1, v47);
          v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v38);
          specialized Array._endMutation()(v49, v50);
        }
        v33 += v35;
        --v31;
      }
      while (v31);
      sub_100030628();
    }
    sub_100030628();
    sub_100047E50();
    v51 = sub_100027138();
    v53 = sub_100043390(v51, v52);
    sub_1000434FC((uint64_t)v53, v61);
    sub_100018420();
    sub_100018094();
  }
}

void sub_10000D2B4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  char *v33;
  id v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  int v74;
  uint64_t v75;
  void **v76;
  uint64_t v77;
  void (*v78)();
  uint64_t v79;

  sub_100018190();
  v2 = v0;
  v4 = v3;
  v74 = v5;
  v7 = v6;
  v75 = sub_100026C5C();
  v69 = *(_QWORD *)(v75 - 8);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018548();
  v68 = v9;
  v10 = sub_100012E2C(&qword_1000D10F8);
  v72 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v72 + 64);
  v12 = __chkstk_darwin(v10);
  v73 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v68 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v68 - v17;
  __chkstk_darwin(v16);
  sub_100027224();
  v19 = *(id *)&v2[OBJC_IVAR___WFMainViewController_content];
  sub_10000D7DC();

  v20 = v7;
  sub_10001A1EC((uint64_t)v7);
  v21 = sub_10002768C();
  sub_10002720C(v21, v22);
  v70 = v18;
  sub_10002720C(v1, (uint64_t)v18);
  v71 = v15;
  sub_10002720C(v1, (uint64_t)v15);
  v23 = *(unsigned __int8 *)(v72 + 80);
  v24 = v74;
  v25 = (v23 + 32) & ~v23;
  v26 = v25 + v11;
  v27 = swift_allocObject(&unk_1000C0A68, v25 + v11 + 1, v23 | 7);
  *(_QWORD *)(v27 + 16) = v2;
  *(_QWORD *)(v27 + 24) = v20;
  v28 = v20;
  v29 = (uint64_t)v73;
  sub_100026948(v1, v27 + v25);
  *(_BYTE *)(v27 + v26) = v24;
  v30 = v75;
  sub_10002720C(v4, v29);
  sub_100026D88(v29, 1, v30);
  if (v31)
  {
    v32 = v28;
    v33 = v2;
    v34 = sub_100027640();
    v35 = &qword_1000D10F8;
    sub_10001222C(v29, &qword_1000D10F8);
    v36 = sub_100027138();
    v37 = (uint64_t)v70;
    sub_10000E3F4(v36, v38, (uint64_t)v70, v39);
    sub_100027418();

    sub_10001222C((uint64_t)v71, &qword_1000D10F8);
    v40 = v37;
    v41 = &qword_1000D10F8;
LABEL_10:
    sub_10001222C(v40, v41);
    goto LABEL_13;
  }
  v42 = v69;
  v43 = (uint64_t)v70;
  v44 = v68;
  sub_100026FD4(v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
  v45 = v28;
  v46 = v2;
  v47 = (char *)v45;
  v48 = v46;
  v49 = RootNavigationContext.dismissOccludingViewController.getter();
  if ((v49 & 1) == 0)
  {
    sub_10000E3F4((uint64_t)v48, v47, v43, v24 & 1);
    sub_100027418();

    sub_10001222C((uint64_t)v71, &qword_1000D10F8);
    sub_100026D60(v44, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    v40 = sub_100026FE0();
    goto LABEL_10;
  }
  v73 = v47;
  sub_1000274DC(v49, &qword_1000D10F8);
  v50 = sub_100026B2C((uint64_t)&unk_1000C0A90, 32);
  *(_QWORD *)(v50 + 16) = sub_100026990;
  *(_QWORD *)(v50 + 24) = v27;
  v51 = swift_retain_n(v27, 2);
  v52 = sub_100026B98(v51, "presentedViewController");
  v53 = (uint64_t)v71;
  if (v52)
  {
    v54 = v52;
    v55 = objc_opt_self(WFComposeViewController);
    v56 = swift_dynamicCastObjCClass(v54, v55);
    v57 = v69;
    if (v56)
    {
      v58 = v54;
      v59 = v57;
      v60 = sub_100026DBC((uint64_t)v58, "editorViewController");
      objc_msgSend(v60, "stop");

      v57 = v59;
      v62 = sub_100026DBC(v61, "workflow");
      objc_msgSend(v62, "save");

    }
    v78 = sub_1000269F4;
    v79 = v50;
    v76 = _NSConcreteStackBlock;
    v77 = 1107296256;
    v63 = sub_100027698((uint64_t)sub_100007DA8);
    v64 = v79;
    swift_retain(v50);
    objc_msgSend(v48, "dismissViewControllerAnimated:completion:", 0, v63, swift_release(v64).n128_f64[0]);
    _Block_release(v63);

    swift_release(v50);
    sub_100027464();

    sub_10001222C(v53, &qword_1000D10F8);
    v65 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8);
    v66 = v68;
  }
  else
  {
    v67 = v73;
    sub_10000E3F4((uint64_t)v48, v73, (uint64_t)v71, v24 & 1);
    swift_release(v50);
    sub_100027464();

    sub_10001222C(v53, &qword_1000D10F8);
    v65 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
    v66 = v44;
  }
  sub_100026D60(v66, v65);
LABEL_13:
  sub_100018094();
}

void sub_10000D74C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_10005E73C(a1, a2, a3);
  sub_10005E570(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100018188();
}

uint64_t sub_10000D778(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100012E2C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10000D7B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_100012E2C(a2);
  sub_100042914(v2);
  sub_100018188();
}

void sub_10000D7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void (*v37)(id, uint64_t, uint64_t);
  id v38;
  char *v39;
  void *v40;

  sub_100018190();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_100026BF0();
  sub_100026854(v2, v0, &qword_1000D10F8);
  v8 = sub_100026C5C();
  v9 = sub_100026D88(v0, 1, v8);
  if (v10)
  {
    sub_10001222C(v0, &qword_1000D10F8);
    v11 = 1;
  }
  else
  {
    v11 = RootNavigationContext.clearSearchState.getter(v9);
    sub_100026D60(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  }
  if (v6)
  {
    ObjectType = swift_getObjectType(v6);
    v13 = sub_100026890((uint64_t)v6, ObjectType, (uint64_t)&protocol descriptor for SearchControllerDelegate);
    if (v13)
    {
      v15 = v13;
      v16 = v14;
      if ((v11 & 1) != 0)
      {
        v17 = swift_getObjectType(v13);
        v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
        v19 = v6;
        v20 = v18(v17, v16);
        if (v20)
        {
          v21 = (void *)v20;
          sub_100069590();

        }
      }
      else
      {
        v22 = v6;
      }
      v23 = swift_getObjectType(v15);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 16))(0, v23, v16);
      sub_100027620();
      v25 = v24;
      swift_unknownObjectWeakAssign(&v24[OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateLockObserver], 0);

    }
  }
  v26 = swift_getObjectType(v4);
  v27 = sub_100026890((uint64_t)v4, v26, (uint64_t)&protocol descriptor for SearchControllerDelegate);
  if (v27)
  {
    v29 = (void *)v27;
    v30 = v28;
    v31 = v4;
    sub_100027620();
    v33 = v32;
    v34 = objc_allocWithZone((Class)type metadata accessor for SearchController());
    v35 = sub_10000DDA8(v29, v30, v33);
    if ((v11 & 1) != 0)
      sub_100069590();
    v36 = swift_getObjectType(v29);
    v37 = *(void (**)(id, uint64_t, uint64_t))(v30 + 16);
    v38 = v35;
    v37(v35, v36, v30);
    sub_100027620();
    v40 = v39;
    swift_unknownObjectWeakAssign(&v39[OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateLockObserver], v38);

  }
  sub_100018094();
}

void sub_10000D9FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController);
  if (!v1)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchStateController()), "init");
    sub_100027600(v2);
    sub_100027368();
    v1 = 0;
  }
  v3 = v1;
  sub_100018388();
}

void sub_10000DA5C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  __int16 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;

  v6 = a3 & 0x101;
  swift_bridgeObjectRetain(a2);
  sub_100069370(a1, a2, v6);
  sub_100069398();
  if (v7)
  {
    v8 = v7;
    v9 = v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state;
    v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state);
    v11 = *(_QWORD *)(v9 + 8);
    v12 = *(unsigned __int8 *)(v9 + 16);
    if (*(_BYTE *)(v9 + 17))
      v13 = 256;
    else
      v13 = 0;
    v14 = v13 | v12;
    sub_100027658();
    sub_100069244(v10, v11, v14);

    swift_bridgeObjectRelease(v11);
  }
}

void sub_10000DB08(void *a1)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  id v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  id v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  char v36;
  NSString v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  id v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;

  sub_100069398();
  if (v2)
  {
    v3 = v2;
    v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
    v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 8];
    v6 = v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 16];
    sub_100027658();

    if (a1)
    {
      v84 = a1;
      v7 = objc_msgSend(v84, "window");

      if (!v7
        || (v15 = sub_100069E50(v8, "superview", v9, v10, v11, v12, v13, v14, v77, v84),
            v15,
            !v15))
      {
        sub_100047F0C();
LABEL_10:
        v26 = v84;
        goto LABEL_11;
      }
      v16 = (void *)sub_10005E7FC(OBJC_IVAR____TtC9Shortcuts16SearchController_viewController);
      if (v16)
      {
        v17 = v16;
        v78 = objc_msgSend(v16, "presentedViewController");

        if (v78)
        {
          v18 = sub_100047F0C();
          sub_100069E58(v18, v19, v20, v21, v22, v23, v24, v25, (uint64_t)v78, v84);
          v26 = (void *)v79;
LABEL_11:

          return;
        }
      }
      sub_100027658();
      sub_100079588(v84);
      if (v4)
      {
        if (v28)
        {
          if (v5 == v27 && v4 == v28)
          {
            swift_bridgeObjectRelease_n(v4, 2);
LABEL_28:
            LODWORD(v27) = sub_100047F0C();
LABEL_29:
            if (!v6)
            {
LABEL_30:
              sub_100069E50(v27, "resignFirstResponder", v29, v30, v31, v32, v33, v34, (uint64_t)v78, v84);
              sub_100079588(v84);
              if (v39)
              {
                v40 = v38;
                v41 = v39;
                swift_bridgeObjectRelease(v39);
                v42 = HIBYTE(v41) & 0xF;
                if ((v41 & 0x2000000000000000) == 0)
                  v42 = v40 & 0xFFFFFFFFFFFFLL;
                if (!v42)
                {
                  sub_100069424();
                  if (v43)
                  {
                    v44 = v43;
                    objc_msgSend(v43, "setActive:", 0);

                  }
                  v45 = v84;
                  sub_100069E70();
                  sub_100069E58(v46, v47, v48, v49, v50, v51, v52, v53, v80, v84);
                  v61 = sub_100069E50(v54, "showsCancelButton", v55, v56, v57, v58, v59, v60, v81, v85);
                  if ((v61 & 1) != 0
                    && (sub_100069E50(v61, "isFirstResponder", v62, v63, v64, v65, v66, v67, v82, v84) & 1) == 0)
                  {
                    v68 = v84;
                    sub_100069E70();
                    sub_100069E58(v69, v70, v71, v72, v73, v74, v75, v76, v83, v84);
                  }
                }
              }
              goto LABEL_10;
            }
            goto LABEL_26;
          }
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v27, v28, 0);
          sub_100047F0C();
          sub_100068FF8();
          if ((v36 & 1) != 0)
            goto LABEL_28;
        }
        else
        {
          sub_100047F0C();
        }
        sub_100027658();
        v37 = String._bridgeToObjectiveC()();
      }
      else
      {
        if (!v28)
          goto LABEL_29;
        v37 = 0;
      }
      sub_100068FF8();
      objc_msgSend(v84, "setText:", v37);
      sub_100047F0C();

      if ((v6 & 1) == 0)
        goto LABEL_30;
LABEL_26:
      sub_100069E50(v27, "becomeFirstResponder", v29, v30, v31, v32, v33, v34, (uint64_t)v78, v84);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease(v4);
  }
}

id sub_10000DDA8(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  objc_super v26;

  v7 = &v3[OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = (uint64_t)&v3[OBJC_IVAR____TtC9Shortcuts16SearchController_viewController];
  *(_QWORD *)(v8 + 8) = 0;
  sub_100069E68(v8);
  v9 = (uint64_t *)&v3[OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder];
  v10 = v3;
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100011544(v11);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *v9 = v14;
  v9[1] = v16;
  v17 = &v10[OBJC_IVAR____TtC9Shortcuts16SearchController_state];
  *(_OWORD *)v17 = xmmword_1000967F0;
  *((_WORD *)v17 + 8) = 0;
  v18 = &v10[OBJC_IVAR____TtC9Shortcuts16SearchController_stateController];
  sub_100069E68((uint64_t)&v10[OBJC_IVAR____TtC9Shortcuts16SearchController_stateController]);
  v10[OBJC_IVAR____TtC9Shortcuts16SearchController_hidesNavigationBarDuringPresentation] = 0;
  *(_QWORD *)(v8 + 8) = a2;
  swift_unknownObjectWeakAssign(v8, a1);
  swift_unknownObjectWeakAssign(v18, a3);

  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for SearchController();
  v19 = objc_msgSendSuper2(&v26, "init");
  sub_100069424();
  if (v20)
  {
    v21 = v20;
    sub_100026FEC(v20, "setSearchResultsUpdater:");

  }
  sub_1000693E0();
  if (v22)
  {
    v23 = v22;
    v24 = v19;
    objc_msgSend(v23, "setDelegate:", v24);

  }
  return v19;
}

uint64_t type metadata accessor for SearchController()
{
  return objc_opt_self(_TtC9Shortcuts16SearchController);
}

void sub_10000DF98()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  void (*v68)(uint64_t);
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;

  sub_100018190();
  v4 = sub_100026B08();
  sub_100026DAC();
  __chkstk_darwin(v5);
  sub_100018488();
  v72 = objc_msgSend(objc_allocWithZone((Class)UITabBarController), "init");
  sub_10000EA94();
  v7 = v6;
  String._bridgeToObjectiveC()();
  sub_100026F94();
  v8 = sub_100026E54();
  sub_1000274F0();

  v9 = sub_100026EB0();
  v11 = v10;

  sub_100026AF8(v12, (unint64_t *)&unk_1000D3160, UIImage_ptr);
  sub_100026F00();
  sub_100071EA8(0xD000000000000013, v13);
  v15 = v14;
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  sub_100027458(enum case for RootNavigationDestination.shortcuts(_:), v69);
  sub_100027410();
  v17 = v16;
  v18 = *(void (**)(uint64_t))(v3 + 8);
  sub_100027440();
  v68 = v18;
  v19 = objc_allocWithZone((Class)UITabBarItem);
  v20 = sub_1000275C8(v9, v11, v15, v17);
  sub_100026D9C(v7, "setTabBarItem:");

  sub_10000EA94();
  v22 = (void *)v21;
  sub_10001ACF8(v21);
  v24 = v23;
  v71 = v23;

  sub_10002704C(v24, "setDelegate:");
  v25 = objc_allocWithZone((Class)sub_1000276B8());
  v26 = sub_100027640();
  v27 = (id)TriggerRootViewController.init(with:)(v26);
  v28 = String._bridgeToObjectiveC()();
  sub_100026A98();
  v29 = sub_100026E54();

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  sub_100071EA8(0x636F6C636B736564, 0xEE006C6C69662E6BLL);
  v34 = v33;
  v69(v1, enum case for RootNavigationDestination.automations(_:), v4);
  sub_100027410();
  v36 = v35;
  sub_100027440();
  v37 = objc_allocWithZone((Class)UITabBarItem);
  v38 = sub_1000275C8(v30, v32, v34, v36);
  v70 = v27;
  sub_100026D9C(v27, "setTabBarItem:");

  sub_10001ACF8((uint64_t)v27);
  v40 = v39;
  String._bridgeToObjectiveC()();
  sub_100026F94();
  v41 = sub_100026E54();

  v42 = sub_100027334();
  v44 = v43;

  sub_100026F00();
  sub_100071EA8(v45, v46);
  v48 = v47;
  v49 = enum case for GalleryNavigationDestination.home(_:);
  v50 = sub_100027144();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v1, v49, v50);
  sub_100015D74(v1, 0, 1, v50);
  v69(v1, enum case for RootNavigationDestination.gallery(_:), v4);
  sub_100027410();
  v52 = v51;
  v53 = sub_1000271C0();
  v68(v53);
  v54 = objc_allocWithZone((Class)UITabBarItem);
  v55 = sub_1000275C8(v42, v44, v48, v52);
  sub_10000EADC();
  v57 = (void *)v56;
  sub_10001ACF8(v56);
  v59 = v58;

  v60 = v59;
  sub_10000EADC();
  v62 = v61;
  sub_1000271CC(v61, "setTabBarItem:");

  v63 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v64 = sub_100026B2C(v63, 56);
  *(_OWORD *)(v64 + 16) = xmmword_100096F80;
  *(_QWORD *)(v64 + 32) = v71;
  *(_QWORD *)(v64 + 40) = v40;
  *(_QWORD *)(v64 + 48) = v60;
  v73 = v64;
  specialized Array._endMutation()(v64, v65);
  v66 = v71;
  v67 = v40;
  sub_100025D58(v73, v72);

  sub_100018094();
}

void sub_10000E3F4(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;
  int v44;
  char v45;
  void (*v46)(char *, char *, uint64_t);
  int v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  id v58;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Class isa;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  id v73;
  uint64_t v74;

  v71 = a4;
  v70 = a3;
  v6 = sub_100012E2C(&qword_1000D10F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RootNavigationContext.TransitionType(0);
  v72 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v67 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v67 - v19;
  v21 = (void *)sub_10001A1A0();
  v73 = objc_msgSend(v21, "tabBarController");

  if (!v73)
  {
    v73 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", a2);
    v35 = objc_msgSend(v73, "navigationBar");
    objc_msgSend(v35, "setPrefersLargeTitles:", 1);

    objc_msgSend(*(id *)(a1 + OBJC_IVAR___WFMainViewController_splitView), "showDetailViewController:sender:", v73, a1);
    goto LABEL_10;
  }
  v22 = objc_msgSend(a2, "tabBarItem");
  if (!v22)
    goto LABEL_51;
  v23 = v22;
  v24 = objc_msgSend(v22, "tag");

  objc_msgSend(v73, "setSelectedIndex:", v24);
  if (v24)
    goto LABEL_10;
  v25 = objc_msgSend(v73, "selectedViewController");
  if (!v25)
    goto LABEL_10;
  v26 = v25;
  v27 = objc_opt_self(UINavigationController);
  v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
  if (!v28)
  {

    goto LABEL_10;
  }
  v29 = v28;
  v68 = v26;
  v30 = objc_msgSend(v28, "topViewController");
  v69 = v29;
  if (v30)
  {
    v31 = v30;
    sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
    v67 = v32;
    v33 = a2;
    v34 = v31;
    LOBYTE(v31) = static NSObject.== infix(_:_:)(v34, v33);

    v29 = v69;
    if ((v31 & 1) != 0)
    {

LABEL_10:
      return;
    }
  }
  v36 = objc_msgSend(v29, "viewControllers");
  sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
  v67 = v37;
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v65 = v38;
    else
      v65 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38);
    v39 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v38);
  if (v39 < 2)
  {
    v44 = enum case for RootNavigationContext.TransitionType.push(_:);
    v43 = v72;
    (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v20, enum case for RootNavigationContext.TransitionType.push(_:), v9);
    v45 = v71;
    v42 = v68;
  }
  else
  {
    sub_100026854(v70, (uint64_t)v8, &qword_1000D10F8);
    v40 = type metadata accessor for RootNavigationContext(0);
    v41 = sub_100019D44((uint64_t)v8, 1, v40);
    v42 = v68;
    if (v41 == 1)
    {
      sub_10001222C((uint64_t)v8, &qword_1000D10F8);
      static RootNavigationContext.TransitionType.default.getter();
      v43 = v72;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v20, v18, v9);
    }
    else
    {
      RootNavigationContext.transitionType.getter();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v8, v40);
      v43 = v72;
      v46 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
      v46(v18, v15, v9);
      v46(v20, v18, v9);
    }
    v44 = enum case for RootNavigationContext.TransitionType.push(_:);
    v45 = v71;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v12, v20, v9);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v12, v9);
  if (v47 == v44)
    goto LABEL_23;
  if (v47 == enum case for RootNavigationContext.TransitionType.popAndPush(_:))
  {

LABEL_23:
    v48 = objc_msgSend(v69, "topViewController");
    if (v48)
    {
      v49 = v48;
      v50 = type metadata accessor for LibraryViewController(0);
      if (swift_dynamicCastClass(v49, v50))
      {
        sub_100012A90();
        v52 = v51;

        sub_1000877F0(1);
        swift_release(v52);
      }
      else
      {

      }
    }
    objc_msgSend(v69, "pushViewController:animated:", a2, v45 & 1);

    goto LABEL_39;
  }
  if (v47 == enum case for RootNavigationContext.TransitionType.pushAndReplace(_:))
  {
    v53 = objc_msgSend(v69, "viewControllers");
    v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v53, v67);

    if ((unint64_t)v54 >> 62)
    {
      if (v54 < 0)
        v66 = v54;
      else
        v66 = v54 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v54);
      v55 = _CocoaArrayWrapper.endIndex.getter(v66);
      swift_bridgeObjectRelease(v54);
    }
    else
    {
      v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v56 = __OFSUB__(v55, 1);
    v57 = v55 - 1;
    if (v56)
    {
      __break(1u);
    }
    else
    {
      v58 = a2;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v54);
      v74 = v54;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v54 < 0 || (v54 & 0x4000000000000000) != 0)
      {
        v54 = sub_100045FCC(v54);
        v74 = v54;
      }
      if ((v57 & 0x8000000000000000) == 0)
      {
        if (v57 < *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v60 = *(void **)((v54 & 0xFFFFFFFFFFFFFF8) + 8 * v57 + 0x20);
          *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 8 * v57 + 0x20) = v58;

          specialized Array._endMutation()(v61, v62);
          v63 = v74;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v63);
          objc_msgSend(v69, "setViewControllers:animated:", isa, v45 & 1);

LABEL_39:
          (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v9);
          return;
        }
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v9, v9);
  __break(1u);
}

void sub_10000EA94()
{
  sub_10000C944(&OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar, sub_100009AAC);
}

void sub_10000EAA8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v4;

  if (!*a2)
  {
    v4 = objc_opt_self(*a3);
    atomic_store(swift_getObjCClassMetadata(v4), a2);
  }
  sub_100018188();
}

void sub_10000EADC()
{
  sub_10000EAE8();
}

void sub_10000EAE8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;

  sub_1000275E4();
  v5 = v4;
  sub_100027144();
  sub_1000275AC();
  __chkstk_darwin(v6);
  sub_1000272A4();
  v7 = *v5;
  v8 = *(void **)&v1[*v5];
  if (!v8)
  {
    type metadata accessor for GalleryHostingViewController(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v0, enum case for GalleryNavigationDestination.home(_:), v2);
    sub_10000A060((unint64_t *)&unk_1000D1030, (void (*)(uint64_t))type metadata accessor for MainViewController);
    v10 = v9;
    v11 = (id)WFUserInterfaceFromViewController(v1);
    swift_getObjectType(v11);
    v12 = v1;
    v13 = sub_1000273A8();
    v15 = sub_100026040(v13, v14, v10, (uint64_t)v11);
    *(_QWORD *)&v1[v7] = v15;
    v16 = v15;
    sub_100027368();
    v8 = 0;
  }
  v17 = v8;
  sub_100026D40();
}

void sub_10000EBD4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v9;
  id v10;
  id v11;

  v9 = a3;
  v10 = a4;
  v11 = a1;
  a6(v9);

  sub_100019E8C();
}

void sub_10000EC54(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0880, (uint64_t)&unk_1000C0178);
}

_OWORD *sub_10000ECAC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_10000ECBC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  objc_super v40;

  sub_100018190();
  v2 = v0;
  ObjectType = swift_getObjectType(v0);
  v4 = sub_100012E2C(&qword_1000D38E8);
  sub_10004282C();
  __chkstk_darwin(v5);
  sub_100018488();
  v40.receiver = v0;
  v40.super_class = (Class)sub_1000273E4();
  objc_msgSendSuper2(&v40, "viewDidLoad");
  sub_100012A90();
  *(_BYTE *)(v6 + qword_1000D3FE8) = 1;
  swift_release(v6);
  sub_100012A90();
  v7 = sub_1000507EC();
  v8 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v7, &method descriptor for LibraryDataSource.layoutMode.getter);
  v9 = v8();
  sub_100019D9C();
  sub_10000C5DC(v9 & 1);
  sub_100012A90();
  dispatch thunk of LibraryDataSource.$layoutMode.getter();
  sub_100019D9C();
  v10 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
  sub_100079D60(v10);
  v11 = sub_100026B2C((uint64_t)&unk_1000C33D8, 32);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = ObjectType;
  sub_100004038(&qword_1000D38F0, &qword_1000D38E8);
  Publisher<>.sink(receiveValue:)(sub_100014E84, v11, v4, v12);
  swift_release(v11);
  sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v13 = (uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables];
  sub_1000424D0((uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables], (uint64_t)v39, 33);
  AnyCancellable.store(in:)(v13);
  swift_endAccess(v39);
  sub_100019D9C();
  sub_100047E10();
  v14 = LibraryDataSource.onSortComparatorChanged.getter();
  sub_100019D9C();
  v39[0] = v14;
  v15 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
  sub_100079D60(v15);
  v16 = sub_100012E2C(&qword_1000D38F8);
  sub_100004038(&qword_1000D3900, &qword_1000D38F8);
  Publisher<>.sink(receiveValue:)(sub_100079A58, v15, v16, v17);
  swift_release(v15);
  swift_release(v39[0]);
  sub_1000424D0(v13, (uint64_t)v39, 33);
  AnyCancellable.store(in:)(v13);
  swift_endAccess(v39);
  v18 = sub_100019D9C();
  v19 = sub_100019EAC(v18, "view");
  if (v19)
  {
    v20 = v19;
    v21 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
    sub_100026D70((uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier], (uint64_t)v39);
    v22 = *((_QWORD *)v21 + 1);
    if (v22)
    {
      swift_bridgeObjectRetain(v22);
      v23 = String._bridgeToObjectiveC()();
      sub_100068FF8();
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v20, "setAccessibilityIdentifier:", v23);

    v25 = sub_100019EAC(v24, "navigationItem");
    objc_msgSend(v25, "setHidesSearchBarWhenScrolling:", 0);

    v27 = sub_100019EAC(v26, "navigationItem");
    objc_msgSend(v27, "_setLargeTitleTwoLineMode:", 1);

    v29 = sub_100019EAC(v28, "navigationController");
    if (v29)
    {
      v30 = objc_msgSend(v29, "navigationBar");
      sub_100079D98();
      objc_msgSend(&selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_, "setPrefersLargeTitles:", 1);

    }
    sub_100014270();
    if (v31)
    {
      v32 = v31;
      sub_100009428(v2);

    }
    sub_100014270();
    if (v33)
    {
      v34 = v33;
      sub_10002DA94(1, 0);

    }
    sub_100010914();
    v35 = sub_100012E2C(&qword_1000D3908);
    v36 = sub_100026B2C(v35, 64);
    *(_OWORD *)(v36 + 16) = xmmword_100096F60;
    *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(_QWORD *)(v36 + 48) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v36 + 56) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v37 = sub_100026B2C((uint64_t)&unk_1000C3400, 24);
    *(_QWORD *)(v37 + 16) = ObjectType;
    v38 = UIViewController.registerForTraitChanges<A>(_:handler:)(v36, sub_100079A70, v37, ObjectType);
    swift_release(v37);
    sub_100030630();
    swift_unknownObjectRelease(v38);
    sub_100018094();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10000F0E4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  void *v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  char v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  unint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  _QWORD v85[4];
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_100018190();
  v88 = v4;
  v89 = v5;
  v6 = v0;
  v8 = v7;
  v9 = sub_100047F14();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_10001827C();
  v86 = (uint64_t)_swiftEmptyArrayStorage;
  v87 = (unint64_t)_swiftEmptyArrayStorage;
  if ((v8 & 1) != 0)
  {
    v11 = sub_100044724(v6);
    v12 = sub_100019EAC((uint64_t)v11, "traitCollection");
    v13 = objc_msgSend(v12, "horizontalSizeClass");

    v14 = v11;
    v22 = v14;
    if (v13 == (id)1)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14, v15, v16, v17, v18, v19, v20, v21);
      v24 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v23 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v23 >> 1)
        sub_100026AD8(v24 + 1, v23);
      v25 = v24;
      v26 = v22;
    }
    else
    {
      sub_100026BD0();
      sub_100047D48();
      if (v35)
        sub_100026AD8((uint64_t)v13 + 1, v34);
      v36 = sub_100047DBC();
      specialized Array._endMutation()(v36, v37);
      v38 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 1.0, 0.0);
      v39 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v38);

      sub_100026BD0();
      v41 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v40 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v41 >= v40 >> 1)
        sub_100026AD8(v41 + 1, v40);
      v25 = v41;
      v26 = v39;
    }
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v26);
    specialized Array._endMutation()(v42, v43);
    v85[3] = sub_1000273E4();
    v85[0] = v6;
    v44 = objc_allocWithZone((Class)UIBarButtonItem);
    v45 = v6;
    sub_100045EFC();
    v47 = v46;
    sub_1000470E0();
    v48 = v47;
    sub_100026BD0();
    sub_100047D48();
    if (v35)
      sub_100026AD8((uint64_t)v44 + 1, v49);
    v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v48);
    specialized Array._endMutation()(v50, v51);

    return v87;
  }
  sub_10000F93C();
  if (v27)
  {
    v2 = (void *)v27;
    v28 = sub_100019EAC(v27, "traitCollection");
    sub_100047EE0(v28);
    sub_1000274F0();
    if (v3 == 1)
    {
      v29 = v2;
      sub_100026BD0();
      v30 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v31 >> 1)
      {
        v79 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v30 + 1, 1);
        v30 = v79;
      }
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v29);
      specialized Array._endMutation()(v32, v33);
    }
    else
    {
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        v80 = v2;
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v81 = sub_100047EC8();
        sub_100030628();
        if (v81 < 0)
        {
          __break(1u);
          goto LABEL_49;
        }
      }
      else
      {
        v52 = v2;
      }
      sub_100047E24();
    }

  }
  v53 = sub_100019EAC(v27, "traitCollection");
  sub_100047EE0(v53);
  sub_100047EEC();
  if (v2 != (void *)2 || (sub_100048810(), (v54 & 1) == 0) || (sub_100074134(), !v55))
  {
LABEL_29:
    sub_100073FF4();
    if (v58)
    {
      v59 = v58;
      sub_100026BD0();
      v61 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v60 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v60 >> 1)
        sub_100026AD8(v61 + 1, v60);
      v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
      specialized Array._endMutation()(v62, v63);

    }
    v64 = &v6[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
    sub_100026D70((uint64_t)&v6[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration], (uint64_t)v85);
    v65 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(v1, v64, v9);
    v66 = ((uint64_t (*)(uint64_t))LibraryConfiguration.layoutOverride.getter)(v65);
    sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    if (sub_10000F9BC(v6))
    {
      if (v66 == 2)
      {
        sub_100073CE8();
        sub_100026BD0();
        sub_100047D48();
        if (!v35)
        {
LABEL_36:
          v68 = sub_100047DBC();
          specialized Array._endMutation()(v68, v69);
LABEL_45:
          sub_10000F644();
          return v87;
        }
LABEL_49:
        sub_100026AD8(v1 + 1, v67);
        goto LABEL_36;
      }
    }
    else if (v66 == 2)
    {
      sub_100073AF0();
      sub_100026BD0();
      sub_100047D48();
      if (v35)
        sub_100026AD8(v1 + 1, v70);
      v71 = sub_100047DBC();
      specialized Array._endMutation()(v71, v72);
    }
    sub_10000F960();
    if (v73)
    {
      v74 = v73;
      sub_100026BD0();
      sub_100047D48();
      if (v35)
        sub_100026AD8(v1 + 1, v75);
      v76 = sub_100047DBC();
      specialized Array._endMutation()(v76, v77);

    }
    goto LABEL_45;
  }
  v56 = v55;
  if (!((unint64_t)v86 >> 62))
  {
    v57 = v55;
LABEL_28:
    sub_100047E24();

    goto LABEL_29;
  }
  if (v86 < 0)
    v82 = v86;
  else
    v82 = v86 & 0xFFFFFFFFFFFFFF8;
  v83 = v55;
  sub_100042DD8();
  v84 = _CocoaArrayWrapper.endIndex.getter(v82);
  result = sub_100018420();
  if ((v84 & 0x8000000000000000) == 0)
    goto LABEL_28;
  __break(1u);
  return result;
}

void sub_10000F5BC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  uint64_t v10;
  id v11;

  sub_1000275E4();
  v4 = v3;
  v6 = *v5;
  v7 = *(_QWORD *)(v0 + *v5);
  if (v7 == 1)
  {
    v8 = v2;
    v9 = (void *)v1(v0);
    v10 = *(_QWORD *)(v0 + v6);
    *(_QWORD *)(v0 + v6) = v9;
    v11 = v9;
    v8(v10);
  }
  v4(v7);
  sub_100026D40();
}

id sub_10000F620(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_10000F634(id a1)
{
  if (a1 != (id)1)

}

void sub_10000F644()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, unint64_t, uint64_t);
  int v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  unint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  sub_100018190();
  v3 = sub_100079E40();
  sub_10002728C();
  __chkstk_darwin(v4);
  sub_10004248C();
  v36 = v5;
  v7 = __chkstk_darwin(v6);
  v9 = (void **)((char *)&v31 - v8);
  __chkstk_darwin(v7);
  v34 = (char *)&v31 - v10;
  v35 = sub_100079E48();
  v11 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v13 = (uint64_t *)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100047F14();
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_100018470();
  v31 = v1;
  sub_100026D70((uint64_t)v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v38);
  v16 = sub_100079EB0(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  LibraryConfiguration.editingBehavior.getter(v16);
  v17 = v35;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v14);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v17) != enum case for LibraryEditingBehavior.options(_:))
  {
    sub_100079FE0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
LABEL_16:
    sub_100018094();
    return;
  }
  sub_100079FE0(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
  v18 = *v13;
  v19 = _swiftEmptyArrayStorage;
  v37 = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(v18 + 16);
  if (!v20)
  {
LABEL_15:
    v30 = v31;
    sub_100026B90();
    sub_1000725E4((uint64_t)v19, v30);
    sub_100019D9C();
    goto LABEL_16;
  }
  v21 = 0;
  LODWORD(v35) = enum case for LibraryEditingOption.selection(_:);
  v22 = (uint64_t)v34;
  v32 = v20;
  v33 = v18;
  while (v21 < *(_QWORD *)(v18 + 16))
  {
    v23 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 72);
    v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 16);
    v25(v22, v18 + v23 + v24 * v21, v3);
    v25((uint64_t)v9, v22, v3);
    v26 = sub_100026C54((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 88));
    if (v26 == (_DWORD)v35)
    {
      sub_100026C54((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
      swift_bridgeObjectRelease(*v9);
      sub_100026C54(v22, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    }
    else
    {
      sub_100026C54((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
      v27(v36, v22, v3);
      v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      {
        sub_10003E9DC();
        v28 = v37;
      }
      v29 = v28[2];
      if (v29 >= v28[3] >> 1)
      {
        sub_10003E9DC();
        v28 = v37;
      }
      v28[2] = v29 + 1;
      v27((uint64_t)v28 + v23 + v29 * v24, v36, v3);
      v37 = v28;
      v18 = v33;
      v22 = (uint64_t)v34;
      v20 = v32;
    }
    if (v20 == ++v21)
    {
      v19 = v37;
      goto LABEL_15;
    }
  }
  __break(1u);
}

void sub_10000F93C()
{
  sub_10000F5BC();
}

void sub_10000F960()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem);
  if (v2 == (void *)1)
  {
    sub_100003E30();
    v3 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v5 = v4;
    sub_10000F634(v3);
  }
  sub_10000F620(v2);
  sub_100026B34();
}

BOOL sub_10000F9BC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Width;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString *v30;
  id v31;
  uint64_t v32;
  double v33;
  _BYTE v35[72];
  char v36[24];
  CGRect v37;

  v2 = type metadata accessor for LibraryConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = objc_msgSend(a1, "navigationController");
  if (!v6)
    return 0;
  v7 = v6;
  v8 = objc_msgSend(v6, "navigationBar");

  objc_msgSend(v8, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v37.origin.x = v10;
  v37.origin.y = v12;
  v37.size.width = v14;
  v37.size.height = v16;
  Width = CGRectGetWidth(v37);
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightSemibold);
  v19 = &a1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  swift_beginAccess(v19, v36, 0, 0);
  v20 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v3 + 16))(v5, v19, v2);
  LibraryConfiguration.title.getter(v20);
  v22 = v21;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = sub_100012E2C(&qword_1000D0AF0);
  inited = swift_initStackObject(v24, v35);
  *(_OWORD *)(inited + 16) = xmmword_100096E80;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_100003B2C(0, &qword_1000D0AF8, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v18;
  type metadata accessor for Key(0);
  v27 = v26;
  sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  v29 = v28;
  v30 = NSFontAttributeName;
  v31 = v18;
  v32 = Dictionary.init(dictionaryLiteral:)(inited, v27, (char *)&type metadata for Any + 8, v29);
  v33 = sub_100046FD4(v32, v23);

  return Width - v33 < 240.0;
}

void sub_10000FC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;

  v0 = sub_100010914();
  v1 = (uint64_t)sub_100043E58(v0);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100047F0C();
  sub_1000115DC();
  if (v3)
  {
    v4 = v3;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 >= 0)
        v9 = v3 & 0xFFFFFFFFFFFFFF8;
      else
        v9 = v3;
      sub_100042DD8();
      v5 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (v5)
        goto LABEL_6;
    }
    else
    {
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_100042DD8();
      if (v5)
      {
LABEL_6:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
          else
            v7 = *(id *)(v4 + 8 * i + 32);
          v8 = v7;
          objc_msgSend(v7, "setEnabled:", v2 > 0);

        }
      }
    }
    sub_100026FC4(v4);
  }
}

void sub_10000FD44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10000FDC4();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_10000FF20((unint64_t)v6);
  *a1 = v3;
}

void sub_10000FDC4()
{
  sub_10000FE08();
}

void sub_10000FE08()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t, char *);
  void (*v3)(uint64_t, uint64_t, char *);
  void (*v4)(uint64_t, uint64_t, char *);
  void (*v5)(uint64_t, uint64_t, char *);
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  size_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_100018190();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  if ((v12 & 1) != 0)
  {
    sub_100047DEC();
    if (v14 != v15)
    {
      sub_100047F1C();
      if (v14)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_100047DDC();
    }
  }
  else
  {
    v13 = v0;
  }
  v16 = *(_QWORD *)(v9 + 16);
  if (v13 <= v16)
    v17 = *(_QWORD *)(v9 + 16);
  else
    v17 = v13;
  if (!v17)
  {
    v23 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v18 = sub_100012E2C(v1);
  v19 = *(_QWORD *)(v7(0) - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = *(unsigned __int8 *)(v19 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (_QWORD *)swift_allocObject(v18, v22 + v20 * v17, v21 | 7);
  v24 = j__malloc_size(v23);
  if (!v20)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v24 - v22 == 0x8000000000000000 && v20 == -1)
    goto LABEL_23;
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  v7(0);
  sub_100047E74();
  v27 = (char *)v23 + v26;
  v28 = v9 + v26;
  if ((v11 & 1) != 0)
  {
    v5(v28, v16, v27);
    *(_QWORD *)(v9 + 16) = 0;
  }
  else
  {
    v3(v28, v16, v27);
  }
  sub_100042AE0();
  sub_100018094();
}

void sub_10000FF20(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  char *v18;
  char **v19;
  Swift::Int v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  Swift::Int v31;
  char *v32;
  uint64_t v33;
  Swift::Int v34;
  char *v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  char *v46;
  Swift::Int v47;
  char *v48;
  uint64_t v49;
  char *v51;
  char *v52;
  Swift::Int v53;
  uint64_t v54;
  char *v55;
  Swift::Int v56;
  uint64_t v57;
  char *v58;
  Swift::Int v59;
  char *v60;
  char **v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  char *v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char **v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  Swift::Int v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  Swift::Int v139;
  char *v140;
  Swift::Int v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  void (*v149)(char *, char *, uint64_t);
  char **v150;
  uint64_t v151;
  char *v152;
  Swift::Int v153;
  uint64_t v154;
  _QWORD *v155;

  v2 = v1;
  v151 = type metadata accessor for IndexPath(0);
  v155 = *(_QWORD **)(v151 - 8);
  v4 = __chkstk_darwin(v151);
  v140 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v152 = (char *)&v134 - v7;
  v8 = __chkstk_darwin(v6);
  v148 = (char *)&v134 - v9;
  __chkstk_darwin(v8);
  v147 = (char *)&v134 - v10;
  v11 = a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_100046300(0, v12, 1, (_QWORD *)v11);
      return;
    }
    goto LABEL_140;
  }
  v14 = v13;
  sub_100065570(v12 / 2);
  v136 = v15;
  v137 = v12;
  v142 = v16;
  if (v12 <= 0)
  {
LABEL_104:
    v18 = (char *)_swiftEmptyArrayStorage;
    v75 = _swiftEmptyArrayStorage[2];
    v19 = (char **)v11;
LABEL_105:
    if (v75 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease(v18);
      if (v137 >= -1)
        goto LABEL_117;
      goto LABEL_144;
    }
    v126 = *v19;
    while (1)
    {
      v11 = v75 - 2;
      if (v75 < 2)
        break;
      if (!v126)
        goto LABEL_148;
      v117 = (uint64_t)v18;
      v127 = v18 + 32;
      v128 = *(_QWORD *)&v18[16 * v11 + 32];
      v129 = *(_QWORD *)&v18[16 * v75 + 24];
      sub_100046568((unint64_t)&v126[v155[9] * v128], (unint64_t)&v126[v155[9] * v127[2 * v75 - 2]], (unint64_t)&v126[v155[9] * v129], v142);
      if (v2)
        goto LABEL_102;
      if (v129 < v128)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native(v117) & 1) == 0)
      {
        sub_100046A9C(v117);
        v117 = v132;
      }
      if (v11 >= *(_QWORD *)(v117 + 16))
        goto LABEL_136;
      v130 = (_QWORD *)(v117 + 32 + 16 * v11);
      *v130 = v128;
      v130[1] = v129;
      v131 = *(_QWORD *)(v117 + 16);
      if (v75 > v131)
        goto LABEL_137;
      v18 = (char *)v117;
      memmove((void *)(v117 + 32 + 16 * (v75 - 1)), (const void *)(v117 + 32 + 16 * v75), 16 * (v131 - v75));
      *(_QWORD *)(v117 + 16) = v131 - 1;
      v75 = v131 - 1;
      if (v131 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v135 = v14;
  v17 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  v19 = (char **)v11;
  v150 = (char **)v11;
  while (1)
  {
    v20 = v17 + 1;
    v141 = v17;
    if (v17 + 1 >= v12)
    {
      v31 = v17 + 1;
      v39 = v151;
    }
    else
    {
      v21 = *v19;
      v143 = v2;
      v144 = v21;
      v153 = v12;
      v22 = v155;
      v23 = v155[9];
      v24 = (void (*)(char *, char *, uint64_t))v155[2];
      v25 = v147;
      v26 = v151;
      v24(v147, &v21[v23 * v20], v151);
      v27 = &v21[v23 * v141];
      v28 = v148;
      v24(v148, v27, v26);
      sub_1000040A8(&qword_1000D1E90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
      v146 = v29;
      LODWORD(v149) = dispatch thunk of static Comparable.< infix(_:_:)(v25, v28, v26, v29);
      v30 = (void (*)(char *, uint64_t))v22[1];
      v30(v28, v26);
      v17 = v141;
      v30(v25, v26);
      v31 = v17 + 2;
      v154 = v23;
      if (v17 + 2 >= v153)
      {
        v12 = v153;
        v2 = v143;
      }
      else
      {
        v138 = v18;
        v145 = v23 * v20;
        v32 = v144;
        v33 = v23 * v31;
        while (1)
        {
          v34 = v31;
          v35 = v147;
          v36 = v151;
          v24(v147, &v32[v33], v151);
          v37 = v148;
          v24(v148, &v32[v145], v36);
          v38 = dispatch thunk of static Comparable.< infix(_:_:)(v35, v37, v36, v146);
          v30(v37, v36);
          v30(v35, v36);
          if (((v149 ^ v38) & 1) != 0)
            break;
          v31 = v34 + 1;
          v32 += v154;
          if (v34 + 1 >= v153)
          {
            v12 = v153;
            v31 = v153;
            v2 = v143;
            v18 = v138;
            v17 = v141;
            goto LABEL_13;
          }
        }
        v2 = v143;
        v18 = v138;
        v31 = v34;
        v17 = v141;
        v12 = v153;
      }
LABEL_13:
      v19 = v150;
      v39 = v151;
      if ((v149 & 1) != 0)
      {
        if (v31 < v17)
          goto LABEL_141;
        if (v17 < v31)
        {
          v138 = v18;
          v143 = v2;
          v40 = 0;
          v41 = v154;
          v42 = v154 * (v31 - 1);
          v43 = v31 * v154;
          v44 = v17;
          v45 = v17 * v154;
          do
          {
            if (v44 != v31 + v40 - 1)
            {
              v46 = v144;
              if (!v144)
                goto LABEL_147;
              v47 = v31;
              v48 = &v144[v45];
              v146 = &v144[v42];
              v49 = v151;
              v149 = (void (*)(char *, char *, uint64_t))v155[4];
              v149(v140, &v144[v45], v151);
              if (v45 < v42 || v48 >= &v46[v43])
              {
                v51 = &v46[v45];
                v52 = v146;
                swift_arrayInitWithTakeFrontToBack(v51);
              }
              else
              {
                v52 = v146;
                if (v45 != v42)
                  swift_arrayInitWithTakeBackToFront(v48);
              }
              v149(v52, v140, v49);
              v19 = v150;
              v31 = v47;
              v41 = v154;
            }
            ++v44;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v45 += v41;
          }
          while (v44 < v31 + v40);
          v2 = v143;
          v18 = v138;
          v39 = v151;
          v17 = v141;
          v12 = v153;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v17))
        goto LABEL_139;
      if (v31 - v17 < v135)
      {
        if (__OFADD__(v17, v135))
          goto LABEL_142;
        if (v17 + v135 >= v12)
          v53 = v12;
        else
          v53 = v17 + v135;
        if (v53 < v17)
          goto LABEL_143;
        if (v31 != v53)
        {
          v138 = v18;
          v139 = v53;
          v54 = v155[9];
          v55 = (char *)v155[2];
          v143 = v2;
          v144 = v55;
          v154 = v54 * (v31 - 1);
          v145 = v54;
          v56 = v31 * v54;
          do
          {
            v57 = 0;
            v149 = (void (*)(char *, char *, uint64_t))v31;
            v146 = (char *)v56;
            while (1)
            {
              v153 = v17;
              v58 = *v19;
              v59 = (Swift::Int)&(*v19)[v56 + v57];
              v60 = v147;
              v61 = v19;
              v62 = (void (*)(char *, char *, uint64_t))v144;
              ((void (*)(char *, Swift::Int, uint64_t))v144)(v147, v59, v39);
              v63 = v148;
              v62(v148, &v58[v154 + v57], v39);
              sub_1000040A8(&qword_1000D1E90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
              LOBYTE(v58) = dispatch thunk of static Comparable.< infix(_:_:)(v60, v63, v39, v64);
              v65 = (void (*)(char *, uint64_t))v155[1];
              v65(v63, v39);
              v65(v60, v39);
              if ((v58 & 1) == 0)
                break;
              v66 = *v61;
              if (!*v61)
                goto LABEL_145;
              v56 = (Swift::Int)v146;
              v67 = &v146[(_QWORD)v66 + v57];
              v68 = &v66[v154 + v57];
              v69 = (void (*)(char *, char *, uint64_t))v155[4];
              v70 = v151;
              v69(v152, v67, v151);
              v39 = v70;
              swift_arrayInitWithTakeFrontToBack(v67);
              v69(v68, v152, v70);
              v57 -= v145;
              v17 = v153 + 1;
              v71 = v149;
              v19 = v150;
              if (v149 == (void (*)(char *, char *, uint64_t))(v153 + 1))
                goto LABEL_46;
            }
            v39 = v151;
            v71 = v149;
            v19 = v61;
            v56 = (Swift::Int)v146;
LABEL_46:
            v31 = (Swift::Int)v71 + 1;
            v154 += v145;
            v56 += v145;
            v17 = v141;
          }
          while (v31 != v139);
          v31 = v139;
          v2 = v143;
          v18 = v138;
        }
      }
    }
    if (v31 < v17)
      goto LABEL_138;
    v72 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
    {
      sub_1000469D0(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
      v18 = v124;
    }
    v74 = *((_QWORD *)v18 + 2);
    v73 = *((_QWORD *)v18 + 3);
    v75 = v74 + 1;
    v143 = v2;
    if (v74 >= v73 >> 1)
    {
      sub_1000469D0(v73 > 1, v74 + 1, 1, v18);
      v18 = v125;
    }
    v19 = v72;
    *((_QWORD *)v18 + 2) = v75;
    v76 = v18 + 32;
    v77 = &v18[16 * v74 + 32];
    *(_QWORD *)v77 = v17;
    *((_QWORD *)v77 + 1) = v31;
    v149 = (void (*)(char *, char *, uint64_t))v31;
    if (v74)
      break;
    v75 = 1;
LABEL_96:
    v12 = (Swift::Int)v19[1];
    v17 = (Swift::Int)v149;
    v2 = v143;
    if ((uint64_t)v149 >= v12)
      goto LABEL_105;
  }
  while (1)
  {
    v78 = v75 - 1;
    if (v75 >= 4)
    {
      v83 = &v76[2 * v75];
      v84 = *(v83 - 8);
      v85 = *(v83 - 7);
      v89 = __OFSUB__(v85, v84);
      v86 = v85 - v84;
      if (v89)
        goto LABEL_123;
      v88 = *(v83 - 6);
      v87 = *(v83 - 5);
      v89 = __OFSUB__(v87, v88);
      v81 = v87 - v88;
      v82 = v89;
      if (v89)
        goto LABEL_124;
      v90 = v75 - 2;
      v91 = &v76[2 * v75 - 4];
      v93 = *v91;
      v92 = v91[1];
      v89 = __OFSUB__(v92, v93);
      v94 = v92 - v93;
      if (v89)
        goto LABEL_125;
      v89 = __OFADD__(v81, v94);
      v95 = v81 + v94;
      if (v89)
        goto LABEL_127;
      if (v95 >= v86)
      {
        v113 = &v76[2 * v78];
        v115 = *v113;
        v114 = v113[1];
        v89 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v89)
          goto LABEL_133;
        v106 = v81 < v116;
        goto LABEL_85;
      }
    }
    else
    {
      if (v75 != 3)
      {
        v107 = *((_QWORD *)v18 + 4);
        v108 = *((_QWORD *)v18 + 5);
        v89 = __OFSUB__(v108, v107);
        v100 = v108 - v107;
        v101 = v89;
        goto LABEL_79;
      }
      v80 = *((_QWORD *)v18 + 4);
      v79 = *((_QWORD *)v18 + 5);
      v89 = __OFSUB__(v79, v80);
      v81 = v79 - v80;
      v82 = v89;
    }
    if ((v82 & 1) != 0)
      goto LABEL_126;
    v90 = v75 - 2;
    v96 = &v76[2 * v75 - 4];
    v98 = *v96;
    v97 = v96[1];
    v99 = __OFSUB__(v97, v98);
    v100 = v97 - v98;
    v101 = v99;
    if (v99)
      goto LABEL_128;
    v102 = &v76[2 * v78];
    v104 = *v102;
    v103 = v102[1];
    v89 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v89)
      goto LABEL_130;
    if (__OFADD__(v100, v105))
      goto LABEL_132;
    if (v100 + v105 >= v81)
    {
      v106 = v81 < v105;
LABEL_85:
      if (v106)
        v78 = v90;
      goto LABEL_87;
    }
LABEL_79:
    if ((v101 & 1) != 0)
      goto LABEL_129;
    v109 = &v76[2 * v78];
    v111 = *v109;
    v110 = v109[1];
    v89 = __OFSUB__(v110, v111);
    v112 = v110 - v111;
    if (v89)
      goto LABEL_131;
    if (v112 < v100)
      goto LABEL_96;
LABEL_87:
    v11 = v78 - 1;
    if (v78 - 1 >= v75)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v19)
      goto LABEL_146;
    v117 = (uint64_t)v18;
    v118 = &v76[2 * v11];
    v119 = *v118;
    v120 = &v76[2 * v78];
    v121 = v120[1];
    v122 = v143;
    sub_100046568((unint64_t)&(*v19)[v155[9] * *v118], (unint64_t)&(*v19)[v155[9] * *v120], (unint64_t)&(*v19)[v155[9] * v121], v142);
    v143 = v122;
    if (v122)
      break;
    if (v121 < v119)
      goto LABEL_120;
    if (v78 > *(_QWORD *)(v117 + 16))
      goto LABEL_121;
    *v118 = v119;
    v76[2 * v11 + 1] = v121;
    v123 = *(_QWORD *)(v117 + 16);
    if (v78 >= v123)
      goto LABEL_122;
    v18 = (char *)v117;
    v75 = v123 - 1;
    memmove(&v76[2 * v78], v120 + 2, 16 * (v123 - 1 - v78));
    *(_QWORD *)(v117 + 16) = v123 - 1;
    v19 = v150;
    if (v123 <= 2)
      goto LABEL_96;
  }
  v2 = v143;
LABEL_102:
  swift_bridgeObjectRelease(v117);
  if (v137 < -1)
  {
    __break(1u);
    goto LABEL_104;
  }
LABEL_117:
  v133 = v136;
  *(_QWORD *)(v136 + 16) = 0;
  swift_bridgeObjectRelease(v133);
}

uint64_t sub_100010914()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _BOOL4 v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  _UNKNOWN **v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  double v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  NSString v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSString *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  double v82;
  double v83;
  id v84;
  uint64_t v85;
  uint64_t Strong;
  uint64_t v87;
  _UNKNOWN **v88;
  uint64_t v89;
  uint64_t ObjectType;
  uint64_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  id v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  id v112;
  uint64_t result;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  char v121[72];
  __int128 aBlock;
  __int128 v123;
  void *v124;
  uint64_t v125;
  char v126[48];
  char v127[24];
  uint64_t v128;

  v4 = v0;
  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v5);
  v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100047F14();
  v118 = *(_QWORD *)(v119 - 8);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018488();
  v9 = sub_100047D9C();
  v10 = sub_100047D9C();
  v11 = sub_100011484((uint64_t)v9, v10);
  sub_1000274F0();

  v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v120 = v12;

  sub_100019EAC(v13, "isEditing");
  v14 = sub_10000F0E4();
  v16 = v15;
  v18 = v17;
  v128 = v14;
  v19 = sub_100019EAC(v14, "splitViewController");
  if (v19)
  {
    objc_msgSend(v19, "displayMode");
    sub_1000274F0();
    v20 = (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(sub_100019EAC((uint64_t)v19, "traitCollection"), "horizontalSizeClass");
  sub_1000274F0();
  if (v2 != 1)
  {
    v21 = (uint64_t)sub_100019EAC(v21, "isEditing");
    if ((v21 & 1) == 0 && v20)
    {
      aBlock = 0u;
      v123 = 0u;
      v22 = objc_allocWithZone((Class)UIBarButtonItem);
      sub_100045EFC();
      v2 = v23;
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain(v14);
        v115 = sub_100047EC8();
        result = swift_bridgeObjectRelease(v14);
        if (v115 < 0)
        {
          __break(1u);
          return result;
        }
      }
      v21 = sub_100046D04(0, 0, v2);
    }
  }
  objc_msgSend(sub_100019EAC(v21, "traitCollection"), "horizontalSizeClass");
  sub_1000274F0();
  v25 = NSKeyedArchiver_ptr;
  v117 = inited;
  if (v2 == 1)
  {
    inited = (uint64_t)v7;
  }
  else
  {
    v26 = sub_100019EAC(v24, "navigationItem");
    objc_msgSend(v26, "setStyle:", 2);

    v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v25 = (_UNKNOWN **)objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v27);

    if ((unint64_t)v128 >> 62)
    {
      v114 = v128 < 0 ? v128 : v128 & 0xFFFFFFFFFFFFFF8;
      sub_100042DD8();
      v39 = _CocoaArrayWrapper.endIndex.getter(v114);
      sub_100018420();
      if ((v39 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_55;
      }
    }
    inited = (uint64_t)v7;
    sub_100046D04(0, 0, (uint64_t)v25);
    v24 = sub_100043F1C((unint64_t)v16);
    v16 = (void *)v24;
    v25 = NSKeyedArchiver_ptr;
  }
  v28 = sub_100019EAC(v24, "navigationItem");
  if (v18)
  {
    v29 = sub_100026B2C((uint64_t)&unk_1000C1D80, 24);
    *(_QWORD *)(v29 + 16) = v18;
    v124 = sub_1000471F4;
    v125 = v29;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v123 = sub_100044218;
    *((_QWORD *)&v123 + 1) = &unk_1000C1D98;
    v30 = _Block_copy(&aBlock);
    swift_release(v125);
    objc_msgSend(v28, "setTitleMenuProvider:", v30);
    _Block_release(v30);

    v28 = sub_100019EAC(v31, "navigationItem");
    objc_msgSend(v28, "setLargeTitleDisplayMode:", 2);
  }
  else
  {
    objc_msgSend(v28, "setTitleMenuProvider:", 0);
  }

  v33 = sub_100019EAC(v32, "navigationItem");
  v34 = swift_bridgeObjectRetain(v128);
  sub_100047088(v34);

  v36 = sub_100019EAC(v35, "navigationItem");
  sub_100047088((uint64_t)v16);

  v38 = sub_100019EAC(v37, "navigationItem");
  v39 = (unint64_t)&selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_;
  v40 = (uint64_t)sub_100019EAC((uint64_t)v38, "isEditing");
  v7 = (char *)inited;
  if ((v40 & 1) != 0)
  {
    v41 = 0;
  }
  else
  {
    v42 = sub_100019EAC(v40, "traitCollection");
    v43 = objc_msgSend(v42, "horizontalSizeClass");

    v41 = v43 != (id)1;
  }
  objc_msgSend(v38, "setLeftItemsSupplementBackButton:", v41);

  v44 = *(void **)(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  if (v44)
  {
    v45 = v44;
    sub_100014294();

  }
  v16 = (void *)objc_opt_self(UIFont);
  v46 = objc_msgSend(v16, "defaultFontSize");
  v3 = v47;
  v48 = sub_100019EAC((uint64_t)v46, "isEditing");
  if (!(_DWORD)v48)
    goto LABEL_28;
  v49 = (unint64_t)sub_100043E58((uint64_t)v48);
  if (!(v49 >> 62))
  {
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_24;
  }
LABEL_55:
  v50 = sub_100047E80();
LABEL_24:
  v51 = sub_100018420();
  if (v50 >= 1)
  {
    v52 = sub_100019EAC(v51, "navigationItem");
    v53 = sub_100012E2C(&qword_1000D11C8);
    inited = sub_100026B2C(v53, 72);
    *(_OWORD *)(inited + 16) = xmmword_100096E80;
    v54 = (unint64_t)sub_100043E58(inited);
    if (v54 >> 62)
      v55 = sub_100047E80();
    else
      v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_100018420();
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v55;
    static String.localizedStringWithFormat(_:_:)(v116, v120, inited);
    swift_bridgeObjectRelease(inited);
    sub_100030628();
    sub_1000470E0();

    v56 = objc_msgSend(v16, "monospacedDigitSystemFontOfSize:weight:", v3, UIFontWeightSemibold);
    goto LABEL_32;
  }
LABEL_28:
  v57 = swift_bridgeObjectRelease(v120);
  v58 = sub_100019EAC(v57, "navigationItem");
  if (sub_100019EAC((uint64_t)v58, *(const char **)(v39 + 3360)))
  {
    v59 = String._bridgeToObjectiveC()();
    v60 = String._bridgeToObjectiveC()();
    v61 = sub_100011544(v59);
    sub_100047EEC();

    static String._unconditionallyBridgeFromObjectiveC(_:)(inited);
  }
  else
  {
    v62 = v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
    sub_100026D70(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)v127);
    inited = v118;
    v63 = v117;
    v64 = v62;
    v65 = v119;
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v117, v64, v119);
    LibraryConfiguration.title.getter(v66);
    (*(void (**)(uint64_t, uint64_t))(inited + 8))(v63, v65);
  }
  sub_1000470E0();

  v56 = objc_msgSend(v16, "boldSystemFontOfSize:", v3);
LABEL_32:
  v120 = v56;
  v67 = sub_100019EAC((uint64_t)v120, "navigationController");
  if (v67)
  {
    v68 = v67;
    v69 = objc_msgSend(v67, "navigationBar");

    v70 = sub_100012E2C(&qword_1000D0AF0);
    inited = swift_initStackObject(v70, v121);
    *(_OWORD *)(inited + 16) = xmmword_100096E80;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_100047E90(inited, &qword_1000D0AF8, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v120;
    type metadata accessor for Key(0);
    v72 = v71;
    sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
    v74 = v73;
    v75 = NSFontAttributeName;
    v76 = v120;
    v77 = Dictionary.init(dictionaryLiteral:)(inited, v72, (char *)&type metadata for Any + 8, v74);
    sub_100047140(v77, v69);

  }
  objc_msgSend(sub_100019EAC((uint64_t)v67, "traitCollection"), "horizontalSizeClass");
  sub_100047EEC();
  if (inited != 1)
    goto LABEL_37;
  v79 = sub_100019EAC(v78, "navigationItem");
  v80 = objc_msgSend(v79, "titleMenuProvider");

  if (v80)
  {
    _Block_release(v80);
LABEL_37:
    v81 = *(void **)(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton);
    if (!v81)
      goto LABEL_40;
    v82 = 2.0;
    v83 = 0.0;
    goto LABEL_39;
  }
  v81 = *(void **)(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton);
  if (v81)
  {
    v82 = 2.0;
    v83 = 10.0;
LABEL_39:
    v84 = v81;
    WFConvertEdgeInsetsToRTLIfNeeded(0.0, v83, 0.0, v82);
    objc_msgSend(v84, "setContentEdgeInsets:");

  }
LABEL_40:
  v85 = v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (Strong)
  {
    v87 = Strong;
    v88 = v25;
    v89 = *(_QWORD *)(v85 + 8);
    ObjectType = swift_getObjectType(Strong);
    dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v89);
    swift_unknownObjectRelease(v87);
    v91 = type metadata accessor for RunningWorkflow(0);
    v92 = sub_100019D44((uint64_t)v7, 1, v91) != 1;
  }
  else
  {
    v88 = v25;
    v93 = type metadata accessor for RunningWorkflow(0);
    sub_100026B84((uint64_t)v7, v94, v95, v93);
    v92 = 0;
  }
  sub_10001222C((uint64_t)v7, (uint64_t *)&unk_1000D30D0);
  v96 = sub_100012E2C(&qword_1000D1E80);
  v97 = swift_initStackObject(v96, v126);
  *(_OWORD *)(v97 + 16) = xmmword_100096F60;
  v98 = *(void **)(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton);
  *(_QWORD *)(v97 + 32) = v98;
  v99 = *(void **)(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton);
  *(_QWORD *)(v97 + 40) = v99;
  *(_QWORD *)&aBlock = v97;
  specialized Array._endMutation()(v97, v100);
  v119 = aBlock;
  v101 = aBlock + 32;
  v102 = v98;
  v103 = v99;
  v104 = 0;
  do
  {
    v105 = *(void **)(v101 + 8 * v104);
    v106 = v104 + 1;
    if (v105)
    {
      v107 = v105;
      objc_msgSend(v107, "setUserInteractionEnabled:", !v92);
      v108 = (void *)objc_opt_self(v88[62]);
      v109 = sub_100026B2C((uint64_t)&unk_1000C1D30, 25);
      *(_QWORD *)(v109 + 16) = v107;
      *(_BYTE *)(v109 + 24) = v92;
      v124 = sub_100007DD4;
      v125 = v109;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v123 = sub_100007DA8;
      *((_QWORD *)&v123 + 1) = &unk_1000C1D48;
      v110 = _Block_copy(&aBlock);
      v111 = v125;
      v112 = v107;
      swift_release(v111);
      objc_msgSend(v108, "animateWithDuration:animations:", v110, 0.15);
      _Block_release(v110);

    }
    v104 = 1;
  }
  while (v106 != 2);
  swift_bridgeObjectRelease(v119);

  return swift_bridgeObjectRelease(v128);
}

id sub_100011484(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = a2;
  if (objc_msgSend(v2, "length"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByReplacingOccurrencesOfString:withString:", CFSTR("\n"), CFSTR(" ")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ (Pluralization)"), v3));

    v5 = sub_10001159C();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", v4, v2, 0));

  }
  else
  {
    v7 = v2;
  }

  return v7;
}

id sub_100011544(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = sub_10001159C();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v1, v1, 0));

  return v4;
}

id sub_10001159C()
{
  if (qword_1000DADA0 != -1)
    dispatch_once(&qword_1000DADA0, &stru_1000C4050);
  return (id)qword_1000DAD98;
}

void sub_1000115DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems);
  if (v2 == 1)
  {
    sub_100043748();
    v3 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    swift_bridgeObjectRetain(v4);
    sub_100014BF8(v3);
  }
  sub_100011638(v2);
  sub_100026B34();
}

uint64_t sub_100011638(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

id sub_100011648(double a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t (**v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(uint64_t, uint64_t);
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[5];
  char v102[8];
  _QWORD v103[3];

  v8 = sub_10008C600();
  v90 = type metadata accessor for TopHitCollectionViewStyle(v8);
  v86 = *(_QWORD *)(v90 - 8);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018548();
  v11 = sub_100019D8C(v10);
  v92 = type metadata accessor for TopHitViewColorScheme(v11);
  v91 = *(_QWORD *)(v92 - 8);
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100018548();
  v14 = sub_100019D8C(v13);
  v85 = type metadata accessor for AutoShortcutAppSection(v14);
  v83 = *(_QWORD *)(v85 - 8);
  sub_100018044();
  __chkstk_darwin(v15);
  sub_100018548();
  v17 = sub_100019D8C(v16);
  v18 = (int *)type metadata accessor for AppShortcutChiclet(v17);
  sub_100018034();
  __chkstk_darwin(v19);
  sub_100018470();
  v87 = sub_100012E2C((uint64_t *)&unk_1000D43F0);
  sub_100018034();
  __chkstk_darwin(v20);
  sub_10004248C();
  v93 = v21;
  sub_100042654();
  __chkstk_darwin(v22);
  v24 = sub_100019D8C((uint64_t)&v77 - v23);
  v25 = type metadata accessor for UUID(v24);
  sub_100026DAC();
  __chkstk_darwin(v26);
  sub_10004248C();
  v94 = v27;
  sub_100042654();
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v77 - v30;
  v32 = AutoShortcutAppSection.items.getter(v29);
  v33 = type metadata accessor for AggregatedEntry(0);
  sub_1000040A8((unint64_t *)&unk_1000D0AE0, (uint64_t (*)(uint64_t))&type metadata accessor for AggregatedEntry);
  v35 = Array<A>.hashValue.getter(v32, v33, v34);
  swift_bridgeObjectRelease(v32);
  v82 = a3;
  v36 = Bool.hashValue.getter(a3);
  v97 = v36 ^ Double.hashValue.getter(a1) ^ v35;
  AutoShortcutAppSection.id.getter();
  v98 = v3;
  v37 = (uint64_t *)&v3[qword_1000D3FD8];
  sub_1000424D0((uint64_t)&v3[qword_1000D3FD8], (uint64_t)v102, 0);
  v84 = v37;
  v38 = *v37;
  swift_bridgeObjectRetain(*v37);
  v39 = sub_1000863DC((uint64_t)v31, v38);
  v41 = v40;
  swift_bridgeObjectRelease(v38);
  v42 = *(void (**)(char *, uint64_t))(v5 + 8);
  v95 = v25;
  v42(v31, v25);
  if (v39)
  {
    if (v41 == v97)
    {
      v43 = objc_msgSend(v39, "superview");

      if (!v43)
        return v39;
    }

  }
  v44 = sub_10008C4A0();
  v80 = (void (*)(uint64_t, uint64_t))v42;
  if (v44)
  {
    v45 = (void *)v44;
    v46 = v3;
    sub_100012AF4(v103);

    v3 = (char *)(id)v103[2];
    v47 = sub_100012E6C(v103);
    v48 = (uint64_t)sub_100019D50((uint64_t)v47, "itemsPerRow");

  }
  else
  {
    v46 = v3;
    v48 = 2;
  }
  sub_10008C4A0();
  sub_10008C600();
  v77 = type metadata accessor for LibraryIndirectMenuDataSource();
  sub_10008C240(v77);
  sub_100061A54(v3);
  v78 = v49;
  v50 = v83;
  v51 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v52 = v81;
  v79 = v46;
  v53 = v85;
  v51((uint64_t)v81, v46, v85);
  v54 = sub_10008C240((uint64_t)&unk_1000C3AE8);
  swift_weakInit(v54 + 16, v98);
  v55 = (_QWORD *)(v4 + v18[10]);
  *v55 = swift_getKeyPath(&unk_10009B4E0);
  v56 = sub_100012E2C(&qword_1000D4400);
  sub_10008C4A8(v56);
  v57 = (_QWORD *)(v4 + v18[11]);
  *v57 = swift_getKeyPath(&unk_10009B510);
  v58 = sub_100012E2C(&qword_1000D06D0);
  sub_10008C4A8(v58);
  v51(v4, v52, v53);
  *(_BYTE *)(v4 + v18[5]) = v82 & 1;
  *(double *)(v4 + v18[6]) = a1;
  *(_QWORD *)(v4 + v18[9]) = v48;
  v59 = (uint64_t (**)(uint64_t))(v4 + v18[7]);
  *v59 = sub_10008BA80;
  v59[1] = (uint64_t (*)(uint64_t))v54;
  v60 = sub_100042B1C();
  v61 = AutoShortcutAppSection.bundleIdentifier.getter(v60);
  v63 = v62;
  v64 = v88;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 104))(v88, enum case for TopHitCollectionViewStyle.library(_:), v90);
  v65 = v89;
  TopHitViewColorScheme.init(bundleIdentifier:style:)(v61, v63, v64);
  swift_release(v54);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v53);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v4 + v18[8], v65, v92);
  KeyPath = swift_getKeyPath(&unk_10009B540);
  v101[3] = v77;
  sub_1000040A8(&qword_1000D3890, (uint64_t (*)(uint64_t))type metadata accessor for LibraryIndirectMenuDataSource);
  v101[4] = v67;
  v68 = v78;
  v101[0] = v78;
  sub_10000D74C((uint64_t)v101, (uint64_t)&v100, &qword_1000D3898);
  v99 = KeyPath;
  v69 = v96;
  sub_100080FB0(v4, v96);
  sub_10000D74C((uint64_t)&v99, v69 + *(int *)(v87 + 36), &qword_1000D38A0);
  swift_retain(v68);
  sub_10001222C((uint64_t)&v99, &qword_1000D38A0);
  sub_10008BAB8(v4);
  sub_10008C550((uint64_t)v101);
  sub_10000D74C(v69, v93, (uint64_t *)&unk_1000D43F0);
  v70 = objc_allocWithZone((Class)sub_100012E2C(&qword_1000D4408));
  v71 = sub_10008C3F8();
  v72 = (void *)_UIHostingView.init(rootView:)(v71);
  v73 = v94;
  AutoShortcutAppSection.id.getter();
  sub_1000424D0((uint64_t)v84, (uint64_t)&v99, 33);
  v39 = v72;
  sub_10008B688((uint64_t)v39, v97, v73);
  v80(v73, v95);
  swift_endAccess(&v99);
  swift_release(v68);
  v74 = sub_100026FE0();
  sub_10001222C(v74, v75);
  return v39;
}

void sub_100011CB8()
{
  uint64_t v0;
  char *v1;
  uint64_t *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  unsigned __int16 v22;
  unsigned __int16 v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[5];

  sub_100018190();
  v3 = v1;
  v4 = type metadata accessor for ShortcutChiclet(0);
  v98 = *(_QWORD *)(v4 - 8);
  sub_100018044();
  __chkstk_darwin(v5);
  sub_10004248C();
  v96 = v6;
  sub_100042654();
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - v8;
  sub_100012E2C(&qword_1000D4398);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100018458();
  sub_100012E2C(&qword_1000D43A0);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_10008C3DC();
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v86 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v86 - v16;
  sub_100071E70((uint64_t)&v86 - v16, 1);
  v18 = *(void **)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut];
  if (v18)
  {
    v19 = v18;
    v91 = v19;
    v20 = objc_msgSend(v19, "chicletColor");
    v97 = v0;
    v21 = (uint64_t)v20;
    v22 = (unsigned __int16)objc_msgSend((id)objc_opt_self(WFWorkflowIcon), "defaultGlyphCharacter");
    v93 = v15;
    v23 = v22;
    v24 = objc_allocWithZone((Class)WFWorkflowIcon);
    sub_10008B4C0(v21, v23, 0, 0xF000000000000000);
    v26 = v25;
    v27 = sub_10008C240((uint64_t)&unk_1000C3AC0);
    swift_unknownObjectWeakInit(v27 + 16, v3);
    v28 = type metadata accessor for ShortcutChiclet.MenuItemDataSource(0);
    sub_100068E6C(v28);
    v29 = ShortcutChiclet.MenuItemDataSource.init(getMenuItems:)(sub_10008B910, v27);
    v95 = (char *)v4;
    v30 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_model];
    *v2 = v29;
    v31 = v29;
    v92 = v29;
    v32 = enum case for ShortcutChiclet.ButtonType.menu(_:);
    v33 = sub_10008C62C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v2, v32, v33);
    sub_100015D74((uint64_t)v2, 0, 1, v33);
    swift_retain(v31);
    v87 = v30;
    dispatch thunk of ShortcutChiclet.Model.buttonType.setter(v2);
    v34 = objc_msgSend(v19, "triggerPhrase");
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v89 = v36;
    v90 = v35;

    v99[3] = sub_100003B2C(0, &qword_1000D43A8, WFWorkflowIcon_ptr);
    v99[4] = &protocol witness table for WFWorkflowIcon;
    v99[0] = v26;
    v88 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_associatedBundleId];
    v94 = v17;
    v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_associatedBundleId + 8];
    v38 = *(_QWORD *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_progress];
    sub_10008C39C();
    sub_100042AD8();
    swift_retain(v38);
    v39 = v26;
    v1 = v3;
    sub_1000122E4();
    v41 = v40;
    v42 = v9;
    v44 = v43;
    sub_100012278();
    v46 = v45;
    v48 = v47;
    sub_100012350();
    v84 = v46;
    v15 = v93;
    v82 = v41;
    v83 = v44;
    v9 = v42;
    v0 = v97;
    v49 = v37;
    v17 = v94;
    v4 = (uint64_t)v95;
    ShortcutChiclet.init(name:icon:textColor:associatedAppBundleIdentifier:model:progress:runAction:stopAction:accessibilitySelectionAction:)(v90, v89, v99, 0, v88, v49, v87, v38, v82, v83, v84, v48, v50, v51);
    swift_release(v92);

    v52 = (uint64_t)v17;
  }
  else
  {
    v53 = *(void **)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference];
    if (!v53)
      goto LABEL_6;
    v97 = v0;
    v54 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_model];
    v55 = *(_QWORD *)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_progress];
    v94 = v53;
    sub_100042AD8();
    sub_100042B1C();
    sub_1000122E4();
    v95 = v9;
    v57 = v56;
    v59 = v58;
    sub_100012278();
    v60 = v17;
    v62 = v61;
    v64 = v63;
    sub_100012350();
    v85 = v65;
    v66 = v54;
    v0 = v97;
    v67 = v57;
    v9 = v95;
    v68 = v59;
    v3 = v1;
    v69 = v62;
    v17 = v60;
    ShortcutChiclet.init(reference:model:progress:runAction:stopAction:accessibilitySelectionAction:)(v94, v66, v55, v67, v68, v69, v64, v70, v85);
    v52 = (uint64_t)v60;
  }
  sub_10001222C(v52, &qword_1000D43A0);
  sub_100071E70((uint64_t)v15, 0);
  sub_1000123CC((uint64_t)v15, (uint64_t)v17, &qword_1000D43A0);
LABEL_6:
  sub_10000D74C((uint64_t)v17, v0, &qword_1000D43A0);
  v71 = sub_100019D44(v0, 1, v4);
  if ((_DWORD)v71 == 1)
  {
    sub_10008C5CC(v71, &qword_1000D43A0);
  }
  else
  {
    sub_10008C548((uint64_t)v9, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 32));
    v73 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_hostingView];
    if (v73)
    {
      v74 = v98;
      sub_10008C548(v96, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 16));
      v75 = v73;
      v76 = sub_10008C3F8();
      dispatch thunk of _UIHostingView.rootView.setter(v76);

    }
    else
    {
      type metadata accessor for LibraryCellHostingView(0);
      v74 = v98;
      v77 = v96;
      sub_10008C548(v96, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 16));
      sub_100089DA8(v77);
      objc_opt_self(UIColor);
      v78 = sub_100027640();
      v79 = sub_100019D50((uint64_t)v78, "clearColor");
      sub_100079D80((uint64_t)v79, "setBackgroundColor:");

      v80 = objc_msgSend(v3, "contentView");
      objc_msgSend(v80, "addSubview:", v78);

      v81 = v78;
      sub_100089E98((uint64_t)v78);

    }
    v72 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v9, v4);
  }
  sub_10008C5CC(v72, &qword_1000D43A0);
  sub_100018094();
}

void sub_10001222C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100012E2C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_100018188();
}

uint64_t type metadata accessor for LibraryCellHostingView(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D4140, (uint64_t)&nominal type descriptor for LibraryCellHostingView);
}

void sub_100012278()
{
  uint64_t v0;
  void (*v1)();
  void (**v2)();
  uint64_t v3;

  v2 = (void (**)())(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop))
  {
    v3 = sub_10008C240((uint64_t)&unk_1000C3AC0);
    sub_10008C2D4(v3);
    *v2 = sub_10008B8E8;
    v2[1] = v1;
    sub_100042B1C();
    sub_10008C370();
  }
  sub_10008C344();
  sub_100026D40();
}

void sub_1000122E4()
{
  uint64_t v0;
  void (*v1)();
  void (**v2)();
  uint64_t v3;

  v2 = (void (**)())(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run))
  {
    v3 = sub_10008C240((uint64_t)&unk_1000C3AC0);
    sub_10008C2D4(v3);
    *v2 = sub_10008B8F0;
    v2[1] = v1;
    sub_100042B1C();
    sub_10008C370();
  }
  sub_10008C344();
  sub_100026D40();
}

void sub_100012350()
{
  uint64_t v0;
  void (*v1)();
  void (**v2)();
  uint64_t v3;

  v2 = (void (**)())(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect))
  {
    v3 = sub_10008C240((uint64_t)&unk_1000C3AC0);
    sub_10008C2D4(v3);
    *v2 = sub_10008B8C8;
    v2[1] = v1;
    sub_100042B1C();
    sub_10008C370();
  }
  sub_10008C344();
  sub_100026D40();
}

uint64_t sub_1000123BC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

void sub_1000123CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_10005E73C(a1, a2, a3);
  sub_10005E570(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100018188();
}

double sub_1000123F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  id v34;
  _QWORD *v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t);
  Class isa;
  double v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  _QWORD v71[2];
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81[11];
  _QWORD v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CGRect v86;

  v5 = v3;
  v74 = a2;
  v75 = a1;
  v7 = type metadata accessor for IndexPath(0);
  sub_100019DD8(v7, (uint64_t)&v85);
  v79 = v8;
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018548();
  v78 = v10;
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v11);
  sub_100018548();
  v13 = sub_100019D8C(v12);
  v14 = type metadata accessor for ShortcutsLibraryItem.ItemType(v13);
  sub_100019DD8(v14, (uint64_t)&v83);
  v76 = v15;
  sub_100018044();
  __chkstk_darwin(v16);
  sub_100018548();
  v18 = sub_100019D8C(v17);
  v19 = type metadata accessor for LibrarySectionOptions.Header(v18);
  sub_100019DD8(v19, (uint64_t)&v84);
  v80 = v20;
  sub_100018044();
  __chkstk_darwin(v21);
  sub_100019D7C();
  v24 = v23 - v22;
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v25);
  v26 = sub_100019DBC();
  v27 = type metadata accessor for LibrarySectionOptions(v26);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)v71 - v32;
  sub_100012AF4(v81);
  v34 = v81[3];
  v35 = sub_100012E6C(v81);
  sub_100019D50((uint64_t)v35, "sectionInset");
  v37 = v36;

  sub_100012A90();
  v38 = a3;
  sub_100012D0C();
  sub_100019D9C();
  v39 = sub_100019EFC();
  v40 = sub_100019D44(v4, 1, v39);
  if ((_DWORD)v40 == 1)
  {
    sub_10000D778(v4, &qword_1000D0AD0);
  }
  else
  {
    v71[1] = v38;
    ShortcutsLibrarySection.options.getter(v40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v4, v39);
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v33, v31, v27);
    LibrarySectionOptions.header.getter(v41);
    v42 = v80;
    v43 = sub_100019EB4(v24, *(uint64_t (**)(uint64_t, _QWORD))(v80 + 88));
    v44 = v24;
    v73 = v27;
    v72 = v33;
    if ((_DWORD)v43 == enum case for LibrarySectionOptions.Header.tip(_:))
    {
      LibrarySectionOptions.hasNoShortcuts.getter();
      sub_100019E98();
      if ((v45 & 1) != 0 || (v46 = sub_10000B704(), (v46 & 1) != 0) && sub_1000141A0(v46))
      {
        v47 = v28;
        v37 = 0.0;
      }
      else
      {
        v47 = v28;
      }
      sub_100019EE0();
      v49 = v42;
      v44 = v24;
      v48 = (void *)v5;
    }
    else
    {
      v47 = v28;
      if ((_DWORD)v43 == enum case for LibrarySectionOptions.Header.none(_:))
      {
        v48 = (void *)v5;
        if (sub_1000141A0(v43))
          v37 = 0.0;
      }
      else
      {
        if ((_DWORD)v43 == enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
          v37 = 0.0;
        v48 = (void *)v5;
      }
      sub_100019EE0();
      sub_100019E98();
    }
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v44, v4);
    sub_100012A90();
    sub_100019DF4();
    sub_100012EC0((uint64_t)v33, v5);
    sub_100019D9C();
    sub_100019E68();
    v50 = type metadata accessor for ShortcutsLibraryItem(0);
    v51 = sub_100019D44(v5, 1, v50);
    if ((_DWORD)v51 == 1)
    {
      sub_10000D778(v5, &qword_1000D3670);
    }
    else
    {
      v52 = v77;
      ShortcutsLibraryItem.itemType.getter(v51);
      v53 = sub_100019E74();
      v54(v53);
      if (sub_100019EB4(v52, *(uint64_t (**)(uint64_t, _QWORD))(v76 + 88)) != enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
      {
        sub_100019D58((uint64_t)v72, *(uint64_t (**)(uint64_t, _QWORD))(v47 + 8));
        v67 = sub_100019E74();
        v69(v67, v68);
        return v37;
      }
      v55 = sub_100019E74();
      v56(v55);
      type metadata accessor for AutoShortcutAppSection(0);
      v57 = sub_100019EC0();
      v58(v57);
      sub_100019DF4();
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      sub_100019E68();
      objc_msgSend(v48, "collectionView:layout:sizeForItemAtIndexPath:", v75, v74, isa);
      v61 = v60;
      v63 = v62;

      if (v61 != 0.0 || v63 != 0.0)
      {
        sub_100019EAC(v64, "frame");
        CGRectGetWidth(v86);
        sub_100012AF4(v82);
        v65 = (id)v82[3];
        v66 = sub_100012E6C(v82);
        sub_100019EAC((uint64_t)v66, "sectionInset");

        sub_100019D58((uint64_t)v72, *(uint64_t (**)(uint64_t, _QWORD))(v47 + 8));
        return v37;
      }
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v72, v73);
  }
  return v37;
}

uint64_t type metadata accessor for LibraryCell()
{
  return objc_opt_self(_TtC9Shortcuts11LibraryCell);
}

void sub_100012A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource);
  if (!v3)
  {
    sub_10000C98C();
    sub_100009730(v4);
    sub_100027368();
    v5 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v0;
    swift_retain(v0);
    swift_release(v5);
    v3 = 0;
  }
  swift_retain(v3);
  sub_100018388();
}

id sub_100012AF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  id result;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v3 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 72);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 80);
  if (v5)
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
    v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 72);
    v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 80);
  }
  else
  {
    v43 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
    v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
    v46 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
    v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
    v45 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
    v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
    v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
    v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
    sub_100018894(*(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout), (uint64_t)&v48);
    v29 = v53;
    v30 = *(_QWORD *)v3;
    v41 = *(void **)(v3 + 16);
    v42 = *(_QWORD *)(v3 + 8);
    v39 = *(_QWORD *)(v3 + 32);
    v40 = *(void **)(v3 + 24);
    v37 = *(_QWORD *)(v3 + 48);
    v38 = *(_QWORD *)(v3 + 40);
    v36 = *(_QWORD *)(v3 + 56);
    v35 = *(_OWORD *)(v3 + 64);
    v31 = *(_QWORD *)(v3 + 80);
    v32 = v49;
    *(_OWORD *)v3 = v48;
    *(_OWORD *)(v3 + 16) = v32;
    v33 = v51;
    *(_OWORD *)(v3 + 32) = v50;
    *(_OWORD *)(v3 + 48) = v33;
    *(_OWORD *)(v3 + 64) = v52;
    *(_QWORD *)(v3 + 80) = v29;
    sub_1000799E8((uint64_t)&v48);
    sub_100013B84(v30, v42, v41, v40, v39, v38, v37, v36, v35, *((void **)&v35 + 1), v31);
    v12 = v43;
    v8 = v44;
    v11 = v28;
    v10 = v27;
    v9 = v26;
    v7 = v45;
    v6 = v46;
    v4 = v47;
    v20 = v48;
    v24 = *((_QWORD *)&v52 + 1);
    v25 = v53;
    v18 = *((_QWORD *)&v51 + 1);
    v17 = v51;
    v19 = v52;
    v16 = *((_QWORD *)&v50 + 1);
    v15 = v50;
    v23 = *((_QWORD *)&v49 + 1);
    v22 = v49;
    v21 = *((_QWORD *)&v48 + 1);
  }
  result = sub_100012CB0(v5, v4, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  *a1 = v20;
  a1[1] = v21;
  a1[2] = v22;
  a1[3] = v23;
  a1[4] = v15;
  a1[5] = v16;
  a1[6] = v17;
  a1[7] = v18;
  a1[8] = v19;
  a1[9] = v24;
  a1[10] = v25;
  return result;
}

id sub_100012CB0(id result, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11)
{
  id v13;
  id v14;

  if (result)
  {
    v13 = a10;
    swift_bridgeObjectRetain(a11);
    swift_retain(a2);
    v14 = a3;
    return a4;
  }
  return result;
}

void sub_100012D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  sub_100018190();
  v4 = v3;
  v5 = sub_100012E2C(&qword_1000D1EB0);
  sub_10004282C();
  __chkstk_darwin(v6);
  sub_10001827C();
  v7 = sub_100012E2C((uint64_t *)&unk_1000D43E0);
  sub_100026DAC();
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v9);
  v12 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v7);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v12 + 16) > v4)
  {
    v13 = v12 + 16 * v4;
    v15 = *(_QWORD *)(v13 + 32);
    v14 = *(_QWORD *)(v13 + 40);
    swift_bridgeObjectRetain(v14);
    v16 = sub_100018420();
    dispatch thunk of LibraryDataSource.sortedSections.getter(v16);
    v17[0] = v15;
    v17[1] = v14;
    OrderedDictionary.subscript.getter(v17, v5);
    swift_bridgeObjectRelease(v14);
    sub_100026D68(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_100018094();
    return;
  }
  __break(1u);
}

uint64_t sub_100012E2C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *sub_100012E6C(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = a1[1];
  v3 = (void *)a1[2];
  v4 = (void *)a1[3];
  v5 = (void *)a1[9];
  swift_bridgeObjectRelease(a1[10]);

  swift_release(v2);
  return a1;
}

uint64_t sub_100012EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_100012E2C(&qword_1000D0AD0);
  sub_100018034();
  __chkstk_darwin(v6);
  sub_100018470();
  v7 = sub_100019EFC();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_1000181C8();
  IndexPath.section.getter();
  sub_100012D0C();
  v9 = sub_100026C7C(v3);
  if (v10)
  {
    sub_10008C5CC(v9, &qword_1000D0AD0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2, v3, v7);
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v15, a1);
    if (v16)
    {
      ShortcutsLibrarySection.item(for:)(v15, v16);
      sub_100030630();
      return sub_100026C54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    }
    sub_100026C54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  v12 = type metadata accessor for ShortcutsLibraryItem(0);
  return sub_100026B84(a2, v13, v14, v12);
}

uint64_t sub_100012FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(void **, uint64_t);
  void **v41;
  uint64_t v43;
  uint64_t v44;

  v3 = type metadata accessor for RunningWorkflow.WorkflowType(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (id *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v9 = (void **)((char *)&v43 - v8);
  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100019D7C();
  v13 = v12 - v11;
  v14 = type metadata accessor for RunningWorkflow(0);
  v44 = *(_QWORD *)(v14 - 8);
  sub_100018044();
  __chkstk_darwin(v15);
  sub_100019D7C();
  v18 = v17 - v16;
  v19 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (!Strong)
  {
    sub_1000181B8(v13);
    goto LABEL_7;
  }
  v21 = *(_QWORD *)(v19 + 8);
  ObjectType = swift_getObjectType(Strong);
  dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v21);
  sub_100027130();
  if (sub_100019D44(v13, 1, v14) == 1)
  {
LABEL_7:
    sub_10000D778(v13, (uint64_t *)&unk_1000D30D0);
    goto LABEL_19;
  }
  v23 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v18, v13, v14);
  v24 = *(void **)(a1 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut);
  if (v24)
  {
    v25 = v24;
    RunningWorkflow.workflowType.getter();
    if ((*(unsigned int (**)(void **, uint64_t))(v4 + 88))(v9, v3) == enum case for RunningWorkflow.WorkflowType.autoShortcut(_:))
    {
      (*(void (**)(void **, uint64_t))(v4 + 96))(v9, v3);
      v26 = *v9;
      sub_100003B2C(0, &qword_1000D4370, NSObject_ptr);
      v27 = static NSObject.== infix(_:_:)(v26, v25);

LABEL_23:
      sub_1000487E0();
      return v27 & 1;
    }
    sub_1000487E0();

    v40 = *(void (**)(void **, uint64_t))(v4 + 8);
    v41 = v9;
LABEL_18:
    v40(v41, v3);
    goto LABEL_19;
  }
  v28 = *(void **)(a1 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference);
  if (v28)
  {
    v29 = v28;
    RunningWorkflow.workflowType.getter();
    if ((*(unsigned int (**)(id *, uint64_t))(v4 + 88))(v7, v3) == enum case for RunningWorkflow.WorkflowType.reference(_:))
    {
      (*(void (**)(id *, uint64_t))(v4 + 96))(v7, v3);
      v30 = *v7;
      v31 = objc_msgSend(*v7, "identifier");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      v35 = objc_msgSend(v29, "identifier");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      if (v32 == v36 && v34 == v38)
      {
        v27 = 1;
        v38 = v34;
      }
      else
      {
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v38, 0);
      }
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v38);

      goto LABEL_23;
    }
    sub_1000487E0();

    v40 = *(void (**)(void **, uint64_t))(v4 + 8);
    v41 = v7;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v14);
LABEL_19:
  v27 = 0;
  return v27 & 1;
}

void sub_100013354(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  type metadata accessor for RunningWorkflow.WorkflowType(0);
  sub_100026F60();
  __chkstk_darwin(v4);
  sub_1000184A0();
  v5 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_runCoordinator);
  v7 = sub_100026C98(v6, "runningAppShortcut");
  if (v7)
  {
    v8 = v7;
    *v2 = v7;
    sub_1000271E4((uint64_t)v7, enum case for RunningWorkflow.WorkflowType.autoShortcut(_:));
    v9 = v8;
    objc_msgSend(v5, "progress");
    v10 = sub_100026C98((uint64_t)objc_msgSend(v5, "waiting"), "runViewSource");
    v11 = sub_100026B2C((uint64_t)&unk_1000C0950, 24);
    v12 = sub_100027504(v11);
    sub_100026E20((uint64_t)v12, v13, v14, (uint64_t)sub_100026A18);

    v15 = type metadata accessor for RunningWorkflow(0);
    sub_100026D00(a1, 0, v16, v15);
  }
  else
  {
    v17 = sub_100026C98(0, "runningWorkflow");
    if (v17)
    {
      v18 = v17;
      *v2 = v17;
      sub_1000271E4((uint64_t)v17, enum case for RunningWorkflow.WorkflowType.reference(_:));
      v19 = v18;
      objc_msgSend(v5, "progress");
      v20 = sub_100026C98((uint64_t)objc_msgSend(v5, "waiting"), "runViewSource");
      v21 = sub_100026B2C((uint64_t)&unk_1000C0928, 24);
      v22 = sub_100027504(v21);
      sub_100026E20((uint64_t)v22, v23, v24, (uint64_t)sub_1000266BC);

      v25 = type metadata accessor for RunningWorkflow(0);
      sub_100026D00(a1, 0, v26, v25);

    }
    else
    {
      type metadata accessor for RunningWorkflow(0);
      sub_100027470();
      sub_100015D74(v27, v28, v29, v30);
    }
  }
}

void sub_100013568(uint64_t a1, char a2)
{
  _BYTE *v2;
  char v4;
  int v5;
  uint64_t v6;
  int v7;
  id v8;
  double v9;
  double v10;
  double v11;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  double v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v4 = a1;
  v5 = a1 & 1;
  v6 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled;
  v7 = v2[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled];
  v8 = sub_100019D50(a1, "contentView");
  objc_msgSend(v8, "alpha");
  v10 = v9;

  v11 = 0.5;
  if (v7)
    v11 = 1.0;
  if (v7 != v5 || v10 != v11)
  {
    v2[v6] = v5;
    v13 = sub_100026B2C((uint64_t)&unk_1000C3A70, 48);
    *(_QWORD *)(v13 + 16) = v2;
    *(_BYTE *)(v13 + 24) = v5;
    *(_OWORD *)(v13 + 32) = xmmword_10009B1E0;
    if ((a2 & 1) != 0)
    {
      v14 = (void *)objc_opt_self(UIView);
      aBlock[4] = sub_10008B894;
      v22 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100007DA8;
      aBlock[3] = &unk_1000C3A88;
      v15 = _Block_copy(aBlock);
      v16 = v22;
      v17 = v2;
      sub_100042AD8();
      swift_release(v16);
      objc_msgSend(v14, "animateKeyframesWithDuration:delay:options:animations:completion:", 4, v15, 0, 0.2, 0.0);
      swift_release(v13);
      _Block_release(v15);
    }
    else
    {
      v18 = objc_msgSend(v2, "contentView");
      v20 = v18;
      v19 = 0.5;
      if ((v4 & 1) != 0)
        v19 = 1.0;
      objc_msgSend(v18, "setAlpha:", v19);
      swift_release(v13);

    }
  }
}

uint64_t sub_100013738()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSString v10;
  NSString v11;
  id v12;
  NSString v13;

  v1 = v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isJiggling];
  v2 = objc_msgSend(v0, "layer");
  if ((_DWORD)v1 == 1)
  {
    sub_10008A354(0x800000010009F070, 0.134);
    v4 = (void *)v3;
    sub_10008B9C8(v3, 0xD000000000000014, 0x800000010009EFD0, v2);

    v5 = objc_msgSend(v0, "layer");
    sub_10008A354(0x800000010009F050, 0.142);
    v7 = (void *)v6;
    sub_10008B9C8(v6, 0xD000000000000014, 0x800000010009EFF0, v5);

    v8 = objc_msgSend(v0, "layer");
    sub_10008A478((uint64_t)v8);
    v10 = (NSString)v9;
    sub_10008B9C8(v9, 0xD000000000000010, 0x800000010009F010, v8);
  }
  else
  {
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "removeAnimationForKey:", v11);

    v12 = objc_msgSend(v0, "layer");
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "removeAnimationForKey:", v13);

    v8 = objc_msgSend(v0, "layer");
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "removeAnimationForKey:", v10);
  }

  return dispatch thunk of ShortcutChiclet.Model.isEditing.setter(v1);
}

uint64_t sub_100013974@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  id v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  _QWORD v33[2];

  v33[1] = a2;
  v3 = type metadata accessor for ShortcutChiclet.Model.Metrics.Button(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v33 - v8;
  v10 = type metadata accessor for ShortcutChiclet.Model.Metrics.Icon(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v33 - v15;
  objc_msgSend(a1, "workflowIconToLabelMargin");
  v18 = v17;
  v19 = objc_msgSend(a1, "workflowGlyphDimension");
  ShortcutChiclet.Model.Metrics.Icon.init(textSpacing:dimension:)(v19, v18, v20);
  ShortcutChiclet.Model.Metrics.Button.init(pointSize:)(objc_msgSend(a1, "workflowGlyphDimension"));
  v21 = objc_msgSend(a1, "floatingViewConfiguration");
  objc_msgSend(v21, "cornerRadius");
  v23 = v22;

  objc_msgSend(a1, "workflowContentEdgeInsets");
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  ShortcutChiclet.Model.Metrics.init(cornerRadius:insets:icon:button:)(v14, v7, v23, v25, v27, v29, v31);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

void sub_100013B84(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11)
{
  if (a1)
  {
    swift_release(a2);

    swift_bridgeObjectRelease(a11);
  }
}

uint64_t sub_100013BE0(Swift::UInt a1, char a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _BOOL8 v16;
  Swift::Int v17;
  unint64_t v18;
  char v19;
  uint64_t result;
  char v21;
  _QWORD *v22;
  double *v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v13 = sub_100013CF8(a1, a5);
  v15 = v12[2];
  v16 = (v14 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = v13;
  v19 = v14;
  sub_100012E2C(&qword_1000D44A0);
  result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a2 & 1, v17);
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_100013CF8(a1, a5);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_9:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&_s13LayoutMetricsV17TopHitsItemLayoutVN);
    __break(1u);
    return result;
  }
  v18 = result;
LABEL_5:
  v22 = *v6;
  if ((v19 & 1) == 0)
    return sub_10008B704(v18, a1, v22, a5, a3, a4);
  v23 = (double *)(v22[7] + 16 * v18);
  *v23 = a3;
  v23[1] = a4;
  return result;
}

unint64_t sub_100013CF8(Swift::UInt a1, double a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  sub_10001876C((int)v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100013D64(a1, v5, a2);
}

unint64_t sub_100013D64(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      if (*(double *)(v8 + 8) == a3 && *(_QWORD *)v8 == a1)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

void sub_100013DDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _BOOL8 v17;
  Swift::Int v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD **)v4;
  v27 = a2;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v14 = sub_100013F34(a3);
  v16 = v13[2];
  v17 = (v15 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  v19 = v14;
  v20 = v15;
  sub_100012E2C((uint64_t *)&unk_1000D4410);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v18))
    goto LABEL_5;
  v21 = sub_100013F34(a3);
  if ((v20 & 1) != (v22 & 1))
  {
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
    __break(1u);
    return;
  }
  v19 = v21;
LABEL_5:
  v23 = *v5;
  if ((v20 & 1) != 0)
  {
    v24 = v23[7] + 16 * v19;

    v25 = v27;
    *(_QWORD *)v24 = a1;
    *(_QWORD *)(v24 + 8) = v25;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    sub_1000140E0(v19, (uint64_t)v12, a1, v27, v23);
  }
}

unint64_t sub_100013F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  sub_1000040A8(&qword_1000D2970, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100013FA0(a1, v7);
}

unint64_t sub_100013FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1000040A8(&qword_1000D4420, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v18, v5, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1000140E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t type metadata accessor for LibraryIndirectMenuDataSource()
{
  return objc_opt_self(_TtC9Shortcuts29LibraryIndirectMenuDataSource);
}

BOOL sub_1000141A0(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;

  v1 = sub_100019D50(a1, "navigationItem");
  v2 = objc_msgSend(v1, "searchController");

  if (v2)
    return 1;
  v5 = sub_100019D50(v3, "traitCollection");
  v6 = objc_msgSend(v5, "verticalSizeClass");

  if (v6 != (id)2)
    return 0;
  v8 = sub_100019D50(v7, "traitCollection");
  v9 = objc_msgSend(v8, "horizontalSizeClass");

  return v9 == (id)2;
}

void sub_100014270()
{
  sub_10000F5BC();
}

void sub_100014294()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  void *v10;
  id v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;

  v0 = sub_10005E7FC(OBJC_IVAR____TtC9Shortcuts16SearchController_viewController);
  if (v0)
  {
    v38 = (id)v0;
    sub_1000693E0();
    v2 = v1;

    if (v2)
    {
      v10 = v38;
    }
    else
    {
      v11 = sub_100069E50(v3, "traitCollection", v4, v5, v6, v7, v8, v9, v35, v38);
      v18 = sub_100069E50((int)v11, "navigationItem", v12, v13, v14, v15, v16, v17, v36, v39);
      v19 = sub_10005E7FC(OBJC_IVAR____TtC9Shortcuts16SearchController_stateController);
      if (v19
        && (v20 = (void *)v19,
            v21 = *(void **)(v19 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection),
            v22 = v21,
            v20,
            v21)
        && (v23 = objc_msgSend(v22, "horizontalSizeClass"),
            v24 = sub_100019EAC((uint64_t)v23, "horizontalSizeClass"),
            v22,
            v23 != v24))
      {
        v34 = v40;
      }
      else
      {
        objc_msgSend(v18, "setPreferredSearchBarPlacement:", 0);
        v25 = sub_100007410();
        v26 = sub_100026FEC(v18, "setSearchController:");
        sub_100069E58(v26, v27, v28, v29, v30, v31, v32, v33, v37, v40);
        v34 = v11;
        v11 = v18;
        v18 = v25;
      }

      v10 = v18;
    }

  }
}

uint64_t sub_1000143E4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100014470(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100009398(a1, a2, a3, v3);
}

uint64_t sub_1000144CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000144DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000144EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000144FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001450C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001451C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001452C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001453C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001454C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001455C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001456C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001457C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100014584(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10001458C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100014594(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10001459C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

ValueMetadata *type metadata accessor for HeaderButtonStyle()
{
  return &type metadata for HeaderButtonStyle;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0888, (uint64_t)&unk_1000C01F8);
}

id sub_100014618(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10000A7A8(a1, a2, a3, a4, v4);
}

ValueMetadata *_s10DataSourceC13TopHitWrapperVMa()
{
  return &_s10DataSourceC13TopHitWrapperVN;
}

ValueMetadata *type metadata accessor for TipController.UseSiriToRunShortcutTip.PersonalContent()
{
  return &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent;
}

double sub_100014648()
{
  return sub_1000048F8();
}

const char *sub_100014650()
{
  return "alpha";
}

_QWORD *sub_10001465C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void *_s20LibrarySectionHeaderC13SectionHeaderVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

_QWORD *sub_100014688(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_1000146C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_100014700(uint64_t a1, unint64_t a2)
{
  Swift::Int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  const char *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v4 = String.UTF8View._foreignCount()();
    if (v4)
      goto LABEL_6;
    return _swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return _swiftEmptyArrayStorage;
LABEL_6:
  v5 = sub_100003C84(v4, 0);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, 2, 71, 0);
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    v9 = "Insufficient space allocated to copy string contents";
    v10 = "Swift/StringUTF8View.swift";
    v11 = 52;
    v12 = 26;
    goto LABEL_15;
  }
  if (v7 == v4)
    return v6;
  v9 = "invalid Collection: less than 'count' elements in collection";
  v10 = "Swift/ContiguousArrayBuffer.swift";
  v11 = 60;
  v12 = 33;
LABEL_15:
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v9, v11, 2, v10, v12);
  __break(1u);
  return result;
}

_QWORD *sub_100014870(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_100014700(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100025320(0, v2[2] + 1, 1, (uint64_t)v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_100025320((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 0;
  return v2;
}

uint64_t sub_100014904(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_100025208((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = (uint64_t)sub_100014870(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25);
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

void sub_100014A58(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068CEC((uint64_t)"Fatal error", v9, v10, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v11, v12, (uint64_t)"Swift/UnsafePointer.swift", v13, v14, v15, v16);
    __break(1u);
  }
  else if (a3 < a1 || a1 + *(_QWORD *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a4)(0) - 8) + 72) * a2 <= a3)
  {
    a4(0);
    v8 = sub_100068F54();
    swift_arrayInitWithTakeFrontToBack(v8);
  }
  else if (a3 == a1)
  {
    sub_10004280C();
  }
  else
  {
    v7 = sub_100068F54();
    swift_arrayInitWithTakeBackToFront(v7);
  }
}

void type metadata accessor for NSDirectionalRectEdge(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0798, (uint64_t)&unk_1000C00D8);
}

void sub_100014B28()
{
  sub_100004998((unint64_t *)&unk_1000D08F0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1000969CC);
}

id *sub_100014B54(id *a1)
{

  return a1;
}

uint64_t sub_100014B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D0AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  sub_100042DC8();
  v4(a2);
  return sub_10005E5CC(v3);
}

uint64_t sub_100014BF8(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

unint64_t sub_100014C08()
{
  unint64_t result;

  result = qword_1000D12A0;
  if (!qword_1000D12A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000D12A0);
  }
  return result;
}

uint64_t type metadata accessor for GalleryHostingViewController(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D0F70, (uint64_t)&nominal type descriptor for GalleryHostingViewController);
}

uint64_t sub_100014CAC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for GalleryHostingViewController.GalleryHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000037C0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GalleryHostingViewController.GalleryHostingController);
}

uint64_t sub_100014CFC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_100014D20(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_1000D4130);
}

uint64_t sub_100014D60()
{
  return sub_100003974(&qword_1000D39D8, type metadata accessor for SidebarViewController, (uint64_t)&unk_10009AC28);
}

uint64_t sub_100014DD0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = _s27MiniTipCollectionHeaderViewCMa();
  v0 = sub_100012E2C(&qword_1000D4528);
  result = String.init<A>(describing:)(&v3, v0);
  qword_1000DB180 = result;
  *(_QWORD *)algn_1000DB188 = v2;
  return result;
}

ValueMetadata *_s13LayoutMetricsV17TopHitsItemLayoutVMa()
{
  return &_s13LayoutMetricsV17TopHitsItemLayoutVN;
}

unint64_t sub_100014E28()
{
  unint64_t result;

  result = qword_1000D0B08;
  if (!qword_1000D0B08)
  {
    result = swift_getWitnessTable(&unk_100096EB4, &_s13LayoutMetricsV17TopHitsItemLayoutVN);
    atomic_store(result, (unint64_t *)&qword_1000D0B08);
  }
  return result;
}

void sub_100014E64()
{
  uint64_t v0;

  sub_100004C28(v0);
}

void sub_100014E6C()
{
  uint64_t v0;

  sub_100004D50(v0);
}

void sub_100014E74(uint64_t a1)
{
  uint64_t v1;

  sub_100005578(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_100014E84(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100005C24(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100014EC0()
{
  sub_1000040A8(&qword_1000D37E8, type metadata accessor for LibraryViewController);
}

void sub_100014EEC(Swift::Bool a1, uint64_t a2)
{
  swift_getWitnessTable(&unk_10009AAA0, a2);
  LibraryView.reload(animated:)(a1);
}

uint64_t sub_100014F2C(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[4] = &unk_10009B268;
  v2[5] = &unk_10009B280;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + qword_1000DB170);
}

uint64_t _s10DataSourceCMa(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D3FF0, (uint64_t)&_s10DataSourceCMn);
}

uint64_t _s20LibrarySectionHeaderCMa()
{
  return objc_opt_self(_TtCC9Shortcuts21LibraryViewController20LibrarySectionHeader);
}

ValueMetadata *_s20LibrarySectionHeaderC13SectionHeaderVMa()
{
  return &_s20LibrarySectionHeaderC13SectionHeaderVN;
}

void sub_100015028(uint64_t a1@<X8>)
{
  const void *v1;
  void *v3;
  _BYTE __dst[72];

  v3 = memcpy(__dst, v1, sizeof(__dst));
  sub_1000888F0((uint64_t)v3, a1);
}

uint64_t sub_10001506C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000A8408, 1);
}

void sub_10001507C()
{
  sub_10000C944(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView, (uint64_t (*)(uint64_t))sub_10000778C);
}

uint64_t _s21AppShortcutHeaderViewCMa()
{
  return objc_opt_self(WFAppShortcutHeaderView);
}

uint64_t sub_1000150DC(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, qword_1000DB138 + a1 + 16);
}

uint64_t type metadata accessor for LibraryViewController.TableHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000037C0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryViewController.TableHostingController);
}

uint64_t sub_100015138()
{
  return type metadata accessor for MainViewController(0);
}

void sub_100015140()
{
  sub_10000C944(&OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar, sub_100009CF4);
}

void sub_100015188()
{
  sub_10000A060(&qword_1000D1020, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

uint64_t sub_1000151B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a3);
  return RootView.navigate(to:with:)(a1, a2, a3, WitnessTable);
}

void sub_100015214()
{
  sub_10000A060(&qword_1000D1028, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

void sub_100015240()
{
  sub_10000A060((unint64_t *)&unk_1000D1030, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

void sub_10001526C()
{
  sub_10000A060(&qword_1000D1040, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
}

void sub_100015298()
{
  sub_10000A060((unint64_t *)&unk_1000D3840, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
}

unint64_t sub_1000152C4()
{
  unint64_t result;

  result = qword_1000D4328;
  if (!qword_1000D4328)
  {
    result = swift_getWitnessTable(&unk_10009B584, &type metadata for HeaderButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1000D4328);
  }
  return result;
}

void sub_100015364(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100030028();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100030080(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t type metadata accessor for TipController.UseSiriToRunShortcutTip(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D1458;
  if (!qword_1000D1458)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TipController.UseSiriToRunShortcutTip);
  return result;
}

void sub_100015420(void *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1000305F8();
  v2 = sub_100012E2C(&qword_1000D13B0);
  v3 = Tips.Parameter.wrappedValue.getter(&v22);
  v4 = v23;
  if (v23)
  {
    v5 = v22;
    v6 = v24;
    v7 = v25;
    swift_bridgeObjectRetain(v23);
    v8 = sub_1000271C0();
    v3 = (_QWORD *)sub_10002F1F8(v8, v9, v6, v7);
    if (!a1)
      goto LABEL_16;
  }
  else
  {
    if (!a1)
      return;
    v5 = 0;
  }
  v10 = sub_100019EAC((uint64_t)v3, "identifier");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  if (!v4)
  {
    if (!v13)
      return;
    goto LABEL_16;
  }
  if (!v13)
  {
LABEL_16:
    sub_100030628();
LABEL_17:
    v18 = a1;
    v22 = sub_10002F5E8(a1);
    v23 = v19;
    v24 = v20;
    v25 = v21;
    Tips.Parameter.wrappedValue.setter(&v22, v2);
    return;
  }
  if (v5 == v11 && v4 == v13)
  {
    sub_100030630();
    sub_100030628();
    return;
  }
  v15 = sub_1000271C0();
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v11, v13, 0);
  sub_100030630();
  sub_100030628();
  if ((v17 & 1) == 0)
    goto LABEL_17;
}

uint64_t storeEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_100015598()
{
  unint64_t result;

  result = qword_1000D13E0;
  if (!qword_1000D13E0)
  {
    result = swift_getWitnessTable(&unk_100097580, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent);
    atomic_store(result, (unint64_t *)&qword_1000D13E0);
  }
  return result;
}

unint64_t sub_1000155D4()
{
  unint64_t result;

  result = qword_1000D13F0;
  if (!qword_1000D13F0)
  {
    result = swift_getWitnessTable(&unk_100097558, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent);
    atomic_store(result, (unint64_t *)&qword_1000D13F0);
  }
  return result;
}

uint64_t sub_100015610(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

unint64_t sub_100015620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D4330;
  if (!qword_1000D4330)
  {
    v1 = sub_1000143E4(&qword_1000D4300);
    sub_100015718();
    sub_1000040A8(&qword_1000D2330, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D4330);
  }
  return result;
}

uint64_t sub_1000156A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  if (result)
  {
    v5 = result;
    swift_retain(a4);
    swift_retain(v5);
    return swift_retain(a3);
  }
  return result;
}

uint64_t sub_1000156E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_release(result);
    swift_release(a3);
    return swift_release(a4);
  }
  return result;
}

unint64_t sub_100015718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D4310;
  if (!qword_1000D4310)
  {
    v1 = sub_1000143E4(&qword_1000D42F8);
    sub_100004038(&qword_1000D4318, &qword_1000D42F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D4310);
  }
  return result;
}

unint64_t sub_10001579C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D42C0;
  if (!qword_1000D42C0)
  {
    v1 = sub_1000143E4(&qword_1000D1FE8);
    sub_10000406C(&qword_1000D1FF0, &qword_1000D42D0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D42C0);
  }
  return result;
}

void sub_100015820()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1000D24F0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CGFloat);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1000D24F0);
  }
}

uint64_t sub_100015868(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  void *ObjectType;

  v6 = sub_100014904(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1000146C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1000146C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_100027658();
  }
  sub_10000B6E4(v12);
  return v7;
}

uint64_t sub_100015934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D1100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1000159B8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v1 = objc_msgSend(v0, "textInputMode");
  if (v1)
  {
    v2 = sub_100017700(v1);
    if (v3)
    {
      if (v2 == 0x6F69746174636964 && v3 == 0xE90000000000006ELL)
      {
        sub_1000183D0();
      }
      else
      {
        v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0x6F69746174636964, 0xE90000000000006ELL, 0);
        sub_1000183D0();
        if ((v5 & 1) == 0)
          goto LABEL_16;
      }
      sub_100079588(v0);
      if (v7)
      {
        v8 = v6;
        v9 = v7;
        if (String.count.getter(v6, v7) != 1)
          goto LABEL_15;
        sub_10005E834(v8, v9);
        v11 = v10;
        sub_100018420();
        if (v11)
        {
          v12 = sub_1000184E0();
          sub_100015ADC(v12, v13);
          if (v14 == 1)
          {
            v15 = sub_1000184E0();
            sub_10005E874(v15, v16);
            sub_1000183D0();
            goto LABEL_16;
          }
LABEL_15:
          swift_bridgeObjectRelease();
        }
      }
    }
  }
LABEL_16:
  sub_100018388();
}

void sub_100015ADC(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  sub_10001787C(0xFuLL, v3 | (v2 << 16), a1, a2);
}

void variable initialization expression of OpenNavigationDestinationAction._target()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_100018190();
  v4 = sub_1000182A4();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  sub_100018044();
  __chkstk_darwin(v5);
  sub_1000180EC(v6, v37[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_100018168(v8, v37[0]);
  v10 = __chkstk_darwin(v9);
  sub_100018514(v10, v11, v12, v13, v14, v15, v16, v17, v37[0]);
  sub_100012E2C(&qword_1000D0630);
  sub_100018034();
  __chkstk_darwin(v18);
  sub_100018488();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v19);
  sub_100018310();
  sub_1000184EC();
  __chkstk_darwin(v20);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v23);
  sub_10001814C();
  sub_100018034();
  __chkstk_darwin(v24);
  v26 = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v27);
  sub_100018470();
  v28 = sub_100012E2C(&qword_1000D0640);
  sub_1000182F4(v28);
  sub_1000182EC();
  sub_1000182D4();
  sub_100018084((uint64_t)v26, 0x6E65746E49707041, 0xEA00000000007374, v0, (uint64_t)v22);
  sub_100018380(23, 0x800000010009B770);
  sub_1000182EC();
  sub_1000182D4();
  sub_100018084((uint64_t)v26, 0x6E65746E49707041, 0xEA00000000007374, v0, (uint64_t)v22);
  v29 = sub_1000183D8();
  v32 = sub_100018108(v1, v30, v31, v29);
  v33 = v38;
  sub_100018124(v38, 1);
  v34 = v39;
  v35 = sub_100018124(v39, 1);
  sub_100018394(v35, enum case for InputConnectionBehavior.default(_:));
  sub_100004998(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity, (uint64_t)&protocol conformance descriptor for NavigationDestinationEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v3, v2, v1, v33, v34, v32, v36);
  sub_100018094();
}

uint64_t sub_100015D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void variable initialization expression of OpenWorkflowAction._target()
{
  sub_1000180C8();
}

unint64_t sub_100015DA4()
{
  unint64_t result;

  result = qword_1000D4490;
  if (!qword_1000D4490)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D4490);
  }
  return result;
}

void variable initialization expression of CreateWorkflowAction._name()
{
  sub_100018264();
}

void variable initialization expression of CreateFolderAction._name()
{
  sub_100018264();
}

void variable initialization expression of MoveShortcutToFolderAction._folder()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_100018190();
  v4 = sub_1000182A4();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  sub_100018044();
  __chkstk_darwin(v5);
  sub_1000180EC(v6, v36[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_100018168(v8, v36[0]);
  v10 = __chkstk_darwin(v9);
  sub_100018514(v10, v11, v12, v13, v14, v15, v16, v17, v36[0]);
  sub_100012E2C(&qword_1000D0630);
  sub_100018034();
  __chkstk_darwin(v18);
  sub_100018488();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v19);
  sub_100018310();
  sub_1000184EC();
  __chkstk_darwin(v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v23);
  sub_10001814C();
  sub_100018034();
  __chkstk_darwin(v24);
  v26 = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v27);
  sub_100018470();
  v28 = sub_100012E2C(&qword_1000D0640);
  sub_1000182F4(v28);
  sub_1000182EC();
  sub_1000182D4();
  sub_100018084((uint64_t)v26, 0x6E65746E49707041, 0xEA00000000007374, v0, (uint64_t)v22);
  sub_100018380(34, 0x800000010009B800);
  sub_1000182EC();
  sub_1000182D4();
  sub_100018084((uint64_t)v26, 0x6E65746E49707041, 0xEA00000000007374, v0, (uint64_t)v22);
  v29 = sub_1000183D8();
  v32 = sub_100018108(v1, v30, v31, v29);
  v33 = v37;
  sub_100015D74(v37, 1, 1, v32);
  v34 = v38;
  v35 = sub_1000181B8(v38);
  sub_1000181FC(v35, enum case for InputConnectionBehavior.default(_:));
  sub_100016080();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v3, v2, v1, v33, v34, v32);
  sub_100018094();
}

unint64_t sub_100016080()
{
  unint64_t result;

  result = qword_1000D0670;
  if (!qword_1000D0670)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.FolderQuery, &type metadata for NavigationDestinationEntity.FolderQuery);
    atomic_store(result, (unint64_t *)&qword_1000D0670);
  }
  return result;
}

void variable initialization expression of MoveShortcutToFolderAction._shortcuts()
{
  sub_1000180C8();
}

void variable initialization expression of AddShortcutToHomeScreenAction._shortcut()
{
  sub_1000180C8();
}

void variable initialization expression of AddShortcutToHomeScreenAction._title()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_100018190();
  v2 = sub_1000182A4();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  sub_100018044();
  __chkstk_darwin(v3);
  sub_100018404(v4, v25);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100018548();
  sub_100012E2C(&qword_1000D0660);
  sub_100018034();
  __chkstk_darwin(v6);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v8);
  sub_100018248();
  sub_100018034();
  __chkstk_darwin(v9);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100018210();
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D0680);
  String.LocalizationValue.init(stringLiteral:)(0x54206D6F74737543, 0xEC000000656C7469);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018448();
  sub_100018380(46, v12);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018124(v1, 0);
  v13 = type metadata accessor for String.IntentInputOptions(0);
  v16 = sub_100018108(v0, v14, v15, v13);
  sub_1000182C4(v16, v17, v18, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v26, enum case for InputConnectionBehavior.default(_:), v28);
  sub_1000184C8();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v19, v20, v21, v22, v23, v24);
  sub_100018094();
}

void variable initialization expression of AddShortcutToHomeScreenAction._image()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[6];

  sub_100018190();
  v5 = sub_1000182A4();
  v30[3] = *(_QWORD *)(v5 - 8);
  v30[4] = v5;
  sub_100018044();
  __chkstk_darwin(v6);
  sub_1000180EC(v7, v30[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v8);
  sub_1000181E0(v9, v30[0]);
  sub_100012E2C(&qword_1000D0688);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v15);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v16);
  sub_100018130();
  sub_100018034();
  __chkstk_darwin(v17);
  sub_1000181C8();
  v30[0] = sub_100012E2C(&qword_1000D0690);
  sub_10001853C(1734438217);
  sub_1000182E4();
  v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  sub_100018438();
  sub_100018084(v3, 0x6E65746E49707041, 0xEA00000000007374, v4, (uint64_t)v14);
  sub_100018380(53, 0x800000010009B8B0);
  sub_1000182E4();
  sub_100018438();
  v19 = sub_10001832C();
  sub_100018084(v19, v20, v21, v4, (uint64_t)v14);
  sub_100018124(v1, 0);
  v22 = type metadata accessor for IntentFile(0);
  v25 = sub_100018108(v0, v23, v24, v22);
  v26 = v30[1];
  v29 = sub_1000182C4(v25, v27, v28, v25);
  sub_1000181FC(v29, enum case for InputConnectionBehavior.default(_:));
  IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v2, v1, v0, &off_1000BFD88, v26, v18);
  sub_100018094();
}

void variable initialization expression of RenameShortcutAction._shortcut()
{
  sub_1000180C8();
}

void variable initialization expression of RenameShortcutAction._name()
{
  sub_100018264();
}

void variable initialization expression of SetShortcutAttributesAction._shortcut()
{
  sub_1000180C8();
}

void variable initialization expression of GetShortcutAttributesAction._attribute()
{
  sub_1000183FC();
}

unint64_t sub_10001657C()
{
  unint64_t result;

  result = qword_1000D06A0;
  if (!qword_1000D06A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D06A0);
  }
  return result;
}

void variable initialization expression of GetShortcutAttributesAction._shortcut()
{
  sub_1000180C8();
}

void variable initialization expression of SetShortcutAttributesAction._operation()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_100018190();
  sub_1000182A4();
  sub_100018044();
  __chkstk_darwin(v2);
  sub_1000180EC(v3, v23);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_100018168(v5, v24);
  __chkstk_darwin(v6);
  sub_100018370();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v8);
  sub_100018248();
  sub_100018034();
  __chkstk_darwin(v9);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100018210();
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D06A8);
  sub_10001850C(0x6F6974617265704FLL, 110);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018448();
  sub_100018380(39, v12);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018124(v1, 0);
  v13 = sub_1000182AC();
  sub_100015D74(v0, 1, 1, v13);
  v14 = sub_1000181B8(v25);
  sub_1000181FC(v14, enum case for InputConnectionBehavior.default(_:));
  sub_100016798();
  v15 = sub_100018350();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v15, v16, v17, v18, v19, v20, v21, v22);
  sub_100018094();
}

unint64_t sub_100016798()
{
  unint64_t result;

  result = qword_1000D06B0;
  if (!qword_1000D06B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D06B0);
  }
  return result;
}

void variable initialization expression of SetShortcutAttributesAction._attribute()
{
  sub_1000183FC();
}

void sub_1000167EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _UNKNOWN **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_100018190();
  v33 = v3;
  v34 = v4;
  v5 = sub_1000182A4();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  sub_100018044();
  __chkstk_darwin(v6);
  sub_1000180EC(v7, v32);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v8);
  sub_100018168(v9, v32);
  __chkstk_darwin(v10);
  sub_100018370();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue(0);
  sub_100018034();
  __chkstk_darwin(v18);
  v19 = sub_100018130();
  sub_100018034();
  __chkstk_darwin(v20);
  v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100012E2C(&qword_1000D0698);
  v23 = sub_10001850C(0x7475626972747441, 101);
  static Locale.current.getter(v23);
  sub_100018428();
  sub_100018084(v2, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v17, (uint64_t)v14);
  v24 = String.LocalizationValue.init(stringLiteral:)(v33, v34);
  static Locale.current.getter(v24);
  sub_100018428();
  v25 = sub_10001832C();
  sub_100018084(v25, v26, v27, (uint64_t)v17, (uint64_t)v14);
  sub_100018124(v1, 0);
  v38 = 6;
  sub_1000182AC();
  sub_1000181B8(v0);
  v28 = v35;
  v29 = sub_1000181B8(v35);
  sub_100018394(v29, enum case for InputConnectionBehavior.default(_:));
  v30 = static ShortcutAttribute.allCases.getter();
  v31 = sub_10001657C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v22, v1, &v38, v0, v28, v19, v30, v31);
  sub_100018094();
}

void variable initialization expression of SetShortcutAttributesAction._state()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_100018190();
  sub_1000182A4();
  sub_100018044();
  __chkstk_darwin(v2);
  sub_1000180EC(v3, v21);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_1000181E0(v5, v22);
  sub_100012E2C(&qword_1000D06B8);
  sub_100018034();
  __chkstk_darwin(v6);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v8);
  sub_100018248();
  sub_100018034();
  __chkstk_darwin(v9);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100018210();
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000181C8();
  sub_100012E2C((uint64_t *)&unk_1000D06C0);
  sub_10001853C(1952543827);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018448();
  sub_100018380(31, v12);
  sub_1000182E4();
  sub_1000181A8();
  sub_100018050();
  sub_100018124(v1, 0);
  v13 = type metadata accessor for Bool.IntentDisplayName(0);
  v16 = sub_100018108(v0, v14, v15, v13);
  v19 = sub_1000182C4(v16, v17, v18, v16);
  sub_1000181FC(v19, enum case for InputConnectionBehavior.default(_:));
  v20 = sub_100018350();
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v20);
  sub_100018094();
}

void variable initialization expression of CreateShortcutiCloudLinkAction._shortcut()
{
  sub_1000180C8();
}

void sub_100016BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_100018190();
  v31 = v4;
  v32 = v5;
  v7 = v6;
  v30 = v8;
  v9 = sub_1000182A4();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  sub_100018044();
  __chkstk_darwin(v10);
  sub_1000181E0(v11, v29);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  v13 = __chkstk_darwin(v12);
  v33 = (uint64_t)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  sub_100018370();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v15);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v16);
  sub_10001822C();
  sub_100018034();
  __chkstk_darwin(v17);
  sub_10001814C();
  sub_100018034();
  __chkstk_darwin(v18);
  sub_100018130();
  sub_100018034();
  __chkstk_darwin(v19);
  sub_100018458();
  v30 = (uint64_t *)sub_100012E2C(v30);
  v20 = sub_100018528();
  String.LocalizationValue.init(stringLiteral:)(v20, v7);
  sub_1000182EC();
  sub_100018294();
  sub_100018084(v3, 0x6E65746E49707041, 0xEA00000000007374, v0, v2);
  String.LocalizationValue.init(stringLiteral:)(v31, v32);
  sub_1000182EC();
  sub_100018294();
  sub_100018084(v3, 0x6E65746E49707041, 0xEA00000000007374, v0, v2);
  sub_1000183A8();
  v36 = 0;
  sub_1000182AC();
  sub_1000181B8(v1);
  v21 = sub_1000181B8(v33);
  sub_1000183BC(v21, enum case for InputConnectionBehavior.default(_:));
  sub_100015DA4();
  sub_1000184C8();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v22, v23, v24, v25, v26, v27, v28);
  sub_100018094();
}

void variable initialization expression of DeleteWorkflowAction._entities()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23[4];
  uint64_t v24;

  sub_100018190();
  v5 = sub_1000182A4();
  v23[2] = *(_QWORD *)(v5 - 8);
  v23[3] = v5;
  sub_100018044();
  __chkstk_darwin(v6);
  sub_1000181E0(v7, v23[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  sub_100018370();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v12);
  v13 = sub_1000180AC();
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_10001822C();
  sub_100018034();
  __chkstk_darwin(v15);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v16);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v19);
  sub_1000181C8();
  v23[0] = sub_100012E2C(&qword_1000D0678);
  v20 = sub_100018528();
  sub_10001850C(v20, 115);
  sub_1000182E4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  sub_100018084((uint64_t)v18, 0x6E65746E49707041, 0xEA00000000007374, v4, v3);
  sub_100018124(v1, 1);
  v24 = 0;
  sub_1000182AC();
  sub_100018124(v0, 1);
  v21 = sub_100018124((uint64_t)v11, 1);
  sub_1000183BC(v21, enum case for InputConnectionBehavior.default(_:));
  v22 = sub_100015DA4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v2, v1, &v24, v0, v11, v14, v22);
  sub_100018094();
}

void variable initialization expression of SearchShortcutsAction._searchPhrase()
{
  sub_100018264();
}

void sub_10001700C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];

  sub_100018190();
  v30 = v6;
  v31 = v7;
  v9 = v8;
  v28 = v10;
  v11 = sub_1000182A4();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100018548();
  v33 = v13;
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v14);
  sub_100018404(v15, v28);
  sub_100012E2C(&qword_1000D0660);
  sub_100018034();
  __chkstk_darwin(v16);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v17);
  sub_1000180AC();
  sub_10001826C();
  __chkstk_darwin(v18);
  sub_10001822C();
  sub_100018034();
  __chkstk_darwin(v19);
  sub_10001814C();
  sub_100018034();
  __chkstk_darwin(v20);
  sub_100018130();
  sub_100018034();
  __chkstk_darwin(v21);
  sub_100018458();
  sub_100012E2C(v29);
  String.LocalizationValue.init(stringLiteral:)(v9, 0xE400000000000000);
  sub_1000182EC();
  sub_100018294();
  sub_100018084(v4, 0x6E65746E49707041, 0xEA00000000007374, v0, v3);
  String.LocalizationValue.init(stringLiteral:)(v30, v31);
  sub_1000182EC();
  sub_100018294();
  sub_100018084(v4, 0x6E65746E49707041, 0xEA00000000007374, v0, v3);
  sub_1000183A8();
  v22 = type metadata accessor for String.IntentInputOptions(0);
  v36[0] = 0;
  v36[1] = 0;
  v25 = sub_100018108(v1, v23, v24, v22);
  sub_1000182C4(v25, v26, v27, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v33, enum case for InputConnectionBehavior.default(_:), v35);
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v5, v2, v36, v1, v32, v33);
  sub_100018094();
}

uint64_t variable initialization expression of LibraryTable.libraryDelegate()
{
  return 0;
}

uint64_t variable initialization expression of LibraryTable._selectedAutoShortcut()
{
  return 0;
}

double variable initialization expression of LibraryTable.rowHeight()
{
  return 26.0;
}

uint64_t variable initialization expression of AppShortcutChiclet._viewColorScheme@<X0>(_QWORD *a1@<X8>)
{
  return sub_1000172E4((uint64_t)&unk_100096800, &qword_1000D4400, a1);
}

void sub_100017254()
{
  EnvironmentValues.colorScheme.getter();
  sub_100018188();
}

void sub_100017270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v1);
  sub_1000184A0();
  v2 = sub_1000184E0();
  v3(v2);
  EnvironmentValues.colorScheme.setter(v0);
  sub_100018388();
}

uint64_t variable initialization expression of AppShortcutChiclet._sizeClass@<X0>(_QWORD *a1@<X8>)
{
  return sub_1000172E4((uint64_t)&unk_100096830, &qword_1000D06D0, a1);
}

uint64_t sub_1000172E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  *a3 = swift_getKeyPath(a1);
  v5 = sub_100012E2C(a2);
  return swift_storeEnumTagMultiPayload(a3, v5, 0);
}

void sub_100017320()
{
  EnvironmentValues.horizontalSizeClass.getter();
  sub_100018188();
}

void sub_10001733C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_100012E2C(&qword_1000D0860);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_1000184A0();
  sub_100017B94(a1, v1);
  EnvironmentValues.horizontalSizeClass.setter(v1);
  sub_100018388();
}

uint64_t sub_100017394(uint64_t a1, id *a2)
{
  return sub_100017EF0(a1, a2);
}

uint64_t sub_1000173A8(uint64_t a1, id *a2)
{
  return sub_100017F54(a1, a2) & 1;
}

void sub_1000173C0()
{
  uint64_t *v0;

  sub_100017FF0(*v0, (void (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_1000173E0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_100017FC4(a1);
  *a2 = v3;
}

uint64_t sub_100017404(uint64_t *a1, uint64_t *a2)
{
  return sub_1000687D8(*a1, *a2);
}

void sub_100017410()
{
  uint64_t *v0;

  sub_100017FF0(*v0, (void (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100017430(uint64_t a1)
{
  uint64_t *v1;

  return sub_10001776C(a1, *v1);
}

Swift::Int sub_100017448(uint64_t a1)
{
  uint64_t *v1;

  return sub_100068770(a1, *v1);
}

Swift::Int sub_100017450(uint64_t a1)
{
  uint64_t *v1;

  return sub_1000177A4(a1, *v1);
}

uint64_t sub_10001746C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100017498(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_10001780C(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1000174B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100004998(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100096E1C);
  v3 = v2;
  sub_100004998((unint64_t *)&unk_1000D0930, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100096998);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_10001753C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100004998(&qword_1000D0908, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowRunSource, (uint64_t)&unk_100096C10);
  v3 = v2;
  sub_100004998((unint64_t *)&unk_1000D0910, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowRunSource, (uint64_t)&unk_100096BB8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_1000175C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100004998((unint64_t *)&unk_1000D31A0, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096D98);
  v3 = v2;
  sub_100004998(&qword_1000D0900, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096CF8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

void sub_100017644(_QWORD *a1@<X8>)
{
  NSString v2;

  v2 = String._bridgeToObjectiveC()();
  sub_100018420();
  *a1 = v2;
  sub_100018388();
}

uint64_t sub_10001767C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100004998(&qword_1000D38E0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100096DD8);
  v3 = v2;
  sub_100004998((unint64_t *)&unk_1000D0920, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100096AAC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100017700(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "primaryLanguage");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_10001776C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100018500(a1, a2);
  v5 = v4;
  String.hash(into:)(v2, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000177A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = sub_100018500(a1, a2);
  v5 = v4;
  Hasher.init(_seed:)(v8, v2);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

void sub_10001780C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  if (v3 != static String._unconditionallyBridgeFromObjectiveC(_:)(a2) || v5 != v6)
  {
    v8 = v6;
    v9 = sub_1000184E0();
    _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v11, v8, 0);
  }
  sub_1000183D0();
  sub_100018420();
  sub_100018388();
}

void sub_10001787C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;

  sub_100017A8C(a1, a3, a4);
  v8 = v7;
  sub_100017A8C(a2, a3, a4);
  v10 = v9 >> 14;
  if (v8 >> 14 < v9 >> 14)
  {
    for (i = 0; !__OFADD__(i, 1); ++i)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v8 = String.UnicodeScalarView._foreignIndex(after:)(v8, a3, a4);
      }
      else
      {
        v12 = v8 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          v25 = a3;
          v26 = a4 & 0xFFFFFFFFFFFFFFLL;
          v14 = *((unsigned __int8 *)&v25 + v12);
        }
        else
        {
          v13 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            v13 = _StringObject.sharedUTF8.getter(a3, a4);
          v14 = *(unsigned __int8 *)(v13 + v12);
        }
        v15 = (char)v14;
        v16 = __clz(v14 ^ 0xFF) - 24;
        if (v15 >= 0)
          LOBYTE(v16) = 1;
        v8 = ((v12 + v16) << 16) | 5;
      }
      if (v10 <= v8 >> 14)
        return;
    }
    __break(1u);
LABEL_37:
    __break(1u);
    return;
  }
  if (v10 < v8 >> 14)
  {
    v17 = 0;
    while (!__OFSUB__(v17--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v8 = String.UnicodeScalarView._foreignIndex(before:)(v8, a3, a4);
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v25 = a3;
          v26 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v25 + (v8 >> 16) - 1) & 0xC0) == 0x80)
          {
            v23 = 0;
            do
              v24 = *((_BYTE *)&v25 + (v8 >> 16) + v23-- - 2) & 0xC0;
            while (v24 == 128);
            v22 = 1 - v23;
          }
          else
          {
            v22 = 1;
          }
        }
        else
        {
          v19 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            v19 = _StringObject.sharedUTF8.getter(a3, a4);
          v20 = 0;
          do
            v21 = *(_BYTE *)(v19 + (v8 >> 16) - 1 + v20--) & 0xC0;
          while (v21 == 128);
          v22 = -v20;
        }
        v8 = (v8 - (v22 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v10 >= v8 >> 14)
        return;
    }
    goto LABEL_37;
  }
}

void sub_100017A8C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 1) == 0 || (a1 & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
  {
    __break(1u);
LABEL_9:
    sub_100017B28(a1, a2, a3);
    if ((v7 & 1) == 0)
      sub_100068958(v7, a2, a3);
  }
}

void sub_100017B28(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 0xC) == 4 << v5)
    sub_1000252CC(a1, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
    __break(1u);
}

uint64_t sub_100017B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D0860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for WFWorkflowTypeName(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0868, (uint64_t)&unk_1000C0100);
}

void type metadata accessor for WFWorkflowRunSource(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0870, (uint64_t)&unk_1000C0128);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0878, (uint64_t)&unk_1000C0150);
}

__n128 _s13LayoutMetricsV17TopHitsItemLayoutVwCP(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s13LayoutMetricsV17TopHitsItemLayoutVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13LayoutMetricsV17TopHitsItemLayoutVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

uint64_t _s13LayoutMetricsVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for TipController.UseSiriToRunShortcutTip.PersonalContent(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100017CAC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100017CCC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10000EC54(a1, &qword_1000D0890, (uint64_t)&unk_1000C0278);
}

void sub_100017D0C()
{
  sub_100004998(&qword_1000D0898, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10009695C);
}

void sub_100017D38()
{
  sub_100004998(&qword_1000D08A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100096930);
}

void sub_100017D64()
{
  sub_100004998(&qword_1000D08A8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100096A70);
}

void sub_100017D90()
{
  sub_100004998(&qword_1000D08B0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100096A44);
}

void sub_100017DBC()
{
  sub_100004998(&qword_1000D08B8, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowRunSource, (uint64_t)&unk_100096B80);
}

void sub_100017DE8()
{
  sub_100004998(&qword_1000D08C0, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowRunSource, (uint64_t)&unk_100096B58);
}

void sub_100017E14()
{
  sub_100004998(&qword_1000D08C8, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowRunSource, (uint64_t)&unk_100096BE8);
}

void sub_100017E40()
{
  sub_100004998(&qword_1000D08D0, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096CC0);
}

void sub_100017E6C()
{
  sub_100004998(&qword_1000D08D8, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096C98);
}

void sub_100017E98()
{
  sub_100004998(&qword_1000D08E0, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096D28);
}

void sub_100017EC4()
{
  sub_100004998(&qword_1000D08E8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100096AE0);
}

uint64_t sub_100017EF0(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  NSString v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000184B8(a1, a2);
  v6 = 0;
  v7 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(v3, &v6);
  if (v7)
  {
    v5 = String._bridgeToObjectiveC()();
    result = sub_100018420();
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

uint64_t sub_100017F54(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  sub_1000184B8(a1, a2);
  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *v2 = v6;
  return v4 & 1;
}

void sub_100017FC4(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  String._bridgeToObjectiveC()();
  sub_1000183D0();
  sub_100018188();
}

void sub_100017FF0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  a2(v3);
  sub_100018420();
  sub_100018188();
}

uint64_t sub_100018050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v0, 0x6E65746E49707041, 0xEA00000000007374, v2, v1, 0, 0, 256);
}

uint64_t sub_100018084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(a1, a2, a3, a4, a5, 0, 0, 256);
}

uint64_t sub_1000180AC()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription(0);
}

void sub_1000180C8()
{
  sub_100016BF8();
}

uint64_t sub_1000180D0()
{
  return type metadata accessor for String.LocalizationValue(0);
}

void sub_1000180EC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100018108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100015D74(a1, 1, 1, a4);
  return type metadata accessor for IntentDialog(0);
}

uint64_t sub_100018124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100015D74(a1, a2, 1, v2);
}

uint64_t sub_100018130()
{
  return type metadata accessor for LocalizedStringResource(0);
}

uint64_t sub_10001814C()
{
  return type metadata accessor for String.LocalizationValue(0);
}

void sub_100018168(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000181A8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

uint64_t sub_1000181B8(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 1, 1, v1);
}

void sub_1000181E0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000181FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 104) + 104))(*(_QWORD *)(v2 - 112), a2, *(_QWORD *)(v2 - 96));
}

uint64_t sub_100018210()
{
  return type metadata accessor for LocalizedStringResource(0);
}

uint64_t sub_10001822C()
{
  return type metadata accessor for Locale(0);
}

uint64_t sub_100018248()
{
  return type metadata accessor for Locale(0);
}

void sub_100018264()
{
  sub_10001700C();
}

uint64_t sub_100018294()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

uint64_t sub_1000182A4()
{
  return type metadata accessor for InputConnectionBehavior(0);
}

uint64_t sub_1000182AC()
{
  return type metadata accessor for IntentDialog(0);
}

uint64_t sub_1000182B4()
{
  return type metadata accessor for LocalizedStringResource(0);
}

uint64_t sub_1000182BC()
{
  return type metadata accessor for Locale(0);
}

uint64_t sub_1000182C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100015D74(v4, 1, 1, a4);
}

uint64_t sub_1000182D4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

uint64_t sub_1000182E4()
{
  return static Locale.current.getter();
}

uint64_t sub_1000182EC()
{
  return static Locale.current.getter();
}

uint64_t sub_1000182F4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
}

uint64_t sub_100018310()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription(0);
}

uint64_t sub_10001832C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100018350()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100018380(uint64_t a1, uint64_t a2)
{
  return String.LocalizationValue.init(stringLiteral:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

uint64_t sub_100018394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 104) + 104))(*(_QWORD *)(v2 - 112), a2, *(_QWORD *)(v2 - 96));
}

uint64_t sub_1000183A8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100015D74(v0, 0, 1, v1);
}

uint64_t sub_1000183BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 112) + 104))(*(_QWORD *)(v2 - 120), a2, *(_QWORD *)(v2 - 104));
}

uint64_t sub_1000183D0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000183D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_100015D74(v0, 0, 1, v1);
  return type metadata accessor for NavigationDestinationEntity(0);
}

void sub_1000183FC()
{
  sub_1000167EC();
}

void sub_100018404(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100018420()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100018428()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v0, v3);
}

uint64_t sub_100018438()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

void sub_1000184B8(uint64_t a1, id *a2)
{

}

uint64_t sub_1000184E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100018500(uint64_t a1, uint64_t a2)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
}

uint64_t sub_10001850C(uint64_t a1, uint64_t a2)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, a2 & 0xFFFFFFFFFFFFLL | 0xE900000000000000);
}

void sub_100018514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 128) = (char *)&a9 - v9;
}

uint64_t sub_100018528()
{
  return 0x74756374726F6853;
}

uint64_t sub_10001853C(uint64_t a1)
{
  return String.LocalizationValue.init(stringLiteral:)(a1 & 0xFFFF0000FFFFFFFFLL | 0x6500000000, 0xE500000000000000);
}

unint64_t StaticString._asString.getter(unint64_t result, uint64_t a2, char a3)
{
  unint64_t v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  if ((a3 & 1) == 0)
  {
    if (result)
      return static String._fromUTF8Repairing(_:)(result);
    __break(1u);
  }
  v3 = HIDWORD(result);
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result >> 11 == 27)
    goto LABEL_21;
  LODWORD(v3) = WORD1(result);
  if (WORD1(result) > 0x10u)
    goto LABEL_13;
  if ((result & 0xFFFFFF80) != 0)
  {
LABEL_14:
    v5 = (result & 0x3F) << 8;
    v6 = (v5 | (result >> 6)) + 33217;
    v7 = (v5 | (result >> 6) & 0x3F) << 8;
    v8 = (((v7 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
    v9 = (v7 | (result >> 12)) + 8487393;
    if ((_DWORD)v3)
      v4 = v8;
    else
      v4 = v9;
    if (result < 0x800)
      v4 = v6;
    goto LABEL_10;
  }
  if (result <= 0xFF)
  {
    v4 = (result + 1);
LABEL_10:
    v10 = (v4 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v4) >> 3)) & 7)));
    result = (unint64_t)&v10;
    return static String._fromUTF8Repairing(_:)(result);
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t *NSBundle._current.unsafeMutableAddressor()
{
  if (qword_1000D0520 != -1)
    swift_once(&qword_1000D0520, sub_1000186A8);
  return &static NSBundle._current;
}

id sub_1000186A8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id result;

  v0 = _s2__CMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  result = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  static NSBundle._current = (uint64_t)result;
  return result;
}

id static NSBundle._current.getter()
{
  if (qword_1000D0520 != -1)
    swift_once(&qword_1000D0520, sub_1000186A8);
  return (id)static NSBundle._current;
}

uint64_t sub_10001873C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t _s2__CMa()
{
  return objc_opt_self(_TtCFIZvE9ShortcutsCSo8NSBundle8_currentS0_iU_FT_S0_L_2__);
}

void sub_10001876C(int a1, Swift::UInt a2, double a3)
{
  Swift::UInt64 v4;

  Hasher._combine(_:)(a2);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)&a3;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

BOOL sub_1000187AC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

Swift::Int sub_1000187BC(Swift::UInt a1, double a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  sub_10001876C((int)v5, a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_100018810()
{
  uint64_t v0;

  return sub_1000187BC(*(_QWORD *)v0, *(double *)(v0 + 8));
}

void sub_10001881C(int a1)
{
  uint64_t v1;

  sub_10001876C(a1, *(_QWORD *)v1, *(double *)(v1 + 8));
}

Swift::Int sub_100018828(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  double v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = *((double *)v1 + 1);
  Hasher.init(_seed:)(v5, a1);
  sub_10001876C((int)v5, v2, v3);
  return Hasher._finalize()();
}

BOOL sub_100018878(uint64_t a1, uint64_t a2)
{
  return sub_1000187AC(*(_QWORD *)a1, *(_QWORD *)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

__n128 sub_100018894@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  CGFloat bottom;
  CGFloat right;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  __n128 result;
  __n128 v15;

  v5 = swift_allocObject(&unk_1000C0400, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v2);
  v6 = sub_1000072D8();
  v15 = *(__n128 *)&UIEdgeInsetsZero.top;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  type metadata accessor for CGSize(0);
  v10 = v9;
  v11 = sub_100019B4C();
  v12 = a1;
  v13 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &_s13LayoutMetricsV17TopHitsItemLayoutVN, v10, v11);
  *(_QWORD *)a2 = sub_10000B9BC;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = 0;
  result = v15;
  *(__n128 *)(a2 + 40) = v15;
  *(CGFloat *)(a2 + 56) = bottom;
  *(CGFloat *)(a2 + 64) = right;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v13;
  return result;
}

void sub_100018970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  NSString v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString *v50;
  id v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSString *v74;
  id v75;
  uint64_t v76;
  Class v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  SEL v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  double v88;
  double v89;
  char *v90;
  uint64_t v91;
  SEL v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103[72];
  char v104[80];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;

  v102 = a1;
  v3 = type metadata accessor for AutoShortcutApp(0);
  sub_100019DD8(v3, (uint64_t)&v105);
  v97 = v4;
  sub_100018044();
  __chkstk_darwin(v5);
  sub_100018548();
  v7 = sub_100019D8C(v6);
  v8 = type metadata accessor for UIListContentConfiguration.TextProperties(v7);
  sub_100019DD8(v8, (uint64_t)&v107);
  v101 = v9;
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100018548();
  v12 = sub_100019D8C(v11);
  v13 = type metadata accessor for UIListContentConfiguration(v12);
  sub_100019DD8(v13, (uint64_t)&v106);
  v99 = v14;
  sub_100018044();
  __chkstk_darwin(v15);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v16);
  sub_100019D7C();
  v19 = v18 - v17;
  v20 = type metadata accessor for LibrarySectionOptions.Header(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v94 - v26;
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v94 - v29;
  __chkstk_darwin(v28);
  v32 = (char *)&v94 - v31;
  v95 = v1;
  sub_100012A90();
  sub_100012D0C();
  sub_100019D9C();
  v33 = sub_100019EFC();
  v34 = sub_100019D44(v19, 1, v33);
  if ((_DWORD)v34 == 1)
  {
    sub_10000D778(v19, &qword_1000D0AD0);
    goto LABEL_15;
  }
  ShortcutsLibrarySection.header.getter(v34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v19, v33);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v32, v30, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v27, v32, v20);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v27, v20);
  v36 = v20;
  v37 = v27;
  if (v35 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
  {
    sub_100019E2C();
    sub_100019DB0(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    v98 = v27;
    v97 = v20;
    v38 = *((_QWORD *)v24 + 1);
    v39 = swift_bridgeObjectRelease(*((_QWORD *)v24 + 3));
    v40 = static UIListContentConfiguration.prominentInsetGroupedHeader()(v39);
    v41 = v100;
    UIListContentConfiguration.textProperties.getter(v40);
    v42 = sub_100019D58(v2, *(uint64_t (**)(uint64_t, _QWORD))(v99 + 8));
    v43 = (void *)UIListContentConfiguration.TextProperties.font.getter(v42);
    sub_100019D58(v41, *(uint64_t (**)(uint64_t, _QWORD))(v101 + 8));
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v45 = sub_100012E2C(&qword_1000D0AF0);
    inited = swift_initStackObject(v45, v103);
    *(_OWORD *)(inited + 16) = xmmword_100096E80;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_100003B2C(0, &qword_1000D0AF8, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v43;
    type metadata accessor for Key(0);
    v48 = v47;
    v49 = sub_100003974(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100096E1C);
    v50 = NSFontAttributeName;
    v51 = v43;
    v52 = Dictionary.init(dictionaryLiteral:)(inited, v48, (char *)&type metadata for Any + 8, v49);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v52);
    objc_msgSend(v44, "sizeWithAttributes:", isa);
    sub_100019F10();

    sub_100019E3C(v54, "frame");
    CGRectGetWidth(v108);

    v55 = *(void (**)(char *, uint64_t))(v21 + 8);
    v56 = v97;
    v55(v32, v97);
    v55(v98, v56);
    goto LABEL_15;
  }
  if (v35 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
  {
    sub_100019E2C();
    sub_100019DB0(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    v57 = v96;
    v58 = (*(uint64_t (**)(uint64_t, char *, char *))(v97 + 32))(v96, v24, v98);
    v59 = static UIListContentConfiguration.prominentInsetGroupedHeader()(v58);
    v60 = v100;
    v95 = v21;
    v61 = (uint64_t)v32;
    UIListContentConfiguration.textProperties.getter(v59);
    v62 = sub_100019D58(v2, *(uint64_t (**)(uint64_t, _QWORD))(v99 + 8));
    v63 = (void *)UIListContentConfiguration.TextProperties.font.getter(v62);
    v64 = sub_100019D58(v60, *(uint64_t (**)(uint64_t, _QWORD))(v101 + 8));
    AutoShortcutApp.localizedName.getter(v64);
    v66 = v65;
    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v66);
    v68 = sub_100012E2C(&qword_1000D0AF0);
    v69 = swift_initStackObject(v68, v104);
    *(_OWORD *)(v69 + 16) = xmmword_100096E80;
    *(_QWORD *)(v69 + 32) = NSFontAttributeName;
    *(_QWORD *)(v69 + 64) = sub_100003B2C(0, &qword_1000D0AF8, UIFont_ptr);
    *(_QWORD *)(v69 + 40) = v63;
    type metadata accessor for Key(0);
    v71 = v70;
    v72 = v37;
    v73 = sub_100003974(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100096E1C);
    v74 = NSFontAttributeName;
    v75 = v63;
    v76 = Dictionary.init(dictionaryLiteral:)(v69, v71, (char *)&type metadata for Any + 8, v73);
    v77 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v76);
    objc_msgSend(v67, "sizeWithAttributes:", v77);
    sub_100019F10();

    sub_100019E3C(v78, "frame");
    CGRectGetWidth(v109);

    sub_100019D58(v57, *(uint64_t (**)(uint64_t, _QWORD))(v97 + 8));
    v79 = *(void (**)(char *, uint64_t))(v95 + 8);
    sub_100019E24(v61);
    v79(v72, v36);
    goto LABEL_15;
  }
  if (v35 == enum case for LibrarySectionOptions.Header.tip(_:))
  {
    if ((sub_10000B704() & 1) != 0)
    {
      v80 = _s27MiniTipCollectionHeaderViewCMa();
      v81 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v80)), "init");
      v82 = sub_10008C634(v81);

      if (v82)
      {
        sub_100019E3C(v83, "frame");
        CGRectGetWidth(v110);
        sub_100019E54();
        objc_msgSend(v82, v84);
        sub_100019F18();
        goto LABEL_13;
      }
    }
LABEL_16:
    sub_100019E24((uint64_t)v32);
    sub_100019E24((uint64_t)v27);
    goto LABEL_15;
  }
  if (v35 != enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
    goto LABEL_16;
  v85 = _s35SyncUnavailableCollectionHeaderViewCMa();
  v86 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v85)), "init");
  v87 = v95;
  sub_100019CBC((uint64_t)v86);
  v90 = sub_10008BAF4(v87, v86, 0.0, v88, 0.0, v89);

  sub_100019E3C(v91, "frame");
  CGRectGetWidth(v111);
  sub_100019E54();
  objc_msgSend(v90, v92);
  sub_100019F10();
LABEL_13:
  v93 = *(void (**)(char *, uint64_t))(v21 + 8);
  sub_100019E24((uint64_t)v32);
  v93(v27, v20);
LABEL_15:
  sub_100019D60();
}

void sub_1000190E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CGRect v13;

  v4 = type metadata accessor for LibrarySectionOptions.Footer(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100019D7C();
  v9 = v8 - v7;
  v10 = sub_100019EFC();
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_1000181C8();
  sub_100012A90();
  sub_100012D0C();
  sub_100019D9C();
  if (sub_100019D44(v9, 1, v10) == 1)
  {
    sub_10000D778(v9, &qword_1000D0AD0);
  }
  else
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v2, v9, v10);
    ShortcutsLibrarySection.footer.getter(v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v1, v4) == enum case for LibrarySectionOptions.Footer.spacer(_:))
    {
      objc_msgSend(a1, "frame");
      CGRectGetWidth(v13);
      sub_100019E14();
    }
    else
    {
      sub_100019E14();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    }
  }
  sub_100019D60();
}

void sub_10001925C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  id v20;
  double Width;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::UInt v36;
  char v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  _QWORD *v51;
  id v52;
  double v53;
  char v54;
  double v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  _QWORD v65[11];
  _QWORD v66[11];
  _QWORD v67[11];
  _QWORD v68[11];
  id v69[11];
  id v70[11];
  _QWORD __dst[12];
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v62 = type metadata accessor for AutoShortcutAppSection(0);
  v64 = *(_QWORD *)(v62 - 8);
  sub_100018044();
  __chkstk_darwin(v7);
  sub_100018548();
  v61 = v8;
  v9 = type metadata accessor for ShortcutsLibraryItem.ItemType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v11);
  v12 = sub_100019DBC();
  v13 = type metadata accessor for ShortcutsLibraryItem(v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100019D7C();
  v17 = (void *)(v16 - v15);
  sub_100012A90();
  sub_100012EC0(a3, v4);
  sub_100019D9C();
  if (sub_100019D44(v4, 1, v13) == 1)
  {
    sub_10000D778(v4, &qword_1000D3670);
LABEL_16:
    sub_100019E8C();
    return;
  }
  v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 32))(v17, v4, v13);
  ShortcutsLibraryItem.itemType.getter(v18);
  v19 = (*(uint64_t (**)(id *, uint64_t))(v10 + 88))(v5, v9);
  if (v19 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
  {
    sub_100019E04();
    v60 = *((unsigned __int8 *)v5 + *(int *)(sub_100012E2C(&qword_1000D0AD8) + 48));
    (*(void (**)(uint64_t, id *, uint64_t))(v64 + 32))(v61, v5, v62);
    v20 = objc_msgSend(v3, "traitCollection");
    objc_msgSend(v20, "horizontalSizeClass");

    objc_msgSend(a1, "frame");
    Width = CGRectGetWidth(v72);
    sub_100012A90();
    v23 = v22;
    sub_100012AF4(v70);
    v24 = memcpy(v69, v70, 0x50uLL);
    v25 = v70[10];
    v26 = sub_100019D50((uint64_t)v24, "sectionInset");
    v28 = Width - v27;
    v29 = sub_100019D50((uint64_t)v26, "sectionInset");
    v31 = v28 - v30;
    v32 = AutoShortcutAppSection.items.getter(v29);
    type metadata accessor for AggregatedEntry(0);
    sub_100003974((unint64_t *)&unk_1000D0AE0, (uint64_t (*)(uint64_t))&type metadata accessor for AggregatedEntry, (uint64_t)&protocol conformance descriptor for AggregatedEntry);
    v33 = sub_100019E74();
    v36 = Array<A>.hashValue.getter(v33, v34, v35);
    swift_bridgeObjectRelease(v32);
    sub_10008642C(v36, (uint64_t)v25, v31);
    if ((v37 & 1) != 0)
    {
      v52 = sub_100011648(v31, v61, v60);
      objc_msgSend(v52, "sizeThatFits:", v31, 0.0);
      swift_isUniquelyReferenced_nonNull_native(v25);
      __dst[0] = v25;
      v53 = sub_100019E8C();
      sub_100013BE0(v36, v54, v53, v55, v31);
      v25 = (id)__dst[0];
      swift_release(v23);

      swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      swift_release(v23);
    }
    memcpy(__dst, v69, 0x50uLL);
    __dst[10] = v25;
    sub_100073060((uint64_t)__dst);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v61, v62);
    goto LABEL_15;
  }
  if (v19 != enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
  {
    sub_100019EF4(__dst);
    v56 = (id)__dst[3];
    sub_100019F04();
    objc_msgSend(v17, "itemSize");

    (*(void (**)(id *, uint64_t))(v10 + 8))(v5, v9);
LABEL_15:
    sub_100019DB0(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    goto LABEL_16;
  }
  sub_100019E04();

  objc_msgSend(a1, "frame");
  CGRectGetWidth(v73);
  sub_100019EF4(v65);
  v38 = (id)v65[3];
  sub_100012E6C(v65);
  sub_100019ED4();

  sub_100012AF4(v66);
  v39 = (id)v66[3];
  sub_100012E6C(v66);
  sub_100019ED4();

  objc_msgSend(a1, "frame");
  CGRectGetHeight(v74);
  sub_100012AF4(v67);
  v40 = (id)v67[3];
  sub_100012E6C(v67);
  sub_100019DA4();

  sub_100012AF4(v68);
  v41 = (id)v68[3];
  sub_100012E6C(v68);
  sub_100019DA4();

  v43 = sub_100019D50(v42, "view");
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v43, "safeAreaInsets");

    v46 = sub_100019D50(v45, "view");
    if (v46)
    {
      v47 = v46;
      objc_msgSend(v46, "safeAreaInsets");

      if ((uint64_t)objc_msgSend(a1, "numberOfSections") >= 2)
      {
        sub_100019EF4(v69);
        v48 = v69[3];
        sub_100012E6C(v69);
        objc_msgSend(v48, "itemSize");

        sub_100012AF4(v70);
        v49 = v70[3];
        sub_100012E6C(v70);
        sub_100019DA4();

        sub_100012AF4(__dst);
        v50 = (id)__dst[3];
        v51 = sub_100019F04();
        sub_100019D50((uint64_t)v51, "sectionInset");

      }
      sub_100012E2C((uint64_t *)&unk_1000D3680);
      type metadata accessor for LibrarySectionOptions(0);
      v57 = sub_100019EC0();
      v59(v57, v58);
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t _s13LayoutMetricsVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
}

uint64_t _s13LayoutMetricsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(void **)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v6;
  swift_retain(v3);
  v8 = v4;
  v9 = v5;
  v10 = v7;
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *_s13LayoutMetricsVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = (void *)a2[3];
  v10 = (void *)a1[3];
  a1[3] = v9;
  v11 = v9;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  v12 = (void *)a1[9];
  v13 = (void *)a2[9];
  a1[9] = v13;
  v14 = v13;

  v15 = a2[10];
  v16 = a1[10];
  a1[10] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

void *_s13LayoutMetricsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t _s13LayoutMetricsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v7 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t _s13LayoutMetricsVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13LayoutMetricsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13LayoutMetricsVMa()
{
  return &_s13LayoutMetricsVN;
}

uint64_t sub_100019B28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100019B4C()
{
  unint64_t result;

  result = qword_1000D0AA0;
  if (!qword_1000D0AA0)
  {
    result = swift_getWitnessTable(&unk_100096EDC, &_s13LayoutMetricsV17TopHitsItemLayoutVN);
    atomic_store(result, (unint64_t *)&qword_1000D0AA0);
  }
  return result;
}

void sub_100019B88(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  id v4;

  v2 = sub_100019D50(a1, "view");
  if (v2)
  {
    sub_100019DE4(v2);
    sub_100019F18();
    v4 = sub_100019D50(v3, "view");
    if (v4)
    {
      sub_100019E80(v4);

      sub_100019F20();
      sub_100019E44();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100019BF0(uint64_t a1)
{
  id v1;
  _BOOL8 v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[11];

  v2 = sub_1000141A0(a1);
  if (!v2)
  {
    sub_100012AF4(v7);
    v1 = (id)v7[2];
    v3 = sub_100012E6C(v7);
    sub_100019EAC((uint64_t)v3, "sectionInset");

  }
  v4 = sub_100019D50(v2, "view");
  if (v4)
  {
    sub_100019DE4(v4);

    v6 = sub_100019D50(v5, "view");
    if (v6)
    {
      sub_100019E80(v6);

      sub_100019E8C();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100019CBC(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;

  v1 = sub_100019D50(a1, "view");
  if (v1)
  {
    objc_msgSend(v1, "layoutMargins");
    sub_100019F18();
    v3 = sub_100019D50(v2, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "layoutMargins");

      sub_100019F20();
      sub_100019E44();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100019D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

id sub_100019D50(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100019D58@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_100019D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_100019D9C()
{
  uint64_t v0;

  return swift_release(v0);
}

id sub_100019DA4()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 1336));
}

uint64_t sub_100019DB0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100019DBC()
{
  return 0;
}

uint64_t sub_100019DD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

id sub_100019DE4(void *a1)
{
  return objc_msgSend(a1, "layoutMargins");
}

uint64_t sub_100019DF4()
{
  uint64_t v0;

  return IndexPath.init(item:section:)(0, v0);
}

uint64_t sub_100019E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_100019E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100019E24(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_100019E2C()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v1, v2, v3);
}

id sub_100019E3C(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 256), a2);
}

uint64_t sub_100019E68()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_100019E74()
{
  uint64_t v0;

  return v0;
}

id sub_100019E80(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1320));
}

double sub_100019E8C()
{
  double v0;

  return v0;
}

id sub_100019EAC(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100019EB4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_100019EC0()
{
  uint64_t v0;

  return v0;
}

id sub_100019ED4()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 1336));
}

id sub_100019EF4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100012AF4(a1);
}

uint64_t sub_100019EFC()
{
  return type metadata accessor for ShortcutsLibrarySection(0);
}

_QWORD *sub_100019F04()
{
  uint64_t v0;

  return sub_100012E6C((_QWORD *)(v0 - 240));
}

void sub_100019F10()
{
  void *v0;

}

void sub_100019F18()
{
  void *v0;

}

double sub_100019F20()
{
  return 0.0;
}

id sub_100019F34()
{
  return sub_100027178(OBJC_IVAR___WFMainViewController_database);
}

uint64_t sub_100019F40()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_100026B08();
  v0 = sub_1000273A8();
  return v1(v0);
}

void sub_100019F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _BYTE v4[24];

  sub_100026D70(v0 + OBJC_IVAR___WFMainViewController_currentDestination, (uint64_t)v4);
  v1 = sub_100027138();
  sub_100026854(v1, v2, v3);
}

void sub_100019FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + OBJC_IVAR___WFMainViewController_currentDestination, v4, 33, 0);
  v1 = sub_10002768C();
  sub_100015934(v1, v2);
  swift_endAccess(v4);
  sub_100006B94();
  sub_1000273B4(v3, &qword_1000D1100);
}

id sub_10001A034()
{
  return sub_100027178(OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
}

void sub_10001A040()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_retainAutoreleasedReturnValue(sub_100019D50((uint64_t)objc_retain(*(id *)(v0
                                                                                   + OBJC_IVAR___WFMainViewController_database)), "undoManager"));
  v2 = type metadata accessor for ShortcutMoveService(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = sub_1000273A8();
  ShortcutMoveService.init(database:undoManager:)(v3);
  sub_100018188();
}

void sub_10001A0A4()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___WFMainViewController_mainUndoManager);
  sub_100018188();
}

BOOL static MoveShortcutToFolderAction.MoveError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_10001A0DC(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int sub_10001A100(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL sub_10001A144(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MoveShortcutToFolderAction.MoveError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10001A150()
{
  char *v0;

  return sub_10001A100(*v0);
}

void sub_10001A158(uint64_t a1)
{
  char *v1;

  sub_10001A0DC(a1, *v1);
}

Swift::Int sub_10001A160(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_10001A1A0()
{
  return sub_10001A1D4((uint64_t (*)(void))sub_100015140, (uint64_t (*)(void))sub_10000EA94);
}

void sub_10001A1B4()
{
  sub_10000EAE8();
}

uint64_t sub_10001A1C0()
{
  return sub_10001A1D4((uint64_t (*)(void))sub_10001A1B4, (uint64_t (*)(void))sub_10000EADC);
}

uint64_t sub_10001A1D4(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + OBJC_IVAR___WFMainViewController_display))
    a1 = a2;
  return a1();
}

void sub_10001A1EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_content);
  *(_QWORD *)(v1 + OBJC_IVAR___WFMainViewController_content) = a1;

}

void sub_10001A200()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v0 = (void *)sub_10001A1A0();
  v6 = objc_msgSend(v0, "tabBarController");

  if (v6)
  {
    objc_msgSend(v6, "setSelectedIndex:", 0);
    v1 = objc_msgSend(v6, "selectedViewController");
    if (v1)
    {
      v2 = v1;
      v3 = objc_opt_self(UINavigationController);
      v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
      if (v4)
      {

        v5 = v6;
        v6 = v2;
      }
      else
      {
        v5 = v2;
      }

    }
    sub_100026F54(v6);
  }
  else
  {
    sub_1000270C4();
  }
}

void sub_10001A2CC(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t ObjectType;

  v3 = v1;
  sub_100026B08();
  sub_1000276A4();
  __chkstk_darwin(v5);
  sub_1000184A0();
  (*(void (**)(uint64_t, _QWORD))(v6 + 104))(v2, enum case for RootNavigationDestination.allShortcuts(_:));
  v7 = objc_allocWithZone((Class)sub_100015138());
  sub_10001A374(a1, v2);
  ObjectType = swift_getObjectType(v3);
  swift_deallocPartialClassInstance(v3, ObjectType, *(unsigned int *)((swift_isaMask & *v3) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v3) + 0x34));
  sub_100018388();
}

char *sub_10001A374(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  void *v20;
  objc_super v22;

  v5 = sub_100026B08();
  sub_100027470();
  sub_100015D74(v6, v7, v8, v5);
  v9 = OBJC_IVAR___WFMainViewController_mainUndoManager;
  v10 = objc_allocWithZone((Class)NSUndoManager);
  v11 = v2;
  *(_QWORD *)&v2[v9] = sub_100027650((uint64_t)v11, "init");
  v11[OBJC_IVAR___WFMainViewController_display] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController____lazy_storage___columnGalleryViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController____lazy_storage___compactGalleryViewController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController_content] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController_database] = a1;
  v12 = *(_QWORD *)(v5 - 8);
  v13 = sub_100026DA4((uint64_t)&v11[OBJC_IVAR___WFMainViewController_initialDestination], a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  sub_100026AF8(v13, &qword_1000D1238, WFLibraryRunCoordinator_ptr);
  v14 = (void *)WFWorkflowRunSourceMyWorkflows;
  v15 = a1;
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController_runCoordinator] = sub_10001A5C0(v14, v15);
  v16 = objc_msgSend(objc_allocWithZone((Class)UISplitViewController), "initWithStyle:", 1);
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController_splitView] = v16;
  v17 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource(0));
  *(_QWORD *)&v11[OBJC_IVAR___WFMainViewController_autoShortcutsDataSource] = AutoShortcutsAppsDataSource.init(organizedCollections:)(1);

  v22.receiver = v11;
  v22.super_class = (Class)sub_100015138();
  v18 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v19 = (char *)v18;
  RootView.setup()();
  v20 = *(void **)&v19[OBJC_IVAR___WFMainViewController_runCoordinator];
  sub_1000271CC(v20, "setDelegate:");
  sub_1000271CC(v20, "registerObserver:");

  sub_100026C54(a2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  return v19;
}

id sub_10001A5C0(void *a1, void *a2)
{
  uint64_t v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithSource:database:", a1, a2);

  return v5;
}

void sub_10001A618()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t)&v0[OBJC_IVAR___WFMainViewController_currentDestination];
  v2 = sub_100026B08();
  sub_100026B84(v1, v3, v4, v2);
  v5 = OBJC_IVAR___WFMainViewController_mainUndoManager;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)NSUndoManager), "init");
  v0[OBJC_IVAR___WFMainViewController_display] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___columnGalleryViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___compactGalleryViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFMainViewController_content] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009C2C0, "Shortcuts/MainViewController.swift", 34, 2, 229, 0);
  __break(1u);
}

void sub_10001A724(char a1)
{
  void *v1;
  uint64_t v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)sub_100015138();
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1 & 1);
  type metadata accessor for ActionDrawerDataSource(0);
  v3 = static ActionDrawerDataSource.shared.getter();
  swift_release(v3);
  sub_1000270C4();
}

void sub_10001A7B0(void *a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  objc_super v14;
  _QWORD aBlock[6];
  objc_super v16;

  v4 = v2;
  v7 = sub_100019D50((uint64_t)a1, "traitCollection");
  v8 = sub_100027404(v7);

  if (v8 == sub_100026C98(v9, *(const char **)(v3 + 1464)))
  {
    v14.receiver = v4;
    v14.super_class = (Class)sub_100015138();
    objc_msgSendSuper2(&v14, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  }
  else
  {
    sub_10000D9FC();
    v10 = sub_100027304();
    sub_1000690B4(a1);

    v16.receiver = v4;
    v16.super_class = (Class)sub_100015138();
    objc_msgSendSuper2(&v16, "willTransitionToTraitCollection:withTransitionCoordinator:", v10, a2);
    v11 = sub_100026B2C((uint64_t)&unk_1000C0AE0, 24);
    *(_QWORD *)(v11 + 16) = v4;
    aBlock[4] = sub_100026A10;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001A944;
    aBlock[3] = &unk_1000C0AF8;
    v12 = _Block_copy(aBlock);
    v13 = v4;
    sub_100027204();
    objc_msgSend(a2, "animateAlongsideTransition:completion:", 0, v12);
    _Block_release(v12);
  }
}

void sub_10001A904()
{
  void *v0;
  id v1;

  sub_10000D9FC();
  v1 = v0;
  sub_1000690B4(0);

}

uint64_t sub_10001A944(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_10001A9E8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v4 = sub_100019D50(a1, "traitCollection");
  v5 = sub_100027404(v4);

  if (a1 && (v6 = sub_100019EAC((uint64_t)v6, *(const char **)(v2 + 1464)), v5 == v6))
  {
    v8.receiver = v1;
    v8.super_class = (Class)sub_100015138();
    objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
    sub_100027524();
  }
  else
  {
    v7 = sub_100019D50((uint64_t)v6, "traitCollection");
    sub_10000500C();

  }
}

void sub_10001AAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_1000184A0();
  if (*(_QWORD *)(v0 + OBJC_IVAR___WFMainViewController_content))
  {
    sub_1000273E4();
    v4 = sub_1000276C0();
    if (swift_dynamicCastClass(v4, v5))
    {
      v6 = sub_1000275C0();
      v7 = sub_100071F04();
      v9 = v8;

      if (v9)
      {
        v10 = objc_msgSend((id)objc_opt_self(APApplication), "hiddenAppBundleIdentifiers");
        static Set._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100027568();
        sub_100043088(v7, v9, v2);
        v12 = v11;
        swift_bridgeObjectRelease(v2);
        sub_100018420();
        if ((v12 & 1) != 0)
        {
          v13 = sub_100026C5C();
          sub_100026B84(v1, v14, v15, v13);
          sub_10001B1B0();
          sub_10001222C(v1, &qword_1000D10F8);
        }
      }
    }
  }
  sub_100026B34();
}

void sub_10001AC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  int v7;

  v1 = sub_100026B08();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_100026BF0();
  v3 = sub_100027390();
  v4(v3);
  v5 = sub_100027138();
  v7 = v6(v5);
  if (v7 == enum case for RootNavigationDestination.gallery(_:)
    || v7 != enum case for RootNavigationDestination.shortcuts(_:)
    && v7 != enum case for RootNavigationDestination.automations(_:))
  {
    sub_100026D68(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_100018388();
}

void sub_10001ACF8(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", a1), "navigationBar");
  objc_msgSend(v1, "setPrefersLargeTitles:", 1);

  sub_100018188();
}

id sub_10001AD60()
{
  uint64_t v0;

  return (id)WFUserInterfaceFromViewController(v0);
}

uint64_t sub_10001AD7C()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  _QWORD *v56;

  v1 = *(void **)&v0[OBJC_IVAR___WFMainViewController_content];
  if (v1)
  {
    v2 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v2, v3, v4, v5, v6, v7, v8, v9);
    v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v11 >= v10 >> 1)
      sub_100026B00(v10 > 1, v11 + 1);
    v12 = sub_10002733C(v11);
    specialized Array._endMutation()(v12, v13);
  }

  sub_1000276E4((uint64_t)_swiftEmptyArrayStorage);
  v14 = objc_msgSend((id)sub_10001A1A0(), "tabBarController");
  sub_100027668();
  if (v0)
  {
    v15 = sub_100025DC8(v0);
    if (v15)
    {
      v16 = v15;
      if ((unint64_t)v15 >> 62)
      {
        if (v15 >= 0)
          v37 = v15 & 0xFFFFFFFFFFFFFF8;
        else
          v37 = v15;
        swift_bridgeObjectRetain(v15);
        result = _CocoaArrayWrapper.endIndex.getter(v37);
        v17 = result;
        if (result)
          goto LABEL_9;
      }
      else
      {
        v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain(v15);
        if (v17)
        {
LABEL_9:
          if (v17 < 1)
            goto LABEL_57;
          for (i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0)
            {
              v20 = sub_100026FE0();
              v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v21);
            }
            else
            {
              v22 = sub_100026E90(v16 + 8 * i);
            }
            v23 = v22;
            v24 = objc_opt_self(UINavigationController);
            v25 = sub_10002716C(v24);
            if (v25)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25, v26, v27, v28, v29, v30, v31, v32);
              v34 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
              v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v34 >= v33 >> 1)
                sub_100026B00(v33 > 1, v34 + 1);
              v35 = sub_100026D38(v34);
              specialized Array._endMutation()(v35, v36);
            }
            else
            {

            }
          }
        }
      }
      sub_1000183D0();
      sub_1000183D0();
    }
  }
  v56 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v46 = _swiftEmptyArrayStorage;
    else
      v46 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    sub_100027658();
    result = _CocoaArrayWrapper.endIndex.getter(v46);
    v38 = result;
    if (result)
      goto LABEL_29;
  }
  else
  {
    v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_100027658();
    if (v38)
    {
LABEL_29:
      if (v38 >= 1)
      {
        v39 = 0;
        do
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
            v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, _swiftEmptyArrayStorage);
          else
            v40 = sub_100026E90((uint64_t)&_swiftEmptyArrayStorage[v39]);
          v41 = v40;
          ++v39;
          v42 = objc_msgSend(v40, "viewControllers", v56);
          sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
          v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v43);

          sub_1000276E4(v44);
        }
        while (v38 != v39);
        sub_100026FC4((uint64_t)_swiftEmptyArrayStorage);
        v45 = v56;
        goto LABEL_41;
      }
      __break(1u);
LABEL_57:
      __break(1u);
      return result;
    }
  }
  sub_100026FC4((uint64_t)_swiftEmptyArrayStorage);
  v45 = _swiftEmptyArrayStorage;
LABEL_41:
  sub_1000276E4((uint64_t)v45);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_51;
  v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_100027680();
  for (; v47; v47 = _CocoaArrayWrapper.endIndex.getter(v55))
  {
    v48 = 0;
    while (1)
    {
      v49 = v48 + 1;
      if (__OFADD__(v48, 1))
        break;
      v50 = (void *)_swiftEmptyArrayStorage[v48 + 4];
      v51 = sub_1000273E4();
      v52 = swift_dynamicCastClass(v50, v51);
      if (v52)
      {
        v53 = v52;
        v54 = v50;
        goto LABEL_49;
      }
      ++v48;
      if (v49 == v47)
        goto LABEL_47;
    }
    __break(1u);
LABEL_51:
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v55 = _swiftEmptyArrayStorage;
    else
      v55 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    sub_100027680();
  }
LABEL_47:
  v53 = 0;
LABEL_49:
  sub_100026FC4((uint64_t)_swiftEmptyArrayStorage);
  sub_1000183D0();
  return v53;
}

void sub_10001B130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  id v5;

  if (*(_QWORD *)(v0 + OBJC_IVAR___WFMainViewController_content))
  {
    v1 = sub_1000273E4();
    v2 = sub_1000276CC(v1);
    if (v2)
    {
      v3 = &OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController;
    }
    else
    {
      v4 = type metadata accessor for GalleryHostingViewController(0);
      v2 = sub_1000276CC(v4);
      if (!v2)
        goto LABEL_7;
      v3 = &OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController;
    }
    v5 = *(id *)(v2 + *v3);
  }
LABEL_7:
  sub_100018188();
}

BOOL sub_10001B198()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___WFMainViewController_content) != 0;
}

void sub_10001B1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  int v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  sub_1000275E4();
  v4 = sub_100026B08();
  sub_100027370();
  __chkstk_darwin(v5);
  sub_100027084();
  __chkstk_darwin(v6);
  sub_100027224();
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  if ((*(_BYTE *)(v0 + OBJC_IVAR___WFMainViewController_display) & 1) != 0)
  {
    v8 = enum case for RootNavigationDestination.shortcuts(_:);
    v7(v1, enum case for RootNavigationDestination.shortcuts(_:), v4);
  }
  else
  {
    sub_100026D54(enum case for RootNavigationDestination.allShortcuts(_:), v7);
    v8 = enum case for RootNavigationDestination.shortcuts(_:);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v9 = sub_100026FE0();
  v11 = v10(v9);
  if (v11 == v8)
  {
    sub_10001A200();
  }
  else
  {
    if (v11 != enum case for RootNavigationDestination.allShortcuts(_:))
    {
      v13 = *(void (**)(uint64_t))(v3 + 8);
      v14 = sub_1000184E0();
      v13(v14);
      v15 = sub_100026FE0();
      v13(v15);
      goto LABEL_10;
    }
    sub_100026C10();
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026D18(v12);
  }
  sub_100026D68(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
LABEL_10:
  sub_100026D40();
}

void sub_10001B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  sub_100018190();
  a19 = v23;
  a20 = v24;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100026B08();
  sub_100026DAC();
  __chkstk_darwin(v29);
  sub_100026BD8();
  v30 = objc_msgSend((id)sub_10001A1A0(), "tabBarController");
  sub_100026F70();
  if (v20)
  {
    v31 = sub_100025E3C(v20);
    if (v31)
    {
      v32 = v31;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v21, enum case for RootNavigationDestination.automations(_:), v28);
      sub_10001AC34();
      v34 = v33;
      sub_100026D60(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      sub_1000660CC(v34, (v32 & 0xC000000000000001) == 0, v32);
      if ((v32 & 0xC000000000000001) != 0)
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v32);
      else
        v35 = sub_100026E90(v32 + 8 * v34);
      v36 = v35;
      sub_100026B90();
      v37 = objc_opt_self(UINavigationController);
      v38 = swift_dynamicCastObjCClassUnconditional(v36, v37, 0, 0, 0);
      v39 = v36;
      v40 = sub_100026B98((uint64_t)v39, "viewControllers");
      sub_100026AF8((uint64_t)v40, &qword_1000D1070, UIViewController_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);
      sub_100026DD8();
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v55 = v38;
        else
          v55 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v38);
        v56 = _CocoaArrayWrapper.endIndex.getter(v55);
        sub_100026B90();
        if (v56)
        {
LABEL_7:
          sub_1000660CC(0, (v38 & 0xC000000000000001) == 0, v38);
          if ((v38 & 0xC000000000000001) == 0)
          {
            v42 = *(id *)(v38 + 32);
LABEL_9:
            v43 = v42;
            sub_100026B90();

            v44 = sub_1000276B8();
            v45 = (id)swift_dynamicCastClassUnconditional(v43, v44, 0, 0, 0);
            goto LABEL_12;
          }
LABEL_24:
          v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
          goto LABEL_9;
        }
      }
      else if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_7;
      }
      sub_100026B90();
      __break(1u);
      goto LABEL_24;
    }

  }
  v46 = *(void **)&v20[OBJC_IVAR___WFMainViewController_database];
  v47 = objc_allocWithZone((Class)sub_1000276B8());
  v45 = (id)TriggerRootViewController.init(with:)(v46);
  v39 = v45;
LABEL_12:
  sub_10000D2B4();
  v48 = sub_1000184E0();
  sub_100026854(v48, v49, v50);
  v51 = sub_100026C5C();
  v52 = sub_100026C7C((uint64_t)v27);
  if (v53)
  {
    sub_1000273B4(v52, &qword_1000D10F8);
  }
  else
  {
    v54 = RootNavigationContext.createAutomation.getter(v52);
    sub_100026C54((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8));
    if ((v54 & 1) != 0)
      TriggerRootViewController.startCreateNewPersonalAutomation()();
  }

  sub_100018094();
}

void sub_10001B5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;

  sub_100018190();
  v6 = v0;
  v58 = v8;
  v59 = v7;
  v60 = v9;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D1088);
  sub_100018034();
  __chkstk_darwin(v11);
  v12 = sub_100019DBC();
  v13 = type metadata accessor for RootPPTTestCase(v12);
  sub_100026F60();
  __chkstk_darwin(v14);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1090);
  sub_100018034();
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100027144();
  v56 = *(_QWORD *)(v18 - 8);
  sub_100018044();
  __chkstk_darwin(v19);
  sub_100026BD8();
  v20 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___WFMainViewController_splitView), "detailViewController");
  v57 = v13;
  v54 = v1;
  v55 = v4;
  if (!v20)
    goto LABEL_16;
  v21 = (uint64_t)v20;
  v22 = objc_opt_self(UINavigationController);
  v23 = (void *)sub_10002716C(v22);
  if (!v23)
  {

LABEL_16:
    v33 = 0;
    v31 = 0;
    goto LABEL_17;
  }
  v24 = objc_msgSend(v23, "viewControllers");
  sub_100026F4C();
  sub_100026AF8(v25, &qword_1000D1070, UIViewController_ptr);
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v26);
  sub_1000270D0();
  if (!((unint64_t)v21 >> 62))
  {
    v27 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_5;
    goto LABEL_15;
  }
  if (v21 < 0)
    v34 = v21;
  else
    v34 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v27 = _CocoaArrayWrapper.endIndex.getter(v34);
  sub_100018420();
  if (!v27)
  {
LABEL_15:
    sub_100018420();
    goto LABEL_16;
  }
LABEL_5:
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    sub_1000660CC(v29, (v21 & 0xC000000000000001) == 0, v21);
    if ((v21 & 0xC000000000000001) == 0)
    {
      v30 = sub_100026E90(v21 + 8 * v29);
      goto LABEL_8;
    }
  }
  v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v21);
LABEL_8:
  v31 = v30;
  sub_100018420();
  v32 = type metadata accessor for GalleryHostingViewController(0);
  v33 = (void *)sub_1000276D8(v32);
  if (v33)
    v31 = v31;
LABEL_17:
  v35 = (void *)sub_10001A1A0();
  v36 = objc_msgSend(v35, "tabBarController");
  sub_1000270D0();
  if (v6)
  {
    v38 = sub_100019D50(v37, "selectedViewController");
    sub_100026F4C();
    if (!v35)
    {
      if (v33)

      goto LABEL_24;
    }
    v39 = type metadata accessor for GalleryHostingViewController(0);
    swift_dynamicCastClass(v35, v39);
    sub_1000270D0();
  }
  if (v33)
  {
    v40 = v58;
    goto LABEL_25;
  }
LABEL_24:
  v33 = (void *)sub_10001A1C0();
  v40 = v58;
  sub_10000D2B4();
LABEL_25:

  sub_100026854(v59, (uint64_t)v17, &qword_1000D1090);
  sub_100026D88((uint64_t)v17, 1, v18);
  if (v48)
  {
    sub_10001222C((uint64_t)v17, &qword_1000D1090);
  }
  else
  {
    v41 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v5, v17, v18);
    v42 = (void *)sub_10001A1C0();
    sub_100023D28(v5, v60 & 1);

    sub_100027560(v5, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
  }
  sub_100026854(v40, v3, &qword_1000D10F8);
  v43 = sub_100026C5C();
  v44 = sub_100026D88(v3, 1, v43);
  if (v48)
  {
    sub_10002732C(v44, &qword_1000D10F8);
    sub_100027470();
    sub_100015D74(v45, v46, v47, v57);
LABEL_33:

    sub_1000274DC(v49, &qword_1000D1088);
    goto LABEL_34;
  }
  RootNavigationContext.pptTest.getter(v44);
  sub_1000272BC(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8));
  sub_100026D88(v2, 1, v57);
  if (v48)
    goto LABEL_33;
  v51 = v54;
  v50 = v55;
  sub_100026DA4(v54, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
  v52 = (void *)sub_10001A1C0();
  sub_10002423C(v51);

  sub_100026C54(v51, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
LABEL_34:
  sub_100018094();
}

id sub_10001B9A8()
{
  uint64_t v0;
  id result;
  __objc2_prot *v2;

  result = *(id *)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (result)
  {
    v2 = &OBJC_PROTOCOL___WFRootChildViewController;
    result = (id)swift_dynamicCastObjCProtocolConditional(result, 1, &v2);
    if (result)
      return objc_msgSend(result, "scrollForNavigationTap");
  }
  return result;
}

BOOL sub_10001B9F8()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "presentedViewController");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t sub_10001BA3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  sub_100026AF8((uint64_t)a1, &qword_1000D1240, WFWorkflow_ptr);
  v4 = sub_100030E6C(a1, *(id *)(v2 + OBJC_IVAR___WFMainViewController_database));
  sub_10001D8E4();
  v6 = v5;

  return v6;
}

id sub_10001BB50(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  v3 = (void *)_convertErrorToNSError(_:)();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "alertWithError:", v3);
  swift_errorRelease(a1);

  return v4;
}

void sub_10001BBB0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  sub_100018190();
  v6 = v5;
  v31 = v7;
  v9 = v8;
  v10 = type metadata accessor for ShortcutFileImportView(0);
  sub_10002724C();
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E2C(&qword_1000D11F0);
  sub_100018034();
  __chkstk_darwin(v15);
  sub_100018488();
  v32 = sub_100012E2C(&qword_1000D11F8);
  sub_100018034();
  __chkstk_darwin(v16);
  sub_100027084();
  __chkstk_darwin(v17);
  sub_100027224();
  v18 = v9;
  swift_retain(v6);
  ShortcutFileImportView.init(importResult:completion:)(v18, v31, v6);
  KeyPath = swift_getKeyPath(&unk_100097378);
  sub_10000A060((unint64_t *)&unk_1000D1030, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v21 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v3, v13, v10);
  v22 = (uint64_t *)(v3 + *(int *)(v14 + 36));
  *v22 = KeyPath;
  v22[1] = (uint64_t)v0;
  v22[2] = v21;
  v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  v0;
  v23(v13, v10);
  v24 = swift_getKeyPath(&unk_1000973A8);
  v25 = (id)sub_1000273BC();
  sub_100026854(v3, v1, &qword_1000D11F0);
  v26 = (uint64_t *)(v1 + *(int *)(v32 + 36));
  *v26 = v24;
  v26[1] = (uint64_t)v25;
  sub_10001222C(v3, &qword_1000D11F0);
  v27 = sub_100027354();
  sub_100026854(v27, v28, &qword_1000D11F8);
  v29 = objc_allocWithZone((Class)sub_100012E2C((uint64_t *)&unk_1000D1200));
  v30 = (void *)UIHostingController.init(rootView:)(v2);
  sub_10001E994(v30, 1, 1, 0, 0);

  sub_10001222C(v1, &qword_1000D11F8);
  sub_100018094();
}

uint64_t sub_10001BDA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[1];
  v2 = swift_unknownObjectRetain(*a1);
  return EnvironmentValues.rootNavigator.setter(v2, v1);
}

uint64_t sub_10001BDE0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_unknownObjectRetain(*a1);
  return EnvironmentValues.userInterface.setter(v1);
}

void sub_10001BE08(void *a1, void *a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v15 = a5;
  v16 = v7;
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = sub_1000184E0();
  sub_1000123BC(v20, v21);
  sub_10001F040(v16, v16, v17, a2, a3, a4, a5, a6, a7);
  sub_100027524();
}

void sub_10001BEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  void *v14;
  void *v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v14 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_runCoordinator);
  if (a7)
  {
    v18[4] = a7;
    v19 = a8;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10001BF94;
    v18[3] = &unk_1000C0A30;
    v16 = _Block_copy(v18);
    v17 = v19;
    swift_retain(a8);
    *(_QWORD *)&a9 = swift_release(v17).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v14, "runWorkflowReference:fromSource:withInput:requestOutput:runViewSource:completionHandler:", a2, a3, a4, a5 & 1, a6, v16, a9);
  _Block_release(v16);
}

void sub_10001BF94(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(void *, uint64_t, void *);
  id v9;
  id v10;

  v8 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a2;
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

void sub_10001C010(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  sub_100012E2C(&qword_1000D10D0);
  sub_100018034();
  __chkstk_darwin(v3);
  v4 = sub_100027068();
  v5 = type metadata accessor for TaskPriority(v4);
  sub_10002747C(v1, v6, v7, v5);
  v8 = sub_1000275C0();
  v9 = a1;
  v10 = static MainActor.shared.getter();
  v11 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C0978, 48);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  v11[5] = v9;
  v12 = sub_10005F17C(v1, (uint64_t)&unk_1000D11B8, (uint64_t)v11);
  swift_release(v12);
  sub_100026B34();
}

uint64_t sub_10001C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[10] = a4;
  v5[11] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[12] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[13] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[14] = swift_task_alloc(v8);
  v5[15] = swift_task_alloc(v8);
  v5[16] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[17] = static MainActor.shared.getter();
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9);
  v5[18] = v10;
  v5[19] = v11;
  return swift_task_switch(sub_10001C19C, v10, v11);
}

uint64_t sub_10001C19C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getLNAction(for:);
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getLNAction(for:)
                                  + 1));
  *(_QWORD *)(v0 + 160) = v2;
  *v2 = v0;
  v2[1] = sub_10001C238;
  return ((uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getLNAction(for:)
                                         + v1))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_10001C238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 160);
  v3[21] = a1;
  v3[22] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10001CEAC;
  else
    v5 = sub_10001C2EC;
  return swift_task_switch(v5, v3[18], v3[19]);
}

uint64_t sub_10001C2EC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  Class isa;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t (**v39)(uint64_t, uint64_t);
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  Class v61;
  void *v62;
  id v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  id v82;
  NSString v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  _BOOL4 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  NSString v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  SEL *v109;
  void *v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  Class v124;
  uint8_t *v125;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  NSString v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  Class v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  swift_release(*(_QWORD *)(v0 + 136));
  v2 = sub_100019D50(v1, "fullyQualifiedIdentifier");
  v3 = objc_msgSend(objc_allocWithZone((Class)LNMetadataProvider), "initWithOptions:", 2);
  v4 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v5 = sub_100026B2C(v4, 40);
  *(_OWORD *)(v5 + 16) = xmmword_100096F90;
  *(_QWORD *)(v5 + 32) = v2;
  v160 = v5;
  v6 = sub_1000271A8();
  v7 = (void *)v160;
  sub_100026AF8(v6, &qword_1000D11E0, LNFullyQualifiedActionIdentifier_ptr);
  v8 = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_100018420();
  *(_QWORD *)(v0 + 72) = 0;
  v10 = objc_msgSend(v3, "actionsWithFullyQualifiedIdentifiers:error:", isa, v0 + 72);
  sub_1000270D0();
  v11 = *(void **)(v0 + 72);
  if (!v7)
  {
    v62 = *(void **)(v0 + 168);
    v63 = v11;
    v64 = (uint8_t *)_convertNSErrorToError(_:)(v11);

    swift_willThrow();
    *(_QWORD *)(v0 + 40) = v64;
    sub_10002742C();
    v65 = sub_100012E2C(&qword_1000D1050);
    sub_100026AF8(v65, &qword_1000D1058, NSError_ptr);
    v68 = sub_100026DCC(v0 + 48, v0 + 40, v67, v66);
    if ((v68 & 1) == 0)
    {
LABEL_24:
      sub_100027614();
      sub_100026E80();
      sub_10002742C();
      v93 = sub_10002742C();
      v94 = Logger.logObject.getter(v93);
      v95 = static os_log_type_t.error.getter();
      v96 = sub_100026E44(v95);
      v98 = *(_QWORD *)(v0 + 104);
      v97 = *(_QWORD *)(v0 + 112);
      v99 = *(_QWORD *)(v0 + 96);
      if (v96)
      {
        v158 = *(_QWORD *)(v0 + 96);
        v157 = *(_QWORD *)(v0 + 104);
        v100 = (uint8_t *)sub_100026B24(12);
        v101 = sub_100026B24(32);
        v160 = v101;
        *(_DWORD *)v100 = 136446210;
        swift_getErrorValue(v64, v0 + 56, v0 + 16);
        v102 = sub_1000275D0();
        *(_QWORD *)(v0 + 64) = sub_100015868(v102, v103, &v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v100 + 4, v100 + 12);
        sub_100018420();
        sub_100026FCC();
        sub_100026FCC();
        sub_10002729C((void *)&_mh_execute_header, v94, (os_log_type_t)(v0 + 40), "Unable to run App Shortcut: %{public}s", v100);
        sub_100026E10((uint64_t)&type metadata for Any);
        sub_100026ACC(v101);
        sub_100026ACC((uint64_t)v100);

        (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v97, v158);
      }
      else
      {
        sub_100026FCC();
        sub_100026FCC();

        (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
      }
      v3 = objc_msgSend(objc_allocWithZone((Class)WFAlert), "init");
      sub_100026F00();
      v104 = sub_100026E3C();
      sub_100026A98();
      v105 = sub_100026AE8();

      sub_100027334();
      v106 = sub_100027390();
      sub_100025F74(v106, v107, v108, v109);
      v110 = (void *)sub_100027120();
      v111 = sub_100027128(v110, "okButtonWithHandler:");
      v112 = sub_100019EAC((uint64_t)v111, "buttons");
      sub_100026D7C((uint64_t)v112, &qword_1000D11C0);
      sub_100026D08(v113);
      sub_100026F70();
      sub_100027114(v114, v115, v116, v117, v118, v119, v120, v121);
      sub_100026EC4();
      if (v123)
        sub_100026B00(v122 > 1, (uint64_t)v112 + 1);
      sub_10002733C((uint64_t)v112);
      sub_1000271A8();
      v124 = sub_100026E74().super.isa;
      sub_100018420();
      sub_10002704C(v3, "setButtons:");

      v30 = (id)sub_1000273FC();
      sub_100026D9C(v30, "presentAlert:");

      sub_100027130();
      v125 = v64;
LABEL_30:
      swift_errorRelease(v125);
      goto LABEL_31;
    }
    v3 = *(id *)(v0 + 48);
    v69 = sub_100019EAC(v68, "domain");
    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(LNMetadataProviderErrorDomain);
    if (v70 == v73 && v72 == (_QWORD)v74)
    {
      v77 = sub_100026FC4(v72);
    }
    else
    {
      v69 = v74;
      v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v72, v73, v74, 0);
      sub_100018420();
      v77 = swift_bridgeObjectRelease(v69);
      if ((v76 & 1) == 0)
      {
LABEL_23:

        goto LABEL_24;
      }
    }
    if (sub_100019EAC(v77, "code") == (id)9007)
    {
      v78 = *(_QWORD *)(v0 + 120);
      sub_100026FCC();
      v79 = sub_100026E80();
      v80 = Logger.logObject.getter(v79);
      v81 = static os_log_type_t.default.getter();
      if (sub_10002730C(v81))
      {
        v64 = (uint8_t *)sub_100026B24(2);
        *(_WORD *)v64 = 0;
        sub_100026FBC((void *)&_mh_execute_header, v80, (os_log_type_t)v78, "Unable to run Auto Shortcut due to user has not approved the application Privacy Disclosure)", v64);
        sub_100026ACC((uint64_t)v64);
      }
      sub_1000272F4();
      sub_100026D60((uint64_t)v64, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 80));
      v82 = objc_msgSend(objc_allocWithZone((Class)WFAlert), "init");
      v83 = sub_100026A98();
      sub_100026A98();
      v84 = sub_10002726C();

      sub_100026EB0();
      sub_10002757C();
      sub_100026C6C(v85, v86, v87, (SEL *)&selRef_setTitle_);
      v89 = sub_100019D50(v88, "underlyingAutoShortcut");
      v90 = sub_100025EA8(v89);
      if (v91)
      {
        v92 = v91;
        v159 = v90;
      }
      else
      {
        v159 = WFExecutableAppShortcut.name.getter(v90);
        v92 = v127;
      }
      sub_10002701C();
      v128 = static AppNameCache.shared.getter();
      v129 = objc_msgSend(sub_100026B98(v128, "underlyingAutoShortcut"), "bundleIdentifier");
      sub_100026E88();
      static String._unconditionallyBridgeFromObjectiveC(_:)(&selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_);
      sub_1000274F8();
      sub_100027498();
      v131 = v130;
      sub_100019D9C();
      sub_1000273A0();
      if (v131)
      {
        v132 = sub_100026FF4();
        sub_100026A98();
        v133 = sub_100027180();

        static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
        sub_100027588();
        v134 = sub_100012E2C(&qword_1000D11C8);
        v135 = sub_100026B2C(v134, 112);
        *(_OWORD *)(v135 + 16) = xmmword_100096F60;
        *(_QWORD *)(v135 + 56) = &type metadata for String;
        v136 = sub_10002676C();
        sub_10002752C(v136, v159);
      }
      else
      {
        sub_100026A98();
        sub_100026A98();
        v137 = sub_100026BB4();
        sub_1000274F0();

        sub_100026EB0();
        sub_100027510();
        v138 = sub_100012E2C(&qword_1000D11C8);
        v139 = sub_100026B2C(v138, 72);
        *(_OWORD *)(v139 + 16) = xmmword_100096E80;
        *(_QWORD *)(v139 + 56) = &type metadata for String;
        *(_QWORD *)(v139 + 64) = sub_10002676C();
        *(_QWORD *)(v139 + 32) = v159;
        *(_QWORD *)(v139 + 40) = v92;
      }
      sub_1000271B0();
      sub_100018420();
      v140 = sub_1000273A0();
      sub_100026C6C(v140, v141, v142, (SEL *)&selRef_setMessage_);
      v143 = (void *)sub_100027120();
      v144 = sub_100027128(v143, "okButtonWithHandler:");
      v145 = sub_100026DBC((uint64_t)v144, "buttons");
      sub_100026D7C((uint64_t)v145, &qword_1000D11C0);
      sub_100026D08(v146);
      sub_100026F70();
      sub_100027114(v147, v148, v149, v150, v151, v152, v153, v154);
      sub_100026EC4();
      if (v123)
        sub_100026B00(v155 > 1, (uint64_t)v145 + 1);
      sub_100026D38((uint64_t)v145);
      sub_1000271A8();
      v156 = sub_100026E74().super.isa;
      sub_100018420();
      sub_1000270BC(v82, "setButtons:");

      v30 = (id)sub_1000273FC();
      sub_10002704C(v30, "presentAlert:");
      sub_100027130();

      v125 = *(uint8_t **)(v0 + 40);
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  v12 = sub_100012E2C(&qword_1000D11E8);
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, v12, &protocol witness table for String);
  v14 = v11;

  v16 = sub_100027650(v15, "bundleIdentifier");
  v17 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  sub_100086478((uint64_t)v17, v19, v13);
  v21 = v20;
  sub_100026B90();
  v22 = swift_bridgeObjectRelease(v13);
  if (!v21)
    goto LABEL_5;
  v23 = sub_100027650(v22, "actionIdentifier");
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  sub_1000864B4(v24, v26, v21);
  v17 = v27;
  sub_100026B90();
  sub_100018420();
  if (v17)
  {
    v28 = *(void **)(v0 + 168);
    v29 = *(void **)(v0 + 88);
    v30 = *(id *)(v0 + 80);
    v31 = v29;
    v32 = v28;
    v33 = v17;
    sub_10001F2A0(v30, v30, v31, v32, v33);

  }
  else
  {
LABEL_5:
    v34 = sub_100026E80();
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (sub_1000273C4(v36))
    {
      v37 = (uint8_t *)sub_100026B24(2);
      *(_WORD *)v37 = 0;
      sub_100026FBC((void *)&_mh_execute_header, v35, (os_log_type_t)v17, "Unable to run App Shortcut: no LNAction returned", v37);
      sub_100026ACC((uint64_t)v37);
    }
    v38 = *(_QWORD *)(v0 + 128);
    v39 = *(uint64_t (***)(uint64_t, uint64_t))(v0 + 104);

    sub_1000272BC(v38, v39[1]);
    v40 = objc_msgSend(objc_allocWithZone((Class)WFAlert), "init");
    sub_100026F00();
    sub_100026E3C();
    sub_100026A98();
    v41 = sub_100026BB4();
    sub_1000274F0();

    v42 = sub_100026EB0();
    v44 = v43;

    sub_100025F74(v42, v44, v40, (SEL *)&selRef_setTitle_);
    v45 = (void *)sub_100027120();
    v46 = sub_100027128(v45, "okButtonWithHandler:");
    v47 = sub_100026DBC((uint64_t)v46, "buttons");
    sub_100026D7C((uint64_t)v47, &qword_1000D11C0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

    sub_100027114(v49, v50, v51, v52, v53, v54, v55, v56);
    v58 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v57 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v58 >= v57 >> 1)
      sub_100026B00(v57 > 1, v58 + 1);
    v59 = *(void **)(v0 + 168);
    v60 = *(_QWORD *)(v0 + 80);
    sub_100026D38(v58);
    sub_1000271A8();
    v61 = Array._bridgeToObjectiveC()().super.isa;
    sub_100018420();
    sub_1000270BC(v40, "setButtons:");

    v30 = (id)WFUserInterfaceFromViewController(v60);
    sub_10002704C(v30, "presentAlert:");

    sub_100027130();
  }
LABEL_31:
  sub_1000275A0();
  swift_task_dealloc(v30);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001CEAC()
{
  uint64_t v0;
  os_log_type_t v1;
  void *v2;
  uint64_t v3;
  uint8_t *v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  Class isa;
  id v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  NSString v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  Class v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  swift_release(*(_QWORD *)(v0 + 136));
  v3 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 40) = v3;
  v4 = (uint8_t *)(v0 + 40);
  v5 = (id *)(v0 + 48);
  sub_100027360();
  v6 = sub_100012E2C(&qword_1000D1050);
  sub_100026AF8(v6, &qword_1000D1058, NSError_ptr);
  v9 = sub_100026DCC(v0 + 48, v0 + 40, v8, v7);
  if ((v9 & 1) == 0)
  {
LABEL_15:
    sub_100027614();
    sub_100026E80();
    sub_100027360();
    v32 = sub_100027360();
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    v35 = sub_100026E44(v34);
    v37 = *(_QWORD *)(v0 + 104);
    v36 = *(_QWORD *)(v0 + 112);
    v38 = *(_QWORD *)(v0 + 96);
    if (v35)
    {
      v100 = *(_QWORD *)(v0 + 96);
      v99 = *(_QWORD *)(v0 + 104);
      v39 = (uint8_t *)sub_100026B24(12);
      v40 = sub_100026B24(32);
      v102 = v40;
      *(_DWORD *)v39 = 136446210;
      v4 = v39 + 12;
      swift_getErrorValue(v3, v0 + 56, v0 + 16);
      v41 = sub_1000275D0();
      *(_QWORD *)(v0 + 64) = sub_100015868(v41, v42, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v39 + 4, v39 + 12);
      sub_100018420();
      sub_100026F8C();
      sub_100026F8C();
      sub_10002729C((void *)&_mh_execute_header, v33, v1, "Unable to run App Shortcut: %{public}s", v39);
      sub_100026F14(v40, v43, (uint64_t)&type metadata for Any + 8);
      sub_100026ACC(v40);
      sub_100026ACC((uint64_t)v39);

      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v36, v100);
    }
    else
    {
      sub_100026F8C();
      sub_100026F8C();

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    }
    v10 = objc_msgSend(objc_allocWithZone((Class)WFAlert), "init");
    v44 = sub_100026A98();
    sub_100026A98();
    v45 = sub_100026BB4();
    sub_100027568();

    sub_100027334();
    sub_100027634();
    sub_100025F74((uint64_t)v44, (uint64_t)v4, v10, (SEL *)&selRef_setTitle_);
    v46 = (void *)sub_100027120();
    v47 = sub_100027128(v46, "okButtonWithHandler:");
    v48 = sub_100019EAC((uint64_t)v47, "buttons");
    sub_100026D7C((uint64_t)v48, &qword_1000D11C0);
    sub_100026D08(v49);
    sub_100026F70();
    sub_1000274D0(v50, v51, v52, v53, v54, v55, v56, v57);
    sub_100026EC4();
    if (v59)
      sub_100026B00(v58 > 1, (uint64_t)v48 + 1);
    v60 = sub_100026D38((uint64_t)v48);
    specialized Array._endMutation()(v60, v61);
    isa = sub_100026E74().super.isa;
    sub_100018420();
    sub_1000270BC(v10, "setButtons:");

    v63 = (id)sub_1000273FC();
    sub_100026D9C(v63, "presentAlert:");
    sub_100027130();

    v64 = v3;
    goto LABEL_21;
  }
  v10 = *v5;
  v11 = (uint64_t (**)(uint64_t, uint64_t))sub_100019EAC(v9, "domain");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  sub_100027510();
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(LNMetadataProviderErrorDomain);
  if (v12 == v13 && v5 == (id *)v14)
  {
    v16 = sub_100026FC4(v0 + 48);
  }
  else
  {
    v11 = v14;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v0 + 48, v13, v14, 0);
    sub_100026B90();
    v16 = sub_100018420();
    if ((v12 & 1) == 0)
      goto LABEL_14;
  }
  if (sub_100019EAC(v16, "code") != (id)9007)
  {
LABEL_14:

    goto LABEL_15;
  }
  v17 = *(_QWORD *)(v0 + 120);
  sub_100026F8C();
  v18 = sub_100026E80();
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (sub_10002730C(v20))
  {
    v4 = (uint8_t *)sub_100026B24(2);
    *(_WORD *)v4 = 0;
    sub_100026FBC((void *)&_mh_execute_header, v19, (os_log_type_t)v17, "Unable to run Auto Shortcut due to user has not approved the application Privacy Disclosure)", v4);
    sub_100026ACC((uint64_t)v4);
  }
  sub_1000272F4();
  sub_100026D60((uint64_t)v4, v11[1]);
  v21 = objc_msgSend(objc_allocWithZone((Class)WFAlert), "init");
  sub_100026F00();
  v22 = sub_100026E3C();
  sub_100026A98();
  v23 = sub_10002726C();

  sub_100026EB0();
  sub_10002757C();
  sub_100026C6C(v24, v25, v26, (SEL *)&selRef_setTitle_);
  v28 = sub_100019D50(v27, "underlyingAutoShortcut");
  v29 = sub_100025EA8(v28);
  if (v30)
  {
    v31 = v30;
    v101 = v29;
  }
  else
  {
    v101 = WFExecutableAppShortcut.name.getter(v29);
    v31 = v66;
  }
  sub_10002701C();
  v67 = static AppNameCache.shared.getter();
  v68 = objc_msgSend(sub_100026B98(v67, "underlyingAutoShortcut"), "bundleIdentifier");
  sub_100026E88();
  static String._unconditionallyBridgeFromObjectiveC(_:)(&selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_);
  sub_1000274F8();
  sub_100027498();
  v70 = v69;
  sub_1000273A0();
  sub_100019D9C();
  if (v70)
  {
    v71 = sub_100026FF4();
    sub_100026A98();
    v72 = sub_100027180();

    static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
    sub_100027588();
    v73 = sub_100012E2C(&qword_1000D11C8);
    v74 = sub_100026B2C(v73, 112);
    *(_OWORD *)(v74 + 16) = xmmword_100096F60;
    *(_QWORD *)(v74 + 56) = &type metadata for String;
    v75 = sub_10002676C();
    sub_10002752C(v75, v101);
  }
  else
  {
    v76 = sub_100026A98();
    sub_100026A98();
    v77 = sub_100026BB4();

    sub_100026EB0();
    sub_100027510();
    v78 = sub_100012E2C(&qword_1000D11C8);
    v79 = sub_100026B2C(v78, 72);
    *(_OWORD *)(v79 + 16) = xmmword_100096E80;
    *(_QWORD *)(v79 + 56) = &type metadata for String;
    *(_QWORD *)(v79 + 64) = sub_10002676C();
    *(_QWORD *)(v79 + 32) = v101;
    *(_QWORD *)(v79 + 40) = v31;
  }
  sub_1000271B0();
  sub_1000273A0();
  v80 = sub_100018420();
  sub_100026C6C(v80, v81, v82, (SEL *)&selRef_setMessage_);
  v83 = (void *)sub_100027120();
  v84 = sub_100027128(v83, "okButtonWithHandler:");
  v85 = sub_100026DBC((uint64_t)v84, "buttons");
  sub_100026D7C((uint64_t)v85, &qword_1000D11C0);
  sub_100026D08(v86);
  sub_100026F70();
  sub_1000274D0(v87, v88, v89, v90, v91, v92, v93, v94);
  sub_100026EC4();
  if (v59)
    sub_100026B00(v95 > 1, (uint64_t)v85 + 1);
  v96 = sub_100026D38((uint64_t)v85);
  specialized Array._endMutation()(v96, v97);
  v98 = sub_100026E74().super.isa;
  sub_100018420();
  sub_1000270BC(v21, "setButtons:");

  v63 = (id)sub_1000273FC();
  sub_10002704C(v63, "presentAlert:");

  sub_100027130();
  v64 = *(_QWORD *)(v0 + 40);
LABEL_21:
  swift_errorRelease(v64);
  sub_1000275A0();
  swift_task_dealloc(v63);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10001D64C(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___WFMainViewController_runCoordinator), "runContextualAction:", a1);
}

void sub_10001D668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  NSString v25;
  id v26;
  void *v27;
  void (*v28)(_QWORD);
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  sub_100018190();
  type metadata accessor for LibraryConfiguration(0);
  sub_100018034();
  __chkstk_darwin(v2);
  sub_100018458();
  v3 = sub_100026B08();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100026F1C();
  v7 = v5 - v6;
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v36 - v9);
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_100026F1C();
  v14 = v12 - v13;
  __chkstk_darwin(v15);
  v17 = (void **)((char *)&v36 - v16);
  v18 = v0 + OBJC_IVAR___WFMainViewController_currentDestination;
  sub_100026D70(v0 + OBJC_IVAR___WFMainViewController_currentDestination, (uint64_t)&v39);
  sub_1000274B8(v18);
  sub_100026D88((uint64_t)v17, 1, v3);
  if (v19)
  {
    sub_10001222C((uint64_t)v17, &qword_1000D1100);
  }
  else
  {
    v20 = (*(uint64_t (**)(void **, uint64_t))(v4 + 88))(v17, v3);
    if ((_DWORD)v20 == enum case for RootNavigationDestination.folder(_:))
    {
      v21 = v20;
      v38 = v1;
      v22 = sub_100026D68((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
      v23 = *v17;
      v24 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_database);
      v25 = sub_100026B98(v22, "identifier");
      if (!v25)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v37 = v23;
        v25 = String._bridgeToObjectiveC()();
        v23 = v37;
        swift_bridgeObjectRelease();
      }
      v26 = objc_msgSend(v24, "collectionWithIdentifier:", v25);

      if (!v26)
      {

        goto LABEL_14;
      }
      v27 = v23;
      *v10 = v26;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104))(v10, v21, v3);
      v28 = *(void (**)(_QWORD))(v4 + 16);
      ((void (*)(uint64_t, _QWORD *, uint64_t))v28)(v14, v10, v3);
      sub_1000270D8();
      v29 = v26;
      sub_100019FC8();
      v30 = sub_10001AD7C();
      if (!v30)
      {
        sub_100026D68((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));

        goto LABEL_14;
      }
      v31 = (void *)v30;
      v32 = sub_1000271C0();
      v28(v32);
      v33 = v38;
      LibraryConfiguration.init(destination:)(v7);
      sub_100072FF0(v33);

      v34 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      v35 = (uint64_t)v10;
    }
    else
    {
      v34 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      v35 = (uint64_t)v17;
    }
    sub_100026D68(v35, v34);
  }
LABEL_14:
  sub_100018094();
}

void sub_10001D8E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void **v99;
  uint64_t v100;
  id (*v101)(void *);
  uint64_t v102;

  sub_100018190();
  v3 = v1;
  v94 = v4;
  v6 = v5;
  v98 = v7;
  v8 = sub_1000273DC();
  v93 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v91 = v9;
  v92 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShortcutsFeatureFlags(0);
  v89 = *(_QWORD *)(v10 - 8);
  v90 = v10;
  sub_100018044();
  __chkstk_darwin(v11);
  sub_100018548();
  v88 = v12;
  v13 = type metadata accessor for QuarantinedShortcutView(0);
  v96 = *(_QWORD *)(v13 - 8);
  v97 = v13;
  sub_100018044();
  __chkstk_darwin(v14);
  sub_100026F1C();
  v17 = v15 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v87 - v19;
  sub_10002714C();
  sub_100027370();
  __chkstk_darwin(v21);
  sub_100026BF0();
  v22 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_runCoordinator);
  v24 = sub_100026B98(v23, "runningWorkflow");
  sub_100027660(v24);
  if (v0)
  {
    v95 = v6;
    v26 = sub_100026E80();
    v0 = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.default.getter();
    if (sub_100026E44(v27))
    {
      v28 = (uint8_t *)sub_100026B24(2);
      v87 = v8;
      v29 = v28;
      *(_WORD *)v28 = 0;
      sub_100026FBC((void *)&_mh_execute_header, v0, (os_log_type_t)v6, "A new workflow cannot be presented while a workflow is still running. Terminating this current Workflow.", v28);
      v30 = (uint64_t)v29;
      v3 = v1;
      v8 = v87;
      sub_100026ACC(v30);
    }

    sub_1000272BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v25 = objc_msgSend(v22, "stop");
    v6 = v95;
  }
  v31 = v98;
  if (sub_100026DC4((uint64_t)v25, "remoteQuarantineStatus") == (id)1)
  {
    QuarantinedShortcutView.init(workflow:)(v31);
    v32 = v96;
    v33 = sub_100027354();
    sub_1000275F8(v33, v34, v35);
    objc_allocWithZone((Class)sub_100012E2C((uint64_t *)&unk_1000D11A0));
    v36 = (void *)UIHostingController.init(rootView:)(v17);
    sub_100026E98(v36);

    sub_1000272BC((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
LABEL_12:
    sub_100018094();
    return;
  }
  v37 = *(void **)(v3 + OBJC_IVAR___WFMainViewController_database);
  if (objc_msgSend(v37, "conflictForWorkflowReference:", v6))
  {
    v38 = objc_allocWithZone((Class)type metadata accessor for WorkflowConflictViewController(0));
    v39 = sub_100027640();
    v40 = (void *)WorkflowConflictViewController.init(conflict:)();
    objc_msgSend(v40, "setModalPresentationStyle:", 2);
    sub_10000A060(&qword_1000D1198, (void (*)(uint64_t))type metadata accessor for MainViewController);
    v42 = v41;
    v43 = swift_unknownObjectRetain(v3);
    dispatch thunk of WorkflowConflictViewController.delegate.setter(v43, v42);
    sub_100026E98(v40);

    goto LABEL_12;
  }
  v44 = (void *)objc_opt_self(WFWindowSceneManager);
  sub_100027660(objc_msgSend(v44, "existingSceneSessionForEditingWorkflowReference:", v6));
  if (!v0)
  {
    v87 = v8;
    sub_100026AF8(v45, &qword_1000D1188, WFComposeViewController_ptr);
    v50 = v31;
    v51 = v37;
    v98 = v50;
    v52 = (void *)sub_10002768C();
    v54 = sub_10001DFB4(v52, v53, 0, 1);
    objc_msgSend(v54, "setDelegate:", v3);
    v55 = objc_msgSend(v54, "setEditorDocumentMenuDelegate:", v3);
    v56 = v94;
    objc_msgSend(v54, "setIsEditingNewWorkflow:", OpenWorkflowOptions.isNewWorkflow.getter(v55) & 1);
    v57 = objc_msgSend(objc_allocWithZone((Class)WFComposePresentingViewController), "initWithComposeViewController:", v54);
    sub_100027100(v54, "setEditingState:animated:completionHandler:", 1);
    v58 = v88;
    v59 = v89;
    v60 = v90;
    v61 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 104))(v88, enum case for ShortcutsFeatureFlags.zoomTransition(_:), v90);
    LOBYTE(v50) = ShortcutsFeatureFlags.isFeatureEnabled.getter(v61);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
    if ((v50 & 1) != 0)
    {
      v62 = objc_msgSend(objc_allocWithZone((Class)UIZoomTransitionOptions), "init");
      v63 = sub_100026B2C((uint64_t)&unk_1000C08B0, 32);
      *(_QWORD *)(v63 + 16) = v57;
      *(_QWORD *)(v63 + 24) = v54;
      v101 = sub_10002668C;
      v102 = v63;
      v99 = _NSConcreteStackBlock;
      v100 = 1107296256;
      v64 = sub_100027698((uint64_t)sub_10001E300);
      v65 = v57;
      v66 = v54;
      sub_100027204();
      sub_100026D9C(v62, "setInteractiveDismissShouldBegin:");
      _Block_release(v64);
      v67 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 7.0);
      sub_100026D9C(v62, "setDimmingVisualEffect:");

      v69 = sub_100027670(v68, "view");
      if (!v69)
        goto LABEL_18;
      v70 = v69;
      v71 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
      sub_1000271CC(v70, "setBackgroundColor:");

      sub_100026AF8(v72, &qword_1000D1190, UIViewControllerTransition_ptr);
      v73 = sub_100026B2C((uint64_t)&unk_1000C0900, 24);
      *(_QWORD *)(v73 + 16) = v6;
      v74 = v65;
      v75 = v62;
      v76 = v6;
      v77 = (void *)static UIViewControllerTransition.zoom(options:sourceViewProvider:)(v62, sub_1000266B4, v73);
      sub_100027204();

      sub_100026D9C(v74, "setPreferredTransition:");
      v56 = v94;
    }
    v79 = v92;
    v78 = v93;
    sub_1000275F8(v92, v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 16));
    v80 = *(unsigned __int8 *)(v78 + 80);
    v81 = (v80 + 16) & ~v80;
    v82 = (v91 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
    v83 = (v82 + 15) & 0xFFFFFFFFFFFFFFF8;
    v84 = swift_allocObject(&unk_1000C0888, v83 + 8, v80 | 7);
    sub_1000275F8(v84 + v81, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 32));
    *(_QWORD *)(v84 + v82) = v54;
    v85 = v98;
    *(_QWORD *)(v84 + v83) = v98;
    v86 = v85;
    v54;
    sub_10001E994(v57, 0, 1, sub_100026644, v84);

    swift_release(v84);
    goto LABEL_12;
  }
  v46 = sub_100027670(v45, "view");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, "window");

    v49 = sub_100026DBC(v48, "windowScene");
    sub_100027368();
    objc_msgSend(v44, "activateSceneForWorkflowReference:sender:", v6, v47);

    goto LABEL_12;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

id sub_10001DFB4(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v4;
  id v8;

  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "initWithWorkflow:database:home:shouldShowShareButton:", a1, a2, a3, a4 & 1);

  return v8;
}

id sub_10001E028(void *a1, id a2, void *a3)
{
  id result;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;

  result = objc_msgSend(a2, "view");
  if (result)
  {
    v6 = result;
    objc_msgSend(a1, "location");
    v7 = objc_msgSend(v6, "hitTest:withEvent:", 0);

    if (!v7)
      return 0;
    v8 = sub_10001E274();
    if (v8)
    {
      v9 = v8;

      v10 = 0;
      v7 = v9;
LABEL_13:

      return (id)v10;
    }
    v11 = sub_10001E1C8();
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "contentOffset");
      v14 = v13;
      objc_msgSend(v12, "adjustedContentInset");
      v16 = v14 + v15;
      v17 = objc_msgSend(v12, "traitCollection");
      objc_msgSend(v17, "displayScale");
      v19 = v18;

      if (BSFloatRoundForScale(v16, v19) > 0.0)
      {

LABEL_10:
        v10 = 0;
        goto LABEL_13;
      }
      objc_msgSend(a1, "velocity");
      v21 = v20;

      if (v21 < 0.0)
        goto LABEL_10;
    }
    result = objc_msgSend(a3, "view");
    if (result)
    {
      v22 = result;
      v10 = 1;
      objc_msgSend(result, "endEditing:", 1);

      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10001E1C8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  v2 = objc_opt_self(UIScrollView);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (v3)
  {
LABEL_4:
    v4 = (id)v3;

  }
  else
  {
    while (1)
    {
      v4 = objc_msgSend(v1, "superview");

      if (!v4)
        break;
      v1 = v4;
      v5 = objc_opt_self(UIScrollView);
      v3 = swift_dynamicCastObjCClass(v1, v5);
      if (v3)
        goto LABEL_4;
    }
  }
  return v4;
}

id sub_10001E274()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  type metadata accessor for WFSheetView(0);
  v1 = v0;
  v2 = swift_dynamicCastClass();
  if (v2)
  {
LABEL_4:
    v3 = (id)v2;

  }
  else
  {
    while (1)
    {
      v3 = objc_msgSend(v1, "superview");

      if (!v3)
        break;
      v1 = v3;
      v2 = swift_dynamicCastClass();
      if (v2)
        goto LABEL_4;
    }
  }
  return v3;
}

uint64_t sub_10001E300(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

id sub_10001E350(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  unsigned int v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v26;
  void *v27;
  void *v28;
  Class isa;
  uint64_t v30;
  id v31;

  v4 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "zoomedViewController");
  v12 = objc_opt_self(WFComposePresentingViewController);
  v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (!v13)
    goto LABEL_8;
  v14 = objc_msgSend(v13, "composeViewController");
  v15 = objc_msgSend(v14, "willDeleteWhenClosed");

  if (v15)
    goto LABEL_8;
  v16 = objc_msgSend(a1, "sourceViewController");
  v17 = type metadata accessor for MainViewController(0);
  if (!swift_dynamicCastClass(v16, v17))
  {

LABEL_8:
    return 0;
  }
  v18 = (void *)sub_10001AD7C();
  if (v18)
  {
    v31 = v18;
    sub_100012A90();
    v20 = v19;
    v21 = objc_msgSend(a2, "identifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

    sub_1000871D4();
    swift_bridgeObjectRelease(v23);
    swift_release(v20);
    if (sub_100019D44((uint64_t)v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v26 = v31;
      sub_10000C98C();
      v28 = v27;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v24 = objc_msgSend(v28, "cellForItemAtIndexPath:", isa);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return v24;
    }

    sub_10001222C((uint64_t)v6, &qword_1000D10F0);
  }
  else
  {

  }
  return 0;
}

void (*sub_10001E5DC(uint64_t a1, void *a2, void *a3))(void)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  void (*result)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = sub_100012E2C(&qword_1000D10E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OpenWorkflowOptions.ActionError(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OpenWorkflowOptions.scrolledToActionIndex.getter(v10);
  if ((v14 & 1) == 0)
  {
    v15 = v13;
    v49 = v9;
    v16 = a2;
    v17 = objc_msgSend(a2, "editorViewController");
    v18 = a3;
    v19 = objc_msgSend(a3, "actions");
    sub_10000EAA8(0, &qword_1000D3180, WFAction_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    sub_1000660CC(v15, (v21 & 0xC000000000000001) == 0, v21);
    if ((v21 & 0xC000000000000001) != 0)
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v21);
    else
      v22 = *(id *)(v21 + 8 * v15 + 32);
    v23 = v22;
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v17, "scrollToAction:", v23);

    a2 = v16;
    a3 = v18;
    v9 = v49;
  }
  OpenWorkflowOptions.actionError.getter(v13);
  if (sub_100019D44((uint64_t)v7, 1, v8) == 1)
  {
    sub_10001222C((uint64_t)v7, &qword_1000D10E8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    v25 = objc_msgSend(a3, "actions");
    sub_10000EAA8(0, &qword_1000D3180, WFAction_ptr);
    v27 = v26;
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    if ((unint64_t)v28 >> 62)
    {
      if (v28 < 0)
        v47 = v28;
      else
        v47 = v28 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v28);
      v29 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v28);
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v30 = swift_bridgeObjectRelease(v28);
    if (OpenWorkflowOptions.ActionError.actionIndex.getter(v30) < v29)
    {
      v31 = objc_msgSend(a2, "editorViewController");
      OpenWorkflowOptions.ActionError.message.getter();
      v33 = v32;
      v34 = a3;
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      v36 = objc_msgSend(v34, "actions");
      v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v27);

      v39 = OpenWorkflowOptions.ActionError.actionIndex.getter(v38);
      sub_1000660CC(v39, (v37 & 0xC000000000000001) == 0, v37);
      if ((v37 & 0xC000000000000001) != 0)
        v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v37);
      else
        v40 = *(id *)(v37 + 8 * v39 + 32);
      v41 = v40;
      swift_bridgeObjectRelease(v37);
      objc_msgSend(v31, "showActionError:for:", v35, v41);

    }
    v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v42 = OpenWorkflowOptions.showIconPicker.getter(v24);
  if ((v42 & 1) != 0)
    v42 = (uint64_t)objc_msgSend(a2, "presentIconPickerWithSourceItem:", 0);
  result = (void (*)(void))OpenWorkflowOptions.onOpen.getter(v42);
  if (result)
  {
    v45 = (uint64_t)result;
    v46 = v44;
    result();
    return (void (*)(void))sub_10000A798(v45, v46);
  }
  return result;
}

void sub_10001E994(void *a1, uint64_t a2, char a3, const void *a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  double v20;
  double v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  sub_100026AF8((uint64_t)a1, &qword_1000D1180, WFComposePresentingViewController_ptr);
  v12 = objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v11));
  v13 = (void *)sub_10001A1A0();
  v14 = sub_1000275DC(v13);

  if (!(_DWORD)v12)
  {
    v22 = a3;
    if (v14)
    {
      v29 = sub_100026B98(v15, "view");
      sub_100026E88();
      if (!v12)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v31 = sub_10002715C(v30, "layer");
      sub_100026DD8();
      objc_msgSend(v14, "setCornerRadius:", 0.0);

    }
    v32 = (void *)sub_10001A1A0();
    v33 = sub_1000275DC(v32);
    sub_100026DD8();
    if (!v14)
      goto LABEL_15;
    v34 = sub_100026B98(v25, "view");
    sub_100026E88();
    if (v32)
    {
      v36 = sub_10002715C(v35, "layer");
      sub_100026DD8();
      objc_msgSend(v14, "setMasksToBounds:", 0);
      goto LABEL_14;
    }
LABEL_31:
    __break(1u);
    return;
  }
  if (v14)
  {
    v16 = sub_100026B98(v15, "view");
    sub_100026E88();
    if (!v12)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v18 = sub_10002715C(v17, "layer");
    sub_100026DD8();
    v19 = objc_msgSend((id)objc_opt_self(WFDevice), "currentDevice");
    objc_msgSend(v19, "screenCornerRadius");
    v21 = v20;

    objc_msgSend(v14, "setCornerRadius:", v21 + -1.0);
  }
  v22 = a3;
  v23 = (void *)sub_10001A1A0();
  v24 = sub_1000275DC(v23);
  sub_100026DD8();
  if (!v14)
    goto LABEL_15;
  v26 = sub_100026B98(v25, "view");
  sub_100026E88();
  if (!v23)
    goto LABEL_29;
  v28 = sub_10002715C(v27, "layer");
  sub_100026DD8();
  objc_msgSend(v14, "setMasksToBounds:", 1);
LABEL_14:

LABEL_15:
  v37 = sub_100019D50(v25, "presentedViewController");
  if (v37)
  {
    v38 = v37;
    if ((a2 & 1) != 0)
    {
      v39 = sub_100026B98((uint64_t)v37, "presentedViewController");
      if (v39)
      {
        do
        {
          sub_100026F70();
          v39 = sub_100019D50(v40, "presentedViewController");
        }
        while (v39);
        if (!a4)
          goto LABEL_21;
      }
      else
      {
        v5 = v38;
        if (!a4)
          goto LABEL_21;
      }
      sub_100026E04((uint64_t)sub_100007DA8, (uint64_t)_NSConcreteStackBlock, 1107296256, v44, v45);
      sub_10002727C();
      swift_release(a2);
LABEL_21:
      sub_100027054((uint64_t)v39, "presentViewController:animated:completion:");
      _Block_release(a4);

      return;
    }
    sub_1000123BC((uint64_t)a4, a5);
    v41 = v5;
    sub_100027304();
    sub_1000123BC((uint64_t)a4, a5);
    v42 = v5;
    v43 = sub_100027304();
    sub_10001EE50(v5, v5, v43, v22 & 1, (uint64_t)a4, a5);

    sub_10000A798((uint64_t)a4, a5);
  }
  else
  {
    if (a4)
    {
      sub_100026E04((uint64_t)sub_100007DA8, (uint64_t)_NSConcreteStackBlock, 1107296256, v44, v45);
      sub_10002727C();
      swift_release(a2);
    }
    sub_100027054((uint64_t)v37, "presentViewController:animated:completion:");
    _Block_release(a4);
  }
}

void sub_10001ED90(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, double a6)
{
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  if (a4)
  {
    v12[4] = a4;
    v13 = a5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100007DA8;
    v12[3] = &unk_1000C0850;
    v10 = _Block_copy(v12);
    v11 = v13;
    swift_retain(a5);
    *(_QWORD *)&a6 = swift_release(v11).n128_u64[0];
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(a1, "presentViewController:animated:completion:", a2, a3 & 1, v10, a6);
  _Block_release(v10);
}

uint64_t sub_10001EE50(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  _QWORD v27[5];
  uint64_t v28;

  v12 = swift_allocObject(&unk_1000C0810, 56, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  *(_BYTE *)(v12 + 32) = a4;
  *(_QWORD *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = a6;
  v13 = a2;
  v14 = a3;
  sub_1000123BC(a5, a6);
  v15 = objc_msgSend(a1, "presentedViewController");
  if (v15)
  {
    v17 = v15;
    v18 = objc_opt_self(WFComposeViewController);
    v19 = swift_dynamicCastObjCClass(v17, v18);
    if (v19)
    {
      v20 = (void *)v19;
      v21 = v17;
      v22 = objc_msgSend(v20, "editorViewController");
      objc_msgSend(v22, "stop");

      v23 = objc_msgSend(v20, "workflow");
      objc_msgSend(v23, "save");

    }
    v27[4] = sub_1000265C0;
    v28 = v12;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    v27[2] = sub_100007DA8;
    v27[3] = &unk_1000C0828;
    v24 = _Block_copy(v27);
    v25 = v28;
    swift_retain(v12);
    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v24, swift_release(v25).n128_f64[0]);
    _Block_release(v24);

  }
  else
  {
    sub_10001ED90(v13, (uint64_t)v14, a4 & 1, a5, a6, v16);
  }
  swift_release(v12);

  return sub_10000A798(a5, a6);
}

uint64_t sub_10001F040(void *a1, void *a2, void *a3, void *a4, void *a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  char v33;
  id v34;
  id v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v17 = a9;
  v18 = swift_allocObject(&unk_1000C09F0, 80, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  v33 = a6;
  *(_BYTE *)(v18 + 48) = a6;
  *(_QWORD *)(v18 + 56) = a7;
  *(_QWORD *)(v18 + 64) = a8;
  *(_QWORD *)(v18 + 72) = a9;
  v36 = a7;
  v19 = a2;
  v20 = a3;
  v35 = a4;
  v34 = a5;
  sub_1000123BC(a8, a9);
  v21 = objc_msgSend(a1, "presentedViewController");
  if (v21)
  {
    v23 = v21;
    v24 = objc_opt_self(WFComposeViewController);
    v25 = swift_dynamicCastObjCClass(v23, v24);
    if (v25)
    {
      v26 = (void *)v25;
      v27 = v23;
      v28 = objc_msgSend(v26, "editorViewController");
      objc_msgSend(v28, "stop");

      v29 = objc_msgSend(v26, "workflow");
      objc_msgSend(v29, "save");

    }
    aBlock[4] = sub_10002683C;
    v38 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007DA8;
    aBlock[3] = &unk_1000C0A08;
    v30 = _Block_copy(aBlock);
    v31 = v38;
    swift_retain(v18);
    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v30, swift_release(v31).n128_f64[0]);
    _Block_release(v30);

    swift_release(v18);
    v17 = a9;
  }
  else
  {
    sub_10001BEA4((uint64_t)v19, (uint64_t)v20, (uint64_t)a4, (uint64_t)a5, v33 & 1, (uint64_t)a7, a8, a9, v22);
    swift_release(v18);

  }
  return sub_10000A798(a8, v17);
}

void sub_10001F2A0(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  _QWORD *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  _QWORD *v24;
  _QWORD v25[5];
  _QWORD *v26;

  v10 = (_QWORD *)swift_allocObject(&unk_1000C09A0, 48, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = objc_msgSend(a1, "presentedViewController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_opt_self(WFComposeViewController);
    v18 = swift_dynamicCastObjCClass(v16, v17);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = v16;
      v21 = objc_msgSend(v19, "editorViewController");
      objc_msgSend(v21, "stop");

      v22 = objc_msgSend(v19, "workflow");
      objc_msgSend(v22, "save");

    }
    v25[4] = sub_1000267D8;
    v26 = v10;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_100007DA8;
    v25[3] = &unk_1000C09B8;
    v23 = _Block_copy(v25);
    v24 = v26;
    swift_retain(v10);
    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);

  }
  else
  {
    objc_msgSend(*(id *)&v11[OBJC_IVAR___WFMainViewController_runCoordinator], "runAppShortcut:withLNAction:andMetadata:", v12, v13, v14);
  }
  swift_release(v10);

}

void sub_10001F494(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  _QWORD *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD *v28;

  v10 = (_QWORD *)swift_allocObject(&unk_1000C06F8, 48, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v11 = a4;
  v12 = a2;
  v13 = a3;
  v14 = a5;
  v15 = objc_msgSend(a1, "presentedViewController");
  if (v15)
  {
    v16 = v15;
    v17 = objc_opt_self(WFComposeViewController);
    v18 = swift_dynamicCastObjCClass(v16, v17);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = v16;
      v21 = objc_msgSend(v19, "editorViewController");
      objc_msgSend(v21, "stop");

      v22 = objc_msgSend(v19, "workflow");
      objc_msgSend(v22, "save");

    }
    v27[4] = sub_10002648C;
    v28 = v10;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    v27[2] = sub_100007DA8;
    v27[3] = &unk_1000C0710;
    v23 = _Block_copy(v27);
    v24 = v28;
    swift_retain(v10);
    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);

    swift_release(v10);
  }
  else
  {
    v25 = type metadata accessor for MainViewController(0);
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.scroll(toWorkflow:animated:)(v13, 0, v25, v26);
    objc_msgSend(*(id *)&v12[OBJC_IVAR___WFMainViewController_runCoordinator], "resumeWorkflowReference:fromSource:withState:", v13, v11, v14);

    swift_release(v10);
  }

}

void sub_10001F6D0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v2 = v1;
  type metadata accessor for NameIconComposeViewController.Mode(0);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_100026BF0();
  if (a1)
  {
    v6 = sub_100026DBC(v5, "glyphCharacter");
    v7 = a1;
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(WFWorkflowCollection), "defaultGlyphCharacter");
    v7 = 0;
  }
  v8 = v7;
  NameIconComposeViewController.Mode.init(_:)(a1);
  v9 = objc_allocWithZone((Class)type metadata accessor for NameIconComposeViewController(0));
  v10 = (void *)NameIconComposeViewController.init(_:glyphCharacter:)(v1, v6);
  sub_10000A060(&qword_1000D1178, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v12 = v11;
  v13 = swift_unknownObjectRetain(v2);
  dispatch thunk of NameIconComposeViewController.delegate.setter(v13, v12);
  if (a1)
  {
    v14 = v10;
    v15 = objc_msgSend(v8, "name");
  }
  else
  {
    v16 = (void *)objc_opt_self(WFWorkflowCollection);
    v17 = v10;
    v15 = objc_msgSend(v16, "defaultName");
  }
  v18 = v15;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  sub_10007CF8C(v19, v21, v10);
  v22 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v10);
  objc_msgSend(v22, "setModalPresentationStyle:", 2);
  sub_100027100(v2, "presentViewController:animated:completion:", (uint64_t)v22);

  sub_100026B34();
}

void sub_10001F86C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v3 = v1;
  type metadata accessor for AggregatedEntry(0);
  sub_1000276A4();
  __chkstk_darwin(v5);
  sub_1000184A0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v2, a1);
  v7 = objc_allocWithZone((Class)type metadata accessor for AddToHomeScreenViewController(0));
  v8 = (void *)AddToHomeScreenViewController.init(aggregatedEntry:)(v2);
  v9 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v8);
  sub_100027100(v3, "presentViewController:animated:completion:", (uint64_t)v9);

}

_QWORD *sub_10001F988()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  NSString v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  id v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v72;
  void *v73;
  objc_super v74;
  _QWORD *v75;

  v74.receiver = v1;
  v74.super_class = (Class)sub_100015138();
  v3 = objc_msgSendSuper2(&v74, "keyCommands");
  if (v3)
  {
    sub_100026AF8((uint64_t)v3, &qword_1000D1230, UIKeyCommand_ptr);
    v4 = sub_1000276C0();
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);
    sub_100027668();
  }
  else
  {
    v0 = _swiftEmptyArrayStorage;
  }
  v75 = v0;
  v6 = sub_100026C98((uint64_t)v3, "presentedViewController");

  if (!v6)
  {
    sub_100026AF8(v7, &qword_1000D1230, UIKeyCommand_ptr);
    v8 = sub_100026BA0();
    sub_100027234();
    v9 = sub_100026BB4();
    sub_100027568();

    sub_100027334();
    sub_100027634();
    v10 = (id)sub_100026C08();
    sub_100026BD0();
    sub_100026ED4();
    if (v12)
      sub_100026AD8(v2 + 1, v11);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v10);
    specialized Array._endMutation()(v13, v14);
    v15 = sub_100026A98();
    sub_100027234();
    v16 = sub_100026AE8();
    sub_100026D30();

    sub_100026C64();
    sub_100026BC4();
    sub_100026AA4();
    v17 = (id)sub_100026C08();
    sub_100026BD0();
    sub_100026B10();
    if (v12)
      sub_100026AD8(0xD000000000000022, v18);
    v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(0xD000000000000021, v17);
    specialized Array._endMutation()(v19, v20);
    sub_100026F00();
    v21 = String._bridgeToObjectiveC()();
    sub_100026A98();
    v22 = sub_100026AE8();
    sub_100026D30();

    sub_100026C64();
    sub_100026BC4();
    sub_100026AA4();
    v23 = (id)sub_100026C08();
    sub_100026BD0();
    sub_100026B10();
    if (v12)
      sub_100026AD8(0xD000000000000022, v24);
    v73 = v23;
    v25 = sub_100026D38(0xD000000000000021);
    specialized Array._endMutation()(v25, v26);
    v27 = String._bridgeToObjectiveC()();
    sub_100026A98();
    v28 = sub_100026AE8();
    sub_100026D30();

    sub_100026C64();
    sub_100026BC4();
    sub_100026AA4();
    v29 = (id)sub_100026C08();
    sub_100026BD0();
    sub_100026B10();
    if (v12)
      sub_100026AD8(0xD000000000000022, v30);
    v72 = v29;
    v31 = sub_100026D38(0xD000000000000021);
    specialized Array._endMutation()(v31, v32);
    v33 = String._bridgeToObjectiveC()();
    sub_100026A98();
    v34 = sub_100026AE8();
    sub_100026D30();

    sub_100026C64();
    sub_100026BC4();
    sub_100026CA0();
    v35 = (void *)sub_100026C08();
    sub_1000274C4(v35);
    v36 = v35;
    sub_100026BD0();
    sub_100026B10();
    if (v12)
      sub_100026AD8(0xD000000000000022, v37);
    v38 = sub_100026D38(0xD000000000000021);
    specialized Array._endMutation()(v38, v39);
    v40 = sub_100026BA0();
    sub_100026A98();
    v41 = sub_100026AE8();
    sub_100026D30();

    sub_100026C64();
    sub_100026BC4();
    sub_100026CA0();
    v42 = (void *)sub_100026C08();
    sub_1000274C4(v42);
    v43 = v42;
    sub_100026BD0();
    sub_100026B10();
    if (v12)
      sub_100026AD8(0xD000000000000022, v44);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(0xD000000000000021, v43);
    v47 = specialized Array._endMutation()(v45, v46);
    objc_msgSend(sub_100026C98(v47, "traitCollection"), "horizontalSizeClass", _swiftEmptyArrayStorage, 0, 0, 0, 0);
    sub_100026F4C();
    v48 = sub_10001A1A0();
    sub_1000274B0(v48, OBJC_IVAR___WFSidebarViewController_database);
    sub_100026F4C();
    v50 = sub_100026DBC(v49, "sortedVisibleFolders");
    sub_1000270D0();
    sub_100019D50(v51, "count");
    sub_100026F4C();
    v52 = (void *)sub_100027244();

    if (v52)
    {
      v53 = String._bridgeToObjectiveC()();
      sub_100026A98();
      v54 = sub_100026AE8();

      static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v56 = v55;

      sub_100026AA4();
      v57 = (id)sub_100026C08();
      sub_100026BD0();
      sub_100026B10();
      if (v12)
        sub_100026AD8(v56 + 1, v58);
      v59 = sub_100027354();
      v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v60);
      specialized Array._endMutation()(v61, v62);
      v63 = String._bridgeToObjectiveC()();
      sub_100026A98();
      v64 = sub_100026AE8();
      sub_100026D30();

      sub_100026C64();
      sub_100026BC4();
      sub_100026AA4();
      v65 = (id)sub_100026C08();
      sub_100026BD0();
      sub_100026B10();
      if (v12)
        sub_100026AD8(v56 + 1, v66);
      v67 = sub_1000184E0();
      v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v68);
      specialized Array._endMutation()(v69, v70);

    }
    return v75;
  }
  return v0;
}

void sub_10002028C()
{
  sub_10001F6D0(0);
}

void sub_1000202C8()
{
  sub_100020314((unsigned int *)&enum case for RootNavigationDestination.allShortcuts(_:));
}

void sub_100020308()
{
  sub_100020314((unsigned int *)&enum case for RootNavigationDestination.automations(_:));
}

void sub_100020314(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_100026B08();
  sub_1000275AC();
  __chkstk_darwin(v5);
  sub_10001827C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *a1, v1);
  sub_100015138();
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v6 = sub_100026FE0();
  RootView.navigate(to:)(v6, v7, v8);
  sub_100026C54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_100026B34();
}

void sub_1000203D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100026B08();
  sub_100027370();
  __chkstk_darwin(v2);
  sub_1000184A0();
  v3 = sub_100027144();
  sub_100026DE8(v3);
  sub_1000270EC();
  sub_100026D54(enum case for RootNavigationDestination.gallery(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  sub_100026C10();
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  sub_100026D18(v4);
  sub_100026D68(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_100026B34();
}

void sub_1000204A0()
{
  id v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unsigned __int8 v31;
  char v32;
  char v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  BOOL v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_100018190();
  v74 = v4;
  v75 = v5;
  v7 = v6;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100026B08();
  v70 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  sub_100018044();
  __chkstk_darwin(v12);
  v13 = sub_100026B44();
  type metadata accessor for RootNavigationContext.TransitionType(v13);
  sub_100018034();
  __chkstk_darwin(v14);
  sub_100026BD8();
  sub_100012E2C(&qword_1000D1088);
  sub_100018034();
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100026C5C();
  v69 = *(_QWORD *)(v18 - 8);
  sub_100018044();
  __chkstk_darwin(v19);
  sub_100018470();
  v20 = sub_100025F14((void *)v7);
  if (!v21)
    goto LABEL_44;
  v22 = v21;
  v23 = HIBYTE(v21) & 0xF;
  v24 = v20 & 0xFFFFFFFFFFFFLL;
  if ((v22 & 0x2000000000000000) != 0)
    v25 = v23;
  else
    v25 = v20 & 0xFFFFFFFFFFFFLL;
  if (v25)
  {
    if ((v22 & 0x1000000000000000) != 0)
    {
      v27 = (uint64_t)sub_100025538(v20, v22, 10);
      LOBYTE(v0) = v67;
      goto LABEL_36;
    }
    if ((v22 & 0x2000000000000000) == 0)
    {
      if ((v20 & 0x1000000000000000) != 0)
        v26 = (unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v26 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v20, v22);
      v27 = (uint64_t)sub_10002561C(v26, v24, 10);
      LOBYTE(v0) = v28 & 1;
LABEL_36:
      swift_bridgeObjectRelease(v22);
      if ((v0 & 1) != 0)
      {
LABEL_44:
        sub_100018094();
        return;
      }
      v40 = (void *)sub_10001A1A0();
      v41 = sub_1000274B0((uint64_t)v40, OBJC_IVAR___WFSidebarViewController_database);

      v0 = sub_100027670(v42, "sortedVisibleFolders");
      if (!v27 || (uint64_t)sub_100026C98(v43, "count") < v27)
      {

        goto LABEL_44;
      }
      v44 = *(_BYTE *)(v68 + OBJC_IVAR___WFMainViewController_display);
      v45 = sub_1000273D4();
      v48 = sub_100026B84((uint64_t)v17, v46, v47, v45);
      static RootNavigationContext.TransitionType.default.getter(v48);
      v49 = RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)(1, 1, (v44 & 1) == 0, 0, v3, v17);
      v50 = sub_100026C98(v49, "descriptors");
      sub_100026AF8((uint64_t)v50, &qword_1000D1170, WFWorkflowCollection_ptr);
      v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

      v52 = __OFSUB__(v27, 1);
      v7 = v27 - 1;
      if (!v52)
      {
        sub_1000660CC(v7, (v3 & 0xC000000000000001) == 0, v3);
        if ((v3 & 0xC000000000000001) == 0)
        {
          v53 = sub_100026E90(v3 + 8 * v7);
LABEL_43:
          v54 = v53;
          sub_100027154();
          *v1 = v54;
          v56 = v70;
          v55 = v71;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v70 + 104))(v1, enum case for RootNavigationDestination.folder(_:), v71);
          v57 = v69;
          sub_100026FD4((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
          sub_100015D74((uint64_t)v10, 0, 1, v18);
          v58 = type metadata accessor for MainViewController(0);
          sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
          RootView.navigate(to:with:)(v1, v10, v58, v59);

          sub_1000273B4(v60, &qword_1000D10F8);
          (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v1, v55);
          sub_100026D60(v2, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
          goto LABEL_44;
        }
LABEL_69:
        v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
        goto LABEL_43;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v72 = v20;
    v73 = v22 & 0xFFFFFFFFFFFFFFLL;
    if (v20 == 43)
    {
      if (!v23)
        goto LABEL_67;
      if (v23 != 1)
      {
        sub_100026FAC();
        if (!(!v33 & v32))
        {
          v27 = v35;
          if (v34 == 2)
            goto LABEL_35;
          sub_100026FAC();
          if (!(!v33 & v32))
          {
            v27 = 10 * v27 + v37;
            if (v36 != 3)
            {
              while (1)
              {
                sub_10002731C();
                if (!v33 & v32)
                  goto LABEL_33;
                sub_100026F78();
                if (!v33)
                  goto LABEL_33;
                v27 = v39 + v38;
                if (__OFADD__(v39, v38))
                  goto LABEL_33;
                sub_100027344();
                if (v33)
                  goto LABEL_36;
              }
            }
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      if (v20 == 45)
      {
        if (v23)
        {
          if (v23 == 1)
            goto LABEL_33;
          sub_100026FAC();
          if (!v33 & v32)
            goto LABEL_33;
          if (v30 == 2)
          {
            LOBYTE(v0) = 0;
            v27 = -(uint64_t)v31;
            goto LABEL_36;
          }
          if ((v29 - 48) > 9u)
            goto LABEL_33;
          v27 = -10 * v31 - (v29 - 48);
          if (v30 != 3)
          {
            while (1)
            {
              sub_10002731C();
              if (!v33 & v32)
                goto LABEL_33;
              sub_100026F78();
              if (!v33)
                goto LABEL_33;
              v27 = v66 - v65;
              if (__OFSUB__(v66, v65))
                goto LABEL_33;
              sub_100027344();
              if (v33)
                goto LABEL_36;
            }
          }
LABEL_35:
          LOBYTE(v0) = 0;
          goto LABEL_36;
        }
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if (v23 && (v20 - 48) <= 9u)
      {
        v27 = (v20 - 48);
        if (v23 == 1)
          goto LABEL_35;
        sub_100026FAC();
        if (!(!v33 & v32))
        {
          v27 = 10 * v27 + v62;
          if (v61 != 2)
          {
            while (1)
            {
              sub_10002731C();
              if (!v33 & v32)
                goto LABEL_33;
              sub_100026F78();
              if (!v33)
                goto LABEL_33;
              v27 = v64 + v63;
              if (__OFADD__(v64, v63))
                goto LABEL_33;
              sub_100027344();
              if (v33)
                goto LABEL_36;
            }
          }
          goto LABEL_35;
        }
      }
    }
LABEL_33:
    v27 = 0;
    LOBYTE(v0) = 1;
    goto LABEL_36;
  }
  swift_bridgeObjectRelease(v22);
}

void sub_1000209F8()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1000275E4();
  sub_100026B08();
  sub_100026F60();
  __chkstk_darwin(v2);
  sub_1000184A0();
  v3 = (void *)sub_10001A1A0();
  v4 = sub_1000274B0((uint64_t)v3, OBJC_IVAR___WFSidebarViewController_database);

  v6 = sub_100026DC4(v5, "sortedVisibleFolders");
  v8 = sub_100026C98(v7, "descriptors");

  sub_100026AF8(v9, &qword_1000D1170, WFWorkflowCollection_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v10);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v12 = v11;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    _CocoaArrayWrapper.endIndex.getter(v12);
    sub_100027594();
    if (v12)
    {
LABEL_3:
      v13 = __OFSUB__(v12, 1);
      v14 = v12 - 1;
      if (v13)
      {
        __break(1u);
      }
      else
      {
        sub_1000660CC(v14, (v11 & 0xC000000000000001) == 0, v11);
        if ((v11 & 0xC000000000000001) == 0)
        {
          sub_100026E90(v11 + 8 * v14);
LABEL_6:
          sub_100027594();
          *v0 = v14;
          sub_100026D54(enum case for RootNavigationDestination.folder(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
          sub_100026C10();
          sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
          v16 = v15;
          v17 = (id)v14;
          v18 = sub_100027354();
          RootView.navigate(to:)(v18, v19, v16);

          sub_100026D68((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
          sub_100026D40();
          return;
        }
      }
      v20 = sub_1000271C0();
      specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v21);
      goto LABEL_6;
    }
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v11);
}

void sub_100020BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  sub_100018190();
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v2);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100026B08();
  sub_10002728C();
  __chkstk_darwin(v5);
  sub_100026F2C(v6, v41[0]);
  __chkstk_darwin(v7);
  v9 = (char *)v41 - v8;
  v10 = (char *)sub_10001A1A0();
  v11 = *(_QWORD *)&v10[OBJC_IVAR___WFSidebarViewController_sections];
  sub_100027164();

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v42 = v4;
    v43 = v9;
    v44 = v1;
    sub_100027164();
    v13 = v11 + 40;
    v14 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_100027554();
      sub_100027570();
      sub_10002725C();
      sub_100027628();
      v15 = *(_QWORD *)(v1 + 16);
      v16 = v14[2];
      if (__OFADD__(v16, v15))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      if (!isUniquelyReferenced_nonNull_native || v16 + v15 > v14[3] >> 1)
        v14 = (_QWORD *)sub_100027008(isUniquelyReferenced_nonNull_native);
      if (*(_QWORD *)(v1 + 16))
      {
        sub_100027540();
        if (v19 != v20)
          goto LABEL_33;
        v21 = sub_100026CD0(v18);
        v24 = v24 || v21 >= v23;
        if (!v24)
          goto LABEL_37;
        sub_100027518(v21, v22);
        if (v15)
        {
          v25 = v14[2];
          v20 = __OFADD__(v25, v15);
          v26 = v25 + v15;
          if (v20)
            goto LABEL_34;
          v14[2] = v26;
        }
      }
      else if (v15)
      {
        goto LABEL_32;
      }
      sub_100018420();
      v13 += 16;
      if (!--v12)
      {
        sub_100027154();
        v9 = v43;
        v1 = v44;
        v4 = v42;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v14 = _swiftEmptyArrayStorage;
LABEL_21:
  sub_100027154();
  v27 = sub_100026D70(v1 + OBJC_IVAR___WFMainViewController_currentDestination, (uint64_t)&v45);
  sub_1000274E4(v27, v28, &qword_1000D1100);
  sub_100026C7C((uint64_t)v4);
  if (v29)
  {
    v30 = sub_100026B90();
    sub_10002732C(v30, &qword_1000D1100);
    goto LABEL_30;
  }
  sub_100026DA4((uint64_t)v9, (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  v31 = sub_10002744C();
  if ((v32 & 1) != 0)
  {
LABEL_29:
    sub_100026C54((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_100026B90();
    goto LABEL_30;
  }
  v33 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    if (v33 < v14[2])
    {
      if (v33 < 0)
        goto LABEL_36;
      sub_100026C28(v33);
      sub_100026B90();
      sub_100026C10();
      sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
      sub_100026DE0((uint64_t)v4, v35, v34);
      sub_100027214();
      sub_100027420();
LABEL_30:
      sub_100018094();
      return;
    }
    goto LABEL_29;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_100027030();
  sub_100026EE8((uint64_t)"Fatal error", v36, v37, (uint64_t)"UnsafeMutablePointer.initialize overlapping range", v38, v39, (uint64_t)"Swift/UnsafePointer.swift", v40, v41[0], v41[1], (int)v42);
  __break(1u);
}

uint64_t sub_100020E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for RootNavigationDestination(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  sub_10000A060(&qword_1000D1168, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
  v10 = v9;
  v11 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v10) & 1) == 0)
  {
    ++v11;
    v7 += v8;
    if (v2 == v11)
      return 0;
  }
  return v11;
}

void sub_100020F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  sub_100018190();
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v2);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100026B08();
  sub_10002728C();
  __chkstk_darwin(v5);
  sub_100026F2C(v6, v41[0]);
  __chkstk_darwin(v7);
  v9 = (char *)v41 - v8;
  v10 = (char *)sub_10001A1A0();
  v11 = *(_QWORD *)&v10[OBJC_IVAR___WFSidebarViewController_sections];
  sub_100027164();

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v42 = v4;
    v43 = v9;
    v44 = v1;
    sub_100027164();
    v13 = v11 + 40;
    v14 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_100027554();
      sub_100027570();
      sub_10002725C();
      sub_100027628();
      v15 = *(_QWORD *)(v1 + 16);
      v16 = v14[2];
      if (__OFADD__(v16, v15))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      if (!isUniquelyReferenced_nonNull_native || v16 + v15 > v14[3] >> 1)
        v14 = (_QWORD *)sub_100027008(isUniquelyReferenced_nonNull_native);
      if (*(_QWORD *)(v1 + 16))
      {
        sub_100027540();
        if (v19 != v20)
          goto LABEL_32;
        v21 = sub_100026CD0(v18);
        v24 = v24 || v21 >= v23;
        if (!v24)
          goto LABEL_35;
        sub_100027518(v21, v22);
        if (v15)
        {
          v25 = v14[2];
          v20 = __OFADD__(v25, v15);
          v26 = v25 + v15;
          if (v20)
            goto LABEL_33;
          v14[2] = v26;
        }
      }
      else if (v15)
      {
        goto LABEL_31;
      }
      sub_100018420();
      v13 += 16;
      if (!--v12)
      {
        sub_100027154();
        v9 = v43;
        v1 = v44;
        v4 = v42;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v14 = _swiftEmptyArrayStorage;
LABEL_21:
  sub_100027154();
  v27 = sub_100026D70(v1 + OBJC_IVAR___WFMainViewController_currentDestination, (uint64_t)&v45);
  sub_1000274E4(v27, v28, &qword_1000D1100);
  sub_100026C7C((uint64_t)v4);
  if (v29)
  {
    v30 = sub_100026B90();
    sub_10002732C(v30, &qword_1000D1100);
LABEL_29:
    sub_100018094();
    return;
  }
  sub_100026DA4((uint64_t)v9, (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  v31 = sub_10002744C();
  if ((v32 & 1) != 0 || (v33 = v31 - 1, v31 < 1))
  {
    sub_100026C54((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_100026B90();
    goto LABEL_29;
  }
  if (v33 < v14[2])
  {
    sub_100026C28(v33);
    sub_100026B90();
    sub_100026C10();
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026DE0((uint64_t)v4, v35, v34);
    sub_100027214();
    sub_100027420();
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  sub_100027030();
  sub_100026EE8((uint64_t)"Fatal error", v36, v37, (uint64_t)"UnsafeMutablePointer.initialize overlapping range", v38, v39, (uint64_t)"Swift/UnsafePointer.swift", v40, v41[0], v41[1], (int)v42);
  __break(1u);
}

void sub_1000211F0()
{
  sub_10002123C(sub_100076FA8);
}

void sub_100021230()
{
  sub_10002123C(sub_100076EE0);
}

void sub_10002123C(void (*a1)(void))
{
  uint64_t v2;
  void *v3;

  v2 = sub_10001AD7C();
  if (v2)
  {
    v3 = (void *)v2;
    a1();
    sub_100026F54(v3);
  }
  else
  {
    sub_1000270C4();
  }
}

id sub_1000212AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  char **v4;

  v2 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_splitView);
  v3 = sub_100019EAC(a1, "displayMode");
  v4 = &selRef_showColumn_;
  if (v3 != (id)1)
    v4 = &selRef_hideColumn_;
  return objc_msgSend(v2, *v4, 0);
}

void sub_100021334()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.MainViewController", 28, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100021384()
{
  return sub_100024ECC(type metadata accessor for MainViewController);
}

void (*sub_100021478(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR___WFMainViewController_currentDestination, a1, 33, 0);
  return sub_1000214C0;
}

void sub_1000214C0(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_100006B94();
  sub_100018188();
}

id sub_100021504(uint64_t a1, uint64_t a2)
{
  void *v2;

  return objc_msgSend(v2, "runWorkflowFromState:source:", a1, a2);
}

uint64_t sub_100021530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a6);
  return RootView.deleteCollections(_:alertCustomizationBlock:completion:)(a1, a2, a3, a4, a5, a6, WitnessTable);
}

uint64_t sub_1000215A8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a2);
  return RootView.createWorkflow(for:)(a1, a2, WitnessTable);
}

uint64_t sub_1000215EC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a2);
  return RootView.navigateToFolder(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10002162C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a2);
  return RootView.navigateToAutoShortcutApp(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10002166C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a2);
  return RootView.renameObject(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1000216AC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100097290, a2);
  return RootView.navigate(to:)(a1, a2, WitnessTable);
}

uint64_t sub_1000216EC(void *a1)
{
  return sub_10001BA3C(a1);
}

void sub_10002170C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v1);
  v2 = sub_100026B44();
  v3 = type metadata accessor for RootNavigationContext(v2);
  sub_100026B84(v0, v4, v5, v3);
  sub_10000D2B4();
  v6 = sub_1000271C0();
  sub_10001222C(v6, v7);
  sub_100026B34();
}

void sub_100021780()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSString v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  NSObject *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSObject *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  NSObject *v70;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  id v79[2];

  sub_100018190();
  v3 = v2;
  v5 = v4;
  v76 = v6;
  v7 = sub_10002714C();
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100026F1C();
  v11 = v9 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v72 - v13;
  v15 = type metadata accessor for NameIconComposeViewController.Mode(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100018458();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v16 + 16))(v1, v5, v15);
  v17 = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 88))(v1, v15);
  if (v17 == enum case for NameIconComposeViewController.Mode.create(_:))
  {
    sub_1000271F4();
    v18 = (NSString)swift_bridgeObjectRelease(*v1);
    v19 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_database);
    if (v3)
    {
      v18 = sub_1000274A4();
      v3 = v18;
    }
    v20 = sub_100026DBC((uint64_t)v18, "glyphCharacter");
    v79[0] = 0;
    v21 = objc_msgSend(v19, "createFolderWithName:icon:error:", v3, v20, v79);
    sub_100027648();
    v22 = v79[0];
    if (v19)
    {
      v23 = v79[0];

      sub_1000271D4(v24, "dismissViewControllerAnimated:completion:");
      v25 = objc_msgSend(objc_allocWithZone((Class)WFCreateFolderEvent), "init");
      sub_100025F74(0x4272616265646953, 0xED00006E6F747475, v25, (SEL *)&selRef_setFolderSource_);
      objc_msgSend(v25, "setIcon:", sub_100026DBC(v26, "glyphCharacter"));
      objc_msgSend(v25, "track");

LABEL_20:
      sub_100018094();
      return;
    }
    v35 = v79[0];
    v36 = (void *)_convertNSErrorToError(_:)(v22);

    swift_willThrow();
    v79[0] = v36;
    v37 = sub_100012E2C(&qword_1000D1050);
    sub_100026AF8(v37, &qword_1000D1058, NSError_ptr);
    sub_100026DCC((uint64_t)v78, (uint64_t)v79, v39, v38);
    v40 = (void *)v78[0];
    static WFLog.subscript.getter(WFLogCategoryFolders);
    v41 = v40;
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)sub_100026B24(12);
      v45 = (_QWORD *)sub_100026B24(8);
      *(_DWORD *)v44 = 138543362;
      v46 = sub_1000273EC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v1, v44 + 4, v44 + 12);
      *v45 = v41;

      sub_10002729C((void *)&_mh_execute_header, v42, v43, "An error occurred while creating a folder from the sidebar: %{public}@", v44);
      v47 = sub_100012E2C(&qword_1000D1068);
      sub_100026F14((uint64_t)v45, v48, v47);
      sub_100026ACC((uint64_t)v45);
      sub_100026ACC((uint64_t)v44);
    }
    else
    {

      v42 = v41;
    }
    v63 = v74;

    (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v75);
    v64 = (id)WFUserInterfaceFromViewController(v76);
    sub_100026AF8((uint64_t)v64, &qword_1000D1060, WFAlert_ptr);
    v65 = v41;
    v66 = sub_10001BB50((uint64_t)v65);
    sub_100026FEC(v64, "presentAlert:");

    sub_100027678();
    goto LABEL_19;
  }
  if (v17 == enum case for NameIconComposeViewController.Mode.update(_:))
  {
    v27 = sub_1000271F4();
    v28 = (void *)*v1;
    v29 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_database);
    if (v3)
    {
      v27 = (uint64_t)sub_1000274A4();
      v3 = (NSString)v27;
    }
    v30 = sub_100026DBC(v27, "glyphCharacter");
    v79[0] = 0;
    v31 = objc_msgSend(v29, "updateFolder:newName:newIcon:error:", v28, v3, v30, v79);
    sub_100027648();
    v32 = v79[0];
    if (v29)
    {
      v33 = v79[0];

      sub_1000271D4(v34, "dismissViewControllerAnimated:completion:");
      goto LABEL_20;
    }
    v49 = v79[0];
    v50 = (void *)_convertNSErrorToError(_:)(v32);

    swift_willThrow();
    v79[0] = v50;
    v51 = sub_100012E2C(&qword_1000D1050);
    sub_100026AF8(v51, &qword_1000D1058, NSError_ptr);
    sub_100026DCC((uint64_t)v78, (uint64_t)v79, v53, v52);
    v54 = (void *)v78[0];
    static WFLog.subscript.getter(WFLogCategoryFolders);
    v55 = v54;
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v73 = v28;
      v58 = (uint8_t *)sub_100026B24(12);
      v59 = (_QWORD *)sub_100026B24(8);
      *(_DWORD *)v58 = 138543362;
      v60 = sub_1000273EC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v1, v58 + 4, v58 + 12);
      *v59 = v55;

      v28 = v73;
      sub_10002729C((void *)&_mh_execute_header, v56, v57, "An error occurred while updating a folder from the sidebar: %{public}@", v58);
      v61 = sub_100012E2C(&qword_1000D1068);
      sub_100026F14((uint64_t)v59, v62, v61);
      sub_100026ACC((uint64_t)v59);
      sub_100026ACC((uint64_t)v58);
    }
    else
    {

      v56 = v55;
    }
    v67 = v75;
    v68 = v74;

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v11, v67);
    v69 = (id)sub_1000273BC();
    sub_100026AF8((uint64_t)v69, &qword_1000D1060, WFAlert_ptr);
    v70 = v55;
    v71 = sub_10001BB50((uint64_t)v70);
    sub_100026FEC(v69, "presentAlert:");

    sub_100027678();
LABEL_19:
    swift_errorRelease(v79[0]);
    goto LABEL_20;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
  __break(1u);
}

id sub_100021DBC(void *a1)
{
  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_100021DD0(void *a1)
{
  return sub_100021DBC(a1);
}

uint64_t sub_100021DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __objc2_prot *v48;
  uint64_t v49;
  uint64_t v50;

  sub_100018190();
  v49 = v5;
  v50 = v6;
  v8 = v7;
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v9);
  v10 = sub_100027068();
  type metadata accessor for RootNavigationContext.TransitionType(v10);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D1088);
  sub_100018034();
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100026C5C();
  sub_100026DAC();
  __chkstk_darwin(v16);
  sub_100018488();
  v17 = objc_opt_self(UINavigationController);
  if (swift_dynamicCastObjCClass(v8, v17))
  {
    v18 = v8;
    v19 = sub_10002715C((uint64_t)v18, "topViewController");
    if (v19)
    {
      v20 = v19;
      v47 = v0;
      v21 = sub_100019EAC((uint64_t)v19, "selectedViewController");
      if (!v21)
        goto LABEL_8;
      v22 = v21;
      sub_100026AF8((uint64_t)v21, &qword_1000D1070, UIViewController_ptr);
      v45 = v23;
      v24 = v18;
      v25 = v22;
      v46 = v1;
      v26 = v4;
      v27 = v20;
      v28 = v18;
      v29 = v25;
      v30 = v24;
      LOBYTE(v24) = static NSObject.== infix(_:_:)(v25, v24);

      v18 = v28;
      v20 = v27;
      v4 = v26;
      v1 = v46;

      if ((v24 & 1) != 0)
      {
        v48 = &OBJC_PROTOCOL___WFRootChildViewController;
        v31 = swift_dynamicCastObjCProtocolConditional(v20, 1, &v48);
        if (v31)
        {
          v32 = (void *)v31;
          v33 = v30;
          v34 = v20;
          LOBYTE(v32) = objc_msgSend(v32, "scrollForNavigationTap");

          if ((v32 & 1) != 0)
            return 0;
        }
        else
        {

        }
      }
      else
      {
LABEL_8:
        v36 = sub_1000273D4();
        v39 = sub_100026B84((uint64_t)v14, v37, v38, v36);
        static RootNavigationContext.TransitionType.default.getter(v39);
        sub_100027470();
        RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)(v40, v41, v42, 0, v3, v14);
        v43 = *(void **)(v47 + OBJC_IVAR___WFMainViewController_content);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v15);
        sub_100015D74(v1, 0, 1, v15);
        v44 = v43;
        sub_10000D7DC();

        sub_10001222C(v1, &qword_1000D10F8);
        sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      }
    }
    else
    {

    }
  }
  return 1;
}

void sub_1000220F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_100018190();
  v6 = v5;
  v7 = sub_100026B08();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D10F8);
  sub_100018034();
  __chkstk_darwin(v9);
  sub_10001827C();
  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_1000181C8();
  v12 = sub_100026DC4(v11, "tabBarItem");
  if (v12)
  {
    objc_msgSend(v12, "tag");
    sub_100026E88();
    if (v4 == 2)
    {
      v24 = sub_100027144();
      sub_100026DE8(v24);
      sub_1000270EC();
      v23 = (unsigned int *)&enum case for RootNavigationDestination.gallery(_:);
    }
    else if (v4 == 1)
    {
      v23 = (unsigned int *)&enum case for RootNavigationDestination.automations(_:);
    }
    else
    {
      if (v4)
      {
LABEL_17:
        sub_100018094();
        return;
      }
      v13 = objc_opt_self(UINavigationController);
      if (swift_dynamicCastObjCClass(v6, v13))
      {
        v14 = v6;
        v15 = sub_100026B98((uint64_t)v14, "topViewController");
        if (v15)
        {
          v16 = v15;
          v17 = sub_1000273E4();
          if (sub_1000276D8(v17))
          {
            if (*(_BYTE *)(v0 + OBJC_IVAR___WFMainViewController_display))
              v18 = (unsigned int *)&enum case for RootNavigationDestination.shortcuts(_:);
            else
              v18 = (unsigned int *)&enum case for RootNavigationDestination.allShortcuts(_:);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v3, *v18, v7);
            sub_1000270D8();
            sub_100019FC8();
            v19 = sub_100026C5C();
            sub_100026B84(v2, v20, v21, v19);
            sub_10000D2B4();

            sub_1000274DC(v22, &qword_1000D10F8);
            goto LABEL_17;
          }

        }
        sub_100026D54(enum case for RootNavigationDestination.shortcuts(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 104));
        sub_100026C10();
        sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
        sub_100026D18(v26);

        goto LABEL_16;
      }
      v23 = (unsigned int *)&enum case for RootNavigationDestination.shortcuts(_:);
    }
    sub_100026D54(*v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 104));
    sub_100026C10();
    sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026D18(v25);
LABEL_16:
    sub_100026D68(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1000223AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Class isa;
  id v33;
  uint64_t v34;
  id v35;

  sub_1000275E4();
  a17 = v20;
  a18 = v21;
  sub_100012E2C(&qword_1000D10F0);
  sub_100018034();
  __chkstk_darwin(v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for IndexPath(0);
  sub_10002724C();
  __chkstk_darwin(v25);
  sub_10001827C();
  v26 = sub_10001AD7C();
  if (!v26)
    goto LABEL_8;
  v27 = (void *)v26;
  sub_100012A90();
  sub_100087514();
  sub_100019D9C();
  sub_100026C7C((uint64_t)v24);
  if (v28)
  {

    sub_10002732C(v29, &qword_1000D10F0);
LABEL_8:
    (id)sub_1000273BC();
    goto LABEL_9;
  }
  sub_100026DA4(v18, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
  sub_10000C98C();
  v31 = v30;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v31, "cellForItemAtIndexPath:", isa);
  sub_100027648();

  if (!v18)
  {
    sub_100026C54(0, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));

    goto LABEL_8;
  }
  v34 = sub_100027138();
  v35 = (id)WFUserInterfaceFromView(v34);
  sub_100027668();

  sub_100026C54(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
LABEL_9:
  sub_100026D40();
}

#error "10002253C: call analysis failed (funcsize=23)"

void sub_100022564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;

  sub_100018190();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_1000273DC();
  sub_100026DAC();
  __chkstk_darwin(v31);
  sub_10001827C();
  sub_100012E2C(&qword_1000D10E8);
  sub_100018034();
  __chkstk_darwin(v32);
  sub_1000270A0();
  __chkstk_darwin(v33);
  v35 = (char *)&a9 - v34;
  if (v26)
  {
    sub_100027164();
    OpenWorkflowOptions.ActionError.init(actionIndex:message:)(v30, v28, v26);
    v37 = type metadata accessor for OpenWorkflowOptions.ActionError(0);
    v38 = 0;
  }
  else
  {
    v37 = type metadata accessor for OpenWorkflowOptions.ActionError(0);
    v38 = 1;
  }
  sub_100026D00((uint64_t)v35, v38, v36, v37);
  sub_1000274B8((uint64_t)v35);
  OpenWorkflowOptions.init(scrolledToActionIndex:actionError:isNewWorkflow:showIconPicker:onOpen:)(v30, 0, v21, 0, 0, 0, 0);
  v39 = (void *)sub_100027354();
  v40 = sub_10001BA3C(v39);
  swift_unknownObjectRelease(v40);
  sub_100026D68(v20, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_10001222C((uint64_t)v35, &qword_1000D10E8);
  sub_100018094();
}

#error "1000226F8: call analysis failed (funcsize=38)"

uint64_t sub_100022720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return WFPresentWorkflowSettingsViewController(a2, a3, a4, 0);
}

void sub_1000227C0()
{
  NSString v0;

  v0 = String._bridgeToObjectiveC()();
  WFPostAccessibilityAnnouncement();

}

void sub_100022850(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_100026B2C((uint64_t)&unk_1000C0658, 32);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = sub_100026E04((uint64_t)sub_100007DA8, (uint64_t)_NSConcreteStackBlock, 1107296256, v9, v10);
  v7 = a2;
  v8 = v2;
  sub_100027418();
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v6);
  _Block_release(v6);
}

uint64_t sub_100022908(void *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = (uint64_t)objc_msgSend(a1, "isDeleted");
  if ((result & 1) == 0)
  {
    v3 = type metadata accessor for MainViewController(0);
    sub_10000A060(&qword_1000D1020, (void (*)(uint64_t))type metadata accessor for MainViewController);
    v5 = WorkflowOpener.openWorkflow(_:)(a1, v3, v4);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_100022990(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;

  if (a3)
  {
    v6 = sub_100026E04((uint64_t)sub_100007DA8, (uint64_t)_NSConcreteStackBlock, 1107296256, v7, v8);
    swift_retain(a4);
    sub_100027204();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v6);
  _Block_release(v6);
  sub_100027524();
}

void sub_100022AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for MainViewController(0);
  sub_10000A060(&qword_1000D1020, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v0 = sub_10002768C();
  v3 = WorkflowOpener.openWorkflow(_:)(v0, v1, v2);
  swift_unknownObjectRelease(v3);
  sub_100027380();
}

void sub_100022B84(double a1, uint64_t a2, char a3, char a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v11 = sub_10002714C();
  sub_10002724C();
  __chkstk_darwin(v12);
  sub_100018488();
  static WFLog.subscript.getter(WFLogCategoryRunningState);
  v13 = v4;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (sub_1000272C4(v15))
  {
    v26 = v6;
    v27 = a4;
    v16 = sub_100026B24(28);
    v17 = sub_100026B24(32);
    v29 = v17;
    *(_DWORD *)v16 = 134349570;
    v28 = *(_QWORD *)&a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 4, v16 + 12);
    *(_WORD *)(v16 + 12) = 1026;
    LODWORD(v28) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v16 + 14, v16 + 18);
    *(_WORD *)(v16 + 18) = 2080;
    v18 = (void *)sub_10001AD7C();
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "description");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    }
    v21 = sub_1000273A8();
    v28 = sub_100015868(v21, v22, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 20, v16 + 28);

    sub_100018420();
    _os_log_impl((void *)&_mh_execute_header, v14, v7, "Running state did change with progress: %{public}f waiting: %{BOOL,public}d visibleLibrary: %s", (uint8_t *)v16, 0x1Cu);
    sub_100026E10((uint64_t)&type metadata for Any);
    sub_100026ACC(v17);
    sub_100026ACC(v16);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v11);
    a4 = v27;
  }
  else
  {

    sub_100026C54(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  v24 = sub_10001AD7C();
  if (v24)
  {
    v25 = (void *)v24;
    sub_100047F40(a4 & 1);

  }
}

void sub_100022E54()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_100018190();
  v6 = v5;
  sub_100012E2C(&qword_1000D10D0);
  sub_100018034();
  __chkstk_darwin(v7);
  v8 = sub_100026B44();
  v9 = type metadata accessor for Logger(v8);
  sub_100026DAC();
  __chkstk_darwin(v10);
  sub_1000181C8();
  if (v6)
  {
    v11 = (void *)_convertErrorToNSError(_:)(v6);
    v12 = objc_msgSend(v11, "wf_isUserCancelledError");

  }
  else
  {
    v12 = 0;
  }
  static WFLog.subscript.getter(WFLogCategoryRunningState);
  v13 = v0;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (sub_1000272C4(v15))
  {
    v35 = v4;
    v36 = v9;
    v37 = v1;
    v16 = sub_100026B24(18);
    v17 = sub_100026B24(32);
    v39 = v17;
    *(_DWORD *)v16 = 67109378;
    LODWORD(v38) = (_DWORD)v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, (char *)&v38 + 4, v16 + 4, v16 + 8);
    *(_WORD *)(v16 + 8) = 2080;
    v18 = (void *)sub_100027244();
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "description");

      sub_100026C64();
      v12 = v21;

    }
    else
    {
      v12 = (id)0xEB00000000217972;
    }
    v22 = sub_100027138();
    v38 = sub_100015868(v22, v23, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v16 + 10, v16 + 18);

    sub_1000183D0();
    _os_log_impl((void *)&_mh_execute_header, v14, v3, "Did finish running workflow cancelled: %{BOOL}d visibleLibrary: %s", (uint8_t *)v16, 0x12u);
    sub_100026E10((uint64_t)&type metadata for Any);
    sub_100026ACC(v17);
    sub_100026ACC(v16);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v36);
    v1 = v37;
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v9);
  }
  v25 = sub_100027244();
  if (v25)
  {
    v26 = (void *)v25;
    sub_100010914();

  }
  if (!v6)
  {
    v27 = (void *)sub_100027244();
    sub_100027660(v27);
    if (v12)
    {
      v28 = type metadata accessor for TaskPriority(0);
      sub_10002747C(v1, v29, v30, v28);
      v31 = sub_100027304();
      v32 = static MainActor.shared.getter();
      v33 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C0748, 40);
      v33[2] = v32;
      v33[3] = &protocol witness table for MainActor;
      v33[4] = v31;
      v34 = sub_10005F17C(v1, (uint64_t)&unk_1000D10E0, (uint64_t)v33);
      swift_release(v34);
    }
  }
  sub_100018094();
}

uint64_t sub_1000230F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_100023164, v6, v7);
}

id sub_100023164()
{
  void *v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;

  result = objc_msgSend(*(id *)(v1 + 16), "view");
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 16);
    v4 = type metadata accessor for AppStorePromptController(0);
    v5 = sub_100019D50(v4, "window");
    sub_100026F4C();
    v7 = sub_100026DBC(v6, "windowScene");
    *(_QWORD *)(v1 + 48) = v7;

    v8 = *(_QWORD *)(v3 + OBJC_IVAR___WFMainViewController_database);
    v9 = (_QWORD *)swift_task_alloc(async function pointer to static AppStorePromptController.presentReviewPromptIfNeeded(in:database:)[1]);
    *(_QWORD *)(v1 + 56) = v9;
    *v9 = v1;
    v9[1] = sub_100023238;
    return (id)static AppStorePromptController.presentReviewPromptIfNeeded(in:database:)(v7, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100023238()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));

  return swift_task_switch(sub_100023288, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100023288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return sub_100026EB8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100023324()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v31[2];

  sub_100018190();
  v3 = v1;
  v5 = v4;
  v7 = v6;
  v8 = sub_10002714C();
  sub_10002728C();
  __chkstk_darwin(v9);
  sub_1000270A0();
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v31 - v12;
  v14 = sub_100026DC4(v11, "workflow");
  if (v14)
  {
    v15 = v14;
    v16 = *(void **)&v3[OBJC_IVAR___WFMainViewController_runCoordinator];
    v17 = sub_100026B98((uint64_t)v14, "runningWorkflow");

    if (v17)
    {
      v18 = sub_100026E80();
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)sub_100026B24(2);
        v31[1] = v8;
        v22 = (uint64_t)v21;
        *(_WORD *)v21 = 0;
        sub_100026FBC((void *)&_mh_execute_header, v19, v20, "Received incoming workflow to run, but a workflow is already running. Stopping that one.", v21);
        sub_100026ACC(v22);
      }

      sub_100027560((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      objc_msgSend(v16, "stop");
    }
    v23 = v5;
    v24 = v7;
    v25 = v3;
    v26 = v15;
    sub_10001F494(v25, v25, v26, v5, v24);

  }
  else
  {
    v27 = static WFLog.subscript.getter(WFLogCategoryGeneral);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (sub_1000273C4(v29))
    {
      v30 = (uint8_t *)sub_100026B24(2);
      *(_WORD *)v30 = 0;
      sub_100026FBC((void *)&_mh_execute_header, v28, (os_log_type_t)v5, "Received incoming workflow to run, with no reference", v30);
      sub_100026ACC((uint64_t)v30);
    }

    sub_100027560(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }
  sub_100018094();
}

id sub_100023510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = type metadata accessor for MainViewController(0);
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.scroll(toWorkflow:animated:)(a2, 0, v8, v9);
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR___WFMainViewController_runCoordinator), "resumeWorkflowReference:fromSource:withState:", a2, a3, a4);
}

void sub_10002360C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;

  sub_1000275E4();
  v3 = (void *)sub_100026B08();
  sub_100026F60();
  __chkstk_darwin(v4);
  sub_100018488();
  sub_100027458(enum case for RootNavigationDestination.automations(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v5 = sub_100015138();
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.navigate(to:)(v1, v5, v6);
  sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (*(_QWORD *)(v0 + OBJC_IVAR___WFMainViewController_content))
  {
    v7 = objc_opt_self(WFAutomationListViewController);
    if (sub_10002716C(v7))
    {
      v8 = sub_1000275C0();
      sub_1000184E0();
      v9 = String._bridgeToObjectiveC()();
      sub_100026D9C(v3, "flashAutomationForTriggerID:");

    }
  }
  sub_100026D40();
}

double sub_100023744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  sub_1000275E4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6 & 1;
  v8 = sub_100026B2C((uint64_t)&unk_1000C06D0, 32);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v1;
  v9 = type metadata accessor for MainViewController(0);
  sub_10000A060(&qword_1000D10C8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  v11 = v10;
  swift_retain(v1);
  ((void (*)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t))RootView.importShortcutFile(with:openAfterImport:completion:))(v5, v7, sub_100026470, v8, v9, v11);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_1000237F0(void *a1, char a2, void (*a3)(void *, void *))
{
  void *v6;
  void *v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v6 = 0;
    v7 = a1;
  }
  else
  {
    v8 = a1;
    v6 = a1;
    v7 = 0;
  }
  a3(v6, v7);
  sub_10002647C(a1, a2 & 1);
}

void sub_1000238E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_100023938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  id v8;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for GalleryHostingViewController.GalleryHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88), *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88 + 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  objc_msgSendSuper2(&v9, "setContentScrollView:forEdge:", a1, 15);
  v7 = objc_msgSend(v4, "navigationController");
  v8 = objc_msgSend(v7, "topViewController");

  objc_msgSend(v8, "setContentScrollView:forEdge:", a1, 15);
}

void sub_1000239FC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;

  v7 = a3;
  v9 = a1;
  sub_100023938((uint64_t)a3, a4, (uint64_t)v9, v8);

}

uint64_t sub_100023A5C(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_100023A8C(a1);
}

uint64_t sub_100023A8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)((swift_isaMask & *v1) + qword_1000D0F88);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - v5, a1, v3);
  v7 = UIHostingController.init(rootView:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v7;
}

void *sub_100023B38(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100023B78(a1, a2);
}

void *sub_100023B78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + qword_1000D0F88);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v13 - v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v9;
  v10(a2, v5);
  if (v9)

  return v9;
}

id sub_100023C38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for GalleryHostingViewController.GalleryHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88), *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88 + 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100023CAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_100023C38(v3, v4, v5, v6);
}

id sub_100023CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for GalleryHostingViewController.GalleryHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88), *(_QWORD *)((swift_isaMask & *v4) + qword_1000D0F88 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100023D28(uint64_t a1, int a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  char v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  char *v51;
  _QWORD v52[2];
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v5 = sub_100012E2C(&qword_1000D1090);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v52 - v9;
  v11 = type metadata accessor for GalleryNavigationDestination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)v52 - v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))((char *)v52 - v16, enum case for GalleryNavigationDestination.home(_:), v11);
  v55 = a1;
  v18 = static GalleryNavigationDestination.== infix(_:_:)(a1, v17);
  v56 = v12;
  v54 = *(void (**)(char *, uint64_t))(v12 + 8);
  v54(v17, v11);
  v19 = v2;
  v20 = objc_msgSend(v2, "navigationController");
  v21 = v20;
  if ((v18 & 1) != 0)
  {

    return;
  }
  v53 = v15;
  HIDWORD(v52[0]) = a2;
  if (!v20)
    goto LABEL_9;
  v22 = objc_msgSend(v20, "topViewController");

  if (!v22)
    goto LABEL_9;
  v23 = type metadata accessor for GalleryHostingViewController(0);
  v24 = swift_dynamicCastClass(v22, v23);
  if (!v24)
  {

LABEL_9:
    v28 = v11;
    sub_100015D74((uint64_t)v10, 1, 1, v11);
    goto LABEL_10;
  }
  v25 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v10, v24 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_destination, v11);

  sub_100015D74((uint64_t)v10, 0, 1, v11);
  sub_100026854((uint64_t)v10, (uint64_t)v8, &qword_1000D1090);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v8, v11);
  if (v26 == enum case for GalleryNavigationDestination.loadingPage(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v8, v11);
    v27 = *((_QWORD *)v8 + 1);

    swift_bridgeObjectRelease(v27);
LABEL_23:
    v28 = v11;
    sub_10001222C((uint64_t)v10, &qword_1000D1090);
    v49 = objc_msgSend(v19, "navigationController");
    if (v49)
    {
      v50 = v49;

    }
    LODWORD(v52[0]) = 0;
    goto LABEL_11;
  }
  if (v26 == enum case for GalleryNavigationDestination.loadingCollection(_:))
  {
    (*(void (**)(char *, uint64_t))(v56 + 96))(v8, v11);
    swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
    v47 = &v8[*(int *)(sub_100012E2C(&qword_1000D1098) + 48)];
    v48 = type metadata accessor for GalleryCollectionDescriptor(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
    goto LABEL_23;
  }
  v51 = v8;
  v28 = v11;
  v54(v51, v11);
LABEL_10:
  sub_10001222C((uint64_t)v10, &qword_1000D1090);
  LODWORD(v52[0]) = a2;
LABEL_11:
  v52[1] = type metadata accessor for GalleryHostingViewController(0);
  v29 = v55;
  v30 = v56;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v32 = v28;
  v31(v17, v55, v28);
  v33 = &v19[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator];
  Strong = swift_unknownObjectWeakLoadStrong(&v19[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator]);
  v35 = *((_QWORD *)v33 + 1);
  v36 = *(_QWORD *)&v19[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_userInterface];
  swift_getObjectType(v36);
  swift_unknownObjectRetain(v36);
  v37 = sub_100026040((uint64_t)v17, Strong, v35, v36);
  v38 = v53;
  v31(v53, v29, v32);
  if ((*(unsigned int (**)(char *, uint64_t))(v30 + 88))(v38, v32) == enum case for GalleryNavigationDestination.shortcut(_:))
  {
    (*(void (**)(char *, uint64_t))(v30 + 96))(v38, v32);
    v39 = objc_msgSend(v19, "presentedViewController");
    v40 = BYTE4(v52[0]);
    if (v39)
    {
      v41 = v39;
      v42 = objc_opt_self(WFComposePresentingViewController);
      v43 = (void *)swift_dynamicCastObjCClass(v41, v42);
      if (v43)
        objc_msgSend(v43, "dismissViewControllerAnimated:completion:", v40 & 1, 0);

    }
    objc_msgSend(v19, "presentViewController:animated:completion:", v37, v40 & 1, 0, v52[0]);

    v44 = type metadata accessor for GalleryShortcutDescriptor(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v38, v44);
  }
  else
  {
    v45 = objc_msgSend(v19, "navigationController");
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v45, "pushViewController:animated:", v37, v52[0] & 1);

    }
    v54(v38, v32);
  }
}

void sub_10002423C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = sub_100012E2C(&qword_1000D1088);
  __chkstk_darwin(v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared) & 1) != 0)
  {
    sub_100024BA4();
  }
  else
  {
    v6 = type metadata accessor for RootPPTTestCase(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a1, v6);
    sub_100015D74((uint64_t)v5, 0, 1, v6);
    v7 = v1 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest;
    swift_beginAccess(v7, v9, 33, 0);
    sub_100025FF8((uint64_t)v5, v7);
    swift_endAccess(v9);
  }
}

void *sub_100024334()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController);
  v2 = v1;
  return v1;
}

void sub_100024360(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController) = a1;

}

void sub_100024374(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = v2
     + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation;
  v4 = *(void **)(v2
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation);
  *(_QWORD *)v3 = a1;
  *(_BYTE *)(v3 + 8) = a2;

}

void sub_100024390(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a6;
  v39 = a5;
  v36 = a3;
  v37 = a4;
  v34 = a1;
  v35 = a2;
  v6 = type metadata accessor for GalleryNavigationDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GalleryView(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E2C(&qword_1000D10B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E2C(&qword_1000D10B8);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v34, v6);
  GalleryView.init(destination:)(v9);
  KeyPath = swift_getKeyPath(&unk_100097378);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  v21 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  v22 = v35;
  v23 = v36;
  *v21 = KeyPath;
  v21[1] = v22;
  v21[2] = v23;
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  swift_unknownObjectRetain(v22);
  v24(v13, v10);
  v25 = swift_getKeyPath(&unk_1000973A8);
  sub_100026854((uint64_t)v16, (uint64_t)v19, &qword_1000D10B0);
  v26 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  v27 = v37;
  *v26 = v25;
  v26[1] = v27;
  swift_unknownObjectRetain(v27);
  sub_10001222C((uint64_t)v16, &qword_1000D10B0);
  v28 = type metadata accessor for GallerySearchManager(0);
  sub_10000A060(&qword_1000D10C0, (void (*)(uint64_t))&type metadata accessor for GallerySearchManager);
  v30 = static ObservableObject.environmentStore.getter(v28, v29);
  v31 = v38;
  sub_100026854((uint64_t)v19, v38, &qword_1000D10B8);
  v32 = (uint64_t *)(v31 + *(int *)(sub_100012E2C(&qword_1000D10A0) + 36));
  v33 = v39;
  *v32 = v30;
  v32[1] = v33;
  swift_retain(v33);
  sub_10001222C((uint64_t)v19, &qword_1000D10B8);
}

void sub_1000245F8()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController] = 0;
  v1 = &v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  v3 = type metadata accessor for RootPPTTestCase(0);
  sub_100015D74(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  *(_QWORD *)v4 = 0;
  v4[8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009C2C0, "Shortcuts/MainViewController.swift", 34, 2, 1226, 0);
  __break(1u);
}

id sub_1000246E8()
{
  char *v0;
  void *v1;
  id result;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController];
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = result;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = result;
  objc_msgSend(result, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v3, "setFrame:", v6, v8, v10, v12);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = result;
  objc_msgSend(result, "setAutoresizingMask:", 18);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = result;
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v15 = result;
    objc_msgSend(v14, "addSubview:", result);

    return objc_msgSend(v1, "didMoveToParentViewController:", v0);
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000248B0(char a1)
{
  char *v1;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  objc_msgSendSuper2(&v5, "viewWillAppear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController];
  if (v3)
  {
    v4 = v3;
    sub_100014294();

  }
}

void sub_100024954(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  objc_class *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  _BYTE v18[24];
  _BYTE v19[24];
  objc_super v20;

  v3 = sub_100012E2C(&qword_1000D1088);
  v4 = __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v18[-v7];
  v9 = type metadata accessor for RootPPTTestCase(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (objc_class *)type metadata accessor for GalleryHostingViewController(0);
  v20.receiver = v1;
  v20.super_class = v13;
  objc_msgSendSuper2(&v20, "viewDidAppear:", a1 & 1);
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest], v19, 0, 0);
  sub_100026854(v14, (uint64_t)v8, &qword_1000D1088);
  if (sub_100019D44((uint64_t)v8, 1, v9) == 1)
  {
    sub_10001222C((uint64_t)v8, &qword_1000D1088);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_100024BA4();
    sub_100015D74((uint64_t)v6, 1, 1, v9);
    swift_beginAccess(v14, v18, 33, 0);
    sub_100025FF8((uint64_t)v6, v14);
    swift_endAccess(v18);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
  v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 1;
  v15 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  if (v15)
  {
    v16 = v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation
           + 8] & 1;
    v17 = v15;
    objc_msgSend(v1, "presentViewController:animated:completion:", v17, v16, 0);
    sub_100024374(0, 0);

  }
}

void sub_100024BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v11 = *(id *)(v0
              + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController);
  sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
  v2 = v1;
  v3 = v11;
  v4 = sub_100012E2C(&qword_1000D1078);
  if (swift_dynamicCast(&v12, &v11, v2, v4, 6))
  {
    v5 = *((_QWORD *)&v13 + 1);
    v6 = v14;
    sub_10001465C(&v12, *((uint64_t *)&v13 + 1));
    v7 = RootPPTTestCase.name.getter();
    v9 = v8;
    v10 = RootPPTTestCase.parameters.getter();
    dispatch thunk of PPTTestHost.runTest(_:options:)(v7, v9, v10, v5, v6);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v10);
    sub_10000B6E4(&v12);
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_10001222C((uint64_t)&v12, &qword_1000D1080);
  }
}

void sub_100024CB8(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  objc_msgSendSuper2(&v5, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController];
  if (v3)
  {
    v4 = v3;
    sub_100014294();

  }
}

id sub_100024D74(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController), "contentScrollViewForEdge:", a1);
}

uint64_t sub_100024DA4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  if (!a1)
  {
    ((void (*)(void))dispatch thunk of GallerySearchManager.isActive.setter)();
LABEL_8:
    swift_bridgeObjectRelease(0);
    v7 = 0;
    v8 = 0xE000000000000000;
    return dispatch thunk of GallerySearchManager.searchTerm.setter(v7, v8);
  }
  sub_100079588(a1);
  if (v2 && (v3 = v2, String.ifNotEmpty.getter(), v5 = v4, swift_bridgeObjectRelease(v3), v5))
  {
    swift_bridgeObjectRelease(v5);
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  dispatch thunk of GallerySearchManager.isActive.setter(v6);
  sub_100079588(a1);
  if (!v8)
    goto LABEL_8;
  return dispatch thunk of GallerySearchManager.searchTerm.setter(v7, v8);
}

void sub_100024E38()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.GalleryHostingViewController", 38, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100024EC0()
{
  return sub_100024ECC(type metadata accessor for GalleryHostingViewController);
}

id sub_100024ECC(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100024FBC()
{
  return type metadata accessor for GalleryHostingViewController(0);
}

_BYTE *initializeBufferWithCopyOfBuffer for MainViewController.Display(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MainViewController.Display(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MainViewController.Display(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000250A4 + 4 * byte_100096FA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000250D8 + 4 * byte_100096FA0[v4]))();
}

uint64_t sub_1000250D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000250E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000250E8);
  return result;
}

uint64_t sub_1000250F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000250FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100025100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100025108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100025114(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100025120(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MainViewController.Display()
{
  return &type metadata for MainViewController.Display;
}

unint64_t sub_100025140()
{
  unint64_t result;

  result = qword_1000D1018;
  if (!qword_1000D1018)
  {
    result = swift_getWitnessTable(&unk_100097110, &type metadata for MainViewController.Display);
    atomic_store(result, (unint64_t *)&qword_1000D1018);
  }
  return result;
}

id sub_100025188(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v5;
  NSString v9;
  id v10;

  v5 = v4;
  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(v5, "initWithTitle:image:tag:", v9, a3, a4);

  return v10;
}

void *sub_100025208(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory with negative count", 60, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1170, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1173, 0);
  }
  __break(1u);
  return result;
}

void sub_1000252CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a1 >> 16;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v7 = String.UTF16View.index(_:offsetBy:)(15, v5, a2);
    sub_100027190(v7);
  }
  else
  {
    v6 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v5);
    sub_100027190(v6);
  }
  sub_100018188();
}

char *sub_100025320(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100012E2C(&qword_1000D1048);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1000254B8(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000253F4(v14, v8, v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_1000253F4(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

char *sub_1000254B8(char *__src, size_t __len, char *__dst)
{
  char v4;

  if ((__len & 0x8000000000000000) != 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned __int8 *sub_100025538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain(a2);
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_100025898(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_10002561C(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12;
}

unsigned __int8 *sub_10002561C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100025898(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2 = sub_1000258F4((uint64_t)sub_1000258F0, 0, a1, a2);
  v4 = v3;
  v7 = sub_100025928(v2, v5, v6, v3);
  swift_bridgeObjectRelease(v4);
  return v7;
}

uint64_t sub_1000258F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3;
  v5 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  return String.subscript.getter(15, v5 | (v4 << 16));
}

uint64_t sub_100025928(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_100025A6C(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100003C84(v12, 0);
      sub_100025B58(v16, v8 + 32, v9, a1, a2, v5, a4);
      v5 = v13;
      v14 = v16[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v14);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v15 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v15;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v16 + v8, v9 - v8);
  }
}

void sub_100025A6C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_1000252CC(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_1000252CC(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
    return;
  }
  __break(1u);
}

void sub_100025B58(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_1000252CC(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = String.UTF8View._foreignSubscript(position:)();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = _StringObject.sharedUTF8.getter(a6, a7);
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_1000252CC(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = String.UTF8View._foreignIndex(after:)(v11, a6, a7);
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_100025D58(uint64_t a1, void *a2)
{
  Class isa;

  sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, "setViewControllers:", isa);

}

uint64_t sub_100025DC8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, "viewControllers");

  if (!v2)
    return 0;
  sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_100025E3C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(a1, "viewControllers");
  if (!v1)
    return 0;
  v2 = v1;
  sub_10000EAA8(0, &qword_1000D1070, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_100025EA8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "localizedShortTitle");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_100025F14(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "input");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void sub_100025F74(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v7;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, *a4, v7);

}

uint64_t sub_100025FCC()
{
  uint64_t v0;

  sub_100026F0C();
  sub_10002710C();
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100025FF0()
{
  uint64_t v0;

  return sub_100022908(*(void **)(v0 + 16));
}

uint64_t sub_100025FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D1088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100026040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for GalleryHostingViewController(0));
  return sub_1000260A0(a1, a2, a3, a4, v8);
}

char *sub_1000260A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;

  v43 = a3;
  v10 = type metadata accessor for RootNavigationDestination(0);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E2C(&qword_1000D10A0);
  v14 = __chkstk_darwin(v13);
  v47 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v43 - v16;
  *(_QWORD *)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController] = 0;
  v18 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 0;
  v19 = (uint64_t)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  v20 = type metadata accessor for RootPPTTestCase(0);
  sub_100015D74(v19, 1, 1, v20);
  v21 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  *(_QWORD *)v21 = 0;
  v21[8] = 0;
  v22 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_destination];
  v23 = type metadata accessor for GalleryNavigationDestination(0);
  v48 = *(_QWORD *)(v23 - 8);
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v46(v22, a1, v23);
  *((_QWORD *)v18 + 1) = a3;
  v24 = a2;
  v44 = a2;
  swift_unknownObjectWeakAssign(v18, a2);
  v25 = a4;
  *(_QWORD *)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_userInterface] = a4;
  v26 = type metadata accessor for GallerySearchManager(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = a5;
  v45 = a4;
  v28 = swift_unknownObjectRetain(a4);
  v29 = GallerySearchManager.init()(v28);
  *(_QWORD *)&v27[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchManager] = v29;
  v30 = (objc_class *)type metadata accessor for GalleryHostingViewController(0);
  swift_retain(v29);
  sub_100024390(a1, v24, v43, v25, v29, (uint64_t)v17);
  swift_release(v29);
  v31 = objc_allocWithZone((Class)sub_100012E2C(&qword_1000D10A8));
  v32 = v47;
  sub_100026854((uint64_t)v17, v47, &qword_1000D10A0);
  v33 = UIHostingController.init(rootView:)(v32);
  sub_10001222C((uint64_t)v17, &qword_1000D10A0);
  *(_QWORD *)&v27[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController] = v33;

  v51.receiver = v27;
  v51.super_class = v30;
  v34 = objc_msgSendSuper2(&v51, "initWithNibName:bundle:", 0, 0);
  v35 = a1;
  v46(v12, a1, v23);
  sub_100015D74((uint64_t)v12, 0, 1, v23);
  v37 = v49;
  v36 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v12, enum case for RootNavigationDestination.gallery(_:), v50);
  v38 = (char *)v34;
  v39 = RootNavigationDestination.displayName.getter();
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  sub_10007CF8C(v39, v41, v38);
  objc_msgSend(v38, "addChildViewController:", *(_QWORD *)&v38[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController]);
  swift_unknownObjectRelease(v44);
  swift_unknownObjectRelease(v45);

  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v35, v23);
  return v38;
}

void sub_100026418(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = EnvironmentValues.rootNavigator.getter();
  a1[1] = v2;
  sub_100018188();
}

void sub_100026440(_QWORD *a1@<X8>)
{
  *a1 = EnvironmentValues.userInterface.getter();
  sub_100018188();
}

void sub_100026468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000238E0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_100026470(void *a1, char a2)
{
  uint64_t v2;

  sub_1000237F0(a1, a2 & 1, *(void (**)(void *, void *))(v2 + 16));
}

void sub_10002647C(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

id sub_10002648C()
{
  uint64_t *v0;

  return sub_100023510(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100026498()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1000272EC();
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000264C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1000D10DC);
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_1000272D4(v3);
  return sub_1000230F8(v4, v5, v6, v2);
}

uint64_t sub_10002651C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return sub_100026EB8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_10002655C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100026580()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10002658C()
{
  uint64_t v0;

  sub_100026F0C();
  sub_10002710C();
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1000265C0(double a1)
{
  uint64_t v1;

  sub_10001ED90(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1000265D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_1000273DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v5 = sub_100027390();
  return sub_100026E64(v5, v6, v7);
}

void (*sub_100026644())(void)
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1000273DC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10001E5DC(v0 + v2, *(void **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

id sub_10002668C(void *a1)
{
  uint64_t v1;

  return sub_10001E028(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100026694()
{
  uint64_t v0;

  sub_100026F0C();
  return swift_deallocObject(v0, 24, 7);
}

id sub_1000266B4(void *a1)
{
  uint64_t v1;

  return sub_10001E350(a1, *(void **)(v1 + 16));
}

id sub_1000266BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___WFMainViewController_runCoordinator), "stop");
}

uint64_t sub_1000266D8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1000272EC();
  sub_10002760C();
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100026704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1000D11B4);
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_1000272D4(v4);
  return sub_10001C0B8(v5, v6, v7, v3, v2);
}

unint64_t sub_10002676C()
{
  unint64_t result;

  result = qword_1000D11D0;
  if (!qword_1000D11D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000D11D0);
  }
  return result;
}

uint64_t sub_1000267AC()
{
  uint64_t v0;

  sub_100026F0C();
  sub_10002710C();
  sub_1000272EC();
  sub_10002760C();
  return swift_deallocObject(v0, 48, 7);
}

id sub_1000267D8()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(v0[2] + OBJC_IVAR___WFMainViewController_runCoordinator), "runAppShortcut:withLNAction:andMetadata:", v0[3], v0[4], v0[5]);
}

uint64_t sub_1000267F8()
{
  uint64_t v0;

  sub_100026F0C();
  sub_10002710C();
  sub_1000272EC();
  sub_10002760C();

  if (*(_QWORD *)(v0 + 64))
    swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_10002683C(double a1)
{
  uint64_t v1;

  sub_10001BEA4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1);
}

void sub_100026854(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_100012E2C(a3);
  v3 = sub_1000273A8();
  v4(v3);
  sub_100018188();
}

uint64_t sub_100026890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (swift_conformsToProtocol2(a2, a3))
    return a1;
  else
    return 0;
}

uint64_t sub_1000268C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(sub_100012E2C(&qword_1000D10F8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100026F0C();
  sub_10002710C();
  v5 = sub_100026C5C();
  if (!sub_100019D44(v0 + v3, 1, v5))
    sub_100026C54(v0 + v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  return sub_100026E64(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_100026948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D10F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100026990()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100012E2C(&qword_1000D10F8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10000E3F4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_1000269D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000269F4()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_100018188();
}

void sub_100026A10()
{
  sub_10001A904();
}

NSString sub_100026A98()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100026AA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100026ACC(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

uint64_t sub_100026AD8@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1, 1);
}

id sub_100026AE8()
{
  void *v0;

  return sub_100011544(v0);
}

void sub_100026AF8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  sub_10000EAA8(0, a2, a3);
}

uint64_t sub_100026B00(uint64_t a1, uint64_t a2)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, 1);
}

uint64_t sub_100026B08()
{
  return type metadata accessor for RootNavigationDestination(0);
}

uint64_t sub_100026B24(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_100026B2C(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7);
}

uint64_t sub_100026B44()
{
  return 0;
}

double sub_100026B60()
{
  return 0.0;
}

uint64_t sub_100026B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100015D74(a1, 1, 1, a4);
}

uint64_t sub_100026B90()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_100026B98(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

NSString sub_100026BA0()
{
  return String._bridgeToObjectiveC()();
}

id sub_100026BB4()
{
  void *v0;

  return sub_100011544(v0);
}

void sub_100026BC4()
{
  void *v0;

}

uint64_t sub_100026BD0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100026C08()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t sub_100026C10()
{
  return type metadata accessor for MainViewController(0);
}

uint64_t sub_100026C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD, unint64_t, uint64_t))(v1 + 16))(*(_QWORD *)(v4 - 136), v3+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * a1, v2);
}

uint64_t sub_100026C54@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100026C5C()
{
  return type metadata accessor for RootNavigationContext(0);
}

uint64_t sub_100026C64()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

void sub_100026C6C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  sub_100025F74(v5, v6, v4, a4);
}

uint64_t sub_100026C7C(uint64_t a1)
{
  uint64_t v1;

  return sub_100019D44(a1, 1, v1);
}

id sub_100026C98(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100026CA0()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_100026CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return v2
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(_QWORD *)(v1 + 72) * a1;
}

uint64_t sub_100026D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100015D74(a1, a2, 1, a4);
}

uint64_t sub_100026D08(uint64_t a1)
{
  uint64_t v1;

  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t sub_100026D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return RootView.navigate(to:)(v1, v2, a1);
}

void sub_100026D28(uint64_t a1@<X8>)
{
  uint64_t v1;

}

void sub_100026D30()
{
  void *v0;

}

uint64_t sub_100026D38(uint64_t a1)
{
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v1);
}

uint64_t sub_100026D54@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_100026D60@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100026D68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100026D70(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0, 0);
}

void sub_100026D7C(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;

  sub_10000EAA8(0, a2, v2);
}

uint64_t sub_100026D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100019D44(a1, a2, a3);
}

id sub_100026D9C(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_100026DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

id sub_100026DBC(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_100026DC4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100026DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return swift_dynamicCast(a1, a2, v4, a4, 0);
}

void sub_100026DD8()
{
  void *v0;

}

uint64_t sub_100026DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return RootView.navigate(to:)(a1, v3, a3);
}

uint64_t sub_100026DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

void *sub_100026E04@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t sub_100026E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1 + 8);
}

uint64_t sub_100026E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;

  return RunningWorkflow.init(workflowType:progress:waiting:runViewSource:stopHandler:)(v4, v6, v5, a4, v7, v8);
}

NSString sub_100026E3C()
{
  return String._bridgeToObjectiveC()();
}

BOOL sub_100026E44(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_100026E54()
{
  void *v0;

  return sub_100011544(v0);
}

uint64_t sub_100026E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

NSArray sub_100026E74()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100026E80()
{
  return static WFLog.subscript.getter();
}

void sub_100026E88()
{
  void *v0;

}

id sub_100026E90@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

void sub_100026E98(void *a1)
{
  sub_10001E994(a1, 1, 1, 0, 0);
}

uint64_t sub_100026EB0()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100026EB8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100026EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, 11, 2, a4, 49, 2, a7, 25, a9, a10, a11);
}

void sub_100026F0C()
{
  uint64_t v0;

}

uint64_t sub_100026F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 1, a3);
}

void sub_100026F2C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100026F4C()
{
  void *v0;

}

void sub_100026F54(id a1)
{

}

void sub_100026F70()
{
  void *v0;

}

uint64_t sub_100026F8C()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

NSString sub_100026F94()
{
  return String._bridgeToObjectiveC()();
}

void sub_100026FBC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_100026FC4(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2);
}

uint64_t sub_100026FCC()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_100026FD4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_100026FE0()
{
  uint64_t v0;

  return v0;
}

id sub_100026FEC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

NSString sub_100026FF4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100027008(char a1)
{
  int64_t v1;
  uint64_t v2;
  int64_t v3;
  int64_t v4;

  if (v1 <= v3)
    v4 = v3;
  else
    v4 = v1;
  return sub_100008FCC(a1, v4, 1, v2);
}

uint64_t sub_10002701C()
{
  return type metadata accessor for AppNameCache(0);
}

id sub_10002704C(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_100027054(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  return objc_msgSend(v2, a2, v3, v5 & 1, v4);
}

uint64_t sub_100027068()
{
  return 0;
}

id sub_1000270BC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_1000270D0()
{
  void *v0;

}

uint64_t sub_1000270D8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100015D74(v1, 0, 1, v0);
}

uint64_t sub_1000270EC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100015D74(v0, 0, 1, v1);
}

id sub_100027100(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 1, 0);
}

void sub_10002710C()
{
  uint64_t v0;

}

uint64_t sub_100027114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100027120()
{
  _QWORD *v0;

  return objc_opt_self(*v0);
}

id sub_100027128(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

uint64_t sub_100027130()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_100027138()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100027144()
{
  return type metadata accessor for GalleryNavigationDestination(0);
}

uint64_t sub_10002714C()
{
  return type metadata accessor for Logger(0);
}

uint64_t sub_100027154()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_10002715C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100027164()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10002716C(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastObjCClass(v1, a1);
}

id sub_100027178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(v1 + a1);
}

id sub_100027180()
{
  void *v0;

  return sub_100011544(v0);
}

unint64_t sub_100027190(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_1000271A8()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1000271B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return static String.localizedStringWithFormat(_:_:)(v1, v0, v2);
}

uint64_t sub_1000271C0()
{
  uint64_t v0;

  return v0;
}

id sub_1000271CC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_1000271D4(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 128), a2, 1, 0);
}

uint64_t sub_1000271E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_1000271F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_100027204()
{
  uint64_t v0;

  return swift_release(v0);
}

void sub_10002720C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_100026854(a1, a2, v2);
}

uint64_t sub_100027214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

NSString sub_100027234()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100027244()
{
  return sub_10001AD7C();
}

uint64_t sub_10002725C()
{
  uint64_t v0;
  uint64_t v1;

  return dispatch thunk of SidebarSection.destinations.getter(v0, v1);
}

id sub_10002726C()
{
  void *v0;

  return sub_100011544(v0);
}

uint64_t sub_10002727C()
{
  uint64_t v0;

  return swift_retain(v0);
}

void sub_10002729C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_1000272BC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

BOOL sub_1000272C4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1000272D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_1000272EC()
{
  uint64_t v0;

}

void sub_1000272F4()
{
  void *v0;

}

id sub_100027304()
{
  void *v0;

  return v0;
}

BOOL sub_10002730C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_10002732C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_10001222C(v2, a2);
}

uint64_t sub_100027334()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_10002733C(uint64_t a1)
{
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v1);
}

uint64_t sub_100027354()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100027360()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

void sub_100027368()
{
  void *v0;

}

uint64_t sub_100027390()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000273A0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000273A8()
{
  uint64_t v0;

  return v0;
}

void sub_1000273B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_10001222C(v2, a2);
}

uint64_t sub_1000273BC()
{
  uint64_t v0;

  return WFUserInterfaceFromViewController(v0);
}

BOOL sub_1000273C4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1000273D4()
{
  return type metadata accessor for RootPPTTestCase(0);
}

uint64_t sub_1000273DC()
{
  return type metadata accessor for OpenWorkflowOptions(0);
}

uint64_t sub_1000273E4()
{
  return type metadata accessor for LibraryViewController(0);
}

id sub_1000273EC()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return v0;
}

uint64_t sub_1000273FC()
{
  uint64_t v0;

  return WFUserInterfaceFromViewController(v0);
}

id sub_100027404(void *a1)
{
  return objc_msgSend(a1, "horizontalSizeClass");
}

void sub_100027410()
{
  sub_10001AC34();
}

uint64_t sub_100027418()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100027420()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_10002742C()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_100027434@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_100027440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_10002744C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100020E50(v0, v1);
}

uint64_t sub_100027458@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_100027464()
{
  uint64_t v0;

  return swift_release_n(v0, 2);
}

uint64_t sub_10002747C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100015D74(a1, 1, 1, a4);
  return type metadata accessor for MainActor(0);
}

uint64_t sub_100027498()
{
  uint64_t v0;
  uint64_t v1;

  return dispatch thunk of AppNameCache.name(forBundleIdentifier:)(v0, v1);
}

NSString sub_1000274A4()
{
  return String._bridgeToObjectiveC()();
}

id sub_1000274B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return *(id *)(a1 + a2);
}

void sub_1000274B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_100026854(a1, v1, v2);
}

id sub_1000274C4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2512), 1);
}

uint64_t sub_1000274D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1000274DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_10001222C(v2, a2);
}

void sub_1000274E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_100026854(v3, v4, a3);
}

void sub_1000274F0()
{
  void *v0;

}

void sub_1000274F8()
{
  void *v0;

}

id sub_100027504(uint64_t a1)
{
  void *v1;

  *(_QWORD *)(a1 + 16) = v1;
  return v1;
}

void sub_100027510()
{
  void *v0;

}

uint64_t sub_100027518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return swift_arrayInitWithCopy(a1, a2, v3, v2);
}

uint64_t sub_10002752C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a2;
  v5[5] = v2;
  v5[12] = v6;
  v5[13] = result;
  v5[8] = result;
  v5[9] = v3;
  v5[10] = v4;
  return result;
}

uint64_t sub_100027554()
{
  uint64_t v0;

  return swift_getObjectType(*(_QWORD *)(v0 - 8));
}

uint64_t sub_100027560@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_100027568()
{
  void *v0;

}

uint64_t sub_100027570()
{
  uint64_t v0;

  return swift_unknownObjectRetain(v0);
}

void sub_10002757C()
{
  void *v0;

}

void sub_100027588()
{
  void *v0;

}

uint64_t sub_100027594()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000275A0()
{
  uint64_t v0;

  return swift_task_dealloc(*(_QWORD *)(v0 + 128));
}

id sub_1000275C0()
{
  void *v0;

  return v0;
}

id sub_1000275C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100025188(a1, a2, a3, a4);
}

uint64_t sub_1000275D0()
{
  uint64_t v0;

  return Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_1000275DC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1936));
}

uint64_t sub_1000275F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

id sub_100027600(id a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + v1) = a1;
  return a1;
}

void sub_10002760C()
{
  uint64_t v0;

}

uint64_t sub_100027614()
{
  uint64_t v0;

  return swift_errorRelease(*(_QWORD *)(v0 + 40));
}

void sub_100027620()
{
  sub_10000D9FC();
}

uint64_t sub_100027628()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

void sub_100027634()
{
  void *v0;

}

id sub_100027640()
{
  void *v0;

  return v0;
}

void sub_100027648()
{
  void *v0;

}

id sub_100027650(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100027658()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_100027660(void *a1)
{

}

void sub_100027668()
{
  void *v0;

}

id sub_100027670(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100027678()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_100027680()
{
  uint64_t v0;

  return swift_bridgeObjectRetain_n(v0, 2);
}

uint64_t sub_10002768C()
{
  uint64_t v0;

  return v0;
}

void *sub_100027698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_1000276B8()
{
  return type metadata accessor for TriggerRootViewController(0);
}

uint64_t sub_1000276C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000276CC(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastClass(v1, a1);
}

uint64_t sub_1000276D8(uint64_t a1)
{
  uint64_t v1;

  return swift_dynamicCastClass(v1, a1);
}

uint64_t sub_1000276E4(uint64_t a1)
{
  return sub_1000276F0(a1, sub_10004729C);
}

uint64_t sub_1000276F0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v6 < 0)
      v20 = *v2;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    sub_10002CFB0();
    v7 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
    goto LABEL_30;
  }
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    sub_10002CFB0();
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v21 = v6;
    else
      v21 = v6 & 0xFFFFFFFFFFFFFF8;
    sub_10002CFB0();
    v11 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_20;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_20:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17, v18);
  }
  __break(1u);
  return result;
}

void sub_10002789C()
{
  off_1000D1260 = &off_1000BFBC0;
}

void sub_1000278B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v3[3];
  uint64_t v4;

  v1 = (void *)objc_opt_self(WFDatabase);
  v2 = objc_msgSend(v1, "createDatabaseForTesting");
  objc_msgSend(v1, "setDefaultDatabase:", v2);
  v3[2] = v2;
  v4 = v0;
  WFDatabase.performTransaction(reason:_:)(0xD000000000000017, 0x800000010009CC60, sub_10002CF80, v3);

}

void sub_100027970(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;
  unsigned __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  char *v28;
  id v29;
  id v30;

  v30 = 0;
  v2 = sub_10002CE7C(0x6F68532074736554, 0xEE00737475637472, 0xE959u, (uint64_t)&v30, a1);
  v3 = v30;
  v29 = v2;
  if (v2)
  {
    v4 = qword_1000D0528;
    v5 = v30;
    if (v4 != -1)
      swift_once(&qword_1000D0528, sub_10002789C);
    v6 = (char *)off_1000D1260;
    v7 = *((_QWORD *)off_1000D1260 + 2);
    if (v7)
    {
      v8 = (void *)objc_opt_self(WFWorkflowIcon);
      swift_bridgeObjectRetain(v6);
      v28 = v6;
      v9 = (unsigned __int16 *)(v6 + 48);
      while (1)
      {
        v11 = *((_QWORD *)v9 - 2);
        v10 = *((_QWORD *)v9 - 1);
        v12 = *v9;
        v13 = objc_allocWithZone((Class)WFWorkflowRecord);
        swift_bridgeObjectRetain(v10);
        v14 = objc_msgSend(v13, "init");
        sub_100025F74(v11, v10, v14, (SEL *)&selRef_setName_);
        v15 = objc_msgSend(v8, "randomPaletteColor");
        v16 = objc_allocWithZone((Class)WFWorkflowIcon);
        sub_10008B4C0((uint64_t)v15, v12, 0, 0xF000000000000000);
        v18 = v17;
        objc_msgSend(v14, "setIcon:", v17);

        v19 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowCreationOptions), "initWithRecord:", v14);
        v20 = objc_msgSend(v29, "identifier");
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        sub_100025F74(v21, v23, v19, (SEL *)&selRef_setCollectionIdentifier_);
        v30 = 0;
        v24 = objc_msgSend(a1, "createWorkflowWithOptions:error:", v19, &v30);
        v25 = v30;
        if (!v24)
          break;
        v9 += 12;

        if (!--v7)
        {

          swift_bridgeObjectRelease(v28);
          return;
        }
      }
      v27 = v25;
      swift_bridgeObjectRelease(v28);
      _convertNSErrorToError(_:)(v27);

      swift_willThrow();
    }

  }
  else
  {
    v26 = v30;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow();
  }
}

uint64_t sub_100027C6C(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;

  v4 = objc_msgSend((id)objc_opt_self(WFWindowSceneManager), "mainScene");
  if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "delegate"), v5, v6))
  {
    v7 = objc_opt_self(WFMainSceneDelegate);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8 && (v9 = objc_msgSend(v8, "rootViewController")) != 0)
    {
      v10 = v9;
      v11 = type metadata accessor for MainViewController(0);
      v12 = swift_dynamicCastClass(v10, v11);
      if (v12)
      {
        sub_100027D7C(a1, a2, v12);
        v14 = v13;
        v15 = v6;
        v6 = v10;
      }
      else
      {
        v14 = 0;
        v15 = v10;
      }
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v14 = 0;
    }
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

void sub_100027D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  v6._countAndFlagsBits = 0xD000000000000013;
  v6._object = (void *)0x800000010009C940;
  if (String.hasPrefix(_:)(v6))
  {
    sub_100027F14(a1, a2);
  }
  else
  {
    v7._countAndFlagsBits = 0x74756374726F6873;
    v7._object = (void *)0xEF72657761724473;
    if (String.hasPrefix(_:)(v7)
      || (v8._countAndFlagsBits = 0x74756374726F6873,
          v8._object = (void *)0xEF726F7469644573,
          String.hasPrefix(_:)(v8)))
    {
      sub_100028334(a1, a2, a3);
    }
    else
    {
      v9._object = (void *)0x800000010009C960;
      v9._countAndFlagsBits = 0xD000000000000010;
      if (String.hasPrefix(_:)(v9))
        sub_10002AD70(a1, a2, a3);
    }
  }
}

BOOL sub_100027F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  id v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD aBlock[5];
  _QWORD *v50;

  v37 = a2;
  v36 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin(v3);
  v41 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  __chkstk_darwin(v5);
  v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v44 - 8);
  v8 = __chkstk_darwin(v44);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for RootNavigationDestination(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v46 = v17;
  v47 = v2;
  WFDatabase.performTransaction(reason:_:)(0xD000000000000021, 0x800000010009C980, sub_10002B3F4, v45);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for RootNavigationDestination.allShortcuts(_:), v13);
  v18 = type metadata accessor for MainViewController(0);
  sub_100004998(&qword_1000D10C8, type metadata accessor for MainViewController, (uint64_t)&unk_100097290);
  RootView.navigate(to:)(v16, v18, v19);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = (void *)sub_10001AD7C();
  if (v20)
  {
    sub_100003B2C(0, &qword_1000D1290, OS_dispatch_queue_ptr);
    v34 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)(v10, 2.0);
    v35 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35(v10, v44);
    v21 = (_QWORD *)swift_allocObject(&unk_1000C0D40, 40, 7);
    v22 = v37;
    v21[2] = v36;
    v21[3] = v22;
    v21[4] = v20;
    aBlock[4] = sub_10002B748;
    v50 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000725C0;
    aBlock[3] = &unk_1000C0D58;
    v23 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(v22);
    v24 = v20;
    v25 = v38;
    static DispatchQoS.unspecified.getter(v24);
    v48 = _swiftEmptyArrayStorage;
    sub_100004998((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_100012E2C(&qword_1000D1298);
    sub_10002CEF4((unint64_t *)&qword_1000D3860, &qword_1000D1298);
    v27 = v41;
    v28 = v26;
    v29 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v28, v30);
    v31 = (void *)v34;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v12, v25, v27, v23);

    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
    v35(v12, v44);
    swift_release(v50);
  }
  else
  {

  }
  return v20 != 0;
}

void sub_100028334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  id v28;
  void *v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  NSString v33;
  id v34;
  _QWORD *v35;
  void (*v36)(uint64_t, _QWORD *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  NSURL *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t inited;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char **v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  unsigned int v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  NSString v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  id v113;
  NSString v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  id v212;
  NSString v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  Class isa;
  id v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t v284;
  id v285;
  NSString v286;
  id v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  void *v292;
  id v293;
  uint64_t v294;
  id v295;
  void (*v296)(id, uint64_t);
  id v297;
  id v298;
  NSString v299;
  uint64_t v300;
  id v301;
  id v302;
  uint64_t v303;
  Class v304;
  id v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  id v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  id v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  id v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  unint64_t v363;
  uint64_t v364;
  uint64_t v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unint64_t v374;
  unint64_t v375;
  uint64_t v376;
  uint64_t v377;
  id v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  unint64_t v386;
  unint64_t v387;
  uint64_t v388;
  uint64_t v389;
  id v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t v398;
  unint64_t v399;
  uint64_t v400;
  uint64_t v401;
  id v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  unint64_t v411;
  uint64_t v412;
  uint64_t v413;
  id v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  unint64_t v423;
  uint64_t v424;
  uint64_t v425;
  id v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  unint64_t v434;
  unint64_t v435;
  uint64_t v436;
  uint64_t v437;
  id v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  unint64_t v446;
  unint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  id v451;
  id v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  id v457;
  NSString v458;
  id v459;
  id v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  unint64_t v468;
  unint64_t v469;
  uint64_t v470;
  uint64_t v471;
  id v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  unint64_t v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  id v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  unint64_t v492;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  id v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  unint64_t v504;
  unint64_t v505;
  uint64_t v506;
  uint64_t v507;
  id v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  unint64_t v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t v519;
  id v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  unint64_t v529;
  uint64_t v530;
  uint64_t v531;
  id v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  uint64_t v543;
  id v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  unint64_t v552;
  unint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  id v559;
  NSString v560;
  id v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  id v566;
  NSString v567;
  id v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  id v573;
  NSString v574;
  id v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  id v580;
  NSString v581;
  id v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  id v587;
  NSString v588;
  id v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  id v594;
  NSString v595;
  id v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  id v601;
  NSString v602;
  id v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  id v608;
  NSString v609;
  id v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  id v614;
  id v615;
  NSString v616;
  id v617;
  uint64_t v618;
  void *v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  unint64_t v627;
  unint64_t v628;
  uint64_t v629;
  uint64_t v630;
  _QWORD *v631;
  _QWORD *v632;
  uint64_t v633;
  uint64_t *v634;
  uint64_t v635;
  id v636;
  NSString v637;
  id v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  _QWORD *v642;
  id v643;
  uint64_t v644;
  id v645;
  NSString v646;
  uint64_t v647;
  uint64_t v648;
  id v649;
  uint64_t v650;
  Class v651;
  uint64_t v652;
  uint64_t i;
  uint64_t v654;
  uint64_t v655;
  id v656;
  uint64_t v657;
  void *v658;
  id v659;
  id v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  unint64_t v668;
  unint64_t v669;
  uint64_t v670;
  uint64_t v671;
  id v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  unint64_t v680;
  unint64_t v681;
  uint64_t v682;
  uint64_t v683;
  id v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unint64_t v692;
  unint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  void *v697;
  id v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  unint64_t v706;
  unint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  id v711;
  id v712;
  uint64_t v713;
  uint64_t v714;
  id v715;
  id v716;
  id v717;
  id v718;
  id v719;
  void *v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  id v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t ObjectType;
  void *v730;
  id v731;
  uint64_t v732;
  uint64_t v733;
  id v734;
  id v735;
  id v736;
  __int128 v737;
  uint64_t v738;
  id v739;
  uint64_t v740;
  _QWORD *v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  unint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  char v752[160];

  v740 = a3;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v733 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E2C(&qword_1000D12A8);
  __chkstk_darwin(v9);
  v742 = (uint64_t)&v733 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v741 = (uint64_t *)((char *)&v733 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v733 - v16;
  v18 = _AXSAccessibilityEnabled(v15);
  v743 = a1;
  v744 = a2;
  if (v18 || _AXSApplicationAccessibilityEnabled())
  {
    v19 = static WFLog.subscript.getter(WFLogCategoryGeneral);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = v5;
      v23 = v17;
      v24 = v12;
      v25 = v11;
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      v27 = v26;
      v11 = v25;
      v12 = v24;
      v17 = v23;
      v5 = v22;
      swift_slowDealloc(v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    a1 = v743;
    a2 = v744;
  }
  v739 = v17;
  if (a1 == 0xD000000000000021 && a2 == 0x800000010009C9F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000021, 0x800000010009C9F0, 0) & 1) != 0)
  {
    sub_100003B2C(0, &qword_1000D12F0, NSBundle_ptr);
    v28 = sub_10002B754(0xD000000000000036, 0x800000010009CBD0);
    if (!v28)
      return;
    v29 = v28;
    v30 = v11;
    v31 = String._bridgeToObjectiveC()();
    v32 = String._bridgeToObjectiveC()();
    v33 = String._bridgeToObjectiveC()();
    v34 = objc_msgSend(v29, "URLForResource:withExtension:subdirectory:", v31, v32, v33);

    if (v34)
    {
      v35 = v741;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v36 = *(void (**)(uint64_t, _QWORD *, uint64_t))(v12 + 32);
      v37 = v742;
      v38 = v30;
      v36(v742, v35, v30);
      sub_100015D74(v37, 0, 1, v30);
      if (sub_100019D44(v37, 1, v30) != 1)
      {
        v39 = v12;
        v40 = v739;
        v36((uint64_t)v739, (_QWORD *)v37, v30);
        v41 = (void *)objc_opt_self(WFFileRepresentation);
        URL._bridgeToObjectiveC()(v42);
        v44 = v43;
        v45 = objc_msgSend(v41, "fileWithURL:options:", v43, 0);

        if (!v45)
        {
          (*(void (**)(id, uint64_t))(v39 + 8))(v40, v38);

          return;
        }
        objc_allocWithZone((Class)WFWorkflowFileDescriptor);
        v46 = v45;
        v47 = sub_10002BBCC(v46, 0xD000000000000011, 0x800000010009B6C0);
        v48 = objc_allocWithZone((Class)WFWorkflowFile);
        v49 = sub_10002BC34(v47);
        v292 = v49;
        if (!v49)
        {

          (*(void (**)(id, uint64_t))(v39 + 8))(v40, v38);
          return;
        }
        v745 = 0;
        v293 = objc_msgSend(v49, "recordRepresentationWithError:", &v745);
        v294 = v745;
        if (!v293)
        {
          v643 = (id)v745;
          v644 = _convertNSErrorToError(_:)(v294);

          swift_willThrow();
          swift_errorRelease(v644);

          (*(void (**)(id, uint64_t))(v39 + 8))(v739, v38);
          return;
        }
        v295 = v293;
        v296 = *(void (**)(id, uint64_t))(v39 + 8);
        v297 = (id)v745;
        v296(v739, v38);

        goto LABEL_163;
      }
    }
    else
    {
      v37 = v742;
      sub_100015D74(v742, 1, 1, v30);
    }

    sub_10001222C(v37, &qword_1000D12A8);
    return;
  }
  if (a1 == 0xD00000000000002CLL && a2 == 0x800000010009CA20
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD00000000000002CLL, 0x800000010009CA20, 0) & 1) != 0)
  {
    v745 = (uint64_t)_swiftEmptyArrayStorage;
    v50 = sub_100012E2C(&qword_1000D12C0);
    inited = swift_initStackObject(v50, &v748);
    *(_QWORD *)(inited + 32) = 0xD00000000000001BLL;
    v741 = (_QWORD *)(inited + 32);
    *(_OWORD *)(inited + 16) = xmmword_100096F50;
    *(_QWORD *)(inited + 40) = 0x800000010009CB90;
    *(_QWORD *)(inited + 48) = 0xD00000000000001BLL;
    *(_QWORD *)(inited + 56) = 0x800000010009CB50;
    *(_QWORD *)(inited + 64) = 0xD000000000000018;
    *(_QWORD *)(inited + 72) = 0x800000010009CB30;
    *(_QWORD *)(inited + 80) = 0xD00000000000001FLL;
    v739 = (id)inited;
    *(_QWORD *)(inited + 88) = 0x800000010009CBB0;
    v52 = objc_msgSend(objc_allocWithZone((Class)WFBundledActionProvider), "init");
    v53 = objc_msgSend(v52, "createAllAvailableActionsIncludingMissingActions:", 0);

    if (!v53)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
        goto LABEL_170;
      goto LABEL_22;
    }
    v54 = sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
    v55 = sub_10002CF30();
    v56 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v53, v54, v55);

    while (2)
    {
      v57 = swift_bridgeObjectRetain(v56);
      v58 = sub_10004613C(v57);
      swift_bridgeObjectRelease(v56);
      v747 = (uint64_t)v58;
      sub_10002C0E8(&v747);
      swift_bridgeObjectRelease(v56);
      v59 = v747;
      if (v747 < 0 || (v747 & 0x4000000000000000) != 0)
        goto LABEL_161;
      v60 = *(_QWORD *)(v747 + 16);
      if (!v60)
      {
LABEL_162:
        swift_release(v59);
        swift_setDeallocating(v739);
        sub_10002BE14();
        v714 = v745;
        v715 = objc_allocWithZone((Class)WFWorkflow);
        v716 = sub_10002BCF4(1953719636, 0xE400000000000000, 0, 0, 0, 0, v714);
        v295 = objc_msgSend(v716, "record");

LABEL_163:
        a2 = v744;
        goto LABEL_164;
      }
LABEL_26:
      if (v60 < 1)
      {
        __break(1u);
LABEL_170:
        if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        {
          sub_10002BE90((uint64_t)_swiftEmptyArrayStorage);
          v56 = v730;
          continue;
        }
LABEL_22:
        v56 = &_swiftEmptySetSingleton;
        continue;
      }
      break;
    }
    v742 = 0;
    v61 = 0;
    v62 = 0;
    v63 = v59 & 0xC000000000000001;
    v64 = &selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_;
    while (1)
    {
      if (v63)
        v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v59);
      else
        v65 = *(id *)(v59 + 8 * v62 + 32);
      v66 = v65;
      v67 = objc_msgSend(v65, v64[343]);
      if ((!v67 || (v68 = v67, v69 = objc_msgSend(v67, "isInstalled"), v68, v69))
        && objc_msgSend(v66, "visibleForUse:", 0))
      {
        v70 = v63;
        v71 = v66;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71, v72, v73, v74, v75, v76, v77, v78);
        v80 = *(_QWORD *)((v745 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v79 = *(_QWORD *)((v745 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v80 >= v79 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
        v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v71);
        specialized Array._endMutation()(v81, v82);
        v83 = objc_msgSend(v71, "createAccompanyingActions");
        if (v83)
        {
          v84 = v83;
          v85 = sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
          v86 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v84, v85);

          sub_1000276F0(v86, sub_100047440);
        }
        if (v61 == 5 * (v61 / 5))
        {
          if (v742 % 4 < 0)
            goto LABEL_159;
          v87 = v741[2 * (v742 % 4) + 1];
          v88 = (void *)objc_opt_self(WFActionRegistry);
          swift_bridgeObjectRetain(v87);
          v89 = objc_msgSend(v88, "sharedRegistry");
          v90 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v87);
          v91 = objc_msgSend(v89, "createActionWithIdentifier:serializedParameters:", v90, 0);

          v92 = v91;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92, v93, v94, v95, v96, v97, v98, v99);
          v101 = *(_QWORD *)((v745 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v100 = *(_QWORD *)((v745 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v101 >= v100 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
          v102 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v92);
          specialized Array._endMutation()(v102, v103);
          v104 = objc_msgSend(v92, "createAccompanyingActions");
          if (v104)
          {
            v105 = v104;
            v106 = sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
            v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v105, v106);

            sub_1000276F0(v107, sub_100047440);
          }

          v108 = __OFADD__(v742++, 1);
          if (v108)
            goto LABEL_160;
          v63 = v70;
        }
        else
        {
          v63 = v70;

        }
        v108 = __OFADD__(v61++, 1);
        v64 = &selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_;
        if (v108)
        {
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          v713 = swift_bridgeObjectRetain(v59);
          v60 = _CocoaArrayWrapper.endIndex.getter(v713);
          swift_release(v59);
          if (!v60)
            goto LABEL_162;
          goto LABEL_26;
        }
      }
      else
      {

      }
      if (v60 == ++v62)
        goto LABEL_162;
    }
  }
  if (a1 == 0xD000000000000029 && a2 == 0x800000010009CA50
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000029, 0x800000010009CA50, 0) & 1) != 0)
  {
    v747 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10002B7C4(0, 100000, 0xD000000000000010, 0x800000010009CAC0);
    v745 = v109;
    v110 = sub_100012E2C(&qword_1000D12B0);
    sub_10002CEF4(&qword_1000D12B8, &qword_1000D12B0);
    v739 = (id)String.init<A>(_:)(&v745, v110, v111);
    v741 = v112;
    v742 = objc_opt_self(WFActionRegistry);
    v113 = objc_msgSend((id)v742, "sharedRegistry");
    v114 = String._bridgeToObjectiveC()();
    v115 = objc_msgSend(v113, "createActionWithIdentifier:serializedParameters:", v114, 0);

    v116 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v116, v117, v118, v119, v120, v121, v122, v123);
    v125 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v124 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v125 >= v124 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v124 > 1, v125 + 1, 1);
    v126 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v116);
    specialized Array._endMutation()(v126, v127);
    v128 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v128, v129, v130, v131, v132, v133, v134, v135);
    v137 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v136 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v137 >= v136 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v136 > 1, v137 + 1, 1);
    v138 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v137, v128);
    specialized Array._endMutation()(v138, v139);
    v140 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v140, v141, v142, v143, v144, v145, v146, v147);
    v149 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v148 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v149 >= v148 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v148 > 1, v149 + 1, 1);
    v150 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v149, v140);
    specialized Array._endMutation()(v150, v151);
    v152 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152, v153, v154, v155, v156, v157, v158, v159);
    v161 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v160 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v161 >= v160 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v160 > 1, v161 + 1, 1);
    v162 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v161, v152);
    specialized Array._endMutation()(v162, v163);
    v164 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v164, v165, v166, v167, v168, v169, v170, v171);
    v173 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v172 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v173 >= v172 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v172 > 1, v173 + 1, 1);
    v174 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v173, v164);
    specialized Array._endMutation()(v174, v175);
    v176 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v176, v177, v178, v179, v180, v181, v182, v183);
    v185 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v184 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v185 >= v184 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v184 > 1, v185 + 1, 1);
    v186 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v185, v176);
    specialized Array._endMutation()(v186, v187);
    v188 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v188, v189, v190, v191, v192, v193, v194, v195);
    v197 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v196 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v197 >= v196 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v196 > 1, v197 + 1, 1);
    v198 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v197, v188);
    specialized Array._endMutation()(v198, v199);
    v200 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v200, v201, v202, v203, v204, v205, v206, v207);
    v209 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v208 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v209 >= v208 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v208 > 1, v209 + 1, 1);
    v210 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v209, v200);
    specialized Array._endMutation()(v210, v211);
    v212 = objc_msgSend((id)v742, "sharedRegistry");
    v213 = String._bridgeToObjectiveC()();
    v738 = sub_100012E2C(&qword_1000D12D0);
    v214 = swift_initStackObject(v738, &v750);
    v737 = xmmword_100096E80;
    *(_OWORD *)(v214 + 16) = xmmword_100096E80;
    v745 = 0xD000000000000010;
    v746 = 0x800000010009CB70;
    AnyHashable.init<A>(_:)(&v745, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v214 + 96) = &type metadata for String;
    v215 = (uint64_t)v739;
    v216 = v741;
    *(_QWORD *)(v214 + 72) = v739;
    *(_QWORD *)(v214 + 80) = v216;
    swift_bridgeObjectRetain(v216);
    v217 = Dictionary.init(dictionaryLiteral:)(v214, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v217);
    v219 = objc_msgSend(v212, "createActionWithIdentifier:serializedParameters:", v213, isa);

    v220 = objc_msgSend(v219, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v220, v221, v222, v223, v224, v225, v226, v227);
    v229 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v228 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v229 >= v228 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v228 > 1, v229 + 1, 1);
    v230 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v229, v220);
    specialized Array._endMutation()(v230, v231);
    v232 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v232, v233, v234, v235, v236, v237, v238, v239);
    v241 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v240 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v241 >= v240 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v240 > 1, v241 + 1, 1);
    v242 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v241, v232);
    specialized Array._endMutation()(v242, v243);
    v244 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v244, v245, v246, v247, v248, v249, v250, v251);
    v253 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v252 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v253 >= v252 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v252 > 1, v253 + 1, 1);
    v254 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v253, v244);
    specialized Array._endMutation()(v254, v255);
    v256 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v256, v257, v258, v259, v260, v261, v262, v263);
    v265 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v264 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v265 >= v264 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v264 > 1, v265 + 1, 1);
    v266 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v265, v256);
    specialized Array._endMutation()(v266, v267);
    v268 = objc_msgSend(v115, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v268, v269, v270, v271, v272, v273, v274, v275);
    v277 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v276 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v277 >= v276 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v276 > 1, v277 + 1, 1);
    v278 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v277, v268);
    specialized Array._endMutation()(v278, v279);
    v280 = sub_10002B98C(v215, (uint64_t)v741, 10);
    v281 = v280;
    v282 = v280[2];
    if (v282)
    {
      v741 = v219;
      v745 = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v282);
      v283 = v281 + 5;
      do
      {
        v284 = *v283;
        v285 = objc_allocWithZone((Class)WFPropertyListParameterValue);
        swift_bridgeObjectRetain(v284);
        v286 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v284);
        v287 = objc_msgSend(v285, "initWithString:", v286);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v288);
        v289 = *(_QWORD *)(v745 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v289);
        v290 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v289, v287);
        specialized ContiguousArray._endMutation()(v290);
        v283 += 2;
        --v282;
      }
      while (v282);
      v291 = (_QWORD *)v745;
      swift_bridgeObjectRelease(v281);
      v219 = v741;
    }
    else
    {
      swift_bridgeObjectRelease(v280);
      v291 = _swiftEmptyArrayStorage;
    }
    v298 = objc_msgSend((id)v742, "sharedRegistry");
    v299 = String._bridgeToObjectiveC()();
    v300 = swift_initStackObject(v738, &v749);
    *(_OWORD *)(v300 + 16) = v737;
    v745 = 0x736D6574494657;
    v746 = 0xE700000000000000;
    AnyHashable.init<A>(_:)(&v745, &type metadata for String, &protocol witness table for String);
    sub_100003B2C(0, &qword_1000D12D8, WFArrayParameterState_ptr);
    v301 = sub_10002BA84((uint64_t)v291);
    v302 = objc_msgSend(v301, "serializedRepresentation");

    if (v302)
    {
      *(_QWORD *)(v300 + 96) = swift_getObjectType(v302);
      *(_QWORD *)(v300 + 72) = v302;
      v303 = Dictionary.init(dictionaryLiteral:)(v300, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v304 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v303);
      v305 = objc_msgSend(v298, "createActionWithIdentifier:serializedParameters:", v299, v304);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v306, v307, v308, v309, v310, v311, v312, v313);
      v315 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v314 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v315 >= v314 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v314 > 1, v315 + 1, 1);
      v316 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v315, v305);
      specialized Array._endMutation()(v316, v317);
      v318 = objc_msgSend(v219, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v318, v319, v320, v321, v322, v323, v324, v325);
      v327 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v326 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      a2 = v744;
      if (v327 >= v326 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v326 > 1, v327 + 1, 1);
      v328 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v327, v318);
      specialized Array._endMutation()(v328, v329);
      v330 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v330, v331, v332, v333, v334, v335, v336, v337);
      v339 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v338 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v339 >= v338 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v338 > 1, v339 + 1, 1);
      v340 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v339, v330);
      specialized Array._endMutation()(v340, v341);
      v342 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v342, v343, v344, v345, v346, v347, v348, v349);
      v351 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v350 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v351 >= v350 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v350 > 1, v351 + 1, 1);
      v352 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v351, v342);
      specialized Array._endMutation()(v352, v353);
      v354 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v354, v355, v356, v357, v358, v359, v360, v361);
      v363 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v362 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v363 >= v362 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v362 > 1, v363 + 1, 1);
      v364 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v363, v354);
      specialized Array._endMutation()(v364, v365);
      v366 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v366, v367, v368, v369, v370, v371, v372, v373);
      v375 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v374 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v375 >= v374 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v374 > 1, v375 + 1, 1);
      v376 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v375, v366);
      specialized Array._endMutation()(v376, v377);
      v378 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v378, v379, v380, v381, v382, v383, v384, v385);
      v387 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v386 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v387 >= v386 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v386 > 1, v387 + 1, 1);
      v388 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v387, v378);
      specialized Array._endMutation()(v388, v389);
      v390 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v390, v391, v392, v393, v394, v395, v396, v397);
      v399 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v398 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v399 >= v398 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v398 > 1, v399 + 1, 1);
      v400 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v399, v390);
      specialized Array._endMutation()(v400, v401);
      v402 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v402, v403, v404, v405, v406, v407, v408, v409);
      v411 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v410 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v411 >= v410 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v410 > 1, v411 + 1, 1);
      v412 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v411, v402);
      specialized Array._endMutation()(v412, v413);
      v414 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v414, v415, v416, v417, v418, v419, v420, v421);
      v423 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v422 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v423 >= v422 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v422 > 1, v423 + 1, 1);
      v424 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v423, v414);
      specialized Array._endMutation()(v424, v425);
      v426 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v426, v427, v428, v429, v430, v431, v432, v433);
      v435 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v434 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v435 >= v434 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v434 > 1, v435 + 1, 1);
      v436 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v435, v426);
      specialized Array._endMutation()(v436, v437);
      v438 = objc_msgSend(v115, "copyForDuplicating");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v438, v439, v440, v441, v442, v443, v444, v445);
      v447 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v446 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v447 >= v446 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v446 > 1, v447 + 1, 1);
      v448 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v447, v438);
      specialized Array._endMutation()(v448, v449);
      v450 = v747;
      v451 = objc_allocWithZone((Class)WFWorkflow);
      v452 = sub_10002BCF4(1953719636, 0xE400000000000000, 0, 0, 0, 0, v450);
      v295 = objc_msgSend(v452, "record");

      goto LABEL_164;
    }
    __break(1u);
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  if ((a1 != 0xD000000000000033 || a2 != 0x800000010009CA80)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000033, 0x800000010009CA80, 0) & 1) == 0)
  {
    v295 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowRecord), "init");
    goto LABEL_164;
  }
  v747 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10002B7C4(0, 100000, 0xD000000000000010, 0x800000010009CAC0);
  v745 = v453;
  v454 = sub_100012E2C(&qword_1000D12B0);
  sub_10002CEF4(&qword_1000D12B8, &qword_1000D12B0);
  v738 = String.init<A>(_:)(&v745, v454, v455);
  *(_QWORD *)&v737 = v456;
  v739 = (id)objc_opt_self(WFActionRegistry);
  v457 = objc_msgSend(v739, "sharedRegistry");
  v458 = String._bridgeToObjectiveC()();
  v459 = objc_msgSend(v457, "createActionWithIdentifier:serializedParameters:", v458, 0);

  v460 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v460, v461, v462, v463, v464, v465, v466, v467);
  v469 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v468 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v469 >= v468 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v468 > 1, v469 + 1, 1);
  v470 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v469, v460);
  specialized Array._endMutation()(v470, v471);
  v472 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v472, v473, v474, v475, v476, v477, v478, v479);
  v481 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v480 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v481 >= v480 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v480 > 1, v481 + 1, 1);
  v482 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v481, v472);
  specialized Array._endMutation()(v482, v483);
  v484 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v484, v485, v486, v487, v488, v489, v490, v491);
  v493 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v492 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v493 >= v492 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v492 > 1, v493 + 1, 1);
  v494 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v493, v484);
  specialized Array._endMutation()(v494, v495);
  v496 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v496, v497, v498, v499, v500, v501, v502, v503);
  v505 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v504 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v505 >= v504 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v504 > 1, v505 + 1, 1);
  v506 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v505, v496);
  specialized Array._endMutation()(v506, v507);
  v508 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v508, v509, v510, v511, v512, v513, v514, v515);
  v517 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v516 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v517 >= v516 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v516 > 1, v517 + 1, 1);
  v518 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v517, v508);
  specialized Array._endMutation()(v518, v519);
  v520 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v520, v521, v522, v523, v524, v525, v526, v527);
  v529 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v528 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v529 >= v528 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v528 > 1, v529 + 1, 1);
  v530 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v529, v520);
  specialized Array._endMutation()(v530, v531);
  v532 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v532, v533, v534, v535, v536, v537, v538, v539);
  v541 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v540 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v541 >= v540 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v540 > 1, v541 + 1, 1);
  v542 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v541, v532);
  specialized Array._endMutation()(v542, v543);
  v736 = v459;
  v544 = objc_msgSend(v459, "copyForDuplicating");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v544, v545, v546, v547, v548, v549, v550, v551);
  v553 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v552 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v553 >= v552 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v552 > 1, v553 + 1, 1);
  v554 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v553, v544);
  specialized Array._endMutation()(v554, v555);
  v556 = sub_100012E2C(&qword_1000D12C0);
  v557 = swift_initStackObject(v556, v752);
  *(_OWORD *)(v557 + 16) = xmmword_1000973E0;
  *(_QWORD *)(v557 + 32) = 6647375;
  *(_QWORD *)(v557 + 40) = 0xE300000000000000;
  *(_QWORD *)(v557 + 48) = 7305044;
  *(_QWORD *)(v557 + 56) = 0xE300000000000000;
  *(_QWORD *)(v557 + 64) = 0x6565726854;
  *(_QWORD *)(v557 + 72) = 0xE500000000000000;
  *(_QWORD *)(v557 + 80) = 1920298822;
  *(_QWORD *)(v557 + 88) = 0xE400000000000000;
  *(_QWORD *)(v557 + 96) = 1702259014;
  *(_QWORD *)(v557 + 104) = 0xE400000000000000;
  *(_QWORD *)(v557 + 112) = 7891283;
  *(_QWORD *)(v557 + 120) = 0xE300000000000000;
  *(_QWORD *)(v557 + 128) = 0x6E65766553;
  *(_QWORD *)(v557 + 136) = 0xE500000000000000;
  *(_QWORD *)(v557 + 144) = 0x7468676945;
  *(_QWORD *)(v557 + 152) = 0xE500000000000000;
  sub_100003B2C(0, &qword_1000D12C8, WFChooseFromMenuArrayParameterState_ptr);
  v745 = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(8);
  v558 = *(_QWORD *)(v557 + 40);
  v559 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v558);
  v560 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v558);
  v561 = objc_msgSend(v559, "initWithChooseFromMenuString:", v560);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v562);
  v563 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v563);
  v564 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v563, v561);
  specialized ContiguousArray._endMutation()(v564);
  v565 = *(_QWORD *)(v557 + 56);
  v566 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v565);
  v567 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v565);
  v568 = objc_msgSend(v566, "initWithChooseFromMenuString:", v567);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v569);
  v570 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v570);
  v571 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v570, v568);
  specialized ContiguousArray._endMutation()(v571);
  v572 = *(_QWORD *)(v557 + 72);
  v573 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v572);
  v574 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v572);
  v575 = objc_msgSend(v573, "initWithChooseFromMenuString:", v574);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v576);
  v577 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v577);
  v578 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v577, v575);
  specialized ContiguousArray._endMutation()(v578);
  v579 = *(_QWORD *)(v557 + 88);
  v580 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v579);
  v581 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v579);
  v582 = objc_msgSend(v580, "initWithChooseFromMenuString:", v581);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v583);
  v584 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v584);
  v585 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v584, v582);
  specialized ContiguousArray._endMutation()(v585);
  v586 = *(_QWORD *)(v557 + 104);
  v587 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v586);
  v588 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v586);
  v589 = objc_msgSend(v587, "initWithChooseFromMenuString:", v588);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v590);
  v591 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v591);
  v592 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v591, v589);
  specialized ContiguousArray._endMutation()(v592);
  v593 = *(_QWORD *)(v557 + 120);
  v594 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v593);
  v595 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v593);
  v596 = objc_msgSend(v594, "initWithChooseFromMenuString:", v595);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v597);
  v598 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v598);
  v599 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v598, v596);
  specialized ContiguousArray._endMutation()(v599);
  v600 = *(_QWORD *)(v557 + 136);
  v601 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v600);
  v602 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v600);
  v603 = objc_msgSend(v601, "initWithChooseFromMenuString:", v602);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v604);
  v605 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v605);
  v606 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v605, v603);
  specialized ContiguousArray._endMutation()(v606);
  v607 = *(_QWORD *)(v557 + 152);
  v742 = v557;
  v608 = objc_allocWithZone((Class)WFPropertyListParameterValue);
  swift_bridgeObjectRetain(v607);
  v609 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v607);
  v610 = objc_msgSend(v608, "initWithChooseFromMenuString:", v609);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v611);
  v612 = *(_QWORD *)(v745 + 16);
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v612);
  v613 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v612, v610);
  specialized ContiguousArray._endMutation()(v613);
  v614 = sub_10002BA84(v745);
  v615 = objc_msgSend(v739, "sharedRegistry");
  v616 = String._bridgeToObjectiveC()();
  v617 = objc_msgSend(v615, "createActionWithIdentifier:serializedParameters:", v616, 0);

  v618 = objc_opt_self(WFControlFlowAction);
  v619 = (void *)swift_dynamicCastObjCClassUnconditional(v617, v618, 0, 0, 0);
  v735 = v614;
  objc_msgSend(v619, "setParameterState:forKey:", v614, WFChooseFromMenuListItemsKey);
  v734 = v617;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v734, v620, v621, v622, v623, v624, v625, v626);
  v628 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v627 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v628 >= v627 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v627 > 1, v628 + 1, 1);
  v741 = v619;
  v629 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v628, v619);
  specialized Array._endMutation()(v629, v630);
  v631 = sub_10002B98C(v738, v737, 10);
  v632 = v631;
  v633 = v631[2];
  if (v633)
  {
    v745 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v633);
    v634 = v632 + 5;
    do
    {
      v635 = *v634;
      v636 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain(v635);
      v637 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v635);
      v638 = objc_msgSend(v636, "initWithString:", v637);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v639);
      v640 = *(_QWORD *)(v745 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v640);
      v641 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v640, v638);
      specialized ContiguousArray._endMutation()(v641);
      v634 += 2;
      --v633;
    }
    while (v633);
    v642 = (_QWORD *)v745;
    swift_bridgeObjectRelease(v632);
  }
  else
  {
    swift_bridgeObjectRelease(v631);
    v642 = _swiftEmptyArrayStorage;
  }
  v645 = objc_msgSend(v739, "sharedRegistry");
  v646 = String._bridgeToObjectiveC()();
  v647 = sub_100012E2C(&qword_1000D12D0);
  v648 = swift_initStackObject(v647, &v751);
  *(_OWORD *)(v648 + 16) = xmmword_100096E80;
  v745 = 0x736D6574494657;
  v746 = 0xE700000000000000;
  AnyHashable.init<A>(_:)(&v745, &type metadata for String, &protocol witness table for String);
  sub_100003B2C(0, &qword_1000D12D8, WFArrayParameterState_ptr);
  v649 = sub_10002BA84((uint64_t)v642);
  v302 = objc_msgSend(v649, "serializedRepresentation");

  if (!v302)
    goto LABEL_173;
  *(_QWORD *)(v648 + 96) = swift_getObjectType(v302);
  *(_QWORD *)(v648 + 72) = v302;
  v650 = Dictionary.init(dictionaryLiteral:)(v648, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v651 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v650);
  v739 = objc_msgSend(v645, "createActionWithIdentifier:serializedParameters:", v646, v651);

  sub_100003B2C(0, &qword_1000D12E0, WFVariableString_ptr);
  v652 = v742;
  sub_1000660D0(0, 1, v742);
  sub_1000660D0(7uLL, 1, v652);
  for (i = 0; i != 128; i += 16)
  {
    v654 = *(_QWORD *)(v742 + i + 32);
    v655 = *(_QWORD *)(v742 + i + 40);
    swift_bridgeObjectRetain(v655);
    v656 = objc_msgSend(v741, "createAccompanyingActionWithMode:", 1);
    v657 = objc_opt_self(WFChooseFromMenuAction);
    v658 = (void *)swift_dynamicCastObjCClassUnconditional(v656, v657, 0, 0, 0);
    v659 = sub_10002BB08(v654, v655);
    objc_msgSend(v658, "setItemTitle:", v659);

    v660 = v658;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v660, v661, v662, v663, v664, v665, v666, v667);
    v669 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v668 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v669 >= v668 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v668 > 1, v669 + 1, 1);
    v670 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v669, v660);
    specialized Array._endMutation()(v670, v671);
    v672 = objc_msgSend(v739, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v672, v673, v674, v675, v676, v677, v678, v679);
    v681 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v680 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v681 >= v680 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v680 > 1, v681 + 1, 1);
    v682 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v681, v672);
    specialized Array._endMutation()(v682, v683);

  }
  swift_setDeallocating(v742);
  sub_10002BE14();
  v684 = objc_msgSend(v741, "createAccompanyingActionWithMode:", 2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v684, v685, v686, v687, v688, v689, v690, v691);
  v693 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v692 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v693 >= v692 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v692 > 1, v693 + 1, 1);
  v694 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v693, v684);
  specialized Array._endMutation()(v694, v695);
  v696 = 14;
  a2 = v744;
  v697 = v736;
  do
  {
    v698 = objc_msgSend(v697, "copyForDuplicating");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v698, v699, v700, v701, v702, v703, v704, v705);
    v707 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v706 = *(_QWORD *)((v747 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v707 >= v706 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v706 > 1, v707 + 1, 1);
    v708 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v707, v698);
    specialized Array._endMutation()(v708, v709);
    --v696;
  }
  while (v696);
  v710 = v747;
  v711 = objc_allocWithZone((Class)WFWorkflow);
  v712 = sub_10002BCF4(1953719636, 0xE400000000000000, 0, 0, 0, 0, v710);
  v295 = objc_msgSend(v712, "record");

LABEL_164:
  v717 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v718 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowCreationOptions), "initWithRecord:", v295);
  v745 = 0;
  v719 = objc_msgSend(v717, "createWorkflowWithOptions:error:", v718, &v745);
  v302 = (id)v745;
  if (!v719)
  {
LABEL_174:
    v731 = v302;
    v732 = _convertNSErrorToError(_:)(v302);

    swift_willThrow();
    swift_unexpectedError(v732, "Shortcuts/PPTDispatcher.swift", 29, 1, 254);
    __break(1u);
    swift_release(v747);
    __break(1u);
    return;
  }
  v720 = v719;
  v745 = v740;
  v721 = type metadata accessor for MainViewController(0);
  sub_100004998(&qword_1000D1020, type metadata accessor for MainViewController, (uint64_t)&unk_100097268);
  v723 = v722;
  v724 = v302;
  v725 = WorkflowOpener.openWorkflow(_:)(v720, v721, v723);
  if (v725)
  {
    v727 = v725;
    v728 = v726;
    ObjectType = swift_getObjectType(v725);
    dispatch thunk of EditorView.performScrollingTest(named:)(v743, a2, ObjectType, v728);
    swift_unknownObjectRelease(v727);

  }
  else
  {

  }
}

uint64_t sub_10002AD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];

  v30[1] = a3;
  v5 = sub_100012E2C(&qword_1000D10F8);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[0] = type metadata accessor for RootNavigationDestination(0);
  v8 = *(_QWORD *)(v30[0] - 8);
  __chkstk_darwin(v30[0]);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RootNavigationContext.TransitionType(0);
  __chkstk_darwin(v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E2C(&qword_1000D1088);
  __chkstk_darwin(v14);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RootNavigationContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v21 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  RootPPTTestCase.init(name:parameters:)(a1, a2, v21);
  v22 = type metadata accessor for RootPPTTestCase(0);
  v23 = sub_100015D74((uint64_t)v16, 0, 1, v22);
  static RootNavigationContext.TransitionType.default.getter(v23);
  RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)(1, 1, 1, 0, v13, v16);
  v24 = enum case for GalleryNavigationDestination.home(_:);
  v25 = type metadata accessor for GalleryNavigationDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v10, v24, v25);
  sub_100015D74((uint64_t)v10, 0, 1, v25);
  v26 = v30[0];
  (*(void (**)(char *, _QWORD, _QWORD))(v8 + 104))(v10, enum case for RootNavigationDestination.gallery(_:), v30[0]);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v7, v20, v17);
  sub_100015D74((uint64_t)v7, 0, 1, v17);
  v27 = type metadata accessor for MainViewController(0);
  sub_100004998(&qword_1000D10C8, type metadata accessor for MainViewController, (uint64_t)&unk_100097290);
  RootView.navigate(to:with:)(v10, v7, v27, v28);
  sub_10001222C((uint64_t)v7, &qword_1000D10F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return 1;
}

id sub_10002B058()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTDispatcher();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10002B0A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTDispatcher();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PPTDispatcher()
{
  return objc_opt_self(WFPPTDispatcher);
}

void sub_10002B0FC(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  id v32;
  id v33;

  v33 = 0;
  v2 = sub_10002CE7C(0xD000000000000018, 0x800000010009C9D0, 0xE9AEu, (uint64_t)&v33, a1);
  v3 = v33;
  v32 = v2;
  if (v2)
  {
    v4 = qword_1000D0528;
    v5 = v33;
    if (v4 != -1)
      swift_once(&qword_1000D0528, sub_10002789C);
    v6 = 0;
    v7 = (char *)off_1000D1260;
    while (1)
    {
      v8 = *((_QWORD *)v7 + 2);
      if (v8)
        break;
LABEL_10:
      if (v6++ == 10)
      {

        return;
      }
    }
    v30 = v6;
    v9 = (void *)objc_opt_self(WFWorkflowIcon);
    swift_bridgeObjectRetain(v7);
    v31 = v7;
    v10 = (unsigned __int16 *)(v7 + 48);
    while (1)
    {
      v12 = *((_QWORD *)v10 - 2);
      v11 = *((_QWORD *)v10 - 1);
      v13 = *v10;
      v14 = objc_allocWithZone((Class)WFWorkflowRecord);
      swift_bridgeObjectRetain(v11);
      v15 = objc_msgSend(v14, "init");
      sub_100025F74(v12, v11, v15, (SEL *)&selRef_setName_);
      v16 = objc_msgSend(v9, "randomPaletteColor");
      v17 = objc_allocWithZone((Class)WFWorkflowIcon);
      sub_10008B4C0((uint64_t)v16, v13, 0, 0xF000000000000000);
      v19 = v18;
      objc_msgSend(v15, "setIcon:", v18);

      v20 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowCreationOptions), "initWithRecord:", v15);
      v21 = objc_msgSend(v32, "identifier");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      sub_100025F74(v22, v24, v20, (SEL *)&selRef_setCollectionIdentifier_);
      v33 = 0;
      v25 = objc_msgSend(a1, "createWorkflowWithOptions:nameCollisionBehavior:error:", v20, 0, &v33);
      v26 = v33;
      if (!v25)
        break;
      v10 += 12;

      if (!--v8)
      {
        swift_bridgeObjectRelease(v31);
        v7 = (char *)off_1000D1260;
        v6 = v30;
        goto LABEL_10;
      }
    }
    v28 = v26;
    swift_bridgeObjectRelease(v31);
    _convertNSErrorToError(_:)(v28);

    swift_willThrow();
  }
  else
  {
    v29 = v33;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow();
  }
}

void sub_10002B3F4()
{
  uint64_t v0;

  sub_10002B0FC(*(void **)(v0 + 16));
}

double sub_10002B40C(void **a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  _QWORD *v24;
  void **v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  void (*v44)();
  _QWORD *v45;
  _QWORD v46[2];

  v34 = a1;
  v36 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  aBlock = a1;
  v41 = a2;
  v46[0] = 0x5F7473696C5FLL;
  v46[1] = 0xE600000000000000;
  v18 = sub_100014C08();
  v19 = StringProtocol.contains<A>(_:)(v46, &type metadata for String, &type metadata for String, v18, v18);
  sub_100012A90();
  v21 = v20;
  dispatch thunk of LibraryDataSource.layoutMode.setter((v19 & 1) == 0);
  swift_release(v21);
  sub_100003B2C(0, &qword_1000D1290, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v15, 2.0);
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  v24 = (_QWORD *)swift_allocObject(&unk_1000C0D90, 40, 7);
  v25 = v34;
  v24[2] = a3;
  v24[3] = v25;
  v24[4] = a2;
  v44 = sub_10002BBA4;
  v45 = v24;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000725C0;
  v43 = &unk_1000C0DA8;
  v26 = _Block_copy(&aBlock);
  v27 = a3;
  v28 = swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v28);
  v46[0] = _swiftEmptyArrayStorage;
  sub_100004998((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100012E2C(&qword_1000D1298);
  sub_10002CEF4((unint64_t *)&qword_1000D3860, &qword_1000D1298);
  v30 = v29;
  v31 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)(v46, v30, v32);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v31);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  v23(v17, v35);
  *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  return result;
}

uint64_t sub_10002B71C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_10002B748()
{
  uint64_t v0;

  return sub_10002B40C(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

id sub_10002B754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithPath:", v5);

  return v6;
}

void sub_10002B7C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease(a4);
    return;
  }
  sub_10003EA14(0, v5 & ~(v5 >> 63), 0);
  if (a2 >= a1 && (v5 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v11 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0)
      v11 = a3 & 0xFFFFFFFFFFFFLL;
    v38 = v4;
    v39 = v11;
    while (v10 != v5)
    {
      if (!v39)
        goto LABEL_22;
      v12 = String.count.getter(a3, a4);
      if (v12 < 0)
        goto LABEL_23;
      v20 = v12;
      if (!v12)
        goto LABEL_24;
      v21 = sub_10002CFA0(v12, v13, v14, v15, v16, v17, v18, v19, v37, v38, v39, v40);
      v28 = ((unint64_t)v40 * (unsigned __int128)v20) >> 64;
      if (v20 > v40 * v20)
      {
        v29 = -(uint64_t)v20 % v20;
        if (v29 > v40 * v20)
        {
          do
            v21 = sub_10002CFA0(v21, v28, v22, v23, v24, v25, v26, v27, v37, v38, v39, v40);
          while (v29 > v40 * v20);
          v28 = ((unint64_t)v40 * (unsigned __int128)v20) >> 64;
        }
      }
      v30 = String.index(_:offsetBy:)(15, v28, a3, a4);
      v31 = String.subscript.getter(v30, a3, a4);
      v33 = v32;
      v35 = _swiftEmptyArrayStorage[2];
      v34 = _swiftEmptyArrayStorage[3];
      if (v35 >= v34 >> 1)
        sub_10003EA14(v34 > 1, v35 + 1, 1);
      ++v10;
      _swiftEmptyArrayStorage[2] = v35 + 1;
      v36 = &_swiftEmptyArrayStorage[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
      if (v10 == v5)
      {
        swift_bridgeObjectRelease(a4);
        return;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_26:
  __break(1u);
}

_QWORD *sub_10002B98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *result;

  if (a3 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a3, &type metadata for String);
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain(a2);
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain(a2);
      }
    }
    else
    {
      swift_bridgeObjectRelease(a2);
      return &_swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

id sub_10002BA84(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  sub_100003B2C(0, &qword_1000D1300, WFPropertyListParameterValue_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithValues:", isa);

  return v5;
}

id sub_10002BB08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithString:", v5);

  return v6;
}

uint64_t sub_10002BB78()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10002BBA4()
{
  uint64_t v0;

  sub_100075380(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_10002BBCC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v7 = objc_msgSend(v3, "initWithFile:name:", a1, v6);

  return v7;
}

id sub_10002BC34(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v8;

  v8 = 0;
  v3 = objc_msgSend(v1, "initWithDescriptor:error:", a1, &v8);
  v4 = v8;
  if (v3)
  {
    v5 = v8;
  }
  else
  {
    v6 = v8;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow();
  }

  return v3;
}

id sub_10002BCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  NSString v12;
  NSString v13;
  NSString v14;
  NSArray v15;
  id v16;

  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v12 = 0;
    if (a4)
    {
LABEL_3:
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a4);
      if (a6)
        goto LABEL_4;
LABEL_8:
      v14 = 0;
      if (a7)
        goto LABEL_5;
LABEL_9:
      v15.super.isa = 0;
      goto LABEL_10;
    }
  }
  v13 = 0;
  if (!a6)
    goto LABEL_8;
LABEL_4:
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  if (!a7)
    goto LABEL_9;
LABEL_5:
  sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
  v15.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a7);
LABEL_10:
  v16 = objc_msgSend(v7, "initWithName:description:associatedAppBundleIdentifier:actions:", v12, v13, v14, v15.super.isa);

  return v16;
}

uint64_t sub_10002BE14()
{
  uint64_t v0;

  swift_arrayDestroy(v0 + 32, *(_QWORD *)(v0 + 16), &type metadata for String);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10002BE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  type metadata accessor for WFWorkflowTypeName(0);
  swift_arrayDestroy(v0 + 32, v1, v2);
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_10002BE90(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  id v10;
  void *v11;
  BOOL v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_100012E2C(&qword_1000D12F8);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (!v2)
  {
LABEL_4:
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_31:
      swift_bridgeObjectRelease(v1);
      return;
    }
    goto LABEL_15;
  }
LABEL_11:
  if (v1 < 0)
    v7 = v1;
  else
    v7 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_31;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v29 = v1;
  v30 = v1 & 0xC000000000000001;
  v26 = v1 + 32;
  v27 = v1 & 0xFFFFFFFFFFFFFF8;
  v28 = v5;
  while (1)
  {
    if (v30)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v1);
    }
    else
    {
      if (v8 >= *(_QWORD *)(v27 + 16))
        goto LABEL_34;
      v10 = *(id *)(v26 + 8 * v8);
    }
    v11 = v10;
    v12 = __OFADD__(v8++, 1);
    if (v12)
      break;
    v13 = NSObject._rawHashValue(seed:)(v4[5]);
    v14 = -1 << *((_BYTE *)v4 + 32);
    v15 = v13 & ~v14;
    v16 = v15 >> 6;
    v17 = *(_QWORD *)&v9[8 * (v15 >> 6)];
    v18 = 1 << v15;
    if (((1 << v15) & v17) != 0)
    {
      sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v11);

      if ((v20 & 1) != 0)
      {
LABEL_26:

        v5 = v28;
        v1 = v29;
        goto LABEL_30;
      }
      v21 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v21;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v9[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if ((v17 & (1 << v15)) == 0)
          break;
        v22 = *(id *)(v4[6] + 8 * v15);
        v23 = static NSObject.== infix(_:_:)(v22, v11);

        if ((v23 & 1) != 0)
          goto LABEL_26;
      }
      v5 = v28;
      v1 = v29;
    }
    *(_QWORD *)&v9[8 * v16] = v18 | v17;
    *(_QWORD *)(v4[6] + 8 * v15) = v11;
    v24 = v4[2];
    v12 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (v12)
      goto LABEL_33;
    v4[2] = v25;
LABEL_30:
    if (v8 == v5)
      goto LABEL_31;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_10002C0E8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100047800(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10002C160(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10002C160(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  Swift::Int v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  Swift::Int v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v40;
  uint64_t v41;
  uint64_t *v42;
  Swift::Int v43;
  Swift::Int v44;
  uint64_t *v45;
  uint64_t v46;
  Swift::Int v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  Swift::Int v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  Swift::Int v131;
  Swift::Int v132;
  Swift::Int v133;
  uint64_t v134;
  uint64_t v135;
  void **v136;
  int v137;
  Swift::Int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_10002C9BC(0, v3, 1, a1);
      return;
    }
    goto LABEL_147;
  }
  v5 = v4;
  sub_1000655F0(v3 / 2);
  v136 = v6;
  v141 = v7;
  v134 = v3;
  v130 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    v67 = _swiftEmptyArrayStorage[2];
LABEL_109:
    if (v67 < 2)
    {
LABEL_123:
      v126 = swift_bridgeObjectRelease(v10);
      if (v3 >= -1)
      {
        *(_QWORD *)((v141 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()(v126, v127);
        swift_bridgeObjectRelease(v141);
        return;
      }
      goto LABEL_152;
    }
    v117 = *v130;
    while (1)
    {
      v118 = v67 - 2;
      if (v67 < 2)
        break;
      if (!v117)
        goto LABEL_156;
      v119 = *(_QWORD *)&v10[16 * v118 + 32];
      v120 = *(_QWORD *)&v10[16 * v67 + 24];
      sub_10002CB38((id *)(v117 + 8 * v119), (id *)(v117 + 8 * *(_QWORD *)&v10[16 * v67 + 16]), v117 + 8 * v120, v136);
      if (v1)
        goto LABEL_121;
      if (v120 < v119)
        goto LABEL_142;
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      {
        sub_100046A9C((uint64_t)v10);
        v10 = v123;
      }
      if (v118 >= *((_QWORD *)v10 + 2))
        goto LABEL_143;
      v121 = &v10[16 * v118 + 32];
      *(_QWORD *)v121 = v119;
      *((_QWORD *)v121 + 1) = v120;
      v122 = *((_QWORD *)v10 + 2);
      if (v67 > v122)
        goto LABEL_144;
      memmove(&v10[16 * v67 + 16], &v10[16 * v67 + 32], 16 * (v122 - v67));
      *((_QWORD *)v10 + 2) = v122 - 1;
      v67 = v122 - 1;
      v3 = v134;
      if (v122 <= 2)
        goto LABEL_123;
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v129 = *a1 - 8;
  v10 = (char *)_swiftEmptyArrayStorage;
  v131 = v5;
  v140 = *a1;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    v133 = v8;
    if (v8 + 1 < v3)
    {
      v13 = v10;
      v14 = *(void **)(v9 + 8 * v8);
      v15 = *(id *)(v9 + 8 * v12);
      v16 = v14;
      v17 = objc_msgSend(v15, "localizedName");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      v21 = objc_msgSend(v16, "localizedName");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      if (v18 == v22 && v20 == v24)
      {
        v137 = 0;
        v24 = v20;
      }
      else
      {
        v137 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v24, 1);
      }
      v3 = v134;
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v24);

      v26 = v133;
      v12 = v133 + 2;
      v9 = v140;
      if (v133 + 2 < v134)
      {
        while (1)
        {
          v27 = v9 + 8 * v26;
          v28 = *(void **)(v27 + 8);
          v29 = *(id *)(v27 + 16);
          v30 = v28;
          v31 = objc_msgSend(v29, "localizedName");
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v34 = v33;

          v35 = objc_msgSend(v30, "localizedName");
          v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
          v38 = v37;

          if (v32 == v36 && v34 == v38)
          {
            v40 = 0;
            v38 = v34;
          }
          else
          {
            v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v36, v38, 1);
          }
          swift_bridgeObjectRelease(v34);
          swift_bridgeObjectRelease(v38);

          v3 = v134;
          if (((v137 ^ v40) & 1) != 0)
            break;
          v41 = v26 + 3;
          ++v26;
          v9 = v140;
          if (v41 >= v134)
          {
            v12 = v134;
            goto LABEL_22;
          }
        }
        v12 = v26 + 2;
        v9 = v140;
      }
LABEL_22:
      v10 = v13;
      v5 = v131;
      if ((v137 & 1) != 0)
      {
        v11 = v133;
        if (v12 < v133)
          goto LABEL_149;
        if (v133 < v12)
        {
          v42 = (uint64_t *)(v129 + 8 * v12);
          v43 = v12;
          v44 = v133;
          v45 = (uint64_t *)(v9 + 8 * v133);
          do
          {
            if (v44 != --v43)
            {
              if (!v9)
                goto LABEL_155;
              v46 = *v45;
              *v45 = *v42;
              *v42 = v46;
            }
            ++v44;
            --v42;
            ++v45;
          }
          while (v44 < v43);
        }
      }
      else
      {
        v11 = v133;
      }
    }
    if (v12 < v3)
    {
      if (__OFSUB__(v12, v11))
        goto LABEL_146;
      if (v12 - v11 < v5)
      {
        if (__OFADD__(v11, v5))
          goto LABEL_150;
        if (v11 + v5 >= v3)
          v47 = v3;
        else
          v47 = v11 + v5;
        if (v47 < v11)
          goto LABEL_151;
        if (v12 != v47)
        {
          v128 = v10;
          v48 = v129 + 8 * v12;
          v132 = v47;
          do
          {
            v49 = *(void **)(v9 + 8 * v12);
            v135 = v48;
            v138 = v12;
            while (1)
            {
              v50 = *(void **)v48;
              v51 = v49;
              v52 = v50;
              v53 = objc_msgSend(v51, "localizedName");
              v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
              v56 = v55;

              v57 = objc_msgSend(v52, "localizedName");
              v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
              v60 = v59;

              if (v54 == v58 && v56 == v60)
                break;
              v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v58, v60, 1);

              swift_bridgeObjectRelease(v56);
              swift_bridgeObjectRelease(v60);
              if ((v62 & 1) == 0)
                goto LABEL_52;
              v63 = v138;
              v9 = v140;
              if (!v140)
                goto LABEL_153;
              v64 = *(void **)v48;
              v49 = *(void **)(v48 + 8);
              *(_QWORD *)v48 = v49;
              *(_QWORD *)(v48 + 8) = v64;
              v48 -= 8;
              if (v138 == ++v11)
                goto LABEL_53;
            }

            swift_bridgeObjectRelease_n(v56, 2);
LABEL_52:
            v63 = v138;
            v9 = v140;
LABEL_53:
            v12 = v63 + 1;
            v48 = v135 + 8;
            v11 = v133;
          }
          while (v12 != v132);
          v12 = v132;
          v10 = v128;
          v5 = v131;
        }
      }
    }
    if (v12 < v11)
      goto LABEL_145;
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    {
      sub_1000469D0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v10 = v115;
    }
    v66 = *((_QWORD *)v10 + 2);
    v65 = *((_QWORD *)v10 + 3);
    v67 = v66 + 1;
    v9 = v140;
    if (v66 >= v65 >> 1)
    {
      sub_1000469D0(v65 > 1, v66 + 1, 1, v10);
      v9 = v140;
      v10 = v116;
    }
    *((_QWORD *)v10 + 2) = v67;
    v68 = v10 + 32;
    v69 = &v10[16 * v66 + 32];
    *(_QWORD *)v69 = v11;
    *((_QWORD *)v69 + 1) = v12;
    v139 = v12;
    if (v66)
      break;
    v67 = 1;
LABEL_103:
    v3 = v134;
    v8 = v139;
    if (v139 >= v134)
      goto LABEL_109;
  }
  while (1)
  {
    v70 = v67 - 1;
    if (v67 >= 4)
    {
      v75 = &v68[2 * v67];
      v76 = *(v75 - 8);
      v77 = *(v75 - 7);
      v81 = __OFSUB__(v77, v76);
      v78 = v77 - v76;
      if (v81)
        goto LABEL_130;
      v80 = *(v75 - 6);
      v79 = *(v75 - 5);
      v81 = __OFSUB__(v79, v80);
      v73 = v79 - v80;
      v74 = v81;
      if (v81)
        goto LABEL_131;
      v82 = v67 - 2;
      v83 = &v68[2 * v67 - 4];
      v85 = *v83;
      v84 = v83[1];
      v81 = __OFSUB__(v84, v85);
      v86 = v84 - v85;
      if (v81)
        goto LABEL_132;
      v81 = __OFADD__(v73, v86);
      v87 = v73 + v86;
      if (v81)
        goto LABEL_134;
      if (v87 >= v78)
      {
        v105 = &v68[2 * v70];
        v107 = *v105;
        v106 = v105[1];
        v81 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v81)
          goto LABEL_140;
        v98 = v73 < v108;
        goto LABEL_92;
      }
    }
    else
    {
      if (v67 != 3)
      {
        v99 = *((_QWORD *)v10 + 4);
        v100 = *((_QWORD *)v10 + 5);
        v81 = __OFSUB__(v100, v99);
        v92 = v100 - v99;
        v93 = v81;
        goto LABEL_86;
      }
      v72 = *((_QWORD *)v10 + 4);
      v71 = *((_QWORD *)v10 + 5);
      v81 = __OFSUB__(v71, v72);
      v73 = v71 - v72;
      v74 = v81;
    }
    if ((v74 & 1) != 0)
      goto LABEL_133;
    v82 = v67 - 2;
    v88 = &v68[2 * v67 - 4];
    v90 = *v88;
    v89 = v88[1];
    v91 = __OFSUB__(v89, v90);
    v92 = v89 - v90;
    v93 = v91;
    if (v91)
      goto LABEL_135;
    v94 = &v68[2 * v70];
    v96 = *v94;
    v95 = v94[1];
    v81 = __OFSUB__(v95, v96);
    v97 = v95 - v96;
    if (v81)
      goto LABEL_137;
    if (__OFADD__(v92, v97))
      goto LABEL_139;
    if (v92 + v97 >= v73)
    {
      v98 = v73 < v97;
LABEL_92:
      if (v98)
        v70 = v82;
      goto LABEL_94;
    }
LABEL_86:
    if ((v93 & 1) != 0)
      goto LABEL_136;
    v101 = &v68[2 * v70];
    v103 = *v101;
    v102 = v101[1];
    v81 = __OFSUB__(v102, v103);
    v104 = v102 - v103;
    if (v81)
      goto LABEL_138;
    if (v104 < v92)
      goto LABEL_103;
LABEL_94:
    v109 = v70 - 1;
    if (v70 - 1 >= v67)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    if (!v9)
      goto LABEL_154;
    v110 = &v68[2 * v109];
    v111 = *v110;
    v112 = &v68[2 * v70];
    v113 = v112[1];
    sub_10002CB38((id *)(v9 + 8 * *v110), (id *)(v9 + 8 * *v112), v9 + 8 * v113, v136);
    if (v1)
      break;
    if (v113 < v111)
      goto LABEL_127;
    if (v70 > *((_QWORD *)v10 + 2))
      goto LABEL_128;
    *v110 = v111;
    v68[2 * v109 + 1] = v113;
    v114 = *((_QWORD *)v10 + 2);
    if (v70 >= v114)
      goto LABEL_129;
    v67 = v114 - 1;
    memmove(&v68[2 * v70], v112 + 2, 16 * (v114 - 1 - v70));
    *((_QWORD *)v10 + 2) = v114 - 1;
    v9 = v140;
    if (v114 <= 2)
      goto LABEL_103;
  }
LABEL_121:
  v124 = swift_bridgeObjectRelease(v10);
  if (v134 < -1)
    goto LABEL_148;
  *(_QWORD *)((v141 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v124, v125);
  swift_bridgeObjectRelease(v141);
}

uint64_t sub_10002C9BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v5 = *(void **)(v25 + 8 * a3);
      v6 = v23;
      v24 = v4;
      v26 = a3;
      while (1)
      {
        v7 = *(void **)v4;
        v8 = v5;
        v9 = v7;
        v10 = objc_msgSend(v8, "localizedName");
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;

        v14 = objc_msgSend(v9, "localizedName");
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

        if (v11 == v15 && v13 == v17)
          break;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v17, 1);

        swift_bridgeObjectRelease(v13);
        result = swift_bridgeObjectRelease(v17);
        v20 = v26;
        if ((v19 & 1) != 0)
        {
          if (!v25)
          {
            __break(1u);
            return result;
          }
          v21 = *(void **)v4;
          v5 = *(void **)(v4 + 8);
          *(_QWORD *)v4 = v5;
          *(_QWORD *)(v4 + 8) = v21;
          v4 -= 8;
          if (v26 != ++v6)
            continue;
        }
        goto LABEL_13;
      }

      result = swift_bridgeObjectRelease_n(v13, 2);
      v20 = v26;
LABEL_13:
      a3 = v20 + 1;
      v4 = v24 + 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_10002CB38(id *a1, id *a2, unint64_t a3, void **a4)
{
  id *v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  BOOL v13;
  void **v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  void **v29;
  void **v30;
  BOOL v31;
  id *v34;
  void *v35;
  void *v36;
  id *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  id *v50;
  BOOL v51;
  BOOL v52;
  unint64_t v55;
  void **v56;
  unint64_t v57;
  void *v58;
  unint64_t v59;
  unint64_t v60;
  id *v61;
  id *v62;

  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_100065BF8(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v56 = a4;
    v12 = &a4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      v14 = a4;
      goto LABEL_52;
    }
    v34 = (id *)(a3 - 8);
    v55 = (unint64_t)v7;
    while (1)
    {
      v60 = (unint64_t)v12;
      v35 = *--v12;
      v62 = v6;
      v37 = v6 - 1;
      v36 = *(v6 - 1);
      v38 = v35;
      v39 = v36;
      v58 = v38;
      v40 = objc_msgSend(v38, "localizedName");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v44 = objc_msgSend(v39, "localizedName");
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

      if (v41 == v45 && v43 == v47)
      {
        v49 = 0;
        v47 = v43;
      }
      else
      {
        v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v45, v47, 1);
      }
      v50 = v34 + 1;
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v47);

      if ((v49 & 1) != 0)
      {
        v51 = v50 != v62 || v34 >= v62;
        v6 = v37;
        v12 = (void **)v60;
        if (!v51)
          goto LABEL_47;
      }
      else
      {
        v52 = v50 != (id *)v60 || (unint64_t)v34 >= v60;
        v37 = v12;
        v6 = v62;
        if (!v52)
          goto LABEL_47;
      }
      *v34 = *v37;
LABEL_47:
      --v34;
      if ((unint64_t)v6 <= v55 || v12 <= v56)
      {
        v14 = v56;
        goto LABEL_52;
      }
    }
  }
  sub_100065BF8(a1, a2 - a1, a4);
  v12 = &a4[v9];
  v13 = (unint64_t)v6 >= a3 || v8 < 8;
  v14 = a4;
  if (!v13)
  {
    v57 = a3;
    v59 = (unint64_t)&a4[v9];
    while (1)
    {
      v15 = v7;
      v61 = v6;
      v16 = *v14;
      v17 = *v6;
      v18 = v16;
      v19 = objc_msgSend(v17, "localizedName");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v23 = objc_msgSend(v18, "localizedName");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      if (v20 == v24 && v22 == v26)
        break;
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v26, 1);

      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v26);
      if ((v28 & 1) == 0)
        goto LABEL_14;
      v29 = v61;
      v6 = v61 + 1;
      v30 = v15;
      v31 = v15 == v61;
LABEL_15:
      v12 = (void **)v59;
      if (!v31)
        *v30 = *v29;
      v7 = v30 + 1;
      if ((unint64_t)v14 >= v59 || (unint64_t)v6 >= v57)
        goto LABEL_22;
    }

    swift_bridgeObjectRelease_n(v22, 2);
LABEL_14:
    v29 = v14;
    v30 = v15;
    v31 = v15 == v14++;
    v6 = v61;
    goto LABEL_15;
  }
LABEL_22:
  v6 = v7;
LABEL_52:
  sub_100065BF8(v14, v12 - v14, v6);
  return 1;
}

id sub_10002CE7C(uint64_t a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, void *a5)
{
  NSString v9;
  id v10;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = objc_msgSend(a5, "createFolderWithName:icon:error:", v9, a3, a4);

  return v10;
}

void sub_10002CEF4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1000143E4(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }
  sub_100018188();
}

unint64_t sub_10002CF30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D12E8;
  if (!qword_1000D12E8)
  {
    v1 = sub_100003B2C(255, &qword_1000D3180, WFAction_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000D12E8);
  }
  return result;
}

void sub_10002CF80()
{
  uint64_t v0;

  sub_100027970(*(void **)(v0 + 16));
}

uint64_t sub_10002CFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a12 = 0;
  return swift_stdlib_random(&a12, 8);
}

uint64_t sub_10002CFB0()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_10002CFC0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD v11[5];
  uint64_t v12;

  if (VCIsInternalBuild())
  {
    v2 = objc_msgSend(a1, "windowScene");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "statusBarManager");
      if (v4)
      {
        v5 = v4;
        v6 = swift_allocObject(&unk_1000C0E00, 24, 7);
        *(_QWORD *)(v6 + 16) = a1;
        v11[4] = sub_10002D278;
        v12 = v6;
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 1107296256;
        v11[2] = sub_100007DA8;
        v11[3] = &unk_1000C0E18;
        v7 = _Block_copy(v11);
        v8 = v12;
        v9 = a1;
        objc_msgSend(v5, "setDebugMenuHandler:", v7, swift_release(v8).n128_f64[0]);
        _Block_release(v7);

      }
      type metadata accessor for DebugStatusBarManager(0);
      v10 = (void *)static DebugStatusBarManager.shared.getter();
      dispatch thunk of DebugStatusBarManager.addWindowScene(_:)(v3);

    }
  }
}

void sub_10002D0E8(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "rootViewController");
  if (v1)
  {
    v2 = v1;
    type metadata accessor for DebugMenuViewController(0);
    sub_1000306F8();

  }
}

uint64_t sub_10002D14C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = VCIsInternalBuild();
  if ((_DWORD)result)
  {
    type metadata accessor for LogStreamManager(0);
    v1 = static LogStreamManager.shared.getter();
    dispatch thunk of LogStreamManager.start()();
    swift_release(v1);
    type metadata accessor for AttributeGraphProfiler(0);
    v2 = static AttributeGraphProfiler.shared.getter();
    dispatch thunk of AttributeGraphProfiler.start()();
    return swift_release(v2);
  }
  return result;
}

id sub_10002D1B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugUtilities();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10002D204()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugUtilities()
{
  return objc_opt_self(WFDebugUtilities);
}

uint64_t sub_10002D254()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002D278()
{
  uint64_t v0;

  sub_10002D0E8(*(void **)(v0 + 16));
}

id sub_10002D2B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Toolbar();
  return objc_msgSendSuper2(&v2, "backgroundColor");
}

void sub_10002D330(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for Toolbar();
  objc_msgSendSuper2(&v3, "setBackgroundColor:", a1);
  sub_10002D37C();

}

void sub_10002D37C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "backgroundColor");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIImage), "wf_imageWithColor:", v1);

  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v0, "setShadowImage:forToolbarPosition:", v3, 0);
  objc_msgSend(v0, "setBackgroundImage:forToolbarPosition:barMetrics:", v3, 0, 0);
  v4 = objc_msgSend(v0, "backgroundColor");
  objc_msgSend(v0, "setBarTintColor:", v4);

}

id sub_10002D460(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Toolbar();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10002D4C4(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for Toolbar();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_10002D538()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Toolbar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10002D56C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint) = a1;

}

void sub_10002D580()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar;
  v2 = type metadata accessor for Toolbar();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_backgroundColor] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009C2C0, "Shortcuts/FloatingToolbarViewController.swift", 45, 2, 45, 0);
  __break(1u);
}

id sub_10002D638()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_10002D714()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  unsigned int v17;
  double v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char aBlock[8];
  uint64_t v32;
  uint64_t v33;
  void (*v34)();
  uint64_t v35;
  void *v36;
  _OWORD v37[2];
  CGRect v38;

  v1 = objc_msgSend(v0, "parentViewController");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100026DBC((uint64_t)v1, "object");
    if (v3)
    {
      v4 = v3;
      _bridgeAnyObjectToAny(_:)(v37, v3);
      swift_unknownObjectRelease(v4);
    }
    else
    {
      memset(v37, 0, sizeof(v37));
    }
    sub_10002DD54((uint64_t)v37, (uint64_t)aBlock);
    if (v33)
    {
      v5 = sub_100003B2C(0, &qword_1000D13A0, WFKeyboard_ptr);
      if ((swift_dynamicCast(&v36, aBlock, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
      {
        v6 = v36;
        v7 = objc_msgSend(v2, "view");
        if (v7)
        {
          v8 = v7;
          objc_msgSend(v6, "keyboardFrameInView:", v7);
          v10 = v9;
          v12 = v11;
          v14 = v13;
          v16 = v15;

          v17 = objc_msgSend(v6, "isVisible");
          v18 = 0.0;
          if (v17)
          {
            v38.origin.x = v10;
            v38.origin.y = v12;
            v38.size.width = v14;
            v38.size.height = v16;
            v18 = 0.0 - CGRectGetHeight(v38);
          }
          objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint], "setConstant:", v18);
          objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar], "setNeedsLayout");
          v19 = objc_msgSend(v6, "animationDuration");
          v21 = v20;
          v22 = (_QWORD)sub_100026DBC((uint64_t)v19, "animationCurve") << 16;
          v23 = (void *)objc_opt_self(UIView);
          v24 = sub_100026B2C((uint64_t)&unk_1000C0EA0, 24);
          *(_QWORD *)(v24 + 16) = v0;
          v34 = sub_10002DE00;
          v35 = v24;
          v25 = sub_10002DE50((uint64_t)sub_100007DA8, v29, (char)_NSConcreteStackBlock, 1107296256, v32, v33);
          v26 = v35;
          v27 = v0;
          swift_release(v26);
          v34 = (void (*)())static NavigationDestinationEntity.defaultQuery.setter;
          v35 = 0;
          v28 = sub_10002DE50((uint64_t)sub_100014BC8, v30, (char)_NSConcreteStackBlock, 1107296256, v32, v33);
          objc_msgSend(v23, "animateWithDuration:delay:options:animations:completion:", v22, v25, v28, v21, 0.0);
          _Block_release(v28);
          _Block_release(v25);

        }
        else
        {
          __break(1u);
        }
      }
      else
      {

      }
    }
    else
    {

      sub_10002DD9C((uint64_t)aBlock);
    }
  }
}

void sub_10002D9D0(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "superview");

    objc_msgSend(v3, "layoutIfNeeded");
  }
  else
  {
    __break(1u);
  }
}

double sub_10002DA94(char a1, char a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  double result;
  _QWORD v11[5];
  uint64_t v12;

  v5 = sub_100026B2C((uint64_t)&unk_1000C0E50, 25);
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = a1;
  if ((a2 & 1) != 0)
  {
    v6 = (void *)objc_opt_self(UIView);
    v11[4] = sub_10002DD48;
    v12 = v5;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100007DA8;
    v11[3] = &unk_1000C0E68;
    v7 = _Block_copy(v11);
    v8 = v12;
    v9 = v2;
    swift_retain(v5);
    swift_release(v8);
    objc_msgSend(v6, "animateWithDuration:animations:", v7, UINavigationControllerHideShowBarDuration);
    swift_release(v5);
    _Block_release(v7);
  }
  else
  {
    sub_10002DBC0(v2, a1 & 1);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_10002DBC0(void *a1, char a2)
{
  id v4;
  void *v5;
  double v6;
  id v7;
  id v8;

  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v5 = v4;
    v6 = 1.0;
    if ((a2 & 1) != 0)
      v6 = 0.0;
    objc_msgSend(v4, "setAlpha:", v6);

    v7 = objc_msgSend(a1, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setHidden:", a2 & 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10002DC64()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.FloatingToolbarViewController", 39, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void sub_10002DCB4(uint64_t a1, void *a2)
{
  Class isa;

  sub_100003B2C(0, (unint64_t *)&unk_1000D30E0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, "setItems:", isa);

}

uint64_t sub_10002DD24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10002DD48()
{
  uint64_t v0;

  sub_10002DBC0(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10002DD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C((uint64_t *)&unk_1000D3650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002DD9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E2C((uint64_t *)&unk_1000D3650);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002DDDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002DE00()
{
  uint64_t v0;

  sub_10002D9D0(*(void **)(v0 + 16));
}

id sub_10002DE18()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 520));
}

id sub_10002DE24()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2912), v1);
}

id sub_10002DE34(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_10002DE40()
{
  void *v0;

  return objc_msgSend(v0, "view");
}

void *sub_10002DE50@<X0>(uint64_t a1@<X8>, uint64_t a2, char aBlock, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a5 = a1;
  a6 = v6;
  return _Block_copy(&aBlock);
}

void sub_10002DE5C()
{
  void *v0;

}

id sub_10002DE64(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 3024));
}

uint64_t sub_10002DE6C(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

void sub_10002DE78()
{
  void *v0;

}

void sub_10002DE80()
{
  void *v0;

}

uint64_t sub_10002DE88()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

void sub_10002DE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_100018190();
  v4 = type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine(0);
  sub_10002724C();
  __chkstk_darwin(v5);
  sub_100026BF0();
  v6 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation(0);
  __chkstk_darwin(v6);
  sub_100018488();
  v7 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100018470();
  if ((byte_1000DADD0 & 1) == 0)
  {
    v16 = v3;
    v17 = v4;
    byte_1000DADD0 = 1;
    v9 = sub_100012E2C(&qword_1000D13C8);
    v10 = *(_QWORD *)(type metadata accessor for Tips.ConfigurationOption(0) - 8);
    v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 3 * *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
    *(_OWORD *)(v11 + 16) = xmmword_100096F70;
    static Tips.ConfigurationOption.DisplayFrequency.system.getter();
    static Tips.ConfigurationOption.displayFrequency(_:)(v2);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
    static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter(v12);
    static Tips.ConfigurationOption.datastoreLocation(_:)(v1);
    v13 = sub_1000271C0();
    v15 = v14(v13);
    static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter(v15);
    static Tips.ConfigurationOption.analyticsEngine(_:)(v0);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0, v17);
    static Tips.configure(_:)(v11);
    sub_100030628();
  }
  sub_100018094();
}

void sub_10002E054(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  int v9;

  v5 = type metadata accessor for TipType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100018488();
  v7 = sub_1000271C0();
  v8(v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v2, v5);
  if (v9 == enum case for TipType.useSiriToRunShortcut(_:))
  {
    *(_QWORD *)(a2 + 24) = sub_1000305F8();
    *(_QWORD *)(a2 + 32) = sub_100030160(&qword_1000D13A8, type metadata accessor for TipController.UseSiriToRunShortcutTip);
    sub_100014688((_QWORD *)a2);
    sub_10002E15C(a1);
  }
  else if (v9 == enum case for TipType.none(_:))
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
    __break(1u);
  }
}

void sub_10002E15C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _OWORD v8[2];

  v2 = sub_1000305F8();
  LOBYTE(v8[0]) = objc_msgSend((id)objc_opt_self(WFSiriSettings), "isHeySiriEnabled");
  Tips.Parameter.init<A>(_:_:_:_:)(v2, 0xD000000000000011, 0x800000010009CE00, v8, _swiftEmptyArrayStorage, &type metadata for Bool, v2, &protocol witness table for Bool, &protocol witness table for Bool);
  memset(v8, 0, sizeof(v8));
  v3 = sub_100012E2C(&qword_1000D13D0);
  v4 = sub_10000B7FC(&qword_1000D13D8, (void (*)(void))sub_100015598, (uint64_t)&protocol conformance descriptor for <A> A?);
  v5 = sub_10000B7FC(&qword_1000D13E8, (void (*)(void))sub_1000155D4, (uint64_t)&protocol conformance descriptor for <A> A?);
  v6 = Tips.Parameter.init<A>(_:_:_:_:)(v2, 0xD000000000000010, 0x800000010009CE20, v8, _swiftEmptyArrayStorage, v3, v2, v4, v5);
  v7 = sub_100019EAC(v6, "mostRunOrLatestImportedVisibleShortcut");
  sub_100015420(v7);

}

uint64_t sub_10002E2D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010009CE80);
  return sub_1000305DC(v0, v1, v2, v3);
}

uint64_t sub_10002E318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _BYTE v38[32];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  sub_100018190();
  v43 = v0;
  v44 = v1;
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for LocalizedStringKey.StringInterpolation)(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v38[-v6];
  ((void (*)(uint64_t, uint64_t))LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:))(55, 1);
  v8._object = (void *)0x800000010009CE40;
  v8._countAndFlagsBits = 0xD000000000000037;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
  ((void (*)(uint64_t, uint64_t))LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:))(16, 1);
  v9._countAndFlagsBits = 0x53207965489C80E2;
  v9._object = (void *)0xAD0000202C697269;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
  sub_1000305F8();
  sub_100012E2C(&qword_1000D13B0);
  Tips.Parameter.wrappedValue.getter(&v39);
  if (v40)
  {
    v10 = v41;
    v11 = v42;
    swift_bridgeObjectRelease(v40);
  }
  else
  {
    v11 = (void *)0xEE00656C74695420;
    v10 = 0x74756374726F6853;
  }
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v12);
  sub_100030630();
  v13._countAndFlagsBits = 10322146;
  v13._object = (void *)0xA300000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v13);
  v14 = ((uint64_t (*)(_BYTE *))LocalizedStringKey.init(stringInterpolation:))(v5);
  v18 = sub_1000305DC(v14, v15, v16, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  LODWORD(v39) = ((uint64_t (*)(void))static HierarchicalShapeStyle.primary.getter)();
  v25 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, void *, void *))Text.foregroundStyle<A>(_:))(&v39, v18, v20, v24, v22, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  sub_1000085A4(v18, v20, v24);
  sub_100030630();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))LocalizedStringKey.StringInterpolation.appendInterpolation(_:))(v25, v27, v31, v29);
  sub_1000085A4(v25, v27, v31);
  swift_bridgeObjectRelease(v29);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
  v33 = ((uint64_t (*)(_BYTE *))LocalizedStringKey.init(stringInterpolation:))(v7);
  return sub_1000305DC(v33, v34, v35, v36);
}

uint64_t sub_10002E55C()
{
  return Image.init(_:bundle:)(0x70695469726953, 0xE700000000000000, 0);
}

void sub_10002E578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_100018190();
  a19 = v23;
  a20 = v24;
  v25 = sub_100012E2C(&qword_1000D13B0);
  sub_10002724C();
  __chkstk_darwin(v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100012E2C(&qword_1000D13F8);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  sub_1000181C8();
  v31 = sub_100012E2C(&qword_1000D14C0);
  v32 = *(_QWORD *)(type metadata accessor for Tips.Rule(0) - 8);
  v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ 2 * *(_QWORD *)(v32 + 72), *(unsigned __int8 *)(v32 + 80) | 7);
  *(_OWORD *)(v33 + 16) = xmmword_100096F60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v21, v20, v29);
  Tips.Rule.init<A>(_:_:)(v21, sub_10002E744, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v34 = sub_1000305F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v20 + *(int *)(v34 + 20), v25);
  v35 = sub_100012E2C(&qword_1000D13D0);
  v36 = sub_10000B7FC(&qword_1000D13D8, (void (*)(void))sub_100015598, (uint64_t)&protocol conformance descriptor for <A> A?);
  v37 = sub_10000B7FC(&qword_1000D13E8, (void (*)(void))sub_1000155D4, (uint64_t)&protocol conformance descriptor for <A> A?);
  Tips.Rule.init<A>(_:_:)(v28, sub_10002E8DC, 0, v35, v36, v37);
  v38 = static Tips.RuleBuilder.buildExpression(_:)(v33);
  sub_100030630();
  static Tips.RuleBuilder.buildPartialBlock(first:)(v38);
  swift_bridgeObjectRelease(v38);
  sub_100018094();
}

uint64_t sub_10002E744@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[15];
  char v16;

  v4 = sub_100012E2C(&qword_1000D1518);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100012E2C(&qword_1000D1520);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1000303DC(&qword_1000D1528, &qword_1000D1520);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v8, v12);
  v16 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v16, &type metadata for Bool);
  a2[3] = sub_100012E2C(&qword_1000D1530);
  a2[4] = sub_1000302F4();
  sub_100014688(a2);
  v13 = sub_1000303DC(&qword_1000D1550, &qword_1000D1518);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v11, v7, v8, v4, v12, v13, &protocol witness table for Bool);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10002E8DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v17[2];

  v4 = sub_100012E2C(&qword_1000D14C8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E2C(&qword_1000D14D0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000303DC(&qword_1000D14D8, &qword_1000D14D0);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v8, v12);
  memset(v17, 0, sizeof(v17));
  v13 = sub_100012E2C(&qword_1000D13D0);
  static PredicateExpressions.build_Arg<A>(_:)(v17, v13);
  a2[3] = sub_100012E2C(&qword_1000D14E0);
  a2[4] = sub_100030198();
  sub_100014688(a2);
  v14 = sub_1000303DC(&qword_1000D1500, &qword_1000D14C8);
  v15 = sub_10000B7FC(&qword_1000D1508, (void (*)(void))sub_1000302B8, (uint64_t)&protocol conformance descriptor for <A> A?);
  static PredicateExpressions.build_NotEqual<A, B>(lhs:rhs:)(v11, v7, v8, v4, v12, v14, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_10002EA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  sub_100018190();
  v2 = sub_100012E2C(&qword_1000D14A8);
  sub_10002724C();
  __chkstk_darwin(v3);
  sub_100026BF0();
  v4 = sub_100012E2C(&qword_1000D14B0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E2C(&qword_1000D14B8);
  v9 = type metadata accessor for Tips.MaxDisplayCount(0);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) | 7);
  *(_OWORD *)(v10 + 16) = xmmword_100096E80;
  Tips.MaxDisplayCount.init(_:)(3);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v10, v9, &protocol witness table for Tips.MaxDisplayCount);
  v11 = swift_bridgeObjectRelease(v10);
  v15 = v9;
  v16 = &protocol witness table for Tips.MaxDisplayCount;
  v12 = sub_100030664(v11, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  v13 = static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v7, v4, v12);
  v15 = v4;
  v16 = (void *)v12;
  v14 = sub_100030664(v13, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>);
  static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v0, v2, v14);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100018094();
}

void sub_10002EC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_100018190();
  v30 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for Tips.InvalidationReason(0);
  sub_10002724C();
  __chkstk_darwin(v10);
  sub_100018470();
  v29 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v29 - 8);
  v12 = __chkstk_darwin(v29);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v29 - v15;
  sub_10002EEA4(v4, v8);
  if ((v17 & 1) != 0)
  {
    sub_1000305F8();
    sub_100012E2C(&qword_1000D13B0);
    Tips.Parameter.wrappedValue.getter(&v31);
    v18 = v32;
    sub_10002F1F8(v31, v32, v33, v34);
    if (v18)
    {
      if ((sub_10002F228(v6) & 1) != 0)
      {
        v19 = static WFLog.subscript.getter(WFLogCategoryTips);
        v20 = Logger.logObject.getter(v19);
        v21 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)sub_100030678();
          *(_WORD *)v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Object referenced in the tip was modified. The delegate decided to stop showing the tip.", v22, 2u);
          sub_100026ACC((uint64_t)v22);
        }

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v29);
        sub_100030610();
      }
      if ((sub_10002F228(v30) & 1) != 0)
      {
        v23 = static WFLog.subscript.getter(WFLogCategoryTips);
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)sub_100030678();
          *(_WORD *)v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Object referenced in the tip was removed. Nullifying personal content.", v26, 2u);
          sub_100026ACC((uint64_t)v26);
        }

        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v29);
        sub_100030610();
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, enum case for Tips.InvalidationReason.actionPerformed(_:), v9);
    v27 = sub_1000305F8();
    v28 = sub_100030160(&qword_1000D13A8, type metadata accessor for TipController.UseSiriToRunShortcutTip);
    Tip.invalidate(reason:)(v0, v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v9);
  }
  sub_100018094();
}

void sub_10002EEA4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[5];
  void *v33;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_10002FC34();
    v6 = sub_100030160((unint64_t *)&qword_1000D13C0, (uint64_t (*)(uint64_t))sub_10002FC34);
    v7 = Set.Iterator.init(_cocoa:)(v32, v4, v5, v6);
    v2 = v32[0];
    v29 = v32[1];
    v8 = v32[2];
    v9 = v32[3];
    v10 = v32[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v27 = v8;
  v28 = (unint64_t)(v8 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_13;
LABEL_11:
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
    goto LABEL_32;
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v22 < v28)
    {
      v23 = *(_QWORD *)(v29 + 8 * v22);
      v17 = v9 + 1;
      if (v23)
        goto LABEL_31;
      v17 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_40;
      v23 = *(_QWORD *)(v29 + 8 * v17);
      if (v23)
        goto LABEL_31;
      v17 = v9 + 3;
      if (v9 + 3 >= v28)
        goto LABEL_40;
      v23 = *(_QWORD *)(v29 + 8 * v17);
      if (v23)
        goto LABEL_31;
      v17 = v9 + 4;
      if (v9 + 4 >= v28)
        goto LABEL_40;
      v23 = *(_QWORD *)(v29 + 8 * v17);
      if (v23)
      {
LABEL_31:
        v15 = (v23 - 1) & v23;
        v16 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_32:
        v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
        if (v21)
        {
          while (1)
          {
            if (objc_msgSend(v21, "objectType", v27) == (id)5)
            {
              v25 = objc_msgSend(v21, "identifier");
              if (!v25)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(0);
                v25 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
              }
              v26 = objc_msgSend(a2, "workflowSiriRunEventWithIdentifier:", v25);

              if (v26)
                break;
            }

            v9 = v17;
            v10 = v15;
            if ((v2 & 0x8000000000000000) == 0)
              goto LABEL_11;
LABEL_13:
            v18 = __CocoaSet.Iterator.next()(v7);
            if (v18)
            {
              v19 = v18;
              v31 = v18;
              v20 = sub_10002FC34();
              swift_unknownObjectRetain(v19);
              swift_dynamicCast(&v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
              v21 = v33;
              swift_unknownObjectRelease(v19);
              v17 = v9;
              v15 = v10;
              if (v21)
                continue;
            }
            goto LABEL_40;
          }

        }
        goto LABEL_40;
      }
      v17 = v9 + 5;
      if (v9 + 5 < v28)
      {
        v23 = *(_QWORD *)(v29 + 8 * v17);
        if (!v23)
        {
          v24 = v9 + 6;
          while (v24 < v28)
          {
            v23 = *(_QWORD *)(v29 + 8 * v24++);
            if (v23)
            {
              v17 = v24 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_40;
        }
        goto LABEL_31;
      }
    }
LABEL_40:
    sub_10002FC70(v2);

    return;
  }
  __break(1u);
}

uint64_t sub_10002F1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

_QWORD *sub_10002F228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  uint64_t v44;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10002FC34();
    v5 = sub_100030160((unint64_t *)&qword_1000D13C0, (uint64_t (*)(uint64_t))sub_10002FC34);
    result = Set.Iterator.init(_cocoa:)(v43, v3, v4, v5);
    v1 = v43[0];
    v36 = v43[1];
    v7 = v43[2];
    v8 = v43[3];
    v9 = v43[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    result = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v34 = v7;
  v35 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    if (v1 < 0)
    {
      v16 = __CocoaSet.Iterator.next()(result);
      v17 = v16;
      if (!v16)
        goto LABEL_44;
      v44 = v16;
      v18 = sub_10002FC34();
      swift_unknownObjectRetain(v17);
      swift_dynamicCast(&v39, &v44, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
      v19 = v39;
      swift_unknownObjectRelease(v17);
      v15 = v8;
      if (!v19)
        goto LABEL_43;
      goto LABEL_34;
    }
    if (!v9)
      break;
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v8 << 6);
    v15 = v8;
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v14);
    if (!v19)
      goto LABEL_43;
LABEL_34:
    v37 = v9;
    v38 = v15;
    v23 = objc_msgSend(v19, "identifier", v34);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    type metadata accessor for TipController.UseSiriToRunShortcutTip(0);
    sub_100012E2C(&qword_1000D13B0);
    Tips.Parameter.wrappedValue.getter(&v39);
    v27 = v40;
    if (v40)
    {
      v28 = v1;
      v29 = (uint64_t)v39;
      v30 = v41;
      v31 = v42;
      swift_bridgeObjectRetain(v40);
      sub_10002F1F8(v29, v27, v30, v31);
      if (v24 == v29 && v27 == v26)
      {

        sub_100030628();
        swift_bridgeObjectRelease();
        v17 = 1;
        v1 = v28;
        goto LABEL_44;
      }
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v29, v27, 0);

      sub_100030628();
      result = (_QWORD *)swift_bridgeObjectRelease();
      v1 = v28;
      v9 = v37;
      v8 = v38;
      if ((v33 & 1) != 0)
      {
        v17 = 1;
        goto LABEL_44;
      }
    }
    else
    {

      result = (_QWORD *)sub_100030628();
      v9 = v37;
      v8 = v38;
    }
  }
  v20 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v20 >= v35)
      goto LABEL_43;
    v21 = *(_QWORD *)(v36 + 8 * v20);
    v15 = v8 + 1;
    if (!v21)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v35)
        goto LABEL_43;
      v21 = *(_QWORD *)(v36 + 8 * v15);
      if (!v21)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v35)
          goto LABEL_43;
        v21 = *(_QWORD *)(v36 + 8 * v15);
        if (!v21)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v35)
            goto LABEL_43;
          v21 = *(_QWORD *)(v36 + 8 * v15);
          if (!v21)
          {
            v15 = v8 + 5;
            if (v8 + 5 >= v35)
              goto LABEL_43;
            v21 = *(_QWORD *)(v36 + 8 * v15);
            if (!v21)
            {
              v22 = v8 + 6;
              while (v22 < v35)
              {
                v21 = *(_QWORD *)(v36 + 8 * v22++);
                if (v21)
                {
                  v15 = v22 - 1;
                  goto LABEL_32;
                }
              }
LABEL_43:
              v17 = 0;
LABEL_44:
              sub_10002FC70(v1);
              return (_QWORD *)v17;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v15 << 6);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002F5E8(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  if (!a1)
    return 0;
  v1 = a1;
  v2 = objc_msgSend(v1, "identifier");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  v5 = sub_100019EAC(v4, "name");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  return v3;
}

uint64_t sub_10002F698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
  }
  return result;
}

uint64_t sub_10002F724(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(1701667182, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10002F7E8()
{
  return 2;
}

uint64_t sub_10002F7F0()
{
  return 0;
}

uint64_t sub_10002F7FC(char a1)
{
  if ((a1 & 1) != 0)
    return 1701667182;
  else
    return 25705;
}

uint64_t sub_10002F820()
{
  char *v0;

  return sub_10002F7FC(*v0);
}

uint64_t sub_10002F828@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10002F724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10002F84C()
{
  return sub_10002F7F0();
}

uint64_t sub_10002F868@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_10002F7E8();
  *a1 = result;
  return result;
}

uint64_t sub_10002F88C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100030414();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002F8B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100030414();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002F8DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v18;
  char v19;

  v10 = sub_100012E2C(&qword_1000D1568);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_1000181C8();
  v13 = a1[3];
  v12 = a1[4];
  sub_10001465C(a1, v13);
  v14 = sub_100030414();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys, v14, v13, v12);
  v19 = 0;
  sub_100030648(a2, a3, (uint64_t)&v19);
  if (!v5)
  {
    v18 = 1;
    sub_100030648(a4, a5, (uint64_t)&v18);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v6, v10);
}

uint64_t sub_10002F9DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v3 = sub_100012E2C(&qword_1000D1558);
  __chkstk_darwin(v3);
  sub_100018470();
  v4 = a1[3];
  v5 = a1[4];
  sub_10001465C(a1, v4);
  v6 = sub_100030414();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys, v6, v4, v5);
  if (v1)
  {
    sub_100030670();
  }
  else
  {
    v12 = 0;
    v5 = sub_100030638((uint64_t)&v12);
    v11 = 1;
    swift_bridgeObjectRetain(v8);
    sub_100030638((uint64_t)&v11);
    v10 = v9;
    sub_100030600();
    swift_bridgeObjectRetain(v10);
    sub_100030670();
    swift_bridgeObjectRelease(v10);
    sub_100030628();
  }
  return v5;
}

uint64_t sub_10002FB24@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_10002F9DC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10002FB50(_QWORD *a1)
{
  uint64_t *v1;

  return sub_10002F8DC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_10002FB6C(uint64_t *a1, uint64_t *a2)
{
  return sub_10002F698(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_10002FB8C()
{
  return sub_10002E2D4();
}

uint64_t sub_10002FBB0()
{
  return sub_10002E55C();
}

void sub_10002FBCC()
{
  sub_10002EA98();
}

uint64_t sub_10002FBE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100030160(&qword_1000D13A8, type metadata accessor for TipController.UseSiriToRunShortcutTip);
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_10002FC34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D13B8;
  if (!qword_1000D13B8)
  {
    v1 = objc_opt_self(WFDatabaseObjectDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D13B8);
  }
  return result;
}

uint64_t sub_10002FC70(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

ValueMetadata *type metadata accessor for TipController()
{
  return &type metadata for TipController;
}

uint64_t destroy for TipController.UseSiriToRunShortcutTip.PersonalContent(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for TipController.UseSiriToRunShortcutTip.PersonalContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for TipController.UseSiriToRunShortcutTip.PersonalContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for TipController.UseSiriToRunShortcutTip.PersonalContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_10002FD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100012E2C(&qword_1000D13F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_100012E2C(&qword_1000D13B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_10002FE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100012E2C(&qword_1000D13F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_100012E2C(&qword_1000D13B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_10002FEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100012E2C(&qword_1000D13F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_100012E2C(&qword_1000D13B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10002FF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002FF34);
}

uint64_t sub_10002FF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100012E2C(&qword_1000D13F8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_100012E2C(&qword_1000D13B0);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return sub_100019D44(v8, a2, v7);
}

uint64_t sub_10002FFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002FFB0);
}

uint64_t sub_10002FFB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_100012E2C(&qword_1000D13F8);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_100012E2C(&qword_1000D13B0);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return sub_100015D74(v10, a2, a2, v9);
}

void sub_100030028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1000D1468)
  {
    v0 = type metadata accessor for Tips.Parameter(0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1000D1468);
  }
}

void sub_100030080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1000D1470)
  {
    v2 = sub_1000143E4(&qword_1000D13D0);
    v3 = sub_10000B7FC(&qword_1000D13D8, (void (*)(void))sub_100015598, (uint64_t)&protocol conformance descriptor for <A> A?);
    v4 = sub_10000B7FC(&qword_1000D13E8, (void (*)(void))sub_1000155D4, (uint64_t)&protocol conformance descriptor for <A> A?);
    v5 = type metadata accessor for Tips.Parameter(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1000D1470);
  }
}

void *sub_100030128()
{
  return &protocol witness table for String;
}

uint64_t sub_100030134()
{
  return sub_100030160(&qword_1000D14A0, type metadata accessor for TipController.UseSiriToRunShortcutTip);
}

uint64_t sub_100030160(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = sub_100030658(v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100030198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D14E8;
  if (!qword_1000D14E8)
  {
    v1 = sub_1000143E4(&qword_1000D14E0);
    sub_1000303DC(&qword_1000D14F0, &qword_1000D14D0);
    sub_10003021C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.NotEqual<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D14E8);
  }
  return result;
}

unint64_t sub_10003021C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D14F8;
  if (!qword_1000D14F8)
  {
    v1 = sub_1000143E4(&qword_1000D14C8);
    sub_10000B7FC(&qword_1000D13D8, (void (*)(void))sub_100015598, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_10000B7FC(&qword_1000D13E8, (void (*)(void))sub_1000155D4, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D14F8);
  }
  return result;
}

unint64_t sub_1000302B8()
{
  unint64_t result;

  result = qword_1000D1510;
  if (!qword_1000D1510)
  {
    result = swift_getWitnessTable(&unk_100097530, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent);
    atomic_store(result, (unint64_t *)&qword_1000D1510);
  }
  return result;
}

unint64_t sub_1000302F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1538;
  if (!qword_1000D1538)
  {
    v1 = sub_1000143E4(&qword_1000D1530);
    sub_1000303DC(&qword_1000D1540, &qword_1000D1520);
    sub_100030378();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D1538);
  }
  return result;
}

unint64_t sub_100030378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1548;
  if (!qword_1000D1548)
  {
    v1 = sub_1000143E4(&qword_1000D1518);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D1548);
  }
  return result;
}

uint64_t sub_1000303DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1000143E4(a2);
    result = sub_100030658(v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100030414()
{
  unint64_t result;

  result = qword_1000D1560;
  if (!qword_1000D1560)
  {
    result = swift_getWitnessTable(&unk_1000976CC, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000D1560);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10003049C + 4 * byte_1000974A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000304D0 + 4 * asc_1000974A0[v4]))();
}

uint64_t sub_1000304D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000304D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000304E0);
  return result;
}

uint64_t sub_1000304EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000304F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000304F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100030500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys()
{
  return &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys;
}

unint64_t sub_100030520()
{
  unint64_t result;

  result = qword_1000D1570;
  if (!qword_1000D1570)
  {
    result = swift_getWitnessTable(&unk_1000976A4, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000D1570);
  }
  return result;
}

unint64_t sub_100030560()
{
  unint64_t result;

  result = qword_1000D1578;
  if (!qword_1000D1578)
  {
    result = swift_getWitnessTable(&unk_100097614, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000D1578);
  }
  return result;
}

unint64_t sub_1000305A0()
{
  unint64_t result;

  result = qword_1000D1580;
  if (!qword_1000D1580)
  {
    result = swift_getWitnessTable(&unk_10009763C, &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000D1580);
  }
  return result;
}

uint64_t sub_1000305DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return Text.init(_:tableName:bundle:comment:)(a1, a2, a3 & 1, a4, 0, 0, 0, 0, 0);
}

uint64_t sub_1000305F8()
{
  return type metadata accessor for TipController.UseSiriToRunShortcutTip(0);
}

uint64_t sub_100030600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100030610()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  return Tips.Parameter.wrappedValue.setter(v1 - 128, v0);
}

uint64_t sub_100030628()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100030630()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100030638(uint64_t a1)
{
  uint64_t v1;

  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t sub_100030648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, a3, v3);
}

uint64_t sub_100030658(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(v1, a1);
}

uint64_t sub_100030664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_getOpaqueTypeConformance2(v2 - 96, a2, 1);
}

uint64_t sub_100030670()
{
  _QWORD *v0;

  return sub_10000B6E4(v0);
}

uint64_t sub_100030678()
{
  return swift_slowAlloc(2, -1);
}

uint64_t type metadata accessor for DebugMenuViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D1588;
  if (!qword_1000D1588)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugMenuViewController);
  return result;
}

uint64_t sub_1000306BC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_1000DADD8);
}

void sub_1000306F8()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  objc_class *v11;
  Class v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  Class isa;
  void *v22;
  uint64_t v23[3];

  v1 = sub_100030E60();
  __chkstk_darwin(v1);
  sub_100019D7C();
  v2 = v0;
  v3 = objc_msgSend(v2, "presentedViewController");
  if (v3)
  {
    do
    {
      v4 = v3;

      v3 = objc_msgSend(v4, "presentedViewController");
      v2 = v4;
    }
    while (v3);
  }
  else
  {
    v4 = v2;
  }
  v5 = sub_100026B2C((uint64_t)&unk_1000C1160, 24);
  *(_QWORD *)(v5 + 16) = 0;
  sub_100030D2C();
  v6 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  swift_retain_n(v5, 2);
  DebugMenuView.init(database:close:onShare:)(v6, sub_100030E00, v5, sub_100030E08, v5);
  sub_100030A74();
  v8 = v7;
  v9 = objc_msgSend(v7, "navigationItem");
  sub_100030E10(0, 0xE000000000000000, v9);

  v10 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v8);
  v11 = (objc_class *)objc_msgSend(v10, "presentationController");
  if (v11)
  {
    v12 = v11;
    v13 = objc_opt_self(_UISheetPresentationController);
    v14 = swift_dynamicCastObjCClass(v12, v13);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = sub_100012E2C((uint64_t *)&unk_1000D3690);
      v17 = sub_100026B2C(v16, 48);
      *(_OWORD *)(v17 + 16) = xmmword_100097720;
      v18 = (void *)objc_opt_self(_UISheetDetent);
      *(_QWORD *)(v17 + 32) = objc_msgSend(v18, "_mediumDetent");
      v19 = objc_msgSend(v18, "_largeDetent");
      *(_QWORD *)(v17 + 40) = v19;
      v23[0] = v17;
      specialized Array._endMutation()(v19, v20);
      sub_100003B2C(0, &qword_1000D15F0, _UISheetDetent_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v15, "_setDetents:", isa);

      v12 = isa;
    }

  }
  sub_100027100(v4, "presentViewController:animated:completion:", (uint64_t)v10);

  swift_beginAccess(v5 + 16, v23, 1, 0);
  v22 = *(void **)(v5 + 16);
  *(_QWORD *)(v5 + 16) = v8;
  swift_release(v5);

}

id sub_1000309C8(uint64_t a1)
{
  id result;
  _BYTE v3[24];

  swift_beginAccess(a1 + 16, v3, 0, 0);
  result = *(id *)(a1 + 16);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

void sub_100030A1C(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  _BYTE v5[24];

  swift_beginAccess(a2 + 16, v5, 0, 0);
  v3 = *(void **)(a2 + 16);
  if (v3)
  {
    v4 = v3;
    sub_100030B00();

  }
}

void sub_100030A74()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = sub_100030E60();
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100019D7C();
  v6 = v5 - v4;
  v7 = objc_allocWithZone(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v0, v2);
  UIHostingController.init(rootView:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  sub_100026B34();
}

void sub_100030B00()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = sub_100012E2C(&qword_1000D15D8);
  v3 = sub_100026B2C(v2, 64);
  *(_OWORD *)(v3 + 16) = xmmword_100096E80;
  URL._bridgeToObjectiveC()((NSURL *)&off_100096000);
  v5 = v4;
  *(_QWORD *)(v3 + 56) = sub_100003B2C(0, &qword_1000D15E0, NSURL_ptr);
  *(_QWORD *)(v3 + 32) = v5;
  v6 = objc_allocWithZone((Class)UIActivityViewController);
  v7 = sub_100030D34(v3, 0);
  sub_100027100(v1, "presentViewController:animated:completion:", (uint64_t)v7);

}

void sub_100030BB4(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  sub_100030BF4(a1, a2);
}

void sub_100030BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;

  v4 = sub_100030E60();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100019D7C();
  v8 = v7 - v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7 - v6, a2, v4);
  v9 = (void *)UIHostingController.init(coder:rootView:)(v2, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11 = v9;
  v10(a2, v4);
  if (v9)

  sub_100026B34();
}

id sub_100030C8C(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)sub_100030D2C();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_100030CD8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100030C8C(a3);
}

id sub_100030CFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100030D2C();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100030D2C()
{
  return type metadata accessor for DebugMenuViewController(0);
}

id sub_100030D34(uint64_t a1, uint64_t a2)
{
  void *v2;
  NSArray v5;
  NSArray v6;
  id v7;

  v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  if (a2)
  {
    sub_100003B2C(0, &qword_1000D15E8, UIActivity_ptr);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6.super.isa = 0;
  }
  v7 = objc_msgSend(v2, "initWithActivityItems:applicationActivities:", v5.super.isa, v6.super.isa);

  return v7;
}

uint64_t sub_100030DDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100030E00()
{
  uint64_t v0;

  return sub_1000309C8(v0);
}

void sub_100030E08(uint64_t a1)
{
  uint64_t v1;

  sub_100030A1C(a1, v1);
}

void sub_100030E10(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setBackButtonTitle:", v5);

}

uint64_t sub_100030E60()
{
  return type metadata accessor for DebugMenuView(0);
}

id sub_100030E6C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v11;

  v3 = v2;
  v11 = 0;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "workflowWithReference:database:error:", a1, a2, &v11);
  v7 = v11;
  if (v6)
  {
    v8 = v11;
  }
  else
  {
    v9 = v11;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow();
  }

  return v6;
}

_QWORD *sub_100030F48(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id WFLinkActions.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id WFLinkActions.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WFLinkActions();
  return objc_msgSendSuper2(&v2, "init");
}

id WFLinkActions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WFLinkActions();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100031094()
{
  id result;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;

  result = objc_msgSend((id)objc_opt_self(WFWindowSceneManager), "mainScene");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "delegate");

    if (v2)
    {
      v3 = objc_opt_self(WFMainSceneDelegate);
      v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
      if (!v4)
      {
        v7 = v2;
LABEL_8:
        swift_unknownObjectRelease(v7);
        return 0;
      }
      v5 = objc_msgSend(v4, "rootViewController");
      swift_unknownObjectRelease(v2);
      if (v5)
      {
        v6 = type metadata accessor for MainViewController(0);
        result = (id)swift_dynamicCastClass(v5, v6);
        if (result)
          return result;
        v7 = v5;
        goto LABEL_8;
      }
    }
    return 0;
  }
  return result;
}

_QWORD *sub_100031160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  int isUniquelyReferenced_nonNull_native;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;

  v0 = type metadata accessor for NavigationDestinationEntity(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(WFWindowSceneManager), "mainScene");
  if (!v4)
    return _swiftEmptyArrayStorage;
  v5 = v4;
  v60 = v1;
  v6 = objc_msgSend(v4, "delegate");

  if (!v6)
    return _swiftEmptyArrayStorage;
  v7 = objc_opt_self(WFMainSceneDelegate);
  v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
  if (!v8)
  {
    swift_unknownObjectRelease(v6);
    return _swiftEmptyArrayStorage;
  }
  v9 = objc_msgSend(v8, "rootViewController");
  swift_unknownObjectRelease(v6);
  v10 = _swiftEmptyArrayStorage;
  if (!v9)
    return v10;
  v11 = type metadata accessor for MainViewController(0);
  if (!swift_dynamicCastClass(v9, v11))
  {
    swift_unknownObjectRelease(v9);
    return v10;
  }
  sub_100015140();
  v13 = v12;
  swift_unknownObjectRelease(v9);
  v14 = *(_QWORD *)&v13[OBJC_IVAR___WFSidebarViewController_sections];
  swift_bridgeObjectRetain(v14);

  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = v3;
    v62 = _swiftEmptyArrayStorage;
    sub_10003EA4C(0, v15, 0);
    v10 = v62;
    v17 = (uint64_t *)(v14 + 40);
    do
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      ObjectType = swift_getObjectType(v18);
      swift_unknownObjectRetain(v18);
      v21 = dispatch thunk of SidebarSection.destinations.getter(ObjectType, v19);
      swift_unknownObjectRelease(v18);
      v62 = v10;
      v23 = v10[2];
      v22 = v10[3];
      if (v23 >= v22 >> 1)
      {
        sub_10003EA4C(v22 > 1, v23 + 1, 1);
        v10 = v62;
      }
      v10[2] = v23 + 1;
      v10[v23 + 4] = v21;
      v17 += 2;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(v14);
    v3 = v16;
  }
  else
  {
    swift_bridgeObjectRelease(v14);
  }
  v25 = v10[2];
  if (!v25)
  {
    v28 = _swiftEmptyArrayStorage;
LABEL_40:
    swift_bridgeObjectRelease(v10);
    v52 = v28[2];
    if (v52)
    {
      v62 = _swiftEmptyArrayStorage;
      sub_10003EA30();
      v10 = v62;
      v61 = type metadata accessor for RootNavigationDestination(0);
      v53 = *(_QWORD *)(v61 - 8);
      v54 = (char *)v28 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      v55 = *(_QWORD *)(v53 + 72);
      v56 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      v57 = v60;
      do
      {
        v56(v3, v54, v61);
        v62 = v10;
        v58 = v10[2];
        if (v58 >= v10[3] >> 1)
        {
          sub_10003EA30();
          v57 = v60;
          v10 = v62;
        }
        v10[2] = v58 + 1;
        sub_100032B9C((uint64_t)v3, (uint64_t)v10+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v58);
        v54 += v55;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease(v28);
      return v10;
    }
    swift_bridgeObjectRelease(v28);
    return _swiftEmptyArrayStorage;
  }
  v26 = v3;
  swift_bridgeObjectRetain(v10);
  v27 = 0;
  v28 = _swiftEmptyArrayStorage;
  while (1)
  {
    v29 = &v10[v27];
    v30 = v29[4];
    v31 = *(_QWORD *)(v30 + 16);
    v32 = v28[2];
    v33 = v32 + v31;
    if (__OFADD__(v32, v31))
      break;
    swift_bridgeObjectRetain(v29[4]);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
    if (!isUniquelyReferenced_nonNull_native || v33 > v28[3] >> 1)
    {
      if (v32 <= v33)
        v35 = v32 + v31;
      else
        v35 = v32;
      v28 = (_QWORD *)sub_100008FCC(isUniquelyReferenced_nonNull_native, v35, 1, (uint64_t)v28);
    }
    if (*(_QWORD *)(v30 + 16))
    {
      v36 = v28[2];
      v37 = (v28[3] >> 1) - v36;
      v38 = type metadata accessor for RootNavigationDestination(0);
      if (v37 < v31)
        goto LABEL_49;
      v39 = v38;
      v40 = *(_QWORD *)(v38 - 8);
      v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      v42 = *(_QWORD *)(v40 + 72);
      v43 = (char *)v28 + v41 + v42 * v36;
      v44 = v30 + v41;
      v45 = v42 * v31;
      v46 = &v43[v45];
      v47 = v44 + v45;
      if (v44 < (unint64_t)v46 && (unint64_t)v43 < v47)
        goto LABEL_51;
      swift_arrayInitWithCopy(v43, v44, v31, v39);
      if (v31)
      {
        v49 = v28[2];
        v50 = __OFADD__(v49, v31);
        v51 = v49 + v31;
        if (v50)
          goto LABEL_50;
        v28[2] = v51;
      }
    }
    else if (v31)
    {
      goto LABEL_48;
    }
    swift_bridgeObjectRelease(v30);
    if (v25 == ++v27)
    {
      swift_bridgeObjectRelease(v10);
      v3 = v26;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100031604()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v0 = sub_100012E2C(&qword_1000D0638);
  __chkstk_darwin(v0);
  v2 = &v19[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v13);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100042138(v16, static NavigationDestinationEntity.typeDisplayRepresentation);
  sub_100032758(v16, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E65746E49707041, 0xEA00000000007374, v9, v6, 0, 0, 256);
  LocalizedStringResource.init(stringLiteral:)(0x65646C6F46206425, 0xEA00000000007372);
  sub_100015D74((uint64_t)v2, 0, 1, v13);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t NavigationDestinationEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0530, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation, (uint64_t)sub_100031604);
}

void static NavigationDestinationEntity.typeDisplayRepresentation.getter()
{
  sub_1000338A0();
}

void static NavigationDestinationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0530, (uint64_t)&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation, (uint64_t)sub_100031604);
}

void static NavigationDestinationEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1000D0530 != -1)
    swift_once(&qword_1000D0530, sub_100031604);
  v0 = sub_100042D94();
  sub_1000422E8(v0, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
  sub_100018188();
}

void *NavigationDestinationEntity.persistentIdentifier.unsafeMutableAddressor()
{
  return &static NavigationDestinationEntity.persistentIdentifier;
}

unint64_t static NavigationDestinationEntity.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

void NavigationDestinationEntity.displayRepresentation.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  Swift::String v48;
  void *object;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_100018190();
  a19 = v21;
  a20 = v22;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v23);
  v25 = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v27);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  sub_100018034();
  __chkstk_darwin(v30);
  sub_100026BD8();
  sub_100012E2C(&qword_1000D15F8);
  sub_100018034();
  __chkstk_darwin(v31);
  sub_100026F1C();
  v34 = v32 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&a9 - v36;
  v38 = sub_100042D9C();
  v41 = sub_100026B84((uint64_t)v37, v39, v40, v38);
  v42 = RootNavigationDestination.symbolName.getter(v41);
  if (v43)
  {
    sub_100042534(v42, v43);
    sub_10000D7B4((uint64_t)v37, &qword_1000D15F8);
    v44 = sub_100042D10();
    sub_100032770(v44, v45);
  }
  sub_100042A10();
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v46);
  v48._countAndFlagsBits = RootNavigationDestination.displayName.getter(v47);
  object = v48._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v48);
  swift_bridgeObjectRelease(object);
  sub_1000427F8();
  LocalizedStringResource.init(stringInterpolation:)(v20);
  sub_100027470();
  sub_100015D74(v50, v51, v52, v26);
  sub_10003F6E4();
  DisplayRepresentation.init(title:subtitle:image:)(v29, v25, v34);
  sub_10000D7B4((uint64_t)v37, &qword_1000D15F8);
  sub_100018094();
}

uint64_t NavigationDestinationEntity.DestinationQuery.entities(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_100042324((uint64_t)sub_100031AE8);
}

uint64_t sub_100031AE8()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 24) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100031B2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  *(_QWORD *)(v0 + 32) = sub_100031160();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100031B64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  swift_bridgeObjectRetain(v2);
  sub_100031D00(v1, v2);
  return sub_10004276C(v3, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100031BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_100031D00(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;

  v33 = *(_QWORD *)(sub_100042E08() - 8);
  sub_100018044();
  __chkstk_darwin(v5);
  sub_10004248C();
  v34 = v6;
  sub_100042654();
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v37 = _swiftEmptyArrayStorage;
  v32 = *(_QWORD *)(v3 + 16);
  if (!v32)
  {
LABEL_27:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v3);
    sub_100042880();
    return;
  }
  v29 = v2;
  v10 = 0;
  v30 = a2 + 7;
  v31 = v3;
  v35 = a2;
  while (1)
  {
    if (v10 >= *(_QWORD *)(v3 + 16))
    {
      __break(1u);
      goto LABEL_29;
    }
    v11 = *(_QWORD *)(v33 + 72);
    v36 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v12 = sub_100032B1C(v3 + v36 + v11 * v10, (uint64_t)v9);
    v13 = (uint64_t)v9;
    v14 = RootNavigationDestination.sidebarIdentifier.getter(v12);
    v16 = v15;
    v17 = a2[2];
    if (v17)
    {
      v18 = v14;
      v19 = a2[4];
      v20 = a2[5];
      v21 = v19 == v18 && v20 == (_QWORD)v16;
      if (v21 || (sub_100042C70(v19, v20) & 1) != 0)
      {
LABEL_10:
        swift_bridgeObjectRelease(v16);
        v9 = (char *)v13;
        sub_100032B9C(v13, v34);
        if ((sub_100042DFC() & 1) == 0)
        {
          sub_1000428FC();
          v16 = v37;
        }
        v22 = v16[2];
        if (v22 >= v16[3] >> 1)
        {
          sub_10003EA30();
          v16 = v37;
        }
        v16[2] = v22 + 1;
        sub_100032B9C(v34, (uint64_t)v16 + v36 + v22 * v11);
        a2 = v35;
        goto LABEL_26;
      }
      a2 = v35;
      if (v17 != 1)
        break;
    }
LABEL_25:
    swift_bridgeObjectRelease(v16);
    v9 = (char *)v13;
    sub_100032B60(v13);
LABEL_26:
    ++v10;
    v3 = v31;
    if (v10 == v32)
      goto LABEL_27;
  }
  v23 = v30;
  v24 = 1;
  while (1)
  {
    v25 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    v26 = *(v23 - 1);
    v27 = *v23;
    v28 = v26 == v18 && v27 == (_QWORD)v16;
    if (v28 || (sub_100042C70(v26, v27) & 1) != 0)
      goto LABEL_10;
    v23 += 2;
    ++v24;
    v21 = v25 == v17;
    a2 = v35;
    if (v21)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
}

void sub_100031F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _QWORD *v27;

  v24 = a2;
  v25 = a3;
  v5 = sub_100042E08();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_10004248C();
  v23 = v7;
  sub_100042654();
  __chkstk_darwin(v8);
  v10 = (char *)v21 - v9;
  v27 = _swiftEmptyArrayStorage;
  v22 = *(_QWORD *)(v4 + 16);
  if (v22)
  {
    v21[1] = v3;
    v11 = 0;
    while (v11 < *(_QWORD *)(v4 + 16))
    {
      v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v13 = *(_QWORD *)(v6 + 72);
      v14 = sub_100032B1C(v4 + v12 + v13 * v11, (uint64_t)v10);
      v15 = RootNavigationDestination.displayName.getter(v14);
      v17 = v16;
      v26[2] = v15;
      v26[3] = v16;
      v26[0] = v24;
      v26[1] = v25;
      v18 = sub_100014C08();
      v19 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v26, &type metadata for String, &type metadata for String, v18, v18);
      swift_bridgeObjectRelease(v17);
      if ((v19 & 1) != 0)
      {
        sub_100032B9C((uint64_t)v10, v23);
        if ((sub_100042DFC() & 1) == 0)
        {
          sub_1000428FC();
          v19 = (uint64_t)v27;
        }
        v20 = *(_QWORD *)(v19 + 16);
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_10003EA30();
          v19 = (uint64_t)v27;
        }
        *(_QWORD *)(v19 + 16) = v20 + 1;
        sub_100032B9C(v23, v19 + v12 + v20 * v13);
      }
      else
      {
        sub_100032B60((uint64_t)v10);
      }
      if (v22 == ++v11)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v4);
    sub_100042880();
  }
}

_QWORD *sub_1000320D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v22[4];
  _QWORD *v23;

  v23 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
LABEL_7:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        v9 = objc_msgSend(v6, "name");
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v12 = v11;

        v22[2] = v10;
        v22[3] = v12;
        v22[0] = a2;
        v22[1] = a3;
        v13 = sub_100014C08();
        LOBYTE(v10) = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v22, &type metadata for String, &type metadata for String, v13, v13);
        v14 = swift_bridgeObjectRelease(v12);
        if ((v10 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v15 = v23[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
          v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v7);
          specialized ContiguousArray._endMutation()(v16);
        }
        else
        {

        }
        ++v5;
        if (v8 == v4)
        {
          v17 = v23;
          goto LABEL_21;
        }
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v18 = a1;
      else
        v18 = a1 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v4)
        goto LABEL_20;
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_7;
  }
LABEL_20:
  v17 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a1);
  return v17;
}

uint64_t NavigationDestinationEntity.DestinationQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_100042324((uint64_t)sub_1000322A4);
}

uint64_t sub_1000322A4()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 32) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_1000322E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 40) = sub_100031160();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100032320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  sub_100031F18(v1, v3, v2);
  return sub_10004276C(v4, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t NavigationDestinationEntity.DestinationQuery.suggestedEntities()()
{
  return sub_100042324((uint64_t)sub_100032378);
}

uint64_t sub_100032378()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 16) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_1000323BC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release(*(_QWORD *)(v0 + 16));
  v1 = sub_100031160();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v1);
}

uint64_t sub_1000323F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_1000D160C);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100042264;
  return NavigationDestinationEntity.DestinationQuery.entities(matching:)(a2, a3);
}

uint64_t sub_10003244C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000D1604);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100042260;
  return NavigationDestinationEntity.DestinationQuery.entities(for:)(a1);
}

uint64_t sub_100032498(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_1000D1614);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100042264;
  return NavigationDestinationEntity.DestinationQuery.suggestedEntities()();
}

uint64_t sub_1000324E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10003F9F4();
  *v5 = v2;
  v5[1] = sub_100042248;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10003254C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100042258;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t (*static NavigationDestinationEntity.defaultQuery.modify())()
{
  return static NavigationDestinationEntity.defaultQuery.setter;
}

uint64_t sub_1000325CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  uint64_t v12;

  v2 = type metadata accessor for RootNavigationDestination(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for RootNavigationDestination.gallery(_:)
    || v6 == enum case for RootNavigationDestination.workflowType(_:))
  {
    goto LABEL_6;
  }
  if (v6 == enum case for RootNavigationDestination.folder(_:))
  {
    v8 = 1;
    goto LABEL_9;
  }
  if (v6 == enum case for RootNavigationDestination.autoShortcuts(_:))
  {
LABEL_6:
    v8 = 0;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v8;
  }
  if (v6 == enum case for RootNavigationDestination.shortcuts(_:))
    return 0;
  if (v6 == enum case for RootNavigationDestination.allShortcuts(_:))
    return 1;
  v10 = v6 == enum case for RootNavigationDestination.automations(_:)
     || v6 == enum case for RootNavigationDestination.recentlyModified(_:);
  if (v10 || v6 == enum case for RootNavigationDestination.recentlyRun(_:))
    return 0;
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WFLinkActions()
{
  return objc_opt_self(_TtC9Shortcuts13WFLinkActions);
}

uint64_t sub_100032758(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100032770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D15F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (**NavigationDestinationEntity.FolderQuery.folderFilter.unsafeMutableAddressor())()
{
  return &static NavigationDestinationEntity.FolderQuery.folderFilter;
}

void static NavigationDestinationEntity.FolderQuery.folderFilter.getter()
{
  sub_1000423E8();
}

uint64_t NavigationDestinationEntity.FolderQuery.entities(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  v2 = sub_100026B08();
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = sub_100042314(v3);
  v4 = *(_QWORD *)(sub_100042598() - 8);
  v1[6] = v4;
  v1[7] = sub_1000423D4(v4);
  v1[8] = sub_1000424BC();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100032830()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 72) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100032874()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  *(_QWORD *)(v0 + 80) = sub_100031160();
  sub_1000424A0();
  return sub_1000422B0();
}

#error "100032998: call analysis failed (funcsize=142)"

uint64_t type metadata accessor for NavigationDestinationEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D1CA8;
  if (!qword_1000D1CA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationDestinationEntity);
  return result;
}

uint64_t sub_100032B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NavigationDestinationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100032B60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NavigationDestinationEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100032B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NavigationDestinationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t NavigationDestinationEntity.FolderQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100026B08();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = sub_100042314(v4);
  v5 = *(_QWORD *)(sub_100042598() - 8);
  v2[7] = v5;
  v2[8] = sub_1000423D4(v5);
  v2[9] = sub_1000424BC();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100032C40()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 80) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100032C84()
{
  uint64_t v0;

  sub_100042CA0();
  *(_QWORD *)(v0 + 88) = sub_100031160();
  sub_1000424A0();
  return sub_1000422B0();
}

#error "100032DA4: call analysis failed (funcsize=143)"

uint64_t NavigationDestinationEntity.FolderQuery.suggestedEntities()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_100026B08();
  v0[2] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[3] = v2;
  v0[4] = sub_100042314(v2);
  v3 = *(_QWORD *)(sub_100042598() - 8);
  v0[5] = v3;
  v0[6] = sub_1000423D4(v3);
  v0[7] = sub_1000424BC();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100032F50()
{
  uint64_t v0;

  sub_1000424D8();
  *(_QWORD *)(v0 + 64) = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100032F94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 72) = sub_100031160();
  sub_1000424A0();
  return sub_1000422B0();
}

void sub_100032FCC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  char v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t (*v15)(void);
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  sub_100042788();
  v1 = v0[9];
  v26 = *(_QWORD *)(v1 + 16);
  if (!v26)
  {
LABEL_30:
    sub_1000273A0();
    sub_100042608();
    sub_10004257C();
    sub_1000426E0();
    v14 = sub_1000425DC();
    sub_100042414(v14, v15);
    return;
  }
  v2 = 0;
  v25 = v0[5];
  v3 = v0[3];
  v24 = enum case for RootNavigationDestination.gallery(_:);
  v23 = enum case for RootNavigationDestination.workflowType(_:);
  v22 = enum case for RootNavigationDestination.folder(_:);
  v21 = enum case for RootNavigationDestination.autoShortcuts(_:);
  v20 = enum case for RootNavigationDestination.shortcuts(_:);
  v19 = enum case for RootNavigationDestination.allShortcuts(_:);
  v18 = enum case for RootNavigationDestination.automations(_:);
  v17 = enum case for RootNavigationDestination.recentlyModified(_:);
  v16 = enum case for RootNavigationDestination.recentlyRun(_:);
  while (v2 < *(_QWORD *)(v1 + 16))
  {
    v4 = v0[7];
    v5 = v0[4];
    v6 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v7 = *(_QWORD *)(v25 + 72);
    sub_100032B1C(v0[9] + v6 + v7 * v2, v4);
    sub_100042644(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    v8 = sub_1000427A4();
    if (v8 == v24 || v8 == v23)
      goto LABEL_16;
    if (v8 == v22)
    {
      sub_100042878();
LABEL_10:
      sub_100032B9C(v0[7], v0[6]);
      if ((sub_100042DD0() & 1) == 0)
        sub_1000428D8();
      sub_100042BE8();
      if (v10)
        sub_1000428D8();
      v11 = v0[6];
      _swiftEmptyArrayStorage[2] = v4;
      sub_100032B9C(v11, (uint64_t)_swiftEmptyArrayStorage + v6 + v5 * v7);
      goto LABEL_18;
    }
    if (v8 == v21)
    {
LABEL_16:
      sub_100042878();
    }
    else if (v8 != v20)
    {
      if (v8 == v19)
        goto LABEL_10;
      if (v8 != v18 && v8 != v17 && v8 != v16)
      {
        sub_100042430(v0[2], v0[2]);
        return;
      }
    }
    sub_100032B60(v0[7]);
LABEL_18:
    if (v26 == ++v2)
      goto LABEL_30;
  }
  __break(1u);
}

uint64_t NavigationDestinationEntity.FolderQuery.defaultResult()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_100042324((uint64_t)sub_100033230);
}

uint64_t sub_100033230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = enum case for RootNavigationDestination.allShortcuts(_:);
  v3 = sub_100026B08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  v4 = sub_100042598();
  sub_100015D74(v1, 0, 1, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_1000D1624);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100042264;
  return NavigationDestinationEntity.FolderQuery.entities(matching:)(a2, a3);
}

uint64_t sub_1000332F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000D161C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100042260;
  return NavigationDestinationEntity.FolderQuery.entities(for:)(a1);
}

uint64_t sub_100033340(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_1000D162C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100042264;
  return NavigationDestinationEntity.FolderQuery.suggestedEntities()();
}

uint64_t sub_100033388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100016080();
  *v5 = v2;
  v5[1] = sub_100042248;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_1000333F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000D1634);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100042258;
  return NavigationDestinationEntity.FolderQuery.defaultResult()(a1);
}

uint64_t sub_100033448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NavigationDestinationEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_10003346C(uint64_t a1@<X8>)
{
  sub_10003E640(NavigationDestinationEntity.typeDisplayRepresentation.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_100033480(uint64_t a1)
{
  uint64_t v2;

  sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000334D4(uint64_t a1)
{
  uint64_t v2;

  sub_1000040A8(&qword_1000D1920, type metadata accessor for NavigationDestinationEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void OpenNavigationDestinationAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_100018190();
  v2 = sub_1000182A4();
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  sub_100018044();
  __chkstk_darwin(v3);
  sub_1000180EC(v4, v37[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100018168(v6, v37[0]);
  v8 = __chkstk_darwin(v7);
  sub_100018514(v8, v9, v10, v11, v12, v13, v14, v15, v37[0]);
  sub_100012E2C(&qword_1000D0630);
  sub_100018034();
  __chkstk_darwin(v16);
  sub_100018488();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000424AC();
  __chkstk_darwin(v20);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v23);
  v25 = (char *)v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v26);
  v28 = (char *)v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v30);
  sub_100018470();
  v37[1] = sub_100012E2C(&qword_1000D0640);
  sub_100042898();
  sub_1000182EC();
  v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  sub_100042A1C((uint64_t)v22, enum case for LocalizedStringResource.BundleDescription.main(_:));
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100018380(23, 0x800000010009B770);
  sub_1000182EC();
  sub_100042A1C((uint64_t)v22, v31);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100015D74((uint64_t)v19, 0, 1, v29);
  v32 = sub_100042598();
  sub_100015D74(v0, 1, 1, v32);
  sub_1000182AC();
  v33 = v38;
  sub_100042358(v38);
  v34 = v39;
  sub_100042358(v39);
  v35 = v40;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v1, v19, v0, v33, v34, v35, v36);
  sub_100018094();
}

void sub_1000337F0()
{
  sub_10003E098();
}

uint64_t OpenNavigationDestinationAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0538, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenNavigationDestinationAction.title, (uint64_t)sub_1000337F0);
}

uint64_t sub_10003383C(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    sub_100042D6C((uint64_t)a1, (uint64_t)a2, a3, a4);
  v6 = a2(0);
  return sub_100032758(v6, a3);
}

void static OpenNavigationDestinationAction.title.getter()
{
  sub_1000338A0();
}

void sub_1000338A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  sub_100042BB8();
  if (!v5)
    sub_100042D6C(v1, v2, v3, v4);
  v6 = sub_100042DA4();
  v7 = sub_100032758(v6, v0);
  sub_1000424D0(v7, (uint64_t)v8, 0);
  sub_100042AC8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  sub_10004280C();
}

void static OpenNavigationDestinationAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0538, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenNavigationDestinationAction.title, (uint64_t)sub_1000337F0);
}

void sub_10003391C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*a2 != -1)
    swift_once(a2, a5);
  v7 = sub_100042DA4();
  v8 = sub_100032758(v7, a4);
  sub_1000424D0(v8, (uint64_t)v10, 33);
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess(v10);
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_10004280C();
}

void static OpenNavigationDestinationAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0538 != -1)
    swift_once(&qword_1000D0538, sub_1000337F0);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static OpenNavigationDestinationAction.title);
  sub_100018188();
}

void sub_100033A04()
{
  sub_10003E2B0();
}

uint64_t OpenNavigationDestinationAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0540, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static OpenNavigationDestinationAction.description, (uint64_t)sub_100033A04);
}

uint64_t static OpenNavigationDestinationAction.description.getter()
{
  return sub_100034EF4();
}

void OpenNavigationDestinationAction.target.getter()
{
  sub_100042620();
  sub_100018188();
}

void OpenNavigationDestinationAction.target.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100042598();
  sub_100018034();
  __chkstk_darwin(v3);
  sub_100042718(v4, v5);
  IntentParameter.wrappedValue.setter(v1);
  sub_100032B60(a1);
  sub_100018388();
}

void OpenNavigationDestinationAction.target.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_10004233C();
  *(_QWORD *)(v0 + 32) = sub_100042330((uint64_t)v1);
  sub_100018388();
}

uint64_t OpenNavigationDestinationAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100012E2C(&qword_1000D1088);
  v2[4] = sub_100042314(*(_QWORD *)(v3 - 8));
  v4 = type metadata accessor for RootNavigationContext.TransitionType(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = sub_100042314(v5);
  v6 = sub_100012E2C(&qword_1000D10F8);
  v2[8] = sub_100042314(*(_QWORD *)(v6 - 8));
  v7 = sub_100042598();
  v2[9] = sub_100042314(*(_QWORD *)(v7 - 8));
  sub_1000424D8();
  v2[10] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100033BB0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  sub_100042CA0();
  v1 = (uint64_t)sub_100031094();
  if (v1)
  {
    v2 = (void *)v1;
    v4 = v0[8];
    v3 = v0[9];
    v6 = v0[6];
    v5 = v0[7];
    v8 = v0[4];
    v7 = v0[5];
    sub_100042678();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, enum case for RootNavigationContext.TransitionType.pushAndReplace(_:), v7);
    v9 = type metadata accessor for RootPPTTestCase(0);
    sub_100026B84(v8, v10, v11, v9);
    sub_100027470();
    RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)(v12, v13, v14, 0, v5, v8);
    type metadata accessor for RootNavigationContext(0);
    v15 = sub_100042740();
    sub_100015D74(v15, v16, v17, v18);
    v19 = type metadata accessor for MainViewController(0);
    sub_1000040A8(&qword_1000D10C8, type metadata accessor for MainViewController);
    RootView.navigate(to:with:)(v3, v4, v19, v20);

    sub_10000D7B4(v4, &qword_1000D10F8);
    v21 = sub_100026B08();
    v1 = sub_100042914(v21);
  }
  static IntentResult.result<>()(v1);
  sub_100042804();
  sub_10004255C();
  sub_100042608();
  sub_10004257C();
  v22 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042400(v22);
}

void sub_100033CF0()
{
  OpenNavigationDestinationAction.target.getter();
}

void sub_100033CF8(uint64_t a1)
{
  OpenNavigationDestinationAction.target.setter(a1);
}

uint64_t (*sub_100033D00(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100033B08;
}

void sub_100033D48(uint64_t a1@<X8>)
{
  sub_10003E640(OpenNavigationDestinationAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t _s9Shortcuts31OpenNavigationDestinationActionV14openAppWhenRunSbvgZ_0()
{
  return 1;
}

uint64_t sub_100033D74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D163C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return OpenNavigationDestinationAction.perform()(a1, v4);
}

void sub_100033DCC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  OpenNavigationDestinationAction.init()();
  *a1 = v2;
}

uint64_t sub_100033DF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F5E8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100033E18()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v37 = type metadata accessor for String.LocalizationValue.Placeholder(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v1 = (char *)&v32 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D0638);
  __chkstk_darwin(v5);
  v38 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v36);
  v33 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100042138(v18, static WorkflowEntity.typeDisplayRepresentation);
  v34 = sub_100032758(v18, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
  v19 = String.LocalizationValue.init(stringLiteral:)(0x74756374726F6853, 0xE800000000000000);
  static Locale.current.getter(v19);
  v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v21(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, 0, 0, 256);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  v23 = v35;
  v24 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v1, enum case for String.LocalizationValue.Placeholder.int(_:), v37);
  v25 = sub_10003E874((uint64_t)v1);
  v27 = v26;
  String.LocalizationValue.StringInterpolation.appendInterpolation(placeholder:specifier:)(v1, v25, v26);
  swift_bridgeObjectRelease(v27);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v1, v24);
  v28._countAndFlagsBits = 0x756374726F687320;
  v28._object = (void *)0xEA00000000007374;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
  v29 = String.LocalizationValue.init(stringInterpolation:)(v4);
  static Locale.current.getter(v29);
  v21(v10, v20, v32);
  v30 = (uint64_t)v38;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, 0, 0, 256);
  sub_100015D74(v30, 0, 1, v36);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v33, v30);
}

uint64_t WorkflowEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0548, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static WorkflowEntity.typeDisplayRepresentation, (uint64_t)sub_100033E18);
}

void static WorkflowEntity.typeDisplayRepresentation.getter()
{
  sub_1000338A0();
}

void static WorkflowEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0548, (uint64_t)&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static WorkflowEntity.typeDisplayRepresentation, (uint64_t)sub_100033E18);
}

void static WorkflowEntity.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1000D0548 != -1)
    swift_once(&qword_1000D0548, sub_100033E18);
  v0 = sub_100042D94();
  sub_1000422E8(v0, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
  sub_100018188();
}

void *WorkflowEntity.persistentIdentifier.unsafeMutableAddressor()
{
  return &static WorkflowEntity.persistentIdentifier;
}

unint64_t static WorkflowEntity.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

void WorkflowEntity.id.getter(uint64_t a1)
{
  WFDatabaseObjectDescriptor.id.getter(a1);
  sub_100018188();
}

void WorkflowEntity.displayRepresentation.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45[3];
  uint64_t v46;

  sub_100018190();
  v1 = v0;
  v3 = v2;
  sub_100012E2C(&qword_1000D15F8);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_1000429E4(v5, v45[0]);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  sub_100018034();
  __chkstk_darwin(v13);
  sub_100026F1C();
  v16 = v14 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v45 - v18;
  v20 = (void *)objc_opt_self(WFWorkflowIconDrawer);
  v21 = objc_msgSend(v1, "icon");
  v22 = objc_msgSend(v20, "imageWithIcon:size:", v21, 31.0, 31.0);

  v45[2] = v3;
  v46 = v9;
  if (v22)
  {
    v45[0] = sub_10003F424(v22);
    v24 = v23;
  }
  else
  {
    v45[0] = 0;
    v24 = 0xF000000000000000;
  }
  v25 = 1;
  sub_100042A10();
  sub_1000427F8();
  v26 = objc_msgSend(v1, "name");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30._countAndFlagsBits = v27;
  v30._object = v29;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v30);
  swift_bridgeObjectRelease(v29);
  sub_1000427F8();
  v31 = v12;
  LocalizedStringResource.init(stringInterpolation:)(v19);
  sub_10003F950(v1, (SEL *)&selRef_subtitle);
  v33 = v32;
  swift_bridgeObjectRelease(v32);
  if (v33)
  {
    sub_100042A10();
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v34);
    sub_10003F950(v1, (SEL *)&selRef_subtitle);
    if (!v36)
    {
      __break(1u);
      return;
    }
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v35);
    sub_1000183D0();
    sub_1000427F8();
    LocalizedStringResource.init(stringInterpolation:)(v16);
    v25 = 0;
  }
  v37 = v45[1];
  v38 = 1;
  sub_100015D74((uint64_t)v8, v25, 1, v46);
  if (v24 >> 60 != 15)
  {
    v39 = sub_100042D10();
    sub_10003F3E0(v39, v40);
    v41 = sub_100042D10();
    DisplayRepresentation.Image.init(data:isTemplate:)(v41);
    v38 = 0;
  }
  v42 = sub_100042D9C();
  sub_100015D74(v37, v38, 1, v42);
  DisplayRepresentation.init(title:subtitle:image:)(v31, v8, v37);
  v43 = sub_100042D10();
  sub_10003F388(v43, v44);
  sub_100018094();
}

uint64_t WorkflowEntity.WorkflowQuery.entities(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_100042324((uint64_t)sub_100034578);
}

#error "1000346E0: call analysis failed (funcsize=117)"

uint64_t WorkflowEntity.WorkflowQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_100042324((uint64_t)sub_10003475C);
}

uint64_t sub_10003475C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v4 = objc_msgSend(v3, "sortedVisibleWorkflowsByName");

  v5 = objc_msgSend(v4, "descriptors");
  sub_100026AF8(v6, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v7);

  sub_100042DD8();
  v9 = (uint64_t)sub_1000320D4(v8, v1, v2);
  v10 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 >= 0)
      v9 &= 0xFFFFFFFFFFFFFF8uLL;
    v11 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
    {
LABEL_13:
      sub_1000183D0();
      v16 = sub_1000425DC();
      return sub_100042854(v16, v17);
    }
  }
  result = sub_100042CD8();
  if ((v11 & 0x8000000000000000) == 0)
  {
    v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = sub_100042A24();
      else
        v14 = (uint64_t)sub_100042A80();
      ++v13;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(_swiftEmptyArrayStorage[2]);
      v15 = sub_100042970();
      specialized ContiguousArray._endMutation()(v15);
    }
    while (v11 != v13);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t WorkflowEntity.WorkflowQuery.suggestedEntities()()
{
  return sub_100042324((uint64_t)sub_1000348FC);
}

uint64_t sub_1000348FC()
{
  unint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  _QWORD *v20;

  v1 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v2 = objc_msgSend(v1, "sortedVisibleWorkflowsByName");
  sub_100027668();
  v4 = sub_100019EAC(v3, "descriptors");
  sub_100042738();
  sub_100026AF8(v5, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v6);
  sub_100027668();
  if (v0 >> 62)
  {
    sub_100042A6C();
    v7 = _CocoaArrayWrapper.endIndex.getter(v1);
    sub_1000183D0();
    if (v7)
      goto LABEL_3;
LABEL_9:
    sub_1000183D0();
    v18 = sub_1000425DC();
    return v19(v18);
  }
  v7 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_9;
LABEL_3:
  v20 = _swiftEmptyArrayStorage;
  result = sub_100042CD8();
  if ((v7 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if ((v0 & 0xC000000000000001) != 0)
        sub_100042A24();
      else
        sub_100042A80();
      v9 = sub_100042AE8();
      sub_100042A94(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t)v20);
      v17 = sub_100042970();
      specialized ContiguousArray._endMutation()(v17);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100034A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_1000D164C);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100034AA4;
  return WorkflowEntity.WorkflowQuery.entities(matching:)(a2, a3);
}

uint64_t sub_100034AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return sub_100042860(*(uint64_t (**)(void))(v6 + 8));
}

uint64_t sub_100034AF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1000D1644);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100034B44;
  return WorkflowEntity.WorkflowQuery.entities(for:)(a1);
}

uint64_t sub_100034B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1000424E0();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_100034B7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_1000D1654);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100042264;
  return WorkflowEntity.WorkflowQuery.suggestedEntities()();
}

uint64_t sub_100034BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10003FEE4();
  *v5 = v2;
  v5[1] = sub_100042248;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100034C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100034C9C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_100034C9C()
{
  uint64_t v0;

  sub_1000424E0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100034CC8(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  WorkflowEntity.id.getter(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void sub_100034CF0(uint64_t a1@<X8>)
{
  sub_10003E640(WorkflowEntity.typeDisplayRepresentation.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_100034D04(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100015DA4();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

void sub_100034D3C()
{
  WorkflowEntity.displayRepresentation.getter();
}

uint64_t sub_100034D44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100040194();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void OpenWorkflowAction.init()()
{
  sub_1000426B4();
}

void sub_100034D94()
{
  sub_10003E098();
}

uint64_t OpenWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0550, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenWorkflowAction.title, (uint64_t)sub_100034D94);
}

void static OpenWorkflowAction.title.getter()
{
  sub_1000338A0();
}

void static OpenWorkflowAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0550, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenWorkflowAction.title, (uint64_t)sub_100034D94);
}

void static OpenWorkflowAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0550 != -1)
    swift_once(&qword_1000D0550, sub_100034D94);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static OpenWorkflowAction.title);
  sub_100018188();
}

void sub_100034E88()
{
  sub_10003E2B0();
}

uint64_t OpenWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0558, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static OpenWorkflowAction.description, (uint64_t)sub_100034E88);
}

uint64_t static OpenWorkflowAction.description.getter()
{
  return sub_100034EF4();
}

uint64_t sub_100034EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_100042BB8();
  if (!v6)
    sub_100042D6C(v2, v3, v4, v5);
  v7 = sub_100042DA4();
  v8 = sub_100032758(v7, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v0, v8, v7);
}

void AddShortcutToHomeScreenAction.shortcut.getter()
{
  sub_100042620();
  sub_1000270C4();
}

void AddShortcutToHomeScreenAction.shortcut.setter(void *a1)
{
  void *v1;
  id v2;

  v2 = sub_100042A08(a1);
  sub_1000426BC((uint64_t)v2);

  sub_1000270C4();
}

uint64_t OpenWorkflowAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = a2;
  sub_1000424D8();
  v2[6] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100034FDC()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  swift_release(v0[6]);
  v1 = sub_100031094();
  if (v1)
  {
    v2 = v1;
    v0[2] = v1;
    IntentParameter.wrappedValue.getter();
    v3 = (void *)v0[3];
    v4 = type metadata accessor for MainViewController(0);
    sub_1000040A8(&qword_1000D1020, type metadata accessor for MainViewController);
    v6 = WorkflowOpener.openWorkflow(_:)(v3, v4, v5);

    v1 = (id)swift_unknownObjectRelease(v6);
  }
  static IntentResult.result<>()(v1);
  v7 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042400(v7);
}

void sub_10003508C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = v2;
}

void sub_1000350B4(void **a1)
{
  AddShortcutToHomeScreenAction.shortcut.setter(*a1);
}

void sub_1000350C0(uint64_t a1@<X8>)
{
  sub_10003E640(OpenWorkflowAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000350D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D165C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return OpenWorkflowAction.perform()(a1, v4);
}

void sub_10003512C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  OpenWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_100035150(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F52C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100035178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _BYTE v20[24];

  v1 = type metadata accessor for LibraryWorkflowCreationBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (void **)&v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for LibraryConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
  swift_beginAccess(v9, v20, 0, 0);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  LibraryConfiguration.workflowCreationBehavior.getter(v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = (*(uint64_t (**)(void **, uint64_t))(v2 + 88))(v4, v1);
  if (v11 != enum case for LibraryWorkflowCreationBehavior.inFolder(_:))
  {
    if (v11 == enum case for LibraryWorkflowCreationBehavior.forWorkflowType(_:))
    {
      (*(void (**)(void **, uint64_t))(v2 + 96))(v4, v1);
      v15 = *v4;
      v16 = (id)WFWorkflowCollectionIdentifierForWorkflowType(v15);
      if (v16)
      {
        v17 = v16;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);

        return v14;
      }

    }
    else
    {
      (*(void (**)(void **, uint64_t))(v2 + 8))(v4, v1);
    }
    return 0;
  }
  (*(void (**)(void **, uint64_t))(v2 + 96))(v4, v1);
  v12 = *v4;
  v13 = objc_msgSend(v12, "identifier");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

  return v14;
}

void CreateWorkflowAction.init()()
{
  sub_1000426AC();
}

void sub_100035388()
{
  sub_10003E098();
}

uint64_t CreateWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0560, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateWorkflowAction.title, (uint64_t)sub_100035388);
}

void static CreateWorkflowAction.title.getter()
{
  sub_1000338A0();
}

void static CreateWorkflowAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0560, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateWorkflowAction.title, (uint64_t)sub_100035388);
}

void static CreateWorkflowAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0560 != -1)
    swift_once(&qword_1000D0560, sub_100035388);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static CreateWorkflowAction.title);
  sub_100018188();
}

void sub_10003547C()
{
  sub_10003E2B0();
}

uint64_t CreateWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0568, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static CreateWorkflowAction.description, (uint64_t)sub_10003547C);
}

uint64_t static CreateWorkflowAction.description.getter()
{
  return sub_100034EF4();
}

void static CreateWorkflowAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1660);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1668);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F490();
  sub_1000424C4(22, 1);
  v3._object = (void *)0x800000010009CF20;
  v3._countAndFlagsBits = 0xD000000000000016;
  sub_100042468(v3);
  swift_getKeyPath(&unk_1000977B0);
  v2 = sub_100012E2C(&qword_1000D1678);
  sub_100042348(v2);
  sub_100042590();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100042468(v4);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

uint64_t CreateWorkflowAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  sub_1000424D8();
  v2[7] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042408(v3, v4, v5);
}

uint64_t sub_100035648()
{
  uint64_t v0;
  void **v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  id v24;

  v1 = (void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = sub_100031094();
  sub_100042CB4();
  v3 = *(_QWORD *)(v0 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 16);
    v5 = objc_allocWithZone((Class)WFWorkflowRecord);
    v6 = sub_100042D88();
    v7 = swift_bridgeObjectRetain(v6);
    v8 = sub_100019D50(v7, "init");
    sub_10003F568(v4, v3, v8);
    swift_bridgeObjectRelease_n(v3, 2);
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowCreationOptions), "initWithRecord:", v8);

  if (!v2)
    goto LABEL_8;
  v10 = v2;
  v11 = (void *)sub_10001AD7C();

  if (!v11)
    goto LABEL_9;
  sub_100035178();
  v13 = v12;

  if (v13)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
LABEL_8:
    v11 = 0;
  }
LABEL_9:
  objc_msgSend(v9, "setCollectionIdentifier:", v11);

  v14 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  *v1 = 0;
  v15 = objc_msgSend(v14, "createWorkflowWithOptions:nameCollisionBehavior:error:", v9, 0, v0 + 16);

  v16 = *v1;
  if (v15)
  {
    v17 = v16;
    v18 = v15;
    OpenWorkflowAction.init()();
    v20 = v19;
    *(_QWORD *)(v0 + 16) = v18;
    v21 = v18;
    IntentParameter.wrappedValue.setter(v0 + 16);
    *(_QWORD *)(v0 + 16) = v21;
    *(_QWORD *)(v0 + 32) = v20;
    v22 = sub_10003F4F0();
    v23 = sub_10003F52C();
    static IntentResult.result<A, B>(value:opensIntent:)(v0 + 16, v0 + 32, &type metadata for WorkflowEntity, &type metadata for OpenWorkflowAction, v22, v23);

    swift_release(v20);
  }
  else
  {
    v24 = v16;
    _convertNSErrorToError(_:)(v16);

    sub_100042D00();
  }

  return sub_1000423C8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1000358D8(uint64_t a1@<X8>)
{
  sub_10003E640(CreateWorkflowAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000358F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D1684);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return CreateWorkflowAction.perform()(a1, v4);
}

void sub_10003594C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CreateWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_100035970(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F490();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void CreateFolderAction.init()()
{
  sub_1000426AC();
}

void sub_1000359C0()
{
  sub_10003E098();
}

uint64_t CreateFolderAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0570, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateFolderAction.title, (uint64_t)sub_1000359C0);
}

void static CreateFolderAction.title.getter()
{
  sub_1000338A0();
}

void static CreateFolderAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0570, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateFolderAction.title, (uint64_t)sub_1000359C0);
}

void static CreateFolderAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0570 != -1)
    swift_once(&qword_1000D0570, sub_1000359C0);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static CreateFolderAction.title);
  sub_100018188();
}

void sub_100035AB4()
{
  sub_10003E2B0();
}

uint64_t CreateFolderAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0578, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static CreateFolderAction.description, (uint64_t)sub_100035AB4);
}

uint64_t static CreateFolderAction.description.getter()
{
  return sub_100034EF4();
}

void static CreateFolderAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1698);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D16A0);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F5AC();
  sub_1000424C4(20, 1);
  v3._object = (void *)0x800000010009CF40;
  v3._countAndFlagsBits = 0xD000000000000014;
  sub_100042468(v3);
  swift_getKeyPath(&unk_1000977D8);
  v2 = sub_100012E2C(&qword_1000D16B0);
  sub_100042348(v2);
  sub_100042590();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100042468(v4);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

void SearchShortcutsAction.searchPhrase.getter()
{
  sub_100042620();
  sub_1000270C4();
}

void SearchShortcutsAction.searchPhrase.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_100042B88(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1000270C4();
}

uint64_t CreateFolderAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_100042598();
  v2[8] = v3;
  v2[9] = sub_1000423D4(*(_QWORD *)(v3 - 8));
  v2[10] = sub_1000424BC();
  v2[11] = sub_1000424BC();
  sub_1000424D8();
  v2[12] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042408(v4, v5, v6);
}

uint64_t sub_100035CDC()
{
  _QWORD *v0;
  void **v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(void);
  id v21;

  sub_100042AF8();
  v1 = (void **)(v0 + 4);
  v2 = (void *)v0[7];
  swift_release(v0[12]);
  v3 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  sub_100042CD0();
  if (v0[3])
  {
    String._bridgeToObjectiveC()();
    v4 = sub_100042D88();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v2 = 0;
  }
  v5 = objc_msgSend((id)objc_opt_self(WFWorkflowCollection), "defaultGlyphCharacter");
  *v1 = 0;
  v6 = objc_msgSend(v3, "createFolderWithName:icon:error:", v2, v5, v0 + 4);

  v7 = *v1;
  if (v6)
  {
    v8 = v0[10];
    v9 = (_QWORD *)v0[11];
    v11 = v0[8];
    v10 = v0[9];
    *v9 = v6;
    v12 = enum case for RootNavigationDestination.folder(_:);
    v13 = sub_100026B08();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v9, v12, v13);
    v14 = v7;
    v15 = v6;
    OpenNavigationDestinationAction.init()();
    v16 = sub_100042D88();
    sub_100032B1C(v16, v8);
    sub_100032B1C(v8, v10);
    IntentParameter.wrappedValue.setter(v10);
    sub_100032B60(v8);
    v0[5] = v7;
    sub_1000040A8((unint64_t *)&qword_1000D16C0, type metadata accessor for NavigationDestinationEntity);
    v18 = v17;
    v19 = sub_10003F5E8();
    static IntentResult.result<A, B>(value:opensIntent:)(v9, v0 + 5, v11, &type metadata for OpenNavigationDestinationAction, v18, v19);

    sub_100032B60((uint64_t)v9);
    swift_release(v7);
    sub_10004257C();
    sub_100042608();
    sub_10004255C();
  }
  else
  {
    v21 = v7;
    _convertNSErrorToError(_:)(v7);

    sub_100042D00();
    sub_10004255C();
    sub_10004257C();
    sub_1000426E0();
  }
  v20 = (uint64_t (*)(void))sub_1000428F0();
  return sub_10004244C(v20);
}

uint64_t sub_100035F0C()
{
  _QWORD *v0;

  return CreateWorkflowAction.name.getter(*v0);
}

uint64_t sub_100035F14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return CreateWorkflowAction.name.setter(a1, a2, *v2);
}

void sub_100035F1C(uint64_t a1@<X8>)
{
  sub_10003E640(CreateFolderAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_100035F34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D16BC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return CreateFolderAction.perform()(a1, v4);
}

void sub_100035F8C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CreateFolderAction.init()();
  *a1 = v2;
}

uint64_t sub_100035FB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F5AC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void MoveShortcutToFolderAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_100018190();
  v54 = sub_1000182A4();
  v51 = *(_QWORD **)(v54 - 8);
  sub_100018044();
  __chkstk_darwin(v3);
  sub_1000180EC(v4, (uint64_t)v41);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100018168(v6, (uint64_t)v41);
  __chkstk_darwin(v7);
  sub_100042D58();
  sub_100012E2C(&qword_1000D0630);
  sub_100018034();
  __chkstk_darwin(v8);
  sub_100018404(v9, (uint64_t)v41);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000424AC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v13;
  sub_100042950();
  __chkstk_darwin(v16);
  sub_100042470();
  sub_100018034();
  __chkstk_darwin(v17);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1000182B4();
  sub_100018044();
  __chkstk_darwin(v21);
  sub_100026BF0();
  v43 = v0;
  v49 = sub_100012E2C(&qword_1000D0640);
  sub_100042898();
  sub_1000182E4();
  v22 = *(void (**)(_QWORD))(v14 + 104);
  v44 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v45 = v15;
  ((void (*)(uint64_t, _QWORD, uint64_t))v22)(v2, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  v46 = v22;
  sub_100042280((uint64_t)v20);
  sub_100042610(0xD000000000000022, (uint64_t)"The folder to move the shortcut to");
  sub_1000182E4();
  v23 = sub_100042B4C();
  v22(v23);
  sub_100042280((uint64_t)v20);
  v41 = v12;
  sub_100042C60((uint64_t)v12);
  v24 = sub_100042598();
  sub_100015D74(v50, 1, 1, v24);
  sub_1000182AC();
  v42 = v1;
  sub_1000423F0(v1);
  sub_1000423F0(v52);
  v47 = enum case for InputConnectionBehavior.default(_:);
  v51 = (_QWORD *)v51[13];
  sub_100042C94(enum case for InputConnectionBehavior.default(_:), (uint64_t (*)(_QWORD, uint64_t, _QWORD))v51);
  sub_100016080();
  sub_100042C80();
  v50 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v25, v26, v27, v28, v29, v30);
  sub_100012E2C(&qword_1000D0678);
  sub_100042750();
  sub_1000182E4();
  v31 = v46;
  ((void (*)(uint64_t, _QWORD, uint64_t))v46)(v2, v44, v45);
  sub_100042280((uint64_t)v20);
  sub_100018380(21, 0x800000010009B830);
  sub_1000182E4();
  v32 = sub_100042B4C();
  v31(v32);
  v33 = (uint64_t)v41;
  sub_100042280((uint64_t)v20);
  sub_100015D74(v33, 0, 1, v48);
  v55 = 0;
  sub_1000423F0(v42);
  sub_1000423F0(v52);
  v34 = v53;
  ((void (*)(uint64_t, _QWORD, uint64_t))v51)(v53, v47, v54);
  sub_100015DA4();
  v35 = sub_100042D1C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v35, v36, v37, v38, v39, v34, v40);
  sub_100018094();
}

void sub_100036324()
{
  sub_10003E098();
}

uint64_t MoveShortcutToFolderAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0580, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static MoveShortcutToFolderAction.title, (uint64_t)sub_100036324);
}

void static MoveShortcutToFolderAction.title.getter()
{
  sub_1000338A0();
}

void static MoveShortcutToFolderAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0580, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static MoveShortcutToFolderAction.title, (uint64_t)sub_100036324);
}

void static MoveShortcutToFolderAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0580 != -1)
    swift_once(&qword_1000D0580, sub_100036324);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static MoveShortcutToFolderAction.title);
  sub_100018188();
}

void sub_100036418()
{
  sub_10003E2B0();
}

uint64_t MoveShortcutToFolderAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0588, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static MoveShortcutToFolderAction.description, (uint64_t)sub_100036418);
}

uint64_t static MoveShortcutToFolderAction.description.getter()
{
  return sub_100034EF4();
}

void static MoveShortcutToFolderAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D16D0);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D16D8);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F624();
  sub_1000424C4(9, 2);
  v4._countAndFlagsBits = 0x2065766F4DLL;
  v4._object = (void *)0xE500000000000000;
  sub_100042468(v4);
  swift_getKeyPath(&unk_100097800);
  v2 = sub_100012E2C(&qword_1000D16E8);
  sub_100042348(v2);
  sub_100042590();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  sub_100042468(v5);
  swift_getKeyPath(&unk_100097828);
  v3 = sub_100012E2C(&qword_1000D16F0);
  sub_100042348(v3);
  sub_100042590();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  sub_100042468(v6);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

void GetShortcutAttributesAction.shortcut.getter()
{
  sub_100042A8C();
  sub_1000270C4();
}

void MoveShortcutToFolderAction.shortcuts.setter(uint64_t a1)
{
  uint64_t v1;

  v1 = a1;
  IntentParameter.wrappedValue.setter(&v1);
  sub_1000270C4();
}

void AddShortcutToHomeScreenAction.title.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_10004233C();
  *(_QWORD *)(v0 + 32) = sub_100042330((uint64_t)v1);
  sub_100018388();
}

unint64_t MoveShortcutToFolderAction.MoveError.errorDescription.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000029;
  else
    return 0xD000000000000023;
}

void MoveShortcutToFolderAction.MoveError.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  sub_100018188();
}

void MoveShortcutToFolderAction.MoveError.hashValue.getter(uint64_t a1)
{
  char v1;

  sub_100042C30(a1);
  Hasher._combine(_:)(v1 & 1);
  Hasher._finalize()();
  sub_100042DE0();
}

void sub_100036694()
{
  unsigned __int8 *v0;

  MoveShortcutToFolderAction.MoveError.hashValue.getter(*v0);
}

void sub_10003669C(uint64_t a1)
{
  char *v1;

  MoveShortcutToFolderAction.MoveError.hash(into:)(a1, *v1);
}

unint64_t sub_1000366A4()
{
  char *v0;

  return MoveShortcutToFolderAction.MoveError.errorDescription.getter(*v0);
}

uint64_t MoveShortcutToFolderAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = sub_100026B08();
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = sub_100042314(v5);
  v6 = sub_100042598();
  v3[11] = sub_1000423D4(*(_QWORD *)(v6 - 8));
  v3[12] = sub_1000424BC();
  v3[13] = sub_1000424BC();
  sub_1000424D8();
  v3[14] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_10003674C()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;

  sub_100042AF8();
  swift_release(v0[14]);
  v1 = sub_100031094();
  if (!v1)
  {
    v11 = sub_10003F668();
    sub_100042540((uint64_t)&type metadata for MoveShortcutToFolderAction.MoveError, v11);
    *v12 = 0;
    sub_1000428E0();
    goto LABEL_9;
  }
  v2 = v1;
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  sub_100015140();
  v7 = v6;

  swift_retain_n(*(_QWORD *)&v7[OBJC_IVAR___WFSidebarViewController_shortcutMoveService], 2);
  ((void (*)(void))IntentParameter.wrappedValue.getter)();
  sub_100042644(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5);
  if ((_DWORD)v8 != enum case for RootNavigationDestination.folder(_:))
  {
    if ((_DWORD)v8 == enum case for RootNavigationDestination.allShortcuts(_:))
    {
      v10 = 0;
      goto LABEL_7;
    }
    v20 = v0[9];
    v21 = sub_10003F668();
    sub_100042540((uint64_t)&type metadata for MoveShortcutToFolderAction.MoveError, v21);
    *v22 = 1;
    sub_1000428E0();
    sub_10004277C();
    sub_100042A4C(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
LABEL_9:
    swift_task_dealloc(v0[13]);
    sub_10004255C();
    sub_100042608();
    sub_10004257C();
    v19 = (uint64_t (*)(void))v0[1];
    return sub_10004244C(v19);
  }
  v9 = (void **)v0[10];
  v8 = (*(uint64_t (**)(void **, _QWORD))(v0[9] + 96))(v9, v0[8]);
  v10 = *v9;
LABEL_7:
  IntentParameter.wrappedValue.getter(v8);
  v13 = sub_100030F48(v0[2]);
  sub_100018420();
  dispatch thunk of ShortcutMoveService.prepend(_:to:source:)(v13, v10, 0x100000000);
  v14 = v0[12];
  v15 = v0[11];
  sub_1000273A0();
  OpenNavigationDestinationAction.init()();
  v17 = v16;
  IntentParameter.wrappedValue.getter(v16);
  sub_100032B1C(v14, v15);
  IntentParameter.wrappedValue.setter(v15);
  sub_100032B60(v14);
  v0[4] = v17;
  v18 = sub_10003F5E8();
  static IntentResult.result<A>(opensIntent:)(v0 + 4, &type metadata for OpenNavigationDestinationAction, v18);
  sub_10004277C();
  swift_release(v17);

  sub_1000428D0();
  sub_100042710();
  sub_1000426E0();
  sub_100042608();
  v19 = (uint64_t (*)(void))sub_1000426D4();
  return sub_10004244C(v19);
}

void sub_100036990(uint64_t a1@<X8>)
{
  sub_10003E640(MoveShortcutToFolderAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000369A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000D16FC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100042248;
  return MoveShortcutToFolderAction.perform()(a1, v5, v4);
}

void sub_100036A0C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  MoveShortcutToFolderAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100036A30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F624();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t AddShortcutToHomeScreenAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  sub_100018190();
  v82 = v2;
  v83 = v3;
  sub_100012E2C(&qword_1000D0688);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_100018548();
  v73 = v5;
  sub_100012E2C(&qword_1000D0660);
  sub_100018034();
  __chkstk_darwin(v6);
  sub_100018548();
  v72 = v7;
  v8 = sub_1000182A4();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100042990(v10, v66);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_10004248C();
  v71 = v12;
  sub_100042654();
  __chkstk_darwin(v13);
  sub_100042D58();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v14);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000424AC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  sub_100042950();
  __chkstk_darwin(v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v23);
  v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v26);
  v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1000182B4();
  sub_100018044();
  __chkstk_darwin(v29);
  sub_100018458();
  v67 = v1;
  v69 = sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_1000423B0();
  sub_1000427B4();
  v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v31 = *(void (**)(uint64_t))(v18 + 104);
  v32 = sub_100042D4C();
  v75 = v19;
  v31(v32);
  v74 = v31;
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100042C08();
  sub_100018380(39, v33);
  sub_1000427B4();
  ((void (*)(char *, uint64_t, uint64_t))v31)(v22, v30, v19);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100018124((uint64_t)v16, 0);
  *(_QWORD *)&v81 = 0;
  v79 = sub_1000182AC();
  v68 = v0;
  sub_1000423F0(v0);
  sub_1000423F0(v71);
  v78 = enum case for InputConnectionBehavior.default(_:);
  v76 = *(_QWORD *)(v76 + 104);
  v34 = v70;
  ((void (*)(uint64_t))v76)(v70);
  sub_100015DA4();
  v35 = v67;
  v36 = sub_100042A30();
  v71 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v36, v37, v38, v39, v40, v41, v42);
  v69 = sub_100012E2C(&qword_1000D0680);
  String.LocalizationValue.init(stringLiteral:)(0x54206D6F74737543, 0xEC000000656C7469);
  sub_1000427B4();
  v43 = sub_100042D4C();
  v44 = (void (*)(char *, uint64_t, uint64_t))v74;
  v45 = v75;
  v74(v43);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_1000427E8(0xD00000000000002ELL, (uint64_t)"An optional title for the Home Screen shortcut");
  sub_1000427B4();
  v44(v22, v30, v45);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100042A58();
  v81 = xmmword_1000967F0;
  v46 = sub_100042DAC();
  sub_100026B84(v72, v47, v48, v46);
  v49 = v68;
  v50 = sub_100042B24();
  ((void (*)(uint64_t))v76)(v50);
  v51 = sub_100042A30();
  v72 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v51, v52, v53, v54, v55, v56);
  v69 = sub_100012E2C(&qword_1000D0690);
  sub_10001853C(1734438217);
  sub_1000427B4();
  v57 = sub_100042D4C();
  v58 = v74;
  v74(v57);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_1000427E8(0xD000000000000035, (uint64_t)"An optional custom image for the Home Screen shortcut");
  sub_1000427B4();
  v59 = sub_100042D4C();
  v58(v59);
  sub_100018084((uint64_t)v28, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v25, (uint64_t)v22);
  sub_100042A58();
  v60 = type metadata accessor for IntentFile(0);
  v61 = v73;
  sub_100026B84(v73, v62, v63, v60);
  v64 = sub_100042B24();
  ((void (*)(uint64_t))v76)(v64);
  IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v35, v16, v61, &off_1000BFD48, v49, v34);
  return v71;
}

void sub_100036F6C()
{
  sub_10003E098();
}

uint64_t AddShortcutToHomeScreenAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0590, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static AddShortcutToHomeScreenAction.title, (uint64_t)sub_100036F6C);
}

void static AddShortcutToHomeScreenAction.title.getter()
{
  sub_1000338A0();
}

void static AddShortcutToHomeScreenAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0590, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static AddShortcutToHomeScreenAction.title, (uint64_t)sub_100036F6C);
}

void static AddShortcutToHomeScreenAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0590 != -1)
    swift_once(&qword_1000D0590, sub_100036F6C);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static AddShortcutToHomeScreenAction.title);
  sub_100018188();
}

void sub_100037058()
{
  sub_10003E2B0();
}

uint64_t AddShortcutToHomeScreenAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0598, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static AddShortcutToHomeScreenAction.description, (uint64_t)sub_100037058);
}

uint64_t static AddShortcutToHomeScreenAction.description.getter()
{
  return sub_100034EF4();
}

void static AddShortcutToHomeScreenAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1708);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1710);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F6A4();
  sub_1000424C4(19, 1);
  v4._countAndFlagsBits = 543450177;
  v4._object = (void *)0xE400000000000000;
  sub_100042468(v4);
  swift_getKeyPath(&unk_100097850);
  v2 = sub_100012E2C(&qword_1000D1720);
  sub_100042348(v2);
  sub_100042590();
  v5._countAndFlagsBits = 0x656D6F48206F7420;
  v5._object = (void *)0xEF6E656572635320;
  sub_100042468(v5);
  sub_100042374();
  v3 = sub_1000428B0();
  IntentParameterSummary.init(_:table:_:)(v3);
  sub_100026D40();
}

void AddShortcutToHomeScreenAction.$shortcut.getter()
{
  sub_100042C28();
  sub_100018188();
}

void sub_1000371E0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.$shortcut.getter();
  *a1 = v2;
}

uint64_t sub_100037208()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  KeyPath = swift_getKeyPath(&unk_1000998B0);
  v1 = sub_10003F6A4();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = swift_getKeyPath(&unk_1000998D8);
  swift_retain(v2);
  v4 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v3, v1);
  swift_release(v3);
  v5 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100097720;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v4;
  v10 = v6;
  specialized Array._endMutation()(v6, v7);
  swift_retain(v4);
  v8 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v10, &type metadata for AddShortcutToHomeScreenAction, v1);
  swift_bridgeObjectRelease(v10);
  swift_release(v2);
  swift_release(v4);
  return v8;
}

void AddShortcutToHomeScreenAction.$title.getter()
{
  sub_100042E14();
  sub_100018188();
}

void sub_10003731C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.$title.getter();
  *a1 = v2;
}

void AddShortcutToHomeScreenAction.$image.getter()
{
  IntentParameter.projectedValue.getter();
  sub_100018188();
}

void sub_100037360(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.$image.getter();
  *a1 = v2;
}

void AddShortcutToHomeScreenAction.title.getter()
{
  sub_100042A8C();
  sub_1000270C4();
}

void AddShortcutToHomeScreenAction.title.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_100042B78(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1000270C4();
}

void AddShortcutToHomeScreenAction.image.getter(uint64_t a1)
{
  IntentParameter.wrappedValue.getter(a1);
  sub_100018188();
}

void AddShortcutToHomeScreenAction.image.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_100012E2C(&qword_1000D0688);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_10001827C();
  sub_10003F6E4();
  IntentParameter.wrappedValue.setter(v1);
  sub_10000D7B4(a1, &qword_1000D0688);
  sub_100018388();
}

void AddShortcutToHomeScreenAction.image.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_10004233C();
  *(_QWORD *)(v0 + 32) = sub_100042330((uint64_t)v1);
  sub_100018388();
}

void AddShortcutToHomeScreenAction.AddToHomeScreenError.localizedStringResource.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[16];

  sub_1000275E4();
  v2 = v1;
  v3 = sub_1000424AC();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100018488();
  sub_100042BF8();
  if (v2 == 2)
    v12 = 0xD000000000000035;
  else
    v12 = 0x100000000000001ELL;
  String.LocalizationValue.init(stringLiteral:)(v12, v11);
  sub_1000426A4();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v0, 0x6E65746E49707041, 0xEA00000000007374, v9, v6, 0, 0, 256);
  sub_100026D40();
}

BOOL static AddShortcutToHomeScreenAction.AddToHomeScreenError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AddShortcutToHomeScreenAction.AddToHomeScreenError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  sub_100018188();
}

void AddShortcutToHomeScreenAction.AddToHomeScreenError.hashValue.getter(uint64_t a1)
{
  unsigned __int8 v1;

  sub_100042C30(a1);
  Hasher._combine(_:)(v1);
  Hasher._finalize()();
  sub_100042DE0();
}

BOOL sub_100037614(char *a1, char *a2)
{
  return static AddShortcutToHomeScreenAction.AddToHomeScreenError.__derived_enum_equals(_:_:)(*a1, *a2);
}

void sub_100037620()
{
  unsigned __int8 *v0;

  AddShortcutToHomeScreenAction.AddToHomeScreenError.hashValue.getter(*v0);
}

void sub_100037628(uint64_t a1)
{
  unsigned __int8 *v1;

  AddShortcutToHomeScreenAction.AddToHomeScreenError.hash(into:)(a1, *v1);
}

void sub_100037630()
{
  AddShortcutToHomeScreenAction.AddToHomeScreenError.localizedStringResource.getter();
}

uint64_t AddShortcutToHomeScreenAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[27] = a3;
  v4[28] = a4;
  v4[25] = a1;
  v4[26] = a2;
  v5 = type metadata accessor for GlyphIconColorScheme(0);
  v4[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[30] = v6;
  v4[31] = sub_100042314(v6);
  v7 = type metadata accessor for AggregatedEntry(0);
  v4[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[33] = v8;
  v4[34] = sub_100042314(v8);
  v9 = sub_100012E2C(&qword_1000D12A8);
  v4[35] = sub_1000423D4(*(_QWORD *)(v9 - 8));
  v4[36] = sub_1000424BC();
  v10 = type metadata accessor for URL(0);
  v4[37] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[38] = v11;
  v4[39] = sub_100042314(v11);
  v12 = sub_100012E2C(&qword_1000D0688);
  v4[40] = sub_100042314(*(_QWORD *)(v12 - 8));
  v13 = type metadata accessor for IntentFile(0);
  v4[41] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[42] = v14;
  v4[43] = sub_100042314(v14);
  sub_1000424D8();
  v4[44] = sub_1000423A4();
  v15 = sub_100042368();
  v4[45] = v15;
  v4[46] = v16;
  return sub_100042408((uint64_t)sub_100037768, v15, v16);
}

uint64_t sub_100037768()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  NSString v74;
  unsigned int v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  sub_100042788();
  IntentParameter.wrappedValue.getter(v2);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = sub_100018420();
  v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    IntentParameter.wrappedValue.getter(v5);
    v7 = *(_QWORD *)(v1 + 136);
    v8 = *(_QWORD *)(v1 + 144);
  }
  else
  {
    v9 = IntentParameter.wrappedValue.getter(v5);
    v10 = sub_100019D50(v9, "name");
    sub_100026F4C();
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
    v8 = v11;

  }
  sub_100042CD0();
  if (sub_100042C40() != 1)
  {
    v31 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 336) + 32))(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
    ((void (*)(uint64_t))IntentFile.fileURL.getter)(v31);
    v32 = sub_100042C40();
    v33 = *(_QWORD *)(v1 + 288);
    if (v32 == 1)
    {
      v34 = *(_QWORD *)(v1 + 344);
      v36 = *(_QWORD *)(v1 + 328);
      v35 = *(_QWORD *)(v1 + 336);
      swift_release(*(_QWORD *)(v1 + 352));
      sub_100042A00();
      sub_10000D7B4(v33, &qword_1000D12A8);
      v37 = sub_10003F720();
      sub_100042540((uint64_t)&type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError, v37);
      *v38 = 0;
      sub_1000428E0();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 304) + 32))(*(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 296));
      if (URL.startAccessingSecurityScopedResource()())
      {
        v39 = ((uint64_t (*)(_QWORD, _QWORD))Data.init(contentsOf:options:))(*(_QWORD *)(v1 + 312), 0);
        sub_100026AF8(v39, (unint64_t *)&unk_1000D3160, UIImage_ptr);
        v66 = sub_100042CF4();
        sub_10003F3E0(v66, v67);
        v68 = sub_100042CF4();
        v70 = sub_1000380A4(v68, v69);
        if (v70)
        {
          v71 = v70;
          v72 = objc_msgSend((id)objc_opt_self(WFHomeScreenController), "sharedInstance");
          sub_100042CD0();
          v73 = *(void **)(v1 + 184);
          v74 = String._bridgeToObjectiveC()();
          sub_100042A00();
          *(_QWORD *)(v1 + 192) = 0;
          v75 = objc_msgSend(v72, "addWorkflowToHomeScreen:withName:image:error:", v73, v74, v71, v1 + 192);

          v76 = *(void **)(v1 + 192);
          if (v75)
          {
            v77 = *(_QWORD *)(v1 + 336);
            v100 = *(_QWORD *)(v1 + 344);
            v78 = *(_QWORD *)(v1 + 328);
            v79 = *(_QWORD *)(v1 + 304);
            v80 = v76;

            sub_100042964();
            URL.stopAccessingSecurityScopedResource()();
            sub_100042A4C(*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
            (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v100, v78);
            goto LABEL_16;
          }
          v98 = *(_QWORD *)(v1 + 328);
          v102 = *(_QWORD *)(v1 + 344);
          v90 = *(_QWORD *)(v1 + 304);
          v89 = *(_QWORD *)(v1 + 312);
          v95 = *(_QWORD *)(v1 + 296);
          v97 = *(_QWORD *)(v1 + 336);
          v91 = v76;
          sub_100042AE0();
          _convertNSErrorToError(_:)(v76);

          swift_willThrow(v92);
          sub_100042964();

          URL.stopAccessingSecurityScopedResource()();
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v95);
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v102, v98);
        }
        else
        {
          v101 = *(_QWORD *)(v1 + 344);
          v82 = *(_QWORD *)(v1 + 328);
          v81 = *(_QWORD *)(v1 + 336);
          v84 = *(_QWORD *)(v1 + 304);
          v83 = *(_QWORD *)(v1 + 312);
          v85 = v8;
          v86 = *(_QWORD *)(v1 + 296);
          swift_release(*(_QWORD *)(v1 + 352));
          swift_bridgeObjectRelease(v85);
          v87 = sub_10003F720();
          sub_100042540((uint64_t)&type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError, v87);
          *v88 = 3;
          sub_1000428E0();
          sub_100042964();
          URL.stopAccessingSecurityScopedResource()();
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v86);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v101, v82);
        }
      }
      else
      {
        v42 = *(_QWORD *)(v1 + 344);
        v44 = *(_QWORD *)(v1 + 328);
        v43 = *(_QWORD *)(v1 + 336);
        v46 = *(_QWORD *)(v1 + 304);
        v45 = *(_QWORD *)(v1 + 312);
        v47 = *(_QWORD *)(v1 + 296);
        swift_release(*(_QWORD *)(v1 + 352));
        sub_100042A00();
        v48 = sub_10003F720();
        sub_100042540((uint64_t)&type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError, v48);
        *v49 = 0;
        sub_1000428E0();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
      }
    }
LABEL_15:
    swift_task_dealloc(*(_QWORD *)(v1 + 344));
    sub_100042804();
    sub_10004255C();
    sub_100042608();
    sub_10004257C();
    sub_100042710();
    sub_1000428D0();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  sub_10000D7B4(*(_QWORD *)(v1 + 320), &qword_1000D0688);
  v12 = sub_100042CB4();
  v13 = sub_100019D50(v12, "icon");
  sub_100026F4C();
  v14 = objc_msgSend((id)(v1 + 176), "glyphCharacter");

  v15 = (id)((uint64_t (*)(id))WFSystemImageNameForGlyphCharacter)(v14);
  if (!v15)
  {
    swift_release(*(_QWORD *)(v1 + 352));
    sub_100042A00();
    v40 = sub_10003F720();
    sub_100042540((uint64_t)&type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError, v40);
    *v41 = 2;
    sub_1000428E0();
    goto LABEL_15;
  }
  v16 = v15;
  v18 = *(_QWORD *)(v1 + 264);
  v17 = *(_QWORD **)(v1 + 272);
  v99 = v8;
  v20 = *(_QWORD **)(v1 + 248);
  v19 = *(_QWORD *)(v1 + 256);
  v93 = *(_QWORD *)(v1 + 240);
  v94 = *(_QWORD *)(v1 + 232);
  v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v22 = v21;

  v23 = objc_msgSend((id)objc_opt_self(WFHomeScreenController), "sharedInstance");
  IntentParameter.wrappedValue.getter(v23);
  *v17 = *(_QWORD *)(v1 + 168);
  v24 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v17, enum case for AggregatedEntry.userShortcut(_:), v19);
  v25 = IntentParameter.wrappedValue.getter(v24);
  v26 = *(_QWORD *)(v1 + 152);
  v27 = sub_100019D50(v25, "icon");
  sub_100027668();
  v29 = sub_100019EAC(v28, "backgroundColor");
  sub_100042738();
  *v20 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v93 + 104))(v20, enum case for GlyphIconColorScheme.palette(_:), v94);
  v30 = v23;
  ((void (*)(_QWORD *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))WFHomeScreenController.add(entry:name:colorScheme:symbolName:))(v17, v7, v99, v20, v96, v22);
  v52 = *(_QWORD *)(v1 + 264);
  v51 = *(_QWORD *)(v1 + 272);
  v53 = *(_QWORD *)(v1 + 248);
  v54 = *(_QWORD *)(v1 + 256);
  v56 = *(_QWORD *)(v1 + 232);
  v55 = *(_QWORD *)(v1 + 240);
  sub_1000273A0();

  sub_1000183D0();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v56);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v54);
LABEL_16:
  v57 = v1 + 16;
  v58 = *(_QWORD *)(v1 + 280);
  static String._unconditionallyBridgeFromObjectiveC(_:)(VCBundleIdentifierSpringBoard);
  v60 = v59;
  sub_100042358(v58);
  v61 = objc_allocWithZone((Class)WFAppLaunchRequest);
  v62 = sub_100042D88();
  v63 = sub_10003E760(v62, v60, 0, v58, 0, 0);
  *(_QWORD *)(v1 + 376) = v63;
  *(_QWORD *)(v1 + 56) = v1 + 392;
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_100037EF4;
  v64 = sub_100042D08(v1 + 16);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  v65 = (_QWORD *)(v1 + 80);
  v65[1] = 0x40000000;
  v65[2] = sub_100038118;
  v65[3] = &unk_1000C11C0;
  v65[4] = v64;
  objc_msgSend(v63, "performWithCompletionHandler:", v65);
  return ((uint64_t (*)(uint64_t))swift_continuation_await)(v57);
}

uint64_t sub_100037EF4()
{
  uint64_t v0;
  uint64_t v1;

  sub_100042628();
  *(_QWORD *)(v0 + 384) = v1;
  return sub_1000422B0();
}

uint64_t sub_100037F78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000425EC();
  v1 = *(void **)(v0 + 376);
  sub_100042D30();
  swift_release(v2);
  static IntentResult.result<>()(v3);

  sub_100042804();
  sub_10004255C();
  sub_100042608();
  sub_10004257C();
  sub_1000426E0();
  sub_100042710();
  sub_1000428D0();
  return sub_100042388(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100038008()
{
  uint64_t v0;
  void *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(void **)(v0 + 376);
  v2 = swift_release(*(_QWORD *)(v0 + 352));
  swift_willThrow(v2);

  sub_100042D30();
  swift_task_dealloc(v3);
  sub_10004255C();
  sub_100042608();
  sub_10004257C();
  sub_1000426E0();
  sub_100042710();
  sub_1000428D0();
  v4 = (uint64_t (*)(void))sub_1000428F0();
  return sub_1000423C8(v4);
}

id sub_1000380A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  isa = Data._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithData:", isa);
  sub_10003F39C(a1, a2);

  return v7;
}

uint64_t sub_100038118(uint64_t a1, char a2, void *a3)
{
  id v3;

  if (!a3)
    return sub_100038158(*(_QWORD *)(a1 + 32), a2);
  v3 = a3;
  return sub_1000421E0();
}

uint64_t sub_100038158(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_100038168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 40);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return swift_continuation_throwingResume(a1);
}

void sub_1000381BC(uint64_t a1@<X8>)
{
  sub_10003E640(AddShortcutToHomeScreenAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000381D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1000D172C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100042248;
  return AddShortcutToHomeScreenAction.perform()(a1, v4, v5, v6);
}

uint64_t sub_100038240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = AddShortcutToHomeScreenAction.init()();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100038268(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F6A4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void RenameShortcutAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];

  sub_100018190();
  sub_100012E2C(&qword_1000D0660);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_1000429AC(v2, (uint64_t)v43);
  v55 = sub_1000182A4();
  v52 = *(_QWORD *)(v55 - 8);
  sub_100018044();
  __chkstk_darwin(v3);
  sub_100018548();
  v51 = v4;
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_10004248C();
  v50 = v6;
  sub_100042654();
  __chkstk_darwin(v7);
  v54 = (uint64_t)&v43 - v8;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000424AC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  __chkstk_darwin(v12);
  sub_100042470();
  sub_100018034();
  __chkstk_darwin(v15);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1000182B4();
  sub_100018044();
  __chkstk_darwin(v19);
  sub_100042BD0();
  v44 = v0;
  v48 = sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_1000423B0();
  sub_1000182E4();
  v20 = *(void (**)(uint64_t))(v13 + 104);
  v21 = sub_100042B5C();
  v45 = v14;
  v20(v21);
  sub_100042280((uint64_t)v18);
  sub_100042C08();
  sub_100018380(22, v22);
  sub_1000182E4();
  v23 = sub_100042B5C();
  v20(v23);
  v24 = v11;
  sub_100042280((uint64_t)v18);
  v43 = v11;
  sub_100018124((uint64_t)v11, 0);
  v56[0] = 0;
  v46 = sub_1000182AC();
  v25 = v54;
  sub_100042358(v54);
  v26 = v50;
  sub_100042358(v50);
  v47 = enum case for InputConnectionBehavior.default(_:);
  v27 = v51;
  v52 = *(_QWORD *)(v52 + 104);
  ((void (*)(uint64_t))v52)(v51);
  v28 = sub_100015DA4();
  v29 = v44;
  v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v44, v24, v56, v25, v26, v27, v28);
  sub_100012E2C(&qword_1000D0680);
  sub_100042DF4(1701667150);
  sub_1000182E4();
  v30 = sub_100042B5C();
  v20(v30);
  sub_100042280((uint64_t)v18);
  sub_1000427E8(0xD00000000000001DLL, (uint64_t)"The new name for the shortcut");
  sub_1000182E4();
  sub_100042B68();
  v31 = (uint64_t)v43;
  sub_100042280((uint64_t)v18);
  v32 = sub_100042740();
  sub_100015D74(v32, v33, v34, v49);
  v35 = sub_100042DAC();
  v56[0] = 0;
  v56[1] = 0;
  v36 = v53;
  sub_100026B84(v53, v37, v38, v35);
  v39 = v54;
  sub_100027470();
  sub_100015D74(v40, v41, v42, v46);
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v27, v47, v55);
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v29, v31, v56, v36, v39, v27);
  sub_100018094();
}

void sub_1000385EC()
{
  sub_10003E098();
}

uint64_t RenameShortcutAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05A0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static RenameShortcutAction.title, (uint64_t)sub_1000385EC);
}

uint64_t static RenameShortcutAction.title.getter()
{
  return sub_100034EF4();
}

void sub_100038660()
{
  sub_10003E2B0();
}

uint64_t RenameShortcutAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05A8, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static RenameShortcutAction.description, (uint64_t)sub_100038660);
}

uint64_t static RenameShortcutAction.description.getter()
{
  return sub_100034EF4();
}

void static RenameShortcutAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1738);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1740);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F75C();
  sub_1000424C4(11, 2);
  v4._countAndFlagsBits = 0x20656D616E6552;
  v4._object = (void *)0xE700000000000000;
  sub_100042468(v4);
  swift_getKeyPath(&unk_100097878);
  v2 = sub_100012E2C(&qword_1000D1750);
  sub_100042348(v2);
  sub_100042590();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  sub_100042468(v5);
  swift_getKeyPath(&unk_1000978A0);
  v3 = sub_100012E2C(&qword_1000D1758);
  sub_100042348(v3);
  sub_100042590();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  sub_100042468(v6);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

uint64_t RenameShortcutAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100038834()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t (*v9)(void);
  id v10;

  v1 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v2 = sub_100042678();
  v3 = *(void **)(v0 + 16);
  IntentParameter.wrappedValue.getter(v2);
  v4 = String._bridgeToObjectiveC()();
  sub_100018420();
  *(_QWORD *)(v0 + 16) = 0;
  v5 = objc_msgSend(v1, "renameReference:to:error:", v3, v4, v0 + 16);

  v6 = *(void **)(v0 + 16);
  if (v5)
  {
    *(_QWORD *)(v0 + 16) = v5;
    v7 = sub_10003F4F0();
    v8 = v6;
    static IntentResult.result<A>(value:)(v0 + 16, &type metadata for WorkflowEntity, v7);

  }
  else
  {
    v10 = v6;
    _convertNSErrorToError(_:)(v6);
    sub_100042738();
    sub_100042D00();
  }
  v9 = (uint64_t (*)(void))sub_1000428F0();
  return sub_10004286C(v9);
}

uint64_t sub_100038988@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C7F0(RenameShortcutAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_100038998(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000D1764);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100042248;
  return RenameShortcutAction.perform()(a1, v5, v4);
}

void sub_1000389FC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  RenameShortcutAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100038A20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F75C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void ChangeShortcutIconAction.init()()
{
  sub_1000426B4();
}

void sub_100038A60()
{
  sub_10003E098();
}

uint64_t ChangeShortcutIconAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05B0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static ChangeShortcutIconAction.title, (uint64_t)sub_100038A60);
}

uint64_t static ChangeShortcutIconAction.title.getter()
{
  return sub_100034EF4();
}

void sub_100038ACC()
{
  sub_10003E2B0();
}

uint64_t ChangeShortcutIconAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05B8, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static ChangeShortcutIconAction.description, (uint64_t)sub_100038ACC);
}

uint64_t static ChangeShortcutIconAction.description.getter()
{
  return sub_100034EF4();
}

void static ChangeShortcutIconAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1768);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1770);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F7A0();
  sub_1000424C4(15, 1);
  v3._countAndFlagsBits = 0x692065676E616843;
  v3._object = (void *)0xEF20666F206E6F63;
  sub_100042468(v3);
  swift_getKeyPath(&unk_1000978C8);
  v2 = sub_100012E2C(&qword_1000D1780);
  sub_100042348(v2);
  sub_100042590();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100042468(v4);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

uint64_t ChangeShortcutIconAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_100012E2C(&qword_1000D10E8);
  v2[5] = sub_100042314(*(_QWORD *)(v3 - 8));
  v4 = type metadata accessor for OpenWorkflowOptions(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = sub_100042314(v5);
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100038C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[5];
  v2 = type metadata accessor for OpenWorkflowOptions.ActionError(0);
  sub_100026B84(v1, v3, v4, v2);
  OpenWorkflowOptions.init(scrolledToActionIndex:actionError:isNewWorkflow:showIconPicker:onOpen:)(0, 1, v1, 0, 1, 0, 0);
  v5 = sub_1000424D8();
  v0[9] = v5;
  v0[10] = static MainActor.shared.getter(v5);
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_100038D0C()
{
  uint64_t v0;

  sub_100042CA0();
  *(_QWORD *)(v0 + 88) = sub_100031094();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_100038D40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  if (v1[11])
  {
    v2 = IntentParameter.wrappedValue.getter(a1);
    v1[12] = v1[2];
    v1[13] = static MainActor.shared.getter(v2);
    sub_100042368();
    sub_10004250C();
    sub_100042500();
    return swift_task_switch(v3, v4, v5);
  }
  else
  {
    sub_100042AA8();
    sub_100042BA8();
    sub_100042804();
    sub_100042608();
    v7 = (uint64_t (*)(void))sub_1000426D4();
    return sub_100042400(v7);
  }
}

uint64_t sub_100038DD8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (void *)v0[12];
  v2 = (void *)v0[11];
  swift_release(v0[13]);
  v3 = sub_10001BA3C(v1);

  swift_unknownObjectRelease(v3);
  sub_1000424A0();
  return sub_100042408(v4, v5, v6);
}

uint64_t sub_100038E38()
{
  uint64_t (*v0)(void);

  sub_100042AA8();
  sub_100042BA8();
  sub_100042804();
  sub_100042608();
  v0 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042400(v0);
}

uint64_t sub_100038E74@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C7F0(ChangeShortcutIconAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_100038E84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D178C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return ChangeShortcutIconAction.perform()(a1, v4);
}

void sub_100038EDC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ChangeShortcutIconAction.init()();
  *a1 = v2;
}

uint64_t sub_100038F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F7A0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100038F28()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v0 = sub_100012E2C(&qword_1000D0638);
  __chkstk_darwin(v0);
  v2 = &v19[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v13);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_100042138(v16, static ShortcutAttribute.typeDisplayRepresentation);
  sub_100032758(v16, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x800000010009D3B0);
  static Locale.current.getter(v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E65746E49707041, 0xEA00000000007374, v9, v6, 0, 0, 256);
  sub_100015D74((uint64_t)v2, 1, 1, v13);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t ShortcutAttribute.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05C0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation, (uint64_t)sub_100038F28);
}

void static ShortcutAttribute.typeDisplayRepresentation.getter()
{
  sub_1000338A0();
}

void static ShortcutAttribute.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D05C0, (uint64_t)&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation, (uint64_t)sub_100038F28);
}

void static ShortcutAttribute.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1000D05C0 != -1)
    swift_once(&qword_1000D05C0, sub_100038F28);
  v0 = sub_100042D94();
  sub_1000422E8(v0, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
  sub_100018188();
}

void static ShortcutAttribute.caseDisplayRepresentations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _BYTE *v95;
  void (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;

  sub_100018190();
  sub_100012E2C(&qword_1000D15F8);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_1000429C8(v2, v87);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_100042564();
  v5 = v4;
  v99 = sub_1000424AC();
  sub_10004282C();
  __chkstk_darwin(v6);
  sub_100042564();
  v8 = v7;
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v9);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v12);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v16);
  sub_100042564();
  v18 = v17;
  v19 = sub_100012E2C(&qword_1000D1790);
  v20 = sub_100012E2C(&qword_1000D1798);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v97 = v20;
  v98 = v22;
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject(v19, v24 + 6 * v22, v23 | 7);
  v91 = v25;
  *(_OWORD *)(v25 + 16) = xmmword_100097760;
  v26 = (_BYTE *)(v25 + v24);
  *v26 = 0;
  v27 = v25 + v24;
  v95 = v26;
  sub_100018380(19, 0x800000010009D040);
  sub_1000428E8();
  v100 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v96 = *(void (**)(uint64_t))(v0 + 104);
  v94 = v8;
  v28 = v99;
  v96(v8);
  v29 = sub_1000426E8();
  sub_100018084(v29, v30, v31, v32, v8);
  v92 = v5;
  sub_100027470();
  v33 = v15;
  sub_100015D74(v34, v35, v36, v15);
  v37 = v101;
  sub_100042534(0xD000000000000013, 0x800000010009D060);
  DisplayRepresentation.init(title:subtitle:image:)(v18, v5, v37);
  v39 = v97;
  v38 = v98;
  v40 = (_BYTE *)(v27 + v98 + *(int *)(v97 + 48));
  v88 = v14;
  v89 = v40;
  *(_BYTE *)(v27 + v98) = 1;
  sub_100018380(19, 0x800000010009D080);
  sub_1000428E8();
  v41 = v94;
  v42 = v28;
  v43 = v96;
  ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v94, v100, v28);
  v44 = sub_1000426E8();
  sub_100018084(v44, v45, v46, v47, v41);
  v48 = v92;
  sub_100027470();
  v49 = v33;
  v90 = v33;
  sub_100015D74(v50, v51, v52, v33);
  v53 = v101;
  sub_100042534(0x746177656C707061, 0xEA00000000006863);
  DisplayRepresentation.init(title:subtitle:image:)(v18, v48, v53);
  v54 = v95;
  v55 = &v95[2 * v38];
  v89 = &v55[*(int *)(v39 + 48)];
  *v55 = 2;
  v56 = (uint64_t)v88;
  String.LocalizationValue.init(stringLiteral:)(0x4D206E69206E6950, 0xEF72614220756E65);
  v93 = v11;
  sub_1000428E8();
  v57 = v100;
  ((void (*)(uint64_t, _QWORD, uint64_t))v43)(v41, v100, v42);
  v58 = sub_1000428B0();
  sub_100018084(v58, v59, v60, (uint64_t)v11, v41);
  v61 = v92;
  sub_100027470();
  sub_100015D74(v62, v63, v64, v49);
  sub_100042C08();
  sub_100042534(v65, v66);
  v67 = v18;
  DisplayRepresentation.init(title:subtitle:image:)(v18, v61, v53);
  v68 = v98;
  v69 = &v54[3 * v98];
  v89 = &v69[*(int *)(v97 + 48)];
  *v69 = 3;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x800000010009D0C0);
  v70 = (uint64_t)v93;
  sub_1000427B4();
  v71 = v94;
  v72 = v57;
  v73 = v99;
  v74 = v96;
  ((void (*)(uint64_t, uint64_t, uint64_t))v96)(v94, v72, v99);
  v75 = v56;
  sub_100018084(v56, 0x6E65746E49707041, 0xEA00000000007374, v70, v71);
  v76 = v61;
  sub_100027470();
  v77 = v90;
  sub_100015D74(v78, v79, v80, v90);
  v81 = v101;
  sub_100042534(0x6569762E74786574, 0xEF7265646E696677);
  DisplayRepresentation.init(title:subtitle:image:)(v67, v76, v81);
  v82 = v95;
  v95[4 * v68] = 4;
  sub_100018380(19, 0x800000010009D0E0);
  v83 = (uint64_t)v93;
  sub_10004295C();
  ((void (*)(uint64_t, _QWORD, uint64_t))v74)(v71, v100, v73);
  sub_100018084(v75, 0x6E65746E49707041, 0xEA00000000007374, v83, v71);
  sub_100015D74(v76, 1, 1, v77);
  v84 = v101;
  sub_100042534(0x7061687372616567, 0xEE006C6C69662E65);
  DisplayRepresentation.init(title:subtitle:image:)(v67, v76, v84);
  v82[5 * v98] = 5;
  sub_1000427D8(0xD000000000000019, (uint64_t)"Allow Running When Locked");
  sub_10004295C();
  ((void (*)(uint64_t, _QWORD, uint64_t))v74)(v71, v100, v99);
  sub_100018084(v75, 0x6E65746E49707041, 0xEA00000000007374, v83, v71);
  sub_1000181B8(v76);
  sub_100042534(1801678700, 0xE400000000000000);
  DisplayRepresentation.init(title:subtitle:image:)(v67, v76, v84);
  v85 = type metadata accessor for DisplayRepresentation(0);
  v86 = sub_10003F7DC();
  Dictionary.init(dictionaryLiteral:)(v91, &type metadata for ShortcutAttribute, v85, v86);
  sub_100018094();
}

Shortcuts::ShortcutAttribute_optional __swiftcall ShortcutAttribute.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000BFDC8, v2);
  sub_1000183D0();
  if (v3 >= 6)
    return (Shortcuts::ShortcutAttribute_optional)6;
  else
    return (Shortcuts::ShortcutAttribute_optional)v3;
}

_UNKNOWN **static ShortcutAttribute.allCases.getter()
{
  return &off_1000BFE78;
}

uint64_t ShortcutAttribute.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1000398B0 + 4 * byte_100097780[a1]))(0xD000000000000010, 0x800000010009B700);
}

uint64_t sub_1000398B0()
{
  return 0x61576E4F776F6873;
}

uint64_t sub_1000398D0()
{
  return 0x6E654D6E496E6970;
}

uint64_t sub_100039910()
{
  return 0x7463416B63697571;
}

uint64_t sub_100039930()
{
  return 0x656857776F6C6C61;
}

void sub_100039954(char *a1)
{
  sub_100042EA8(*a1);
}

Swift::Int sub_100039960()
{
  unsigned __int8 *v0;

  return sub_100039968(*v0);
}

Swift::Int sub_100039968(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  v2 = ShortcutAttribute.rawValue.getter(a1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Swift::Int sub_1000399C8(char a1)
{
  return sub_100039B88(0, a1 & 1);
}

void sub_1000399D4(uint64_t a1)
{
  char *v1;

  sub_100039A28(a1, *v1);
}

uint64_t sub_1000399DC(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x656C67676F74;
  else
    v3 = 1852994932;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

void sub_100039A28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100039A6C(uint64_t a1)
{
  String.hash(into:)(a1, 0x61576E4F776F6873, 0xEB00000000686374);
  return swift_bridgeObjectRelease(0xEB00000000686374);
}

Swift::Int sub_100039B24(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_100039B2C(a1, *v1);
}

Swift::Int sub_100039B2C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v3 = ShortcutAttribute.rawValue.getter(a2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

Swift::Int sub_100039B88(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if ((a2 & 1) != 0)
    v3 = 0x656C67676F74;
  else
    v3 = 1852994932;
  if ((a2 & 1) != 0)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Shortcuts::ShortcutAttribute_optional sub_100039BF8@<W0>(Swift::String *a1@<X0>, Shortcuts::ShortcutAttribute_optional *a2@<X8>)
{
  Shortcuts::ShortcutAttribute_optional result;

  result.value = ShortcutAttribute.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void sub_100039C24(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = ShortcutAttribute.rawValue.getter(*v1);
  a1[1] = v3;
  sub_100018188();
}

void sub_100039C48(_QWORD *a1@<X8>)
{
  *a1 = &off_1000BFE78;
}

void sub_100039C58(uint64_t a1@<X8>)
{
  sub_10003E640(ShortcutAttribute.typeDisplayRepresentation.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_100039C6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10001657C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100039CA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100040A3C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100039CE0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100039D0C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  char v5;

  v2 = sub_100019D50(a1, "workflowTypes");
  sub_1000426C8();
  sub_100042660(v3);
  sub_100042738();
  v4 = WFWorkflowTypeShareSheet;
  v5 = sub_100031BAC((uint64_t)v4, v1);
  sub_100018420();

  return v5 & 1;
}

void sub_100039E18()
{
  void *v0;

  objc_msgSend(v0, "disabledOnLockScreen");
  JUMPOUT(0x100039E08);
}

uint64_t sub_100039E48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_100039E64 + 4 * byte_10009778C[a2]))();
}

void sub_100039E64(char a1)
{
  void *v1;

  sub_100039EC8(WFWorkflowTypeShareSheet, a1 & 1, v1);
}

id sub_100039EB0(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setDisabledOnLockScreen:", (a1 & 1) == 0);
}

void sub_100039EC8(void *a1, char a2, id a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  Class isa;
  uint64_t v18;
  _BYTE v19[40];

  v6 = objc_msgSend(a3, "workflowTypes");
  type metadata accessor for WFWorkflowTypeName(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v9 = sub_10005F2F0(v8);
  v10 = sub_100012E2C(&qword_1000D1E10);
  if ((a2 & 1) != 0)
  {
    inited = swift_initStackObject(v10, &v18);
    *(_OWORD *)(inited + 16) = xmmword_100096E80;
    *(_QWORD *)(inited + 32) = a1;
    v12 = a1;
    v13 = sub_10003A014(inited, v9);
  }
  else
  {
    v14 = swift_initStackObject(v10, v19);
    *(_OWORD *)(v14 + 16) = xmmword_100096E80;
    *(_QWORD *)(v14 + 32) = a1;
    v15 = a1;
    v13 = (uint64_t)sub_10003EAA0(v14, v9);
    swift_setDeallocating(v14);
    sub_10002BE44();
  }
  v16 = sub_100046228(v13);
  swift_bridgeObjectRelease(v13);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "setWorkflowTypes:", isa, swift_release(v16).n128_f64[0]);

}

uint64_t sub_10003A014(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void *v5;
  uint64_t v6;
  id v8;
  uint64_t v9;

  v9 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = *(void **)(a1 + 8 * i + 32);
      sub_100066424(&v8, v5);

    }
    swift_bridgeObjectRelease(a1);
    return v9;
  }
  else
  {
    v6 = a2;
    swift_bridgeObjectRelease(a1);
  }
  return v6;
}

void GetShortcutAttributesAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  sub_100018190();
  v59 = sub_1000182A4();
  v55 = *(_QWORD **)(v59 - 8);
  sub_100018044();
  __chkstk_darwin(v3);
  sub_1000180EC(v4, v48);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100018168(v6, v48);
  v8 = __chkstk_darwin(v7);
  sub_100018514(v8, v9, v10, v11, v12, v13, v14, v15, v48);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v16);
  v17 = sub_1000180AC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  __chkstk_darwin(v17);
  sub_100042470();
  sub_100018034();
  __chkstk_darwin(v20);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000182B4();
  sub_100018044();
  __chkstk_darwin(v24);
  sub_100026BF0();
  v49 = v0;
  v54 = sub_100012E2C(&qword_1000D0698);
  sub_100042518();
  sub_1000182E4();
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(uint64_t))(v18 + 104);
  v27 = sub_100042B5C();
  v51 = v19;
  sub_100042A1C(v27, v28);
  v50 = v26;
  sub_100042280((uint64_t)v23);
  sub_100018380(23, 0x800000010009B950);
  sub_1000182E4();
  sub_100042A1C(v2, v25);
  sub_100042280((uint64_t)v23);
  sub_100042C60(v1);
  v61 = 6;
  sub_1000182AC();
  sub_10004254C(v56);
  sub_10004254C(v57);
  v52 = enum case for InputConnectionBehavior.default(_:);
  v55 = (_QWORD *)v55[13];
  sub_100042C94(enum case for InputConnectionBehavior.default(_:), (uint64_t (*)(_QWORD, uint64_t, _QWORD))v55);
  sub_10001657C();
  sub_100042C80();
  v54 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v29, v30, v31, v32, v33, v34, v35, v36);
  sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_1000423B0();
  sub_1000182E4();
  v37 = sub_100042B5C();
  v50(v37);
  sub_100042280((uint64_t)v23);
  sub_100018380(23, 0x800000010009B970);
  sub_1000182E4();
  sub_100042B68();
  sub_100042280((uint64_t)v23);
  v38 = sub_100042740();
  sub_100015D74(v38, v39, v40, v53);
  v60 = 0;
  v41 = v56;
  sub_10004254C(v56);
  v42 = v57;
  sub_10004254C(v57);
  v43 = v58;
  ((void (*)(uint64_t, _QWORD, uint64_t))v55)(v58, v52, v59);
  sub_100015DA4();
  v44 = sub_100042D74();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v44, v45, v46, v41, v42, v43, v47);
  sub_100018094();
}

void sub_10003A380()
{
  sub_10003E098();
}

uint64_t GetShortcutAttributesAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05C8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static GetShortcutAttributesAction.title, (uint64_t)sub_10003A380);
}

uint64_t static GetShortcutAttributesAction.title.getter()
{
  return sub_100034EF4();
}

void sub_10003A3EC()
{
  sub_10003E2B0();
}

uint64_t GetShortcutAttributesAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05D0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static GetShortcutAttributesAction.description, (uint64_t)sub_10003A3EC);
}

uint64_t static GetShortcutAttributesAction.description.getter()
{
  return sub_100034EF4();
}

void SetShortcutAttributesAction.operation.getter()
{
  sub_100042620();
  sub_1000270C4();
}

void GetShortcutAttributesAction.attribute.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _BYTE v9[7];

  sub_100042CBC(a1, a2, a3, a4, a5, a6, a7, a8, v8, *(int *)v9, *(__int16 *)&v9[4], v9[6], a1);
  sub_1000270C4();
}

void GetShortcutAttributesAction.shortcut.setter(void *a1)
{
  void *v1;
  id v2;

  v2 = sub_100042A08(a1);
  sub_1000426BC((uint64_t)v2);

  sub_1000270C4();
}

void static GetShortcutAttributesAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D17A8);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D17B0);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F818();
  sub_1000424C4(9, 2);
  v4._countAndFlagsBits = 544499015;
  v4._object = (void *)0xE400000000000000;
  sub_100042468(v4);
  swift_getKeyPath(&unk_1000978F0);
  v2 = sub_100012E2C(&qword_1000D17C0);
  sub_100042348(v2);
  sub_100042590();
  v5._countAndFlagsBits = 0x20726F6620;
  v5._object = (void *)0xE500000000000000;
  sub_100042468(v5);
  swift_getKeyPath(&unk_100097918);
  v3 = sub_100012E2C(&qword_1000D17C8);
  sub_100042348(v3);
  sub_100042590();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  sub_100042468(v6);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

uint64_t GetShortcutAttributesAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return sub_100042324((uint64_t)sub_10003A5E0);
}

uint64_t sub_10003A5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t (*v6)(void);
  void *v7;
  char v8;
  unint64_t v9;

  sub_100026AF8(a1, &qword_1000D1240, WFWorkflow_ptr);
  v3 = v2;
  sub_100042678();
  v4 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v5 = sub_100042928(v4);
  if (v3)
  {
    v6 = *(uint64_t (**)(void))(v1 + 8);
  }
  else
  {
    v7 = v5;
    sub_100042678();
    sub_100039CE0(*(_BYTE *)(v1 + 16));
    *(_BYTE *)(v1 + 16) = v8 & 1;
    v9 = sub_10003F85C();
    static IntentResult.result<A>(value:)(v1 + 16, &type metadata for Bool, v9);

    v6 = (uint64_t (*)(void))sub_1000426D4();
  }
  return sub_100042584(v6);
}

uint64_t sub_10003A6AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C7F0(GetShortcutAttributesAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_10003A6BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1000D17D4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100042248;
  return GetShortcutAttributesAction.perform()(a1, v5, v4);
}

void sub_10003A720(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  GetShortcutAttributesAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10003A744(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F818();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void static SetShortcutAttributesAction.SetShortcutAttributesOperation.typeDisplayRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];

  sub_100018190();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1000424AC();
  sub_10004282C();
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v12);
  v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v16);
  sub_100026BD8();
  String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
  sub_10004295C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100018084((uint64_t)v14, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v11, (uint64_t)v8);
  sub_100015D74((uint64_t)v4, 1, 1, v15);
  TypeDisplayRepresentation.init(name:numericFormat:)(v0, v4);
  sub_100018094();
}

void static SetShortcutAttributesAction.SetShortcutAttributesOperation.caseDisplayRepresentations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29[2];
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_100018190();
  sub_100012E2C(&qword_1000D15F8);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000429C8(v1, v29[0]);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v2);
  sub_1000429E4(v3, v29[0]);
  v4 = sub_1000424AC();
  v5 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  __chkstk_darwin(v4);
  sub_1000181E0(v6, v29[0]);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000182B4();
  v29[0] = v13;
  sub_100018044();
  __chkstk_darwin(v14);
  sub_1000181C8();
  v15 = sub_100012E2C(&qword_1000D17E0);
  v16 = sub_100012E2C(&qword_1000D17E8);
  v17 = *(_QWORD *)(v16 - 8);
  v32 = *(_QWORD *)(v17 + 72);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v15, v19 + 2 * v32, v18 | 7);
  v34 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_100096F60;
  v21 = v20 + v19;
  v29[1] = v20 + v19 + *(int *)(v16 + 48);
  *(_BYTE *)(v20 + v19) = 0;
  sub_100042DF4(1852994900);
  sub_10004295C();
  v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v23 = v33;
  v30(v33, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  sub_100018084((uint64_t)v12, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v9, v23);
  sub_100015D74(v35, 1, 1, v13);
  sub_100042D9C();
  sub_10004297C();
  sub_100042C50();
  *(_BYTE *)(v21 + v32) = 1;
  String.LocalizationValue.init(stringLiteral:)(0x656C67676F54, 0xE600000000000000);
  sub_10004295C();
  v30(v23, v22, v31);
  sub_100018084((uint64_t)v12, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v9, v23);
  sub_100027470();
  sub_100015D74(v24, v25, v26, v29[0]);
  sub_10004297C();
  sub_100042C50();
  v27 = type metadata accessor for DisplayRepresentation(0);
  v28 = sub_10003F898();
  Dictionary.init(dictionaryLiteral:)(v34, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v27, v28);
  sub_100018094();
}

Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional __swiftcall SetShortcutAttributesAction.SetShortcutAttributesOperation.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000BFEA0, v2);
  sub_1000183D0();
  if (v3 == 1)
    v4.value = Shortcuts_SetShortcutAttributesAction_SetShortcutAttributesOperation_toggle;
  else
    v4.value = Shortcuts_SetShortcutAttributesAction_SetShortcutAttributesOperation_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static SetShortcutAttributesAction.SetShortcutAttributesOperation.allCases.getter()
{
  return &off_1000BFEF0;
}

uint64_t SetShortcutAttributesAction.SetShortcutAttributesOperation.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C67676F74;
  else
    return 1852994932;
}

void sub_10003AC28(char *a1, unsigned __int8 *a2)
{
  sub_100042E30(*a1, *a2);
}

Swift::Int sub_10003AC34()
{
  char *v0;

  return sub_1000399C8(*v0);
}

uint64_t sub_10003AC3C(uint64_t a1)
{
  char *v1;

  return sub_1000399DC(a1, *v1);
}

Swift::Int sub_10003AC44(uint64_t a1)
{
  char *v1;

  return sub_100039B88(a1, *v1);
}

Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional sub_10003AC4C@<W0>(Swift::String *a1@<X0>, Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional *a2@<X8>)
{
  Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional result;

  result.value = SetShortcutAttributesAction.SetShortcutAttributesOperation.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void sub_10003AC78(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = SetShortcutAttributesAction.SetShortcutAttributesOperation.rawValue.getter(*v1);
  a1[1] = v3;
  sub_100018188();
}

void sub_10003AC9C(_QWORD *a1@<X8>)
{
  *a1 = &off_1000BFEF0;
}

uint64_t sub_10003ACB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100016798();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10003ACEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100040DB4();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void SetShortcutAttributesAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  void (*v82)(uint64_t);
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[3];

  sub_100018190();
  sub_100012E2C(&qword_1000D06B8);
  sub_100018034();
  __chkstk_darwin(v3);
  sub_100042990(v4, v73[0]);
  v89 = sub_1000182A4();
  sub_10004282C();
  __chkstk_darwin(v5);
  sub_100018548();
  v75 = v6;
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v7);
  sub_10004248C();
  v74 = v8;
  sub_100042654();
  v10 = __chkstk_darwin(v9);
  sub_100018514(v10, v11, v12, v13, v14, v15, v16, v17, v73[0]);
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v18);
  sub_100042564();
  v20 = v19;
  v21 = sub_1000424AC();
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_100042470();
  sub_100018034();
  __chkstk_darwin(v23);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v24);
  v26 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000182B4();
  sub_100018044();
  __chkstk_darwin(v27);
  sub_100018470();
  v84 = v0;
  v77 = sub_100012E2C(&qword_1000D06A8);
  sub_10004293C(v77, 0xE90000000000006ELL);
  sub_1000182E4();
  v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v29 = *(void (**)(_QWORD))(v22 + 104);
  v83 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v81 = v21;
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v21);
  sub_100042280((uint64_t)v26);
  sub_100042610(0xD000000000000027, (uint64_t)"The operation to perform on the setting");
  sub_1000182E4();
  ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v1, v28, v21);
  v30 = v20;
  sub_100042280((uint64_t)v26);
  v79 = v20;
  sub_1000427BC(v20, 0);
  LOBYTE(v90[0]) = 0;
  v85 = sub_1000182AC();
  v31 = v88;
  sub_100042358(v88);
  v32 = v74;
  sub_100042358(v74);
  v86 = enum case for InputConnectionBehavior.default(_:);
  v82 = *(void (**)(uint64_t))(v2 + 104);
  v33 = v75;
  v82(v75);
  v34 = sub_100016798();
  v35 = v31;
  v36 = v33;
  v77 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v84, v30, v90, v35, v32, v33, &off_1000BFF18, v34);
  v76 = sub_100012E2C(&qword_1000D0698);
  sub_100042518();
  sub_1000182E4();
  v37 = v83;
  v38 = v81;
  v80 = v29;
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v1, v83, v81);
  sub_100042280((uint64_t)v26);
  sub_100018380(21, 0x800000010009B9C0);
  sub_1000182E4();
  sub_100042A1C(v1, v37);
  v39 = v79;
  sub_100042280((uint64_t)v26);
  sub_10004281C(v39);
  LOBYTE(v90[0]) = 6;
  sub_100027470();
  sub_100015D74(v40, v41, v42, v85);
  sub_100042358(v32);
  v43 = v36;
  v44 = v36;
  v45 = v82;
  ((void (*)(uint64_t, _QWORD, uint64_t))v82)(v44, v86, v89);
  sub_10001657C();
  v46 = sub_100042D1C();
  v47 = v43;
  v76 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v46, v48, v49, v50, v51, v43, v52, v53);
  v73[1] = sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_1000423B0();
  sub_1000182E4();
  v54 = v80;
  ((void (*)(uint64_t, _QWORD, uint64_t))v80)(v1, v83, v38);
  sub_100042280((uint64_t)v26);
  sub_100042610(0xD000000000000016, (uint64_t)"The shortcut to modify");
  sub_1000182E4();
  v55 = sub_100042B4C();
  v54(v55);
  v56 = v79;
  sub_100042280((uint64_t)v26);
  sub_10004281C(v56);
  v90[0] = 0;
  v57 = v88;
  sub_100027470();
  sub_100015D74(v58, v59, v60, v85);
  sub_10004254C(v32);
  ((void (*)(uint64_t, _QWORD, uint64_t))v45)(v47, v86, v89);
  v61 = sub_100015DA4();
  v62 = v84;
  v74 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v84, v56, v90, v57, v32, v47, v61);
  sub_100012E2C((uint64_t *)&unk_1000D06C0);
  sub_10001853C(1952543827);
  sub_1000182E4();
  v63 = v83;
  v65 = (void (*)(uint64_t, uint64_t, uint64_t))v80;
  v64 = v81;
  ((void (*)(uint64_t, _QWORD, uint64_t))v80)(v1, v83, v81);
  sub_100042280((uint64_t)v26);
  v66 = sub_100042DB4();
  sub_100042610(v66, (uint64_t)"The state to set the setting to");
  sub_1000182E4();
  v65(v1, v63, v64);
  sub_100042280((uint64_t)v26);
  sub_10004281C(v56);
  v67 = sub_100042C18();
  sub_100026B84(v78, v68, v69, v67);
  sub_100027470();
  sub_100015D74(v70, v71, v72, v85);
  ((void (*)(uint64_t, _QWORD, uint64_t))v82)(v47, v86, v89);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v62);
  sub_100018094();
}

void SetShortcutAttributesAction.init(attribute:operation:state:)()
{
  uint64_t v0;
  int v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, _QWORD, uint64_t);
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  unsigned int v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD v95[3];

  sub_100018190();
  v79 = v1;
  v80 = v2 & 1;
  v81 = v3;
  sub_100012E2C(&qword_1000D06B8);
  sub_100018034();
  __chkstk_darwin(v4);
  sub_100018548();
  v78 = v5;
  v94 = sub_1000182A4();
  v84 = *(_QWORD *)(v94 - 8);
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100018548();
  v87 = v7;
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v8);
  sub_10004248C();
  v86 = v9;
  sub_100042654();
  __chkstk_darwin(v10);
  v12 = (char *)v75 - v11;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v13);
  v15 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000424AC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v16;
  sub_100042950();
  __chkstk_darwin(v19);
  v21 = (char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v22);
  v24 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v25);
  v27 = (char *)v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000182B4();
  v85 = v28;
  sub_100018044();
  __chkstk_darwin(v29);
  sub_100042BD0();
  v83 = v0;
  v77 = sub_100012E2C(&qword_1000D06A8);
  sub_10004293C(v77, 0xE90000000000006ELL);
  sub_1000426A4();
  v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  v89 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v90 = v18;
  sub_100042B14((uint64_t)v21, enum case for LocalizedStringResource.BundleDescription.main(_:));
  v88 = v31;
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_1000427C8(0xD000000000000027, (uint64_t)"The operation to perform on the setting");
  sub_1000426A4();
  sub_100042B14((uint64_t)v21, v30);
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  v82 = v15;
  sub_100015D74((uint64_t)v15, 0, 1, v28);
  LOBYTE(v95[0]) = 0;
  v32 = sub_1000182AC();
  v91 = v12;
  v92 = v32;
  v33 = v12;
  sub_1000181B8((uint64_t)v12);
  v34 = v86;
  sub_1000181B8(v86);
  v93 = enum case for InputConnectionBehavior.default(_:);
  v84 = *(_QWORD *)(v84 + 104);
  v35 = v87;
  v36 = v94;
  ((void (*)(uint64_t))v84)(v87);
  sub_100016798();
  v37 = sub_100042CF4();
  v38 = v35;
  v77 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v37, v39, v40, v33, v34, v35, v41, v42);
  v76 = sub_100012E2C(&qword_1000D0698);
  sub_100042B1C();
  sub_100042518();
  sub_1000426A4();
  v43 = v89;
  v44 = v90;
  v45 = v88;
  v88(v21, v89, v90);
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_100042BF8();
  sub_100018380(21, v46);
  sub_1000426A4();
  v45(v21, v43, v44);
  v47 = (uint64_t)v82;
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_100015D74(v47, 0, 1, v85);
  LOBYTE(v95[0]) = 6;
  v48 = (uint64_t)v91;
  sub_1000423F0((uint64_t)v91);
  v49 = v86;
  sub_1000423F0(v86);
  v50 = v36;
  v51 = (void (*)(uint64_t, _QWORD, uint64_t))v84;
  ((void (*)(uint64_t, _QWORD, uint64_t))v84)(v38, v93, v50);
  v52 = sub_10001657C();
  v53 = v83;
  v54 = v48;
  v55 = v49;
  v76 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v83, v47, v95, v54, v49, v38, &off_1000BFE78, v52);
  v75[1] = sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_100042DC8();
  sub_1000423B0();
  sub_1000426A4();
  v56 = v89;
  v57 = v90;
  v58 = v88;
  v88(v21, v89, v90);
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_1000427C8(0xD000000000000016, (uint64_t)"The shortcut to modify");
  sub_1000426A4();
  v58(v21, v56, v57);
  v59 = (uint64_t)v82;
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_1000427BC(v59, 0);
  v95[0] = 0;
  v60 = (uint64_t)v91;
  sub_1000427BC((uint64_t)v91, 1);
  sub_1000427BC(v55, 1);
  v61 = v87;
  v51(v87, v93, v94);
  v62 = sub_100015DA4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v53, v59, v95, v60, v55, v61, v62);
  v86 = sub_100012E2C((uint64_t *)&unk_1000D06C0);
  sub_100042AD8();
  sub_10001853C(1952543827);
  sub_1000426A4();
  v63 = v89;
  v64 = v90;
  v65 = v88;
  v88(v21, v89, v90);
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  v66 = sub_100042DB4();
  sub_1000427C8(v66, (uint64_t)"The state to set the setting to");
  sub_1000426A4();
  v65(v21, v63, v64);
  sub_100018084((uint64_t)v27, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v24, (uint64_t)v21);
  sub_100015D74(v59, 0, 1, v85);
  v67 = sub_100042C18();
  sub_100026B84(v78, v68, v69, v67);
  sub_100026B84((uint64_t)v91, v70, v71, v92);
  ((void (*)(uint64_t, _QWORD, uint64_t))v84)(v61, v93, v94);
  v72 = sub_100042CF4();
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v72);
  LOBYTE(v95[0]) = v79;
  v73 = v77;
  sub_100042B1C();
  v74 = v76;
  sub_100042DEC();
  sub_100042AD8();
  sub_100042CC8();
  IntentParameter.wrappedValue.setter(v95);
  sub_100042AE0();
  swift_release(v74);
  sub_100042CE0();
  LOBYTE(v95[0]) = v80;
  swift_retain(v73);
  sub_100042DEC();
  sub_100042AD8();
  sub_100042CC8();
  IntentParameter.wrappedValue.setter(v95);
  sub_100027204();
  sub_100042AE0();
  swift_release(v74);
  sub_100042CE0();
  LOBYTE(v95[0]) = v81;
  sub_100042B1C();
  sub_100042DEC();
  sub_100042AD8();
  sub_100042CC8();
  IntentParameter.wrappedValue.setter(v95);
  sub_100027204();
  sub_10004277C();
  swift_release_n(v74, 2);
  swift_release_n(v73, 2);
  sub_100027204();
  sub_100018094();
}

void SetShortcutAttributesAction.attribute.setter(char a1)
{
  char v1;

  v1 = a1;
  IntentParameter.wrappedValue.setter(&v1);
  sub_1000270C4();
}

void SetShortcutAttributesAction.operation.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _BYTE v9[7];

  sub_100042CBC(a1, a2, a3, a4, a5, a6, a7, a8, v8, *(int *)v9, *(__int16 *)&v9[4], v9[6], a1 & 1);
  sub_1000270C4();
}

void SetShortcutAttributesAction.state.setter(char a1)
{
  char v1;

  v1 = a1;
  IntentParameter.wrappedValue.setter(&v1);
  sub_1000270C4();
}

void sub_10003BA80()
{
  sub_10003E098();
}

uint64_t SetShortcutAttributesAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05D8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static SetShortcutAttributesAction.title, (uint64_t)sub_10003BA80);
}

uint64_t static SetShortcutAttributesAction.title.getter()
{
  return sub_100034EF4();
}

void sub_10003BAEC()
{
  sub_10003E2B0();
}

uint64_t SetShortcutAttributesAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05E0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static SetShortcutAttributesAction.description, (uint64_t)sub_10003BAEC);
}

uint64_t static SetShortcutAttributesAction.description.getter()
{
  return sub_100034EF4();
}

void SetShortcutAttributesAction.attribute.getter()
{
  sub_100042A8C();
  sub_1000270C4();
}

void SetShortcutAttributesAction.shortcut.getter(uint64_t a1)
{
  IntentParameter.wrappedValue.getter(a1);
  sub_1000270C4();
}

void SetShortcutAttributesAction.shortcut.setter(void *a1)
{
  void *v1;
  id v2;

  v2 = sub_100042A08(a1);
  sub_1000426BC((uint64_t)v2);

  sub_1000270C4();
}

void SetShortcutAttributesAction.state.getter(uint64_t a1)
{
  IntentParameter.wrappedValue.getter(a1);
  sub_1000270C4();
}

void SetShortcutAttributesAction.state.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_10004233C();
  *(_QWORD *)(v0 + 32) = sub_100042330((uint64_t)v1);
  sub_100018388();
}

void SetShortcutAttributesAction.$state.getter()
{
  IntentParameter.projectedValue.getter();
  sub_100018188();
}

uint64_t static SetShortcutAttributesAction.parameterSummary.getter()
{
  uint64_t KeyPath;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  KeyPath = swift_getKeyPath(&unk_100097940);
  v1 = sub_100012E2C(&qword_1000D17F8);
  v2 = sub_10003F8D8();
  sub_100004038(&qword_1000D1808, &qword_1000D17F8);
  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_10003BCD0, 0, v1, v2, v3);
}

uint64_t sub_10003BCD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v34 = a1;
  v1 = sub_100012E2C(&qword_1000D1E20);
  v2 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  v33 = v2;
  v3 = __chkstk_darwin(v1);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v31 = (char *)&v26 - v5;
  v6 = sub_100012E2C(&qword_1000D1E28);
  v29 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v26 - v10;
  v35 = 0;
  v12 = sub_100012E2C(&qword_1000D1E30);
  v13 = sub_10003F8D8();
  v14 = sub_100040D74();
  sub_100004038(&qword_1000D1E38, &qword_1000D1E30);
  v16 = v15;
  v27 = v12;
  ParameterSummaryCaseCondition.init(_:_:)(&v35, sub_10003BF80, 0, &type metadata for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v12, v13, v14, v15);
  sub_100004038(&qword_1000D1E40, &qword_1000D1E28);
  v28 = v17;
  v18 = v11;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v9, &type metadata for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v6, v17);
  v29 = *(_QWORD *)(v29 + 8);
  ((void (*)(char *, uint64_t))v29)(v9, v6);
  v19 = v30;
  ParameterSummaryDefaultCaseCondition.init(_:)(sub_10003C2B4, 0, &type metadata for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v12, v13, v14, v16);
  sub_100004038(&qword_1000D1E48, &qword_1000D1E20);
  v21 = v31;
  v20 = v32;
  v22 = v19;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v19, &type metadata for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v32, v23);
  v24 = *(void (**)(char *, uint64_t))(v33 + 8);
  v24(v22, v20);
  static ParameterSummaryCaseBuilder.buildBlock<A, B>(_:_:)(v18, v21, &type metadata for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation, v6, v27, v14, v28, v16);
  v24(v21, v20);
  return ((uint64_t (*)(char *, uint64_t))v29)(v18, v6);
}

uint64_t sub_10003BF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  _QWORD v32[2];

  v32[1] = a1;
  v1 = sub_100012E2C(&qword_1000D1E50);
  __chkstk_darwin(v1);
  v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D1E58);
  __chkstk_darwin(v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D1E30);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v32 - v12;
  v14 = sub_10003F8D8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 4, &type metadata for SetShortcutAttributesAction, v14);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100097940);
  v17 = sub_100012E2C(&qword_1000D1E60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100099838);
  v20 = sub_100012E2C(&qword_1000D1E68);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100099888);
  v23 = sub_100012E2C(&qword_1000D1E78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x20726F6620;
  v24._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(&unk_100099860);
  v26 = sub_100012E2C(&qword_1000D1E70);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v25, v4, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v27);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for SetShortcutAttributesAction, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for SetShortcutAttributesAction, v14);
  sub_100004038(&qword_1000D1E38, &qword_1000D1E30);
  v29 = v28;
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for SetShortcutAttributesAction, v7, v28);
  v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v11, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for SetShortcutAttributesAction, v7, v29);
  return ((uint64_t (*)(char *, uint64_t))v30)(v13, v7);
}

void sub_10003C28C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SetShortcutAttributesAction.$state.getter();
  *a1 = v2;
}

uint64_t sub_10003C2B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD v29[2];

  v29[1] = a1;
  v1 = sub_100012E2C(&qword_1000D1E50);
  __chkstk_darwin(v1);
  v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D1E58);
  __chkstk_darwin(v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D1E30);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v29 - v12;
  v14 = sub_10003F8D8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 3, &type metadata for SetShortcutAttributesAction, v14);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100097940);
  v17 = sub_100012E2C(&qword_1000D1E60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100099838);
  v20 = sub_100012E2C(&qword_1000D1E68);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0x20726F6620;
  v21._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100099860);
  v23 = sub_100012E2C(&qword_1000D1E70);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v22, v4, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v24);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for SetShortcutAttributesAction, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for SetShortcutAttributesAction, v14);
  sub_100004038(&qword_1000D1E38, &qword_1000D1E30);
  v26 = v25;
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v11, &type metadata for SetShortcutAttributesAction, v7, v25);
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v11, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for SetShortcutAttributesAction, v7, v26);
  return ((uint64_t (*)(char *, uint64_t))v27)(v13, v7);
}

uint64_t SetShortcutAttributesAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return sub_100042324((uint64_t)sub_10003C594);
}

uint64_t sub_10003C594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13;

  sub_100026AF8(a1, &qword_1000D1240, WFWorkflow_ptr);
  v3 = v2;
  sub_100042678();
  v4 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v5 = sub_100042928(v4);
  *(_QWORD *)(v1 + 160) = v5;
  if (v3)
    return sub_100042584(*(uint64_t (**)(void))(v1 + 8));
  v7 = v5;
  sub_100042678();
  if ((*(_BYTE *)(v1 + 80) & 1) != 0)
  {
    sub_100042678();
    v8 = *(_BYTE *)(v1 + 80);
    sub_100039CE0(v8);
    v10 = (v9 & 1) == 0;
    v11 = v8;
  }
  else
  {
    v12 = sub_100042678();
    v13 = *(_BYTE *)(v1 + 80);
    IntentParameter.wrappedValue.getter(v12);
    v10 = *(unsigned __int8 *)(v1 + 80);
    v11 = v13;
  }
  sub_100039E48(v10, v11);
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_10003C6FC;
  *(_QWORD *)(v1 + 112) = sub_100042D08(v1 + 16);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v1 + 88) = 0x40000000;
  *(_QWORD *)(v1 + 96) = sub_10003C7A4;
  *(_QWORD *)(v1 + 104) = &unk_1000C11D8;
  objc_msgSend(v7, "saveWithCompletionBlock:", v1 + 80);
  return swift_continuation_await(v1 + 16);
}

uint64_t sub_10003C6FC()
{
  uint64_t v0;
  uint64_t v1;

  sub_100042628();
  *(_QWORD *)(v0 + 168) = v1;
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_10003C73C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);

  v2 = *(void **)(v1 + 160);
  static IntentResult.result<>()(a1);

  v3 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100026EB8(v3);
}

uint64_t sub_10003C76C(__n128 a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 160);
  swift_willThrow(a1);

  return sub_100042860(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10003C7A4(uint64_t a1, void *a2)
{
  id v2;

  if (!a2)
    return j__swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v2 = a2;
  return sub_1000421E0();
}

uint64_t sub_10003C7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C7F0(SetShortcutAttributesAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_10003C7F0@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1();
  v4 = sub_1000182B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_10003C830(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1000D1814);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100042248;
  return SetShortcutAttributesAction.perform()(a1, v4, v5, v7, v6);
}

void sub_10003C8A8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  SetShortcutAttributesAction.init()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

uint64_t sub_10003C8D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F8D8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void CreateShortcutiCloudLinkAction.init()()
{
  sub_1000426B4();
}

void sub_10003C910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_100018190();
  v37 = v0;
  v38 = v1;
  v2 = sub_1000182A4();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  sub_100018044();
  __chkstk_darwin(v3);
  sub_1000181E0(v4, v36[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_10004248C();
  v39 = v6;
  sub_100042654();
  __chkstk_darwin(v7);
  v9 = (char *)v36 - v8;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_1000180AC();
  sub_100042950();
  __chkstk_darwin(v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v17);
  v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v21);
  sub_100026BD8();
  v36[1] = sub_100012E2C((uint64_t *)&unk_1000D0650);
  sub_1000423B0();
  sub_100042D44();
  sub_100018428();
  sub_100018084((uint64_t)v19, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v16, (uint64_t)v13);
  String.LocalizationValue.init(stringLiteral:)(v37, v38);
  sub_100042D44();
  sub_100018428();
  v22 = sub_10001832C();
  sub_100018084(v22, v23, v24, (uint64_t)v16, (uint64_t)v13);
  v25 = sub_100042740();
  sub_100015D74(v25, v26, v27, v20);
  v42 = 0;
  sub_1000182AC();
  sub_1000181B8((uint64_t)v9);
  v28 = sub_1000181B8(v39);
  sub_1000183BC(v28, enum case for InputConnectionBehavior.default(_:));
  sub_100015DA4();
  sub_100042E1C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v29, v30, v31, v32, v33, v34, v35);
  sub_100018094();
}

void sub_10003CB28()
{
  sub_10003E098();
}

uint64_t CreateShortcutiCloudLinkAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05E8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateShortcutiCloudLinkAction.title, (uint64_t)sub_10003CB28);
}

void static CreateShortcutiCloudLinkAction.title.getter()
{
  sub_1000338A0();
}

void static CreateShortcutiCloudLinkAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D05E8, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateShortcutiCloudLinkAction.title, (uint64_t)sub_10003CB28);
}

void static CreateShortcutiCloudLinkAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D05E8 != -1)
    swift_once(&qword_1000D05E8, sub_10003CB28);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static CreateShortcutiCloudLinkAction.title);
  sub_100018188();
}

void sub_10003CC14()
{
  sub_10003E2B0();
}

uint64_t CreateShortcutiCloudLinkAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05F0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static CreateShortcutiCloudLinkAction.description, (uint64_t)sub_10003CC14);
}

uint64_t static CreateShortcutiCloudLinkAction.description.getter()
{
  return sub_100034EF4();
}

void static CreateShortcutiCloudLinkAction.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  sub_1000275E4();
  sub_100012E2C(&qword_1000D1818);
  sub_100018034();
  __chkstk_darwin(v0);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D1820);
  sub_100018034();
  __chkstk_darwin(v1);
  sub_100026BF0();
  sub_10003F914();
  sub_1000424C4(23, 1);
  v3._object = (void *)0x800000010009D140;
  v3._countAndFlagsBits = 0xD000000000000017;
  sub_100042468(v3);
  swift_getKeyPath(&unk_100097968);
  v2 = sub_100012E2C(&qword_1000D1830);
  sub_100042348(v2);
  sub_100042590();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100042468(v4);
  sub_100042374();
  sub_1000422BC();
  sub_100026D40();
}

uint64_t CreateShortcutiCloudLinkAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[16] = a1;
  v2[17] = a2;
  v3 = type metadata accessor for URL(0);
  v2[18] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[19] = v4;
  v2[20] = sub_1000423D4(v4);
  v2[21] = sub_1000424BC();
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_10003CDAC()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)WFWorkflowPrepareForSharingOptions), "init");
  v0[22] = v1;
  sub_100026AF8((uint64_t)v1, &qword_1000D1240, WFWorkflow_ptr);
  sub_100042CB4();
  v2 = (void *)v0[15];
  v3 = objc_msgSend((id)objc_opt_self(WFDatabase), "defaultDatabase");
  v4 = sub_100030E6C(v2, v3);
  v0[23] = v4;
  v0[24] = objc_msgSend(v4, "prepareForSharingWithOptions:", v1);
  v5 = (_QWORD *)swift_task_alloc(dword_1000D1844);
  v0[25] = v5;
  *v5 = v0;
  v5[1] = sub_10003CED0;
  return sub_10003D20C(v0[17]);
}

uint64_t sub_10003CED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc(v2);
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_10003CF28()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = (void *)v0[23];
  v2 = objc_msgSend((id)objc_opt_self(WFGallerySessionManager), "sharedManager");
  v0[27] = v2;
  sub_10003F950(v1, (SEL *)&selRef_name);
  if (!v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(WFWorkflow), "defaultName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  }
  v5 = v0 + 2;
  v6 = v0[24];
  v7 = v0[20];
  v8 = String._bridgeToObjectiveC()();
  v0[28] = v8;
  sub_1000183D0();
  v0[7] = v7;
  v0[2] = v0;
  v0[3] = sub_10003D074;
  v9 = sub_100042D08((uint64_t)(v0 + 2));
  v0[10] = _NSConcreteStackBlock;
  v10 = v0 + 10;
  v10[1] = 0x40000000;
  v10[2] = sub_10003D6BC;
  v10[3] = &unk_1000C11F0;
  v10[4] = v9;
  objc_msgSend(v2, "uploadWorkflow:withName:shortDescription:longDescription:private:completionHandler:", v6, v8, 0, 0, 1, v10);
  return swift_continuation_await(v5);
}

uint64_t sub_10003D074()
{
  uint64_t v0;
  uint64_t v1;

  sub_100042628();
  *(_QWORD *)(v0 + 232) = v1;
  sub_1000424A0();
  return sub_1000422B0();
}

uint64_t sub_10003D0B4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v11;

  sub_1000425EC();
  v2 = (void *)v0[27];
  v1 = (void *)v0[28];
  v4 = (void *)v0[23];
  v3 = (void *)v0[24];
  v5 = v0[21];
  v11 = (void *)v0[22];
  v6 = v0[19];
  v7 = v0[18];
  sub_100042AC8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));

  sub_1000040A8(&qword_1000D1848, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  static IntentResult.result<A>(value:)(v5, v7, v8);

  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_10004255C();
  sub_100042804();
  v9 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042388(v9);
}

uint64_t sub_10003D154()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);

  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  sub_10004255C();
  return sub_100042400(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10003D19C(__n128 a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 224);
  v3 = *(void **)(v1 + 216);
  v5 = *(void **)(v1 + 184);
  v4 = *(void **)(v1 + 192);
  v6 = *(void **)(v1 + 176);
  swift_willThrow(a1);

  swift_task_dealloc(*(_QWORD *)(v1 + 168));
  sub_10004255C();
  return sub_10004286C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10003D20C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[13] = a1;
  v2 = type metadata accessor for ConfirmationActionName(0);
  v1[14] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[15] = v3;
  v1[16] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D1DF0);
  v1[17] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[18] = v5;
  v1[19] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1[20] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[21] = v7;
  v1[22] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v1[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v1[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IntentDialog(0);
  v1[26] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[27] = v12;
  v1[28] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10003D348, 0, 0);
}

uint64_t sub_10003D348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v24 = *(_QWORD *)(v0 + 104);
  sub_1000427D8(0xD000000000000012, (uint64_t)"Create iCloud Link");
  sub_1000428E8();
  sub_100042B98();
  sub_100018084(v3, 0x6E65746E49707041, 0xEA00000000007374, v4, v5);
  IntentDialog.init(full:systemImageName:)(v2, 0xD000000000000010, 0x800000010009D250);
  sub_1000427D8(0xD00000000000005ALL, (uint64_t)"Anyone with access to this shared link will be able to view the contents of this shortcut.");
  sub_1000428E8();
  sub_100042B98();
  sub_100018084(v3, 0x6E65746E49707041, 0xEA00000000007374, v4, v5);
  v6 = Text.init(_:)(v2);
  v8 = v7;
  LOBYTE(v5) = v9;
  v11 = v10;
  *(_QWORD *)(v0 + 232) = v6;
  *(_QWORD *)(v0 + 240) = v7;
  *(_BYTE *)(v0 + 89) = v9;
  *(_QWORD *)(v0 + 248) = v10;
  v12 = static Edge.Set.vertical.getter();
  v13 = EdgeInsets.init(_all:)(8.0);
  *(_QWORD *)(v0 + 96) = v24;
  *(_QWORD *)(v0 + 24) = v8;
  *(_BYTE *)(v0 + 32) = v5 & 1;
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 40) = v11;
  *(_BYTE *)(v0 + 48) = v12;
  *(double *)(v0 + 56) = v13;
  *(_QWORD *)(v0 + 64) = v14;
  *(_QWORD *)(v0 + 72) = v15;
  *(_QWORD *)(v0 + 80) = v16;
  *(_BYTE *)(v0 + 88) = 0;
  v17 = sub_100012E2C(&qword_1000D1DF8);
  v18 = sub_100042178();
  v19 = static IntentResult.result<A>(dialog:view:)(v1, v0 + 16, v17, v18);
  static ConfirmationActionName.share.getter(v19);
  v20 = (_QWORD *)swift_task_alloc(async function pointer to AppIntent.requestConfirmation<A>(result:confirmationActionName:showPrompt:)[1]);
  *(_QWORD *)(v0 + 256) = v20;
  v21 = sub_10003F914();
  sub_100004038(&qword_1000D1E08, &qword_1000D1DF0);
  *v20 = v0;
  v20[1] = sub_10003D57C;
  return AppIntent.requestConfirmation<A>(result:confirmationActionName:showPrompt:)(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128), 1, &type metadata for CreateShortcutiCloudLinkAction, *(_QWORD *)(v0 + 136), v21, v22);
}

uint64_t sub_10003D57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v2);
  sub_100042A4C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1000424A0();
  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_10003D610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1000425EC();
  sub_1000425A0();
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  sub_10004255C();
  sub_10004257C();
  sub_1000426E0();
  sub_100042710();
  sub_1000428D0();
  swift_task_dealloc(v9);
  swift_task_dealloc(a9);
  v11 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042388(v11);
}

uint64_t sub_10003D664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000425EC();
  sub_1000425A0();
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  sub_10004255C();
  sub_10004257C();
  sub_1000426E0();
  sub_100042710();
  sub_1000428D0();
  swift_task_dealloc(v10);
  swift_task_dealloc(a9);
  return sub_100042388(*(uint64_t (**)(void))(v9 + 8));
}

uint64_t sub_10003D6BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v10 = a3;
    return sub_1000421E0();
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    return sub_100038168(v9, (uint64_t)v8);
  }
}

void sub_10003D754(uint64_t a1@<X8>)
{
  sub_10003E640(CreateShortcutiCloudLinkAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10003D76C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D183C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return CreateShortcutiCloudLinkAction.perform()(a1, v4);
}

void sub_10003D7C4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CreateShortcutiCloudLinkAction.init()();
  *a1 = v2;
}

uint64_t sub_10003D7E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10003F914();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void DeleteWorkflowAction.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[6];

  sub_100018190();
  v2 = sub_1000182A4();
  v27[2] = *(_QWORD *)(v2 - 8);
  v27[3] = v2;
  sub_100018044();
  __chkstk_darwin(v3);
  sub_1000181E0(v4, v27[0]);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100026F1C();
  v8 = v6 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)v27 - v10;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v12);
  v13 = sub_1000180AC();
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v17);
  sub_1000180D0();
  sub_100018034();
  __chkstk_darwin(v18);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v21);
  sub_1000181C8();
  v27[0] = sub_100012E2C(&qword_1000D0678);
  sub_100042750();
  sub_1000182E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  sub_100018084((uint64_t)v20, 0x6E65746E49707041, 0xEA00000000007374, v1, (uint64_t)v16);
  sub_100042358(v0);
  v27[4] = 0;
  sub_1000182AC();
  sub_100042358((uint64_t)v11);
  v22 = sub_100042358(v8);
  sub_1000183BC(v22, enum case for InputConnectionBehavior.default(_:));
  sub_100015DA4();
  v23 = sub_100042D74();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v24, v25, v11, v8, v14, v26);
  sub_100018094();
}

void sub_10003D9F4()
{
  sub_10003E098();
}

uint64_t DeleteWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D05F8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static DeleteWorkflowAction.title, (uint64_t)sub_10003D9F4);
}

void static DeleteWorkflowAction.title.getter()
{
  sub_1000338A0();
}

void static DeleteWorkflowAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D05F8, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static DeleteWorkflowAction.title, (uint64_t)sub_10003D9F4);
}

void static DeleteWorkflowAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D05F8 != -1)
    swift_once(&qword_1000D05F8, sub_10003D9F4);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static DeleteWorkflowAction.title);
  sub_100018188();
}

void sub_10003DAE0()
{
  sub_10003E2B0();
}

uint64_t DeleteWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0600, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static DeleteWorkflowAction.description, (uint64_t)sub_10003DAE0);
}

uint64_t static DeleteWorkflowAction.description.getter()
{
  return sub_100034EF4();
}

void DeleteWorkflowAction.entities.setter(uint64_t a1)
{
  uint64_t v1;

  v1 = a1;
  IntentParameter.wrappedValue.setter(&v1);
  sub_1000270C4();
}

uint64_t DeleteWorkflowAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  sub_1000424D8();
  v2[5] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042408(v3, v4, v5);
}

uint64_t sub_10003DBF0()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  void *v12;
  __n128 v13;

  sub_100042AF8();
  v1 = (id *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_100042678();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (void *)objc_opt_self(WFDatabase);
    sub_100042DD8();
    v5 = 0;
    while (1)
    {
      v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = objc_msgSend(v4, "defaultDatabase");
      *v1 = 0;
      v8 = objc_msgSend(v7, "deleteReference:error:", v6, v1);

      v9 = *v1;
      if (!v8)
        break;
      ++v5;

      if (v3 == v5)
      {
        sub_100018420();
        goto LABEL_6;
      }
    }
    v12 = v9;
    _convertNSErrorToError(_:)(v9);

    swift_willThrow(v13);
    swift_bridgeObjectRelease_n(v2, 2);
    v11 = (uint64_t (*)(void))sub_1000428F0();
  }
  else
  {
LABEL_6:
    v10 = sub_100018420();
    static IntentResult.result<>()(v10);
    v11 = (uint64_t (*)(void))sub_1000428F0();
  }
  return sub_10004244C(v11);
}

void sub_10003DD44()
{
  AddShortcutToHomeScreenAction.shortcut.getter();
}

void sub_10003DD4C(uint64_t a1@<X8>)
{
  sub_10003E640(DeleteWorkflowAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10003DD60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D1854);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100042248;
  return DeleteWorkflowAction.perform()(a1, v4);
}

void sub_10003DDB8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  DeleteWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_10003DDDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100041020();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void SearchShortcutsAction.init()()
{
  sub_1000426AC();
}

void sub_10003DE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_100018190();
  v42 = v1;
  v43 = v2;
  v4 = v3;
  v41 = v5;
  v6 = sub_1000182A4();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  sub_100018044();
  __chkstk_darwin(v7);
  sub_1000429AC(v8, (uint64_t)v41);
  sub_100012E2C(&qword_1000D0628);
  sub_100018034();
  __chkstk_darwin(v9);
  sub_100018404(v10, (uint64_t)v41);
  sub_100012E2C(&qword_1000D0660);
  sub_100018034();
  __chkstk_darwin(v11);
  sub_10001827C();
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v12);
  sub_1000180AC();
  sub_100042950();
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v23);
  sub_100018458();
  v41 = (uint64_t *)sub_100012E2C(v41);
  sub_100042DF4(v4);
  sub_1000182EC();
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  sub_100042B14((uint64_t)v15, enum case for LocalizedStringResource.BundleDescription.main(_:));
  sub_100018084((uint64_t)v21, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v18, (uint64_t)v15);
  String.LocalizationValue.init(stringLiteral:)(v42, v43);
  sub_1000182EC();
  sub_100042B14((uint64_t)v15, v24);
  v25 = sub_10001832C();
  sub_100018084(v25, v26, v27, (uint64_t)v18, (uint64_t)v15);
  v28 = sub_100042740();
  sub_100015D74(v28, v29, v30, v22);
  v31 = sub_100042DAC();
  v48 = 0;
  v49 = 0;
  sub_100015D74(v0, 1, 1, v31);
  v32 = sub_1000182AC();
  sub_100026B84(v44, v33, v34, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 104))(v45, enum case for InputConnectionBehavior.default(_:), v47);
  sub_100042E1C();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v35, v36, v37, v38, v39, v40);
  sub_100018094();
}

void sub_10003E074()
{
  sub_10003E098();
}

void sub_10003E098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE v18[16];

  sub_100018190();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_1000424AC();
  sub_10004282C();
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v11);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v14);
  v16 = &v18[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1000182B4();
  sub_100042138(v17, v6);
  sub_100032758(v17, (uint64_t)v6);
  String.LocalizationValue.init(stringLiteral:)(v4, v2);
  sub_1000428E8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v0 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  sub_100018084((uint64_t)v16, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v13, (uint64_t)v10);
  sub_100018094();
}

uint64_t SearchShortcutsAction.title.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0608, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)&static SearchShortcutsAction.title, (uint64_t)sub_10003E074);
}

void static SearchShortcutsAction.title.getter()
{
  sub_1000338A0();
}

void static SearchShortcutsAction.title.setter(uint64_t a1)
{
  sub_10003391C(a1, &qword_1000D0608, (uint64_t)&type metadata accessor for LocalizedStringResource, (uint64_t)&static SearchShortcutsAction.title, (uint64_t)sub_10003E074);
}

void static SearchShortcutsAction.title.modify()
{
  uint64_t v0;

  if (qword_1000D0608 != -1)
    swift_once(&qword_1000D0608, sub_10003E074);
  v0 = sub_1000182B4();
  sub_1000422E8(v0, (uint64_t)&static SearchShortcutsAction.title);
  sub_100018188();
}

void sub_10003E28C()
{
  sub_10003E2B0();
}

void sub_10003E2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_100018190();
  v27 = v0;
  v28 = v1;
  v3 = v2;
  sub_100012E2C(&qword_1000D0638);
  sub_100018034();
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000424AC();
  v8 = *(_QWORD *)(v7 - 8);
  sub_100042950();
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000182BC();
  sub_100018034();
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000424B4();
  sub_100018034();
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000182B4();
  sub_100018034();
  __chkstk_darwin(v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IntentDescription(0);
  sub_100042138(v22, v3);
  sub_100032758(v22, (uint64_t)v3);
  String.LocalizationValue.init(stringLiteral:)(v27, v28);
  sub_100042D44();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  sub_100018084((uint64_t)v17, 0x6E65746E49707041, 0xEA00000000007374, (uint64_t)v14, (uint64_t)v11);
  sub_100027470();
  sub_100015D74(v23, v24, v25, v18);
  IntentDescription.init(_:categoryName:searchKeywords:)(v21, v6, _swiftEmptyArrayStorage);
  sub_100018094();
}

uint64_t SearchShortcutsAction.description.unsafeMutableAddressor()
{
  return sub_10003383C(&qword_1000D0610, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)&static SearchShortcutsAction.description, (uint64_t)sub_10003E28C);
}

uint64_t static SearchShortcutsAction.description.getter()
{
  return sub_100034EF4();
}

uint64_t SearchShortcutsAction.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = a2;
  sub_1000424D8();
  v2[6] = sub_1000423A4();
  sub_100042368();
  sub_10004250C();
  sub_100042500();
  return sub_100042308();
}

uint64_t sub_10003E4EC()
{
  uint64_t *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  swift_release(v0[6]);
  v1 = sub_100031094();
  if (v1)
  {
    v2 = v1;
    sub_10001B130();
    if (v3)
    {
      v4 = v3;
      sub_1000693E0();
      if (v5)
      {
        v6 = (void *)v5;
        v7 = sub_100019EAC(v5, "presentedViewController");
        if (v7)
        {
          v8 = v7;
          v9 = objc_opt_self(WFComposePresentingViewController);
          v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
          if (v10)
            objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 0, 0);

        }
        v11 = sub_100042CE8((uint64_t)v7, "searchBarTextDidBeginEditing:");
        IntentParameter.wrappedValue.getter(v11);
        sub_10003F9A4(v0[2], v0[3], v6);
        sub_100042CE8(v12, "searchBarSearchButtonClicked:");

      }
    }

  }
  static IntentResult.result<>()(v1);
  v13 = (uint64_t (*)(void))sub_1000426D4();
  return sub_100042400(v13);
}

void sub_10003E5EC()
{
  SearchShortcutsAction.searchPhrase.getter();
}

void sub_10003E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;

  SearchShortcutsAction.searchPhrase.setter(a1, a2, *v8, a4, a5, a6, a7, a8);
}

void sub_10003E5FC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void sub_10003E62C(uint64_t a1@<X8>)
{
  sub_10003E640(SearchShortcutsAction.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

void sub_10003E640(uint64_t (*a1)(void)@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v5 = a1();
  sub_1000424D0(v5, (uint64_t)v7, 0);
  v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
  sub_10004280C();
}

uint64_t sub_10003E698(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1000D185C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10003E6F0;
  return SearchShortcutsAction.perform()(a1, v4);
}

uint64_t sub_10003E6F0()
{
  uint64_t v0;

  sub_1000424E0();
  return sub_100026EB8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_10003E714(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SearchShortcutsAction.init()();
  *a1 = v2;
}

uint64_t sub_10003E738(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100041144();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

id sub_10003E760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  void *v6;
  void *v7;
  NSString v13;
  NSDictionary v14;
  uint64_t v15;
  NSURL *v16;
  void *v17;
  void *v18;
  id v19;

  v7 = v6;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a3)
  {
    v14.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v14.super.isa = 0;
  }
  v15 = type metadata accessor for URL(0);
  v17 = 0;
  if (sub_100019D44(a4, 1, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v16);
    v17 = v18;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a4, v15);
  }
  v19 = objc_msgSend(v7, "initWithBundleIdentifier:options:URL:userActivity:retainsSiri:", v13, v14.super.isa, v17, a5, a6 & 1);

  return v19;
}

uint64_t sub_10003E874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v2 = type metadata accessor for String.LocalizationValue.Placeholder(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for String.LocalizationValue.Placeholder.int(_:))
    return 1684827173;
  if (v6 == enum case for String.LocalizationValue.Placeholder.uint(_:))
    return 1970039845;
  if (v6 == enum case for String.LocalizationValue.Placeholder.float(_:))
    return 26149;
  if (v6 == enum case for String.LocalizationValue.Placeholder.double(_:))
    return 6712357;
  if (v6 != enum case for String.LocalizationValue.Placeholder.object(_:))
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 16421;
}

uint64_t sub_10003E9B0(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;

  v2 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1, result + 1, 1);
  return result;
}

void sub_10003E9DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100046AB0();
  *v0 = v1;
}

void sub_10003E9F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100046AD4();
  *v0 = v1;
}

void sub_10003EA14(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_100046AF8(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_10003EA30()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100046BE0();
  *v0 = v1;
}

void sub_10003EA4C(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_100046C04(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_10003EA68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100046CBC();
  *v0 = v1;
}

void sub_10003EA84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100046CE0();
  *v0 = v1;
}

void *sub_10003EAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD v44[9];
  _QWORD v45[2];

  v2 = a2;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v45[0] = a1;
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v4 = a2 + 56;
    v42 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v5 = 0;
    while (1)
    {
      v6 = *(void **)(v42 + 8 * v5++);
      v7 = *(_QWORD *)(v2 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v44, v7);
      v43 = v6;
      String.hash(into:)(v44, v8, v10);
      v11 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10);
      v12 = -1 << *(_BYTE *)(v2 + 32);
      v13 = v11 & ~v12;
      if (((*(_QWORD *)(v4 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
      {
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13));
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v14 == v17 && v16 == v18)
        {
LABEL_21:
          swift_bridgeObjectRelease_n(v16, 2);
LABEL_22:

          v45[1] = v5;
          v31 = *(_BYTE *)(v2 + 32);
          v32 = v31 & 0x3F;
          v33 = (1 << v31) + 63;
          v34 = v33 >> 6;
          v35 = 8 * (v33 >> 6);
          if (v32 < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v33 >> 6), 8),
                (_DWORD)isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)&v41 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v35);
            sub_10003EE30((unint64_t *)((char *)&v41 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0)), v34, v2, v13, v45);
            v37 = v36;
            swift_release(v2);
            swift_bridgeObjectRelease(v45[0]);
          }
          else
          {
            v38 = (void *)swift_slowAlloc(v35, -1);
            memcpy(v38, (const void *)(v2 + 56), v35);
            sub_10003EE30((unint64_t *)v38, v34, v2, v13, v45);
            v37 = v39;
            swift_release(v2);
            swift_bridgeObjectRelease(v45[0]);
            swift_slowDealloc(v38, -1, -1);
          }
          return (void *)v37;
        }
        v20 = v18;
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v20);
        if ((v21 & 1) != 0)
          goto LABEL_22;
        v22 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v22;
          if (((*(_QWORD *)(v4 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
            break;
          v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13));
          v16 = v24;
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v23 == v25 && v16 == v26)
            goto LABEL_21;
          v28 = v26;
          v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v16, v25, v26, 0);
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v28);
          if ((v29 & 1) != 0)
            goto LABEL_22;
        }
      }

      if (v5 == v41)
      {
        swift_bridgeObjectRelease(a1);
        return (void *)v2;
      }
    }
  }
  return (void *)v2;
}

void sub_10003EE30(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  _QWORD v46[9];
  uint64_t v47;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v43 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain(a3);
    sub_10003F0F8(a1, a2, v43, a3);
    return;
  }
  v47 = a3 + 56;
  v44 = a5;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_32;
    v10 = *(void **)(v8 + 8 * v7 + 32);
    a5[1] = v7 + 1;
    v11 = *(_QWORD *)(a3 + 40);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;
    Hasher.init(_seed:)(v46, v11);
    v45 = v10;
    String.hash(into:)(v46, v12, v14);
    v15 = Hasher._finalize()();
    swift_bridgeObjectRelease(v14);
    v16 = -1 << *(_BYTE *)(a3 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = 1 << v17;
    if (((1 << v17) & *(_QWORD *)(v47 + 8 * (v17 >> 6))) == 0)
      goto LABEL_20;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v17));
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    if (v20 == v23 && v22 == v24)
    {
      swift_bridgeObjectRelease_n(v22, 2);
    }
    else
    {
      v26 = v24;
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v26);
      if ((v27 & 1) == 0)
      {
        v28 = ~v16;
        for (i = v17 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v47 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v30));
          v33 = v32;
          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          if (v31 == v34 && v33 == v35)
          {
            swift_bridgeObjectRelease_n(v33, 2);
LABEL_29:

            v18 = v30 >> 6;
            v19 = 1 << v30;
            goto LABEL_23;
          }
          v37 = v35;
          v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v34, v35, 0);
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v37);
          if ((v38 & 1) != 0)
            goto LABEL_29;
        }
LABEL_20:

        a5 = v44;
        goto LABEL_26;
      }
    }

LABEL_23:
    v39 = a1[v18];
    a1[v18] = v39 & ~v19;
    a5 = v44;
    if ((v19 & v39) != 0)
    {
      v40 = v43 - 1;
      if (__OFSUB__(v43, 1))
        goto LABEL_33;
      --v43;
      if (!v40)
        return;
    }
LABEL_26:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_10003F0F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t *v34;
  uint64_t v35;
  _QWORD v36[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release(v4);
    return (uint64_t)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100012E2C(&qword_1000D1E18);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v34 = a1;
  v35 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v35)
      goto LABEL_35;
    v16 = v34[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v35)
        goto LABEL_35;
      v16 = v34[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v35)
          goto LABEL_35;
        v16 = v34[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v19 = v9[5];
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    Hasher.init(_seed:)(v36, v19);
    v23 = v18;
    String.hash(into:)(v36, v20, v22);
    v24 = Hasher._finalize()();
    result = swift_bridgeObjectRelease(v22);
    v25 = -1 << *((_BYTE *)v9 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_QWORD *)(v9[6] + 8 * v28) = v23;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= v35)
    goto LABEL_35;
  v16 = v34[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v35)
      goto LABEL_35;
    v16 = v34[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10003F388(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10003F39C(result, a2);
  return result;
}

uint64_t sub_10003F39C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10003F3E0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10003F424(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, "PNGRepresentation");

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

unint64_t sub_10003F490()
{
  unint64_t result;

  result = qword_1000D1670;
  if (!qword_1000D1670)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateWorkflowAction, &type metadata for CreateWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1670);
  }
  return result;
}

void sub_10003F4CC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.$shortcut.getter();
  *a1 = v2;
  sub_100018188();
}

unint64_t sub_10003F4F0()
{
  unint64_t result;

  result = qword_1000D1688;
  if (!qword_1000D1688)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D1688);
  }
  return result;
}

unint64_t sub_10003F52C()
{
  unint64_t result;

  result = qword_1000D1690;
  if (!qword_1000D1690)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWorkflowAction, &type metadata for OpenWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1690);
  }
  return result;
}

void sub_10003F568(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setName:", v4);

}

unint64_t sub_10003F5AC()
{
  unint64_t result;

  result = qword_1000D16A8;
  if (!qword_1000D16A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateFolderAction, &type metadata for CreateFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D16A8);
  }
  return result;
}

unint64_t sub_10003F5E8()
{
  unint64_t result;

  result = qword_1000D16C8;
  if (!qword_1000D16C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNavigationDestinationAction, &type metadata for OpenNavigationDestinationAction);
    atomic_store(result, (unint64_t *)&qword_1000D16C8);
  }
  return result;
}

unint64_t sub_10003F624()
{
  unint64_t result;

  result = qword_1000D16E0;
  if (!qword_1000D16E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveShortcutToFolderAction, &type metadata for MoveShortcutToFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D16E0);
  }
  return result;
}

unint64_t sub_10003F668()
{
  unint64_t result;

  result = qword_1000D1700;
  if (!qword_1000D1700)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveShortcutToFolderAction.MoveError, &type metadata for MoveShortcutToFolderAction.MoveError);
    atomic_store(result, (unint64_t *)&qword_1000D1700);
  }
  return result;
}

unint64_t sub_10003F6A4()
{
  unint64_t result;

  result = qword_1000D1718;
  if (!qword_1000D1718)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddShortcutToHomeScreenAction, &type metadata for AddShortcutToHomeScreenAction);
    atomic_store(result, (unint64_t *)&qword_1000D1718);
  }
  return result;
}

void sub_10003F6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_100042CA8();
  v3 = sub_100012E2C(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  sub_100018188();
}

unint64_t sub_10003F720()
{
  unint64_t result;

  result = qword_1000D1730;
  if (!qword_1000D1730)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddShortcutToHomeScreenAction.AddToHomeScreenError, &type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError);
    atomic_store(result, (unint64_t *)&qword_1000D1730);
  }
  return result;
}

unint64_t sub_10003F75C()
{
  unint64_t result;

  result = qword_1000D1748;
  if (!qword_1000D1748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameShortcutAction, &type metadata for RenameShortcutAction);
    atomic_store(result, (unint64_t *)&qword_1000D1748);
  }
  return result;
}

unint64_t sub_10003F7A0()
{
  unint64_t result;

  result = qword_1000D1778;
  if (!qword_1000D1778)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeShortcutIconAction, &type metadata for ChangeShortcutIconAction);
    atomic_store(result, (unint64_t *)&qword_1000D1778);
  }
  return result;
}

unint64_t sub_10003F7DC()
{
  unint64_t result;

  result = qword_1000D17A0;
  if (!qword_1000D17A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D17A0);
  }
  return result;
}

unint64_t sub_10003F818()
{
  unint64_t result;

  result = qword_1000D17B8;
  if (!qword_1000D17B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetShortcutAttributesAction, &type metadata for GetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D17B8);
  }
  return result;
}

unint64_t sub_10003F85C()
{
  unint64_t result;

  result = qword_1000D17D8;
  if (!qword_1000D17D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Bool, &type metadata for Bool);
    atomic_store(result, (unint64_t *)&qword_1000D17D8);
  }
  return result;
}

unint64_t sub_10003F898()
{
  unint64_t result;

  result = qword_1000D17F0;
  if (!qword_1000D17F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D17F0);
  }
  return result;
}

unint64_t sub_10003F8D8()
{
  unint64_t result;

  result = qword_1000D1800;
  if (!qword_1000D1800)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D1800);
  }
  return result;
}

unint64_t sub_10003F914()
{
  unint64_t result;

  result = qword_1000D1828;
  if (!qword_1000D1828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateShortcutiCloudLinkAction, &type metadata for CreateShortcutiCloudLinkAction);
    atomic_store(result, (unint64_t *)&qword_1000D1828);
  }
  return result;
}

void sub_10003F950(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  }
  sub_100018388();
}

void sub_10003F9A4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  sub_100018420();
  objc_msgSend(a3, "setText:", v4);

}

unint64_t sub_10003F9F4()
{
  unint64_t result;

  result = qword_1000D1860;
  if (!qword_1000D1860)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.DestinationQuery, &type metadata for NavigationDestinationEntity.DestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1860);
  }
  return result;
}

unint64_t sub_10003FA34()
{
  unint64_t result;

  result = qword_1000D1870;
  if (!qword_1000D1870)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.DestinationQuery, &type metadata for NavigationDestinationEntity.DestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1870);
  }
  return result;
}

unint64_t sub_10003FA74()
{
  unint64_t result;

  result = qword_1000D1878[0];
  if (!qword_1000D1878[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.DestinationQuery, &type metadata for NavigationDestinationEntity.DestinationQuery);
    atomic_store(result, qword_1000D1878);
  }
  return result;
}

void sub_10003FAB0()
{
  sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10003FAE0()
{
  unint64_t result;

  result = qword_1000D1890;
  if (!qword_1000D1890)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.DestinationQuery, &type metadata for NavigationDestinationEntity.DestinationQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1890);
  }
  return result;
}

void sub_10003FB1C()
{
  sub_1000040A8((unint64_t *)&qword_1000D16C0, type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10003FB4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1898;
  if (!qword_1000D1898)
  {
    v1 = sub_1000143E4(qword_1000D18A0);
    sub_1000040A8((unint64_t *)&qword_1000D16C0, type metadata accessor for NavigationDestinationEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000D1898);
  }
  return result;
}

unint64_t sub_10003FBD0()
{
  unint64_t result;

  result = qword_1000D18C0;
  if (!qword_1000D18C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.FolderQuery, &type metadata for NavigationDestinationEntity.FolderQuery);
    atomic_store(result, (unint64_t *)&qword_1000D18C0);
  }
  return result;
}

unint64_t sub_10003FC10()
{
  unint64_t result;

  result = qword_1000D18C8[0];
  if (!qword_1000D18C8[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.FolderQuery, &type metadata for NavigationDestinationEntity.FolderQuery);
    atomic_store(result, qword_1000D18C8);
  }
  return result;
}

unint64_t sub_10003FC50()
{
  unint64_t result;

  result = qword_1000D18E0[0];
  if (!qword_1000D18E0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity.FolderQuery, &type metadata for NavigationDestinationEntity.FolderQuery);
    atomic_store(result, qword_1000D18E0);
  }
  return result;
}

void sub_10003FC8C()
{
  sub_1000040A8(&qword_1000D18F8, type metadata accessor for NavigationDestinationEntity);
}

void sub_10003FCB8()
{
  sub_1000040A8(&qword_1000D1900, type metadata accessor for NavigationDestinationEntity);
}

void sub_10003FCE4()
{
  sub_1000040A8(&qword_1000D1908, type metadata accessor for NavigationDestinationEntity);
}

void *sub_10003FD10()
{
  return &protocol witness table for String;
}

void sub_10003FD1C()
{
  sub_1000040A8(&qword_1000D1910, type metadata accessor for NavigationDestinationEntity);
}

void sub_10003FD48()
{
  sub_1000040A8(&qword_1000D1918, type metadata accessor for NavigationDestinationEntity);
}

void sub_10003FD74()
{
  sub_1000040A8(&qword_1000D1920, type metadata accessor for NavigationDestinationEntity);
}

void sub_10003FDA0()
{
  sub_100004038(&qword_1000D1928, &qword_1000D1930);
}

void sub_10003FDCC()
{
  sub_1000040A8(&qword_1000D1938, type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10003FDFC()
{
  unint64_t result;

  result = qword_1000D1940;
  if (!qword_1000D1940)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNavigationDestinationAction, &type metadata for OpenNavigationDestinationAction);
    atomic_store(result, (unint64_t *)&qword_1000D1940);
  }
  return result;
}

unint64_t sub_10003FE40()
{
  unint64_t result;

  result = qword_1000D1948;
  if (!qword_1000D1948)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNavigationDestinationAction, &type metadata for OpenNavigationDestinationAction);
    atomic_store(result, (unint64_t *)&qword_1000D1948);
  }
  return result;
}

unint64_t sub_10003FE80()
{
  unint64_t result;

  result = qword_1000D1950;
  if (!qword_1000D1950)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNavigationDestinationAction, &type metadata for OpenNavigationDestinationAction);
    atomic_store(result, (unint64_t *)&qword_1000D1950);
  }
  return result;
}

uint64_t sub_10003FEBC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenNavigationDestinationAction.perform()>>, 1);
}

void sub_10003FECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_10003F5E8, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

unint64_t sub_10003FEE4()
{
  unint64_t result;

  result = qword_1000D1960;
  if (!qword_1000D1960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity.WorkflowQuery, &type metadata for WorkflowEntity.WorkflowQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1960);
  }
  return result;
}

unint64_t sub_10003FF24()
{
  unint64_t result;

  result = qword_1000D1970;
  if (!qword_1000D1970)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity.WorkflowQuery, &type metadata for WorkflowEntity.WorkflowQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1970);
  }
  return result;
}

unint64_t sub_10003FF64()
{
  unint64_t result;

  result = qword_1000D1978[0];
  if (!qword_1000D1978[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity.WorkflowQuery, &type metadata for WorkflowEntity.WorkflowQuery);
    atomic_store(result, qword_1000D1978);
  }
  return result;
}

unint64_t sub_10003FFA8()
{
  unint64_t result;

  result = qword_1000D1990;
  if (!qword_1000D1990)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity.WorkflowQuery, &type metadata for WorkflowEntity.WorkflowQuery);
    atomic_store(result, (unint64_t *)&qword_1000D1990);
  }
  return result;
}

unint64_t sub_10003FFEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1998;
  if (!qword_1000D1998)
  {
    v1 = sub_1000143E4(qword_1000D19A0);
    sub_10003F4F0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000D1998);
  }
  return result;
}

unint64_t sub_100040054()
{
  unint64_t result;

  result = qword_1000D19B8;
  if (!qword_1000D19B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19B8);
  }
  return result;
}

unint64_t sub_100040094()
{
  unint64_t result;

  result = qword_1000D19C0;
  if (!qword_1000D19C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19C0);
  }
  return result;
}

unint64_t sub_1000400D4()
{
  unint64_t result;

  result = qword_1000D19C8;
  if (!qword_1000D19C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19C8);
  }
  return result;
}

unint64_t sub_100040114()
{
  unint64_t result;

  result = qword_1000D19D0;
  if (!qword_1000D19D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19D0);
  }
  return result;
}

unint64_t sub_100040154()
{
  unint64_t result;

  result = qword_1000D19D8;
  if (!qword_1000D19D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19D8);
  }
  return result;
}

unint64_t sub_100040194()
{
  unint64_t result;

  result = qword_1000D19E0;
  if (!qword_1000D19E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19E0);
  }
  return result;
}

void sub_1000401D0()
{
  sub_100004038(&qword_1000D19E8, &qword_1000D19F0);
}

unint64_t sub_100040200()
{
  unint64_t result;

  result = qword_1000D19F8;
  if (!qword_1000D19F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WorkflowEntity, &type metadata for WorkflowEntity);
    atomic_store(result, (unint64_t *)&qword_1000D19F8);
  }
  return result;
}

unint64_t sub_100040240()
{
  unint64_t result;

  result = qword_1000D1A00;
  if (!qword_1000D1A00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWorkflowAction, &type metadata for OpenWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A00);
  }
  return result;
}

unint64_t sub_100040284()
{
  unint64_t result;

  result = qword_1000D1A08;
  if (!qword_1000D1A08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWorkflowAction, &type metadata for OpenWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A08);
  }
  return result;
}

unint64_t sub_1000402C4()
{
  unint64_t result;

  result = qword_1000D1A10;
  if (!qword_1000D1A10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWorkflowAction, &type metadata for OpenWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A10);
  }
  return result;
}

uint64_t sub_100040300(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenWorkflowAction.perform()>>, 1);
}

void sub_100040310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_10003F52C, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

unint64_t sub_100040328()
{
  unint64_t result;

  result = qword_1000D1A20;
  if (!qword_1000D1A20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateWorkflowAction, &type metadata for CreateWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A20);
  }
  return result;
}

unint64_t sub_10004036C()
{
  unint64_t result;

  result = qword_1000D1A28;
  if (!qword_1000D1A28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateWorkflowAction, &type metadata for CreateWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A28);
  }
  return result;
}

unint64_t sub_1000403AC()
{
  unint64_t result;

  result = qword_1000D1A30;
  if (!qword_1000D1A30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateWorkflowAction, &type metadata for CreateWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A30);
  }
  return result;
}

uint64_t sub_1000403E8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateWorkflowAction.perform()>>, 1)+ 8);
}

uint64_t sub_10004040C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateWorkflowAction.parameterSummary>>, 1);
}

unint64_t sub_100040420()
{
  unint64_t result;

  result = qword_1000D1A40;
  if (!qword_1000D1A40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateFolderAction, &type metadata for CreateFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A40);
  }
  return result;
}

unint64_t sub_100040464()
{
  unint64_t result;

  result = qword_1000D1A48;
  if (!qword_1000D1A48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateFolderAction, &type metadata for CreateFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A48);
  }
  return result;
}

unint64_t sub_1000404A4()
{
  unint64_t result;

  result = qword_1000D1A50;
  if (!qword_1000D1A50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateFolderAction, &type metadata for CreateFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A50);
  }
  return result;
}

uint64_t sub_1000404E0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateFolderAction.perform()>>, 1)+ 8);
}

uint64_t sub_100040504(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateFolderAction.parameterSummary>>, 1);
}

unint64_t sub_100040518()
{
  unint64_t result;

  result = qword_1000D1A60;
  if (!qword_1000D1A60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveShortcutToFolderAction.MoveError, &type metadata for MoveShortcutToFolderAction.MoveError);
    atomic_store(result, (unint64_t *)&qword_1000D1A60);
  }
  return result;
}

unint64_t sub_10004055C()
{
  unint64_t result;

  result = qword_1000D1A68;
  if (!qword_1000D1A68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveShortcutToFolderAction, &type metadata for MoveShortcutToFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A68);
  }
  return result;
}

unint64_t sub_10004059C()
{
  unint64_t result;

  result = qword_1000D1A70;
  if (!qword_1000D1A70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveShortcutToFolderAction, &type metadata for MoveShortcutToFolderAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A70);
  }
  return result;
}

uint64_t sub_1000405D8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MoveShortcutToFolderAction.perform()>>, 1)+ 8);
}

uint64_t sub_1000405FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static MoveShortcutToFolderAction.parameterSummary>>, 1);
}

unint64_t sub_100040610()
{
  unint64_t result;

  result = qword_1000D1A80;
  if (!qword_1000D1A80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddShortcutToHomeScreenAction.AddToHomeScreenError, &type metadata for AddShortcutToHomeScreenAction.AddToHomeScreenError);
    atomic_store(result, (unint64_t *)&qword_1000D1A80);
  }
  return result;
}

unint64_t sub_100040650()
{
  unint64_t result;

  result = qword_1000D1A88;
  if (!qword_1000D1A88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddShortcutToHomeScreenAction, &type metadata for AddShortcutToHomeScreenAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A88);
  }
  return result;
}

unint64_t sub_100040690()
{
  unint64_t result;

  result = qword_1000D1A90;
  if (!qword_1000D1A90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddShortcutToHomeScreenAction, &type metadata for AddShortcutToHomeScreenAction);
    atomic_store(result, (unint64_t *)&qword_1000D1A90);
  }
  return result;
}

uint64_t sub_1000406CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of AddShortcutToHomeScreenAction.perform()>>, 1);
}

uint64_t sub_1000406DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static AddShortcutToHomeScreenAction.parameterSummary>>, 1);
}

unint64_t sub_1000406F0()
{
  unint64_t result;

  result = qword_1000D1AA0;
  if (!qword_1000D1AA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameShortcutAction, &type metadata for RenameShortcutAction);
    atomic_store(result, (unint64_t *)&qword_1000D1AA0);
  }
  return result;
}

unint64_t sub_100040730()
{
  unint64_t result;

  result = qword_1000D1AA8;
  if (!qword_1000D1AA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameShortcutAction, &type metadata for RenameShortcutAction);
    atomic_store(result, (unint64_t *)&qword_1000D1AA8);
  }
  return result;
}

uint64_t sub_10004076C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RenameShortcutAction.perform()>>, 1)+ 8);
}

uint64_t sub_100040790(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static RenameShortcutAction.parameterSummary>>, 1);
}

unint64_t sub_1000407A4()
{
  unint64_t result;

  result = qword_1000D1AB8;
  if (!qword_1000D1AB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeShortcutIconAction, &type metadata for ChangeShortcutIconAction);
    atomic_store(result, (unint64_t *)&qword_1000D1AB8);
  }
  return result;
}

unint64_t sub_1000407E4()
{
  unint64_t result;

  result = qword_1000D1AC0;
  if (!qword_1000D1AC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeShortcutIconAction, &type metadata for ChangeShortcutIconAction);
    atomic_store(result, (unint64_t *)&qword_1000D1AC0);
  }
  return result;
}

uint64_t sub_100040820(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ChangeShortcutIconAction.perform()>>, 1);
}

uint64_t sub_100040830(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static ChangeShortcutIconAction.parameterSummary>>, 1);
}

unint64_t sub_100040844()
{
  unint64_t result;

  result = qword_1000D1AD0;
  if (!qword_1000D1AD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1AD0);
  }
  return result;
}

void sub_100040880()
{
  sub_100004038(&qword_1000D1AD8, &qword_1000D1AE0);
}

unint64_t sub_1000408B0()
{
  unint64_t result;

  result = qword_1000D1AE8;
  if (!qword_1000D1AE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1AE8);
  }
  return result;
}

unint64_t sub_1000408F0()
{
  unint64_t result;

  result = qword_1000D1AF0;
  if (!qword_1000D1AF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1AF0);
  }
  return result;
}

unint64_t sub_100040930()
{
  unint64_t result;

  result = qword_1000D1AF8;
  if (!qword_1000D1AF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1AF8);
  }
  return result;
}

void *sub_10004096C()
{
  return &protocol witness table for String;
}

unint64_t sub_10004097C()
{
  unint64_t result;

  result = qword_1000D1B00;
  if (!qword_1000D1B00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B00);
  }
  return result;
}

unint64_t sub_1000409BC()
{
  unint64_t result;

  result = qword_1000D1B08;
  if (!qword_1000D1B08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B08);
  }
  return result;
}

unint64_t sub_1000409FC()
{
  unint64_t result;

  result = qword_1000D1B10;
  if (!qword_1000D1B10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B10);
  }
  return result;
}

unint64_t sub_100040A3C()
{
  unint64_t result;

  result = qword_1000D1B18;
  if (!qword_1000D1B18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B18);
  }
  return result;
}

void sub_100040A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_10001657C, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_100040A90()
{
  unint64_t result;

  result = qword_1000D1B20;
  if (!qword_1000D1B20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B20);
  }
  return result;
}

unint64_t sub_100040AD0()
{
  unint64_t result;

  result = qword_1000D1B28;
  if (!qword_1000D1B28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortcutAttribute, &type metadata for ShortcutAttribute);
    atomic_store(result, (unint64_t *)&qword_1000D1B28);
  }
  return result;
}

unint64_t sub_100040B14()
{
  unint64_t result;

  result = qword_1000D1B30;
  if (!qword_1000D1B30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetShortcutAttributesAction, &type metadata for GetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D1B30);
  }
  return result;
}

unint64_t sub_100040B54()
{
  unint64_t result;

  result = qword_1000D1B38;
  if (!qword_1000D1B38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetShortcutAttributesAction, &type metadata for GetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D1B38);
  }
  return result;
}

uint64_t sub_100040B90(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of GetShortcutAttributesAction.perform()>>, 1)+ 8);
}

uint64_t sub_100040BB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static GetShortcutAttributesAction.parameterSummary>>, 1);
}

unint64_t sub_100040BC8()
{
  unint64_t result;

  result = qword_1000D1B48;
  if (!qword_1000D1B48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B48);
  }
  return result;
}

void sub_100040C04()
{
  sub_100004038(&qword_1000D1B50, &qword_1000D1B58);
}

unint64_t sub_100040C34()
{
  unint64_t result;

  result = qword_1000D1B60;
  if (!qword_1000D1B60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B60);
  }
  return result;
}

unint64_t sub_100040C74()
{
  unint64_t result;

  result = qword_1000D1B68;
  if (!qword_1000D1B68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B68);
  }
  return result;
}

unint64_t sub_100040CB4()
{
  unint64_t result;

  result = qword_1000D1B70;
  if (!qword_1000D1B70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B70);
  }
  return result;
}

unint64_t sub_100040CF4()
{
  unint64_t result;

  result = qword_1000D1B78;
  if (!qword_1000D1B78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B78);
  }
  return result;
}

unint64_t sub_100040D34()
{
  unint64_t result;

  result = qword_1000D1B80;
  if (!qword_1000D1B80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B80);
  }
  return result;
}

unint64_t sub_100040D74()
{
  unint64_t result;

  result = qword_1000D1B88;
  if (!qword_1000D1B88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B88);
  }
  return result;
}

unint64_t sub_100040DB4()
{
  unint64_t result;

  result = qword_1000D1B90;
  if (!qword_1000D1B90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B90);
  }
  return result;
}

void sub_100040DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_100016798, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_100040E08()
{
  unint64_t result;

  result = qword_1000D1B98;
  if (!qword_1000D1B98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1B98);
  }
  return result;
}

unint64_t sub_100040E48()
{
  unint64_t result;

  result = qword_1000D1BA0;
  if (!qword_1000D1BA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction.SetShortcutAttributesOperation, &type metadata for SetShortcutAttributesAction.SetShortcutAttributesOperation);
    atomic_store(result, (unint64_t *)&qword_1000D1BA0);
  }
  return result;
}

unint64_t sub_100040E8C()
{
  unint64_t result;

  result = qword_1000D1BA8;
  if (!qword_1000D1BA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BA8);
  }
  return result;
}

unint64_t sub_100040ECC()
{
  unint64_t result;

  result = qword_1000D1BB0;
  if (!qword_1000D1BB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetShortcutAttributesAction, &type metadata for SetShortcutAttributesAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BB0);
  }
  return result;
}

uint64_t sub_100040F08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of SetShortcutAttributesAction.perform()>>, 1);
}

uint64_t sub_100040F18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static SetShortcutAttributesAction.parameterSummary>>, 1);
}

unint64_t sub_100040F2C()
{
  unint64_t result;

  result = qword_1000D1BC0;
  if (!qword_1000D1BC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateShortcutiCloudLinkAction, &type metadata for CreateShortcutiCloudLinkAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BC0);
  }
  return result;
}

unint64_t sub_100040F6C()
{
  unint64_t result;

  result = qword_1000D1BC8;
  if (!qword_1000D1BC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateShortcutiCloudLinkAction, &type metadata for CreateShortcutiCloudLinkAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BC8);
  }
  return result;
}

uint64_t sub_100040FA8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateShortcutiCloudLinkAction.perform()>>, 1)+ 8);
}

uint64_t sub_100040FCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateShortcutiCloudLinkAction.parameterSummary>>, 1);
}

unint64_t sub_100040FE0()
{
  unint64_t result;

  result = qword_1000D1BD8;
  if (!qword_1000D1BD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteWorkflowAction, &type metadata for DeleteWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BD8);
  }
  return result;
}

unint64_t sub_100041020()
{
  unint64_t result;

  result = qword_1000D1BE0;
  if (!qword_1000D1BE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteWorkflowAction, &type metadata for DeleteWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BE0);
  }
  return result;
}

unint64_t sub_100041060()
{
  unint64_t result;

  result = qword_1000D1BE8;
  if (!qword_1000D1BE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteWorkflowAction, &type metadata for DeleteWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BE8);
  }
  return result;
}

unint64_t sub_1000410A0()
{
  unint64_t result;

  result = qword_1000D1BF0;
  if (!qword_1000D1BF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteWorkflowAction, &type metadata for DeleteWorkflowAction);
    atomic_store(result, (unint64_t *)&qword_1000D1BF0);
  }
  return result;
}

uint64_t sub_1000410DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of DeleteWorkflowAction.perform()>>, 1);
}

void sub_1000410EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_100041020, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

unint64_t sub_100041104()
{
  unint64_t result;

  result = qword_1000D1C00;
  if (!qword_1000D1C00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchShortcutsAction, &type metadata for SearchShortcutsAction);
    atomic_store(result, (unint64_t *)&qword_1000D1C00);
  }
  return result;
}

unint64_t sub_100041144()
{
  unint64_t result;

  result = qword_1000D1C08;
  if (!qword_1000D1C08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchShortcutsAction, &type metadata for SearchShortcutsAction);
    atomic_store(result, (unint64_t *)&qword_1000D1C08);
  }
  return result;
}

unint64_t sub_100041184()
{
  unint64_t result;

  result = qword_1000D1C10;
  if (!qword_1000D1C10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchShortcutsAction, &type metadata for SearchShortcutsAction);
    atomic_store(result, (unint64_t *)&qword_1000D1C10);
  }
  return result;
}

unint64_t sub_1000411C4()
{
  unint64_t result;

  result = qword_1000D1C18;
  if (!qword_1000D1C18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchShortcutsAction, &type metadata for SearchShortcutsAction);
    atomic_store(result, (unint64_t *)&qword_1000D1C18);
  }
  return result;
}

uint64_t sub_100041200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of SearchShortcutsAction.perform()>>, 1);
}

void sub_100041210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100041224(a1, a2, a3, (uint64_t (*)(void))sub_100041144, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

void sub_100041224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  _QWORD v6[2];

  v6[0] = a2;
  v6[1] = a4();
  swift_getOpaqueTypeConformance2(v6, a5, 1);
  sub_1000270C4();
}

uint64_t initializeBufferWithCopyOfBuffer for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for NavigationDestinationEntity(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RootNavigationDestination(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationDestinationEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000413E8);
}

uint64_t sub_1000413E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100026B08();
  return sub_100019D44(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NavigationDestinationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041424);
}

uint64_t sub_100041424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100026B08();
  return sub_100015D74(a1, a2, a2, v4);
}

uint64_t sub_100041458(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for RootNavigationDestination(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

void type metadata accessor for NavigationDestinationEntity.DestinationQuery()
{
  sub_1000423E8();
}

void type metadata accessor for NavigationDestinationEntity.FolderQuery()
{
  sub_1000423E8();
}

void type metadata accessor for OpenNavigationDestinationAction()
{
  sub_1000423E8();
}

void type metadata accessor for WorkflowEntity()
{
  sub_1000423E8();
}

void type metadata accessor for WorkflowEntity.WorkflowQuery()
{
  sub_1000423E8();
}

void type metadata accessor for OpenWorkflowAction()
{
  sub_1000423E8();
}

void type metadata accessor for CreateWorkflowAction()
{
  sub_1000423E8();
}

void type metadata accessor for CreateFolderAction()
{
  sub_1000423E8();
}

void type metadata accessor for MoveShortcutToFolderAction()
{
  sub_1000423E8();
}

void type metadata accessor for MoveShortcutToFolderAction.MoveError()
{
  sub_1000423E8();
}

uint64_t destroy for AddShortcutToHomeScreenAction(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[2]);
}

void _s9Shortcuts29AddShortcutToHomeScreenActionVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_retain(v3);
  sub_100042DC8();
  sub_100042B1C();
  sub_100018388();
}

uint64_t *assignWithCopy for AddShortcutToHomeScreenAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for AddShortcutToHomeScreenAction(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for AddShortcutToHomeScreenAction(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddShortcutToHomeScreenAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddShortcutToHomeScreenAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AddShortcutToHomeScreenAction()
{
  sub_1000423E8();
}

uint64_t getEnumTagSinglePayload for AddShortcutToHomeScreenAction.AddToHomeScreenError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AddShortcutToHomeScreenAction.AddToHomeScreenError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000417F8 + 4 * byte_100097797[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10004182C + 4 * byte_100097792[v4]))();
}

uint64_t sub_10004182C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100041834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004183CLL);
  return result;
}

uint64_t sub_100041848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100041850);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100041854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004185C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AddShortcutToHomeScreenAction.AddToHomeScreenError()
{
  sub_1000423E8();
}

uint64_t destroy for RenameShortcutAction(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

void type metadata accessor for RenameShortcutAction()
{
  sub_1000423E8();
}

void type metadata accessor for ChangeShortcutIconAction()
{
  sub_1000423E8();
}

uint64_t getEnumTagSinglePayload for ShortcutAttribute(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShortcutAttribute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100041988 + 4 * byte_1000977A1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1000419BC + 4 * byte_10009779C[v4]))();
}

uint64_t sub_1000419BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000419C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000419CCLL);
  return result;
}

uint64_t sub_1000419D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000419E0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1000419E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000419EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000419F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for ShortcutAttribute()
{
  sub_1000423E8();
}

void _s9Shortcuts26MoveShortcutToFolderActionVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  sub_100042DC8();
  sub_100018188();
}

void _s9Shortcuts26MoveShortcutToFolderActionVwca_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_100042CA8();
  v3 = *v2;
  *v1 = *v2;
  swift_retain(v3);
  sub_100042CE0();
  v4 = *(_QWORD *)(v0 + 8);
  v1[1] = v4;
  swift_retain(v4);
  sub_100042AE0();
  sub_100018388();
}

void _s9Shortcuts26MoveShortcutToFolderActionVwta_0()
{
  _OWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100042CA8();
  swift_release(*v2);
  v3 = *(_QWORD *)(v1 + 8);
  *(_OWORD *)v1 = *v0;
  swift_release(v3);
  sub_100018188();
}

uint64_t _s10DataSourceC13TopHitWrapperVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10DataSourceC13TopHitWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for GetShortcutAttributesAction()
{
  sub_1000423E8();
}

uint64_t destroy for SetShortcutAttributesAction(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  return swift_release(a1[3]);
}

uint64_t *initializeWithCopy for SetShortcutAttributesAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for SetShortcutAttributesAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

_QWORD *assignWithTake for SetShortcutAttributesAction(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetShortcutAttributesAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetShortcutAttributesAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SetShortcutAttributesAction()
{
  sub_1000423E8();
}

uint64_t _s9Shortcuts26MoveShortcutToFolderActionV9MoveErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100041D80 + 4 * byte_1000977AB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100041DB4 + 4 * byte_1000977A6[v4]))();
}

uint64_t sub_100041DB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100041DBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100041DC4);
  return result;
}

uint64_t sub_100041DD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100041DD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100041DDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100041DE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SetShortcutAttributesAction.SetShortcutAttributesOperation()
{
  sub_1000423E8();
}

void type metadata accessor for CreateShortcutiCloudLinkAction()
{
  sub_1000423E8();
}

void type metadata accessor for DeleteWorkflowAction()
{
  sub_1000423E8();
}

void type metadata accessor for SearchShortcutsAction()
{
  sub_1000423E8();
}

void sub_100041E20()
{
  sub_100004038(&qword_1000D1CE0, &qword_1000D1CE8);
}

void sub_100041E4C()
{
  sub_100004038(&qword_1000D1CF0, &qword_1000D1CF8);
}

void sub_100041E78()
{
  sub_100004038(&qword_1000D1D00, &qword_1000D1D08);
}

void sub_100041EA4()
{
  sub_100004038(&qword_1000D1D10, &qword_1000D1D08);
}

void sub_100041ED0()
{
  sub_100004038(&qword_1000D1D18, &qword_1000D1D20);
}

void sub_100041EFC()
{
  sub_100004038(&qword_1000D1D28, &qword_1000D1D30);
}

void sub_100041F28()
{
  sub_100004038(&qword_1000D1D38, &qword_1000D1D30);
}

void sub_100041F54()
{
  sub_100004038(&qword_1000D1D40, &qword_1000D1D48);
}

void sub_100041F80()
{
  sub_100004038(&qword_1000D1D50, &qword_1000D1D58);
}

void sub_100041FAC()
{
  sub_100004038(&qword_1000D1D60, &qword_1000D1D68);
}

void sub_100041FD8()
{
  sub_100004038(&qword_1000D1D70, &qword_1000D1D78);
}

void sub_100042004()
{
  sub_100004038(&qword_1000D1D80, &qword_1000D1D88);
}

void sub_100042030()
{
  sub_100004038(&qword_1000D1D90, &qword_1000D1D98);
}

void sub_10004205C()
{
  sub_100004038(&qword_1000D1DA0, &qword_1000D1DA8);
}

void sub_100042088()
{
  sub_100004038(&qword_1000D1DB0, &qword_1000D1DB8);
}

void sub_1000420B4()
{
  sub_100004038(&qword_1000D1DC0, &qword_1000D1DC8);
}

void sub_1000420E0()
{
  sub_100004038(&qword_1000D1DD0, &qword_1000D1DD8);
}

void sub_10004210C()
{
  sub_100004038(&qword_1000D1DE0, &qword_1000D1DE8);
}

uint64_t *sub_100042138(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

unint64_t sub_100042178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1E00;
  if (!qword_1000D1E00)
  {
    v1 = sub_1000143E4(&qword_1000D1DF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D1E00);
  }
  return result;
}

uint64_t sub_1000421E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_100042CA8();
  v2 = sub_100012E2C(&qword_1000D1050);
  v3 = sub_100042540(v2, (uint64_t)&protocol self-conformance witness table for Error);
  *v4 = v0;
  return swift_continuation_throwingResumeWithError(v1, v3);
}

uint64_t sub_100042280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(a1, 0x6E65746E49707041, 0xEA00000000007374, v2, v1, 0, 0, 256);
}

uint64_t sub_1000422B0()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_1000422BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return IntentParameterSummary.init(_:table:)(v0, 0x6E65746E49707041, 0xEA00000000007374, v2, v1);
}

uint64_t sub_1000422E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_100032758(a1, a2);
  return swift_beginAccess(v3, v2, 33, 0);
}

uint64_t sub_100042308()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_100042314@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(_QWORD *)(a1 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100042324(uint64_t a1)
{
  return swift_task_switch(a1, 0, 0);
}

uint64_t sub_100042330(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return IntentParameter.wrappedValue.modify();
}

void *sub_10004233C()
{
  return malloc(0x28uLL);
}

uint64_t sub_100042348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v2, v1, a1);
}

uint64_t sub_100042358(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 1, 1, v1);
}

uint64_t sub_100042368()
{
  uint64_t v0;

  return dispatch thunk of Actor.unownedExecutor.getter(v0);
}

uint64_t sub_100042374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return ParameterSummaryString.init(stringInterpolation:)(v0, v2, v1);
}

uint64_t sub_100042388(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000423A4()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1000423B0()
{
  return String.LocalizationValue.init(stringLiteral:)(0x74756374726F6853, 0xE800000000000000);
}

uint64_t sub_1000423C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000423D4@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(_QWORD *)(a1 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000423F0(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 1, 1, v1);
}

uint64_t sub_100042400(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100042408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_100042414(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100042430(uint64_t a1, uint64_t a2)
{
  return _diagnoseUnexpectedEnumCase<A>(type:)(a1, a2);
}

uint64_t sub_10004244C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_100042468(Swift::String a1)
{
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(a1);
}

uint64_t sub_100042470()
{
  return type metadata accessor for Locale(0);
}

uint64_t sub_1000424AC()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription(0);
}

uint64_t sub_1000424B4()
{
  return type metadata accessor for String.LocalizationValue(0);
}

uint64_t sub_1000424BC()
{
  uint64_t v0;

  return swift_task_alloc(v0);
}

uint64_t sub_1000424C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(a1, a2, v3, v2);
}

uint64_t sub_1000424D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0);
}

uint64_t sub_1000424D8()
{
  return type metadata accessor for MainActor(0);
}

uint64_t sub_1000424E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_100042518()
{
  return String.LocalizationValue.init(stringLiteral:)(0x7475626972747441, 0xE900000000000065);
}

uint64_t sub_100042534(uint64_t a1, uint64_t a2)
{
  return DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(a1, a2, 0, 0);
}

uint64_t sub_100042540(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0, 0);
}

uint64_t sub_10004254C(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 1, 1, v1);
}

uint64_t sub_10004255C()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10004257C()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100042584(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100042590()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100042598()
{
  return type metadata accessor for NavigationDestinationEntity(0);
}

uint64_t sub_1000425A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 248);
  sub_1000085A4(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240), *(_BYTE *)(v0 + 89) & 1);
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_1000425DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042608()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100042610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, (a2 - 32) | 0x8000000000000000);
}

uint64_t sub_100042620()
{
  return IntentParameter.wrappedValue.getter();
}

void sub_100042628()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

uint64_t sub_100042644@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_100042660(uint64_t a1)
{
  uint64_t v1;

  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t sub_10004266C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100042678()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100042680@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  return sub_100032B1C(a1+ ((*(unsigned __int8 *)(a7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a7 + 80))+ *(_QWORD *)(a7 + 72) * v8, v7);
}

uint64_t sub_1000426A4()
{
  return static Locale.current.getter();
}

void sub_1000426AC()
{
  sub_10003DE2C();
}

void sub_1000426B4()
{
  sub_10003C910();
}

uint64_t sub_1000426BC(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return IntentParameter.wrappedValue.setter(va);
}

void sub_1000426C8()
{
  type metadata accessor for WFWorkflowTypeName(0);
}

uint64_t sub_1000426D4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1000426E0()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_1000426E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042710()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_100042718@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return sub_100032B1C(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

void sub_100042738()
{
  void *v0;

}

uint64_t sub_100042740()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042750()
{
  return String.LocalizationValue.init(stringLiteral:)(0x74756374726F6853, 0xE900000000000073);
}

uint64_t sub_10004276C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10004277C()
{
  uint64_t v0;

  return swift_release_n(v0, 2);
}

uint64_t sub_1000427A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_1000427B4()
{
  return static Locale.current.getter();
}

uint64_t sub_1000427BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100015D74(a1, a2, 1, v2);
}

uint64_t sub_1000427C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, (a2 - 32) | 0x8000000000000000);
}

uint64_t sub_1000427D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, (a2 - 32) | 0x8000000000000000);
}

uint64_t sub_1000427E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, (a2 - 32) | 0x8000000000000000);
}

void sub_1000427F8()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_100042804()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10004281C(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 0, 1, *(_QWORD *)(v1 - 136));
}

void sub_10004283C()
{
  sub_10003EA30();
}

uint64_t sub_100042854(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100042860(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10004286C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100042878()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100042898()
{
  return String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
}

uint64_t sub_1000428B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000428D0()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

void sub_1000428D8()
{
  sub_10003EA30();
}

uint64_t sub_1000428E0()
{
  return swift_willThrow();
}

uint64_t sub_1000428E8()
{
  return static Locale.current.getter();
}

uint64_t sub_1000428F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_1000428FC()
{
  sub_10003EA30();
}

uint64_t sub_100042914(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

id sub_100042928(void *a1)
{
  void *v1;

  return sub_100030E6C(v1, a1);
}

uint64_t sub_10004293C(uint64_t a1, uint64_t a2)
{
  return String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, a2);
}

uint64_t sub_10004295C()
{
  return static Locale.current.getter();
}

uint64_t sub_100042964()
{
  unint64_t v0;
  uint64_t v1;

  return sub_10003F39C(v1, v0);
}

uint64_t sub_100042970()
{
  uint64_t v0;
  uint64_t v1;

  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t sub_10004297C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100015D74(v1, 1, 1, v0);
}

void sub_100042990(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1000429AC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1000429C8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1000429E4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100042A00()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_100042A08(id a1)
{
  return a1;
}

uint64_t sub_100042A10()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
}

uint64_t sub_100042A1C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_100042A24()
{
  uint64_t v0;
  uint64_t v1;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

uint64_t sub_100042A30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042A4C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100042A58()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100015D74(v0, 0, 1, *(_QWORD *)(v1 - 128));
}

uint64_t sub_100042A6C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

id sub_100042A80()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t sub_100042A8C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100042A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)(a9 + 16));
}

uint64_t sub_100042AA8()
{
  return static IntentResult.result<>()();
}

uint64_t sub_100042AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3;
  return sub_100032B9C(a1, v2 + v1 + v4 * v5);
}

uint64_t sub_100042AC8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_100042AD8()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100042AE0()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100042AE8()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100042B14(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_100042B1C()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100042B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100015D74(v1, 1, 1, *(_QWORD *)(v2 - 136));
  return v0;
}

uint64_t sub_100042B4C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042B5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042B68()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v0, v3);
}

uint64_t sub_100042B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a9 = a1;
  a10 = a2;
  return IntentParameter.wrappedValue.setter(&a9);
}

uint64_t sub_100042B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a9 = a1;
  a10 = a2;
  return IntentParameter.wrappedValue.setter(&a9);
}

uint64_t sub_100042B98()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v3, v0);
}

uint64_t sub_100042BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100042C18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return type metadata accessor for Bool.IntentDisplayName(0);
}

uint64_t sub_100042C28()
{
  return IntentParameter.projectedValue.getter();
}

_QWORD *sub_100042C30(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return Hasher.init(_seed:)((uint64_t *)va, 0);
}

uint64_t sub_100042C40()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100019D44(v1, 1, v0);
}

uint64_t sub_100042C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return DisplayRepresentation.init(title:subtitle:image:)(v1, v0, v2);
}

uint64_t sub_100042C60(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 0, 1, v1);
}

uint64_t sub_100042C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0);
}

uint64_t sub_100042C94@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 - 112), a1, *(_QWORD *)(v2 - 104));
}

uint64_t sub_100042CA0()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 80));
}

uint64_t sub_100042CB4()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100042CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return IntentParameter.wrappedValue.setter(&a13);
}

uint64_t sub_100042CC8()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100042CD0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100042CD8()
{
  uint64_t v0;

  return specialized ContiguousArray.reserveCapacity(_:)(v0);
}

uint64_t sub_100042CE0()
{
  uint64_t v0;

  return swift_release(v0);
}

id sub_100042CE8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100042CF4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D00()
{
  return swift_willThrow();
}

uint64_t sub_100042D08(uint64_t a1)
{
  return swift_continuation_init(a1, 1);
}

uint64_t sub_100042D10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D44()
{
  return static Locale.current.getter();
}

uint64_t sub_100042D4C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_once(a1, a4);
}

uint64_t sub_100042D74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100042D94()
{
  return type metadata accessor for TypeDisplayRepresentation(0);
}

uint64_t sub_100042D9C()
{
  return type metadata accessor for DisplayRepresentation.Image(0);
}

uint64_t sub_100042DA4()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_100042DAC()
{
  return type metadata accessor for String.IntentInputOptions(0);
}

unint64_t sub_100042DB4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_100042DC8()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100042DD0()
{
  uint64_t v0;

  return swift_isUniquelyReferenced_nonNull_native(v0);
}

uint64_t sub_100042DD8()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100042DEC()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100042DF4(uint64_t a1)
{
  return String.LocalizationValue.init(stringLiteral:)(a1, 0xE400000000000000);
}

uint64_t sub_100042DFC()
{
  uint64_t v0;

  return swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 - 72));
}

uint64_t sub_100042E08()
{
  return type metadata accessor for NavigationDestinationEntity(0);
}

uint64_t sub_100042E14()
{
  return IntentParameter.projectedValue.getter();
}

void sub_100042E30(char a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C67676F74;
  else
    v3 = 1852994932;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C67676F74;
  else
    v5 = 1852994932;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 != v5 || v4 != v6)
    sub_100047ED0(v3, a2, v5);
  sub_1000183D0();
  sub_100018420();
  sub_100018388();
}

void sub_100042EA8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100042EF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100042FB4 + 4 * byte_100099902[a2]))(0x61576E4F776F6873);
}

void sub_100042FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1 != 0x61576E4F776F6873 || v2 != 0xEB00000000686374)
    sub_100047ED0(a1, a2, 0x61576E4F776F6873);
  sub_1000183D0();
  sub_100018420();
  sub_100018388();
}

void sub_100043088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  char v20;
  _QWORD v21[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v21, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v21, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_100047DFC();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (uint64_t *)(v10 + 16 * v8);
      v12 = v11[1];
      if ((*v11 != a1 || v12 != a2) && (sub_100047EA8(*v11, v12) & 1) == 0)
      {
        v14 = ~v7;
        v15 = (v8 + 1) & v14;
        sub_100047DFC();
        if ((v16 & 1) != 0)
        {
          do
          {
            v17 = (uint64_t *)(v10 + 16 * v15);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((sub_100047EA8(*v17, v18) & 1) != 0)
              break;
            v15 = (v15 + 1) & v14;
            sub_100047DFC();
          }
          while ((v20 & 1) != 0);
        }
      }
    }
  }
}

unint64_t sub_100043180(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  id v35;
  unint64_t v36;

  v35 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v33 = *(_QWORD *)(v4 + 72);
    v34 = v12;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v34(v9, v11, v3);
      sub_100015D74((uint64_t)v9, 0, 1, v3);
      if (sub_100019D44((uint64_t)v9, 1, v3) == 1)
        break;
      v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
      v14 = sub_100012A90(v13);
      sub_1000870D4((uint64_t)v6);
      v16 = v15;
      swift_release(v14);
      v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17, v18, v19, v20, v21, v22, v23, v24);
        v26 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v25 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v26 >= v25 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v16);
        specialized Array._endMutation()(v27, v28);
      }
      v11 += v33;
      if (!--v10)
        goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
LABEL_11:
    sub_100015D74((uint64_t)v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease(v32);
  v29 = v36;

  return v29;
}

_QWORD *sub_100043390(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_7:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v8 = WFDatabaseObjectDescriptor.id.getter(v5);
        v10 = v9;
        sub_100043088(v8, v9, a2);
        v12 = v11;
        v13 = swift_bridgeObjectRelease(v10);
        if ((v12 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v14 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
          v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v6);
          specialized ContiguousArray._endMutation()(v15);
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          goto LABEL_20;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v16);
      if (!v3)
        goto LABEL_20;
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_20:
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000434FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  Class isa;
  char **v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;

  v3 = v2;
  v34 = a2;
  v5 = sub_100012E2C(&qword_1000D10F0);
  v6 = __chkstk_darwin(v5);
  v35 = (uint64_t)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)v31 - v8;
  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v10; v10 = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    v31[1] = v3;
    v32 = v10;
    v11 = a1 & 0xC000000000000001;
    v12 = 4;
    v13 = &selRef_scene_handleUserActivityWithType_webpageURL_userInfo_interaction_;
    v33 = a1;
    while (1)
    {
      v3 = v12 - 4;
      v14 = v11 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a1) : *(id *)(a1 + 8 * v12);
      v36 = v14;
      v15 = v12 - 3;
      if (__OFADD__(v3, 1))
        break;
      sub_100012A90();
      v17 = v16;
      sub_100087514();
      swift_release(v17);
      sub_10000C98C();
      v19 = v18;
      v20 = v35;
      sub_10004757C((uint64_t)v9, v35);
      v21 = type metadata accessor for IndexPath(0);
      v22 = sub_100019D44(v20, 1, v21);
      isa = 0;
      if (v22 != 1)
      {
        v24 = v13;
        v25 = v11;
        v26 = v9;
        v27 = v35;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v28 = v27;
        v9 = v26;
        v11 = v25;
        v13 = v24;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v28, v21);
      }
      objc_msgSend(v19, v13[451], isa, 0, 1);

      sub_10001222C((uint64_t)v9, &qword_1000D10F0);
      ++v12;
      a1 = v33;
      if (v15 == v32)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:

  return swift_bridgeObjectRelease(a1);
}

void sub_100043748()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  NSAttributedStringKey v31;
  void *v32;
  NSString *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  int v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  char *v76;
  __int128 v77;
  NSAttributedStringKey v78;
  uint64_t v79;
  char *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unsigned int v85;
  uint64_t v86;
  _QWORD v87[5];
  unint64_t v88;
  uint64_t v89;

  sub_100018190();
  v3 = type metadata accessor for LibraryEditingAction(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10004248C();
  v82 = v5;
  __chkstk_darwin(v6);
  v84 = (char *)&v72 - v7;
  v8 = sub_100047F00();
  v9 = type metadata accessor for LibraryEditingBehavior(v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100018470();
  v11 = sub_100047F14();
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100026BD8();
  v13 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  sub_100026D70((uint64_t)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration], (uint64_t)&v89);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v2, v13, v11);
  v14 = v0;
  LibraryConfiguration.editingBehavior.getter(v14);
  v15 = sub_1000272BC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v16 = LibraryEditingBehavior.actions.getter(v15);
  sub_100026D60(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  if (v16)
  {
    v88 = (unint64_t)_swiftEmptyArrayStorage;
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v80 = v14;
      sub_100047E74();
      v19 = v16 + v18;
      v83 = *(_QWORD *)(v4 + 72);
      v85 = enum case for LibraryEditingAction.delete(_:);
      v78 = NSForegroundColorAttributeName;
      v81 = enum case for LibraryEditingAction.remove(_:);
      v75 = enum case for LibraryEditingAction.move(_:);
      v74 = enum case for LibraryEditingAction.duplicate(_:);
      v73 = v16;
      v20 = swift_bridgeObjectRetain_n(v16, 2);
      v77 = xmmword_100096E80;
      v76 = (char *)&type metadata for Any + 8;
      v79 = v4;
      while (1)
      {
        v21 = LibraryEditingAction.title.getter(v20);
        v23 = v22;
        memset(v87, 0, 32);
        v24 = objc_allocWithZone((Class)UIBarButtonItem);
        v25 = sub_100045DD0(v21, v23, 0, v87, 0);
        v26 = v84;
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v84, v85, v3);
        LOBYTE(v21) = static LibraryEditingAction.== infix(_:_:)(v19, v26);
        v27 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
        v28 = v27(v26, v3);
        if ((v21 & 1) != 0)
        {
          v29 = sub_100012E2C(&qword_1000D0AF0);
          inited = swift_initStackObject(v29, &v86);
          *(_OWORD *)(inited + 16) = v77;
          v31 = v78;
          *(_QWORD *)(inited + 32) = v78;
          v32 = (void *)objc_opt_self(UIColor);
          v33 = v31;
          v34 = objc_msgSend(v32, "systemRedColor");
          *(_QWORD *)(inited + 64) = sub_100003B2C(0, &qword_1000D1EC8, UIColor_ptr);
          *(_QWORD *)(inited + 40) = v34;
          type metadata accessor for Key(0);
          v36 = v35;
          sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
          v38 = Dictionary.init(dictionaryLiteral:)(inited, v36, v76, v37);
          sub_1000471FC(v38, 0, v25);
        }
        v39 = LibraryEditingAction.title.getter(v28);
        if (v40)
        {
          v41 = v39;
          v42 = v40;
          v43 = v82;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v82, v19, v3);
          v44 = sub_100027138();
          v46 = v45(v44);
          if (v46 == v81)
          {
            v47 = sub_100027138();
            v48(v47);
            v49 = v43;
            v51 = *(_QWORD *)(v43 + 8);
            v50 = *(_QWORD *)(v43 + 16);
            v52 = *(_QWORD *)(v49 + 24);
            swift_bridgeObjectRelease(*(_QWORD *)(v49 + 40));
            swift_bridgeObjectRelease(v51);
            v53 = sub_100026B2C((uint64_t)&unk_1000C1DD0, 24);
            sub_100047D78(v53);
            v54 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C1DF8, 40);
            v54[2] = v53;
            v54[3] = v50;
            v54[4] = v52;
            v55 = sub_10004760C;
LABEL_15:
            sub_100003B2C(0, &qword_1000D1EC0, UIAction_ptr);
            swift_retain(v54);
            v58 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v41, v42, 0, 0, 0, 0, 0, 0, 0, 0, 0, v55, v54);
            objc_msgSend(v25, "setPrimaryAction:", v58);
            sub_10000A798((uint64_t)v55, (uint64_t)v54);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59, v60, v61, v62, v63, v64, v65, v66);
            v68 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v67 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v68 >= v67 >> 1)
              sub_100026AD8(v68 + 1, v67);
            v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v25);
            v20 = specialized Array._endMutation()(v69, v70);
            v4 = v79;
            goto LABEL_20;
          }
          if (v46 == v75)
          {
            v54 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C1DD0, 24);
            sub_100047D78((uint64_t)v54);
            v55 = sub_10004766C;
            goto LABEL_15;
          }
          if (v46 == v74)
          {
            v54 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C1DD0, 24);
            sub_100047D78((uint64_t)v54);
            v55 = sub_10004764C;
            goto LABEL_15;
          }
          if (v46 == v85)
          {
            v56 = sub_100026B2C((uint64_t)&unk_1000C1DD0, 24);
            sub_100047D78(v56);
            v54 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C1E20, 32);
            v54[2] = v56;
            v54[3] = v25;
            v57 = v25;
            v55 = sub_100047644;
            goto LABEL_15;
          }
          v71 = sub_100027138();
          ((void (*)(uint64_t))v27)(v71);
          sub_100027154();
        }

LABEL_20:
        v19 += v83;
        if (!--v17)
        {
          v16 = v73;
          sub_100018420();
          v14 = v80;
          goto LABEL_24;
        }
      }
    }
    sub_100042DD8();
LABEL_24:

    sub_100026FC4(v16);
  }
  else
  {

  }
  sub_100018094();
}

void sub_100043D24(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  sub_100026D70(a2 + 16, (uint64_t)v7);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, *a3);

  }
}

void sub_100043D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "deleteSelected:", a3);

  }
}

void sub_100043DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  NSString v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "removeSelected:", v5);

  }
}

_QWORD *sub_100043E58(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  sub_100012A90(a1);
  v2 = sub_100047E18();
  v3 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v2, &method descriptor for LibraryDataSource.layoutMode.getter);
  v4 = v3();
  sub_100019D9C();
  if ((v4 & 1) != 0)
  {
    sub_100047E58();
    v7 = sub_100046F70(v6);
    if (!v7)
      return _swiftEmptyArrayStorage;
    v10 = v7;
    swift_bridgeObjectRetain(v7);
    sub_10000FD44(&v10);
    sub_100018420();
    v5 = sub_100043180(v10, v1);
  }
  else
  {
    sub_100047E10();
    v5 = dispatch thunk of LibraryDataSource.selectedWorkflows.getter();
  }
  v8 = v5;
  sub_100019D9C();
  return (_QWORD *)v8;
}

unint64_t sub_100043F1C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  while (1)
  {
    v22 = v2;
    if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
    {
      v21 = swift_retain(v2);
      v3 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v1);
      swift_release(v2);
      if (v3 < -1)
        __break(1u);
      v4 = v3 / 2;
    }
    else
    {
      v3 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRelease(v1);
      v4 = (unint64_t)v3 >> 1;
    }
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v6 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v7 = v22;
        if ((v22 & 0xC000000000000001) != 0)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v22);
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v22);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v8 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v8)
            goto LABEL_34;
          v9 = *(id *)(v22 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v8)
            goto LABEL_37;
          v10 = (uint64_t)v9;
          v11 = *(id *)(v22 + 32 + 8 * v1);
        }
        v12 = v11;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v22)
          || (v22 & 0x8000000000000000) != 0
          || (v22 & 0x4000000000000000) != 0)
        {
          v7 = sub_100045FD0(v22);
          v22 = v7;
        }
        v13 = (v7 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v13 + 32) = v12;
        specialized Array._endMutation()(v14, v15);
        v16 = v22;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v22)
          || (v22 & 0x8000000000000000) != 0
          || (v22 & 0x4000000000000000) != 0)
        {
          v16 = sub_100045FD0(v22);
          v22 = v16;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v17 = (v16 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v17 + 32) = v10;
        specialized Array._endMutation()(v18, v19);
      }
      v5 = v6;
      if (v4 == v6)
        return v22;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_10004602C(v1);
  }
}

UIMenu sub_100044128(uint64_t a1, uint64_t a2)
{
  UIMenuElementSize preferredElementSize;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::OpaquePointer v9;
  UIImage_optional v10;

  preferredElementSize = a2;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    swift_bridgeObjectRetain(preferredElementSize);
    v8 = _bridgeCocoaArray<A>(_:)(v6, v7);
    swift_bridgeObjectRelease(preferredElementSize);
    preferredElementSize = v8;
  }
  else
  {
    v3 = swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
  }
  sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v10.value.super.isa = 0;
  v10.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v4, (Swift::String_optional)0, v10, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v9);
}

id sub_100044218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100047E90(a1, &qword_1000D1E88, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v7 = (void *)v4(v6);
  sub_100019D9C();
  sub_1000183D0();
  return v7;
}

id sub_100044284()
{
  void *v0;

  return sub_100047D30(v0, "setEditing:animated:", 1);
}

void sub_1000442CC(char a1, char a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  void *v25;
  void *v26;
  objc_super v27;

  v4 = v2;
  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v7);
  sub_100018488();
  if ((a1 & 1) != 0)
  {
    v9 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate]);
    if (Strong)
    {
      v11 = Strong;
      v12 = *((_QWORD *)v9 + 1);
      ObjectType = swift_getObjectType(Strong);
      dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v12);
      swift_unknownObjectRelease(v11);
      v14 = type metadata accessor for RunningWorkflow(0);
      if (sub_100019D44(v3, 1, v14) != 1)
      {
        sub_10001222C(v3, (uint64_t *)&unk_1000D30D0);
        return;
      }
    }
    else
    {
      v15 = type metadata accessor for RunningWorkflow(0);
      sub_100026B84(v3, v16, v17, v15);
    }
    sub_10001222C(v3, (uint64_t *)&unk_1000D30D0);
  }
  v18 = sub_100019EAC(v8, "isEditing");
  sub_100047E58();
  v20 = v19;
  objc_msgSend(v19, "setEditing:", a1 & 1);

  v27.receiver = v4;
  v27.super_class = (Class)sub_1000273E4();
  objc_msgSendSuper2(&v27, "setEditing:animated:", a1 & 1, a2 & 1);
  if (v18 != (a1 & 1))
  {
    sub_10000FC34();
    sub_1000444A4((a1 & 1) == 0);
    sub_10000C98C();
    v22 = v21;
    objc_msgSend(v21, "reloadData");

    sub_100047E10();
    v23 = sub_100047E18();
    v24 = (void (*)(_QWORD))method lookup function for LibraryDataSource(v23, &method descriptor for LibraryDataSource.isEditing.setter);
    v24(a1 & 1);
    sub_100086A38();
    sub_100019D9C();
    if ((a1 & 1) == 0)
    {
      sub_100047E58();
      v26 = v25;
      objc_msgSend(v25, "cancelInteractiveMovement");

      objc_msgSend(v4, "deselectAllCells");
    }
    sub_100044570();
  }
}

void sub_1000444A4(char a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  char **v6;
  id v7;
  id v8;
  void *v9;
  void *v10;

  v2 = v1;
  v4 = objc_msgSend(v1, "tabBarController");
  if (v4)
  {
    v5 = v4;
    v6 = &selRef_showBarWithTransition_;
    if ((a1 & 1) == 0)
      v6 = &selRef_hideBarWithTransition_;
    objc_msgSend(v4, *v6, 0);

  }
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "horizontalSizeClass");

  sub_100014270();
  if (v9)
  {
    v10 = v9;
    sub_10002DA94(a1 & 1, v8 != (id)1);

  }
  sub_10000C4A4(a1 & 1, 0.0);
}

void sub_100044570()
{
  NSString v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString argument;

  if (UIAccessibilityIsVoiceOverRunning())
  {
    v0 = String._bridgeToObjectiveC()();
    v1 = String._bridgeToObjectiveC()();
    v2 = sub_100011544(v0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v4 = v3;

    LODWORD(v2) = UIAccessibilityAnnouncementNotification;
    argument = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    UIAccessibilityPostNotification((UIAccessibilityNotifications)v2, argument);

  }
}

id sub_1000446D8()
{
  void *v0;

  return objc_msgSend(v0, "setEditing:animated:", 0, 1);
}

id sub_100044724(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v17;
  uint64_t v18;

  v2 = (uint64_t)sub_100043E58((uint64_t)a1);
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  v5 = String._bridgeToObjectiveC()();
  if (v4)
  {
    v6 = String._bridgeToObjectiveC()();
    v7 = sub_100011544(v5);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v18 = type metadata accessor for LibraryViewController(0);
    v17 = a1;
    v11 = "deselectAllCells";
  }
  else
  {
    v12 = String._bridgeToObjectiveC()();
    v13 = sub_100011544(v5);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v10 = v14;

    v18 = type metadata accessor for LibraryViewController(0);
    v17 = a1;
    v11 = "selectAllCells";
  }
  objc_allocWithZone((Class)UIBarButtonItem);
  v15 = a1;
  return sub_100045DD0(v8, v10, 0, &v17, (uint64_t)v11);
}

uint64_t sub_1000448F4(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_100043E58(a1);
  sub_10004491C((uint64_t)v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_10004491C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;

  sub_100012A90();
  sub_100086858();
  v4 = v3;
  sub_100019D9C();
  dispatch thunk of MoveToFolderCoordinator.move(_:presentingViewController:)(a1, v1);
  sub_100047D38(v4);
}

id sub_10004499C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  Class isa;
  NSString v5;
  id v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  id v11;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  v3 = sub_100043E58(a1);
  sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  v5 = String._bridgeToObjectiveC()();
  v11 = 0;
  LODWORD(v3) = objc_msgSend(v2, "removeReferences:fromCollectionWithIdentifier:error:", isa, v5, &v11);

  if ((_DWORD)v3)
    return v11;
  v10 = v11;
  v7 = v11;
  v8 = _convertNSErrorToError(_:)(v10);

  swift_willThrow(v9);
  return (id)swift_errorRelease(v8);
}

double sub_100044B3C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = sub_100012E2C(&qword_1000D10D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  sub_100015D74((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = v1;
  v8 = a1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_1000C1E98, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v8;
  v11 = sub_10005F17C((uint64_t)v5, (uint64_t)&unk_1000D1ED8, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100044C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[9] = a4;
  v5[10] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v5[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[15] = v9;
  v5[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime(0);
  v5[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[18] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v12);
  v5[20] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v5[21] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13);
  v5[22] = v14;
  v5[23] = v15;
  return swift_task_switch(sub_100044D18, v14, v15);
}

uint64_t sub_100044D18(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (void *)v1[10];
  v3 = sub_100043E58(a1);
  v1[24] = v3;
  v4 = sub_100026B2C((uint64_t)&unk_1000C1EC0, 24);
  v1[25] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = async function pointer to LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)[1];
  v6 = v2;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v1[26] = v7;
  v8 = sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  *v7 = v1;
  v7[1] = sub_100044DE8;
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v3, sub_1000477B0, v4, v8, v9);
}

uint64_t sub_100044DE8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_BYTE *)(*v1 + 216) = a1;
  swift_task_dealloc(v3);
  sub_100019D9C();
  sub_1000183D0();
  return swift_task_switch(sub_100044E54, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_100044E54()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_BYTE *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 88);
  v8 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 168));
  sub_100047E90(v9, &qword_1000D1290, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v3, 0.25);
  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v3, v6);
  v10 = sub_100026B2C((uint64_t)&unk_1000C1EE8, 32);
  *(_BYTE *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v0 + 48) = sub_1000477DC;
  *(_QWORD *)(v0 + 56) = v10;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1000725C0;
  *(_QWORD *)(v0 + 40) = &unk_1000C1F00;
  v11 = _Block_copy((const void *)(v0 + 16));
  static DispatchQoS.unspecified.getter(v8);
  *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
  sub_1000040A8((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v12 = sub_100012E2C(&qword_1000D1298);
  sub_100004038((unint64_t *)&qword_1000D3860, &qword_1000D1298);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 64, v12, v13);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v2, v5, v7, v11);
  _Block_release(v11);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v7, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v5, v20);
  v16(v2, v6);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100045084(void *a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(WFAlertPresentationSource), "sourceWithBarButtonItem:", a2);
  objc_msgSend(a1, "setPresentationSource:", v3);

}

uint64_t sub_100045140()
{
  void *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v1 = v0;
  v31 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v29 - v13;
  v15 = sub_100043E58(v12);
  v16 = type metadata accessor for LibraryViewController(0);
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  LibraryOperations.duplicateWorkflows(_:completion:)(v15, 0, 0, v16, v17);
  swift_bridgeObjectRelease(v15);
  sub_100003B2C(0, &qword_1000D1290, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v11, 0.25);
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v11, v7);
  v20 = swift_allocObject(&unk_1000C1E48, 24, 7);
  *(_QWORD *)(v20 + 16) = v1;
  aBlock[4] = sub_1000476A8;
  v36 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100007DA8;
  aBlock[3] = &unk_1000C1E60;
  v21 = _Block_copy(aBlock);
  v22 = v36;
  v23 = v1;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000040A8((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v25 = sub_100012E2C(&qword_1000D1298);
  sub_100004038((unint64_t *)&qword_1000D3860, &qword_1000D1298);
  v26 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v27);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v6, v3, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v30);
}

void sub_100045468()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (**v6)(uint64_t, uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  int isUniquelyReferenced_nonNull_native;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  void *v67;
  uint64_t (*v68)(void);
  uint64_t v69;
  id v70;
  uint64_t (*v71)(_QWORD, _QWORD, _QWORD);
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t (*v77)(_QWORD, _QWORD, _QWORD);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (**v83)(uint64_t, uint64_t);
  uint64_t i;
  uint64_t v85;
  id *v86;
  id *v87;
  int v88;
  void *v89;
  void *v90;
  Class isa;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t (**v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, char *, uint64_t);
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;

  sub_100018190();
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v3);
  v5 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for ShortcutsLibraryItem.ItemType(0);
  v6 = *(uint64_t (***)(uint64_t, uint64_t))(v105 - 8);
  __chkstk_darwin(v105);
  sub_100018548();
  v109 = v7;
  v8 = sub_100047F00();
  v9 = type metadata accessor for IndexPath(v8);
  v112 = *(_QWORD *)(v9 - 8);
  v113 = v9;
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100018470();
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v11);
  sub_100018548();
  v101 = v12;
  v13 = sub_100047F00();
  v14 = type metadata accessor for ShortcutsLibraryItem(v13);
  v111 = *(_QWORD *)(v14 - 8);
  sub_100018044();
  __chkstk_darwin(v15);
  sub_100018548();
  v108 = v16;
  v17 = sub_100047F00();
  v106 = type metadata accessor for ShortcutsLibrarySection(v17);
  v18 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  sub_10004248C();
  v102 = v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v97 - v21;
  v23 = sub_100012E2C(&qword_1000D1EB0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_10001827C();
  sub_100012A90();
  v98 = v25;
  v99 = v0;
  sub_100012A90();
  dispatch thunk of LibraryDataSource.sortedSections.getter(v26);
  sub_100019D9C();
  v27 = OrderedDictionary.values.getter(v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v23);
  v28 = *(_QWORD *)(v27 + 16);
  v100 = v6;
  v110 = v14;
  v107 = v18;
  if (v28)
  {
    sub_100047E74();
    v30 = v27 + v29;
    v31 = *(char **)(v18 + 16);
    v103 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 72);
    v104 = (uint64_t (*)(char *, uint64_t, uint64_t))v31;
    v97 = v27;
    sub_100042DD8();
    v32 = _swiftEmptyArrayStorage;
    while (1)
    {
      v33 = v104(v22, v30, v106);
      v34 = ShortcutsLibrarySection.items.getter(v33);
      sub_1000272BC((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
      v35 = *(_QWORD *)(v34 + 16);
      v36 = v32[2];
      v37 = v36 + v35;
      if (__OFADD__(v36, v35))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
      if (!isUniquelyReferenced_nonNull_native || v37 > v32[3] >> 1)
      {
        if (v36 <= v37)
          v39 = v36 + v35;
        else
          v39 = v36;
        v32 = (_QWORD *)sub_100065914(isUniquelyReferenced_nonNull_native, v39, 1, (uint64_t)v32);
      }
      if (*(_QWORD *)(v34 + 16))
      {
        v40 = v32[2];
        if ((v32[3] >> 1) - v40 < v35)
          goto LABEL_55;
        v41 = (*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
        v42 = *(_QWORD *)(v111 + 72);
        v43 = (char *)v32 + v41 + v42 * v40;
        if (v34 + v41 < (unint64_t)&v43[v42 * v35] && (unint64_t)v43 < v34 + v41 + v42 * v35)
          goto LABEL_60;
        swift_arrayInitWithCopy(v43, v34 + v41, v35, v110);
        if (v35)
        {
          v45 = v32[2];
          v46 = __OFADD__(v45, v35);
          v47 = v45 + v35;
          if (v46)
            goto LABEL_57;
          v32[2] = v47;
        }
      }
      else if (v35)
      {
        goto LABEL_54;
      }
      sub_100018420();
      v30 += (uint64_t)v103;
      if (!--v28)
      {
        sub_100026FC4(v97);
        v14 = v110;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  sub_100018420();
  v32 = _swiftEmptyArrayStorage;
LABEL_24:
  v48 = v32[2];
  if (v48)
  {
    v114 = _swiftEmptyArrayStorage;
    sub_10000CF78(0, v48, 0);
    sub_100047E74();
    v50 = (char *)v32 + v49;
    v52 = *(char **)(v51 + 72);
    v103 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 16);
    v104 = (uint64_t (*)(char *, uint64_t, uint64_t))v52;
    do
    {
      v53 = v108;
      v54 = v103(v108, v50, v14);
      v55 = ShortcutsLibraryItem.id.getter(v54);
      v56 = v14;
      v57 = v55;
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v53, v56);
      v60 = v114;
      if ((swift_isUniquelyReferenced_nonNull_native(v114) & 1) == 0)
      {
        sub_10000CF78(0, v60[2] + 1, 1);
        v60 = v114;
      }
      v62 = v60[2];
      v61 = v60[3];
      if (v62 >= v61 >> 1)
      {
        sub_10000CF78(v61 > 1, v62 + 1, 1);
        v60 = v114;
      }
      v60[2] = v62 + 1;
      v63 = &v60[2 * v62];
      v63[4] = v57;
      v63[5] = v59;
      v50 = (char *)v104 + (_QWORD)v50;
      --v48;
      v14 = v110;
    }
    while (v48);
    sub_100027154();
  }
  else
  {
    sub_100027154();
    v60 = _swiftEmptyArrayStorage;
  }
  v64 = sub_10005F3B0((uint64_t)v60);
  v65 = type metadata accessor for LibraryDataSource(0);
  v66 = (void (*)(uint64_t))method lookup function for LibraryDataSource(v65, &method descriptor for LibraryDataSource.selectedWorkflowIds.setter);
  v66(v64);
  sub_100086920();
  sub_100019D9C();
  v67 = v99;
  sub_100012A90();
  v68 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v65, &method descriptor for LibraryDataSource.layoutMode.getter);
  LOBYTE(v64) = v68();
  sub_100019D9C();
  v69 = v106;
  if ((v64 & 1) == 0)
  {
LABEL_52:
    sub_10000FC34();
    sub_100018094();
    return;
  }
  v70 = v67;
  sub_100012A90();
  sub_10008774C();
  v72 = (unint64_t)v71;
  sub_100019D9C();
  if ((v72 & 0x8000000000000000) != 0)
    goto LABEL_59;
  v73 = v105;
  v74 = v101;
  if (!v72)
  {
LABEL_51:

    goto LABEL_52;
  }
  v75 = v69;
  v76 = 0;
  LODWORD(v108) = enum case for ShortcutsLibraryItem.ItemType.workflow(_:);
  v104 = (uint64_t (*)(char *, uint64_t, uint64_t))v72;
  while (v76 != (char *)v72)
  {
    v77 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v72;
    v78 = v75;
    v79 = sub_100047E10();
    sub_100012D0C();
    v80 = v79;
    v75 = v78;
    swift_release(v80);
    if (sub_100019D44(v74, 1, v78) == 1)
    {
      sub_10001222C(v74, &qword_1000D0AD0);
      v72 = (unint64_t)v77;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 32))(v102, v74, v78);
      sub_100047E10();
      sub_1000876B4();
      v82 = v81;
      sub_100019D9C();
      if (v82 < 0)
        goto LABEL_58;
      v83 = v100;
      if (v82)
      {
        for (i = 0; i != v82; ++i)
        {
          IndexPath.init(item:section:)(i, v76);
          sub_100047E10();
          sub_100012EC0(v2, (uint64_t)v5);
          sub_100019D9C();
          v85 = sub_100019D44((uint64_t)v5, 1, v14);
          if ((_DWORD)v85 == 1)
          {
            sub_10001222C((uint64_t)v5, &qword_1000D3670);
          }
          else
          {
            v86 = v109;
            ShortcutsLibraryItem.itemType.getter(v85);
            v87 = v86;
            v14 = v110;
            sub_100026D60((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
            v88 = v83[11]((uint64_t)v87, v73);
            if (v88 == (_DWORD)v108)
            {
              sub_1000272BC((uint64_t)v87, v83[12]);

              sub_100047E58();
              v90 = v89;
              isa = IndexPath._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v90, "selectItemAtIndexPath:animated:scrollPosition:", isa, 1, 0);

              v73 = v105;
            }
            else
            {
              sub_1000272BC((uint64_t)v87, v83[1]);
            }
          }
          (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v2, v113);
        }
      }
      v75 = v106;
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v102, v106);
      v74 = v101;
      v72 = (unint64_t)v104;
    }
    if (++v76 == (char *)v72)
      goto LABEL_51;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  sub_100027030();
  sub_100026EE8((uint64_t)"Fatal error", v92, v93, (uint64_t)"UnsafeMutablePointer.initialize overlapping range", v94, v95, (uint64_t)"Swift/UnsafePointer.swift", v96, v97, v98, (int)v99);
  __break(1u);
}

void sub_100045BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  void (*v7)(_BYTE *, _QWORD);
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void *v19;
  void *v20;
  Class isa;
  uint64_t v22;
  _BYTE v23[32];

  sub_100018190();
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_10001827C();
  sub_100012E2C(&qword_1000D10F0);
  sub_100018044();
  __chkstk_darwin(v4);
  sub_100018488();
  sub_100012A90();
  v5 = sub_100047E18();
  v6 = (uint64_t (*)(_BYTE *))method lookup function for LibraryDataSource(v5, &method descriptor for LibraryDataSource.selectedWorkflowIds.modify);
  v7 = (void (*)(_BYTE *, _QWORD))v6(v23);
  v9 = v8;
  swift_bridgeObjectRelease(*v8);
  *v9 = &_swiftEmptySetSingleton;
  v7(v23, 0);
  sub_100086920();
  sub_100019D9C();
  sub_100047E10();
  v10 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v5, &method descriptor for LibraryDataSource.layoutMode.getter);
  LOBYTE(v5) = v10();
  sub_100019D9C();
  if ((v5 & 1) != 0)
  {
    sub_100047E58();
    v12 = sub_100046F70(v11);
    if (v12)
    {
      v22 = v12;
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        sub_100047E74();
        v16 = v14 + v15;
        v17 = *(_QWORD *)(v3 + 72);
        v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
        swift_bridgeObjectRetain(v14);
        while (1)
        {
          v18(v1, v16, v2);
          sub_100047F28(v1, 0);
          if (sub_100019D44(v1, 1, v2) == 1)
            break;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
          sub_10000C98C();
          v20 = v19;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v20, "deselectItemAtIndexPath:animated:", isa, 1, v22);

          sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
          v16 += v17;
          if (!--v13)
            goto LABEL_9;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v12);
LABEL_9:
        sub_100047F28(v1, 1);
      }
      sub_100026FC4(v22);
    }
  }
  sub_10000FC34();
  sub_100018094();
}

id sub_100045DB8()
{
  void *v0;

  return sub_100047D30(v0, "setEditing:animated:", 0);
}

id sub_100045DD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v5;
  void *v6;
  NSString v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v20;

  v6 = v5;
  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v11 = 0;
  }
  v12 = a4[3];
  if (v12)
  {
    v13 = sub_10001465C(a4, a4[3]);
    v14 = *(_QWORD *)(v12 - 8);
    __chkstk_darwin(v13);
    v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    v17 = _bridgeAnythingToObjectiveC<A>(_:)(v16, v12);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    sub_10000B6E4(a4);
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(v6, "initWithTitle:style:target:action:", v11, a3, v17, a5);

  swift_unknownObjectRelease(v17);
  return v18;
}

void sub_100045EFC()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_100018190();
  v4 = v3;
  v6 = v5;
  v7 = v2[3];
  if (v7)
  {
    v8 = v2;
    v9 = sub_10001465C(v2, v2[3]);
    v10 = *(_QWORD *)(v7 - 8);
    __chkstk_darwin(v9);
    sub_100018470();
    (*(void (**)(uint64_t))(v10 + 16))(v1);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v1, v7);
    sub_1000272BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_10000B6E4(v8);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v0, "initWithBarButtonSystemItem:target:action:", v6, v11, v4);
  swift_unknownObjectRelease(v11);
  sub_100018094();
}

uint64_t sub_100045FD0(unint64_t a1)
{
  uint64_t v2;

  if (a1 >> 62)
  {
    sub_100047E50();
    v2 = sub_100047EC8();
    sub_1000183D0();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

_QWORD *sub_10004602C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_8;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_100012E2C((uint64_t *)&unk_1000D3690);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v4[2] = v2;
      v4[3] = (2 * ((uint64_t)(v5 - 32) / 8)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v6 = sub_1000472C0((uint64_t)(v4 + 4), v2, v1, (void (*)(uint64_t, _QWORD, uint64_t))sub_100065D78, &qword_1000D1EA8, &qword_1000D1EA0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100047464);
    v1 = v7;
    swift_bridgeObjectRelease(v6);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_8:
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t **sub_10004613C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;
  size_t v5;
  uint64_t *v6;
  uint64_t **result;
  uint64_t v8;

  v1 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
      goto LABEL_5;
    return (uint64_t **)_swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = __CocoaSet.count.getter(a1);
  if (!v2)
    return (uint64_t **)_swiftEmptyArrayStorage;
LABEL_5:
  if (v2 <= 0)
  {
    v4 = (uint64_t **)_swiftEmptyArrayStorage;
  }
  else
  {
    v3 = sub_100012E2C((uint64_t *)&unk_1000D3690);
    v4 = (uint64_t **)sub_100026B2C(v3, 8 * v2 + 32);
    v5 = j__malloc_size(v4);
    v4[2] = (uint64_t *)v2;
    v4[3] = (uint64_t *)((2 * ((uint64_t)(v5 - 32) / 8)) | 1);
  }
  sub_100042DD8();
  v6 = sub_100047814(&v8, v4 + 4, v2, v1);
  result = (uint64_t **)sub_10002FC70(v8);
  if (v6 == (uint64_t *)v2)
    return v4;
  __break(1u);
  return result;
}

_QWORD *sub_100046228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100012E2C(&qword_1000D1E10);
  v4 = (_QWORD *)sub_100026B2C(v3, 8 * v1 + 32);
  j__malloc_size(v4);
  sub_100047F34();
  v4[2] = v1;
  v4[3] = v5;
  v6 = sub_100047B18(&v9, v4 + 4, v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_10002FC70(v7);
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_100046300(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v38 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v37 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v34 = (char *)&v28 - v11;
  result = __chkstk_darwin(v10);
  v33 = (char *)&v28 - v13;
  v36 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = v38[9];
    v31 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v32 = a4;
    v40 = v14 * (v36 - 1);
    v35 = v14;
    v39 = v14 * v36;
    while (2)
    {
      v15 = 0;
      v16 = v30;
      do
      {
        v17 = *a4;
        v18 = v33;
        v19 = v31;
        v31(v33, v39 + v15 + *a4, v7);
        v20 = v34;
        v19(v34, v40 + v15 + v17, v7);
        sub_1000040A8(&qword_1000D1E90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
        LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7, v21);
        v22 = (void (*)(char *, uint64_t))v38[1];
        v23 = v20;
        a4 = v32;
        v22(v23, v7);
        result = ((uint64_t (*)(char *, uint64_t))v22)(v18, v7);
        if ((v17 & 1) == 0)
          break;
        v24 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v25 = v24 + v39 + v15;
        v26 = v24 + v40 + v15;
        v27 = (void (*)(char *, uint64_t, uint64_t))v38[4];
        v27(v37, v25, v7);
        swift_arrayInitWithTakeFrontToBack(v25);
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v26, v37, v7);
        v15 -= v35;
        ++v16;
      }
      while (v36 != v16);
      v40 += v35;
      v39 += v35;
      if (++v36 != v29)
        continue;
      break;
    }
  }
  return result;
}

void sub_100046568(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;
  void (*v26)(char *);
  char *v27;
  uint64_t v28;
  void (*v29)(char *);
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  unint64_t v36;
  unint64_t v38;
  unint64_t v39;
  char *v41;
  char *v42;
  unint64_t v43;
  void (*v44)(char *, unint64_t, uint64_t);
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  unint64_t v50;
  BOOL v52;
  int64_t v53;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(char *);
  uint64_t v59;
  void (*v60)(char *, unint64_t, uint64_t);
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v9 = type metadata accessor for IndexPath(0);
  v10 = __chkstk_darwin(v9);
  v63 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v62 = (char *)&v55 - v13;
  v64 = v12;
  v14 = *(_QWORD *)(v12 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v15 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_80;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_81;
  v19 = v15 / v14;
  v20 = v17 / v14;
  v65 = *(_QWORD *)(v12 + 72);
  if (v15 / v14 >= v17 / v14)
  {
    sub_100065BE0(a2, v17 / v14, a4);
    v24 = v20 * v14;
    v23 = a2;
    v21 = a4 + v24;
    if (v24 < 1 || a1 >= a2)
      goto LABEL_74;
    v55 = v4;
    v56 = a1;
    v59 = -v14;
    v26 = *(void (**)(char *))(v64 + 16);
    v57 = a4;
    v58 = v26;
    v27 = v62;
    while (1)
    {
      v29 = v58;
      v28 = v59;
      v30 = a3 + v59;
      v61 = v21 + v59;
      v31 = v21;
      v58(v27);
      v32 = v63;
      v60 = (void (*)(char *, unint64_t, uint64_t))(v23 + v28);
      v29(v63);
      sub_1000040A8(&qword_1000D1E90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v28) = dispatch thunk of static Comparable.< infix(_:_:)(v27, v32, v9, v33);
      v34 = *(void (**)(char *, uint64_t))(v64 + 8);
      v34(v32, v9);
      v34(v27, v9);
      if ((v28 & 1) != 0)
      {
        if (a3 < v23 || v30 >= v23)
        {
          v23 = (unint64_t)v60;
          swift_arrayInitWithTakeFrontToBack(v30);
          v36 = v56;
          a4 = v57;
          v14 = v65;
LABEL_41:
          a3 = v30;
          goto LABEL_42;
        }
        v36 = v56;
        a4 = v57;
        v14 = v65;
        if (a3 == v23)
        {
          v23 = (unint64_t)v60;
          goto LABEL_41;
        }
        a3 = v30;
        v39 = v30;
        v23 = (unint64_t)v60;
      }
      else
      {
        if (a3 < v31 || v30 >= v31)
        {
          v38 = v61;
          swift_arrayInitWithTakeFrontToBack(v30);
          v21 = v38;
          v36 = v56;
          a4 = v57;
          v14 = v65;
LABEL_44:
          a3 = v30;
          goto LABEL_45;
        }
        v36 = v56;
        a4 = v57;
        v14 = v65;
        if (a3 == v31)
        {
          v21 = v61;
          goto LABEL_44;
        }
        a3 = v30;
        v39 = v30;
        v31 = v61;
      }
      swift_arrayInitWithTakeBackToFront(v39);
LABEL_42:
      v21 = v31;
LABEL_45:
      if (v21 <= a4 || v23 <= v36)
        goto LABEL_74;
    }
  }
  sub_100065BE0(a1, v15 / v14, a4);
  v21 = a4 + v19 * v14;
  if (v19 * v14 < 1 || a2 >= a3)
  {
    v23 = a1;
  }
  else
  {
    v55 = v4;
    v41 = v63;
    v60 = *(void (**)(char *, unint64_t, uint64_t))(v64 + 16);
    v61 = a3;
    v42 = v62;
    do
    {
      v43 = v21;
      v44 = v60;
      v60(v42, a2, v9);
      v44(v41, a4, v9);
      sub_1000040A8(&qword_1000D1E90, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
      v46 = dispatch thunk of static Comparable.< infix(_:_:)(v42, v41, v9, v45);
      v47 = *(void (**)(char *, uint64_t))(v64 + 8);
      v47(v41, v9);
      v47(v42, v9);
      if ((v46 & 1) != 0)
      {
        v14 = v65;
        v48 = a2 + v65;
        if (a1 < a2 || a1 >= v48)
        {
          swift_arrayInitWithTakeFrontToBack(a1);
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront(a1);
        }
      }
      else
      {
        v50 = a4 + v65;
        if (a1 < a4 || a1 >= v50)
        {
          swift_arrayInitWithTakeFrontToBack(a1);
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront(a1);
        }
        v48 = a2;
        a4 = v50;
        v14 = v65;
      }
      v21 = v43;
      a1 += v14;
      v52 = a4 >= v43 || v48 >= v61;
      a2 = v48;
    }
    while (!v52);
    v23 = a1;
  }
LABEL_74:
  v53 = v21 - a4;
  if (v14 != -1 || v53 != 0x8000000000000000)
  {
    sub_100065BE0(a4, v53 / v14, v23);
    return;
  }
LABEL_82:
  __break(1u);
}

void sub_1000469D0(char a1, uint64_t a2, char a3, char *a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  if ((a3 & 1) != 0)
  {
    sub_100047DEC();
    if (v7 != v8)
    {
      sub_100047F1C();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_100047DDC();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v6 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v6;
  if (v10)
  {
    v11 = sub_100012E2C(&qword_1000D1E98);
    v12 = (char *)sub_100026B2C(v11, 16 * v10 + 32);
    j__malloc_size(v12);
    sub_100047F34();
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = v13;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || &v15[16 * v9] <= v14)
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v9);
  }
  sub_1000183D0();
  sub_100018388();
}

void sub_100046A9C(uint64_t a1)
{
  sub_1000469D0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_100046AB0()
{
  sub_10000FE08();
}

void sub_100046AD4()
{
  sub_10000FE08();
}

void sub_100046AF8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100046B14(a1, a2, a3, a4, &qword_1000D1EF0, (void (*)(uint64_t, uint64_t, _QWORD *))sub_100065BFC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_100065ED8);
}

void sub_100046B14(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, _QWORD *), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  if ((a3 & 1) != 0)
  {
    sub_100047DEC();
    if (v12 != v13)
    {
      sub_100047F1C();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_100047DDC();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    v16 = sub_100012E2C(a5);
    v17 = (_QWORD *)sub_100026B2C(v16, 16 * v15 + 32);
    j__malloc_size(v17);
    sub_100047F34();
    v17[2] = v14;
    v17[3] = v18;
  }
  else
  {
    v17 = _swiftEmptyArrayStorage;
  }
  v19 = v17 + 4;
  v20 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    a6(v20, v14, v19);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a7(v20, v14, v19);
  }
  sub_100042AE0();
}

void sub_100046BE0()
{
  sub_10000FE08();
}

void sub_100046C04(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    sub_100047DEC();
    if (v7 != v8)
    {
      sub_100047F1C();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_100047DDC();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    v11 = sub_100012E2C(&qword_1000D1F20);
    v12 = (char *)sub_100026B2C(v11, 8 * v10 + 32);
    j__malloc_size(v12);
    sub_100047F34();
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = v13;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_100065C6C(v14, v9, v12 + 32);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100065F84((uint64_t)v14, v9);
  }
  sub_100042AE0();
  sub_100018388();
}

void sub_100046CBC()
{
  sub_10000FE08();
}

void sub_100046CE0()
{
  sub_10000FE08();
}

uint64_t sub_100046D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v7 < 0)
    v21 = v7;
  else
    v21 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v7);
LABEL_4:
  if (v9 < v5)
  {
    __break(1u);
    goto LABEL_35;
  }
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_37:
  if (v7 < 0)
    v22 = v7;
  else
    v22 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v7);
LABEL_9:
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
  {
    __break(1u);
LABEL_42:
    if (v7 < 0)
      v23 = v7;
    else
      v23 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v7);
    goto LABEL_17;
  }
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_42;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  v16 = sub_100003B2C(0, (unint64_t *)&unk_1000D30E0, UIBarButtonItem_ptr);
  result = swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(result, v18);
  }
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v24 = v7;
    else
      v24 = v13;
    swift_bridgeObjectRetain(v7);
    v19 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v19 = *(_QWORD *)(v13 + 16);
  }
  if (__OFSUB__(v19, v5))
  {
    __break(1u);
  }
  else
  {
    result = sub_100065BF8(v13 + 32 + 8 * v5, v19 - v5, v15 + 1);
    if (!((unint64_t)v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      goto LABEL_26;
    }
  }
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v13;
  swift_bridgeObjectRetain(v7);
  v20 = _CocoaArrayWrapper.endIndex.getter(v25);
  result = swift_bridgeObjectRelease(v7);
LABEL_26:
  if (!__OFADD__(v20, v8))
  {
    *(_QWORD *)(v13 + 16) = v20 + v8;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_100046F70(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, "indexPathsForSelectedItems");

  if (!v2)
    return 0;
  v3 = type metadata accessor for IndexPath(0);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

double sub_100046FD4(uint64_t a1, void *a2)
{
  Class isa;
  double v5;
  double v6;

  type metadata accessor for Key(0);
  sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, "sizeWithAttributes:", isa);
  v6 = v5;

  return v6;
}

void sub_10004707C()
{
  sub_1000470E0();
}

void sub_100047088(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  Class isa;
  id v11;

  sub_100047E90(a1, (unint64_t *)&unk_1000D30E0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v1 = sub_100047F0C();
  sub_100047E98(v1, v2, v3, v4, v5, v6, v7, v8, v9, (uint64_t)isa);
  sub_100047D38(v11);
}

void sub_1000470E0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  NSString v9;
  id v10;

  v9 = String._bridgeToObjectiveC()();
  v0 = sub_100047F0C();
  sub_100047E98(v0, v1, v2, v3, v4, v5, v6, v7, v8, (uint64_t)v9);
  sub_100047D38(v10);
}

uint64_t sub_10004711C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100047140(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for Key(0);
  sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, "setTitleTextAttributes:", isa);

}

uint64_t sub_1000471D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

UIMenu sub_1000471F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100044128(a1, *(_QWORD *)(v1 + 16));
}

void sub_1000471FC(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa;

  type metadata accessor for Key(0);
  sub_1000040A8(&qword_1000D0B00, (uint64_t (*)(uint64_t))type metadata accessor for Key);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a3, "setTitleTextAttributes:forState:", isa, a2);

}

uint64_t sub_10004729C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000472C0(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))sub_100065E24, &qword_1000D1F10, &qword_1000D1F08, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100047498);
}

uint64_t sub_1000472C0(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  _BYTE v25[32];

  v13 = result;
  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    sub_100047E50();
    v15 = sub_100047EC8();
    result = sub_1000183D0();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      if (a3 < 0)
        v16 = a3;
      else
        v16 = a3 & 0xFFFFFFFFFFFFFF8;
      sub_100047E50();
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      result = sub_1000183D0();
      if (v17 <= a2)
      {
        if (v15 >= 1)
        {
          sub_100004038(a5, a6);
          v19 = v18;
          sub_100047E50();
          for (i = 0; i != v15; ++i)
          {
            v21 = sub_100012E2C(a6);
            v22 = (void (*)(_BYTE *, _QWORD))a7(v25, i, a3, v21, v19);
            v24 = *v23;
            v22(v25, 0);
            *(_QWORD *)(v13 + 8 * i) = v24;
          }
          sub_1000183D0();
          return a3;
        }
        goto LABEL_19;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100047440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000472C0(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))sub_100065F64, &qword_1000D1EE8, &qword_1000D1EE0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100047498);
}

void sub_100047464()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_100047D88();
  v2 = sub_100047DC8((uint64_t)v1);
  sub_1000474F4(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_100018388();
}

void sub_100047498()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_100047D88();
  v2 = sub_100047DC8((uint64_t)v1);
  sub_10004753C(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_100018388();
}

void sub_1000474C8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_1000474F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_100047D5C(a1, a2);
  sub_1000660CC(v4, v5, v6);
  if (v3)
    v7 = sub_100047E38();
  else
    v7 = (uint64_t)sub_100047E44();
  *v2 = v7;
  sub_100018388();
}

void _s10DataSourceC13TopHitWrapperVwxx(id *a1)
{

}

void sub_10004753C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_100047D5C(a1, a2);
  sub_1000660CC(v4, v5, v6);
  if (v3)
    v7 = sub_100047E38();
  else
    v7 = (uint64_t)sub_100047E44();
  *v2 = v7;
  sub_100018388();
}

uint64_t sub_10004757C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D10F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000475C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000475E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10004760C(uint64_t a1)
{
  uint64_t v1;

  sub_100043DD4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100047618()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100047644(uint64_t a1)
{
  uint64_t v1;

  sub_100043D74(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10004764C(uint64_t a1)
{
  uint64_t v1;

  sub_100043D24(a1, v1, (SEL *)&selRef_duplicateSelected);
}

void sub_10004766C(uint64_t a1)
{
  uint64_t v1;

  sub_100043D24(a1, v1, (SEL *)&selRef_moveSelected);
}

uint64_t sub_10004768C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

id sub_1000476A8()
{
  uint64_t v0;

  return sub_100047D30(*(id *)(v0 + 16), "setEditing:animated:", 0);
}

uint64_t sub_1000476BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000476F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1000D1ED4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100047768;
  return sub_100044C24(a1, v4, v5, v7, v6);
}

uint64_t sub_100047768()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1000477B0(void *a1)
{
  uint64_t v1;

  sub_100045084(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000477B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000477DC()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + 16) == 1)
    return sub_100047D30(*(id *)(v0 + 24), "setEditing:animated:", 0);
  return result;
}

uint64_t sub_100047800(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t *sub_100047814(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[5];

  v4 = a4;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v8 = a4;
    else
      v8 = a4 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
    v11 = sub_10002CF30();
    result = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    v4 = v36[0];
    v12 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
  }
  else
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(a4 + 32);
    v12 = a4 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(a4 + 56);
  }
  v32 = v7;
  if (!a2)
  {
    v19 = 0;
LABEL_50:
    *v32 = v4;
    v32[1] = v12;
    v32[2] = v13;
    v32[3] = v14;
    v32[4] = v15;
    return (uint64_t *)v19;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_50;
  }
  if (a3 < 0)
    goto LABEL_52;
  v19 = 0;
  v33 = (unint64_t)(v13 + 64) >> 6;
  v31 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      v22 = v12;
      v23 = __CocoaSet.Iterator.next()(result);
      if (!v23)
        goto LABEL_49;
      v24 = v23;
      v34 = v23;
      v25 = sub_100003B2C(0, &qword_1000D3180, WFAction_ptr);
      swift_unknownObjectRetain(v24);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v25, 7);
      v26 = v35;
      result = (uint64_t *)swift_unknownObjectRelease(v24);
      v12 = v22;
      if (!v26)
        goto LABEL_49;
      goto LABEL_31;
    }
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_30;
    }
    v27 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v27 >= v33)
    {
      v15 = 0;
      goto LABEL_49;
    }
    v28 = *(_QWORD *)(v12 + 8 * v27);
    if (v28)
      goto LABEL_29;
    v29 = v14 + 2;
    if (v14 + 2 >= v33)
    {
      v15 = 0;
      ++v14;
      goto LABEL_49;
    }
    v28 = *(_QWORD *)(v12 + 8 * v29);
    if (!v28)
    {
      if (v14 + 3 >= v33)
        goto LABEL_46;
      v28 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v28)
      {
        v27 = v14 + 3;
        goto LABEL_29;
      }
      v29 = v14 + 4;
      if (v14 + 4 >= v33)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_49;
      }
      v28 = *(_QWORD *)(v12 + 8 * v29);
      if (!v28)
      {
        v27 = v14 + 5;
        if (v14 + 5 >= v33)
        {
LABEL_46:
          v15 = 0;
          v14 = v29;
          goto LABEL_49;
        }
        v28 = *(_QWORD *)(v12 + 8 * v27);
        if (!v28)
        {
          v30 = v14 + 6;
          while (v30 < v33)
          {
            v28 = *(_QWORD *)(v12 + 8 * v30++);
            if (v28)
            {
              v27 = v30 - 1;
              goto LABEL_29;
            }
          }
          v15 = 0;
          v14 = v33 - 1;
          goto LABEL_49;
        }
        goto LABEL_29;
      }
    }
    v27 = v29;
LABEL_29:
    v15 = (v28 - 1) & v28;
    v21 = __clz(__rbit64(v28)) + (v27 << 6);
    v14 = v27;
LABEL_30:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v21);
    v26 = result;
    if (!result)
      goto LABEL_49;
LABEL_31:
    ++v19;
    *a2++ = v26;
    if (v19 == a3)
    {
      v19 = a3;
LABEL_49:
      v13 = v31;
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

_QWORD *sub_100047B18(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

id sub_100047D30(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 1);
}

void sub_100047D38(id a1)
{

}

uint64_t sub_100047D5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100047D78(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, *(_QWORD *)(v1 - 280));
}

void *sub_100047D88()
{
  return malloc(0x28uLL);
}

NSString sub_100047D9C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100047DBC()
{
  uint64_t v0;
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t sub_100047DC8(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_100047E10()
{
  return sub_100012A90();
}

uint64_t sub_100047E18()
{
  return type metadata accessor for LibraryDataSource(0);
}

uint64_t sub_100047E24()
{
  uint64_t v0;

  return sub_100046D04(0, 0, v0);
}

uint64_t sub_100047E38()
{
  uint64_t v0;
  uint64_t v1;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v0);
}

id sub_100047E44()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t sub_100047E50()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_100047E58()
{
  sub_10000C98C();
}

id sub_100047E60(id a1, SEL a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  return objc_msgSend(a1, a2, v3, v4, v5, v2);
}

uint64_t sub_100047E80()
{
  uint64_t v0;

  if (v0 < 0)
    return _CocoaArrayWrapper.endIndex.getter(v0);
  else
    return _CocoaArrayWrapper.endIndex.getter(v0 & 0xFFFFFFFFFFFFFF8);
}

uint64_t sub_100047E90(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  return sub_100003B2C(0, a2, a3);
}

id sub_100047E98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  SEL *v10;
  void *v11;

  return objc_msgSend(v11, *v10, a10);
}

uint64_t sub_100047EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0);
}

uint64_t sub_100047EB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100047EC8()
{
  uint64_t v0;

  return _CocoaArrayWrapper.endIndex.getter(v0);
}

uint64_t sub_100047ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0);
}

id sub_100047EE0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1464));
}

void sub_100047EEC()
{
  void *v0;

}

uint64_t sub_100047EF4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_100047F00()
{
  return 0;
}

uint64_t sub_100047F0C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100047F14()
{
  return type metadata accessor for LibraryConfiguration(0);
}

uint64_t sub_100047F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100015D74(a1, a2, 1, v2);
}

void sub_100047F40(char a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v1;
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v5);
  sub_100018548();
  v46 = v6;
  v7 = type metadata accessor for ShortcutsLibraryItem(0);
  v47 = *(_QWORD *)(v7 - 8);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018548();
  v45 = v9;
  v10 = type metadata accessor for RunningWorkflow.WorkflowType(0);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  sub_100018044();
  __chkstk_darwin(v11);
  sub_100018548();
  v48 = v12;
  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v13);
  v14 = sub_1000487C4();
  v52 = *(_QWORD *)(v14 - 8);
  sub_100018044();
  __chkstk_darwin(v15);
  sub_100018548();
  v51 = v16;
  if (objc_msgSend(v1, "isEditing"))
    objc_msgSend(v1, "setEditing:animated:", 0, 1);
  sub_100010914();
  sub_10000C98C();
  v18 = v17;
  v19 = objc_msgSend(v17, "visibleCells");

  v20 = sub_100003B2C(0, &qword_1000D0AB0, UICollectionViewCell_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v44 = v21;
    else
      v44 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v21);
    if (!v22)
      goto LABEL_13;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v22)
      goto LABEL_13;
  }
  if (v22 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v22; ++i)
  {
    if ((v21 & 0xC000000000000001) != 0)
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
    else
      v24 = *(id *)(v21 + 8 * i + 32);
    v25 = v24;
    v26 = type metadata accessor for LibraryCell();
    v27 = swift_dynamicCastClass(v25, v26);
    if (v27)
      sub_1000483A0(v27, a1 & 1, 0, 1);

  }
LABEL_13:
  swift_bridgeObjectRelease(v21);
  v28 = &v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate]);
  if (!Strong)
  {
    sub_100015D74(v2, 1, 1, v14);
    goto LABEL_19;
  }
  v30 = *((_QWORD *)v28 + 1);
  ObjectType = swift_getObjectType(Strong);
  dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v30);
  sub_100027130();
  if (sub_100019D44(v2, 1, v14) == 1)
  {
LABEL_19:
    v36 = (uint64_t *)&unk_1000D30D0;
    goto LABEL_20;
  }
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v2, v14);
  RunningWorkflow.workflowType.getter(v32);
  if ((*(unsigned int (**)(void **, uint64_t))(v49 + 88))(v48, v50) == enum case for RunningWorkflow.WorkflowType.reference(_:))
  {
    (*(void (**)(void **, uint64_t))(v49 + 96))(v48, v50);
    v33 = *v48;
    sub_100012A90();
    v35 = v34;
    v2 = v46;
    dispatch thunk of LibraryDataSource.libraryItem(for:)(v33);
    swift_release(v35);
    if (sub_100019D44(v46, 1, v7) == 1)
    {
      sub_100048800();

      v36 = &qword_1000D3670;
LABEL_20:
      sub_10000D778(v2, v36);
      return;
    }
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v45, v46, v7);
    v38 = ShortcutsLibraryItem.nameIconViewModel.getter(v37);
    v39 = type metadata accessor for NameIconView.Model(0);
    v40 = sub_100048784();
    v41 = ObservableObject<>.objectWillChange.getter(v39, v40);
    ObservableObjectPublisher.send()();
    v42 = swift_release(v41);
    v43 = dispatch thunk of NameIconView.Model.progress.getter(v42);
    RunningWorkflow.progress.getter();
    dispatch thunk of ShortcutChiclet.Progress.apply(value:cancelled:)(a1 & 1);
    swift_release(v38);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v7);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v14);
  }
  else
  {
    sub_100048800();
    (*(void (**)(void **, uint64_t))(v49 + 8))(v48, v50);
  }
}

uint64_t sub_1000483A0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100019D7C();
  v11 = v10 - v9;
  if ((sub_100012FF4(a1) & 1) != 0)
  {
    v12 = v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    if (Strong)
    {
      v14 = *(_QWORD *)(v12 + 8);
      ObjectType = swift_getObjectType(Strong);
      dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v14);
      sub_100027130();
      v16 = type metadata accessor for RunningWorkflow(0);
      if (sub_100019D44(v11, 1, v16) == 1)
      {
        sub_10000D778(v11, (uint64_t *)&unk_1000D30D0);
      }
      else
      {
        v20 = (void *)RunningWorkflow.runViewSource.getter();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v11, v16);
        if (v20)
        {
          objc_msgSend(v20, "updateSourceView:", a1);

        }
      }
    }
    sub_100013568(1, a4 & 1);
    sub_100048540();
    v19 = a2 & 1;
  }
  else
  {
    v17 = sub_100048540();
    v18 = v17 >= 1.0 || v17 < 0.0;
    sub_100013568(v18, a4 & 1);
    type metadata accessor for ShortcutChiclet.Progress(0);
    static ShortcutChiclet.Progress.noProgress.getter();
    v19 = 0;
  }
  return dispatch thunk of ShortcutChiclet.Progress.apply(value:cancelled:)(v19);
}

double sub_100048540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v1 = sub_100012E2C((uint64_t *)&unk_1000D30D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(Strong);
    dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v9 = type metadata accessor for RunningWorkflow(0);
    if (sub_100019D44((uint64_t)v3, 1, v9) != 1)
    {
      v10 = RunningWorkflow.progress.getter();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v3, v9);
      return v10;
    }
    sub_10000D778((uint64_t)v3, (uint64_t *)&unk_1000D30D0);
  }
  type metadata accessor for ShortcutChiclet.Progress(0);
  return static ShortcutChiclet.Progress.noProgress.getter();
}

uint64_t sub_100048650(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t ObjectType;
  id v14;
  char v15;

  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v4);
  v5 = sub_1000487C4();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100019D7C();
  v9 = v8 - v7;
  v10 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (!Strong)
  {
    sub_1000181B8(v2);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v10 + 8);
  ObjectType = swift_getObjectType(Strong);
  dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v12);
  sub_100027130();
  if (sub_100019D44(v2, 1, v5) == 1)
  {
LABEL_6:
    sub_10000D778(v2, (uint64_t *)&unk_1000D30D0);
LABEL_7:
    v15 = 0;
    return v15 & 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v2, v5);
  if (!a1)
  {
    sub_1000487F0();
    goto LABEL_7;
  }
  v14 = a1;
  v15 = RunningWorkflow.matchesReference(_:)();

  sub_1000487F0();
  return v15 & 1;
}

unint64_t sub_100048784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1F28;
  if (!qword_1000D1F28)
  {
    v1 = type metadata accessor for NameIconView.Model(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NameIconView.Model, v1);
    atomic_store(result, (unint64_t *)&qword_1000D1F28);
  }
  return result;
}

uint64_t sub_1000487C4()
{
  return type metadata accessor for RunningWorkflow(0);
}

uint64_t sub_1000487E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1000487F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100048800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_100048810()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  _OWORD v25[2];
  _OWORD v26[2];

  v1 = type metadata accessor for Date(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)v25 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)v25 - v8;
  if (objc_msgSend((id)objc_opt_self(WFCloudKitSyncSession), "isSyncEnabled"))
  {
    v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "syncShortcutsUserDefaults");
    v11 = objc_msgSend(v10, "BOOLForKey:", WFCloudKitLibraryFetchedKey);

    if (v11)
    {
      v12 = objc_msgSend(v0, "traitCollection");
      v13 = objc_msgSend(v12, "horizontalSizeClass");

      if (v13 != (id)2)
      {
        v14 = sub_100049F50();
        v15 = WFSyncUnavailableMessageDismissedByUserKey;
        v16 = objc_msgSend(v14, "BOOLForKey:");

        if (v16)
        {
          v17 = sub_100049F50();
          v18 = objc_msgSend(v17, "integerForKey:", WFSyncUnavailableMessageCountKey);

          if (v18 == (id)1)
          {
            v19 = sub_100049F50();
            v20 = objc_msgSend(v19, "objectForKey:", WFSyncUnavailableMessageDateKey);

            if (v20)
            {
              _bridgeAnyObjectToAny(_:)(v25, v20);
              swift_unknownObjectRelease(v20);
              sub_10000ECAC(v25, v26);
              v21 = swift_dynamicCast(v9, v26, (char *)&type metadata for Any + 8, v1, 7);
              v22 = Date.init()(v21);
              Date.addingTimeInterval(_:)(v22, 1209600.0);
              v23 = static Date.> infix(_:_:)(v7, v4);
              sub_100049F70((uint64_t)v4);
              sub_100049F70((uint64_t)v7);
              if ((v23 & 1) != 0)
              {
                v24 = sub_100049F50();
                objc_msgSend(v24, "setBool:forKey:", 0, v15);

              }
              sub_100049F70((uint64_t)v9);
            }
            else
            {
              __break(1u);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100048AD8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = _s35SyncUnavailableCollectionHeaderViewCMa();
  v0 = sub_100012E2C(&qword_1000D1F68);
  result = String.init<A>(describing:)(&v3, v0);
  qword_1000DB0A0 = result;
  *(_QWORD *)algn_1000DB0A8 = v2;
  return result;
}

void sub_100048B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_100026BF0();
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "syncShortcutsUserDefaults");
  v4 = WFSyncUnavailableMessageCountKey;
  v5 = (char *)objc_msgSend(v3, "integerForKey:", WFSyncUnavailableMessageCountKey);

  v6 = sub_100049F5C();
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = v6;
    objc_msgSend(v6, "setInteger:forKey:", v5 + 1, v4);

    v8 = sub_100049F5C();
    Date.init()(v8);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    objc_msgSend(v8, "setObject:forKey:", isa, WFSyncUnavailableMessageDateKey);

    v10 = sub_100049F5C();
    objc_msgSend(v10, "setBool:forKey:", 1, WFSyncUnavailableMessageDismissedByUserKey);

    sub_100012A90();
    v12 = v11;
    sub_10000C9A0();
    swift_release(v12);
    sub_100018094();
  }
}

void sub_100048C94()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)sub_100049F68();
  objc_msgSendSuper2(&v4, "prepareForReuse");
  v1 = OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView];
  if (v2)
  {
    objc_msgSend(v2, "removeFromSuperview");
    v3 = *(void **)&v0[v1];
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)&v0[v1] = 0;

}

id sub_100048D30(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *v9;
  objc_super v11;

  v9 = (objc_class *)sub_100049F68();
  *(_QWORD *)&v4[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_layoutConstraints] = _swiftEmptyArrayStorage;
  v11.receiver = v4;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100048DD0(void *a1)
{
  char *v1;
  objc_class *v3;
  id v4;
  objc_super v6;

  v3 = (objc_class *)sub_100049F68();
  *(_QWORD *)&v1[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_layoutConstraints] = _swiftEmptyArrayStorage;
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_100048E60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100049F68();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s35SyncUnavailableCollectionHeaderViewCMa()
{
  return objc_opt_self(_TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView);
}

void sub_100048EE8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;

  v43 = type metadata accessor for RoundedRectangle(0);
  sub_100018034();
  __chkstk_darwin(v5);
  sub_100019D7C();
  v8 = (_OWORD *)(v7 - v6);
  v9 = sub_100012E2C(&qword_1000D1F70);
  sub_100018034();
  __chkstk_darwin(v10);
  sub_100019D7C();
  v13 = v12 - v11;
  sub_100012E2C(&qword_1000D1F78);
  sub_100018034();
  __chkstk_darwin(v14);
  sub_100019D7C();
  v17 = v16 - v15;
  v18 = sub_100012E2C(&qword_1000D1F80);
  sub_100018034();
  __chkstk_darwin(v19);
  sub_100026BF0();
  sub_100012E2C(&qword_1000D1F88);
  sub_100018034();
  __chkstk_darwin(v20);
  sub_100019D7C();
  v23 = v22 - v21;
  *(_QWORD *)v17 = static HorizontalAlignment.leading.getter();
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  v24 = sub_100012E2C(&qword_1000D1F90);
  sub_1000491A0(a1, a2, v17 + *(int *)(v24 + 44));
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_100049D84(v17, v3, &qword_1000D1F78);
  v25 = v3 + *(int *)(v18 + 36);
  *(_BYTE *)v25 = a1;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_BYTE *)(v25 + 40) = 1;
  sub_10001222C(v17, &qword_1000D1F78);
  v26 = static Alignment.leading.getter();
  sub_10007D13C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v23, 0.0, 1, 0.0, 1, v26, v27);
  sub_10001222C(v3, &qword_1000D1F80);
  v28 = (char *)v8 + *(int *)(v43 + 20);
  v29 = enum case for RoundedCornerStyle.continuous(_:);
  v30 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #15.0 }
  *v8 = _Q0;
  sub_100049C0C((uint64_t)v8, v13);
  *(_QWORD *)(v13 + *(int *)(v9 + 52)) = 1;
  *(_WORD *)(v13 + *(int *)(v9 + 56)) = 256;
  v36 = sub_100049C50((uint64_t)v8);
  v37 = static Alignment.center.getter(v36);
  v39 = v38;
  v40 = a3 + *(int *)(sub_100012E2C(&qword_1000D1F98) + 36);
  sub_100049D84(v13, v40, &qword_1000D1F70);
  v41 = (uint64_t *)(v40 + *(int *)(sub_100012E2C(&qword_1000D1FA0) + 36));
  *v41 = v37;
  v41[1] = v39;
  sub_100049D84(v23, a3, &qword_1000D1F88);
  sub_10001222C(v13, &qword_1000D1F70);
  sub_10001222C(v23, &qword_1000D1F88);
  sub_100018094();
}

void sub_1000491A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];

  v63 = a3;
  v5 = sub_100012E2C(&qword_1000D1FA8);
  __chkstk_darwin(v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E2C(&qword_1000D1FB0);
  v9 = __chkstk_darwin(v8);
  v62 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v62 - v12;
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v11);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v14 = sub_100012E2C(&qword_1000D1FB8);
  sub_10004958C(a1, a2, (uint64_t)&v13[*(int *)(v14 + 44)]);
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100011544(v15);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = sub_100012E2C(&qword_1000D11C8);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100096E80;
  v23 = objc_msgSend((id)objc_opt_self(WFDevice), "currentDevice");
  sub_1000796A0(v23);
  v25 = v24;
  v27 = v26;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10002676C();
  v28 = 5459817;
  if (v27)
    v28 = v25;
  v29 = 0xE300000000000000;
  if (v27)
    v29 = v27;
  *(_QWORD *)(v22 + 32) = v28;
  *(_QWORD *)(v22 + 40) = v29;
  v30 = static String.localizedStringWithFormat(_:_:)(v18, v20, v22);
  v32 = v31;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v22);
  v64[0] = v30;
  v64[1] = v32;
  v33 = sub_100014C08();
  v34 = Text.init<A>(_:)(v64, &type metadata for String, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39 & 1;
  v41 = type metadata accessor for Font.Design(0);
  sub_100015D74((uint64_t)v7, 1, 1, v41);
  v42 = static Font.system(size:weight:design:)(0, 1, v7, 16.0);
  sub_10001222C((uint64_t)v7, &qword_1000D1FA8);
  v43 = Text.font(_:)(v42, v34, v36, v40, v38);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  swift_release(v42);
  LOBYTE(v42) = v47 & 1;
  sub_1000085A4(v34, v36, v40);
  v50 = swift_bridgeObjectRelease(v38);
  LODWORD(v64[0]) = static HierarchicalShapeStyle.secondary.getter(v50);
  v51 = Text.foregroundStyle<A>(_:)(v64, v43, v45, v47 & 1, v49, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v53 = v52;
  v55 = v54;
  LOBYTE(v34) = v56 & 1;
  sub_1000085A4(v43, v45, v42);
  swift_bridgeObjectRelease(v49);
  v57 = v62;
  sub_100049D84((uint64_t)v13, v62, &qword_1000D1FB0);
  v58 = v63;
  sub_100049D84(v57, v63, &qword_1000D1FB0);
  v59 = sub_100012E2C(&qword_1000D1FC0);
  v60 = v58 + *(int *)(v59 + 48);
  *(_QWORD *)v60 = 0;
  *(_BYTE *)(v60 + 8) = 1;
  v61 = v58 + *(int *)(v59 + 64);
  *(_QWORD *)v61 = v51;
  *(_QWORD *)(v61 + 8) = v53;
  *(_BYTE *)(v61 + 16) = v34;
  *(_QWORD *)(v61 + 24) = v55;
  sub_100015610(v51, v53, v34);
  swift_bridgeObjectRetain(v55);
  sub_10001222C((uint64_t)v13, &qword_1000D1FB0);
  sub_1000085A4(v51, v53, v34);
  swift_bridgeObjectRelease(v55);
  sub_10001222C(v57, &qword_1000D1FB0);
}

uint64_t sub_10004958C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];

  v51 = a2;
  v49 = a1;
  v4 = sub_100012E2C(&qword_1000D1FC8);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v50 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100012E2C(&qword_1000D1FD0);
  v6 = __chkstk_darwin(v53);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v52 = (uint64_t)&v47 - v9;
  v10 = sub_100012E2C(&qword_1000D1FA8);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100011544(v13);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v56[0] = v16;
  v56[1] = v18;
  v19 = sub_100014C08();
  v20 = Text.init<A>(_:)(v56, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = static Font.Weight.semibold.getter();
  v28 = type metadata accessor for Font.Design(0);
  sub_100015D74(v12, 1, 1, v28);
  v29 = static Font.system(size:weight:design:)(*(_QWORD *)&v27, 0, v12, 16.0);
  sub_10001222C(v12, &qword_1000D1FA8);
  v30 = Text.font(_:)(v29, v20, v22, v26, v24);
  v32 = v31;
  LOBYTE(v12) = v33;
  v48 = v34;
  swift_release(v29);
  LOBYTE(v12) = v12 & 1;
  sub_1000085A4(v20, v22, v26);
  swift_bridgeObjectRelease(v24);
  v35 = swift_allocObject(&unk_1000C1FE0, 32, 7);
  v36 = v49;
  v37 = v51;
  *(_QWORD *)(v35 + 16) = v49;
  *(_QWORD *)(v35 + 24) = v37;
  swift_unknownObjectRetain(v36);
  v38 = sub_100012E2C(&qword_1000D1FD8);
  v39 = sub_100049CB8();
  v40 = v50;
  Button.init(action:label:)(sub_100049CB0, v35, sub_100049958, 0, v38, v39);
  v42 = v54;
  v41 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v8, v40, v55);
  *(_OWORD *)&v8[*(int *)(v53 + 36)] = xmmword_100099950;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
  v43 = v52;
  sub_100049D3C((uint64_t)v8, v52);
  sub_100049D84(v43, (uint64_t)v8, &qword_1000D1FD0);
  *(_QWORD *)a3 = v30;
  *(_QWORD *)(a3 + 8) = v32;
  *(_BYTE *)(a3 + 16) = v12;
  v44 = v48;
  *(_QWORD *)(a3 + 24) = v48;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v45 = sub_100012E2C(&qword_1000D2008);
  sub_100049D84((uint64_t)v8, a3 + *(int *)(v45 + 64), &qword_1000D1FD0);
  sub_100015610(v30, v32, v12);
  swift_bridgeObjectRetain(v44);
  sub_10001222C(v43, &qword_1000D1FD0);
  sub_10001222C((uint64_t)v8, &qword_1000D1FD0);
  sub_1000085A4(v30, v32, v12);
  return swift_bridgeObjectRelease(v44);
}

void sub_100049934(uint64_t a1)
{
  if (a1)
    sub_100048B1C();
}

uint64_t sub_100049958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  id v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = sub_100012E2C(&qword_1000D1FA8);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v6 = static Font.Weight.semibold.getter();
  v7 = type metadata accessor for Font.Design(0);
  sub_100015D74((uint64_t)v4, 1, 1, v7);
  v8 = static Font.system(size:weight:design:)(*(_QWORD *)&v6, 0, v4, 16.0);
  sub_10001222C((uint64_t)v4, &qword_1000D1FA8);
  KeyPath = swift_getKeyPath(&unk_100099A30);
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
  v11 = Color.init(uiColor:)(v10);
  result = swift_getKeyPath(&unk_100099A60);
  *a1 = v5;
  a1[1] = KeyPath;
  a1[2] = v8;
  a1[3] = result;
  a1[4] = v11;
  return result;
}

uint64_t sub_100049A78()
{
  return static View._viewListCount(inputs:)();
}

void sub_100049A90(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_100048EE8(*v1, v1[1], a1);
}

__int128 *_s26SyncUnavailableHostingViewVwCP(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t _s26SyncUnavailableHostingViewVwxx(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *_s26SyncUnavailableHostingViewVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *_s26SyncUnavailableHostingViewVwta(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

uint64_t _s26SyncUnavailableHostingViewVwet(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s26SyncUnavailableHostingViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s26SyncUnavailableHostingViewVMa()
{
  return &_s26SyncUnavailableHostingViewVN;
}

uint64_t sub_100049BFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000A6DD0, 1);
}

uint64_t sub_100049C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049C50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100049C8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100049CB0()
{
  uint64_t v0;

  sub_100049934(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100049CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D1FE0;
  if (!qword_1000D1FE0)
  {
    v1 = sub_1000143E4(&qword_1000D1FD8);
    sub_10001579C();
    sub_10000406C(&qword_1000D1FF8, &qword_1000D2000, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D1FE0);
  }
  return result;
}

uint64_t sub_100049D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D1FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100049D84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100012E2C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_100018188();
}

unint64_t sub_100049DD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2010;
  if (!qword_1000D2010)
  {
    v1 = sub_1000143E4(&qword_1000D1F98);
    sub_100049E5C();
    sub_10000406C(&qword_1000D2030, &qword_1000D1FA0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2010);
  }
  return result;
}

unint64_t sub_100049E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2018;
  if (!qword_1000D2018)
  {
    v1 = sub_1000143E4(&qword_1000D1F88);
    sub_100049EC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2018);
  }
  return result;
}

unint64_t sub_100049EC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2020;
  if (!qword_1000D2020)
  {
    v1 = sub_1000143E4(&qword_1000D1F80);
    sub_10000406C(&qword_1000D2028, &qword_1000D1F78, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2020);
  }
  return result;
}

id sub_100049F50()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3752));
}

id sub_100049F5C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3752));
}

uint64_t sub_100049F68()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_100049F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_100049F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;

  v5 = type metadata accessor for ShortcutsLibraryItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v31 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v7);
  v11 = (char *)v26 - v10;
  v12 = _swiftEmptyArrayStorage;
  v33 = _swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v26[1] = v2;
    v27 = v5;
    v13 = 0;
    v28 = a2;
    v29 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v32 = *(_QWORD *)(v6 + 72);
      v15 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, a1 + v14 + v32 * v13, v5);
      v16 = ShortcutsLibraryItem.id.getter(v15);
      v18 = v17;
      v19 = a2;
      sub_100043088(v16, v17, a2);
      v20 = v5;
      v22 = v21;
      swift_bridgeObjectRelease(v18);
      if ((v22 & 1) != 0)
      {
        v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v23(v31, v11, v20);
        v24 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
        {
          sub_10003EA68();
          v24 = v33;
        }
        v25 = v24[2];
        if (v25 >= v24[3] >> 1)
        {
          sub_10003EA68();
          v24 = v33;
        }
        v24[2] = v25 + 1;
        v5 = v27;
        result = ((uint64_t (*)(char *, char *, uint64_t))v23)((char *)v24 + v14 + v25 * v32, v31, v27);
        v33 = v24;
        a2 = v28;
        a1 = v29;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v20);
        v5 = v20;
        a2 = v19;
      }
      if (v30 == ++v13)
      {
        v12 = v33;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a1);
    return (uint64_t)v12;
  }
  return result;
}

void sub_10004A18C(unint64_t a1, NSObject *a2, _QWORD *a3, void *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  NSObject *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v40;

  v6 = a1;
  if (a1 >> 62)
    goto LABEL_13;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v31))
  {
    v35 = v6 & 0xC000000000000001;
    v8 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8);
    v9 = 4;
    v33 = v7;
    v34 = v6;
    while (1)
    {
      v10 = v35 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6) : *(id *)(v6 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      dispatch_group_enter(a2);
      v13 = (_QWORD *)swift_allocObject(&unk_1000C2370, 40, 7);
      v13[2] = a2;
      v13[3] = a4;
      v13[4] = a5;
      aBlock[4] = sub_100050318;
      v40 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100050D08;
      aBlock[3] = &unk_1000C2388;
      v14 = _Block_copy(aBlock);
      v15 = v40;
      v16 = a2;
      v17 = a4;
      swift_retain(a5);
      v18 = objc_msgSend(v11, "loadObjectOfClass:completionHandler:", ObjCClassFromMetadata, v14, swift_release(v15).n128_f64[0]);
      _Block_release(v14);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19, v20, v21, v22, v23, v24, v25, v26);
      v28 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v18);
      specialized Array._endMutation()(v29, v30);

      ++v9;
      v6 = v34;
      if (v12 == v33)
      {

        swift_bridgeObjectRelease(v34);
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_13:
    if (v6 < 0)
      v31 = v6;
    else
      v31 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
  }

  swift_bridgeObjectRelease(v6);
LABEL_18:
  swift_release(a5);

}

uint64_t property wrapper backing initializer of LibraryTable.dataSource()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000507EC();
  sub_1000040A8(&qword_1000D2038, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  v0 = sub_1000273A8();
  return ObservedObject.init(wrappedValue:)(v0, v1, v2);
}

uint64_t LibraryTable.dataSource.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

void LibraryTable.dataSource.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  sub_100018188();
}

uint64_t (*LibraryTable.dataSource.modify())()
{
  return static NavigationDestinationEntity.defaultQuery.setter;
}

uint64_t LibraryTable.$dataSource.getter()
{
  uint64_t v0;

  sub_1000507EC();
  sub_1000040A8(&qword_1000D2038, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  v0 = sub_1000273A8();
  return ObservedObject.projectedValue.getter(v0);
}

uint64_t property wrapper backing initializer of LibraryTable.selectedAutoShortcut()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_100012E2C((uint64_t *)&unk_1000D3880);
  sub_1000507A4(v0, v1);
  return v3;
}

uint64_t LibraryTable.init(dataSource:database:libraryDelegate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;

  v10 = a5 + 24;
  *(_QWORD *)(a5 + 32) = 0;
  swift_unknownObjectWeakInit(a5 + 24, 0);
  v11 = sub_100012E2C((uint64_t *)&unk_1000D3880);
  sub_1000507A4(v11, v12);
  *(_OWORD *)(a5 + 40) = v17;
  *(_QWORD *)(a5 + 56) = 0x403A000000000000;
  v13 = sub_1000507EC();
  sub_1000040A8(&qword_1000D2038, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  *(_QWORD *)a5 = ObservedObject.init(wrappedValue:)(a1, v13, v14);
  *(_QWORD *)(a5 + 8) = v15;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 32) = a4;
  swift_unknownObjectWeakAssign(v10, a3);
  return swift_unknownObjectRelease(a3);
}

uint64_t LibraryTable.body.getter@<X0>(void (**a1)(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[8];

  sub_10004B244(v1, v5);
  v3 = swift_allocObject(&unk_1000C2058, 80, 7);
  result = sub_10004B27C((uint64_t)v5, v3 + 16);
  *a1 = sub_10004B2B0;
  a1[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v3;
  return result;
}

void sub_10004A620(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char v143[8];
  _QWORD *v144;
  char v145[8];
  _QWORD *v146;
  __int128 v147;
  void *v148;
  unint64_t v149;
  void *v150;
  uint64_t v151;
  __int128 v152;
  void *v153;

  v138 = a1;
  v141 = a3;
  v136 = type metadata accessor for ScrollViewProxy(0);
  v135 = *(_QWORD *)(v136 - 8);
  v137 = *(_QWORD *)(v135 + 64);
  __chkstk_darwin(v136);
  v134 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for PPTTestCase.Name(0);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v133 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E2C(&qword_1000D2228);
  __chkstk_darwin(v6);
  v126 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100012E2C(&qword_1000D2230);
  v116 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v109 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100012E2C(&qword_1000D2238);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v110 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100012E2C(&qword_1000D2240);
  __chkstk_darwin(v112);
  v111 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100012E2C(&qword_1000D2248);
  v122 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100012E2C(&qword_1000D2250);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v118 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100012E2C(&qword_1000D2258);
  __chkstk_darwin(v121);
  v120 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100012E2C(&qword_1000D2260);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v125 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100012E2C(&qword_1000D2268);
  __chkstk_darwin(v129);
  v127 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100012E2C(&qword_1000D2270);
  __chkstk_darwin(v132);
  v128 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  type metadata accessor for LibraryDataSource(0);
  sub_1000040A8(&qword_1000D2038, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  v19 = v18;
  v20 = ObservedObject.projectedValue.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100099CB0);
  ObservedObject.Wrapper.subscript.getter(&v147, KeyPath, v20, v19);
  swift_release(KeyPath);
  swift_release(v20);
  v107 = *((_QWORD *)&v147 + 1);
  v108 = v147;
  v106 = v148;
  v22 = ObservedObject.projectedValue.getter(*a2);
  v23 = swift_getKeyPath(&unk_100099CE0);
  ObservedObject.Wrapper.subscript.getter(&v152, v23, v22, v19);
  swift_release(v23);
  swift_release(v22);
  v24 = v152;
  v25 = v153;
  v142 = a2;
  v146 = a2;
  v144 = a2;
  v26 = type metadata accessor for ShortcutsLibraryItem(0);
  v27 = sub_100012E2C(&qword_1000D2278);
  v28 = sub_100012E2C(&qword_1000D2280);
  v29 = sub_100012E2C(&qword_1000D2288);
  v30 = sub_10004F8FC();
  sub_100004038(&qword_1000D22A8, &qword_1000D2280);
  v32 = v31;
  sub_100004038(&qword_1000D22B0, &qword_1000D2288);
  v104 = v32;
  v33 = v109;
  Table.init<A>(selection:sortOrder:columns:rows:)(v108, v107, v106, v24, *((_QWORD *)&v24 + 1), v25, sub_10004F8EC, v145, sub_10004F8F4, v143, v26, v27, v28, v29, v30, v104, v34);
  v35 = v142;
  sub_10004B244(v142, &v147);
  v36 = swift_allocObject(&unk_1000C2168, 80, 7);
  sub_10004B27C((uint64_t)&v147, v36 + 16);
  sub_100004038(&qword_1000D22B8, &qword_1000D2230);
  v37 = v110;
  v38 = v113;
  View.contextAction<A>(forSelectionType:action:)(&type metadata for String, sub_10004F97C, v36, v113, &type metadata for String, v39);
  v40 = swift_release(v36);
  (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v33, v38, v40);
  v41 = swift_getKeyPath(&unk_100099D10);
  v42 = v114;
  v43 = (uint64_t)v111;
  v44 = v37;
  v45 = v115;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v37, v115);
  v46 = v112;
  v47 = v43 + *(int *)(v112 + 36);
  *(_QWORD *)v47 = v41;
  *(_QWORD *)(v47 + 8) = 1;
  *(_BYTE *)(v47 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  v48 = v35;
  sub_10004B244(v35, &v147);
  v49 = swift_allocObject(&unk_1000C2190, 80, 7);
  sub_10004B27C((uint64_t)&v147, v49 + 16);
  v50 = type metadata accessor for LibraryMenu(0);
  v51 = sub_10004FA50();
  sub_1000040A8(&qword_1000D22D8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenu);
  v53 = v52;
  v54 = v117;
  v55 = v46;
  View.contextMenu<A, B>(forSelectionType:menu:primaryAction:)(&type metadata for String, sub_10004FA48, v49, 0, 0, v46, &type metadata for String, v50, v51, &protocol witness table for String, v52);
  swift_release(v49);
  sub_10001222C(v43, &qword_1000D2240);
  v152 = *(_OWORD *)(v48 + 5);
  v56 = sub_100012E2C(&qword_1000D22E0);
  State.projectedValue.getter(&v147, v56);
  v57 = v147;
  v58 = v148;
  v152 = v147;
  v153 = v148;
  v59 = sub_100003B2C(0, &qword_1000D1240, WFWorkflow_ptr);
  v60 = type metadata accessor for GalleryShortcutActionsView(0);
  *(_QWORD *)&v147 = v55;
  *((_QWORD *)&v147 + 1) = &type metadata for String;
  v148 = (void *)v50;
  v149 = v51;
  v150 = &protocol witness table for String;
  v151 = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(forSelectionType:menu:primaryAction:)>>, 1);
  v62 = sub_10004FB30();
  sub_1000040A8(&qword_1000D22F0, (uint64_t (*)(uint64_t))&type metadata accessor for GalleryShortcutActionsView);
  v103 = OpaqueTypeConformance2;
  v63 = v118;
  v64 = v119;
  View.sheet<A, B>(item:onDismiss:content:)(&v152, 0, 0, sub_10004D18C, 0, v119, v59, v60, v103, v62, v65);
  swift_release(*((_QWORD *)&v57 + 1));
  swift_release(v57);

  (*(void (**)(char *, uint64_t))(v122 + 8))(v54, v64);
  v66 = swift_getKeyPath(&unk_100099D40);
  v67 = (uint64_t)v126;
  v68 = v142;
  sub_10004D1B4();
  v69 = sub_100012E2C(&qword_1000D22F8);
  sub_100015D74(v67, 0, 1, v69);
  v70 = v121;
  v71 = (uint64_t)v120;
  v72 = (uint64_t *)&v120[*(int *)(v121 + 36)];
  v73 = sub_100012E2C(&qword_1000D2300);
  sub_100026854(v67, (uint64_t)v72 + *(int *)(v73 + 28), &qword_1000D2228);
  *v72 = v66;
  v74 = v123;
  v75 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v123 + 16))(v71, v63, v124);
  sub_10001222C(v67, &qword_1000D2228);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v75);
  v76 = v68;
  v77 = v68[1];
  v78 = swift_retain(v77);
  LOBYTE(v75) = dispatch thunk of LibraryDataSource.isEditing.getter(v78);
  swift_release(v77);
  LOBYTE(v152) = v75 & 1;
  sub_10004B244(v76, &v147);
  v79 = swift_allocObject(&unk_1000C21B8, 80, 7);
  sub_10004B27C((uint64_t)&v147, v79 + 16);
  v80 = sub_10004FB94();
  v81 = v125;
  View.onChange<A>(of:initial:_:)(&v152, 0, sub_10004FB8C, v79, v70, &type metadata for Bool, v80, &protocol witness table for Bool);
  swift_release(v79);
  sub_10001222C(v71, &qword_1000D2258);
  v82 = static Animation.default.getter();
  v83 = v76[1];
  v84 = swift_retain(v83);
  LOBYTE(v76) = dispatch thunk of LibraryDataSource.isEditing.getter(v84);
  v85 = swift_release(v83);
  v86 = v130;
  v87 = (uint64_t)v127;
  v88 = v131;
  (*(void (**)(char *, char *, uint64_t, __n128))(v130 + 16))(v127, v81, v131, v85);
  v89 = v129;
  v90 = v87 + *(int *)(v129 + 36);
  *(_QWORD *)v90 = v82;
  *(_BYTE *)(v90 + 8) = v76 & 1;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v81, v88);
  v91 = sub_10004FD2C();
  v92 = (uint64_t)v128;
  View.accessibilityIdentifier(_:)(0xD000000000000012, 0x800000010009D7D0, v89, v91);
  sub_10001222C(v87, &qword_1000D2268);
  v93 = v133;
  PPTTestCase.Name.init(_:)(0xD00000000000002ALL, 0x800000010009D7F0);
  v94 = v135;
  v95 = v134;
  v96 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v134, v138, v136);
  v97 = *(unsigned __int8 *)(v94 + 80);
  v98 = v94;
  v99 = (v97 + 16) & ~v97;
  v100 = swift_allocObject(&unk_1000C21E0, v99 + v137, v97 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v100 + v99, v95, v96);
  v101 = sub_10004FE28();
  View.onTest(_:handler:)(v93, sub_10004FDF8, v100, v132, v101);
  v102 = swift_release(v100);
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v93, v140, v102);
  sub_10001222C(v92, &qword_1000D2270);
}

_QWORD *sub_10004B244(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for LibraryTable(a2, a1);
  return a2;
}

uint64_t sub_10004B27C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for LibraryTable(a2, a1);
  return a2;
}

void sub_10004B2B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10004A620(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10004B2B8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  return dispatch thunk of LibraryDataSource.selectedWorkflowIds.setter(v1);
}

uint64_t sub_10004B2E0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  return dispatch thunk of LibraryDataSource.sortOrderComparators.setter(v1);
}

uint64_t sub_10004B308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  NSString v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  NSString v49;
  NSString v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[3];

  v75 = a2;
  v77 = sub_100012E2C(&qword_1000D23D0);
  v74 = *(_QWORD *)(v77 - 8);
  v3 = __chkstk_darwin(v77);
  v72 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v73 = (char *)&v66 - v6;
  __chkstk_darwin(v5);
  v78 = (char *)&v66 - v7;
  v8 = sub_100012E2C(&qword_1000D23D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v66 - v14;
  __chkstk_darwin(v13);
  v76 = (char *)&v66 - v16;
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v68 = 0x800000010009D850;
  v19 = String._bridgeToObjectiveC()();
  v20 = sub_100090B54(v17, v18);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v81[0] = v21;
  v81[1] = v23;
  KeyPath = swift_getKeyPath(&unk_100099DA0);
  sub_10004B244(a1, &v79);
  v25 = swift_allocObject(&unk_1000C2460, 80, 7);
  sub_10004B27C((uint64_t)&v79, v25 + 16);
  v26 = sub_100012E2C(&qword_1000D23E0);
  sub_1000040A8(&qword_1000D23A0, (uint64_t (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  v28 = v27;
  v29 = sub_10005043C();
  v30 = sub_100014C08();
  v66 = v30;
  v67 = v28;
  TableColumn<>.init<A, B>(_:value:content:)(v81, KeyPath, sub_100050434, v25, v26, &type metadata for String, v28, v29, v30, &protocol witness table for String);
  v69 = v8;
  TableColumn.width(min:ideal:max:)(0x4065E00000000000, 0, 0, 1, 0, 1, v8);
  v31 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v70 = v9;
  v71 = v31;
  v31(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v76, v15, v8);
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = sub_100090B54(v32, v33);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v79 = v36;
  v80 = v38;
  v39 = swift_getKeyPath(&unk_100099DD0);
  v40 = sub_100012E2C(&qword_1000D2408);
  sub_100004038(&qword_1000D2410, &qword_1000D2408);
  v42 = v41;
  v65 = v30;
  v43 = v72;
  TableColumn<>.init<A, B>(_:value:content:)(&v79, v39, sub_10004BA14, 0, v40, &type metadata for String, v28, v41, v65, &protocol witness table for String);
  v44 = v73;
  v45 = v77;
  TableColumn.width(min:ideal:max:)(0x4059000000000000, 0, 0, 1, 0x4069000000000000, 0, v77);
  v46 = v74;
  v47 = *(void (**)(char *, uint64_t))(v74 + 8);
  v47(v43, v45);
  v48 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v48(v78, v44, v45);
  v49 = String._bridgeToObjectiveC()();
  v50 = String._bridgeToObjectiveC()();
  v51 = String._bridgeToObjectiveC()();
  v52 = sub_100090B54(v49, v50);

  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

  v79 = v53;
  v80 = v55;
  v56 = swift_getKeyPath(&unk_100099E00);
  TableColumn<>.init<A, B>(_:value:content:)(&v79, v56, sub_10004BA20, 0, v40, &type metadata for String, v67, v42, v66, &protocol witness table for String);
  v57 = v77;
  TableColumn.width(min:ideal:max:)(0x405F400000000000, 0, 0, 1, 0x406C200000000000, 0, v77);
  v47(v43, v57);
  v58 = sub_100012E2C(&qword_1000D2418);
  v59 = v75;
  v48((char *)(v75 + *(int *)(v58 + 64)), v44, v57);
  v60 = (char *)(v59 + *(int *)(v58 + 48));
  v61 = v59;
  v62 = v69;
  v63 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v61, v76, v69);
  v48(v60, v78, v57);
  return v71(v63, v62);
}

uint64_t sub_10004B928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for ShortcutsLibraryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = static VerticalAlignment.center.getter(v8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  sub_100012E2C(&qword_1000D2420);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v11(v10, a1, v6);
  v12 = *(_QWORD *)(a2 + 8);
  swift_retain(v12);
  NameIconView.init(item:dataSource:)(v10, v12);
  v13 = sub_100012E2C(&qword_1000D23E0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a3 + *(int *)(v13 + 36), a1, v6);
}

uint64_t sub_10004BA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004BA2C(a1, (uint64_t (*)(void))&ShortcutsLibraryItem.actionCountText.getter, a2);
}

uint64_t sub_10004BA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004BA2C(a1, (uint64_t (*)(void))&ShortcutsLibraryItem.modificationDateText.getter, a2);
}

uint64_t sub_10004BA2C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[2];

  v5 = static VerticalAlignment.center.getter(a1);
  v12[0] = a2();
  v12[1] = v6;
  v7 = sub_100014C08();
  result = Text.init<A>(_:)(v12, &type metadata for String, v7);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v10 & 1;
  *(_QWORD *)(a3 + 48) = v11;
  return result;
}

uint64_t sub_10004BAA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  _QWORD v20[8];
  _QWORD v21[8];

  v2 = sub_100012E2C(&qword_1000D1EB0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[1];
  v7 = swift_retain(v6);
  dispatch thunk of LibraryDataSource.sortedSections.getter(v7);
  swift_release(v6);
  v8 = OrderedDictionary.values.getter(v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10004B244(a1, v21);
  v9 = swift_allocObject(&unk_1000C2280, 80, 7);
  sub_10004B27C((uint64_t)v21, v9 + 16);
  v21[0] = v8;
  v10 = sub_100012E2C(&qword_1000D2348);
  v20[0] = v10;
  v20[1] = &type metadata for String;
  v11 = sub_100012E2C(&qword_1000D22A0);
  v20[2] = v11;
  v12 = type metadata accessor for ShortcutsLibraryItem(0);
  v20[3] = v12;
  sub_100004038(&qword_1000D2350, &qword_1000D2348);
  v14 = v13;
  v20[4] = v13;
  sub_100004038(&qword_1000D2298, &qword_1000D22A0);
  v16 = v15;
  v20[5] = v15;
  sub_1000040A8(&qword_1000D2358, (uint64_t (*)(uint64_t))&type metadata accessor for ShortcutsLibrarySection);
  v20[6] = v17;
  KeyPath = swift_getKeyPath(&unk_100099D70);
  return ForEach<>.init<A>(_:id:content:)(v21, KeyPath, sub_10004FFE4, v9, v10, v11, v12, v14, &protocol witness table for String, v16);
}

uint64_t sub_10004BC84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t (**v20)@<X0>(uint64_t@<X8>);
  _QWORD v21[8];

  v6 = type metadata accessor for ShortcutsLibrarySection(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LibrarySectionOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShortcutsLibrarySection.options.getter(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_10004B244(a2, v21);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1000C22A8, v17 + 64, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
  sub_10004B27C((uint64_t)v21, v18 + v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v14, v10);
  result = sub_100012E2C(&qword_1000D22A0);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a3 + *(int *)(result + 36));
  *v20 = sub_10005001C;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v18;
  return result;
}

uint64_t sub_10004BDEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD v55[9];

  v44 = a2;
  v39 = a1;
  v47 = a3;
  v3 = type metadata accessor for ShortcutsLibrarySection(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v42 = v3;
  v43 = v5;
  __chkstk_darwin(v3);
  v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E2C(&qword_1000D2360);
  v11 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  v46 = v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[0] = ShortcutsLibrarySection.tableItems.getter(v12);
  v15 = sub_100012E2C(&qword_1000D2368);
  v48 = v15;
  v49 = &type metadata for String;
  v16 = sub_100012E2C(&qword_1000D2370);
  v50 = v16;
  v17 = type metadata accessor for ShortcutsLibraryItem(0);
  v51 = v17;
  sub_100004038(&qword_1000D2378, &qword_1000D2368);
  v19 = v18;
  v52 = v18;
  v20 = sub_10005004C();
  v53 = v20;
  sub_1000040A8(&qword_1000D23A0, (uint64_t (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  v54 = v21;
  KeyPath = swift_getKeyPath(&unk_100099D70);
  ForEach<>.init<A>(_:id:content:)(v55, KeyPath, sub_10004C124, 0, v15, v16, v17, v19, &protocol witness table for String, v20);
  v23 = sub_100012E2C(&qword_1000D23A8);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v23, v25 + *(_QWORD *)(v7 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100096E80;
  v27 = (id)WFWorkflowReferenceType();
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v9, v40);
  v28 = v41;
  v29 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v41, v39, v42);
  sub_10004B244(v44, v55);
  v30 = *(unsigned __int8 *)(v4 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = (v43 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject(&unk_1000C22D0, v32 + 64, v30 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v33 + v31, v28, v29);
  sub_10004B27C((uint64_t)v55, v33 + v32);
  v34 = sub_10005019C();
  v35 = v45;
  DynamicTableRowContent.onInsert(of:perform:)(v26, sub_10005015C, v33, v45, v34);
  swift_bridgeObjectRelease(v26);
  v36 = swift_release(v33);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v46 + 8))(v14, v35, v36);
}

uint64_t sub_10004C124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;

  v2 = type metadata accessor for ShortcutsLibraryItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = sub_100012E2C(&qword_1000D2390);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_1000040A8(&qword_1000D23A0, (uint64_t (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  TableRow.init(_:)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v10);
  v9((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1000C2438, v12 + v4, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100004038(&qword_1000D2388, &qword_1000D2390);
  TableRowContent.itemProvider(_:)(sub_1000503AC, v13, v5, v14);
  v15 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v15);
}

uint64_t sub_10004C2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;

  v4 = type metadata accessor for LibrarySectionOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = ShortcutsLibrarySection.workflowInsertionAllowed.getter(v6);
  if ((result & 1) != 0)
  {
    ShortcutsLibrarySection.options.getter(result);
    sub_10004C368(a2, a1, (uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

void sub_10004C368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  dispatch_group_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  _QWORD *v34;
  __n128 v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD aBlock[5];
  uint64_t v72;
  _QWORD v73[8];
  _QWORD *v74;

  v61 = a3;
  v64 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v69 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v68 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LibrarySectionOptions(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v58 = v6;
  v60 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = (_QWORD *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v56 = *(v57 - 1);
  __chkstk_darwin(v57);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v54);
  v55 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v66 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  __chkstk_darwin(v10);
  v65 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(a1);
    v22 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_22;
LABEL_19:
    if ((v22 & 0x4000000000000000) == 0)
    {
      if (!*(_QWORD *)(v22 + 16))
      {
LABEL_23:
        swift_release(v22);
        return;
      }
LABEL_21:
      v24 = dispatch_group_create();
      v25 = sub_100003B2C(0, &qword_1000D1290, OS_dispatch_queue_ptr);
      v26 = v65;
      static DispatchQoS.unspecified.getter(v25);
      v73[0] = _swiftEmptyArrayStorage;
      sub_1000040A8(&qword_1000D23B8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      v27 = sub_100012E2C(&qword_1000D23C0);
      sub_100004038(&qword_1000D23C8, &qword_1000D23C0);
      v28 = v55;
      dispatch thunk of SetAlgebra.init<A>(_:)(v73, v27, v29);
      (*(void (**)(char *, _QWORD, _QWORD *))(v56 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v57);
      v30 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0x766F72506D657469, 0xED00007372656469, v26, v28, v8, 0);
      v31 = v4;
      v32 = swift_allocObject(&unk_1000C22F8, 24, 7);
      *(_QWORD *)(v32 + 16) = _swiftEmptyArrayStorage;
      v74 = _swiftEmptyArrayStorage;
      v33 = v24;
      v34 = v30;
      v57 = v34;
      swift_retain(v32);
      sub_10004A18C(v22, v33, &v74, v34, v32);
      v35 = swift_release(v22);
      v36 = (void *)static OS_dispatch_queue.main.getter(v35);
      sub_10004B244(v59, v73);
      v37 = v62;
      v38 = v60;
      v39 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v60, v61, v63);
      v40 = *(unsigned __int8 *)(v37 + 80);
      v41 = (v40 + 96) & ~v40;
      v42 = swift_allocObject(&unk_1000C2320, v41 + v58, v40 | 7);
      sub_10004B27C((uint64_t)v73, v42 + 16);
      v43 = v64;
      *(_QWORD *)(v42 + 80) = v32;
      *(_QWORD *)(v42 + 88) = v43;
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v42 + v41, v38, v39);
      aBlock[4] = sub_1000502B4;
      v72 = v42;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100007DA8;
      aBlock[3] = &unk_1000C2338;
      v44 = _Block_copy(aBlock);
      v45 = swift_retain(v32);
      static DispatchQoS.unspecified.getter(v45);
      v70 = _swiftEmptyArrayStorage;
      sub_1000040A8((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v46 = sub_100012E2C(&qword_1000D1298);
      sub_100004038((unint64_t *)&qword_1000D3860, &qword_1000D1298);
      v47 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v70, v46, v48);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v26, v47, v36, v44);

      _Block_release(v44);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v31);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v26, v67);
      swift_release(v72);
      v49 = v74;
      swift_release(v32);
      swift_bridgeObjectRelease(v49);
      return;
    }
LABEL_22:
    v50 = swift_retain(v22);
    v51 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_release(v22);
    if (!v51)
      goto LABEL_23;
    goto LABEL_21;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v23);
  if (!v12)
    goto LABEL_18;
LABEL_3:
  v13 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v13);
  if (v12 >= 1)
  {
    v15 = ObjCClassFromMetadata;
    v53 = v8;
    for (i = 0; i != v12; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v17 = *(id *)(a1 + 8 * i + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, "canLoadObjectOfClass:", v15);
      if ((_DWORD)v19)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v20 = *(_QWORD *)(v73[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
        specialized ContiguousArray._endMutation()(v21);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(a1);
    v22 = v73[0];
    v8 = v53;
    if ((v73[0] & 0x8000000000000000) != 0)
      goto LABEL_22;
    goto LABEL_19;
  }
  __break(1u);
}

void sub_10004CA0C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD v35[8];

  v3 = sub_100012E2C(&qword_1000D10D0);
  __chkstk_darwin(v3);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E2C(&qword_1000D3670);
  __chkstk_darwin(v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShortcutsLibraryItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2[1];
  v14 = swift_retain(v13);
  v15 = dispatch thunk of LibraryDataSource.selectedTableItems.getter(v14);
  swift_release(v13);
  v16 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease(v15);
  if (v16 == 1)
  {
    v17 = swift_retain(v13);
    v18 = dispatch thunk of LibraryDataSource.selectedTableItems.getter(v17);
    swift_release(v13);
    sub_10005E950(v18, (uint64_t)v8);
    swift_bridgeObjectRelease(v18);
    if (sub_100019D44((uint64_t)v8, 1, v9) == 1)
    {
      sub_10001222C((uint64_t)v8, &qword_1000D3670);
      return;
    }
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v20 = ShortcutsLibraryItem.workflow.getter(v19);
    if (!v20)
    {
      v28 = ShortcutsLibraryItem.autoShortcut.getter();
      if (v28)
      {
        v29 = (void *)v28;
        v30 = type metadata accessor for TaskPriority(0);
        sub_100015D74((uint64_t)v5, 1, 1, v30);
        sub_10004B244(a2, v35);
        type metadata accessor for MainActor(0);
        v31 = v29;
        v32 = static MainActor.shared.getter(v31);
        v33 = (_QWORD *)swift_allocObject(&unk_1000C2258, 104, 7);
        v33[2] = v32;
        v33[3] = &protocol witness table for MainActor;
        v33[4] = v31;
        sub_10004B27C((uint64_t)v35, (uint64_t)(v33 + 5));
        v34 = sub_10005F17C((uint64_t)v5, (uint64_t)&unk_1000D2340, (uint64_t)v33);

        v27 = swift_release(v34);
      }
      goto LABEL_9;
    }
    v21 = (void *)v20;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 3);
    if (Strong)
    {
      v23 = Strong;
      v24 = a2[4];
      ObjectType = swift_getObjectType(Strong);
      v35[0] = v23;
      v26 = WorkflowOpener.openWorkflow(_:)(v21, ObjectType, *(_QWORD *)(v24 + 8));
      swift_unknownObjectRelease(v23);

      swift_unknownObjectRelease(v26);
LABEL_9:
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v27);
      return;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  }
}

uint64_t sub_10004CCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_10004CD34, v7, v8);
}

uint64_t sub_10004CD34()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource(0));
  v0[10] = AutoShortcutsAppsDataSource.init(organizedCollections:)(0);
  v4 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getWFWorkflow(for:)
                                      + async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getWFWorkflow(for:));
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getWFWorkflow(for:)
                                  + 1));
  v0[11] = v2;
  *v2 = v0;
  v2[1] = sub_10004CDB4;
  return v4(v0[5]);
}

uint64_t sub_10004CDB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 88));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = v4[8];
    v6 = v4[9];
    v7 = sub_10004CED8;
  }
  else
  {
    v4[12] = a1;
    v5 = v4[8];
    v6 = v4[9];
    v7 = sub_10004CE2C;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10004CE2C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  __n128 v9;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  v5 = *(void **)(v3 + 40);
  v4 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v1;
  swift_retain(v4);
  v6 = v1;
  v7 = v5;
  v8 = sub_100012E2C(&qword_1000D22E0);
  State.wrappedValue.setter(v0 + 32, v8);

  v9 = swift_release(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

uint64_t sub_10004CED8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));

  return sub_100026EB8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10004CF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;

  v6 = sub_100012E2C(&qword_1000D1EB0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = swift_retain(v10);
  dispatch thunk of LibraryDataSource.sortedSections.getter(v11);
  swift_release(v10);
  v12 = OrderedDictionary.values.getter(v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v44 = a3;
    v14 = *(_QWORD *)(type metadata accessor for ShortcutsLibrarySection(0) - 8);
    v15 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(_QWORD *)(v14 + 72);
    v17 = swift_bridgeObjectRetain(v12);
    v18 = _swiftEmptyArrayStorage;
    while (1)
    {
      v19 = ShortcutsLibrarySection.items.getter(v17);
      v20 = *(_QWORD *)(v19 + 16);
      v21 = v18[2];
      v22 = v21 + v20;
      if (__OFADD__(v21, v20))
        break;
      v23 = v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
      if (!isUniquelyReferenced_nonNull_native || v22 > v18[3] >> 1)
      {
        if (v21 <= v22)
          v25 = v21 + v20;
        else
          v25 = v21;
        v18 = (_QWORD *)sub_100065914(isUniquelyReferenced_nonNull_native, v25, 1, (uint64_t)v18);
      }
      if (*(_QWORD *)(v23 + 16))
      {
        v26 = v18[2];
        v27 = (v18[3] >> 1) - v26;
        v28 = type metadata accessor for ShortcutsLibraryItem(0);
        if (v27 < v20)
          goto LABEL_27;
        v29 = v28;
        v30 = *(_QWORD *)(v28 - 8);
        v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        v32 = *(_QWORD *)(v30 + 72);
        v33 = (char *)v18 + v31 + v32 * v26;
        v34 = v23 + v31;
        v35 = v32 * v20;
        v36 = &v33[v35];
        v37 = v34 + v35;
        if (v34 < (unint64_t)v36 && (unint64_t)v33 < v37)
          goto LABEL_29;
        swift_arrayInitWithCopy(v33, v34, v20, v29);
        if (v20)
        {
          v39 = v18[2];
          v40 = __OFADD__(v39, v20);
          v41 = v39 + v20;
          if (v40)
            goto LABEL_28;
          v18[2] = v41;
        }
      }
      else if (v20)
      {
        goto LABEL_26;
      }
      v17 = swift_bridgeObjectRelease(v23);
      v15 += v16;
      if (!--v13)
      {
        swift_bridgeObjectRelease_n(v12, 2);
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v18 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRetain(a1);
    v42 = sub_100049F78((uint64_t)v18, a1);
    return LibraryMenu.init(tableItems:)(v42);
  }
  return result;
}

uint64_t sub_10004D18C(id *a1)
{
  return GalleryShortcutActionsView.init(workflow:)(*a1);
}

uint64_t sub_10004D1B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];

  sub_10004B244(v0, v9);
  v1 = type metadata accessor for MainActor(0);
  v2 = static MainActor.shared.getter(v1);
  v3 = swift_allocObject(&unk_1000C2208, 96, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = &protocol witness table for MainActor;
  sub_10004B27C((uint64_t)v9, v3 + 32);
  v4 = sub_10004B244(v0, v9);
  v5 = static MainActor.shared.getter(v4);
  v6 = swift_allocObject(&unk_1000C2230, 96, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = &protocol witness table for MainActor;
  sub_10004B27C((uint64_t)v9, v6 + 32);
  v7 = type metadata accessor for EditMode(0);
  return Binding.init(get:set:)(sub_10004FEB0, v3, sub_10004FF0C, v6, v7);
}

void sub_10004D2A4(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(_BYTE *, _QWORD);
  _QWORD *v5;
  _QWORD *v6;
  _BYTE v7[32];

  if ((*a2 & 1) == 0)
  {
    v3 = *(_QWORD *)(a3 + 8);
    swift_retain(v3);
    v4 = (void (*)(_BYTE *, _QWORD))dispatch thunk of LibraryDataSource.selectedWorkflowIds.modify(v7);
    v6 = v5;
    swift_bridgeObjectRelease(*v5);
    *v6 = &_swiftEmptySetSingleton;
    v4(v7, 0);
    swift_release(v3);
  }
}

uint64_t sub_10004D318(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = type metadata accessor for PPTTestCase.ScrollMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for PPTTestCase.ScrollMode.oscillate(_:), v3);
  PPTTestCase.performScrollTest(_:scrollMode:)(a2, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10004D3BC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unsigned int *v7;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = swift_retain(v3);
  v5 = dispatch thunk of LibraryDataSource.isEditing.getter(v4);
  swift_release(v3);
  v6 = type metadata accessor for EditMode(0);
  v7 = (unsigned int *)&enum case for EditMode.active(_:);
  if ((v5 & 1) == 0)
    v7 = (unsigned int *)&enum case for EditMode.inactive(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a2, *v7, v6);
}

uint64_t sub_10004D430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for EditMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a4 + 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for EditMode.active(_:), v6);
  swift_retain(v10);
  LOBYTE(a1) = static EditMode.== infix(_:_:)(a1, v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  dispatch thunk of LibraryDataSource.isEditing.setter(a1 & 1);
  return swift_release(v10);
}

void sub_10004D4F8(uint64_t a1, int a2, dispatch_group_t group, NSObject *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char isEscapingClosureAtFileLocation;
  _QWORD v18[5];
  uint64_t v19;

  if (a1 && (v9 = objc_opt_self(WFWorkflowReference), (v10 = swift_dynamicCastObjCClass(a1, v9)) != 0))
  {
    v11 = v10;
    v12 = a5 + 16;
    v13 = swift_allocObject(&unk_1000C23C0, 32, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = v11;
    v14 = swift_allocObject(&unk_1000C23E8, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_100050348;
    *(_QWORD *)(v14 + 24) = v13;
    v18[4] = sub_1000269F4;
    v19 = v14;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10004D704;
    v18[3] = &unk_1000C2400;
    v15 = _Block_copy(v18);
    v16 = v19;
    swift_unknownObjectRetain_n(a1, 2);
    swift_retain(v14);
    swift_release(v16);
    dispatch_sync(a4, v15);
    swift_unknownObjectRelease(a1);
    _Block_release(v15);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 89, 170, 36, 1);
    swift_release(v14);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      dispatch_group_leave(group);
      swift_release(v13);
    }
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_10004D68C(_QWORD *a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  swift_beginAccess(a1, v16, 33, 0);
  v4 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_10003E9B0(v12);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v4);
  specialized Array._endMutation()(v13, v14);
  return swift_endAccess(v16);
}

uint64_t sub_10004D704(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10004D724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE v13[24];

  v5 = a2 + 16;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = swift_retain(v6);
  v8 = LibraryDataSource.shortcutMoveService.getter(v7);
  swift_release(v6);
  swift_beginAccess(v5, v13, 0, 0);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = swift_bridgeObjectRetain(v9);
  v11 = (void *)LibrarySectionOptions.collection.getter(v10);
  dispatch thunk of ShortcutMoveService.move(_:to:of:source:)(v9, a3, v11, 0x100000000);
  swift_bridgeObjectRelease(v9);

  return swift_release(v8);
}

uint64_t sub_10004D7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[4];

  v3 = v2;
  v70 = a2;
  v64 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v5, v4, &protocol requirements base descriptor for TableRowContent, &associated type descriptor for TableRowContent.TableRowValue);
  v69 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v5, v4, AssociatedTypeWitness, &protocol requirements base descriptor for TableRowContent, &associated conformance descriptor for TableRowContent.TableRowContent.TableRowValue: Identifiable);
  v8 = type metadata accessor for EmptyTableRowContent(255, AssociatedTypeWitness, AssociatedConformanceWitness);
  v9 = type metadata accessor for Section(0, v8, v4, v8);
  v61 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v63 = (char *)v59 - v13;
  v14 = sub_1000143E4(&qword_1000D21C0);
  v15 = sub_10004F6C8();
  v68 = AssociatedTypeWitness;
  v93[0] = AssociatedTypeWitness;
  v93[1] = v14;
  v59[1] = v14;
  v93[2] = AssociatedConformanceWitness;
  v93[3] = v15;
  v59[0] = v15;
  v71 = type metadata accessor for TableHeaderRowContent(255, v93);
  v72 = v8;
  v16 = type metadata accessor for Section(0, v71, v4, v8);
  v60 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v62 = (char *)v59 - v20;
  v21 = type metadata accessor for LibrarySectionOptions.Header(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for _ConditionalContent(0, v16, v9);
  v66 = *(_QWORD *)(v67 - 8);
  v25 = __chkstk_darwin(v67);
  v65 = (char *)v59 - v26;
  v27 = LibrarySectionOptions.header.getter(v25);
  LOBYTE(AssociatedConformanceWitness) = LibrarySectionOptions.Header.shouldShowInTable.getter(v27);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v28 = (uint64_t *)(v3 + *(int *)(v64 + 36));
  v29 = *v28;
  if ((AssociatedConformanceWitness & 1) != 0)
  {
    v30 = __chkstk_darwin(v29);
    v31 = v69;
    v59[-4] = v4;
    v59[-3] = v31;
    v58 = v59[0];
    v32 = v68;
    Section<>.init<A, B>(content:header:)(v30);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TableHeaderRowContent<A, B>, v71);
    v34 = swift_getWitnessTable(&protocol conformance descriptor for EmptyTableRowContent<A>, v72);
    v76 = WitnessTable;
    v77 = v31;
    v78 = v34;
    v35 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v16);
    v36 = v60;
    v37 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    v38 = v62;
    v37(v62, v19, v16);
    v39 = *(void (**)(char *, uint64_t))(v36 + 8);
    v39(v19, v16);
    v37(v19, v38, v16);
    v73 = v34;
    v74 = v31;
    v75 = v34;
    v40 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
    v41 = v65;
    sub_10004E690((uint64_t)v19, v32, v16, v9, v35, v40);
    v39(v19, v16);
    v42 = v38;
    v43 = v16;
  }
  else
  {
    v44 = v68;
    v31 = v69;
    Section<>.init<A>(content:)(v29, v28[1], v4, v68, v69);
    v45 = swift_getWitnessTable(&protocol conformance descriptor for EmptyTableRowContent<A>, v72);
    v90 = v45;
    v91 = v31;
    v92 = v45;
    v46 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
    v47 = v61;
    v48 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v49 = v63;
    v48(v63, v12, v9);
    v39 = *(void (**)(char *, uint64_t))(v47 + 8);
    v39(v12, v9);
    v48(v12, v49, v9);
    v87 = swift_getWitnessTable(&protocol conformance descriptor for TableHeaderRowContent<A, B>, v71);
    v88 = v31;
    v89 = v45;
    v50 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v16);
    v41 = v65;
    sub_10004E75C((uint64_t)v12, v44, v16, v9, v50, v46);
    v39(v12, v9);
    v42 = v49;
    v43 = v9;
  }
  v39(v42, v43);
  v51 = swift_getWitnessTable(&protocol conformance descriptor for TableHeaderRowContent<A, B>, v71);
  v52 = swift_getWitnessTable(&protocol conformance descriptor for EmptyTableRowContent<A>, v72);
  v84 = v51;
  v85 = v31;
  v86 = v52;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v16);
  v81 = v52;
  v82 = v31;
  v83 = v52;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
  v79 = v53;
  v80 = v54;
  v55 = v67;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v67);
  v56 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v70, v41, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v41, v55);
}

void sub_10004DDEC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  type metadata accessor for ConditionalHeaderSection(0, a1, a2, a3);
  sub_10004DE24(a4);
}

void sub_10004DE24(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (**v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (**v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  char v84;

  v82 = a1;
  v1 = type metadata accessor for AutoShortcutApp(0);
  v74 = *(_QWORD *)(v1 - 8);
  v75 = v1;
  __chkstk_darwin(v1);
  v73 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100012E2C(&qword_1000D2210);
  __chkstk_darwin(v80);
  v79 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100012E2C(&qword_1000D2218);
  __chkstk_darwin(v76);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100012E2C(&qword_1000D2220);
  __chkstk_darwin(v78);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100012E2C(&qword_1000D21E8);
  __chkstk_darwin(v77);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100012E2C(&qword_1000D21D8);
  __chkstk_darwin(v81);
  v11 = (void (**)(char *, char *, uint64_t))((char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100012E2C(&qword_1000D21F8);
  v72 = *(void (***)(char *, char *, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LibrarySectionOptions.Header(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LibrarySectionOptions.header.getter(v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
  {
    v21 = (*(uint64_t (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v22 = *((_QWORD *)v19 + 1);
    v23 = *((_QWORD *)v19 + 3);
    v24 = __chkstk_darwin(v21);
    *(&v70 - 2) = v25;
    *(&v70 - 1) = v22;
    __chkstk_darwin(v24);
    *(&v70 - 2) = v26;
    *(&v70 - 1) = v23;
    Label.init(title:icon:)(sub_10004F88C);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v23);
    v27 = v72;
    v72[2](v7, v14, v12);
    swift_storeEnumTagMultiPayload(v7, v78, 0);
    sub_100004038(&qword_1000D21F0, &qword_1000D21F8);
    _ConditionalContent<>.init(storage:)(v7, v12, &type metadata for Text, v28, &protocol witness table for Text);
    sub_100026854((uint64_t)v9, (uint64_t)v5, &qword_1000D21E8);
    swift_storeEnumTagMultiPayload(v5, v76, 0);
    v29 = sub_100012E2C(&qword_1000D2208);
    v30 = sub_10004F7A0();
    v31 = sub_10004F824();
    _ConditionalContent<>.init(storage:)(v5, v77, v29, v30, v31);
    sub_10001222C((uint64_t)v9, &qword_1000D21E8);
    v32 = v79;
    sub_100026854((uint64_t)v11, v79, &qword_1000D21D8);
    swift_storeEnumTagMultiPayload(v32, v80, 0);
    v33 = sub_10004F734();
    _ConditionalContent<>.init(storage:)(v32, v81, &type metadata for EmptyView, v33, &protocol witness table for EmptyView);
    sub_10001222C((uint64_t)v11, &qword_1000D21D8);
    ((void (*)(char *, uint64_t))v27[1])(v14, v12);
    return;
  }
  v34 = v78;
  v72 = v11;
  if (v20 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(v73, v19, v75);
    v83[0] = AutoShortcutApp.localizedName.getter(v35);
    v83[1] = v36;
    v37 = sub_100014C08();
    v38 = Text.init<A>(_:)(v83, &type metadata for String, v37);
    v40 = v39;
    v42 = v41;
    *(_QWORD *)v7 = v38;
    *((_QWORD *)v7 + 1) = v39;
    v70 = v38;
    v71 = v39;
    v44 = v43 & 1;
    v7[16] = v43 & 1;
    *((_QWORD *)v7 + 3) = v41;
    swift_storeEnumTagMultiPayload(v7, v34, 1);
    sub_100015610(v38, v40, v44);
    sub_100004038(&qword_1000D21F0, &qword_1000D21F8);
    v46 = v45;
    v47 = v42;
    swift_bridgeObjectRetain(v42);
    _ConditionalContent<>.init(storage:)(v7, v12, &type metadata for Text, v46, &protocol witness table for Text);
    sub_100026854((uint64_t)v9, (uint64_t)v5, &qword_1000D21E8);
    swift_storeEnumTagMultiPayload(v5, v76, 0);
    v48 = sub_100012E2C(&qword_1000D2208);
    v49 = sub_10004F7A0();
    v50 = sub_10004F824();
    v51 = (uint64_t)v72;
    _ConditionalContent<>.init(storage:)(v5, v77, v48, v49, v50);
    sub_10001222C((uint64_t)v9, &qword_1000D21E8);
    v52 = v79;
    sub_100026854(v51, v79, &qword_1000D21D8);
    swift_storeEnumTagMultiPayload(v52, v80, 0);
    v53 = sub_10004F734();
    _ConditionalContent<>.init(storage:)(v52, v81, &type metadata for EmptyView, v53, &protocol witness table for EmptyView);
    sub_10001222C(v51, &qword_1000D21D8);
    sub_1000085A4(v70, v71, v44);
    swift_bridgeObjectRelease(v47);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
    return;
  }
  if (v20 == enum case for LibrarySectionOptions.Header.tip(_:))
  {
    v84 = 1;
    _ConditionalContent<>.init(storage:)(&v84, &type metadata for EmptyView, &type metadata for EmptyView, &protocol witness table for EmptyView, &protocol witness table for EmptyView);
    *v5 = v83[0];
    swift_storeEnumTagMultiPayload(v5, v76, 1);
    v54 = sub_100012E2C(&qword_1000D2208);
    v55 = sub_10004F7A0();
    v56 = sub_10004F824();
    v57 = (uint64_t)v72;
    _ConditionalContent<>.init(storage:)(v5, v77, v54, v55, v56);
    v58 = v79;
    sub_100026854(v57, v79, &qword_1000D21D8);
    swift_storeEnumTagMultiPayload(v58, v80, 0);
    v59 = sub_10004F734();
    _ConditionalContent<>.init(storage:)(v58, v81, &type metadata for EmptyView, v59, &protocol witness table for EmptyView);
    v60 = v57;
LABEL_10:
    sub_10001222C(v60, &qword_1000D21D8);
    return;
  }
  v61 = v81;
  v62 = v79;
  v63 = v80;
  v64 = (uint64_t)v72;
  if (v20 == enum case for LibrarySectionOptions.Header.none(_:))
  {
    v84 = 0;
    _ConditionalContent<>.init(storage:)(&v84, &type metadata for EmptyView, &type metadata for EmptyView, &protocol witness table for EmptyView, &protocol witness table for EmptyView);
    *v5 = v83[0];
    swift_storeEnumTagMultiPayload(v5, v76, 1);
    v65 = sub_100012E2C(&qword_1000D2208);
    v66 = sub_10004F7A0();
    v67 = sub_10004F824();
    _ConditionalContent<>.init(storage:)(v5, v77, v65, v66, v67);
    sub_100026854(v64, v62, &qword_1000D21D8);
    swift_storeEnumTagMultiPayload(v62, v63, 0);
    v68 = sub_10004F734();
    _ConditionalContent<>.init(storage:)(v62, v61, &type metadata for EmptyView, v68, &protocol witness table for EmptyView);
    v60 = v64;
    goto LABEL_10;
  }
  if (v20 == enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
  {
    swift_storeEnumTagMultiPayload(v79, v80, 1);
    v69 = sub_10004F734();
    _ConditionalContent<>.init(storage:)(v62, v61, &type metadata for EmptyView, v69, &protocol witness table for EmptyView);
  }
  else
  {
    _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
    __break(1u);
  }
}

uint64_t sub_10004E690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v11 = type metadata accessor for _ConditionalContent.Storage(0, a3, a4);
  __chkstk_darwin(v11);
  v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v15 - v12, a1, a3);
  swift_storeEnumTagMultiPayload(v13, v11, 0);
  return _ConditionalContent<>.init(storage:)(v13, a3, a4, a5, a6);
}

uint64_t sub_10004E75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v11 = type metadata accessor for _ConditionalContent.Storage(0, a3, a4);
  __chkstk_darwin(v11);
  v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))((char *)&v15 - v12, a1, a4);
  swift_storeEnumTagMultiPayload(v13, v11, 1);
  return _ConditionalContent<>.init(storage:)(v13, a3, a4, a5, a6);
}

uint64_t sub_10004E828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v5 = sub_100014C08();
  swift_bridgeObjectRetain(a2);
  result = Text.init<A>(_:)(v10, &type metadata for String, v5);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v8 & 1;
  *(_QWORD *)(a3 + 24) = v9;
  return result;
}

uint64_t sub_10004E890@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t result;

  if (a2)
    v4 = a1;
  else
    v4 = 0;
  if (a2)
    v5 = a2;
  else
    v5 = 0xE000000000000000;
  swift_bridgeObjectRetain(a2);
  result = Image.init(_internalSystemName:)(v4, v5);
  *a3 = result;
  return result;
}

uint64_t sub_10004E8E4()
{
  return static TableRowContent._tableRowCount(inputs:)();
}

uint64_t WFWorkflow.id.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10004E908(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of LibraryTable.body>>, 1);
}

void *sub_10004E918()
{
  return &protocol witness table for ObjectIdentifier;
}

void sub_10004E924(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t destroy for LibraryTable(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));

  swift_unknownObjectWeakDestroy(a1 + 24);
  return swift_release(*(_QWORD *)(a1 + 48));
}

_QWORD *initializeWithCopy for LibraryTable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = a2 + 3;
  swift_retain(v4);
  v7 = v5;
  swift_unknownObjectWeakCopyInit(a1 + 3, v6);
  v8 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v11 = v8;
  swift_retain(v10);
  return a1;
}

_QWORD *assignWithCopy for LibraryTable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  swift_unknownObjectWeakCopyAssign(a1 + 3, a2 + 3);
  a1[4] = a2[4];
  v9 = (void *)a1[5];
  v10 = (void *)a2[5];
  a1[5] = v10;
  v11 = v10;

  v12 = a1[6];
  v13 = a2[6];
  a1[6] = v13;
  swift_retain(v13);
  swift_release(v12);
  a1[7] = a2[7];
  return a1;
}

uint64_t initializeWithTake for LibraryTable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for LibraryTable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  swift_unknownObjectWeakTakeAssign(a1 + 24, a2 + 24);
  v7 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v8);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryTable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryTable()
{
  return &type metadata for LibraryTable;
}

void sub_10004EC04()
{
  sub_100004038(&qword_1000D2040, &qword_1000D2048);
}

uint64_t sub_10004EC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10004EC6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShortcutsLibraryItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10004ECA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004ECE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004ED28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004ED6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShortcutsLibraryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10004EDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004EDBC);
}

uint64_t sub_10004EDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000507BC();
  return sub_100019D44(v1, v0, v2);
}

uint64_t sub_10004EDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004EDF0);
}

uint64_t sub_10004EDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1000507BC();
  v0 = sub_100050800();
  return sub_100015D74(v0, v1, v2, v3);
}

uint64_t type metadata accessor for AppEntityAnnotationModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D20A8;
  if (!qword_1000D20A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppEntityAnnotationModifier);
  return result;
}

uint64_t sub_10004EE48(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ShortcutsLibraryItem(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10004EEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10004EEB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for LibrarySectionOptions(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10004EF2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for LibrarySectionOptions(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

uint64_t sub_10004EFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibrarySectionOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8));
}

uint64_t sub_10004F004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for LibrarySectionOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  return a1;
}

uint64_t sub_10004F06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for LibrarySectionOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t sub_10004F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for LibrarySectionOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_10004F13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for LibrarySectionOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_10004F1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004F1B0);
}

uint64_t sub_10004F1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1000507B4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_100019D44(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_10004F224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004F230);
}

uint64_t sub_10004F230(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1000507B4();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = sub_100050800();
    return sub_100015D74(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ConditionalHeaderSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000037C0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionalHeaderSection);
}

uint64_t sub_10004F2A0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000A6F68, 1);
}

uint64_t sub_10004F2D4(uint64_t a1, uint64_t a2)
{
  return swift_getAssociatedConformanceWitness(*(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 16), a1, &protocol requirements base descriptor for TableRowContent, &associated conformance descriptor for TableRowContent.TableRowContent.TableRowValue: Identifiable);
}

uint64_t sub_10004F2F0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_10004F2F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000A6F40, 1);
}

uint64_t sub_10004F308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  ValueMetadata *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t OpaqueTypeConformance2;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  ValueMetadata *v45;
  uint64_t v46;
  unint64_t v47;

  v38 = a1;
  v42 = a2;
  v2 = sub_100012E2C(&qword_1000D2190);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100012E2C(&qword_1000D2198);
  __chkstk_darwin(v39);
  v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AppEntityVisualState(0);
  v37 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100012E2C(&qword_1000D21A0);
  v10 = *(_QWORD *)(v40 - 8);
  v11 = __chkstk_darwin(v40);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v36 - v15;
  v17 = ShortcutsLibraryItem.workflow.getter(v14);
  if (v17)
  {
    v18 = (void *)v17;
    v44 = WFDatabaseObjectDescriptor.id.getter(v17);
    v45 = v19;
    v43 = _swiftEmptyArrayStorage;
    sub_1000040A8(&qword_1000D21B0, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
    v20 = sub_100012E2C((uint64_t *)&unk_1000D4480);
    sub_100004038(&qword_1000D21B8, (uint64_t *)&unk_1000D4480);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v20, v21);
    sub_100004038(&qword_1000D21A8, &qword_1000D2190);
    v23 = v22;
    v24 = sub_100015DA4();
    View.appEntity<A>(entityType:identifier:state:)(&type metadata for WorkflowEntity, &v44, v9, v2, &type metadata for WorkflowEntity, v23, v24);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v7);
    swift_bridgeObjectRelease(v45);
    v25 = v40;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v13, v40);
    v26 = v41;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v16, v25);
    swift_storeEnumTagMultiPayload(v26, v39, 0);
    v44 = v2;
    v45 = &type metadata for WorkflowEntity;
    v46 = v23;
    v47 = v24;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.appEntity<A>(entityType:identifier:state:)>>, 1);
    _ConditionalContent<>.init(storage:)(v26, v25, v2, OpaqueTypeConformance2, v23);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v25);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v30 = v2;
    v29(v5, v38, v2);
    v31 = v41;
    v29(v41, (uint64_t)v5, v30);
    swift_storeEnumTagMultiPayload(v31, v39, 1);
    sub_100004038(&qword_1000D21A8, &qword_1000D2190);
    v33 = v32;
    v34 = sub_100015DA4();
    v44 = v30;
    v45 = &type metadata for WorkflowEntity;
    v46 = v33;
    v47 = v34;
    v35 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.appEntity<A>(entityType:identifier:state:)>>, 1);
    _ConditionalContent<>.init(storage:)(v31, v40, v30, v35, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v30);
  }
}

uint64_t sub_10004F6AC()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

unint64_t sub_10004F6C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D21C8;
  if (!qword_1000D21C8)
  {
    v1 = sub_1000143E4(&qword_1000D21C0);
    sub_10004F734();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D21C8);
  }
  return result;
}

unint64_t sub_10004F734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D21D0;
  if (!qword_1000D21D0)
  {
    v1 = sub_1000143E4(&qword_1000D21D8);
    sub_10004F7A0();
    sub_10004F824();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D21D0);
  }
  return result;
}

unint64_t sub_10004F7A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D21E0;
  if (!qword_1000D21E0)
  {
    v1 = sub_1000143E4(&qword_1000D21E8);
    sub_100004038(&qword_1000D21F0, &qword_1000D21F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D21E0);
  }
  return result;
}

unint64_t sub_10004F824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2200;
  if (!qword_1000D2200)
  {
    v1 = sub_1000143E4(&qword_1000D2208);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2200);
  }
  return result;
}

void sub_10004F880(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10004DDEC(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_10004F88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004E828(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10004F894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004E890(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_10004F89C(_QWORD *a1@<X8>)
{
  *a1 = dispatch thunk of LibraryDataSource.selectedWorkflowIds.getter();
  sub_100018188();
}

void sub_10004F8C4(_QWORD *a1@<X8>)
{
  *a1 = dispatch thunk of LibraryDataSource.sortOrderComparators.getter();
  sub_100018188();
}

uint64_t sub_10004F8EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004B308(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_10004F8F4()
{
  uint64_t v0;

  return sub_10004BAA4(*(_QWORD **)(v0 + 16));
}

unint64_t sub_10004F8FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2290;
  if (!qword_1000D2290)
  {
    v1 = sub_1000143E4(&qword_1000D2278);
    sub_100004038(&qword_1000D2298, &qword_1000D22A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2290);
  }
  return result;
}

void sub_10004F97C(uint64_t a1)
{
  uint64_t v1;

  sub_10004CA0C(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_10004F984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(a3 + a2 - 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + a2 - 24) + 8) + 8) + 8), *(_QWORD *)(a3 + a2 - 56), &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  return dispatch thunk of Identifiable.id.getter(AssociatedTypeWitness, v3);
}

void sub_10004F9EC()
{
  uint64_t v0;
  char v1;

  sub_1000507F4();
  *(_QWORD *)v0 = EnvironmentValues.lineLimit.getter();
  *(_BYTE *)(v0 + 8) = v1 & 1;
  sub_100018188();
}

void sub_10004FA18(uint64_t a1)
{
  EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  sub_100018188();
}

uint64_t sub_10004FA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10004CF08(a1, v2 + 16, a2);
}

unint64_t sub_10004FA50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1000D22C0;
  if (!qword_1000D22C0)
  {
    v1 = sub_1000143E4(&qword_1000D2240);
    v2 = sub_1000143E4(&qword_1000D2230);
    sub_100004038(&qword_1000D22B8, &qword_1000D2230);
    v4[0] = v2;
    v4[1] = &type metadata for String;
    v4[2] = v3;
    v4[3] = &protocol witness table for String;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.contextAction<A>(forSelectionType:action:)>>, 1);
    sub_100004038(&qword_1000D22C8, &qword_1000D22D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D22C0);
  }
  return result;
}

unint64_t sub_10004FB30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D22E8;
  if (!qword_1000D22E8)
  {
    v1 = sub_100003B2C(255, &qword_1000D1240, WFWorkflow_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for WFWorkflow, v1);
    atomic_store(result, (unint64_t *)&qword_1000D22E8);
  }
  return result;
}

void sub_10004FB8C(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  sub_10004D2A4(a1, a2, v2 + 16);
}

unint64_t sub_10004FB94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;

  result = qword_1000D2308;
  if (!qword_1000D2308)
  {
    v1 = sub_1000143E4(&qword_1000D2258);
    v2 = sub_1000143E4(&qword_1000D2248);
    v3 = sub_100003B2C(255, &qword_1000D1240, WFWorkflow_ptr);
    v4 = type metadata accessor for GalleryShortcutActionsView(255);
    v5 = sub_1000143E4(&qword_1000D2240);
    v6 = type metadata accessor for LibraryMenu(255);
    v7 = sub_10004FA50();
    sub_1000040A8(&qword_1000D22D8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenu);
    v12 = v5;
    v13 = &type metadata for String;
    v14 = v6;
    v15 = v7;
    v16 = &protocol witness table for String;
    v17 = v8;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v12, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(forSelectionType:menu:primaryAction:)>>, 1);
    v10 = sub_10004FB30();
    sub_1000040A8(&qword_1000D22F0, (uint64_t (*)(uint64_t))&type metadata accessor for GalleryShortcutActionsView);
    v12 = v2;
    v13 = (void *)v3;
    v14 = v4;
    v15 = OpaqueTypeConformance2;
    v16 = (void *)v10;
    v17 = v11;
    swift_getOpaqueTypeConformance2(&v12, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
    sub_100004038(&qword_1000D2310, &qword_1000D2300);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2308);
  }
  return result;
}

unint64_t sub_10004FD2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1000D2318;
  if (!qword_1000D2318)
  {
    v1 = sub_1000143E4(&qword_1000D2268);
    v2[0] = sub_1000143E4(&qword_1000D2258);
    v2[1] = &type metadata for Bool;
    v2[2] = sub_10004FB94();
    v2[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_100004038(&qword_1000D44E0, &qword_1000D2320);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2318);
  }
  return result;
}

uint64_t sub_10004FDEC()
{
  return sub_10005036C((void (*)(_QWORD))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_10004FDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for ScrollViewProxy(0);
  sub_1000507D8();
  return sub_10004D318(a1, v1 + v3);
}

unint64_t sub_10004FE28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2328;
  if (!qword_1000D2328)
  {
    v1 = sub_1000143E4(&qword_1000D2270);
    sub_10004FD2C();
    sub_1000040A8(&qword_1000D2330, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2328);
  }
  return result;
}

uint64_t sub_10004FEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004D3BC(v1 + 32, a1);
}

uint64_t sub_10004FEC0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_unknownObjectWeakDestroy(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10004FF0C(uint64_t a1)
{
  uint64_t v1;

  return sub_10004D430(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_10004FF18()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1000272EC();
  swift_release(*(_QWORD *)(v0 + 48));
  sub_100050820();
  swift_unknownObjectWeakDestroy(v0 + 64);

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10004FF64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1000D233C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002651C;
  return sub_10004CCC8(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10004FFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10004BC84(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10004FFF0()
{
  return 56;
}

__n128 sub_10004FFFC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_10005001C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_100019EFC();
  sub_100050758();
  return sub_10004BDEC(v1 + v3, (_QWORD *)(v1 + v4), a1);
}

unint64_t sub_10005004C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2380;
  if (!qword_1000D2380)
  {
    v1 = sub_1000143E4(&qword_1000D2370);
    sub_100004038(&qword_1000D2388, &qword_1000D2390);
    sub_1000040A8(&qword_1000D2398, (uint64_t (*)(uint64_t))&type metadata accessor for ItemProviderTableRowModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2380);
  }
  return result;
}

uint64_t sub_1000500EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_100019EFC();
  sub_100050788();
  v2 = v1 | 7;
  v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + 64;
  sub_1000507CC(v7);
  v8 = v0 + v5;
  swift_release(*(_QWORD *)(v8 + 8));

  swift_unknownObjectWeakDestroy(v8 + 24);
  swift_release(*(_QWORD *)(v8 + 48));
  return sub_10005077C(v0, v6, v2);
}

uint64_t sub_10005015C(uint64_t a1, uint64_t a2)
{
  sub_100019EFC();
  sub_100050758();
  return sub_10004C2B8(a1, a2);
}

unint64_t sub_10005019C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D23B0;
  if (!qword_1000D23B0)
  {
    v1 = sub_1000143E4(&qword_1000D2360);
    sub_10005004C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D23B0);
  }
  return result;
}

uint64_t sub_100050200()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100050224()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1000507B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 96) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 3));
  sub_1000272EC();
  swift_unknownObjectWeakDestroy(v0 + 40);
  sub_100050820();
  swift_release(*((_QWORD *)v0 + 8));
  v7 = swift_release(*((_QWORD *)v0 + 10));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000502B4()
{
  uint64_t v0;

  sub_1000507B4();
  return sub_10004D724(v0 + 16, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1000502E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100050318(uint64_t a1, int a2)
{
  uint64_t v2;

  sub_10004D4F8(a1, a2, *(dispatch_group_t *)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100050324()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100050348()
{
  uint64_t v0;

  return sub_10004D68C(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100050350()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100050360()
{
  return sub_10005036C((void (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem);
}

uint64_t sub_10005036C(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1(0);
  sub_100050788();
  v4 = v2 + v3;
  v6 = v5 | 7;
  sub_1000507CC(v7);
  return sub_10005077C(v1, v4, v6);
}

void sub_1000503AC()
{
  type metadata accessor for ShortcutsLibraryItem(0);
  sub_1000507D8();
  ShortcutsLibraryItem.itemProvider.getter();
  sub_100018188();
}

void sub_1000503D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000507F4();
  *v0 = ShortcutsLibraryItem.name.getter();
  v0[1] = v1;
  sub_100018188();
}

uint64_t sub_1000503F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1000272EC();
  swift_unknownObjectWeakDestroy(v0 + 40);
  sub_100050820();
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100050434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10004B928(a1, v2 + 16, a2);
}

unint64_t sub_10005043C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D23E8;
  if (!qword_1000D23E8)
  {
    v1 = sub_1000143E4(&qword_1000D23E0);
    sub_100004038(&qword_1000D23F0, &qword_1000D23F8);
    sub_1000040A8(&qword_1000D2400, type metadata accessor for AppEntityAnnotationModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D23E8);
  }
  return result;
}

void sub_1000504D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000507F4();
  *v0 = ShortcutsLibraryItem.actionCountText.getter();
  v0[1] = v1;
  sub_100018188();
}

void sub_1000504F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1000507F4();
  *v0 = ShortcutsLibraryItem.modificationDateText.getter();
  v0[1] = v1;
  sub_100018188();
}

unint64_t sub_10005051C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1000D2428;
  if (!qword_1000D2428)
  {
    v1 = sub_1000143E4(&qword_1000D2430);
    v2 = sub_1000143E4(&qword_1000D2190);
    sub_100004038(&qword_1000D21A8, &qword_1000D2190);
    v4[0] = v2;
    v4[1] = &type metadata for WorkflowEntity;
    v4[2] = v3;
    v4[3] = sub_100015DA4();
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.appEntity<A>(entityType:identifier:state:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2428);
  }
  return result;
}

uint64_t sub_1000505DC(_QWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a1[1], *a1, &protocol requirements base descriptor for TableRowContent, &associated type descriptor for TableRowContent.TableRowValue);
  v2 = sub_1000143E4(&qword_1000D21C0);
  v3 = sub_1000273A8();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v4, AssociatedTypeWitness, &protocol requirements base descriptor for TableRowContent, v5);
  v13[0] = AssociatedTypeWitness;
  v13[1] = v2;
  v13[2] = AssociatedConformanceWitness;
  v13[3] = sub_10004F6C8();
  v7 = type metadata accessor for TableHeaderRowContent(255, v13);
  v8 = type metadata accessor for EmptyTableRowContent(255, AssociatedTypeWitness, AssociatedConformanceWitness);
  v9 = sub_100050814(255, v7);
  v10 = sub_100050814(255, v8);
  v11 = type metadata accessor for _ConditionalContent(255, v9, v10);
  swift_getWitnessTable(&protocol conformance descriptor for TableHeaderRowContent<A, B>, v7);
  swift_getWitnessTable(&protocol conformance descriptor for EmptyTableRowContent<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v10);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
}

uint64_t sub_10005077C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

_QWORD *sub_1000507A4(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  return State.init(wrappedValue:)((uint64_t *)va1, (uint64_t *)va, a1);
}

uint64_t sub_1000507B4()
{
  return type metadata accessor for LibrarySectionOptions(0);
}

uint64_t sub_1000507BC()
{
  return type metadata accessor for ShortcutsLibraryItem(0);
}

uint64_t sub_1000507CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2 + v1);
}

uint64_t sub_1000507EC()
{
  return type metadata accessor for LibraryDataSource(0);
}

uint64_t sub_100050800()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100050814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return type metadata accessor for Section(a1, a2, v2, v3);
}

void sub_100050820()
{
  uint64_t v0;

}

_QWORD *sub_100050828(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v4 = OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database;
    v5 = _swiftEmptyArrayStorage;
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
         : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(*(id *)(a2 + v4), "sortedVisibleWorkflowsInCollection:", v7);
      v11 = objc_msgSend(v10, "count");

      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      {
        sub_100065928(0, v5[2] + 1, 1, (uint64_t)v5);
        v5 = v14;
      }
      v13 = v5[2];
      v12 = v5[3];
      if (v13 >= v12 >> 1)
      {
        sub_100065928(v12 > 1, v13 + 1, 1, (uint64_t)v5);
        v5 = v15;
      }
      v5[2] = v13 + 1;
      v5[v13 + 4] = v11;
      ++v6;
      if (v9 == v3)
      {
        swift_release(a2);
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_release(a2);
  v5 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v5;
}

_QWORD *sub_1000509E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  _QWORD *v40;

  v37 = type metadata accessor for RootNavigationDestination(0);
  v32 = *(_QWORD *)(v37 - 8);
  sub_100018044();
  __chkstk_darwin(v5);
  sub_100018488();
  v6 = type metadata accessor for IndexSet.Index(0);
  v29 = *(_QWORD *)(v6 - 8);
  sub_100018044();
  __chkstk_darwin(v7);
  sub_100019D7C();
  v10 = v9 - v8;
  v11 = type metadata accessor for IndexSet(0);
  sub_1000040A8(&qword_1000D2AA0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet);
  v13 = v12;
  v14 = dispatch thunk of Collection.count.getter(v11, v12);
  if (v14)
  {
    v28 = v6;
    v40 = _swiftEmptyArrayStorage;
    v15 = v14;
    sub_10003EA84();
    v16 = _swiftEmptyArrayStorage;
    v35 = v11;
    v36 = v10;
    v34 = v13;
    result = (_QWORD *)dispatch thunk of Collection.startIndex.getter(v11, v13);
    if ((v15 & 0x8000000000000000) == 0)
    {
      v18 = v15;
      v30 = v3;
      result = (_QWORD *)swift_getObjectType(a2);
      v31 = result;
      v19 = v10;
      v20 = v37;
      v21 = v35;
      while (v18)
      {
        v38 = v18;
        v22 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v39, v19, v21, v13);
        v24 = *v23;
        v22(v39, 0);
        result = (_QWORD *)dispatch thunk of SidebarSection.destinations.getter(v31, a3);
        if ((v24 & 0x8000000000000000) != 0)
          goto LABEL_13;
        if (v24 >= result[2])
          goto LABEL_14;
        v25 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        v26 = *(_QWORD *)(v32 + 72);
        (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v30, (char *)result + v25 + v26 * v24, v20);
        sub_100018420();
        v40 = v16;
        v27 = v16[2];
        if (v27 >= v16[3] >> 1)
        {
          sub_10003EA84();
          v16 = v40;
        }
        v16[2] = v27 + 1;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))((char *)v16 + v25 + v27 * v26, v30, v20);
        v40 = v16;
        v21 = v35;
        v19 = v36;
        v13 = v34;
        result = (_QWORD *)dispatch thunk of Collection.formIndex(after:)(v36, v35, v34);
        --v18;
        if (v38 == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v28);
          sub_10005E6F4();
          return v40;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_10005E6F4();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_100050C94()
{
  EnvironmentValues.editMode.getter();
  sub_100018188();
}

void sub_100050CB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_100012E2C(&qword_1000D2228);
  sub_100018044();
  __chkstk_darwin(v1);
  sub_10001827C();
  sub_10005E71C();
  EnvironmentValues.editMode.setter(v0);
  sub_100018388();
}

uint64_t sub_100050D08(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;

  v5 = *(void (**)(uint64_t))(a1 + 32);
  sub_100042DC8();
  swift_unknownObjectRetain(a2);
  v6 = a3;
  v7 = sub_1000184E0();
  v5(v7);
  sub_100019D9C();

  return swift_unknownObjectRelease(a2);
}

uint64_t sub_100050D64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_100012E2C(&qword_1000D2DD8);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v16 = *(_OWORD *)(a1 + 1);
  v18 = v5;
  v6 = v16;
  sub_1000123CC((uint64_t)&v16 + 8, (uint64_t)&v17, &qword_1000D2E88);
  v14 = *(_OWORD *)(a1 + 3);
  v7 = v14;
  sub_1000123CC((uint64_t)&v14 + 8, (uint64_t)&v15, &qword_1000D2E90);
  v8 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v8;
  *((_QWORD *)v4 + 4) = a1[4];
  swift_storeEnumTagMultiPayload(v4, v2, 0);
  sub_10005E18C(&v18);
  swift_retain(v6);
  sub_10005E18C(&v17);
  swift_retain(v7);
  sub_10005E18C(&v15);
  v9 = sub_100012E2C(&qword_1000D1FD8);
  v10 = sub_100012E2C(&qword_1000D2DF8);
  v11 = sub_100049CB8();
  v12 = sub_10005DF5C();
  return _ConditionalContent<>.init(storage:)(v4, v9, v10, v11, v12);
}

uint64_t sub_100050EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0, a2, a3);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100050F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0, a2, a3);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

unint64_t sub_100051040(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD00000000000001ALL;
}

unint64_t sub_10005107C()
{
  char *v0;

  return sub_100051040(*v0);
}

void sub_100051084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  void (*v34)(_BYTE *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE v47[24];
  _BYTE v48[24];

  v1 = sub_100012E2C(&qword_1000D2950);
  __chkstk_darwin(v1);
  v3 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100012E2C(&qword_1000D1100);
  v5 = __chkstk_darwin(v4);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v39[-v9];
  v11 = __chkstk_darwin(v8);
  v45 = &v39[-v12];
  v13 = __chkstk_darwin(v11);
  v15 = &v39[-v14];
  __chkstk_darwin(v13);
  v17 = &v39[-v16];
  v18 = type metadata accessor for RootNavigationDestination(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = &v39[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v46 = &v39[-v23];
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact) & 1) != 0)
    return;
  v43 = v10;
  v44 = v7;
  KeyPath = swift_getKeyPath(&unk_100099F70);
  v25 = swift_getKeyPath(&unk_10009A088);
  static Published.subscript.getter(v17, v0, KeyPath, v25);
  swift_release(KeyPath);
  swift_release(v25);
  if (sub_100019D44((uint64_t)v17, 1, v18) == 1)
  {
    sub_10000D7B4((uint64_t)v17, &qword_1000D1100);
    return;
  }
  v26 = v46;
  v42 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32);
  v42(v46, v17, v18);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v15, v26, v18);
  sub_100015D74((uint64_t)v15, 0, 1, v18);
  v27 = v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination;
  swift_beginAccess(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination, v48, 0, 0);
  v28 = (uint64_t)&v3[*(int *)(v1 + 48)];
  sub_10000D74C((uint64_t)v15, (uint64_t)v3, &qword_1000D1100);
  v41 = v27;
  sub_10000D74C(v27, v28, &qword_1000D1100);
  if (sub_100019D44((uint64_t)v3, 1, v18) == 1)
  {
    sub_10000D7B4((uint64_t)v15, &qword_1000D1100);
    if (sub_100019D44(v28, 1, v18) == 1)
    {
      sub_10000D7B4((uint64_t)v3, &qword_1000D1100);
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v46, v18);
      return;
    }
  }
  else
  {
    v29 = v45;
    sub_10000D74C((uint64_t)v3, (uint64_t)v45, &qword_1000D1100);
    if (sub_100019D44(v28, 1, v18) != 1)
    {
      v30 = v0;
      v31 = v42;
      v42(v22, (_BYTE *)v28, v18);
      sub_1000040A8(&qword_1000D1168, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v22, v18, v32);
      v33 = v29;
      v34 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
      v34(v22, v18);
      sub_10000D7B4((uint64_t)v15, &qword_1000D1100);
      v34(v33, v18);
      sub_10000D7B4((uint64_t)v3, &qword_1000D1100);
      if ((v40 & 1) != 0)
      {
        v34(v46, v18);
        return;
      }
      goto LABEL_13;
    }
    sub_10000D7B4((uint64_t)v15, &qword_1000D1100);
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v29, v18);
  }
  v30 = v0;
  sub_10000D7B4((uint64_t)v3, &qword_1000D2950);
  v31 = v42;
LABEL_13:
  if (*(_BYTE *)(v30 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) == 1)
    sub_1000524A8();
  v35 = (uint64_t)v43;
  v31(v43, v46, v18);
  sub_100015D74(v35, 0, 1, v18);
  v36 = v35;
  v37 = (uint64_t)v44;
  sub_1000123CC(v36, (uint64_t)v44, &qword_1000D1100);
  v38 = v41;
  swift_beginAccess(v41, v47, 33, 0);
  sub_10005BEC0(v37, v38);
  swift_endAccess(v47);
}

uint64_t sub_100051518@<X0>(_QWORD *a1@<X8>)
{
  return sub_100051ADC((uint64_t)&unk_100099F70, (uint64_t)&unk_10009A088, a1);
}

void sub_10005152C(uint64_t a1)
{
  sub_1000517D8(a1, &qword_1000D1100, (uint64_t)&unk_100099F70, (uint64_t)&unk_10009A088, (void (*)(uint64_t))sub_100051084);
}

void sub_100051550(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_100012E2C(&qword_1000D1100);
  sub_100018044();
  __chkstk_darwin(v6);
  sub_10001827C();
  v7 = OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges;
  *(_BYTE *)(v2 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) = a2;
  v8 = sub_100026B08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v3, a1, v8);
  sub_10005E6E4(v3);
  sub_10005152C(v3);
  *(_BYTE *)(v2 + v7) = 1;
  sub_100026B34();
}

void sub_1000515E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for RootNavigationDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C((uint64_t *)&unk_1000D4470);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for AutoShortcutApp(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10009A060);
  v13 = swift_getKeyPath(&unk_10009A1A0);
  static Published.subscript.getter(v7, v0, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  if (sub_100019D44((uint64_t)v7, 1, v8) == 1)
  {
    sub_10000D7B4((uint64_t)v7, (uint64_t *)&unk_1000D4470);
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v11, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for RootNavigationDestination.autoShortcuts(_:), v1);
    sub_1000524A8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1000517A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_100051ADC((uint64_t)&unk_10009A060, (uint64_t)&unk_10009A1A0, a1);
}

void sub_1000517B4(uint64_t a1)
{
  sub_1000517D8(a1, (uint64_t *)&unk_1000D4470, (uint64_t)&unk_10009A060, (uint64_t)&unk_10009A1A0, (void (*)(uint64_t))sub_1000515E0);
}

void sub_1000517D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;

  sub_100012E2C(a2);
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100018470();
  KeyPath = swift_getKeyPath(a3);
  v14 = swift_getKeyPath(a4);
  sub_10000D74C(a1, v6, a2);
  sub_100042DC8();
  v15 = static Published.subscript.setter(v6, v5, KeyPath, v14);
  a5(v15);
  sub_10000D7B4(a1, a2);
  sub_100026D40();
}

uint64_t sub_100051880()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath(&unk_10009A158);
  KeyPath = swift_getKeyPath(&unk_10009A180);
  sub_10005E588(KeyPath, v1);
  sub_100042AE0();
  sub_100042CE0();
  return v3;
}

uint64_t sub_1000518D4()
{
  uint64_t v0;

  swift_getKeyPath(&unk_10009A158);
  swift_getKeyPath(&unk_10009A180);
  v0 = sub_100042DC8();
  return sub_10005E668(v0);
}

uint64_t sub_10005192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for EditMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate);
  if (result)
  {
    v6 = result;
    KeyPath = swift_getKeyPath(&unk_100099FC8);
    v8 = swift_getKeyPath(&unk_10009A138);
    static Published.subscript.getter(v4, v0, KeyPath, v8);
    swift_release(KeyPath);
    swift_release(v8);
    sub_10007CBB4();
    swift_unknownObjectRelease(v6);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_100051A18@<X0>(_QWORD *a1@<X8>)
{
  return sub_100051ADC((uint64_t)&unk_100099FC8, (uint64_t)&unk_10009A138, a1);
}

void sub_100051A2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for EditMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10001827C();
  swift_getKeyPath(&unk_100099FC8);
  swift_getKeyPath(&unk_10009A138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  sub_100042DC8();
  sub_10005E63C();
  sub_10005192C();
  sub_100026C54(a1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_100026D40();
}

uint64_t sub_100051AC8@<X0>(_QWORD *a1@<X8>)
{
  return sub_100051ADC((uint64_t)&unk_100099FF0, (uint64_t)&unk_10009A018, a1);
}

uint64_t sub_100051ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  sub_100027204();
  return sub_10005E5CC(v7);
}

void sub_100051B2C(uint64_t a1)
{
  uint64_t v2;

  sub_100012E2C(&qword_1000D1100);
  sub_100018044();
  __chkstk_darwin(v2);
  sub_10001827C();
  swift_getKeyPath(&unk_100099FF0);
  swift_getKeyPath(&unk_10009A018);
  sub_10005E71C();
  sub_100042DC8();
  sub_10005E63C();
  sub_10000D7B4(a1, &qword_1000D1100);
  sub_100026B34();
}

void sub_100051BB0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  swift_getKeyPath(&unk_10009A0F0);
  swift_getKeyPath(&unk_10009A118);
  v2 = sub_10005E68C();
  static Published.subscript.getter(v5, v2, v3, v4);
  sub_100042CE0();
  sub_100027204();
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  sub_10005E6FC();
}

void sub_100051C1C(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[72];

  swift_getKeyPath(&unk_10009A0F0);
  swift_getKeyPath(&unk_10009A118);
  sub_1000123CC(a1, (uint64_t)v3, &qword_1000D24E8);
  v2 = sub_100042DC8();
  sub_10005E668(v2);
  sub_10005E6FC();
}

double sub_100051C78()
{
  uint64_t KeyPath;
  uint64_t v1;
  double v3;

  swift_getKeyPath(&unk_10009A0A8);
  KeyPath = swift_getKeyPath(&unk_10009A0D0);
  sub_10005E588(KeyPath, v1);
  sub_100042AE0();
  sub_100042CE0();
  return v3;
}

uint64_t sub_100051CCC(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double v6;

  KeyPath = swift_getKeyPath(&unk_10009A0A8);
  v4 = swift_getKeyPath(&unk_10009A0D0);
  v6 = a1;
  sub_100042DC8();
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void sub_100051D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, _QWORD);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, _QWORD);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  void *v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  _QWORD v151[4];
  __int128 v152;
  __int128 v153;
  uint64_t v154;

  sub_100018190();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v144 = v24;
  v141 = v25;
  v142 = v26;
  v139 = v27;
  v140 = v28;
  v138 = v29;
  v148 = v30;
  v31 = sub_100012E2C(&qword_1000D2888);
  v32 = *(_QWORD *)(v31 - 8);
  v145 = v31;
  v146 = v32;
  sub_100018044();
  __chkstk_darwin(v33);
  sub_100018548();
  v143 = v34;
  v35 = sub_100012E2C(&qword_1000D2890);
  sub_100019DD8(v35, (uint64_t)&a17);
  v136 = v36;
  sub_100018044();
  __chkstk_darwin(v37);
  sub_100018548();
  sub_10005E6D8(v38);
  v39 = sub_100012E2C(&qword_1000D2898);
  sub_100019DD8(v39, (uint64_t)&a14);
  v135 = v40;
  sub_100018044();
  __chkstk_darwin(v41);
  sub_100018548();
  sub_10005E6D8(v42);
  v43 = sub_100012E2C(&qword_1000D28A0);
  sub_100019DD8(v43, (uint64_t)&a9);
  v132 = v44;
  sub_100018044();
  __chkstk_darwin(v45);
  sub_100018548();
  sub_10005E6D8(v46);
  v47 = type metadata accessor for EditMode(0);
  sub_100019DD8(v47, (uint64_t)&v153 + 8);
  v127 = v48;
  sub_100018044();
  __chkstk_darwin(v49);
  sub_10004248C();
  v129 = v50;
  __chkstk_darwin(v51);
  sub_10005E6D8((uint64_t)&v121 - v52);
  v53 = sub_100012E2C(&qword_1000D28A8);
  sub_100019DD8(v53, (uint64_t)&v152);
  v126 = v54;
  sub_100018044();
  __chkstk_darwin(v55);
  sub_100018548();
  sub_10005E6D8(v56);
  v57 = sub_100012E2C((uint64_t *)&unk_1000D4470);
  sub_100019DD8(v57, (uint64_t)&v150);
  sub_100018044();
  __chkstk_darwin(v58);
  sub_10004248C();
  v122 = v59;
  __chkstk_darwin(v60);
  v62 = (char *)&v121 - v61;
  v149 = sub_100012E2C(&qword_1000D28B0);
  v134 = *(_QWORD *)(v149 - 8);
  v63 = v134;
  __chkstk_darwin(v149);
  sub_100019D7C();
  v66 = v65 - v64;
  v67 = sub_100012E2C(&qword_1000D1100);
  v147 = v67;
  sub_100018044();
  __chkstk_darwin(v68);
  sub_100026F1C();
  v71 = v69 - v70;
  __chkstk_darwin(v72);
  v74 = (char *)&v121 - v73;
  v75 = v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__currentDestination;
  v133 = v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__currentDestination;
  v76 = sub_100026B08();
  v77 = sub_10005E810();
  v121 = v71;
  sub_10000D74C(v77, v71, &qword_1000D1100);
  Published.init(initialValue:)(v71, v67);
  sub_10000D7B4((uint64_t)v74, &qword_1000D1100);
  v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32);
  v123(v75, v66, v149);
  *(_BYTE *)(v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) = 1;
  v125 = v76;
  sub_100015D74(v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination, 1, 1, v76);
  v78 = type metadata accessor for AutoShortcutApp(0);
  sub_100026B84((uint64_t)v62, v79, v80, v78);
  v81 = v122;
  sub_10000D74C((uint64_t)v62, v122, (uint64_t *)&unk_1000D4470);
  Published.init(initialValue:)(v81, v124);
  sub_10000D7B4((uint64_t)v62, (uint64_t *)&unk_1000D4470);
  v82 = sub_10005E600();
  sub_10005E70C(v82, v83, v84);
  v85 = v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__editMode;
  v86 = v127;
  v87 = v128;
  v88 = v130;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v127 + 104))(v128, enum case for EditMode.inactive(_:), v130);
  v89 = v86;
  v90 = v129;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v129, v87, v88);
  v91 = v131;
  Published.init(initialValue:)(v90, v88);
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
  sub_10005E70C(v85, v91, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v132 + 32));
  v92 = v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__presentConfirmationDestination;
  v93 = sub_10005E810();
  v94 = v121;
  sub_10000D74C(v93, v121, &qword_1000D1100);
  sub_10005E798();
  sub_10005E804();
  v123(v92, v66, v149);
  v154 = 0;
  v152 = 0u;
  v153 = 0u;
  memset(v151, 0, sizeof(v151));
  v95 = sub_100012E2C(&qword_1000D24E8);
  sub_10005E7E8((uint64_t)v151, v95);
  v96 = sub_10005E600();
  sub_10005E70C(v96, v97, v98);
  v151[0] = 0;
  sub_10005E7E8((uint64_t)v151, (uint64_t)&type metadata for CGFloat);
  v99 = sub_10005E600();
  sub_10005E70C(v99, v100, v101);
  v102 = v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate;
  *(_QWORD *)(v102 + 8) = 0;
  swift_unknownObjectWeakInit(v102, 0);
  *(_QWORD *)(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_cancellables) = &_swiftEmptySetSingleton;
  v103 = v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_style;
  v104 = type metadata accessor for SidebarStyle(0);
  v137 = *(_QWORD *)(v104 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16))(v103, v148, v104);
  v105 = v138;
  *(_QWORD *)(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database) = v138;
  *(_QWORD *)(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_sections) = v139;
  sub_10005E630(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__autoShortcutsAppsDataSource, (uint64_t)v151);
  v106 = v140;
  v150 = v140;
  v107 = type metadata accessor for AutoShortcutsAppsDataSource(0);
  v139 = v105;
  v108 = v106;
  Published.init(initialValue:)(&v150, v107);
  sub_10005E7C4();
  *(_BYTE *)(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact) = v141;
  v109 = v125;
  v110 = *(_QWORD *)(v125 - 8);
  v111 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v74, v142, v125);
  sub_100015D74((uint64_t)v74, 0, 1, v109);
  v112 = v133;
  sub_10005E630(v133, (uint64_t)v151);
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v112, v149);
  sub_10000D74C((uint64_t)v74, v94, &qword_1000D1100);
  sub_10005E798();
  sub_10005E804();
  sub_10005E7C4();
  v113 = v144;
  *(_QWORD *)(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shortcutMoveService) = v144;
  v114 = swift_retain(v113);
  v115 = v143;
  dispatch thunk of AutoShortcutsAppsDataSource.$autoShortcutApps.getter(v114);
  sub_100004038(&qword_1000D28B8, &qword_1000D2888);
  v116 = sub_10005E6CC();
  swift_retain(v116);
  v117 = v145;
  Publisher<>.sink(receiveValue:)(sub_100014648, v23, v145, v108);
  v118 = sub_10005E6CC();
  v119 = swift_release(v118);
  (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v115, v117, v119);
  v120 = v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_cancellables;
  sub_10005E630(v23 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_cancellables, (uint64_t)v151);
  AnyCancellable.store(in:)(v120);
  sub_10005E7C4();

  swift_release(v113);
  sub_100019D9C();
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v109);
  sub_100026C54(v148, *(uint64_t (**)(uint64_t, uint64_t))(v137 + 8));
  sub_100018094();
}

void sub_1000524A8()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_10005E7FC(OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate))
  {
    v1 = sub_10005E6CC();
    sub_10007C96C(v1);
    sub_10005E658(v0);
  }
  else
  {
    sub_100018188();
  }
}

void sub_1000524E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t (**v32)(_QWORD, _QWORD);
  int v33;
  uint64_t v34;
  uint64_t (**v35)(_QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  unint64_t v59;
  void *v60;
  id v61;
  void *v62;
  char v63;
  id v64;
  void *v65;
  char v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  char v71;
  void *v72;
  Class isa;
  uint64_t v74;
  NSIndexSet *v75;
  void *v76;
  void *v77;
  unsigned int v78;
  void (*v79)(uint64_t, uint64_t);
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD v109[3];
  uint64_t v110;
  unint64_t v111;
  id v112[3];

  sub_100018190();
  v100 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v96 = type metadata accessor for Logger(0);
  v95 = *(_QWORD *)(v96 - 8);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018548();
  v97 = v10;
  v11 = sub_100026B08();
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100026F1C();
  v15 = (uint64_t *)(v13 - v14);
  __chkstk_darwin(v16);
  v18 = (char *)&v94 - v17;
  v19 = type metadata accessor for IndexSet(0);
  v98 = *(_QWORD *)(v19 - 8);
  v99 = v19;
  sub_100018044();
  __chkstk_darwin(v20);
  sub_100019D7C();
  v23 = v22 - v21;
  sub_100052F84();
  v107 = v24;
  ObjectType = swift_getObjectType(v4);
  v26 = dispatch thunk of SidebarSection.destinations.getter(ObjectType, v2);
  v27 = _swiftEmptyArrayStorage;
  v111 = (unint64_t)_swiftEmptyArrayStorage;
  v28 = *(_QWORD *)(v26 + 16);
  v103 = v23;
  if (v28)
  {
    v101 = v26;
    v102 = v8;
    v104 = v6;
    v29 = v26 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v30 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    LODWORD(v106) = enum case for RootNavigationDestination.folder(_:);
    v32 = (uint64_t (**)(_QWORD, _QWORD))v12;
    v105 = v30;
    do
    {
      v31(v18, v29, v11);
      v31((char *)v15, (unint64_t)v18, v11);
      v33 = ((uint64_t (**)(uint64_t *, uint64_t))v32)[11](v15, v11);
      if (v33 == (_DWORD)v106)
      {
        sub_100027434(v32[12]);
        v34 = *v15;
        v35 = v32;
        v36 = ((uint64_t (**)(char *, uint64_t))v32)[1](v18, v11);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36, v37, v38, v39, v40, v41, v42, v43);
        v45 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v44 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v45 >= v44 >> 1)
          sub_100026AD8(v45 + 1, v44);
        v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v34);
        specialized Array._endMutation()(v46, v47);
        v30 = v105;
        v32 = v35;
      }
      else
      {
        v48 = (void (*)(uint64_t *, uint64_t))v32[1];
        v48(v15, v11);
        v48((uint64_t *)v18, v11);
      }
      v29 += v30;
      --v28;
    }
    while (v28);
    v27 = (_QWORD *)v111;
    v6 = v104;
    v26 = v101;
    v8 = v102;
  }
  swift_bridgeObjectRelease(v26);
  v111 = (unint64_t)v27;
  v49 = sub_100012E2C(&qword_1000D2B38);
  sub_100004038(&qword_1000D2B40, &qword_1000D2B38);
  v51 = MutableCollection.move(fromOffsets:toOffset:)(v8, v6, v49, v50);
  IndexSet.init()(v51);
  v52 = v111;
  if (v111 >> 62)
    goto LABEL_56;
  v53 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    v54 = v107;
    if (v53)
    {
      if (v107 >> 62)
      {
        sub_10005E764();
        v55 = sub_10005E714();
        sub_100030628();
      }
      else
      {
        v55 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v56 = 0;
      v101 = v52 + 32;
      v102 = v52 & 0xFFFFFFFFFFFFFF8;
      v105 = v52 & 0xC000000000000001;
      v106 = v54 & 0xC000000000000001;
      v104 = v53;
      while (1)
      {
        if (v105)
        {
          v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v56, v52);
        }
        else
        {
          if (v56 >= *(_QWORD *)(v102 + 16))
            goto LABEL_55;
          v57 = *(id *)(v101 + 8 * v56);
        }
        v58 = v57;
        v59 = v56 + 1;
        if (__OFADD__(v56, 1))
        {
          __break(1u);
          goto LABEL_54;
        }
        if (v55)
          break;

LABEL_30:
        ++v56;
        if (v59 == v53)
          goto LABEL_46;
      }
      if (v106)
      {
        sub_10005E764();
        v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v54);
      }
      else
      {
        v60 = *(void **)(v54 + 32);
        sub_10005E764();
        v61 = v60;
      }
      v62 = v61;
      sub_100003B2C(0, &qword_1000D1170, WFWorkflowCollection_ptr);
      v63 = sub_10005E7BC((uint64_t)v62);

      if ((v63 & 1) != 0)
        goto LABEL_25;
      if (v55 != 1)
      {
        if (v106)
          v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v107);
        else
          v64 = *(id *)(v107 + 40);
        v65 = v64;
        v66 = sub_10005E7BC((uint64_t)v64);

        if ((v66 & 1) != 0)
        {
LABEL_25:
          v54 = v107;
          sub_100030628();
          IndexSet.insert(_:)(v56);

LABEL_29:
          v53 = v104;
          goto LABEL_30;
        }
        if (v55 != 2)
        {
          v67 = 6;
          while (1)
          {
            v68 = v106
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67 - 4, v107)
                : *(id *)(v107 + 8 * v67);
            v69 = v68;
            v70 = v67 - 3;
            if (__OFADD__(v67 - 4, 1))
              break;
            v71 = sub_10005E7BC((uint64_t)v68);

            if ((v71 & 1) != 0)
              goto LABEL_25;
            ++v67;
            if (v70 == v55)
              goto LABEL_28;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          sub_10005E61C();
          v53 = sub_10005E714();
          sub_100027154();
          continue;
        }
      }
LABEL_28:

      v54 = v107;
      sub_100030628();
      goto LABEL_29;
    }
    break;
  }
LABEL_46:
  sub_100027154();
  v72 = *(void **)(v100 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database);
  sub_100003B2C(0, &qword_1000D1170, WFWorkflowCollection_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_100030628();
  v74 = v103;
  IndexSet._bridgeToObjectiveC()(v75);
  v77 = v76;
  v112[0] = 0;
  v78 = objc_msgSend(v72, "moveCollections:toIndexes:error:", isa, v76, v112);

  if (v78)
  {
    v79 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v80 = v112[0];
    v79(v74, v99);
  }
  else
  {
    v81 = v112[0];
    v82 = sub_10005E6CC();
    v83 = _convertNSErrorToError(_:)(v82);

    swift_willThrow(v84);
    v85 = v97;
    static WFLog.subscript.getter(WFLogCategoryGeneral);
    swift_errorRetain(v83);
    v86 = swift_errorRetain(v83);
    v87 = Logger.logObject.getter(v86);
    v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)sub_100026B24(12);
      v90 = (void *)sub_100026B24(32);
      v112[0] = v90;
      *(_DWORD *)v89 = 136446210;
      swift_getErrorValue(v83, &v110, v109);
      v91 = Error.localizedDescription.getter(v109[1], v109[2]);
      v93 = v92;
      v108 = sub_100015868(v91, v92, (uint64_t *)v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109, v89 + 4, v89 + 12);
      swift_bridgeObjectRelease(v93);
      sub_10005E650();
      sub_10005E650();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Unable to move folders: %{public}s", v89, 0xCu);
      swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
      sub_100026ACC((uint64_t)v90);
      sub_100026ACC((uint64_t)v89);

    }
    else
    {

      sub_10005E650();
      sub_10005E650();
    }
    sub_10005E650();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v85, v96);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v74, v99);
  }
  sub_100018094();
}

void sub_100052BB8()
{
  uint64_t v0;
  void *v1;

  if (sub_10005E7FC(OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate))
  {
    v1 = (void *)sub_10005E6CC();
    sub_10007CB68(v1);
    sub_10005E658(v0);
  }
  else
  {
    sub_100018188();
  }
}

void sub_100052BF4(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  Swift::OpaquePointer v6;

  v4 = sub_10005E7FC(OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate);
  if (v4)
  {
    v5 = v4;
    v6._rawValue = a1;
    sub_10007C9E4(v6, a2 & 1);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100018388();
  }
}

uint64_t sub_100052C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  Swift::Int v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[8];
  uint64_t v37[8];
  char v38[8];
  uint64_t v39;
  char v40[8];
  uint64_t v41;
  unint64_t v42;

  if (swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate]))
  {
    if ((unint64_t)a1 >> 62)
      goto LABEL_21;
    v42 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v42 > 1)
    {
      sub_10005E67C();
      while (1)
      {
        v5 = 0;
        v6 = *(void **)&v2[OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database];
        v7 = a1 & 0xC000000000000001;
        a2 = 4;
        v8 = a1;
        while (1)
        {
          v9 = v7
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a2 - 4, a1)
             : (char *)*(id *)(a1 + 8 * a2);
          v2 = v9;
          a1 = a2 - 3;
          if (__OFADD__(a2 - 4, 1))
            break;
          v10 = objc_msgSend(v6, "sortedVisibleWorkflowsInCollection:", v9);
          v11 = objc_msgSend(v10, "count");

          v12 = __OFADD__(v5, v11);
          v5 += (Swift::Int)v11;
          if (v12)
            goto LABEL_20;
          ++a2;
          v13 = v5 > 1 || a1 == v42;
          a1 = v8;
          if (v13)
            goto LABEL_16;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        v24 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v25 = _CocoaArrayWrapper.endIndex.getter(v24);
        swift_bridgeObjectRelease(a1);
        if (v25 <= 1)
          break;
        sub_10005E67C();
        v42 = _CocoaArrayWrapper.endIndex.getter(v24);
        if (!v42)
        {
          v5 = 0;
LABEL_16:
          swift_bridgeObjectRelease(a1);
          sub_10007CA70((Swift::OpaquePointer)a1, v5, 0, v36);
          v42 = v36[0];
          v14 = v36[2];
          v35 = v36[1];
          v15 = v36[3];
          v16 = v36[4];
          v17 = v36[5];
          v18 = v36[6];
          v19 = v36[7];
          sub_1000123CC((uint64_t)v36, (uint64_t)v38, &qword_1000D2B28);
          if (v39)
          {
            result = sub_100027130();
            a2 = v34;
            goto LABEL_34;
          }
LABEL_35:
          v31 = sub_10005BD74();
          sub_100042540((uint64_t)&type metadata for SidebarView.SidebarError, v31);
          *v32 = 1;
          swift_willThrow(v33);
          return sub_100027130();
        }
      }
    }
    sub_100042DC8();
    result = (uint64_t)sub_100050828(a1, (uint64_t)v2);
    v26 = *(_QWORD *)(result + 16);
    if (v26)
    {
      v27 = 0;
      v15 = 0;
      do
      {
        v28 = *(_QWORD *)(result + 8 * v27 + 32);
        v12 = __OFADD__(v15, v28);
        v15 += v28;
        if (v12)
        {
          __break(1u);
          return result;
        }
        ++v27;
      }
      while (v26 != v27);
      sub_100018420();
      if (!v15)
      {
        result = sub_10005E6F4();
        v29 = 0;
        v30 = 0;
        v14 = 0;
        goto LABEL_38;
      }
      sub_10007CA70((Swift::OpaquePointer)a1, v15, 1, v37);
      v42 = v37[0];
      v14 = v37[2];
      v35 = v37[1];
      v15 = v37[3];
      v16 = v37[4];
      v17 = v37[5];
      v18 = v37[6];
      v19 = v37[7];
      sub_1000123CC((uint64_t)v37, (uint64_t)v40, &qword_1000D2B28);
      if (!v41)
        goto LABEL_35;
      result = sub_100027130();
LABEL_34:
      v29 = v42;
      v30 = v35;
    }
    else
    {
      sub_10005E6F4();
      result = sub_100018420();
      v29 = 0;
      v30 = 0;
      v14 = 0;
      v15 = 0;
LABEL_38:
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
    }
    *(_QWORD *)a2 = v29;
    *(_QWORD *)(a2 + 8) = v30;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_QWORD *)(a2 + 40) = v17;
    *(_QWORD *)(a2 + 48) = v18;
    *(_QWORD *)(a2 + 56) = v19;
  }
  else
  {
    v21 = sub_10005BD74();
    sub_100042540((uint64_t)&type metadata for SidebarView.SidebarError, v21);
    *v22 = 0;
    return swift_willThrow(v23);
  }
  return result;
}

void sub_100052F84()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(id *, char *, uint64_t);
  int v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;

  sub_100018190();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_100026B08();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10001827C();
  swift_unknownObjectRetain(v4);
  v9 = sub_1000509E8(v6, v4, v2);
  v10 = v9[2];
  if (v10)
  {
    v27 = v9;
    v11 = (char *)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v12 = *(_QWORD *)(v8 + 72);
    v13 = *(void (**)(id *, char *, uint64_t))(v8 + 16);
    v14 = enum case for RootNavigationDestination.folder(_:);
    v28 = enum case for RootNavigationDestination.folder(_:);
    do
    {
      v13(v0, v11, v7);
      if ((*(unsigned int (**)(id *, uint64_t))(v8 + 88))(v0, v7) == v14)
      {
        sub_10005E530(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
        v15 = *v0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15, v16, v17, v18, v19, v20, v21, v22);
        v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          sub_100026AD8(v24 + 1, v23);
        v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v15);
        specialized Array._endMutation()(v25, v26);

        v14 = v28;
      }
      else
      {
        sub_10005E530(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      }
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    swift_bridgeObjectRelease(v9);
  }
  sub_100018094();
}

void sub_1000530EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[64];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  sub_100018190();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for Logger(0);
  __chkstk_darwin(v5);
  sub_10001827C();
  sub_100012E2C(&qword_1000D1100);
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100018470();
  sub_100052C4C((uint64_t)v4, (uint64_t)v8);
  sub_1000123CC((uint64_t)v8, (uint64_t)&v9, &qword_1000D2B28);
  if (v10)
  {
    v15[0] = v4;
    v15[1] = v9;
    v16 = v11;
    v17 = v12;
    v15[2] = v10;
    v18 = v13;
    v19 = v14;
    sub_10005E764();
    sub_100051C1C((uint64_t)v15);
    v7 = sub_100026B08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v0, v2, v7);
    sub_10005E6E4(v0);
    sub_100051B2C(v0);
  }
  else
  {
    sub_100052BF4(v4, 0);
  }
  sub_100018094();
}

void sub_100053368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_100018190();
  v52 = v1;
  v53 = v2;
  v4 = v3;
  v6 = v5;
  v7 = sub_10005E660();
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  v8 = *(_QWORD *)(v48 + 64);
  __chkstk_darwin(v7);
  v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012E2C(&qword_1000D10D0);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018548();
  v50 = v10;
  v51 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v6 >> 62))
  {
    v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v11)
      goto LABEL_3;
LABEL_15:
    sub_100027154();
    v22 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_19;
LABEL_16:
    if ((v22 & 0x4000000000000000) == 0)
    {
      if (!*(_QWORD *)(v22 + 16))
      {
LABEL_20:
        swift_release(v22);
        return;
      }
LABEL_18:
      v23 = type metadata accessor for TaskPriority(0);
      sub_100026B84(v50, v24, v25, v23);
      v26 = v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate);
      v45 = *(_QWORD *)(v26 + 8);
      v46 = Strong;
      v28 = v47;
      v29 = v48;
      v30 = v0;
      v31 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v4, v49);
      type metadata accessor for MainActor(0);
      v32 = swift_retain(v0);
      v33 = static MainActor.shared.getter(v32);
      v34 = *(unsigned __int8 *)(v29 + 80);
      v35 = (v34 + 40) & ~v34;
      v36 = (v8 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
      v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
      v38 = (char *)swift_allocObject(&unk_1000C2758, v37 + 16, v34 | 7);
      *((_QWORD *)v38 + 2) = v33;
      *((_QWORD *)v38 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v38 + 4) = v22;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v38[v35], v28, v31);
      *(_QWORD *)&v38[v36] = v30;
      v39 = (uint64_t *)&v38[v37];
      v40 = v45;
      *v39 = v46;
      v39[1] = v40;
      v41 = sub_10005F17C(v50, (uint64_t)&unk_1000D2AD0, (uint64_t)v38);
      swift_release(v41);
      sub_100018094();
      return;
    }
LABEL_19:
    v42 = sub_10005E7D4();
    v43 = _CocoaArrayWrapper.endIndex.getter(v42);
    sub_10005E7CC();
    if (!v43)
      goto LABEL_20;
    goto LABEL_18;
  }
  sub_10005E61C();
  v11 = sub_10005E714();
  if (!v11)
    goto LABEL_15;
LABEL_3:
  v46 = v0;
  v12 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v12);
  if (v11 >= 1)
  {
    v14 = ObjCClassFromMetadata;
    v45 = v4;
    for (i = 0; i != v11; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v16 = *(id *)(v6 + 8 * i + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, "canLoadObjectOfClass:", v14);
      if ((_DWORD)v18)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)(v51 + 16));
        v19 = sub_1000184E0();
        v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v20);
        specialized ContiguousArray._endMutation()(v21);
      }
      else
      {

      }
    }
    sub_100027154();
    v22 = v51;
    v4 = v45;
    v0 = v46;
    if ((v51 & 0x8000000000000000) != 0)
      goto LABEL_19;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_100053638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = type metadata accessor for RootNavigationDestination.DropBehavior(0);
  v8[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[15] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[16] = v11;
  v8[17] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[18] = v12;
  v8[19] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12);
  v8[20] = v13;
  v8[21] = v14;
  return swift_task_switch(sub_1000536DC, v13, v14);
}

uint64_t sub_1000536DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[9];
  v2 = sub_100012E2C(&qword_1000D2AD8);
  v0[22] = static MainActor.shared.getter(v2);
  v3 = swift_task_alloc(32);
  v0[23] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  sub_100012E2C(&qword_1000D2AF0);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[24] = v4;
  *v4 = v0;
  v4[1] = sub_1000537A8;
  v5 = sub_10005E5F0();
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v5);
}

uint64_t sub_1000537A8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  v1 = (_QWORD *)*v0;
  v3 = v1;
  sub_10005E614(v1[24], &v3);
  sub_100042AE0();
  sub_100042804();
  return swift_task_switch(sub_100053804, v1[20], v1[21]);
}

uint64_t sub_100053804()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[14];
  v4 = v0[15];
  v19 = v0[12];
  v20 = v0[13];
  v5 = v0[10];
  v18 = v0[11];
  swift_release(v0[19]);
  v17 = v0[8];
  v6 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = (v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_1000C2780, v11 + 16, v7 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v12 + v8, v1, v3);
  *(_QWORD *)(v12 + v9) = v18;
  *(_QWORD *)(v12 + v10) = v17;
  v13 = (_QWORD *)(v12 + v11);
  *v13 = v19;
  v13[1] = v20;
  v0[6] = sub_10005BB10;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000725C0;
  v0[5] = &unk_1000C2798;
  v14 = _Block_copy(v0 + 2);
  v15 = v0[7];
  swift_unknownObjectRetain(v19);
  swift_retain(v18);
  objc_msgSend(v6, "performBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

  sub_100042804();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1000539A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100012E2C(&qword_1000D10D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v4);
  v3[15] = swift_task_alloc(v4);
  v5 = sub_100012E2C(&qword_1000D2AF8);
  v3[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[17] = v6;
  v3[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v3[19] = v7;
  v3[20] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7);
  v3[21] = v8;
  v3[22] = v9;
  return swift_task_switch(sub_100053A74, v8, v9);
}

uint64_t sub_100053A74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v1);
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
    v28 = **(_QWORD **)(v0 + 96);
    v29 = sub_100012E2C(&qword_1000D2AD8);
    v30 = TaskGroup.makeAsyncIterator()(v28, v29);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v30);
    v31 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 192) = v31;
    *v31 = v0;
    v31[1] = sub_100053D8C;
    v32 = sub_10005E5F0();
    return TaskGroup.Iterator.next(isolation:)(v32);
  }
  swift_bridgeObjectRetain(v1);
  result = sub_10005E714();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v34 = v1 & 0xC000000000000001;
    v33 = *(_QWORD *)(v0 + 104) + 32;
    v35 = v2;
    do
    {
      if (v34)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 104));
      else
        v5 = *(id *)(v33 + 8 * v4);
      v6 = v5;
      v8 = *(_QWORD *)(v0 + 112);
      v7 = *(_QWORD *)(v0 + 120);
      v9 = type metadata accessor for TaskPriority(0);
      sub_100015D74(v7, 1, 1, v9);
      v10 = (_QWORD *)swift_allocObject(&unk_1000C27D0, 40, 7);
      v10[2] = 0;
      v11 = v10 + 2;
      v10[3] = 0;
      v10[4] = v6;
      sub_10000D74C(v7, v8, &qword_1000D10D0);
      LODWORD(v8) = sub_100019D44(v8, 1, v9);
      v12 = v6;
      v13 = v12;
      v14 = *(_QWORD *)(v0 + 112);
      if ((_DWORD)v8 == 1)
      {
        sub_10000D7B4(*(_QWORD *)(v0 + 112), &qword_1000D10D0);
        v15 = 0;
      }
      else
      {
        v16 = TaskPriority.rawValue.getter(v12);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v14, v9);
        v15 = v16;
      }
      v17 = *v11;
      if (*v11)
      {
        ObjectType = swift_getObjectType(*v11);
        swift_unknownObjectRetain(v17);
        v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
        v21 = v20;
        swift_unknownObjectRelease(v17);
      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      v22 = **(_QWORD **)(v0 + 96);
      v23 = swift_allocObject(&unk_1000C27F8, 32, 7);
      *(_QWORD *)(v23 + 16) = &unk_1000D2B10;
      *(_QWORD *)(v23 + 24) = v10;
      v24 = sub_100012E2C(&qword_1000D2AD8);
      v25 = v21 | v19;
      if (v21 | v19)
      {
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        v25 = v0 + 16;
        *(_QWORD *)(v0 + 32) = v19;
        *(_QWORD *)(v0 + 40) = v21;
      }
      ++v4;
      v26 = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v25;
      *(_QWORD *)(v0 + 64) = v22;
      v27 = swift_task_create(v15 | 0x3100, v0 + 48, v24, &unk_1000D2B18, v23);
      swift_release(v27);
      sub_10000D7B4(v26, &qword_1000D10D0);

    }
    while (v35 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100053D8C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  v1 = (_QWORD *)*v0;
  v3 = v1;
  sub_10005E614(v1[24], &v3);
  sub_100019D9C();
  return swift_task_switch(sub_100053DD8, v1[21], v1[22]);
}

uint64_t sub_100053DD8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v2 = *(void **)(v1 + 80);
  if (v2 == (void *)1)
  {
    v18 = *(_QWORD *)(v1 + 144);
    v19 = *(_QWORD *)(v1 + 120);
    v20 = *(_QWORD *)(v1 + 112);
    v21 = *(_QWORD **)(v1 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 136) + 8))(v18, *(_QWORD *)(v1 + 128));
    sub_100019D9C();
    *v21 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    if (v2)
    {
      v3 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3, v4, v5, v6, v7, v8, v9, v10);
      v12 = *(_QWORD *)((*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)((*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        sub_100026AD8(v12 + 1, v11);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v3);
      specialized Array._endMutation()(v13, v14);
      sub_10000F634(v2);
    }
    *(_QWORD *)(v1 + 184) = static MainActor.shared.getter(a1);
    v15 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v1 + 192) = v15;
    *v15 = v1;
    v15[1] = sub_100053D8C;
    v16 = sub_10005E5F0();
    return TaskGroup.Iterator.next(isolation:)(v16);
  }
}

uint64_t sub_100053F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100053F28, 0, 0);
}

uint64_t sub_100053F28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v3;
  v4 = sub_100012E2C(&qword_1000D2AD8);
  *v3 = v0;
  v3[1] = sub_100053FCC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0[2], 0, 0, 0xD00000000000001BLL, 0x800000010009DA20, sub_10005BCE4, v2, v4);
}

uint64_t sub_100053FCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_10005E614(*(_QWORD *)(v3 + 40), &v3);
  sub_100042804();
  return sub_100026EB8(*(uint64_t (**)(void))(v1 + 8));
}

void sub_10005400C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v4 = sub_100012E2C(&qword_1000D2B20);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1000C2820, v10 + v6, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10005BD34;
  v15 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100050D08;
  aBlock[3] = &unk_1000C2838;
  v12 = _Block_copy(aBlock);
  v13 = objc_msgSend(a2, "loadObjectOfClass:completionHandler:", ObjCClassFromMetadata, v12, swift_release(v15).n128_f64[0]);
  _Block_release(v12);

}

uint64_t sub_100054170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (a1)
  {
    v2 = objc_opt_self(WFWorkflowReference);
    v3 = swift_dynamicCastObjCClass(a1, v2);
    if (v3)
      swift_unknownObjectRetain(a1);
  }
  else
  {
    v3 = 0;
  }
  v6 = v3;
  v4 = sub_100012E2C(&qword_1000D2B20);
  return CheckedContinuation.resume(returning:)(&v6, v4);
}

void sub_1000541F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  Class isa;
  unsigned int v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  _BYTE v41[16];
  id v42;

  v8 = type metadata accessor for Logger(0);
  v38 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = type metadata accessor for RootNavigationDestination.DropBehavior(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (void **)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v16 = (*(uint64_t (**)(void **, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for RootNavigationDestination.DropBehavior.intoCollection(_:))
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v15, v12);
    v17 = *v15;
    LOBYTE(v42) = 1;
    dispatch thunk of ShortcutMoveService.prepend(_:to:source:)(a3, v17, 0x100000000);

LABEL_12:
    if (a4)
      sub_10007CC90();
    return;
  }
  if (v16 == enum case for RootNavigationDestination.DropBehavior.intoCollectionWithType(_:))
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v15, v12);
    v18 = *v15;
    v19 = *(void **)(a2 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database);
    sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v42 = 0;
    v21 = objc_msgSend(v19, "prependReferences:toCollectionWithType:error:", isa, v18, &v42);

    v22 = v42;
    if (v21)
    {
      v23 = v42;

    }
    else
    {
      v37 = v8;
      v24 = v42;
      v25 = _convertNSErrorToError(_:)(v22);

      swift_willThrow(v26);
      static WFLog.subscript.getter(WFLogCategoryGeneral);
      swift_errorRetain(v25);
      v27 = swift_errorRetain(v25);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc(12, -1);
        v36[1] = a3;
        v31 = (uint8_t *)v30;
        v36[0] = swift_slowAlloc(32, -1);
        v42 = (id)v36[0];
        *(_DWORD *)v31 = 136315138;
        swift_getErrorValue(v25, v41, v40);
        v32 = Error.localizedDescription.getter(v40[1], v40[2]);
        v34 = v33;
        v39 = sub_100015868(v32, v33, (uint64_t *)&v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v31 + 4, v31 + 12);
        swift_bridgeObjectRelease(v34);
        swift_errorRelease(v25);
        swift_errorRelease(v25);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to move workflows: %s", v31, 0xCu);
        v35 = v36[0];
        swift_arrayDestroy(v36[0], 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v31, -1, -1);

        swift_errorRelease(v25);
      }
      else
      {

        swift_errorRelease(v25);
        swift_errorRelease(v25);
        swift_errorRelease(v25);

      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v37);
    }
    goto LABEL_12;
  }
  if (v16 != enum case for RootNavigationDestination.DropBehavior.none(_:))
    (*(void (**)(void **, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100054790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for SidebarStyle(0);
  sub_100042914(v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_sections));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shortcutMoveService));
  v2 = sub_100012E2C(&qword_1000D28B0);
  v3 = *(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4 = sub_1000184E0();
  v3(v4);
  sub_10000D7B4(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination, &qword_1000D1100);
  v5 = sub_100012E2C(&qword_1000D28A8);
  sub_10005E46C(v5);
  v6 = sub_100012E2C(&qword_1000D2B48);
  sub_10005E46C(v6);
  v7 = sub_100012E2C(&qword_1000D28A0);
  sub_10005E46C(v7);
  ((void (*)(uint64_t, uint64_t))v3)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__presentConfirmationDestination, v2);
  v8 = sub_100012E2C(&qword_1000D2898);
  sub_100042914(v8);
  v9 = sub_100012E2C(&qword_1000D2890);
  sub_100042914(v9);
  sub_100014CFC(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_cancellables));
  return v0;
}

uint64_t sub_100054900()
{
  uint64_t v0;

  sub_100054790();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100054924()
{
  return type metadata accessor for SidebarView.DataSource(0);
}

uint64_t *sub_10005492C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for RootNavigationDestination(0);
    swift_retain(v5);
    if (sub_100019D44((uint64_t)v8, 1, v9))
    {
      v10 = sub_100012E2C(&qword_1000D1100);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_100015D74((uint64_t)v7, 0, 1, v9);
    }
    v12 = *(int *)(sub_100012E2C(&qword_1000D27E8) + 28);
    v11 = *(_QWORD *)&v8[v12];
    *(_QWORD *)&v7[v12] = v11;
  }
  swift_retain(v11);
  return v3;
}

double sub_100054A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for RootNavigationDestination(0);
  if (!sub_100019D44(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = *(_QWORD *)(v4 + *(int *)(sub_100012E2C(&qword_1000D27E8) + 28));
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

_QWORD *sub_100054AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for RootNavigationDestination(0);
  swift_retain(v4);
  if (sub_100019D44((uint64_t)v7, 1, v8))
  {
    v9 = sub_100012E2C(&qword_1000D1100);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    sub_100015D74((uint64_t)v6, 0, 1, v8);
  }
  v10 = *(int *)(sub_100012E2C(&qword_1000D27E8) + 28);
  v11 = *(_QWORD *)&v7[v10];
  *(_QWORD *)&v6[v10] = v11;
  swift_retain(v11);
  return a1;
}

_QWORD *sub_100054B7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for RootNavigationDestination(0);
  v12 = sub_100019D44((uint64_t)v9, 1, v11);
  v13 = sub_100019D44((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_100012E2C(&qword_1000D1100);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  sub_100015D74((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v16 = *(int *)(sub_100012E2C(&qword_1000D27E8) + 28);
  v17 = *(_QWORD *)&v9[v16];
  v18 = *(_QWORD *)&v10[v16];
  *(_QWORD *)&v9[v16] = v18;
  swift_retain(v18);
  swift_release(v17);
  return a1;
}

_OWORD *sub_100054CC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for RootNavigationDestination(0);
  if (sub_100019D44((uint64_t)v6, 1, v7))
  {
    v8 = sub_100012E2C(&qword_1000D1100);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_100015D74((uint64_t)v5, 0, 1, v7);
  }
  v9 = sub_100012E2C(&qword_1000D27E8);
  *(_QWORD *)&v5[*(int *)(v9 + 28)] = *(_QWORD *)&v6[*(int *)(v9 + 28)];
  return a1;
}

_QWORD *sub_100054D84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for RootNavigationDestination(0);
  v12 = sub_100019D44((uint64_t)v9, 1, v11);
  v13 = sub_100019D44((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_100012E2C(&qword_1000D1100);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  sub_100015D74((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v16 = *(int *)(sub_100012E2C(&qword_1000D27E8) + 28);
  v17 = *(_QWORD *)&v9[v16];
  *(_QWORD *)&v9[v16] = *(_QWORD *)&v10[v16];
  swift_release(v17);
  return a1;
}

uint64_t sub_100054EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100054EBC);
}

void sub_100054EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10005E5A0(*(_QWORD *)(a1 + 8));
    sub_100018388();
  }
  else
  {
    v6 = sub_100012E2C(&qword_1000D27E8);
    sub_10005E454(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_100054F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054F24);
}

void sub_100054F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100018388();
  }
  else
  {
    v7 = sub_100012E2C(&qword_1000D27E8);
    sub_10005E460(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata accessor for SidebarView(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D2848, (uint64_t)&nominal type descriptor for SidebarView);
}

void sub_100054F98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100099ED0;
  sub_100004344(319, (unint64_t *)&unk_1000D2858, &qword_1000D1100);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100055024(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000A73AC, 1);
}

uint64_t sub_100055034@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for SidebarView.DataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100055070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v1 = type metadata accessor for SidebarView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B888(v0, (uint64_t)v4, type metadata accessor for SidebarView);
  v5 = type metadata accessor for MainActor(0);
  v6 = static MainActor.shared.getter(v5);
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v8 + v3;
  v10 = v7 | 7;
  v11 = swift_allocObject(&unk_1000C25F0, v9, v7 | 7);
  *(_QWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
  sub_10005DDA0((uint64_t)v4, v11 + v8, type metadata accessor for SidebarView);
  sub_10005B888(v0, (uint64_t)v4, type metadata accessor for SidebarView);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_1000C2618, v9, v10);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_10005DDA0((uint64_t)v4, v14 + v8, type metadata accessor for SidebarView);
  Binding.init(get:set:)(sub_10005834C, v11, sub_1000583EC, v14, &type metadata for Bool);
  return v16[1];
}

void sub_1000551D0(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  _BYTE *v40;

  v40 = a2;
  v3 = sub_100012E2C(&qword_1000D2950);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E2C(&qword_1000D1100);
  v7 = __chkstk_darwin(v6);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (void (**)(char *, char *, uint64_t))((char *)&v37 - v10);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v37 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v37 - v15;
  v17 = type metadata accessor for RootNavigationDestination(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v38 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v37 - v21;
  type metadata accessor for SidebarView(0);
  v23 = sub_100012E2C(&qword_1000D27E8);
  State.wrappedValue.getter(v23);
  if (sub_100019D44((uint64_t)v16, 1, v17) == 1)
  {
    sub_10000D7B4((uint64_t)v16, &qword_1000D1100);
    v24 = 0;
  }
  else
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v37(v22, v16, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v14, v22, v17);
    sub_100015D74((uint64_t)v14, 0, 1, v17);
    v25 = *(_QWORD *)(a1 + 8);
    KeyPath = swift_getKeyPath(&unk_100099FF0);
    v27 = swift_getKeyPath(&unk_10009A018);
    v28 = swift_retain(v25);
    static Published.subscript.getter(v11, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    swift_release(v27);
    v29 = (uint64_t)&v5[*(int *)(v3 + 48)];
    v30 = &qword_1000D1100;
    sub_10000D74C((uint64_t)v14, (uint64_t)v5, &qword_1000D1100);
    sub_10000D74C((uint64_t)v11, v29, &qword_1000D1100);
    if (sub_100019D44((uint64_t)v5, 1, v17) == 1)
    {
      sub_10000D7B4((uint64_t)v11, &qword_1000D1100);
      sub_10000D7B4((uint64_t)v14, &qword_1000D1100);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
      if (sub_100019D44(v29, 1, v17) == 1)
      {
        v31 = -1;
      }
      else
      {
        v30 = &qword_1000D2950;
        v31 = 0;
      }
    }
    else
    {
      v32 = (uint64_t)v39;
      sub_10000D74C((uint64_t)v5, (uint64_t)v39, &qword_1000D1100);
      if (sub_100019D44(v29, 1, v17) == 1)
      {
        sub_10000D7B4((uint64_t)v11, &qword_1000D1100);
        sub_10000D7B4((uint64_t)v14, &qword_1000D1100);
        v33 = *(void (**)(char *, uint64_t))(v18 + 8);
        v33(v22, v17);
        v33((char *)v32, v17);
        v31 = 0;
        v30 = &qword_1000D2950;
      }
      else
      {
        v34 = v38;
        v37(v38, (char *)v29, v17);
        sub_1000040A8(&qword_1000D1168, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
        v31 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v34, v17, v35);
        v36 = *(void (**)(char *, uint64_t))(v18 + 8);
        v36(v34, v17);
        v30 = &qword_1000D1100;
        sub_10000D7B4((uint64_t)v11, &qword_1000D1100);
        sub_10000D7B4((uint64_t)v14, &qword_1000D1100);
        v36(v22, v17);
        v36(v39, v17);
      }
    }
    sub_10000D7B4((uint64_t)v5, v30);
    v24 = v31 & 1;
  }
  *v40 = v24;
}

double sub_1000555E4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v6 = sub_100012E2C(&qword_1000D1100);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v7) = *a1;
  v9 = *(_QWORD *)(a4 + 8);
  if ((_DWORD)v7 == 1)
  {
    type metadata accessor for SidebarView(0);
    swift_retain(v9);
    v10 = sub_100012E2C(&qword_1000D27E8);
    State.wrappedValue.getter(v10);
  }
  else
  {
    v11 = type metadata accessor for RootNavigationDestination(0);
    sub_100015D74((uint64_t)v8, 1, 1, v11);
    swift_retain(v9);
  }
  sub_100051B2C((uint64_t)v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_1000556C0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[4];
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE v136[72];
  _QWORD v137[2];
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145[10];

  v3 = v1;
  v123 = a1;
  sub_100012E2C(&qword_1000D2228);
  sub_100018044();
  __chkstk_darwin(v4);
  sub_100018548();
  v122 = v5;
  v118 = type metadata accessor for SidebarListStyle(0);
  v114 = *(_QWORD *)(v118 - 8);
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100018548();
  v112 = v7;
  v103 = sub_100012E2C(&qword_1000D28C8);
  v100 = *(_QWORD *)(v103 - 8);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018548();
  v99 = v9;
  sub_100012E2C(&qword_1000D28D0);
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100018470();
  v11 = sub_100012E2C(&qword_1000D28D8);
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100026F1C();
  v15 = v13 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v98 - v17;
  v109 = sub_100012E2C(&qword_1000D28E0);
  v106 = *(_QWORD *)(v109 - 8);
  sub_100018044();
  __chkstk_darwin(v19);
  sub_100018548();
  v105 = v20;
  v110 = sub_100012E2C(&qword_1000D28E8);
  v108 = *(_QWORD *)(v110 - 8);
  sub_100018044();
  __chkstk_darwin(v21);
  sub_100018548();
  v107 = v22;
  v23 = sub_100012E2C(&qword_1000D28F0);
  v115 = *(_QWORD *)(v23 - 8);
  v116 = v23;
  sub_100018044();
  __chkstk_darwin(v24);
  sub_100018548();
  v113 = v25;
  v111 = sub_100012E2C(&qword_1000D28F8);
  sub_100018044();
  __chkstk_darwin(v26);
  sub_100018548();
  v119 = v27;
  v121 = sub_100012E2C(&qword_1000D2900);
  sub_100018044();
  __chkstk_darwin(v28);
  sub_100018548();
  v120 = v29;
  sub_100012E2C(&qword_1000D2908);
  sub_100018044();
  __chkstk_darwin(v30);
  sub_100018548();
  v117 = v31;
  v32 = *v3;
  v33 = type metadata accessor for SidebarView.DataSource(0);
  sub_1000040A8(&qword_1000D28C0, type metadata accessor for SidebarView.DataSource);
  v35 = v34;
  v101 = v33;
  v36 = ObservedObject.projectedValue.getter(v32);
  KeyPath = swift_getKeyPath(&unk_100099F70);
  v102 = v35;
  ObservedObject.Wrapper.subscript.getter(v2, KeyPath, v36, v35);
  sub_100042CE0();
  sub_100027204();
  LOBYTE(v36) = *(_BYTE *)(v3[1] + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
  sub_10000D74C((uint64_t)v2, v15, &qword_1000D28D0);
  *(_BYTE *)(v15 + *(int *)(v11 + 52)) = (v36 & 1) == 0;
  v38 = v99;
  sub_100055F5C((uint64_t)v3);
  sub_10000D7B4((uint64_t)v2, &qword_1000D28D0);
  v104 = v11;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v100 + 32))(v15 + *(int *)(v11 + 56), v38, v103);
  v103 = (uint64_t)v18;
  sub_1000123CC(v15, (uint64_t)v18, &qword_1000D28D8);
  v124 = v3;
  sub_10005E7D4();
  sub_100051BB0((uint64_t)v136);
  sub_10005E7CC();
  sub_1000123CC((uint64_t)v136, (uint64_t)v137, &qword_1000D24E8);
  sub_1000123CC((uint64_t)v136, (uint64_t)v145, &qword_1000D24E8);
  if (v145[0])
  {
    v40 = v137[0];
    v39 = v137[1];
    v41 = v138;
    v100 = v139;
    v42 = v140;
    v43 = v141;
    v44 = v142;
    v45 = v143;
    v46 = v144;
    swift_bridgeObjectRetain(v138);
    sub_100057F34(v40, v39, v41, v100, v42, v43, v44, v45, v46);
  }
  else
  {
    v39 = 0;
    v41 = 0xE000000000000000;
  }
  v134 = v39;
  v135 = v41;
  v47 = sub_100055070();
  v49 = v48;
  LODWORD(v100) = v50;
  sub_10005E7D4();
  sub_100051BB0((uint64_t)v137);
  sub_10005E7CC();
  sub_1000123CC((uint64_t)v137, (uint64_t)&v125, &qword_1000D24E8);
  v99 = &v98;
  __chkstk_darwin(v51);
  v52 = sub_100012E2C(&qword_1000D2910);
  v98 = v52;
  v53 = sub_100012E2C(&qword_1000D2918);
  sub_100004038(&qword_1000D2920, &qword_1000D28D8);
  v55 = v54;
  v56 = sub_100014C08();
  sub_100004038(&qword_1000D2928, &qword_1000D2910);
  v58 = v57;
  v97[1] = v57;
  v97[2] = &protocol witness table for Text;
  v97[0] = v56;
  v96 = v52;
  v59 = v104;
  v60 = v105;
  v61 = v103;
  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t (*)@<X0>(uint64_t *@<X0>, char *@<X8>), _QWORD *, uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t@<X8>), _QWORD, uint64_t, void *, uint64_t, void *, uint64_t, uint64_t))View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:))(&v134, v47, v49, v100 & 1, 1, &v125, sub_100057F8C, v97, sub_100057E24, 0, v104, &type metadata for String, v96, &type metadata for Text, v53, v55);
  swift_release(v49);
  swift_release(v47);
  sub_100057F34(v125, (uint64_t)v126, v127, (uint64_t)v128, v129, v130, v131, v132, (uint64_t)v133);
  swift_bridgeObjectRelease(v135);
  sub_10000D7B4(v61, &qword_1000D28D8);
  v62 = v112;
  SidebarListStyle.init()();
  v125 = v59;
  v126 = &type metadata for String;
  v127 = v98;
  v128 = &type metadata for Text;
  v129 = v53;
  v130 = v55;
  v131 = v56;
  v132 = v58;
  v133 = &protocol witness table for Text;
  v63 = sub_10005E75C((uint64_t)&v125, (uint64_t)&opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:)>>);
  v64 = v107;
  v65 = v109;
  v66 = (void *)v118;
  View.listStyle<A>(_:)(v62, v109, v118, v63, &protocol witness table for SidebarListStyle);
  (*(void (**)(uint64_t, void *))(v114 + 8))(v62, v66);
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v60, v65);
  v67 = v124;
  LOBYTE(v61) = *(_BYTE *)(v124[1] + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
  v125 = v65;
  v126 = v66;
  v127 = v63;
  v128 = &protocol witness table for SidebarListStyle;
  v68 = sub_10005E75C((uint64_t)&v125, (uint64_t)&opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>);
  v69 = v113;
  View.prefersExpandedSidebars(_:)((v61 & 1) == 0, v110, v68);
  sub_100026C54(v64, *(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
  v70 = swift_getKeyPath(&unk_100099F98);
  v71 = *v67;
  v72 = v102;
  v73 = ObservedObject.projectedValue.getter(v71);
  v74 = swift_getKeyPath(&unk_100099FC8);
  v75 = v122;
  ObservedObject.Wrapper.subscript.getter(v122, v74, v73, v72);
  sub_100042CE0();
  sub_100027204();
  v76 = sub_100012E2C(&qword_1000D22F8);
  sub_100015D74((uint64_t)v75, 0, 1, v76);
  v77 = v119;
  v78 = (uint64_t *)(v119 + *(int *)(v111 + 36));
  v79 = sub_100012E2C(&qword_1000D2300);
  sub_10000D74C((uint64_t)v75, (uint64_t)v78 + *(int *)(v79 + 28), &qword_1000D2228);
  *v78 = v70;
  v81 = v115;
  v80 = v116;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v77, v69, v116);
  sub_10000D7B4((uint64_t)v75, &qword_1000D2228);
  v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8))(v69, v80);
  LOBYTE(v73) = static Edge.Set.bottom.getter(v82);
  sub_100042DC8();
  v83 = sub_100051C78();
  sub_100019D9C();
  v84 = EdgeInsets.init(_all:)(v83);
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v91 = v120;
  sub_10005E780(v77);
  v92 = v121;
  v93 = v91 + *(int *)(v121 + 36);
  *(_BYTE *)v93 = v73;
  *(double *)(v93 + 8) = v84;
  *(_QWORD *)(v93 + 16) = v86;
  *(_QWORD *)(v93 + 24) = v88;
  *(_QWORD *)(v93 + 32) = v90;
  *(_BYTE *)(v93 + 40) = 0;
  sub_10000D7B4(v77, &qword_1000D28F8);
  v94 = sub_100057FD4();
  v95 = v117;
  View.accessibilityIdentifier(_:)(0x2E7972617262696CLL, 0xEF72616265646973, v92, v94);
  sub_10000D7B4(v91, &qword_1000D2900);
  sub_1000123CC(v95, v123, &qword_1000D2908);
}

uint64_t sub_100055F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for SidebarView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_sections);
  v5 = v19;
  KeyPath = swift_getKeyPath(&unk_10009A038);
  sub_10005B888(a1, (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SidebarView);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_1000C2640, v8 + v4, v7 | 7);
  sub_10005DDA0((uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for SidebarView);
  swift_bridgeObjectRetain(v5);
  v10 = sub_100012E2C(&qword_1000D2958);
  v11 = sub_100012E2C(&qword_1000D2960);
  sub_100004038(&qword_1000D2968, &qword_1000D2958);
  v13 = v12;
  sub_1000040A8(&qword_1000D2970, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  v15 = v14;
  v16 = sub_10005B15C();
  return ForEach<>.init(_:id:content:)(&v19, KeyPath, sub_10005B138, v9, v10, v11, v13, v15, v16);
}

uint64_t sub_1000560E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t ObjectType;

  v1 = a1[1];
  ObjectType = swift_getObjectType(*a1);
  return dispatch thunk of SidebarSection.id.getter(ObjectType, v1);
}

uint64_t sub_10005611C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v5 = type metadata accessor for SidebarView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = *a1;
  v9 = a1[1];
  ObjectType = swift_getObjectType(v8);
  result = dispatch thunk of SidebarSection.shouldDisplay.getter(ObjectType, v9);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  if ((result & 1) != 0)
  {
    v12 = dispatch thunk of SidebarSection.name.getter(ObjectType, v9);
    v13 = v16;
    sub_10005B888(v20, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SidebarView);
    v17 = *(unsigned __int8 *)(v6 + 80);
    v18 = (v17 + 32) & ~v17;
    v15 = swift_allocObject(&unk_1000C2668, v18 + v7, v17 | 7);
    *(_QWORD *)(v15 + 16) = v8;
    *(_QWORD *)(v15 + 24) = v9;
    sub_10005DDA0((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v18, type metadata accessor for SidebarView);
    result = swift_unknownObjectRetain(v8);
    v14 = sub_10005B1DC;
  }
  *a3 = v12;
  a3[1] = v13;
  a3[2] = (uint64_t)v14;
  a3[3] = v15;
  return result;
}

void sub_100056244(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (**v65)();
  void (*v66)(char *, uint64_t);
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t ObjectType;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v117 = a4;
  v7 = type metadata accessor for SidebarView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = sub_100012E2C(&qword_1000D2990);
  v104 = *(_QWORD *)(v10 - 8);
  v105 = v10;
  __chkstk_darwin(v10);
  v103 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100012E2C(&qword_1000D2998);
  __chkstk_darwin(v102);
  v108 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100012E2C(&qword_1000D29A0);
  __chkstk_darwin(v106);
  v109 = (uint64_t)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100012E2C(&qword_1000D29A8);
  __chkstk_darwin(v107);
  v110 = (uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E2C(&qword_1000D29B0);
  __chkstk_darwin(v15);
  v112 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E2C(&qword_1000D29B8);
  v114 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v111 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v113 = (char *)&v90 - v20;
  v115 = sub_100012E2C(&qword_1000D29C0);
  __chkstk_darwin(v115);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for AutoShortcutsAppGrid(0);
  __chkstk_darwin(v116);
  v24 = (uint64_t *)((char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for AutoShortcutsSidebarSection(0);
  if (swift_dynamicCastClass(a1, v25))
  {
    v26 = a3[1];
    swift_retain(v26);
    v27 = sub_100051880();
    swift_release(v26);
    v28 = *a3;
    type metadata accessor for SidebarView.DataSource(0);
    v29 = a3;
    sub_1000040A8(&qword_1000D28C0, type metadata accessor for SidebarView.DataSource);
    v31 = v30;
    v32 = ObservedObject.projectedValue.getter(v28);
    KeyPath = swift_getKeyPath(&unk_10009A060);
    v34 = v116;
    ObservedObject.Wrapper.subscript.getter((_QWORD *)((char *)v24 + *(int *)(v116 + 20)), KeyPath, v32, v31);
    swift_release(v32);
    swift_release(KeyPath);
    LOBYTE(KeyPath) = *(_BYTE *)(v29[1] + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
    v35 = type metadata accessor for AutoShortcutsAppsDataSource(0);
    sub_1000040A8(&qword_1000D2A98, (uint64_t (*)(uint64_t))&type metadata accessor for AutoShortcutsAppsDataSource);
    *v24 = ObservedObject.init(wrappedValue:)(v27, v35, v36);
    v24[1] = v37;
    *((_BYTE *)v24 + *(int *)(v34 + 24)) = KeyPath;
    sub_10005B888((uint64_t)v24, (uint64_t)v22, type metadata accessor for AutoShortcutsAppGrid);
    swift_storeEnumTagMultiPayload(v22, v115, 0);
    sub_1000040A8(&qword_1000D2A90, type metadata accessor for AutoShortcutsAppGrid);
    v39 = v38;
    v40 = sub_10005B568();
    v118 = v15;
    v119 = v40;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v118, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v22, v34, v17, v39, OpaqueTypeConformance2);
    sub_10005B8C8((uint64_t)v24, type metadata accessor for AutoShortcutsAppGrid);
  }
  else
  {
    ObjectType = swift_getObjectType(a1);
    v94 = a1;
    v122 = dispatch thunk of SidebarSection.destinations.getter(ObjectType, a2);
    sub_10005B888((uint64_t)a3, (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SidebarView);
    v101 = a2;
    v42 = *(unsigned __int8 *)(v8 + 80);
    v95 = ((v42 + 16) & ~v42) + v9;
    v96 = (v42 + 16) & ~v42;
    v93 = v42 | 7;
    v43 = swift_allocObject(&unk_1000C2690, v95, v42 | 7);
    sub_10005DDA0((uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + ((v42 + 16) & ~v42), type metadata accessor for SidebarView);
    v92 = sub_100012E2C((uint64_t *)&unk_1000D31B0);
    v91 = sub_100012E2C(&qword_1000D29C8);
    sub_100004038(&qword_1000D29D0, (uint64_t *)&unk_1000D31B0);
    v90 = v44;
    v45 = sub_1000143E4(&qword_1000D29D8);
    v100 = v17;
    v46 = v45;
    v47 = type metadata accessor for NavigationDestinationEntity(255);
    v98 = v22;
    v48 = (uint64_t)a3;
    v49 = v47;
    v97 = v15;
    v50 = sub_10005B274();
    sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
    v118 = v46;
    v119 = v49;
    v120 = v50;
    v121 = v51;
    v52 = swift_getOpaqueTypeConformance2(&v118, &opaque type descriptor for <<opaque return type of View.appEntity<A>(_:state:)>>, 1);
    sub_1000040A8(&qword_1000D2A20, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
    v53 = v103;
    ForEach<>.init(_:content:)(&v122, sub_10005B250, v43, v92, &type metadata for String, v91, v90, v52, v54);
    sub_10005B888(v48, (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SidebarView);
    v55 = (v42 + 32) & ~v42;
    v56 = v93;
    v57 = swift_allocObject(&unk_1000C26B8, v55 + v9, v93);
    v58 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v59 = v94;
    v60 = v101;
    *(_QWORD *)(v57 + 16) = v94;
    *(_QWORD *)(v57 + 24) = v60;
    sub_10005DDA0((uint64_t)v58, v57 + v55, type metadata accessor for SidebarView);
    v61 = swift_allocObject(&unk_1000C26E0, 32, 7);
    *(_QWORD *)(v61 + 16) = sub_10005B3D0;
    *(_QWORD *)(v61 + 24) = v57;
    v62 = v104;
    v63 = v105;
    v64 = (uint64_t)v108;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v108, v53, v105);
    v65 = (void (**)())(v64 + *(int *)(v102 + 36));
    *v65 = sub_1000269F4;
    v65[1] = (void (*)())v61;
    v66 = *(void (**)(char *, uint64_t))(v62 + 8);
    swift_unknownObjectRetain(v59);
    v66(v53, v63);
    sub_10005B888(v48, (uint64_t)v58, type metadata accessor for SidebarView);
    v67 = (v95 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = swift_allocObject(&unk_1000C2708, v67 + 16, v56);
    sub_10005DDA0((uint64_t)v58, v68 + v96, type metadata accessor for SidebarView);
    v69 = (_QWORD *)(v68 + v67);
    v70 = v59;
    v71 = v101;
    *v69 = v59;
    v69[1] = v71;
    v72 = swift_allocObject(&unk_1000C2730, 32, 7);
    *(_QWORD *)(v72 + 16) = sub_10005B504;
    *(_QWORD *)(v72 + 24) = v68;
    v73 = v109;
    sub_10000D74C(v64, v109, &qword_1000D2998);
    v74 = (_QWORD *)(v73 + *(int *)(v106 + 36));
    *v74 = sub_10005B548;
    v74[1] = v72;
    swift_unknownObjectRetain(v70);
    sub_10000D7B4(v64, &qword_1000D2998);
    LOBYTE(v68) = sub_10007A648();
    v75 = v110;
    sub_10000D74C(v73, v110, &qword_1000D29A0);
    *(_BYTE *)(v75 + *(int *)(v107 + 36)) = (v68 & 1) == 0;
    sub_10000D7B4(v73, &qword_1000D29A0);
    LOBYTE(v68) = sub_10007A648();
    v76 = v112;
    sub_10000D74C(v75, v112, &qword_1000D29A8);
    v77 = v97;
    *(_BYTE *)(v76 + *(int *)(v97 + 36)) = (v68 & 1) == 0;
    sub_10000D7B4(v75, &qword_1000D29A8);
    LODWORD(v70) = *(unsigned __int8 *)(*(_QWORD *)(v48 + 8)
                                      + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
    v78 = static VerticalEdge.Set.all.getter();
    v79 = sub_10005B568();
    if ((_DWORD)v70)
      v80 = 0;
    else
      v80 = 2;
    v81 = v111;
    View.listRowSeparator(_:edges:)(v80, v78, v77, v79);
    sub_10000D7B4(v76, &qword_1000D29B0);
    v83 = v113;
    v82 = v114;
    v84 = v81;
    v85 = v100;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v84, v100);
    v86 = v98;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v98, v83, v85);
    swift_storeEnumTagMultiPayload(v86, v115, 1);
    sub_1000040A8(&qword_1000D2A90, type metadata accessor for AutoShortcutsAppGrid);
    v88 = v87;
    v118 = v77;
    v119 = v79;
    v89 = swift_getOpaqueTypeConformance2(&v118, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
    _ConditionalContent<>.init(storage:)(v86, v116, v85, v88, v89);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v85);
  }
}

uint64_t sub_100056B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  _QWORD v125[5];

  v99 = a1;
  v121 = a3;
  v5 = type metadata accessor for RootNavigationDestination(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v96 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100012E2C(&qword_1000D2950);
  __chkstk_darwin(v114);
  v110 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100012E2C(&qword_1000D1100);
  v9 = __chkstk_darwin(v111);
  v97 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v112 = (char *)&v95 - v12;
  __chkstk_darwin(v11);
  v109 = (uint64_t *)((char *)&v95 - v13);
  v14 = type metadata accessor for AppEntityVisualState(0);
  v119 = *(_QWORD *)(v14 - 8);
  v120 = v14;
  __chkstk_darwin(v14);
  v118 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for NavigationDestinationEntity(0);
  __chkstk_darwin(v117);
  v102 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E2C(&qword_1000D2AA8);
  __chkstk_darwin(v17);
  v108 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100012E2C(&qword_1000D2AB0);
  __chkstk_darwin(v19);
  v106 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100012E2C(&qword_1000D29F0);
  __chkstk_darwin(v107);
  v105 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for UTType(0);
  v22 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DestinationRow(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100012E2C(&qword_1000D2AB8);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v122 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100012E2C(&qword_1000D29D8);
  __chkstk_darwin(v123);
  v124 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100012E2C(&qword_1000D29C8);
  v115 = *(_QWORD *)(v30 - 8);
  v116 = v30;
  __chkstk_darwin(v30);
  v113 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v6;
  v32 = *(void (**)(void))(v6 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v32)(v27, a1, v5);
  type metadata accessor for SidebarView(0);
  v101 = a2;
  v33 = &v27[*(int *)(v25 + 20)];
  v34 = sub_100012E2C(&qword_1000D27E8);
  State.projectedValue.getter(v33, v34);
  v35 = *(_QWORD *)(a2 + 8);
  v36 = &v27[*(int *)(v25 + 24)];
  v37 = type metadata accessor for SidebarView.DataSource(0);
  sub_1000040A8(&qword_1000D28C0, type metadata accessor for SidebarView.DataSource);
  v39 = v38;
  v40 = swift_retain(v35);
  *(_QWORD *)v36 = ObservedObject.init(wrappedValue:)(v40, v37, v39);
  *((_QWORD *)v36 + 1) = v41;
  v42 = sub_100012E2C(&qword_1000D23A8);
  v43 = *(unsigned __int8 *)(v22 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = swift_allocObject(v42, v44 + *(_QWORD *)(v22 + 72), v43 | 7);
  *(_OWORD *)(v45 + 16) = xmmword_100096E80;
  v46 = (id)WFWorkflowReferenceType();
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v45 + v44, v24, v100);
  v47 = type metadata accessor for SidebarDropDelegate(0);
  v125[3] = v47;
  sub_1000040A8(&qword_1000D2AC0, type metadata accessor for SidebarDropDelegate);
  v125[4] = v48;
  v49 = sub_100014688(v125);
  v50 = v99;
  v51 = v32;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v32)(v49, v99, v5);
  *(_QWORD *)((char *)v49 + *(int *)(v47 + 20)) = v35;
  sub_1000040A8(&qword_1000D29F8, type metadata accessor for DestinationRow);
  v53 = v52;
  swift_retain(v35);
  v54 = v122;
  View.onDrop(of:delegate:)(v45, v125, v25, v53);
  swift_bridgeObjectRelease(v45);
  sub_10005B8C8((uint64_t)v27, type metadata accessor for DestinationRow);
  sub_10000B6E4(v125);
  v55 = (uint64_t)v106;
  v56 = v50;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v106, v50, v5);
  v57 = v51;
  sub_100015D74(v55, 0, 1, v5);
  v58 = (uint64_t)v105;
  sub_10000D74C(v55, (uint64_t)&v105[*(int *)(v107 + 36)], &qword_1000D2AB0);
  v59 = v103;
  v60 = v104;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v58, v54, v104);
  sub_10000D7B4(v55, &qword_1000D2AB0);
  v61 = (uint64_t)v108;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v108, v56, v5);
  v62 = v5;
  sub_100015D74(v61, 0, 1, v5);
  sub_100015D74(v61, 0, 1, v111);
  v63 = (uint64_t)v124;
  sub_10000D74C(v61, (uint64_t)&v124[*(int *)(v123 + 36)], &qword_1000D2AA8);
  sub_10000D74C(v58, v63, &qword_1000D29F0);
  sub_10000D7B4(v61, &qword_1000D2AA8);
  sub_10000D7B4(v58, &qword_1000D29F0);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v122, v60);
  v64 = (uint64_t)v102;
  v57();
  v65 = *(_QWORD *)(v101 + 8);
  KeyPath = swift_getKeyPath(&unk_100099F70);
  v67 = swift_getKeyPath(&unk_10009A088);
  v68 = swift_retain(v65);
  v69 = v109;
  static Published.subscript.getter(v109, v68, KeyPath, v67);
  swift_release(v65);
  v70 = KeyPath;
  v71 = &qword_1000D1100;
  swift_release(v70);
  v72 = swift_release(v67);
  v73 = (uint64_t)v112;
  v74 = v62;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v57)(v112, v56, v62, v72);
  v75 = v73;
  sub_100015D74(v73, 0, 1, v74);
  v76 = v110 + *(int *)(v114 + 48);
  v77 = (uint64_t)v69;
  v78 = (uint64_t)v69;
  v79 = v110;
  sub_10000D74C(v78, v110, &qword_1000D1100);
  sub_10000D74C(v75, v76, &qword_1000D1100);
  v80 = v79;
  v81 = v79;
  v82 = v74;
  if (sub_100019D44(v81, 1, v74) == 1)
  {
    sub_10000D7B4(v75, &qword_1000D1100);
    sub_10000D7B4(v77, &qword_1000D1100);
    if (sub_100019D44(v76, 1, v74) == 1)
    {
      v83 = -1;
    }
    else
    {
      v71 = &qword_1000D2950;
      v83 = 0;
    }
  }
  else
  {
    v84 = v97;
    sub_10000D74C(v80, v97, &qword_1000D1100);
    if (sub_100019D44(v76, 1, v74) == 1)
    {
      sub_10000D7B4(v75, &qword_1000D1100);
      sub_10000D7B4(v77, &qword_1000D1100);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v84, v74);
      v83 = 0;
      v71 = &qword_1000D2950;
    }
    else
    {
      v85 = v98;
      v86 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v96, v76, v82);
      sub_1000040A8(&qword_1000D1168, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
      v83 = dispatch thunk of static Equatable.== infix(_:_:)(v84, v86, v82, v87);
      v88 = *(void (**)(char *, uint64_t))(v85 + 8);
      v88(v86, v82);
      v71 = &qword_1000D1100;
      sub_10000D7B4(v75, &qword_1000D1100);
      sub_10000D7B4(v77, &qword_1000D1100);
      v88((char *)v84, v82);
    }
  }
  sub_10000D7B4(v80, v71);
  v89 = v118;
  AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(v83 & 1, 0, 0, 0, 0, 0);
  v90 = sub_10005B274();
  sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
  v91 = v113;
  v92 = (uint64_t)v124;
  View.appEntity<A>(_:state:)(v64, v89, v123, v117, v90, v93);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v89, v120);
  sub_10005B8C8(v64, type metadata accessor for NavigationDestinationEntity);
  sub_10000D7B4(v92, &qword_1000D29D8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v115 + 32))(v121, v91, v116);
}

void sub_100057588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a4;
  v7 = sub_100012E2C(&qword_1000D1100);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for RootNavigationDestination(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain(a2);
  v20 = sub_1000509E8(a1, a2, a3);
  sub_10005E95C((uint64_t)v20, (uint64_t)v15);
  swift_bridgeObjectRelease(v20);
  if (sub_100019D44((uint64_t)v15, 1, v16) == 1)
  {
    sub_10000D7B4((uint64_t)v15, &qword_1000D1100);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    sub_100015D74((uint64_t)v13, 0, 1, v16);
    type metadata accessor for SidebarView(0);
    v21 = v28;
    sub_10000D74C((uint64_t)v13, (uint64_t)v10, &qword_1000D1100);
    v22 = sub_100012E2C(&qword_1000D27E8);
    State.wrappedValue.setter(v10, v22);
    sub_10000D7B4((uint64_t)v13, &qword_1000D1100);
    v23 = *(_QWORD *)(v21 + 8);
    swift_retain(v23);
    sub_100052F84();
    v25 = v24;
    swift_release(v23);
    swift_retain(v23);
    sub_1000530EC();
    swift_bridgeObjectRelease(v25);
    v26 = swift_release(v23);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v26);
  }
}

double sub_1000577D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(a3 + 8);
  swift_retain(v3);
  sub_1000524E4();
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_100057830@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _BYTE v68[16];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[16];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v55 = a2;
  v64 = a3;
  v5 = type metadata accessor for SidebarView(0);
  v58 = *(_QWORD *)(v5 - 8);
  v59 = *(_QWORD *)(v58 + 64);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E2C(&qword_1000D30F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100012E2C(&qword_1000D2940);
  v62 = *(_QWORD *)(v57 - 8);
  v11 = __chkstk_darwin(v57);
  v63 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v61 = (char *)&v50 - v14;
  v15 = __chkstk_darwin(v13);
  v60 = (char *)&v50 - v16;
  v17 = __chkstk_darwin(v15);
  v67 = (char *)&v50 - v18;
  v19 = *a1;
  v52 = a1[1];
  v20 = a1[2];
  v51 = a1[3];
  v21 = a1[4];
  v66 = a1[5];
  v22 = a1[6];
  v65 = a1[7];
  v23 = a1[8];
  v56 = v10;
  static ButtonRole.destructive.getter(v17);
  v24 = type metadata accessor for ButtonRole(0);
  sub_100015D74((uint64_t)v10, 0, 1, v24);
  v25 = (uint64_t)v7;
  sub_10005B888(a2, (uint64_t)v7, type metadata accessor for SidebarView);
  v26 = *(unsigned __int8 *)(v58 + 80);
  v58 = v26 | 7;
  v27 = (v26 + 16) & ~v26;
  v53 = v27;
  v28 = (v59 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = v28 + 72;
  v59 = v28;
  v29 = swift_allocObject(&unk_1000C25A0, v28 + 72, v26 | 7);
  sub_10005DDA0(v25, v29 + v27, type metadata accessor for SidebarView);
  v30 = (_QWORD *)(v29 + v28);
  v31 = v52;
  *v30 = v19;
  v30[1] = v31;
  v32 = v51;
  v30[2] = v20;
  v30[3] = v32;
  v33 = v66;
  v30[4] = v21;
  v30[5] = v33;
  v34 = v65;
  v30[6] = v22;
  v30[7] = v34;
  v30[8] = v23;
  v79 = v19;
  v80 = v31;
  v81 = v20;
  v82 = v32;
  v83 = v21;
  v84 = v33;
  v85 = v22;
  v86 = v34;
  v87 = v23;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  Button.init(role:action:label:)(v56, sub_100058200, v29, sub_100058208, v78, &type metadata for Text, &protocol witness table for Text);
  sub_10005B888(v55, v25, type metadata accessor for SidebarView);
  v35 = swift_allocObject(&unk_1000C25C8, v54, v58);
  sub_10005DDA0(v25, v35 + v53, type metadata accessor for SidebarView);
  v36 = (_QWORD *)(v35 + v59);
  *v36 = v19;
  v36[1] = v31;
  v36[2] = v20;
  v36[3] = v32;
  v37 = v66;
  v36[4] = v21;
  v36[5] = v37;
  v38 = v65;
  v36[6] = v22;
  v36[7] = v38;
  v36[8] = v23;
  v69 = v19;
  v70 = v31;
  v71 = v20;
  v72 = v32;
  v73 = v21;
  v74 = v37;
  v75 = v22;
  v76 = v38;
  v77 = v23;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  v39 = v60;
  Button.init(action:label:)(sub_1000582A4, v35, sub_100058304, v68, &type metadata for Text, &protocol witness table for Text);
  v40 = v62;
  v41 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v42 = v61;
  v43 = v67;
  v44 = v57;
  v41(v61, v67, v57);
  v45 = v63;
  v41(v63, v39, v44);
  v46 = v64;
  v41(v64, v42, v44);
  v47 = sub_100012E2C(&qword_1000D2948);
  v41(&v46[*(int *)(v47 + 48)], v45, v44);
  v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  v48(v39, v44);
  v48(v43, v44);
  v48(v45, v44);
  return ((uint64_t (*)(char *, uint64_t))v48)(v42, v44);
}

uint64_t sub_100057D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 48);
  v9[0] = *(_QWORD *)(a1 + 40);
  v9[1] = v3;
  v4 = sub_100014C08();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_100057D7C(uint64_t a1, void **a2, char a3)
{
  void *v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 8);
  swift_retain(v5);
  sub_100052BF4(v4, a3);
  return sub_10005E5CC(v5);
}

uint64_t sub_100057DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 64);
  v9[0] = *(_QWORD *)(a1 + 56);
  v9[1] = v3;
  v4 = sub_100014C08();
  swift_bridgeObjectRetain(v3);
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_100057E24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v3);
  v11[0] = v4;
  v11[1] = v5;
  v6 = sub_100014C08();
  result = Text.init<A>(_:)(v11, &type metadata for String, v6);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  return result;
}

void sub_100057E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for EditMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  sub_100051A2C((uint64_t)v4);
}

void *sub_100057F20()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100057F34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);
    return swift_bridgeObjectRelease(a9);
  }
  return result;
}

uint64_t sub_100057F8C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_100057830(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_100057F94()
{
  EnvironmentValues.editMode.getter();
  sub_100018188();
}

void sub_100057FB4(_QWORD *a1@<X8>)
{
  sub_100051A18(a1);
  sub_100018188();
}

unint64_t sub_100057FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2930;
  if (!qword_1000D2930)
  {
    v1 = sub_1000143E4(&qword_1000D2900);
    sub_100058040();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2930);
  }
  return result;
}

unint64_t sub_100058040()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;

  result = qword_1000D2938;
  if (!qword_1000D2938)
  {
    v1 = sub_1000143E4(&qword_1000D28F8);
    v2 = sub_1000143E4(&qword_1000D28E8);
    v3 = sub_1000143E4(&qword_1000D28E0);
    v4 = type metadata accessor for SidebarListStyle(255);
    v5 = sub_1000143E4(&qword_1000D28D8);
    v6 = sub_1000143E4(&qword_1000D2910);
    v7 = sub_1000143E4(&qword_1000D2918);
    sub_100004038(&qword_1000D2920, &qword_1000D28D8);
    v9 = v8;
    v10 = sub_100014C08();
    sub_100004038(&qword_1000D2928, &qword_1000D2910);
    v14 = v5;
    v15 = &type metadata for String;
    v16 = v6;
    v17 = &type metadata for Text;
    v18 = v7;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    v22 = &protocol witness table for Text;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:)>>, 1);
    v14 = v3;
    v15 = (void *)v4;
    v16 = OpaqueTypeConformance2;
    v17 = &protocol witness table for SidebarListStyle;
    v13 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    v14 = v2;
    v15 = (void *)v13;
    swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of View.prefersExpandedSidebars(_:)>>, 1);
    sub_100004038(&qword_1000D2310, &qword_1000D2300);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2938);
  }
  return result;
}

uint64_t sub_100058200()
{
  return sub_1000582AC(0);
}

uint64_t sub_100058208()
{
  return sub_100058310();
}

uint64_t sub_100058218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10005E3F8();
  v3 = sub_100026B08();
  if (!sub_10005E440(v3))
    sub_10005E42C();
  v4 = sub_100012E2C(&qword_1000D27E8);
  sub_10005E57C(v4);
  v5 = (_QWORD *)(v0 + ((v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_bridgeObjectRelease(*v5);
  swift_bridgeObjectRelease(v5[2]);
  swift_bridgeObjectRelease(v5[4]);
  swift_bridgeObjectRelease(v5[6]);
  swift_bridgeObjectRelease(v5[8]);
  v6 = sub_10005E68C();
  return sub_100026E64(v6, v7, v8);
}

uint64_t sub_1000582A4()
{
  return sub_1000582AC(1);
}

uint64_t sub_1000582AC(char a1)
{
  void *v2;
  uint64_t v3;
  void *v5[9];

  type metadata accessor for SidebarView(0);
  sub_100050758();
  sub_10005E76C();
  v5[8] = v2;
  return sub_100057D7C(v3, v5, a1);
}

uint64_t sub_100058304()
{
  return sub_100058310();
}

uint64_t sub_100058310()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  _BYTE v3[64];
  uint64_t v4;

  sub_10005E76C();
  v4 = v0;
  return v1(v3);
}

void sub_10005834C()
{
  uint64_t v0;
  _BYTE *v1;

  sub_10005E53C();
  sub_1000551D0(v0, v1);
}

uint64_t sub_10005836C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for SidebarView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10005E7F4();
  swift_release(*(_QWORD *)(v0 + v2 + 8));
  v3 = sub_100026B08();
  if (!sub_10005E440(v3))
    sub_10005E42C();
  v4 = sub_100012E2C(&qword_1000D27E8);
  sub_10005E57C(v4);
  v5 = sub_10005E69C();
  return sub_100026E64(v5, v6, v7);
}

double sub_1000583EC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (unsigned __int8 *)sub_10005E4FC(a1);
  return sub_1000555E4(v1, v2, v3, v4);
}

void sub_100058408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE v10[16];
  uint64_t v11;

  v1 = sub_100012E2C(&qword_1000D2D90);
  v2 = __chkstk_darwin(v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v2);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = sub_100012E2C(&qword_1000D2D98);
  sub_100058514(v0, (uint64_t)&v4[*(int *)(v5 + 44)]);
  v11 = v0;
  v6 = sub_100012E2C(&qword_1000D2DA0);
  sub_100004038(&qword_1000D2DA8, &qword_1000D2D90);
  v8 = v7;
  v9 = sub_10005DD20();
  View.contextMenu<A>(menuItems:)(sub_10005DD18, v10, v1, v6, v8, v9);
  sub_10000D7B4((uint64_t)v4, &qword_1000D2D90);
}

void sub_100058514(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __n128 v62;
  unsigned int v63;
  void (*v64)(char *, _QWORD, uint64_t, __n128);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, _QWORD, uint64_t, __n128);
  char *v126;
  __n128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  __n128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(char *, _QWORD, uint64_t, __n128);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned int v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void **v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;

  v237 = a1;
  v231 = a2;
  v215 = sub_100012E2C(&qword_1000D2DD8);
  __chkstk_darwin(v215);
  v216 = (uint64_t)&v195 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for BorderlessButtonStyle(0);
  v206 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v205 = (char *)&v195 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100012E2C(&qword_1000D2DE0);
  v203 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v202 = (char *)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100012E2C(&qword_1000D2DE8);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v207 = (char *)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_100012E2C(&qword_1000D2DF0);
  __chkstk_darwin(v201);
  v212 = (char *)&v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_100012E2C(&qword_1000D2DF8);
  v7 = __chkstk_darwin(v214);
  v211 = (uint64_t)&v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v213 = (uint64_t)&v195 - v9;
  v223 = type metadata accessor for RootNavigationDestination(0);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v226 = (void **)((char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100012E2C(&qword_1000D1FA8);
  __chkstk_darwin(v11);
  v221 = (uint64_t)&v195 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = type metadata accessor for Font.TextStyle(0);
  v219 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v218 = (char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E2C(&qword_1000D2E00);
  v15 = __chkstk_darwin(v14);
  v232 = (char *)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v227 = (char *)&v195 - v17;
  v236 = type metadata accessor for EditMode(0);
  v230 = *(_QWORD *)(v236 - 8);
  v18 = __chkstk_darwin(v236);
  v235 = (char *)&v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v234 = (char *)&v195 - v20;
  v229 = sub_100012E2C(&qword_1000D2E08);
  __chkstk_darwin(v229);
  v22 = (char *)&v195 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_100012E2C(&qword_1000D2E10);
  __chkstk_darwin(v228);
  v24 = (char *)&v195 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DestinationRow(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v28 = sub_100012E2C(&qword_1000D2E18);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v195 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100012E2C(&qword_1000D2E20);
  v33 = __chkstk_darwin(v32);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v195 - v35;
  v37 = *(int *)(v25 + 24);
  v38 = v237;
  v233 = v237 + v37;
  v39 = *(_BYTE *)(*(_QWORD *)(v237 + v37 + 8) + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact) == 1;
  v238 = v40;
  v200 = (uint64_t)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = v27;
  v198 = v26;
  if (v39)
  {
    sub_10005B888(v237, (uint64_t)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DestinationRow);
    v41 = *(unsigned __int8 *)(v26 + 80);
    v42 = (v41 + 16) & ~v41;
    v43 = swift_allocObject(&unk_1000C2A28, v42 + v27, v41 | 7);
    sub_10005DDA0((uint64_t)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42, type metadata accessor for DestinationRow);
    __chkstk_darwin(v44);
    v45 = v237;
    *(&v195 - 2) = v237;
    sub_100004038(&qword_1000D2E38, &qword_1000D2E08);
    v47 = v46;
    v48 = v229;
    Button.init(action:label:)(sub_10005E164, v43, sub_10005E184, &v195 - 4, v229, v46);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v24, v31, v28);
    swift_storeEnumTagMultiPayload(v24, v228, 0);
    sub_100004038(&qword_1000D2E30, &qword_1000D2E18);
    _ConditionalContent<>.init(storage:)(v24, v28, v48, v49, v47);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    v55 = (uint64_t)v36;
    v51 = v45;
  }
  else
  {
    *(_QWORD *)v22 = static VerticalAlignment.center.getter(v34);
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = 1;
    v50 = sub_100012E2C(&qword_1000D2E28);
    v51 = v38;
    sub_10005A244(v38, &v22[*(int *)(v50 + 44)]);
    sub_10000D74C((uint64_t)v22, (uint64_t)v24, &qword_1000D2E08);
    swift_storeEnumTagMultiPayload(v24, v228, 1);
    sub_100004038(&qword_1000D2E30, &qword_1000D2E18);
    v53 = v52;
    sub_100004038(&qword_1000D2E38, &qword_1000D2E08);
    _ConditionalContent<>.init(storage:)(v24, v28, v229, v53, v54);
    sub_10000D7B4((uint64_t)v22, &qword_1000D2E08);
    v55 = (uint64_t)v36;
  }
  v56 = v230;
  v57 = *(_QWORD *)(v233 + 8);
  KeyPath = swift_getKeyPath(&unk_100099FC8);
  v59 = swift_getKeyPath(&unk_10009A138);
  v60 = swift_retain(v57);
  v61 = v234;
  static Published.subscript.getter(v234, v60, KeyPath, v59);
  swift_release(v57);
  swift_release(KeyPath);
  v62 = swift_release(v59);
  v63 = enum case for EditMode.active(_:);
  v64 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v56 + 104);
  v66 = v235;
  v65 = v236;
  v64(v235, enum case for EditMode.active(_:), v236, v62);
  sub_1000040A8(&qword_1000D2E40, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode);
  LOBYTE(v57) = dispatch thunk of static Equatable.== infix(_:_:)(v61, v66, v65, v67);
  v68 = *(void (**)(char *, uint64_t))(v56 + 8);
  v68(v66, v65);
  v68(v61, v65);
  v217 = v63;
  if ((v57 & 1) != 0 || (v69 = sub_100059770(), !v70))
  {
    v228 = 0;
    v224 = 0;
    v93 = 0;
    v230 = 0;
    v225 = 0;
    v229 = 0;
  }
  else
  {
    v71 = v69;
    v72 = v70;
    v228 = static VerticalAlignment.center.getter(v69);
    v239 = v71;
    v240 = v72;
    v73 = sub_100014C08();
    swift_bridgeObjectRetain(v72);
    v74 = Text.init<A>(_:)(&v239, &type metadata for String, v73);
    v76 = v75;
    v78 = v77;
    v197 = v55;
    v80 = v79 & 1;
    v81 = static Font.body.getter();
    v82 = Text.font(_:)(v81, v74, v76, v80, v78);
    v196 = v64;
    v83 = v82;
    v85 = v84;
    v87 = v86;
    v224 = v88;
    swift_release(v81);
    v89 = v87 & 1;
    v90 = v80;
    v55 = v197;
    sub_1000085A4(v74, v76, v90);
    v91 = swift_bridgeObjectRelease(v78);
    LODWORD(v239) = static HierarchicalShapeStyle.secondary.getter(v91);
    v92 = v224;
    v93 = Text.foregroundStyle<A>(_:)(&v239, v83, v85, v89, v224, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v229 = v95;
    v230 = v94;
    v225 = v96 & 1;
    v97 = v83;
    v64 = v196;
    v98 = v89;
    v51 = v237;
    sub_1000085A4(v97, v85, v98);
    swift_bridgeObjectRelease(v72);
    swift_bridgeObjectRelease(v92);
    v224 = 1;
  }
  v99 = v226;
  if ((sub_100059880() & 1) == 0)
  {
    v117 = v222;
    v118 = v223;
    (*(void (**)(void **, uint64_t, uint64_t))(v222 + 16))(v99, v51, v223);
    if ((*(unsigned int (**)(void **, uint64_t))(v117 + 88))(v99, v118) == enum case for RootNavigationDestination.folder(_:))
    {
      v119 = v51;
      (*(void (**)(void **, uint64_t))(v117 + 96))(v99, v118);
      v120 = *v99;
      v121 = *(_QWORD *)(v233 + 8);
      v122 = swift_getKeyPath(&unk_100099FC8);
      v123 = swift_getKeyPath(&unk_10009A138);
      v124 = swift_retain(v121);
      v125 = v64;
      v126 = v234;
      static Published.subscript.getter(v234, v124, v122, v123);
      swift_release(v121);
      swift_release(v122);
      v127 = swift_release(v123);
      v129 = v235;
      v128 = v236;
      v125(v235, v217, v236, v127);
      LOBYTE(v121) = static EditMode.== infix(_:_:)(v126, v129);
      v68(v129, v128);
      v68(v126, v128);
      v115 = (uint64_t)v232;
      v113 = (uint64_t)v227;
      if ((v121 & 1) != 0)
      {
        v130 = v227;
        v131 = v200;
        sub_10005B888(v119, v200, type metadata accessor for DestinationRow);
        v132 = *(unsigned __int8 *)(v198 + 80);
        v133 = (v132 + 16) & ~v132;
        v134 = (v199 + v133 + 7) & 0xFFFFFFFFFFFFFFF8;
        v135 = swift_allocObject(&unk_1000C2A00, v134 + 8, v132 | 7);
        v136 = v131;
        v113 = (uint64_t)v130;
        sub_10005DDA0(v136, v135 + v133, type metadata accessor for DestinationRow);
        *(_QWORD *)(v135 + v134) = v120;
        v137 = v120;
        v138 = sub_100012E2C(&qword_1000D1FE8);
        v139 = sub_10001579C();
        v237 = v93;
        v140 = v202;
        v141 = Button.init(action:label:)(sub_10005DDCC, v135, sub_100059A80, 0, v138, v139);
        v142 = v205;
        BorderlessButtonStyle.init()(v141);
        sub_100004038(&qword_1000D2E58, &qword_1000D2DE0);
        v144 = v143;
        sub_1000040A8(&qword_1000D2E60, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
        v145 = v207;
        v146 = v204;
        v147 = v208;
        View.buttonStyle<A>(_:)(v142, v204, v208, v144, v148);
        (*(void (**)(char *, uint64_t))(v206 + 8))(v142, v147);
        v149 = (*(uint64_t (**)(char *, uint64_t))(v203 + 8))(v140, v146);
        LOBYTE(v144) = static Edge.Set.trailing.getter(v149);
        v150 = EdgeInsets.init(_all:)(2.0);
        v152 = v151;
        v154 = v153;
        v156 = v155;
        v157 = v209;
        v158 = (uint64_t)v212;
        v159 = v210;
        (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v212, v145, v210);
        v160 = v158 + *(int *)(v201 + 36);
        *(_BYTE *)v160 = v144;
        *(double *)(v160 + 8) = v150;
        *(_QWORD *)(v160 + 16) = v152;
        *(_QWORD *)(v160 + 24) = v154;
        *(_QWORD *)(v160 + 32) = v156;
        *(_BYTE *)(v160 + 40) = 0;
        v161 = (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v145, v159);
        v162 = static AnyTransition.opacity.getter(v161);
        v163 = static Animation.easeInOut(duration:)(0.2);
        v164 = Animation.delay(_:)(0.28);
        v165 = swift_release(v163);
        v166 = AnyTransition.animation(_:)(v164, v162, v165);
        swift_release(v162);
        swift_release(v164);
        v168 = static AnyTransition.opacity.getter(v167);
        v169 = static Animation.easeInOut(duration:)(0.1);
        v171 = AnyTransition.animation(_:)(v169, v168, v170);
        swift_release(v168);
        v172 = swift_release(v169);
        v173 = static AnyTransition.asymmetric(insertion:removal:)(v166, v171, v172);
        swift_release(v166);
        swift_release(v171);
        v174 = v211;
        sub_10000D74C(v158, v211, &qword_1000D2DF0);
        v175 = v214;
        *(_QWORD *)(v174 + *(int *)(v214 + 36)) = v173;
        sub_10000D7B4(v158, &qword_1000D2DF0);
        v176 = v213;
        sub_1000123CC(v174, v213, &qword_1000D2DF8);
        v177 = v216;
        sub_10000D74C(v176, v216, &qword_1000D2DF8);
        swift_storeEnumTagMultiPayload(v177, v215, 1);
        v178 = sub_100012E2C(&qword_1000D1FD8);
        v179 = sub_100049CB8();
        v180 = sub_10005DF5C();
        _ConditionalContent<>.init(storage:)(v177, v178, v175, v179, v180);

        v93 = v237;
        v115 = (uint64_t)v232;
        sub_10000D7B4(v176, &qword_1000D2DF8);
        v181 = sub_100012E2C(&qword_1000D2E48);
        sub_100015D74(v115, 0, 1, v181);
        sub_1000123CC(v115, v113, &qword_1000D2E00);
        v116 = v231;
        goto LABEL_16;
      }

      v116 = v231;
    }
    else
    {
      (*(void (**)(void **, uint64_t))(v117 + 8))(v99, v118);
      v116 = v231;
      v115 = (uint64_t)v232;
      v113 = (uint64_t)v227;
    }
    v182 = sub_100012E2C(&qword_1000D2E48);
    sub_100015D74(v113, 1, 1, v182);
    goto LABEL_16;
  }
  v100 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  v101 = v219;
  v102 = v218;
  v103 = v220;
  (*(void (**)(char *, _QWORD, uint64_t))(v219 + 104))(v218, enum case for Font.TextStyle.caption(_:), v220);
  v104 = type metadata accessor for Font.Design(0);
  v105 = v221;
  sub_100015D74(v221, 1, 1, v104);
  v106 = static Font.system(_:design:weight:)(v102, v105, 0, 1);
  sub_10000D7B4(v105, &qword_1000D1FA8);
  v107 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v102, v103);
  static Font.Weight.bold.getter(v107);
  v108 = Font.weight(_:)(v106);
  swift_release(v106);
  v109 = swift_getKeyPath(&unk_10009A468);
  v110 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v111 = Color.init(_:)(v110);
  v112 = swift_getKeyPath(&unk_10009A498);
  v239 = v100;
  v240 = v109;
  v241 = v108;
  v242 = v112;
  v243 = v111;
  swift_retain(v100);
  swift_retain(v109);
  swift_retain(v108);
  swift_retain(v112);
  v113 = (uint64_t)v227;
  sub_100050D64(&v239);
  swift_release(v111);
  swift_release_n(v112, 2);
  swift_release_n(v108, 2);
  swift_release_n(v109, 2);
  swift_release_n(v100, 2);
  v114 = sub_100012E2C(&qword_1000D2E48);
  sub_100015D74(v113, 0, 1, v114);
  v116 = v231;
  v115 = (uint64_t)v232;
LABEL_16:
  v183 = v238;
  sub_10000D74C(v55, v238, &qword_1000D2E20);
  sub_10000D74C(v113, v115, &qword_1000D2E00);
  sub_10000D74C(v183, v116, &qword_1000D2E20);
  v184 = (int *)sub_100012E2C(&qword_1000D2E50);
  v185 = v116 + v184[12];
  *(_QWORD *)v185 = 0;
  *(_BYTE *)(v185 + 8) = 1;
  v186 = (uint64_t *)(v116 + v184[16]);
  v187 = v228;
  *v186 = v228;
  v186[1] = 0;
  v188 = v224;
  v186[2] = v224;
  v186[3] = v93;
  v189 = v113;
  v190 = v93;
  v191 = v230;
  v192 = v225;
  v186[4] = v230;
  v186[5] = v192;
  v193 = v55;
  v194 = v229;
  v186[6] = v229;
  sub_10000D74C(v115, v116 + v184[20], &qword_1000D2E00);
  sub_10005DEC8(v187, 0, v188, v190, v191, v192, v194);
  sub_10000D7B4(v189, &qword_1000D2E00);
  sub_10000D7B4(v193, &qword_1000D2E20);
  sub_10000D7B4(v115, &qword_1000D2E00);
  sub_10005DF00(v187, 0, v188, v190, v191, v192, v194);
  sub_10000D7B4(v238, &qword_1000D2E20);
}

double sub_1000596E0(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DestinationRow(0) + 24) + 8);
  swift_retain(v1);
  sub_1000524A8();
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_100059724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_100012E2C(&qword_1000D2E28);
  return sub_10005A244(a1, (char *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_100059770()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DestinationRow(0) + 24) + 8);
  v2 = *(id *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database);
  swift_retain(v1);
  v3 = (void *)sub_100051880();
  v4 = swift_release(v1);
  v5 = RootNavigationDestination.countOfItems(in:autoShortcutsDataSource:)(v2, v3, v4);
  v7 = v6;

  v8 = 0;
  if ((v7 & 1) == 0 && v5)
  {
    v9 = (void *)objc_opt_self(NSNumberFormatter);
    v10 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", v5);
    v11 = objc_msgSend(v9, "localizedStringFromNumber:numberStyle:", v10, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  }
  return v8;
}

uint64_t sub_100059880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DestinationRow(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(v1 + *(int *)(v2 + 24) + 8);
  KeyPath = swift_getKeyPath(&unk_100099FC8);
  v14 = swift_getKeyPath(&unk_10009A138);
  v15 = swift_retain(v12);
  static Published.subscript.getter(v11, v15, KeyPath, v14);
  swift_release(v12);
  swift_release(KeyPath);
  v16 = swift_release(v14);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for EditMode.active(_:), v5, v16);
  sub_1000040A8(&qword_1000D2E40, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode);
  LOBYTE(v14) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v9, v5, v17);
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  v18(v11, v5);
  sub_10005B888(v1, (uint64_t)v4, type metadata accessor for DestinationRow);
  if ((v14 & 1) != 0)
  {
    sub_10005B8C8((uint64_t)v4, type metadata accessor for DestinationRow);
    return 0;
  }
  else
  {
    v20 = *(_QWORD *)&v4[*(int *)(v2 + 24) + 8];
    swift_retain(v20);
    sub_10005B8C8((uint64_t)v4, type metadata accessor for DestinationRow);
    v19 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
    swift_release(v20);
  }
  return v19;
}

uint64_t sub_100059A80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = Image.init(systemName:)(0x7269632E6F666E69, 0xEB00000000656C63);
  v3 = static Font.title3.getter();
  result = swift_getKeyPath(&unk_10009A468);
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

void sub_100059AE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;

  v62 = a2;
  v3 = sub_100012E2C(&qword_1000D2DA0);
  __chkstk_darwin(v3);
  v57 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D30F0);
  __chkstk_darwin(v5);
  v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DestinationRow(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E2C(&qword_1000D2DC8);
  v60 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v61 = (char *)&v52 - v16;
  v17 = __chkstk_darwin(v15);
  v59 = (char *)&v52 - v18;
  __chkstk_darwin(v17);
  v63 = (char *)&v52 - v19;
  v20 = type metadata accessor for RootNavigationDestination(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (void **)((char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
  if ((*(unsigned int (**)(void **, uint64_t))(v21 + 88))(v23, v20) == enum case for RootNavigationDestination.folder(_:))
  {
    (*(void (**)(void **, uint64_t))(v21 + 96))(v23, v20);
    v24 = *v23;
    v55 = a1;
    sub_10005B888(a1, (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DestinationRow);
    v25 = *(unsigned __int8 *)(v8 + 80);
    v26 = (v25 + 16) & ~v25;
    v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = v27 + 8;
    v54 = v25 | 7;
    v28 = swift_allocObject(&unk_1000C29B0, v27 + 8, v25 | 7);
    sub_10005DDA0((uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v26, type metadata accessor for DestinationRow);
    *(_QWORD *)(v28 + v27) = v24;
    __chkstk_darwin(v29);
    *(&v52 - 2) = (uint64_t)v24;
    v30 = v24;
    v31 = sub_100012E2C(&qword_1000D21F8);
    v56 = v14;
    v32 = v31;
    v52 = v31;
    sub_100004038(&qword_1000D21F0, &qword_1000D21F8);
    v34 = v33;
    v35 = Button.init(action:label:)(sub_10005DDCC, v28, sub_10005DDD0, &v52 - 4, v32, v33);
    v36 = (uint64_t)v58;
    static ButtonRole.destructive.getter(v35);
    v37 = type metadata accessor for ButtonRole(0);
    sub_100015D74(v36, 0, 1, v37);
    sub_10005B888(v55, (uint64_t)v10, type metadata accessor for DestinationRow);
    v38 = swift_allocObject(&unk_1000C29D8, v53, v54);
    sub_10005DDA0((uint64_t)v10, v38 + v26, type metadata accessor for DestinationRow);
    *(_QWORD *)(v38 + v27) = v30;
    __chkstk_darwin(v39);
    *(&v52 - 2) = (uint64_t)v30;
    v40 = v30;
    v41 = v59;
    Button.init(role:action:label:)(v36, sub_10005DE8C, v38, sub_10005DEA8, &v52 - 4, v52, v34);
    v43 = v60;
    v42 = v61;
    v44 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    v45 = v63;
    v44(v61, v63, v11);
    v46 = v56;
    v44(v56, v41, v11);
    v47 = (uint64_t)v57;
    v44(v57, v42, v11);
    v48 = sub_100012E2C(&qword_1000D2DD0);
    v44((char *)(v47 + *(int *)(v48 + 48)), v46, v11);

    v49 = *(void (**)(char *, uint64_t))(v43 + 8);
    v49(v41, v11);
    v49(v45, v11);
    v49(v46, v11);
    v49(v42, v11);
    v50 = sub_100012E2C(&qword_1000D2DC0);
    sub_100015D74(v47, 0, 1, v50);
    sub_1000123CC(v47, v62, &qword_1000D2DA0);
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v21 + 8))(v23, v20);
    v51 = sub_100012E2C(&qword_1000D2DC0);
    sub_100015D74(v62, 1, 1, v51);
  }
}

double sub_100059FC0(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DestinationRow(0) + 24) + 8);
  sub_100042DC8();
  sub_100052BB8();
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10005A004(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_100012E2C(&qword_1000D1100);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  sub_100015D74((uint64_t)v9, 0, 1, v10);
  v11 = type metadata accessor for DestinationRow(0);
  sub_10000D74C((uint64_t)v9, (uint64_t)v7, &qword_1000D1100);
  v12 = sub_100012E2C(&qword_1000D28D0);
  Binding.wrappedValue.setter(v7, v12);
  sub_10000D7B4((uint64_t)v9, &qword_1000D1100);
  v13 = *(_QWORD *)(a1 + *(int *)(v11 + 24) + 8);
  v14 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v15 = swift_allocObject(v14, 40, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100096F90;
  *(_QWORD *)(v15 + 32) = a2;
  v21 = v15;
  specialized Array._endMutation()(v15, v16);
  v17 = v21;
  swift_retain(v13);
  v18 = a2;
  sub_1000530EC();
  swift_release(v13);
  return swift_bridgeObjectRelease(v17);
}

void sub_10005A18C(void *a1, unsigned int *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[2];

  v5 = type metadata accessor for LibraryEditingOption(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100018488();
  *v2 = a1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v2, *a2, v5);
  v12[0] = LibraryEditingOption.title.getter(a1);
  v12[1] = v7;
  v8 = LibraryEditingOption.symbolName.getter(v12[0], v7);
  v10 = v9;
  v11 = sub_100014C08();
  Label<>.init<A>(_:systemImage:)(v12, v8, v10, &type metadata for String, v11);
  sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_100026B34();
}

uint64_t sub_10005A244@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD v36[2];

  v34 = a2;
  v3 = sub_100012E2C(&qword_1000D2E98);
  v33 = *(_QWORD *)(v3 - 8);
  v4 = v33;
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v33 - v8;
  v35 = a1;
  v10 = Label.init(title:icon:)(static NavigationDestinationEntity.defaultQuery.setter);
  v36[0] = RootNavigationDestination.displayName.getter(v10);
  v36[1] = v11;
  v12 = sub_100014C08();
  v13 = Text.init<A>(_:)(v36, &type metadata for String, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  v20 = static Edge.Set.trailing.getter();
  v21 = EdgeInsets.init(_all:)(8.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v28(v7, v9, v3);
  v29 = v34;
  v28(v34, v7, v3);
  v30 = &v29[*(int *)(sub_100012E2C((uint64_t *)&unk_1000D2EA0) + 48)];
  *(_QWORD *)v30 = v13;
  *((_QWORD *)v30 + 1) = v15;
  v30[16] = v19;
  *((_QWORD *)v30 + 3) = v17;
  v30[32] = v20;
  *((double *)v30 + 5) = v21;
  *((_QWORD *)v30 + 6) = v23;
  *((_QWORD *)v30 + 7) = v25;
  *((_QWORD *)v30 + 8) = v27;
  v30[72] = 0;
  sub_100015610(v13, v15, v19);
  v31 = *(void (**)(char *, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain(v17);
  v31(v9, v3);
  sub_1000085A4(v13, v15, v19);
  swift_bridgeObjectRelease(v17);
  return ((uint64_t (*)(char *, uint64_t))v31)(v7, v3);
}

uint64_t sub_10005A438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = RootNavigationDestination.symbolName.getter();
  if (!v3)
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  result = Image.init(_internalSystemName:)(v2, v3);
  *a1 = result;
  return result;
}

uint64_t sub_10005A478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for RootNavigationDestination.DropBehavior(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  RootNavigationDestination.dropBehavior.getter(v2);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  v6 = v5 == enum case for RootNavigationDestination.DropBehavior.intoCollection(_:)
    || v5 == enum case for RootNavigationDestination.DropBehavior.intoCollectionWithType(_:);
  v7 = v6;
  if (v6 || v5 != enum case for RootNavigationDestination.DropBehavior.none(_:))
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v7;
}

BOOL sub_10005A53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::OpaquePointer v11;
  id v12;
  void (*v13)(char *, char *, uint64_t);
  Swift::Bool v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for RootNavigationDestination.DropBehavior(0);
  v25 = *(_QWORD *)(v0 - 8);
  v26 = v0;
  __chkstk_darwin(v0);
  v24 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E2C(&qword_1000D23A8);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v8 + *(_QWORD *)(v3 + 72);
  v10 = v7 | 7;
  v22 = v6;
  v11._rawValue = (void *)swift_allocObject(v6, v9, v7 | 7);
  v21 = xmmword_100096E80;
  *((_OWORD *)v11._rawValue + 1) = xmmword_100096E80;
  v12 = (id)WFWorkflowReferenceType();
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v23 = v2;
  v13((char *)v11._rawValue + v8, v5, v2);
  v14 = DropInfo.hasItemsConforming(to:)(v11);
  swift_bridgeObjectRelease(v11._rawValue);
  if (v14)
  {
    v15 = swift_allocObject(v22, v9, v10);
    *(_OWORD *)(v15 + 16) = v21;
    v16 = (id)WFWorkflowReferenceType();
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    v13((char *)(v15 + v8), v5, v23);
    v17 = DropInfo.itemProviders(for:)(v15);
    swift_bridgeObjectRelease(v15);
    v18 = type metadata accessor for SidebarDropDelegate(0);
    v19 = v24;
    RootNavigationDestination.dropBehavior.getter(v18);
    sub_100053368();
    swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v26);
  }
  return v14;
}

uint64_t sub_10005A74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;

  v59 = a2;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v62 = &type metadata for Never;
  v63 = v3;
  v64 = &protocol witness table for Never;
  v65 = v4;
  v5 = type metadata accessor for List(0, &v62);
  v52 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v53 = (char *)&v51 - v9;
  v10 = *(void **)(a1 + 16);
  v11 = type metadata accessor for Optional(255, v10);
  v12 = type metadata accessor for Binding(255, v11);
  v13 = type metadata accessor for Optional(0, v12);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - v14;
  v16 = *(void **)(a1 + 32);
  v62 = v10;
  v63 = v3;
  v54 = v3;
  v55 = v4;
  v64 = v16;
  v65 = v4;
  v17 = type metadata accessor for List(0, &v62);
  v51 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v51 - v21;
  v23 = type metadata accessor for _ConditionalContent(0, v17, v5);
  v57 = *(_QWORD *)(v23 - 8);
  v58 = v23;
  v24 = __chkstk_darwin(v23);
  v56 = (char *)&v51 - v26;
  if (*(_BYTE *)(v25 + *(int *)(a1 + 52)) == 1)
  {
    v27 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v15, v25, v12);
    v28 = sub_100015D74((uint64_t)v15, 0, 1, v12);
    __chkstk_darwin(v28);
    v29 = v54;
    v30 = v55;
    *(&v51 - 6) = (uint64_t)v10;
    *(&v51 - 5) = v29;
    *(&v51 - 4) = (uint64_t)v16;
    *(&v51 - 3) = v30;
    *(&v51 - 2) = v27;
    List.init(selection:content:)(v15, sub_10005DCF4);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v17);
    v32 = v51;
    v33 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v33(v22, v20, v17);
    v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v20, v17);
    v33(v20, v22, v17);
    v35 = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v5);
    v36 = v56;
    sub_100050EB8((uint64_t)v20, v17, v5, WitnessTable, v35);
    v34(v20, v17);
    v34(v22, v17);
  }
  else
  {
    __chkstk_darwin(v24);
    v37 = v54;
    v38 = v55;
    *(&v51 - 6) = (uint64_t)v10;
    *(&v51 - 5) = v37;
    *(&v51 - 4) = (uint64_t)v16;
    *(&v51 - 3) = v38;
    *(&v51 - 2) = v39;
    List<>.init(content:)(sub_10005DCF4);
    v40 = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v5);
    v41 = v52;
    v42 = v53;
    v43 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v43(v53, v8, v5);
    v44 = *(void (**)(char *, uint64_t))(v41 + 8);
    v44(v8, v5);
    v43(v8, v42, v5);
    v45 = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v17);
    v36 = v56;
    sub_100050F7C((uint64_t)v8, v17, v5, v45, v40);
    v44(v8, v5);
    v44(v42, v5);
  }
  v46 = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v17);
  v47 = swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v5);
  v60 = v46;
  v61 = v47;
  v48 = v58;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v58);
  v49 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v59, v36, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v36, v48);
}

void sub_10005AB7C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  _QWORD v14[4];

  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  sub_10001827C();
  v14[0] = v8;
  v14[1] = v9;
  v14[2] = v10;
  v14[3] = v11;
  v12 = a1 + *(int *)(type metadata accessor for ConditionalSelectionList(0, (uint64_t)v14) + 56);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v13(v3, v12, a2);
  v13(a3, v3, a2);
  sub_10005E530(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_100026B34();
}

uint64_t sub_10005AC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;

  v59 = a3;
  v60 = a4;
  v56 = a1;
  v64 = a7;
  v52 = *(_QWORD *)(a5 - 8);
  v10 = __chkstk_darwin(a1);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v53 = (char *)&v52 - v13;
  v57 = type metadata accessor for Prominence(0);
  v14 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Section(0, &type metadata for Text, a5, &type metadata for EmptyView);
  v55 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - v18;
  v70 = &protocol witness table for Text;
  v71 = a6;
  v65 = a6;
  v72 = &protocol witness table for EmptyView;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v68 = v17;
  v69 = WitnessTable;
  v63 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v68, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 0);
  v54 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v22 = __chkstk_darwin(OpaqueTypeMetadata2);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v26 = (char *)&v52 - v25;
  v27 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a5);
  v61 = *(_QWORD *)(v27 - 8);
  v62 = v27;
  v28 = __chkstk_darwin(v27);
  v58 = (char *)&v52 - v29;
  if (a2)
  {
    v68 = v56;
    v69 = a2;
    v30 = sub_100014C08();
    swift_bridgeObjectRetain(a2);
    Section<>.init<A>(_:content:)(&v68, v59, v60, a5, &type metadata for String, v65, v30);
    v31 = v14;
    v32 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
    v33 = v57;
    v32(v16, enum case for Prominence.increased(_:), v57);
    v34 = v63;
    View.headerProminence(_:)(v16, v17, v63);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v33);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v17);
    v68 = v17;
    v69 = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    v36 = v54;
    v37 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v37(v26, v24, OpaqueTypeMetadata2);
    v38 = *(void (**)(char *, uint64_t))(v36 + 8);
    v38(v24, OpaqueTypeMetadata2);
    v37(v24, v26, OpaqueTypeMetadata2);
    v39 = v58;
    v40 = OpaqueTypeConformance2;
    v41 = v65;
    sub_100050EB8((uint64_t)v24, OpaqueTypeMetadata2, a5, v40, v65);
    v38(v24, OpaqueTypeMetadata2);
    v38(v26, OpaqueTypeMetadata2);
  }
  else
  {
    v59(v28);
    v42 = v52;
    v43 = v53;
    v44 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v44(v53, v12, a5);
    v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v12, a5);
    v44(v12, v43, a5);
    v46 = v63;
    v68 = v17;
    v69 = v63;
    v47 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
    v39 = v58;
    v41 = v65;
    sub_100050F7C((uint64_t)v12, OpaqueTypeMetadata2, a5, v47, v65);
    v48 = v12;
    v34 = v46;
    v45(v48, a5);
    v45(v43, a5);
  }
  v68 = v17;
  v69 = v34;
  v66 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 1);
  v67 = v41;
  v49 = v62;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v62);
  v50 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v64, v39, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v39, v49);
}

uint64_t sub_10005B050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10005AC10(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_10005B064(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1000518D4();
}

void sub_10005B08C(_QWORD *a1@<X8>)
{
  sub_100051AC8(a1);
  sub_100018188();
}

void sub_10005B0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v9;

  sub_100012E2C(a5);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018488();
  sub_10005E780(a1);
  a6(v6);
  sub_100026B34();
}

void sub_10005B10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10005B0A8(a1, a2, a3, a4, &qword_1000D1100, sub_100051B2C);
}

uint64_t sub_10005B138(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;

  v1 = (uint64_t *)sub_10005E4C4(a1);
  return sub_10005611C(v1, v2, v3);
}

unint64_t sub_10005B15C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2978;
  if (!qword_1000D2978)
  {
    v1 = sub_1000143E4(&qword_1000D2960);
    sub_100004038(&qword_1000D2980, &qword_1000D2988);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2978);
  }
  return result;
}

void sub_10005B1DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v0 = sub_10005E53C();
  sub_100056244(v0, v1, v2, v3);
}

uint64_t sub_10005B1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10005E3F8();
  v0 = sub_100026B08();
  if (!sub_10005E440(v0))
    sub_10005E42C();
  v1 = sub_100012E2C(&qword_1000D27E8);
  sub_10005E57C(v1);
  v2 = sub_10005E69C();
  return sub_100026E64(v2, v3, v4);
}

uint64_t sub_10005B250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_10005E4C4(a1);
  return sub_100056B8C(v1, v2, v3);
}

unint64_t sub_10005B274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D29E0;
  if (!qword_1000D29E0)
  {
    v1 = sub_1000143E4(&qword_1000D29D8);
    sub_10005B2F8();
    sub_100004038(&qword_1000D2A10, &qword_1000D2A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D29E0);
  }
  return result;
}

unint64_t sub_10005B2F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1000D29E8;
  if (!qword_1000D29E8)
  {
    v1 = sub_1000143E4(&qword_1000D29F0);
    v2 = type metadata accessor for DestinationRow(255);
    sub_1000040A8(&qword_1000D29F8, type metadata accessor for DestinationRow);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.onDrop(of:delegate:)>>, 1);
    sub_100004038(&qword_1000D2A00, &qword_1000D2A08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D29E8);
  }
  return result;
}

uint64_t type metadata accessor for DestinationRow(uint64_t a1)
{
  return sub_100004954(a1, (uint64_t *)&unk_1000D2C38, (uint64_t)&nominal type descriptor for DestinationRow);
}

void sub_10005B3D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_10005E4FC(a1);
  sub_100057588(v1, v2, v3, v4);
}

void sub_10005B3EC(uint64_t a1@<X8>)
{
  _BYTE v2[72];

  sub_100051BB0((uint64_t)v2);
  sub_1000123CC((uint64_t)v2, a1, &qword_1000D24E8);
}

void sub_10005B430(uint64_t a1)
{
  uint64_t v1[9];

  sub_1000123CC(a1, (uint64_t)v1, &qword_1000D24E8);
  sub_10005BDFC(v1);
  sub_100051C1C((uint64_t)v1);
}

uint64_t sub_10005B478()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005B49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10005E3F8();
  v3 = sub_100026B08();
  if (!sub_10005E440(v3))
    sub_10005E42C();
  v4 = sub_100012E2C(&qword_1000D27E8);
  sub_10005E57C(v4);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + ((v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8)));
  v5 = sub_10005E68C();
  return sub_100026E64(v5, v6, v7);
}

double sub_10005B504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for SidebarView(0);
  sub_100050758();
  v0 = sub_1000184E0();
  return sub_1000577D0(v0, v1, v2);
}

void sub_10005B548(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
  sub_100018188();
}

unint64_t sub_10005B568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2A28;
  if (!qword_1000D2A28)
  {
    v1 = sub_1000143E4(&qword_1000D29B0);
    sub_10005B5EC();
    sub_100004038(&qword_1000D2A80, &qword_1000D2A88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2A28);
  }
  return result;
}

unint64_t sub_10005B5EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2A30;
  if (!qword_1000D2A30)
  {
    v1 = sub_1000143E4(&qword_1000D29A8);
    sub_10005B670();
    sub_100004038(&qword_1000D2A70, &qword_1000D2A78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2A30);
  }
  return result;
}

unint64_t sub_10005B670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2A38;
  if (!qword_1000D2A38)
  {
    v1 = sub_1000143E4(&qword_1000D29A0);
    sub_10005B6F4();
    sub_100004038(&qword_1000D2A60, &qword_1000D2A68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2A38);
  }
  return result;
}

unint64_t sub_10005B6F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2A40;
  if (!qword_1000D2A40)
  {
    v1 = sub_1000143E4(&qword_1000D2998);
    sub_10005B778();
    sub_100004038(&qword_1000D2A50, &qword_1000D2A58);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2A40);
  }
  return result;
}

unint64_t sub_10005B778()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  result = qword_1000D2A48;
  if (!qword_1000D2A48)
  {
    v1 = sub_1000143E4(&qword_1000D2990);
    v2 = sub_1000143E4(&qword_1000D29D8);
    v3 = type metadata accessor for NavigationDestinationEntity(255);
    v4 = sub_10005B274();
    sub_1000040A8(&qword_1000D0648, type metadata accessor for NavigationDestinationEntity);
    v6[0] = v2;
    v6[1] = v3;
    v6[2] = v4;
    v6[3] = v5;
    swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.appEntity<A>(_:state:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2A48);
  }
  return result;
}

void sub_10005B848(_QWORD *a1@<X8>)
{
  sub_1000517A0(a1);
  sub_100018188();
}

void sub_10005B864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10005B0A8(a1, a2, a3, a4, (uint64_t *)&unk_1000D4470, sub_1000517B4);
}

void sub_10005B888(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10005E72C(a1, a2, a3);
  sub_10005E570(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100018188();
}

uint64_t type metadata accessor for SidebarDropDelegate(uint64_t a1)
{
  return sub_100004954(a1, qword_1000D2BA8, (uint64_t)&nominal type descriptor for SidebarDropDelegate);
}

void sub_10005B8C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_100042914(v2);
  sub_100018188();
}

uint64_t sub_10005B8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_10005E660();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10005E7F4();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(_QWORD *)(v0 + v4));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)));
  v5 = sub_10005E69C();
  return swift_deallocObject(v5, v6, v7);
}

uint64_t sub_10005B988()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_10005E660() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + v3);
  v6 = v0 + v2;
  v7 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  v8 = *v7;
  v9 = v7[1];
  v10 = swift_task_alloc(dword_1000D2ACC);
  v11 = (_QWORD *)sub_10005E7B0(v10);
  v12 = sub_1000272D4(v11);
  return sub_100053638(v12, v13, v14, v4, v6, v5, v8, v9);
}

uint64_t sub_10005BA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = swift_task_alloc(dword_1000D2AE4);
  v8 = (_QWORD *)sub_10005E7B0(v7);
  *v8 = v3;
  v8[1] = sub_10003E6F0;
  return sub_1000539A0(a1, a2, v6);
}

uint64_t sub_10005BAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  sub_10005E660();
  sub_100050788();
  v2 = v1 | 7;
  v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1000507CC(v8);
  swift_release(*(_QWORD *)(v0 + v5));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v7));
  return sub_100026E64(v0, v7 + 16, v2);
}

void sub_10005BB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005E660();
  sub_100050758();
  sub_1000541F0(v0 + v1, *(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10005BB4C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_10005BBB4;
  return v5(v2 + 16);
}

uint64_t sub_10005BBB4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v1 = (_QWORD *)*v0;
  v5 = v1;
  v2 = (_QWORD *)v1[3];
  v3 = (_QWORD *)*v0;
  sub_10005E614(v1[4], &v5);
  *v2 = v1[2];
  return ((uint64_t (*)(void))v3[1])();
}

uint64_t sub_10005BC00()
{
  uint64_t v0;

  sub_10005E7F4();

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10005BC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc(dword_1000D2B04);
  v3 = (_QWORD *)sub_10005E7B0(v2);
  v4 = sub_1000272D4(v3);
  return sub_100053F10(v4, v5, v6, v1);
}

uint64_t sub_10005BC80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc(dword_1000D2B0C);
  v2 = (_QWORD *)sub_10005E7B0(v1);
  *v2 = v0;
  v2[1] = sub_100034C9C;
  v3 = sub_10005E5F0();
  return v4(v3);
}

void sub_10005BCE4(uint64_t a1)
{
  uint64_t v1;

  sub_10005400C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10005BCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100012E2C(&qword_1000D2B20);
  sub_100050788();
  v3 = v1 + v2;
  v5 = v4 | 7;
  sub_1000507CC(v6);
  return swift_deallocObject(v0, v3, v5);
}

uint64_t sub_10005BD34()
{
  uint64_t v0;

  sub_100012E2C(&qword_1000D2B20);
  sub_1000507D8();
  v0 = sub_1000184E0();
  return sub_100054170(v0);
}

unint64_t sub_10005BD74()
{
  unint64_t result;

  result = qword_1000D2B30;
  if (!qword_1000D2B30)
  {
    result = swift_getWitnessTable(&unk_10009A2F0, &type metadata for SidebarView.SidebarError);
    atomic_store(result, (unint64_t *)&qword_1000D2B30);
  }
  return result;
}

void sub_10005BDB0(double *a1@<X8>)
{
  *a1 = sub_100051C78();
  sub_100018188();
}

void sub_10005BDD4(double *a1)
{
  sub_100051CCC(*a1);
  sub_100018188();
}

uint64_t *sub_10005BDFC(uint64_t *a1)
{
  sub_10005BE40(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  return a1;
}

uint64_t sub_10005BE40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a7);
    return swift_bridgeObjectRetain(a9);
  }
  return result;
}

void sub_10005BE98(uint64_t *a1@<X8>)
{
  *a1 = sub_100051880();
  sub_100018188();
}

uint64_t sub_10005BEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D1100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for SidebarView.SidebarError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10005BF54 + 4 * byte_100099E55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10005BF88 + 4 * byte_100099E50[v4]))();
}

uint64_t sub_10005BF88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005BF90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005BF98);
  return result;
}

uint64_t sub_10005BFA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005BFACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10005BFB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005BFB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarView.SidebarError()
{
  return &type metadata for SidebarView.SidebarError;
}

uint64_t *sub_10005BFD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for RootNavigationDestination(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
  }
  swift_retain(v9);
  return a1;
}

uint64_t sub_10005C05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_10005C0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  return a1;
}

uint64_t sub_10005C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

uint64_t sub_10005C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10005C1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for RootNavigationDestination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_10005C22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005C238);
}

void sub_10005C238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100026B08();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_10005E454(a1, a2, v6);
  }
  else
  {
    sub_10005E5A0(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_100018388();
  }
}

uint64_t sub_10005C290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005C29C);
}

void sub_10005C29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  sub_100026B08();
  sub_10005E74C();
  if (v8)
  {
    sub_10005E460(a1, a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_100018388();
  }
}

uint64_t sub_10005C2F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for RootNavigationDestination(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_10005C368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for RootNavigationDestination(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9);
    v13 = *(uint64_t *)((char *)a2 + v9 + 8);
    *v10 = v12;
    v10[1] = v13;
    swift_retain(v12);
    swift_retain(v13);
    v14 = *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
    v15 = (char *)v10 + v14;
    v16 = &v11[v14];
    if (sub_100019D44((uint64_t)&v11[v14], 1, v7))
    {
      v17 = sub_100012E2C(&qword_1000D1100);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v15, (uint64_t *)v16, v7);
      sub_100015D74((uint64_t)v15, 0, 1, v7);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v18 = v21[1];
    *v20 = *v21;
    v20[1] = v18;
  }
  swift_retain(v18);
  return a1;
}

double sub_10005C4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v7;
  double result;

  v4 = type metadata accessor for RootNavigationDestination(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_release(*v6);
  swift_release(v6[1]);
  v7 = (uint64_t)v6 + *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
  if (!sub_100019D44(v7, 1, v4))
    v5(v7, v4);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10005C548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = type metadata accessor for RootNavigationDestination(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8);
  v12 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = v11;
  v9[1] = v12;
  swift_retain(v11);
  swift_retain(v12);
  v13 = *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
  v14 = (char *)v9 + v13;
  v15 = (const void *)(v10 + v13);
  if (sub_100019D44(v10 + v13, 1, v6))
  {
    v16 = sub_100012E2C(&qword_1000D1100);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    sub_100015D74((uint64_t)v14, 0, 1, v6);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  return a1;
}

char *sub_10005C658(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for RootNavigationDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)&a1[v9];
  v13 = *(_QWORD *)&a2[v9];
  *(_QWORD *)&a1[v9] = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *((_QWORD *)v11 + 1);
  v15 = *((_QWORD *)v10 + 1);
  *((_QWORD *)v10 + 1) = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
  v17 = &v10[v16];
  v18 = &v11[v16];
  LODWORD(v11) = sub_100019D44((uint64_t)v17, 1, v6);
  v19 = sub_100019D44((uint64_t)v18, 1, v6);
  if (!(_DWORD)v11)
  {
    if (!v19)
    {
      v8(v17, v18, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_100012E2C(&qword_1000D1100);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
  sub_100015D74((uint64_t)v17, 0, 1, v6);
LABEL_7:
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  v25 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = v24;
  swift_retain(v24);
  swift_release(v25);
  return a1;
}

uint64_t sub_10005C7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;

  v6 = type metadata accessor for RootNavigationDestination(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v11;
  v12 = *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
  v13 = (char *)v9 + v12;
  v14 = (const void *)(v10 + v12);
  if (sub_100019D44((uint64_t)v14, 1, v6))
  {
    v15 = sub_100012E2C(&qword_1000D1100);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    sub_100015D74((uint64_t)v13, 0, 1, v6);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_10005C8DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for RootNavigationDestination(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)&a1[v9];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_release(v12);
  v13 = *((_QWORD *)v10 + 1);
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_release(v13);
  v14 = *(int *)(sub_100012E2C(&qword_1000D28D0) + 32);
  v15 = &v10[v14];
  v16 = &v11[v14];
  v17 = sub_100019D44((uint64_t)v15, 1, v6);
  v18 = sub_100019D44((uint64_t)v16, 1, v6);
  if (!v17)
  {
    if (!v18)
    {
      v8(v15, v16, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100012E2C(&qword_1000D1100);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
  sub_100015D74((uint64_t)v15, 0, 1, v6);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  v25 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_release(v25);
  return a1;
}

uint64_t sub_10005CA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005CA54);
}

void sub_10005CA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100026B08();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    sub_10005E454(v8, a2, v7);
    return;
  }
  v9 = sub_100012E2C(&qword_1000D28D0);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  sub_10005E5A0(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
  sub_100018388();
}

uint64_t sub_10005CADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005CAE8);
}

void sub_10005CAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_100026B08();
  sub_10005E74C();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_100012E2C(&qword_1000D28D0);
    sub_10005E74C();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      sub_100018388();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 20);
  }
  sub_10005E460(v9, a2, a2, v8);
}

void sub_10005CB68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for RootNavigationDestination(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100004344(319, (unint64_t *)&unk_1000D2C48, &qword_1000D1100);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100099ED0;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_10005CC0C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t sub_10005CC34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_10005CC7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

_QWORD *sub_10005CCE0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

uint64_t sub_10005CD2C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10005CD6C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ConditionalSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000037C0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionalSection);
}

uint64_t sub_10005CDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_10005CDC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 16));
  result = type metadata accessor for Binding(319, v2);
  if (v4 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    v6[1] = &unk_100099E90;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 3, v6, a1 + 48);
      return 0;
    }
  }
  return result;
}

_QWORD *sub_10005CE60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  const void *v22;
  void *__dst;
  uint64_t v26;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = ((v7 + 16) & ~v7) + v8;
  v10 = *(_QWORD *)(v4 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = ((v9 + v11 + 1) & ~(unint64_t)v11) + *(_QWORD *)(v10 + 64);
  v14 = (v11 | *(_DWORD *)(v6 + 80)) & 0x100000;
  v15 = *a2;
  *a1 = *a2;
  if ((v11 | v7) > 7 || v14 != 0 || v13 > 0x18)
  {
    a1 = (_QWORD *)(v15
                  + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16)));
    swift_retain(v15);
  }
  else
  {
    v26 = v4;
    v19 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v20 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = *v20;
    *v19 = *v20;
    __dst = (void *)(((unint64_t)v19 + v7 + 8) & ~v7);
    v22 = (const void *)(((unint64_t)v20 + v7 + 8) & ~v7);
    swift_retain(v15);
    swift_retain(v21);
    if (sub_100019D44((uint64_t)v22, 1, v5))
    {
      memcpy(__dst, v22, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(__dst, v22, v5);
      sub_100015D74((uint64_t)__dst, 0, 1, v5);
    }
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v9 + v12 + 1) & ~v12, ((unint64_t)a2 + v9 + v12 + 1) & ~v12, v26);
  }
  return a1;
}

uint64_t sub_10005D008(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (unint64_t)a1 + 15;
  swift_release(*a1);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8));
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  if (!sub_100019D44(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = (uint64_t)a1 + *(_QWORD *)(v7 + 64) + ((v8 + 16) & ~v8);
  if (!*(_DWORD *)(v7 + 84))
    ++v10;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v10 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t *sub_10005D0D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;

  v6 = *a2;
  *a1 = *a2;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v7 + v12 + 8) & ~v12);
  v14 = (const void *)(((unint64_t)v8 + v12 + 8) & ~v12);
  swift_retain(v6);
  swift_retain(v9);
  if (sub_100019D44((uint64_t)v14, 1, v10))
  {
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
    if (v15)
      v17 = *(_QWORD *)(v11 + 64);
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    sub_100015D74((uint64_t)v13, 0, 1, v10);
    v15 = *(_DWORD *)(v11 + 84);
    v16 = *(_QWORD *)(v11 + 64);
  }
  v18 = v16 + ((v12 + 16) & ~v12);
  if (!v15)
    ++v18;
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 16))((unint64_t)&v19[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (unint64_t)&v20[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

uint64_t *sub_10005D21C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  size_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;

  v6 = *a1;
  v8 = (unint64_t)a2 + 15;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v9 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v12 = *v9;
  *v9 = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (void *)(((unint64_t)v9 + v15 + 8) & ~v15);
  v17 = (const void *)((v15 + 8 + v10) & ~v15);
  LODWORD(v10) = sub_100019D44((uint64_t)v16, 1, v13);
  v18 = sub_100019D44((uint64_t)v17, 1, v13);
  if ((_DWORD)v10)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v16, v17, v13);
      sub_100015D74((uint64_t)v16, 0, 1, v13);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v14 + 84))
      v19 = *(_QWORD *)(v14 + 64);
    else
      v19 = *(_QWORD *)(v14 + 64) + 1;
    memcpy(v16, v17, v19);
    goto LABEL_10;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_6;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v16, v17, v13);
LABEL_10:
  v20 = *(_QWORD *)(v14 + 64) + ((v15 + 16) & ~v15);
  if (!*(_DWORD *)(v14 + 84))
    ++v20;
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *v21 = *v22;
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v23 + 24))((unint64_t)&v21[*(unsigned __int8 *)(v23 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (unint64_t)&v22[*(unsigned __int8 *)(v23 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  return a1;
}

_QWORD *sub_10005D3BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  if (sub_100019D44((uint64_t)v12, 1, v8))
  {
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v11, v12, v8);
    sub_100015D74((uint64_t)v11, 0, 1, v8);
    v13 = *(_DWORD *)(v9 + 84);
    v14 = *(_QWORD *)(v9 + 64);
  }
  v16 = v14 + ((v10 + 16) & ~v10);
  if (!v13)
    ++v16;
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *v17 = *v18;
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 32))((unint64_t)&v17[*(unsigned __int8 *)(v19 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (unint64_t)&v18[*(unsigned __int8 *)(v19 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t *sub_10005D4F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;

  v6 = *a1;
  v7 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release(v6);
  v8 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = *v8;
  *v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v10);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)v8 + v13 + 8) & ~v13);
  v15 = (const void *)((v13 + 8 + v9) & ~v13);
  LODWORD(v9) = sub_100019D44((uint64_t)v14, 1, v11);
  v16 = sub_100019D44((uint64_t)v15, 1, v11);
  if ((_DWORD)v9)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v14, v15, v11);
      sub_100015D74((uint64_t)v14, 0, 1, v11);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v12 + 84))
      v17 = *(_QWORD *)(v12 + 64);
    else
      v17 = *(_QWORD *)(v12 + 64) + 1;
    memcpy(v14, v15, v17);
    goto LABEL_10;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v14, v15, v11);
LABEL_10:
  v18 = *(_QWORD *)(v12 + 64) + ((v13 + 16) & ~v13);
  if (!*(_DWORD *)(v12 + 84))
    ++v18;
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 40))((unint64_t)&v19[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (unint64_t)&v20[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

uint64_t sub_10005D688(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v23;
  int v24;
  int v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned int v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v6 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v10)
    v13 = v10;
  else
    v13 = *(_DWORD *)(v11 + 84);
  v14 = *(_QWORD *)(v7 + 64);
  if (!(_DWORD)v8)
    ++v14;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = v14 + ((v15 + 16) & ~v15);
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = a2 - v13;
  if (a2 <= v13)
    goto LABEL_32;
  v19 = ((v17 + v16 + 1) & ~v17) + *(_QWORD *)(v11 + 64);
  v20 = 8 * v19;
  if (v19 <= 3)
  {
    v23 = ((v18 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (!v21)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v23 > 0xFF)
    {
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (!*(_WORD *)(a1 + v19))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v23 < 2)
    {
LABEL_32:
      if (v10 < v12)
        return sub_100019D44((a1 + v17 + v16 + 1) & ~v17, v12, v6);
      v26 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v9 & 0x80000000) != 0)
      {
        v28 = sub_100019D44(((unint64_t)v26 + v15 + 8) & ~v15, v8, v5);
        if (v28 >= 2)
          return v28 - 1;
        else
          return 0;
      }
      else
      {
        v27 = *v26;
        if (v27 >= 0xFFFFFFFF)
          LODWORD(v27) = -1;
        return (v27 + 1);
      }
    }
  }
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_32;
LABEL_23:
  v24 = (v21 - 1) << v20;
  if (v19 > 3)
    v24 = 0;
  if ((_DWORD)v19)
  {
    if (v19 <= 3)
      v25 = v19;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return v13 + v24 + 1;
}

void sub_10005D860(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  char v16;
  BOOL v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v11 + 84) <= v10)
    v12 = v10;
  else
    v12 = *(_DWORD *)(v11 + 84);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v14;
  v15 = ((*(unsigned __int8 *)(v11 + 80) + ((v13 + 16) & ~v13) + v14 + 1) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  v16 = 8 * v15;
  v17 = a3 >= v12;
  v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        v6 = &dword_100000004;
      }
      else if (v19 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v19 > 1;
      }
    }
    else
    {
      v6 = &_mh_execute_header.magic + 1;
    }
  }
  if (v12 < a2)
  {
    v20 = ~v12 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v21 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *a1 = v21;
          *((_BYTE *)a1 + 2) = BYTE2(v21);
        }
        else if ((_DWORD)v15 == 2)
        {
          *a1 = v21;
        }
        else
        {
          *(_BYTE *)a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

void sub_10005DAD8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_10005DAE0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_10005DAE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

void sub_10005DB5C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_10005DB7C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

uint64_t type metadata accessor for ConditionalSelectionList(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ConditionalSelectionList);
}

unint64_t sub_10005DBB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2D80;
  if (!qword_1000D2D80)
  {
    v1 = sub_1000143E4(&qword_1000D2908);
    sub_100057FD4();
    sub_1000040A8(&qword_1000D2330, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2D80);
  }
  return result;
}

unint64_t sub_10005DC40()
{
  unint64_t result;

  result = qword_1000D2D88;
  if (!qword_1000D2D88)
  {
    result = swift_getWitnessTable(&unk_10009A2C8, &type metadata for SidebarView.SidebarError);
    atomic_store(result, (unint64_t *)&qword_1000D2D88);
  }
  return result;
}

uint64_t sub_10005DC7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000A7448, 1);
}

uint64_t sub_10005DC8C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000A7414, 1);
}

uint64_t sub_10005DCC0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_1000A73D4, 1);
}

void sub_10005DCF8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10005AB7C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

void sub_10005DD18(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100059AE4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10005DD20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2DB0;
  if (!qword_1000D2DB0)
  {
    v1 = sub_1000143E4(&qword_1000D2DA0);
    sub_100004038(&qword_1000D2DB8, &qword_1000D2DC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2DB0);
  }
  return result;
}

void sub_10005DDA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10005E72C(a1, a2, a3);
  sub_10005E570(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100018188();
}

void sub_10005DDD0()
{
  uint64_t v0;

  sub_10005A18C(*(void **)(v0 + 16), (unsigned int *)&enum case for LibraryEditingOption.folderDetails(_:));
}

uint64_t sub_10005DDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_100018190();
  v2 = *(_QWORD *)(type metadata accessor for DestinationRow(0) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100026B08();
  sub_10005E5D8(v5);
  sub_10005E6BC();
  swift_release(*(_QWORD *)(v1 + 8));
  v6 = sub_100012E2C(&qword_1000D28D0);
  if (!sub_10005E5B4(v6))
    sub_10005E7A4();
  v7 = (v4 + ((v3 + 16) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10005E6AC();

  return sub_10005E4AC(v0, v7 + 8, v3 | 7);
}

uint64_t sub_10005DE8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v0 = type metadata accessor for DestinationRow(0);
  v1 = sub_10005E480(v0);
  return sub_10005A004(v1, v2);
}

void sub_10005DEA8()
{
  uint64_t v0;

  sub_10005A18C(*(void **)(v0 + 16), (unsigned int *)&enum case for LibraryEditingOption.folderDeletion(_:));
}

uint64_t sub_10005DEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_100015610(a4, a5, a6 & 1);
    return swift_bridgeObjectRetain(a7);
  }
  return result;
}

uint64_t sub_10005DF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_1000085A4(a4, a5, a6 & 1);
    return swift_bridgeObjectRelease(a7);
  }
  return result;
}

double sub_10005DF3C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for DestinationRow(0);
  v1 = sub_10005E480(v0);
  return sub_100059FC0(v1);
}

unint64_t sub_10005DF5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D2E68;
  if (!qword_1000D2E68)
  {
    v1 = sub_1000143E4(&qword_1000D2DF8);
    sub_10005DFE0();
    sub_100004038(&qword_1000D2E78, &qword_1000D2E80);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2E68);
  }
  return result;
}

unint64_t sub_10005DFE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_1000D2E70;
  if (!qword_1000D2E70)
  {
    v1 = sub_1000143E4(&qword_1000D2DF0);
    v2 = sub_1000143E4(&qword_1000D2DE0);
    v3 = type metadata accessor for BorderlessButtonStyle(255);
    sub_100004038(&qword_1000D2E58, &qword_1000D2DE0);
    v5 = v4;
    sub_1000040A8(&qword_1000D2E60, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D2E70);
  }
  return result;
}

uint64_t sub_10005E0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100018190();
  v2 = *(_QWORD *)(type metadata accessor for DestinationRow(0) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100026B08();
  sub_10005E5D8(v5);
  sub_10005E6BC();
  swift_release(*(_QWORD *)(v1 + 8));
  v6 = sub_100012E2C(&qword_1000D28D0);
  if (!sub_10005E5B4(v6))
    sub_10005E7A4();
  sub_10005E6AC();
  return sub_10005E4AC(v0, ((v3 + 16) & ~v3) + v4, v3 | 7);
}

double sub_10005E164()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for DestinationRow(0);
  sub_1000507D8();
  return sub_1000596E0(v0 + v1);
}

uint64_t sub_10005E184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100059724(*(_QWORD *)(v1 + 16), a1);
}

_QWORD *sub_10005E18C(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_10005E1B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10005A438(a1);
}

uint64_t sub_10005E1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10005E78C(a1, a2, a3, a4);
  v8 = sub_10005E78C(v4, v5, v6, v7);
  v9 = type metadata accessor for _ConditionalContent(255, v4, v8);
  swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for List<A, B>, v8);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v9);
}

uint64_t sub_10005E280(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for Section(255, &type metadata for Text, *a1, &type metadata for EmptyView);
  v10 = &protocol witness table for Text;
  v11 = v2;
  v12 = &protocol witness table for EmptyView;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v3);
  v8 = v3;
  v9 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v8, &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>, 0);
  v6 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v1);
  v8 = v3;
  v9 = WitnessTable;
  sub_10005E75C((uint64_t)&v8, (uint64_t)&opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
}

uint64_t sub_10005E360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v0 = sub_1000143E4(&qword_1000D2D90);
  v1 = sub_1000143E4(&qword_1000D2DA0);
  sub_100004038(&qword_1000D2DA8, &qword_1000D2D90);
  v4[0] = v0;
  v4[1] = v1;
  v4[2] = v2;
  v4[3] = sub_10005DD20();
  return sub_10005E75C((uint64_t)v4, (uint64_t)&opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>);
}

double sub_10005E3F8()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(type metadata accessor for SidebarView(0) - 8);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                                               + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10005E42C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_10005E440(uint64_t a1)
{
  uint64_t v1;

  return sub_100019D44(v1, 1, a1);
}

uint64_t sub_10005E454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100019D44(a1, a2, a3);
}

uint64_t sub_10005E460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100015D74(a1, a2, a3, a4);
}

uint64_t sub_10005E46C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10005E480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 16) & ~v2);
}

uint64_t sub_10005E4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

uint64_t sub_10005E4C4(uint64_t a1)
{
  type metadata accessor for SidebarView(0);
  return a1;
}

uint64_t sub_10005E4FC(uint64_t a1)
{
  type metadata accessor for SidebarView(0);
  return a1;
}

uint64_t sub_10005E530@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_10005E53C()
{
  uint64_t v0;

  type metadata accessor for SidebarView(0);
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_10005E570@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_10005E57C(uint64_t a1)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + *(int *)(a1 + 28)));
}

_QWORD *sub_10005E588(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return static Published.subscript.getter((uint64_t *)va, v3, v2, a1);
}

uint64_t sub_10005E5A0@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t sub_10005E5B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_100019D44(v2 + *(int *)(a1 + 32), 1, v1);
}

uint64_t sub_10005E5CC(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_10005E5D8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10005E5F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10005E600()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10005E614@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_10005E61C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10005E630(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33, 0);
}

uint64_t sub_10005E63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static Published.subscript.setter(v1, v0, v2, v3);
}

uint64_t sub_10005E650()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_10005E658(uint64_t a1)
{
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10005E660()
{
  return type metadata accessor for RootNavigationDestination.DropBehavior(0);
}

uint64_t sub_10005E668(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a1);
  return static Published.subscript.setter(va, v1, v2, v3);
}

uint64_t sub_10005E67C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10005E68C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10005E69C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10005E6AC()
{
  uint64_t v0;
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + *(int *)(v0 + 24) + 8));
}

uint64_t sub_10005E6BC()
{
  uint64_t v0;
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + *(int *)(v0 + 20)));
}

uint64_t sub_10005E6CC()
{
  uint64_t v0;

  return v0;
}

void sub_10005E6D8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_10005E6E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100015D74(a1, 0, 1, v1);
}

uint64_t sub_10005E6F4()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_10005E70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_10005E714()
{
  uint64_t v0;

  return _CocoaArrayWrapper.endIndex.getter(v0);
}

void sub_10005E71C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_10000D74C(v0, v2, v1);
}

uint64_t sub_10005E72C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_10005E73C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_100012E2C(a3);
}

uint64_t sub_10005E75C(uint64_t a1, uint64_t a2)
{
  return swift_getOpaqueTypeConformance2(a1, a2, 1);
}

uint64_t sub_10005E764()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_10005E780(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_10000D74C(a1, v2, v1);
}

uint64_t sub_10005E78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return type metadata accessor for List(255, va);
}

uint64_t sub_10005E798()
{
  uint64_t v0;
  uint64_t v1;

  return Published.init(initialValue:)(v0, *(_QWORD *)(v1 - 192));
}

uint64_t sub_10005E7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_10005E7B0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10005E7BC(uint64_t a1)
{
  uint64_t v1;

  return static NSObject.== infix(_:_:)(a1, v1);
}

uint64_t sub_10005E7C4()
{
  uint64_t v0;

  return swift_endAccess(v0 - 160);
}

uint64_t sub_10005E7CC()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_10005E7D4()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_10005E7DC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, a1);
}

uint64_t sub_10005E7E8(uint64_t a1, uint64_t a2)
{
  return Published.init(initialValue:)(a1, a2);
}

uint64_t sub_10005E7F4()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005E7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + a1);
}

void sub_10005E804()
{
  uint64_t v0;
  uint64_t *v1;

  sub_10000D7B4(v0, v1);
}

uint64_t sub_10005E810()
{
  uint64_t v0;
  uint64_t v1;

  sub_100015D74(v1, 1, 1, v0);
  return v1;
}

uint64_t sub_10005E834(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return String.subscript.getter(15, a1, a2);
  else
    return 0;
}

unint64_t sub_10005E874(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v13;
  _QWORD v14[2];

  v2 = HIBYTE(a2) & 0xF;
  v3 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    sub_100068850(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v7 & 0xFFFFFFFFFFFF0000, a1, a2);
    }
    else
    {
      v8 = v7 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v14[0] = a1;
        v14[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v9 = v14;
        v10 = v2;
      }
      else
      {
        if ((a1 & 0x1000000000000000) != 0)
        {
          v9 = (_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v9 = (_QWORD *)_StringObject.sharedUTF8.getter(a1, a2);
          v3 = v13;
        }
        v10 = v3;
      }
      v11 = _decodeScalar(_:startingAt:)(v9, v10, v8);
    }
  }
  else
  {
    v11 = 0;
  }
  LOBYTE(v14[0]) = v4 == 0;
  return v11 | ((unint64_t)(v4 == 0) << 32);
}

uint64_t sub_10005E950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005E968(a1, (uint64_t (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem, a2);
}

uint64_t sub_10005E95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005E968(a1, (uint64_t (*)(_QWORD))&type metadata accessor for RootNavigationDestination, a2);
}

uint64_t sub_10005E968@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = a2(0);
  v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return sub_100015D74(a3, v8, 1, v7);
}

_QWORD *sub_10005E9E0(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v34;
  unint64_t v35;

  v8 = _swiftEmptyArrayStorage;
  v35 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v12 = *(_QWORD *)(type metadata accessor for LibraryEditingAction(0) - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    v30 = a1;
    swift_bridgeObjectRetain(a1);
    v15 = a3 & 1;
    while (1)
    {
      v16 = sub_100062638(v13, (uint64_t)a2, v15, a4, a5, a6, &v34);
      if (v6)
        break;
      v24 = v34;
      if (v34)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16, v17, v18, v19, v20, v21, v22, v23);
        v26 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v25 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v26 >= v25 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
        specialized Array._endMutation()(v27, v28);
      }
      v13 += v14;
      if (!--v9)
      {
        swift_bridgeObjectRelease(v30);
        v8 = (_QWORD *)v35;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease(v30);
    v8 = (_QWORD *)v35;
    swift_bridgeObjectRelease(a5);

    swift_bridgeObjectRelease(v8);
  }
  else
  {
LABEL_11:

    swift_bridgeObjectRelease(a5);
  }

  return v8;
}

char *sub_10005EB70(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;

  v3 = v2;
  v32 = a2;
  v5 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v30 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v28 = (char *)&v26 - v11;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v12; v12 = _CocoaArrayWrapper.endIndex.getter(v24))
  {
    v26 = v3;
    v29 = a1 & 0xC000000000000001;
    v13 = (char *)_swiftEmptyArrayStorage;
    v14 = 4;
    v27 = a1;
    while (1)
    {
      v3 = v14 - 4;
      v15 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v3, 1))
        break;
      sub_100012A90();
      v19 = v18;
      sub_100087514();

      swift_release(v19);
      if (sub_100019D44((uint64_t)v7, 1, v8) == 1)
      {
        sub_10001222C((uint64_t)v7, &qword_1000D10F0);
      }
      else
      {
        v20 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v21 = v28;
        v20(v28, v7, v8);
        v20(v31, v21, v8);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (char *)sub_100065764(0, *((_QWORD *)v13 + 2) + 1, 1, (uint64_t)v13, &qword_1000D30C0, (void (*)(_QWORD))&type metadata accessor for IndexPath);
        v23 = *((_QWORD *)v13 + 2);
        v22 = *((_QWORD *)v13 + 3);
        if (v23 >= v22 >> 1)
          v13 = (char *)sub_100065764(v22 > 1, v23 + 1, 1, (uint64_t)v13, &qword_1000D30C0, (void (*)(_QWORD))&type metadata accessor for IndexPath);
        *((_QWORD *)v13 + 2) = v23 + 1;
        v20(&v13[((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v23], v31, v8);
        a1 = v27;
      }
      ++v14;
      if (v17 == v12)
      {

        swift_bridgeObjectRelease(a1);
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }

  swift_bridgeObjectRelease(a1);
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_10005EE50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v33 = (char *)a3;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  if (v36)
  {
    v37 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v40 = *(_QWORD *)(v6 + 72);
    v15 = a1;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v39 = a2 + 7;
    swift_bridgeObjectRetain(v15);
    v17 = 0;
    v34 = v14;
    while (1)
    {
      v16(v14, v37 + v40 * v17, v5);
      sub_100015D74((uint64_t)v14, 0, 1, v5);
      if (sub_100019D44((uint64_t)v14, 1, v5) == 1)
        break;
      v38 = v17;
      v18 = v6;
      v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v35(v11, v14, v5);
      if (a2[2])
      {
        v19 = a2;
        v20 = a2[5];
        sub_100004998(&qword_1000D30B0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v20, v5, v21);
        a2 = v19;
        v23 = -1 << *((_BYTE *)v19 + 32);
        v24 = v22 & ~v23;
        if (((*(_QWORD *)((char *)v39 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
        {
          v25 = ~v23;
          while (1)
          {
            v16(v9, a2[6] + v24 * v40, v5);
            sub_100004998(&qword_1000D30B8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
            v27 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v11, v5, v26);
            (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v5);
            if ((v27 & 1) != 0)
              break;
            v24 = (v24 + 1) & v25;
            a2 = v19;
            if (((*(_QWORD *)((char *)v39 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
              goto LABEL_9;
          }
          swift_bridgeObjectRelease(v32);
          v28 = (uint64_t)v33;
          v35(v33, v11, v5);
          sub_100015D74(v28, 0, 1, v5);
          v29 = v19;
          return swift_bridgeObjectRelease(v29);
        }
      }
LABEL_9:
      v17 = v38 + 1;
      v6 = v18;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v5);
      v14 = v34;
      if (v17 == v36)
        goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
LABEL_13:
    sub_100015D74((uint64_t)v14, 1, 1, v5);
  }
  swift_bridgeObjectRelease(v32);
  sub_100015D74((uint64_t)v33, 1, 1, v5);
  v29 = a2;
  return swift_bridgeObjectRelease(v29);
}

uint64_t sub_10005F17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005F1B8(a1, a2, a3, (uint64_t)&unk_1000C2D90, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1000D30A8);
}

uint64_t sub_10005F19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005F1B8(a1, a2, a3, (uint64_t)&unk_1000C2E30, (uint64_t)&type metadata for Bool, (uint64_t)&unk_1000D3108);
}

uint64_t sub_10005F1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = sub_100068F0C();
  v15 = sub_100026D88(v13, v14, v12);
  if (v16)
  {
    sub_100068F18(v15, &qword_1000D10D0);
    v18 = 7168;
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v15);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    v18 = v17 | 0x1C00;
  }
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
    v23 = v22;
    swift_unknownObjectRelease(v19);
  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = sub_100026B2C(a4, 32);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  if (v23 | v21)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v21;
    v27[3] = v23;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v18, v25, a5, a6, v24);
}

uint64_t sub_10005F2F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  uint64_t v10;
  id v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for WFWorkflowTypeName(0);
  v4 = v3;
  sub_100004998((unint64_t *)&unk_1000D31A0, (uint64_t (*)(uint64_t))type metadata accessor for WFWorkflowTypeName, (uint64_t)&unk_100096D98);
  v6 = Set.init(minimumCapacity:)(v2, v4, v5);
  v13 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = *(void **)(a1 + 8 * i + 32);
      sub_100066424(&v12, v9);

    }
    sub_1000183D0();
    return v13;
  }
  else
  {
    v10 = v6;
    sub_1000183D0();
  }
  return v10;
}

uint64_t sub_10005F3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[2];
  uint64_t v10;

  v2 = Set.init(minimumCapacity:)(*(_QWORD *)(a1 + 16), &type metadata for String, &protocol witness table for String);
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_100066584(v9, v5, v6);
      swift_bridgeObjectRelease(v9[1]);
      v4 += 2;
      --v3;
    }
    while (v3);
    sub_1000183D0();
    return v10;
  }
  else
  {
    v7 = v2;
    sub_1000183D0();
  }
  return v7;
}

uint64_t sub_10005F458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  sub_100004998(&qword_1000D30B0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v14 = Set.init(minimumCapacity:)(v12, v2, v13);
  v20 = a1;
  v21 = v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = v20 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v18(v11, v16, v2);
      sub_100015D74((uint64_t)v11, 0, 1, v2);
      if (sub_100019D44((uint64_t)v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_1000666D4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v16 += v17;
      if (!--v15)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    sub_100015D74((uint64_t)v11, 1, 1, v2);
  }
  swift_bridgeObjectRelease(v20);
  return v21;
}

void sub_10005F620()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t (**v35)(uint64_t, uint64_t);
  uint64_t v36;
  void *v37;

  sub_100018190();
  v37 = v0;
  v5 = v4;
  v6 = type metadata accessor for ShortcutsLibraryItem.ItemType(0);
  v35 = *(uint64_t (***)(uint64_t, uint64_t))(v6 - 8);
  v36 = v6;
  sub_100018044();
  __chkstk_darwin(v7);
  sub_1000181C8();
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100042BD0();
  v9 = type metadata accessor for ShortcutsLibraryItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100019D7C();
  v13 = v12 - v11;
  sub_100012E2C(&qword_1000D10F0);
  sub_100018044();
  __chkstk_darwin(v14);
  v15 = sub_100068D94();
  __chkstk_darwin(v15);
  sub_100018488();
  v18 = *(_QWORD *)(v5 + 16);
  if (v18)
  {
    if (v18 == 1)
    {
      v34 = v17;
      sub_100069000((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, (uint64_t)v0);
      v19 = sub_100068F0C();
      v21 = sub_100026D88(v19, v20, v15);
      if (v22)
      {
        sub_100068F18(v21, &qword_1000D10F0);
      }
      else
      {
        (*(void (**)(uint64_t, void *, uint64_t))(v34 + 32))(v1, v0, v15);
        sub_100012A90();
        sub_100012EC0(v1, v3);
        sub_100019D9C();
        sub_100026D88(v3, 1, v9);
        if (v22)
        {
          sub_10001222C(v3, &qword_1000D3670);
        }
        else
        {
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v3, v9);
          ShortcutsLibraryItem.itemType.getter(v23);
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
          v24 = v35[11](v2, v36);
          if (v24 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
          {
            sub_100068D50();
            sub_100068FEC(v35[12]);
            v25 = type metadata accessor for AutoShortcutAppSection(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v2, v25);
            goto LABEL_16;
          }
          sub_100068FEC(v35[1]);
        }
        sub_100012A90();
        sub_100086EE4(v1);
        v27 = v26;
        v28 = sub_100019D9C();
        if (v27)
        {
          sub_100047E90(v28, &qword_1000D3140, UIContextMenuConfiguration_ptr);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v30 = sub_100026B2C((uint64_t)&unk_1000C2B60, 24);
          swift_unknownObjectWeakInit(v30 + 16, v37);
          v31 = sub_100026B2C((uint64_t)&unk_1000C2EF8, 32);
          *(_QWORD *)(v31 + 16) = v30;
          *(_QWORD *)(v31 + 24) = v27;
          swift_retain(v30);
          sub_100060B18((uint64_t)isa, 0, 0, (uint64_t)sub_100068C1C, v31);
          sub_100068D50();
          sub_100042CE0();
          goto LABEL_16;
        }
        v16 = sub_100068D50();
      }
    }
    sub_100047E90(v16, &qword_1000D3140, UIContextMenuConfiguration_ptr);
    v32 = sub_100026B2C((uint64_t)&unk_1000C2ED0, 32);
    *(_QWORD *)(v32 + 16) = v0;
    *(_QWORD *)(v32 + 24) = v5;
    sub_100027658();
    v33 = v0;
    sub_100060B18(0, 0, 0, (uint64_t)sub_100068BDC, v32);
  }
LABEL_16:
  sub_100018094();
}

uint64_t sub_10005F958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  Class v46;
  objc_class *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  Class isa;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  objc_class *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Class v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  void (*v114)(uint64_t, uint64_t);
  Class v115;
  objc_class *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  Class v128;
  Swift::String v129;
  uint64_t result;
  Swift::OpaquePointer v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(uint64_t *, unint64_t, uint64_t);
  uint64_t v151;
  int v152;
  Class v153;
  uint64_t v154;
  UIMenuElementSize v155;
  char v156[32];
  UIImage_optional v157;
  UIImage_optional v158;

  v5 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant(0);
  v142 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v141 = (uint64_t *)((char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v144 = type metadata accessor for ButtonRole(0);
  v137 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v134 = (uint64_t)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100012E2C(&qword_1000D3148);
  __chkstk_darwin(v140);
  v143 = (uint64_t)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E2C(&qword_1000D30F0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v132 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v132 - v16;
  v146 = type metadata accessor for ShortcutChiclet.MenuItem(0);
  v18 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v149 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v156, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v28 = (void *)Strong;
  sub_1000602C4(a3, v21, v22, v23, v24, v25, v26, v27, v132, (uint64_t)v133, v134, v135, (int)v136, SHIDWORD(v136), v137, v138, v139, v140, (uint64_t)v141,
    v142,
    v143);
  v155 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(v29 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease(v29);
    v115 = 0;
    goto LABEL_42;
  }
  v136 = v12;
  v133 = v28;
  v153 = 0;
  v31 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v132 = v29;
  v32 = v29 + v31;
  v152 = enum case for ShortcutChiclet.MenuItem.item(_:);
  v138 = __PAIR64__(enum case for ShortcutChiclet.MenuItem.divider(_:), enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:));
  HIDWORD(v135) = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:);
  v33 = *(_QWORD *)(v18 + 72);
  v150 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v18 + 16);
  v151 = v33;
  v147 = v5;
  v148 = v17;
  v34 = v143;
  v35 = v144;
  v145 = v15;
  v36 = v146;
  v139 = v18;
  v37 = (uint64_t *)v149;
  do
  {
    v150(v37, v32, v36);
    v38 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 88))(v37, v36);
    if (v38 != v152)
    {
      if (v38 == HIDWORD(v138))
      {
        v46 = v153;
        if (v153)
        {
          v47 = v153;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47, v48, v49, v50, v51, v52, v53, v54);
          v56 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v55 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v56 >= v55 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
          v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v47);
          specialized Array._endMutation()(v57, v58);
          v17 = v148;
          v36 = v146;
          v46 = v153;
        }
        sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
        v59._countAndFlagsBits = 0;
        v59._object = (void *)0xE000000000000000;
        v157.value.super.isa = 0;
        v157.is_nil = 0;
        isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v59, (Swift::String_optional)0, v157, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v131).super.super.isa;

        v153 = isa;
        v37 = (uint64_t *)v149;
        v5 = v147;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v37, v36);
      }
      goto LABEL_31;
    }
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 96))(v37, v36);
    v40 = *v37;
    v41 = ShortcutChiclet.MenuItemModel.role.getter(v39);
    static ButtonRole.destructive.getter(v41);
    sub_100015D74((uint64_t)v15, 0, 1, v35);
    v42 = v34 + *(int *)(v140 + 48);
    sub_100068C24((uint64_t)v17, v34);
    sub_100068C24((uint64_t)v15, v42);
    if (sub_100019D44(v34, 1, v35) != 1)
    {
      v61 = (uint64_t)v136;
      sub_100068C24(v34, (uint64_t)v136);
      if (sub_100019D44(v42, 1, v35) == 1)
      {
        sub_10001222C((uint64_t)v15, &qword_1000D30F0);
        sub_10001222C((uint64_t)v17, &qword_1000D30F0);
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v61, v35);
LABEL_16:
        sub_10001222C(v34, &qword_1000D3148);
        v45 = v141;
      }
      else
      {
        v109 = v34;
        v110 = v137;
        v111 = v134;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v134, v42, v35);
        sub_100004998(&qword_1000D3170, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonRole, (uint64_t)&protocol conformance descriptor for ButtonRole);
        v113 = dispatch thunk of static Equatable.== infix(_:_:)(v61, v111, v35, v112);
        v114 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
        v114(v111, v35);
        sub_10001222C((uint64_t)v145, &qword_1000D30F0);
        sub_10001222C((uint64_t)v148, &qword_1000D30F0);
        v114(v61, v35);
        sub_10001222C(v109, &qword_1000D30F0);
        v45 = v141;
        if ((v113 & 1) != 0)
        {
          v44 = 2;
          goto LABEL_18;
        }
      }
      v44 = 0;
      goto LABEL_18;
    }
    sub_10001222C((uint64_t)v15, &qword_1000D30F0);
    sub_10001222C((uint64_t)v17, &qword_1000D30F0);
    if (sub_100019D44(v42, 1, v35) != 1)
      goto LABEL_16;
    sub_10001222C(v34, &qword_1000D30F0);
    v44 = 2;
    v45 = v141;
LABEL_18:
    dispatch thunk of ShortcutChiclet.MenuItemModel.variant.getter(v43);
    v62 = v142;
    v63 = (*(uint64_t (**)(uint64_t *, uint64_t))(v142 + 88))(v45, v5);
    if (v63 == (_DWORD)v138)
    {
      (*(void (**)(uint64_t *, uint64_t))(v62 + 96))(v45, v5);
      swift_release(v45[1]);
      v64 = 0;
    }
    else
    {
      if (v63 != HIDWORD(v135))
      {

        result = _diagnoseUnexpectedEnumCase<A>(type:)(v5, v5);
        __break(1u);
        return result;
      }
      v65 = (*(uint64_t (**)(uint64_t *, uint64_t))(v62 + 96))(v45, v5);
      v66 = *v45;
      v67 = dispatch thunk of LibraryMenuItem.ToggleModel.isSelected.getter(v65);
      swift_release(v66);
      v64 = v67 & 1;
    }
    v68 = sub_100003B2C(0, &qword_1000D1EC0, UIAction_ptr);
    v69 = ShortcutChiclet.MenuItemModel.name.getter(v68);
    v71 = v70;
    v72 = sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
    v73 = ShortcutChiclet.MenuItemModel.symbol.getter(v72);
    sub_100071EA8(v73, v74);
    v76 = v75;
    swift_retain(v40);
    v77 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v69, v71, 0, 0, v76, 0, 0, 0, 0, v44, v64, sub_100068C6C, v40);
    v78 = v77;
    if (v153)
    {
      v79 = v153;
      v80 = -[objc_class children](v79, "children", v132);
      v81 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
      v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v80, v81);

      v154 = v82;
      v83 = v78;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83, v84, v85, v86, v87, v88, v89, v90);
      v92 = *(_QWORD *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v91 = *(_QWORD *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v15 = v145;
      if (v92 >= v91 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v92 + 1, 1);
      v93 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v83);
      specialized Array._endMutation()(v93, v94);
      v95 = v154;
      v96 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v95);
      v153 = (Class)-[objc_class menuByReplacingChildren:](v79, "menuByReplacingChildren:", v96);

      swift_release(v40);
      v5 = v147;
      v35 = v144;
    }
    else
    {
      v97 = v77;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97, v98, v99, v100, v101, v102, v103, v104);
      v106 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v105 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v35 = v144;
      v15 = v145;
      if (v106 >= v105 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
      v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v97);
      specialized Array._endMutation()(v107, v108);

      swift_release(v40);
      v153 = 0;
      v5 = v147;
    }
    v34 = v143;
    v17 = v148;
    v37 = (uint64_t *)v149;
    v36 = v146;
    v18 = v139;
LABEL_31:
    v32 += v151;
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease(v132);
  v115 = v153;
  if (v153)
  {
    v116 = v153;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v116, v117, v118, v119, v120, v121, v122, v123);
    v125 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v124 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v28 = v133;
    if (v125 >= v124 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v124 > 1, v125 + 1, 1);
    v126 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v116);
    specialized Array._endMutation()(v126, v127);
  }
  else
  {
    v28 = v133;
  }
LABEL_42:
  sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v129._countAndFlagsBits = 0;
  v129._object = (void *)0xE000000000000000;
  v158.value.super.isa = 0;
  v158.is_nil = 0;
  v128 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v129, (Swift::String_optional)0, v158, 0, 0xFFFFFFFFFFFFFFFFLL, v155, v131).super.super.isa;

  return (uint64_t)v128;
}

void sub_1000602C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint8_t *v97;
  char v98;
  int64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  int64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  int v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  int v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  _OWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;

  sub_100018190();
  a20 = v23;
  a21 = v24;
  v26 = v25;
  v27 = type metadata accessor for LibraryMenuItem.Attributes(0);
  v124 = *(_QWORD *)(v27 - 8);
  v125 = v27;
  sub_100018044();
  __chkstk_darwin(v28);
  sub_10004248C();
  v123 = v29;
  __chkstk_darwin(v30);
  sub_100068F80();
  v122 = v31;
  sub_100012E2C(&qword_1000D30F0);
  sub_100018044();
  __chkstk_darwin(v32);
  sub_1000181C8();
  v112 = type metadata accessor for Logger(0);
  v111 = *(_QWORD *)(v112 - 8);
  sub_100018044();
  __chkstk_darwin(v33);
  sub_100018548();
  v116 = v34;
  v35 = sub_100068F74();
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_100018548();
  v127 = v37;
  v38 = sub_100047F00();
  v126 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant(v38);
  v138 = *(_QWORD *)(v126 - 8);
  sub_100018044();
  __chkstk_darwin(v39);
  sub_10004248C();
  v121 = v40;
  __chkstk_darwin(v41);
  sub_100068F80();
  v136 = v42;
  v43 = sub_100047F00();
  v44 = type metadata accessor for ShortcutChiclet.MenuItem(v43);
  v139 = *(_QWORD *)(v44 - 8);
  v140 = v44;
  sub_100018044();
  __chkstk_darwin(v45);
  sub_10004248C();
  v135 = v46;
  __chkstk_darwin(v47);
  sub_100068F80();
  v131 = v48;
  v49 = sub_100068E3C();
  v50 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  sub_10001827C();
  *v21 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v50 + 104))(v21, enum case for AggregatedEntry.appShortcut(_:), v49);
  v51 = v26;
  sub_100061F88();
  v53 = v52;
  sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
  v132 = v53;
  if ((unint64_t)v53 >> 62)
  {
LABEL_34:
    if (v53 < 0)
      v106 = v132;
    else
      v106 = v53 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v132);
    v107 = v106;
    v53 = v132;
    v54 = _CocoaArrayWrapper.endIndex.getter(v107);
    sub_1000183D0();
  }
  else
  {
    v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v55 = v136;
  if (!v54)
  {
LABEL_32:
    sub_1000183D0();
    sub_100018094();
    return;
  }
  v130 = v53 & 0xC000000000000001;
  v115 = enum case for ShortcutChiclet.MenuItem.divider(_:);
  v128 = enum case for LibraryMenuItem.ItemVariant.button(_:);
  v114 = enum case for LibraryMenuItem.ItemVariant.toggle(_:);
  v110 = enum case for LibraryMenuItem.ItemVariant.submenu(_:);
  v109 = WFLogCategoryGeneral;
  v108 = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:);
  v113 = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:);
  v56 = 4;
  v118 = enum case for ShortcutChiclet.MenuItem.item(_:);
  v57 = _swiftEmptyArrayStorage;
  v117 = v22;
  v119 = v35;
  v120 = v36;
  v22 = v126;
  v58 = v127;
  v129 = v54;
  while (1)
  {
    if (v130)
    {
      v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(v56 - 4, v53);
    }
    else
    {
      v53 = *(_QWORD *)(v53 + 8 * v56);
      sub_100042AD8();
    }
    if (__OFADD__(v56 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    v137 = v56 - 3;
    v59 = LibraryMenuItem.hasSeparator.getter();
    if ((v59 & 1) != 0)
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v139 + 104))(v131, v115, v140);
      if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
      {
        v102 = sub_100068EF4();
        v57 = (_QWORD *)sub_100065764(v102, v103, v104, v105, &qword_1000D30F8, (void (*)(_QWORD))&type metadata accessor for ShortcutChiclet.MenuItem);
      }
      v61 = v57[2];
      v60 = v57[3];
      if (v61 >= v60 >> 1)
        v57 = (_QWORD *)sub_100065764(v60 > 1, v61 + 1, 1, (uint64_t)v57, &qword_1000D30F8, (void (*)(_QWORD))&type metadata accessor for ShortcutChiclet.MenuItem);
      v57[2] = v61 + 1;
      sub_100068E9C();
      v59 = (*(uint64_t (**)(unint64_t, uint64_t))(v64 + 32))(v62 + v63 * v61, v131);
    }
    dispatch thunk of LibraryMenuItem.variant.getter(v59);
    v65 = (*(uint64_t (**)(_QWORD *, uint64_t))(v36 + 88))(v58, v35);
    if (v65 != v128)
      break;
    sub_100068DF8();
    *v55 = *(_OWORD *)v58;
    v66 = &a14;
LABEL_19:
    v67 = (*(uint64_t (**)(_OWORD *, _QWORD, uint64_t))(v138 + 104))(v55, *(v66 - 64), v22);
    v68 = LibraryMenuItem.title.getter(v67);
    v133 = v69;
    v134 = v68;
    v70 = LibraryMenuItem.symbolName.getter();
    v72 = v71;
    v73 = v122;
    v74 = LibraryMenuItem.attributes.getter();
    v75 = v123;
    static LibraryMenuItem.Attributes.destructive.getter(v74);
    sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
    v76 = v125;
    v78 = dispatch thunk of SetAlgebra.isSuperset(of:)(v75, v125, v77);
    v79 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
    v79(v75, v76);
    v80 = ((uint64_t (*)(uint64_t, uint64_t))v79)(v73, v76);
    if ((v78 & 1) != 0)
    {
      v81 = v117;
      static ButtonRole.destructive.getter(v80);
      v82 = 0;
    }
    else
    {
      v82 = 1;
      v81 = v117;
    }
    v83 = type metadata accessor for ButtonRole(0);
    sub_100015D74(v81, v82, 1, v83);
    v84 = v121;
    v22 = v126;
    (*(void (**)(uint64_t, _OWORD *, uint64_t))(v138 + 16))(v121, v136, v126);
    v85 = type metadata accessor for ShortcutChiclet.MenuItemModel(0);
    sub_100068E6C(v85);
    v86 = ShortcutChiclet.MenuItemModel.init(name:symbol:role:variant:)(v134, v133, v70, v72, v81, v84);
    *v135 = v86;
    (*(void (**)(void))(v139 + 104))();
    swift_retain(v86);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v57);
    v35 = v119;
    v58 = v127;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v98 = sub_100068EF4();
      v57 = (_QWORD *)sub_100065764(v98, v99, v100, v101, &qword_1000D30F8, (void (*)(_QWORD))&type metadata accessor for ShortcutChiclet.MenuItem);
    }
    v36 = v120;
    v89 = v57[2];
    v88 = v57[3];
    if (v89 >= v88 >> 1)
      v57 = (_QWORD *)sub_100065764(v88 > 1, v89 + 1, 1, (uint64_t)v57, &qword_1000D30F8, (void (*)(_QWORD))&type metadata accessor for ShortcutChiclet.MenuItem);
    v57[2] = v89 + 1;
    sub_100068E9C();
    (*(void (**)(unint64_t, uint64_t *))(v92 + 32))(v90 + v91 * v89, v135);
    sub_100019D9C();
    sub_100042AE0();
    v55 = v136;
    (*(void (**)(_OWORD *, uint64_t))(v138 + 8))(v136, v22);
LABEL_31:
    ++v56;
    v53 = v132;
    if (v137 == v129)
      goto LABEL_32;
  }
  if (v65 == v114)
  {
    sub_100068DF8();
    *(_QWORD *)v55 = *v58;
    v66 = &v141;
    goto LABEL_19;
  }
  if (v65 == v110)
  {
    sub_100068DF8();
    swift_bridgeObjectRelease(*v58);
    v93 = static WFLog.subscript.getter(v109);
    v94 = Logger.logObject.getter(v93);
    v95 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v96 = 0;
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Submenus not supported in this model", v96, 2u);
      v97 = v96;
      v55 = v136;
      swift_slowDealloc(v97, -1, -1);
    }

    sub_100042AE0();
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v116, v112);
    goto LABEL_31;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v35, v35);
  __break(1u);
}

uint64_t sub_100060A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  int v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  void (*v8)(_BYTE *, _QWORD);
  BOOL *v9;
  uint64_t result;
  _BYTE v11[32];

  v0 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  dispatch thunk of ShortcutChiclet.MenuItemModel.variant.getter(v2);
  v5 = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:))
  {
    v6 = (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 96))(v4, v0);
    v7 = (void (*)(_QWORD))*((_QWORD *)v4 + 1);
    (*(void (**)(uint64_t))v4)(v6);
    return swift_release(v7);
  }
  if (v5 == enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v1 + 96))(v4, v0);
    v7 = *(void (**)(_QWORD))v4;
    v8 = (void (*)(_BYTE *, _QWORD))dispatch thunk of LibraryMenuItem.ToggleModel.isSelected.modify(v11);
    *v9 = !*v9;
    v8(v11, 0);
    return swift_release(v7);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v0, v0);
  __break(1u);
  return result;
}

id sub_100060B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = v5;
  if (!a2)
  {
    v12 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v22 = a2;
  v23 = a3;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100065704;
  v21 = &unk_1000C2F38;
  v12 = _Block_copy(&v18);
  v13 = v23;
  swift_retain(a3);
  swift_release(v13);
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v22 = a4;
  v23 = a5;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100044218;
  v21 = &unk_1000C2F10;
  v14 = _Block_copy(&v18);
  v15 = v23;
  swift_retain(a5);
  swift_release(v15);
LABEL_6:
  v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "configurationWithIdentifier:previewProvider:actionProvider:", a1, v12, v14);
  sub_10000A798(a4, a5);
  sub_10000A798(a2, a3);
  swift_unknownObjectRelease(a1);
  _Block_release(v14);
  _Block_release(v12);
  return v16;
}

Class sub_100060C7C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  UIMenuElementSize v22;
  uint64_t v23;
  UIMenuElementSize v24;
  Swift::String v25;
  UIMenu v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  UIMenuElementSize v89;
  Swift::String v90;
  UIMenu v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  UIMenuElementSize v103;
  uint64_t v104;
  UIMenuElementSize v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  Swift::OpaquePointer v111;
  UIMenu v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  UIImage_optional v131;
  UIImage_optional v132;
  UIImage_optional v133;

  v3 = type metadata accessor for Logger(0);
  v114 = *(_QWORD *)(v3 - 8);
  v115 = v3;
  __chkstk_darwin(v3);
  v128 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for LibraryMenuItem.ItemVariant(0);
  v5 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LibraryMenuItem.Attributes(0);
  v125 = *(_QWORD *)(v8 - 8);
  v126 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v113 - v12;
  v14 = v1;
  v116 = a1;
  v15 = sub_100043180(a1, v14);
  v129 = (uint64_t)_swiftEmptyArrayStorage;
  v130 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100061DCC();
  v17 = v16;
  result = (Class)swift_bridgeObjectRelease(v15);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v87 = v17;
    else
      v87 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v19 = _CocoaArrayWrapper.endIndex.getter(v87);
    result = (Class)swift_bridgeObjectRelease(v17);
    if (v19)
      goto LABEL_3;
LABEL_36:
    swift_bridgeObjectRelease(v17);
    v86 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_37;
  }
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_36;
LABEL_3:
  if (v19 < 1)
  {
    __break(1u);
    return result;
  }
  v20 = 0;
  v120 = v17 & 0xC000000000000001;
  v119 = enum case for LibraryMenuItem.ItemVariant.button(_:);
  v113 = WFLogCategoryGeneral;
  v121 = v17;
  v122 = (uint64_t *)v7;
  v123 = v5;
  v124 = v19;
  do
  {
    if (v120)
    {
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v17);
    }
    else
    {
      v21 = *(_QWORD *)(v17 + 8 * v20 + 32);
      swift_retain(v21);
    }
    if ((LibraryMenuItem.hasSeparator.getter() & 1) != 0)
    {
      v22 = v129;
      if ((unint64_t)v129 >> 62)
      {
        if (v129 < 0)
          v84 = v129;
        else
          v84 = v129 & 0xFFFFFFFFFFFFFF8;
        v85 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
        swift_bridgeObjectRetain(v22);
        v24 = _bridgeCocoaArray<A>(_:)(v84, v85);
        swift_bridgeObjectRelease(v22);
      }
      else
      {
        v23 = swift_bridgeObjectRetain(v129);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
        sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
        v24 = v22;
      }
      swift_bridgeObjectRelease(v22);
      sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v131.value.super.isa = 0;
      v131.is_nil = 0;
      v26.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v131, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v24, v111).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26.super.super.isa, v27, v28, v29, v30, v31, v32, v33);
      v35 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v26.super.super.isa);
      specialized Array._endMutation()(v36, v37);
      v129 = (uint64_t)_swiftEmptyArrayStorage;
    }
    v38 = ((uint64_t (*)(void))LibraryMenuItem.attributes.getter)();
    static LibraryMenuItem.Attributes.destructive.getter(v38);
    sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
    v40 = v39;
    v41 = v126;
    v42 = dispatch thunk of SetAlgebra.isSuperset(of:)(v11, v126, v39);
    v43 = *(void (**)(char *, uint64_t))(v125 + 8);
    v43(v11, v41);
    v44 = ((uint64_t (*)(char *, uint64_t))v43)(v13, v41);
    v45 = LibraryMenuItem.attributes.getter(v44);
    static LibraryMenuItem.Attributes.hidden.getter(v45);
    v46 = dispatch thunk of SetAlgebra.isSuperset(of:)(v11, v41, v40);
    v43(v11, v41);
    v47 = ((uint64_t (*)(char *, uint64_t))v43)(v13, v41);
    v48 = LibraryMenuItem.attributes.getter(v47);
    static LibraryMenuItem.Attributes.disabled.getter(v48);
    v49 = dispatch thunk of SetAlgebra.isSuperset(of:)(v11, v41, v40);
    v43(v11, v41);
    v50 = ((uint64_t (*)(char *, uint64_t))v43)(v13, v41);
    v51 = v122;
    dispatch thunk of LibraryMenuItem.variant.getter(v50);
    v52 = v123;
    v53 = v127;
    v54 = (*(uint64_t (**)(uint64_t *, uint64_t))(v123 + 88))(v51, v127);
    if (v54 == v119)
    {
      v55 = 2;
      if ((v42 & 1) == 0)
        v55 = 0;
      if ((v46 & 1) != 0)
        v56 = v55 | 4;
      else
        v56 = v55;
      v57 = v56 & 0xFFFFFFFFFFFFFFFELL | v49 & 1;
      (*(void (**)(uint64_t *, uint64_t))(v52 + 96))(v51, v53);
      v58 = *v51;
      v59 = v51[1];
      v118 = sub_100003B2C(0, &qword_1000D1EC0, UIAction_ptr);
      v117 = LibraryMenuItem.title.getter(v118);
      v61 = v60;
      sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
      v62 = LibraryMenuItem.symbolName.getter();
      v64 = sub_10007A7B0(v62, v63);
      v65 = (_QWORD *)swift_allocObject(&unk_1000C2F70, 40, 7);
      v65[2] = v58;
      v65[3] = v59;
      v66 = v116;
      v65[4] = v116;
      swift_retain(v59);
      swift_bridgeObjectRetain(v66);
      v67 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v117, v61, 0, 0, v64, 0, 0, 0, 0, v57, 0, sub_100068CA0, v65);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67, v68, v69, v70, v71, v72, v73, v74);
      v76 = *(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v75 = *(_QWORD *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v76 >= v75 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
      v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v67);
      specialized Array._endMutation()(v77, v78);
      swift_release(v21);

      swift_release(v59);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v51, v53);
      v79 = static WFLog.subscript.getter(v113);
      v80 = Logger.logObject.getter(v79);
      v81 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v82 = 0;
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "Unsupported variant, only buttons can be used here", v82, 2u);
        swift_slowDealloc(v82, -1, -1);
      }

      v83 = swift_release(v21);
      (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v128, v115, v83);
    }
    ++v20;
    v17 = v121;
  }
  while (v124 != v20);
  swift_bridgeObjectRelease(v121);
  v86 = v129;
LABEL_37:
  if ((unint64_t)v86 >> 62)
  {
    if (v86 < 0)
      v107 = v86;
    else
      v107 = v86 & 0xFFFFFFFFFFFFFF8;
    v108 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v86);
    v89 = _bridgeCocoaArray<A>(_:)(v107, v108);
    swift_bridgeObjectRelease(v86);
  }
  else
  {
    v88 = swift_bridgeObjectRetain(v86);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v88);
    sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    v89 = v86;
  }
  swift_bridgeObjectRelease(v86);
  sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v90._countAndFlagsBits = 0;
  v90._object = (void *)0xE000000000000000;
  v132.value.super.isa = 0;
  v132.is_nil = 0;
  v91.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v90, (Swift::String_optional)0, v132, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v89, v111).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91.super.super.isa, v92, v93, v94, v95, v96, v97, v98);
  v100 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v99 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v100 >= v99 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v100 + 1, 1);
  v101 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v100, v91.super.super.isa);
  specialized Array._endMutation()(v101, v102);
  v103 = v130;
  if ((unint64_t)v130 >> 62)
  {
    if (v130 < 0)
      v109 = v130;
    else
      v109 = v130 & 0xFFFFFFFFFFFFFF8;
    v110 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v103);
    v105 = _bridgeCocoaArray<A>(_:)(v109, v110);
    swift_bridgeObjectRelease(v103);
  }
  else
  {
    v104 = swift_bridgeObjectRetain(v130);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v104);
    sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    v105 = v103;
  }
  swift_bridgeObjectRelease(v103);
  v106._countAndFlagsBits = 0;
  v106._object = (void *)0xE000000000000000;
  v133.value.super.isa = 0;
  v133.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v106, (Swift::String_optional)0, v133, 0, 0xFFFFFFFFFFFFFFFFLL, v105, (Swift::OpaquePointer)v112.super.super.isa).super.super.isa;
}

void sub_100061560(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  sub_1000785E8(a1);
  if (v1)
  {
    v3 = v1;
    v4 = v2;
    v5 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
    objc_msgSend(v5, "setVisiblePath:", v3);
    v6 = objc_allocWithZone((Class)UIColor);
    v7 = sub_10006540C((uint64_t)sub_100061710, 0);
    objc_msgSend(v5, "setBackgroundColor:", v7);

    sub_100047E90(v8, &qword_1000D4380, UITargetedPreview_ptr);
    v9 = v4;
    sub_1000865F0();
    sub_1000270D0();

  }
  sub_100018388();
}

void sub_100061638(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100061560(a3);
}

id sub_10006164C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;

  v11 = sub_100068EB8();
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100019D7C();
  v15 = v14 - v13;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = a3;
  v17 = a4;
  v18 = a1;
  v19 = (void *)a6();

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  return v19;
}

id sub_100061710(void *a1)
{
  if (objc_msgSend(a1, "userInterfaceStyle") == (id)1)
    return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.6, 1.0);
  else
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
}

void sub_100061774(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v5 = (void *)v3;
  sub_100012E2C(&qword_1000D10F0);
  sub_100018044();
  __chkstk_darwin(v8);
  v9 = sub_100068D94();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100018488();
  aBlock[0] = objc_msgSend(a2, "identifier");
  v11 = sub_100012E2C((uint64_t *)&unk_1000D3130);
  if (!swift_dynamicCast(v3, aBlock, v11, v9, 6))
  {
    v26 = sub_100068F0C();
    v14 = sub_100068F48(v26, v27);
    goto LABEL_7;
  }
  sub_100068F48(v3, 0);
  v12 = sub_100068F0C();
  v14 = sub_100026D88(v12, v13, v9);
  if (v15)
  {
LABEL_7:
    sub_100068F18(v14, &qword_1000D10F0);
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, v3, v9);
  sub_100012A90();
  v17 = v16;
  sub_1000870D4(v4);
  v19 = v18;
  v20 = swift_release(v17);
  if (v19)
  {
    objc_msgSend(a3, "setPreferredCommitStyle:", 0, v20.n128_f64[0], aBlock[0]);
    v21 = sub_100026B2C((uint64_t)&unk_1000C2E58, 32);
    *(_QWORD *)(v21 + 16) = v5;
    *(_QWORD *)(v21 + 24) = v19;
    aBlock[4] = sub_100068B9C;
    v29 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007DA8;
    aBlock[3] = &unk_1000C2E70;
    v22 = _Block_copy(aBlock);
    v23 = v29;
    v24 = v5;
    v25 = v19;
    objc_msgSend(a3, "addCompletion:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);

  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v4, v9, v20);
LABEL_8:
  sub_100026D40();
}

uint64_t sub_100061954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    v8 = WorkflowOpener.openWorkflow(_:)(a1, ObjectType, *(_QWORD *)(v6 + 8));
    swift_unknownObjectRelease(v5);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_100061A54(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_unknownObjectWeakInit(v1 + 16, 0);
  swift_unknownObjectWeakAssign(v3, a1);

  sub_100018188();
}

void sub_100061A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_100018190();
  v3 = v2;
  v4 = sub_100068E3C();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100019D7C();
  v8 = (_QWORD *)(v7 - v6);
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_100068F80();
  v58 = v13;
  v14 = sub_100047F00();
  v15 = type metadata accessor for ShortcutsLibraryItem(v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100042BD0();
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = v4;
    v59 = (uint64_t)_swiftEmptyArrayStorage;
    v20 = *(_QWORD *)(v3 + 16);
    v57 = v20;
    if (v20)
    {
      v51 = v12;
      v52 = v3;
      v53 = v8;
      v54 = v5;
      v55 = v19;
      v56 = (void *)Strong;
      v21 = v3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      v22 = *(_QWORD *)(v16 + 72);
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
      sub_100027658();
      do
      {
        v24 = v23(v1, v21, v15);
        v25 = ShortcutsLibraryItem.workflow.getter(v24);
        v26 = sub_1000272BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
        if (v25)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26, v27, v28, v29, v30, v31, v32, v33);
          v35 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v34 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v35 >= v34 >> 1)
            sub_100026AD8(v35 + 1, v34);
          v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v25);
          specialized Array._endMutation()(v36, v37);
        }
        v21 += v22;
        --v20;
      }
      while (v20);
      sub_100047F0C();
      v38 = v59;
      v39 = v55;
      v18 = v56;
      v8 = v53;
      v5 = v54;
      v12 = v51;
    }
    else
    {
      v38 = (uint64_t)_swiftEmptyArrayStorage;
      v39 = v19;
    }
    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v49 = v38;
      else
        v49 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v38);
      v40 = _CocoaArrayWrapper.endIndex.getter(v49);
      sub_1000273A0();
    }
    else
    {
      v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v40 != v57)
    {
      v44 = v57;
      sub_1000273A0();
      if (v44 == 1)
      {
        sub_100069000((uint64_t (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem, (uint64_t)v12);
        v45 = sub_100026D88((uint64_t)v12, 1, v15);
        if (v43)
        {
          sub_10001222C((uint64_t)v12, &qword_1000D3670);
        }
        else
        {
          v48 = (void *)ShortcutsLibraryItem.autoShortcut.getter(v45);
          sub_1000272BC((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
          if (v48)
          {
            *v8 = v48;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for AggregatedEntry.appShortcut(_:), v39);
            v48;
            sub_100061F88();
            sub_1000270D0();

            (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v39);
            goto LABEL_25;
          }
        }
      }

      goto LABEL_25;
    }
    v41 = v58;
    sub_100069000((uint64_t (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem, v58);
    v42 = sub_100026D88(v41, 1, v15);
    if (v43)
    {
      sub_10001222C(v41, &qword_1000D3670);
      v47 = 0;
    }
    else
    {
      ShortcutsLibraryItem.nameIconViewModel.getter(v42);
      v46 = sub_1000272BC(v41, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
      v47 = (void *)dispatch thunk of NameIconView.Model.popoverModel.getter(v46);
      sub_100019D9C();
    }
    sub_100061DCC();

    sub_1000273A0();
  }
LABEL_25:
  sub_100018094();
}

void sub_100061DCC()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  sub_100018190();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for LibraryConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (unint64_t)v5 >> 62;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    sub_100027658();
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    sub_100047F0C();
    if (!v14)
      goto LABEL_18;
  }
  else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_18;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    sub_100027658();
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    sub_100047F0C();
    if (!v10)
      goto LABEL_6;
    goto LABEL_13;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v5 + 32);
    if (!v10)
    {
LABEL_6:
      v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
      v16 = &v1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
      swift_beginAccess(&v1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration], &v23, 0, 0);
      v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v9, v16, v6);
      v18 = LibraryConfiguration.workflowContextualEditingActions.getter(v17);
      sub_1000272BC((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      v19 = v3;
      sub_100027658();
      v20 = v1;
      v21 = v11;
      sub_10005E9E0(v18, v20, v12 > 1, v21, v5, v3);

      swift_bridgeObjectRelease(v18);
LABEL_18:
      sub_100018094();
      return;
    }
LABEL_13:
    if (v5 < 0)
      v15 = v5;
    else
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
    sub_100027658();
    v12 = _CocoaArrayWrapper.endIndex.getter(v15);
    sub_100047F0C();
    goto LABEL_17;
  }
  __break(1u);
}

void sub_100061F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (**v37)();
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (**v70)();
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (**v100)();
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;

  sub_100018190();
  v101 = v0;
  v2 = v1;
  v105 = type metadata accessor for LibraryMenuItem.Attributes(0);
  sub_100018044();
  __chkstk_darwin(v3);
  sub_100018548();
  v106 = v4;
  v5 = sub_100068F74();
  v103 = *(_QWORD *)(v5 - 8);
  v104 = v5;
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100018548();
  v100 = v7;
  v8 = sub_100047F00();
  v9 = type metadata accessor for AppShortcutAdditionMenuItem(v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v88 - v14;
  v16 = sub_100068E3C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = __chkstk_darwin(v16);
  __chkstk_darwin(v19);
  v21 = (id *)((char *)&v88 - v20);
  v108 = (unint64_t)_swiftEmptyArrayStorage;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v102 = v2;
  v23 = v2;
  v25 = v24;
  v22((char *)&v88 - v20, v23, v24);
  v26 = (*(uint64_t (**)(id *, uint64_t))(v17 + 88))(v21, v25);
  v98 = v9;
  v99 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v10;
  v97 = v18;
  v94 = v13;
  v95 = v22;
  if (v26 == enum case for AggregatedEntry.appShortcut(_:))
  {
    sub_100068F68(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));

    v27 = ((uint64_t (*)(void))static AppShortcutAdditionMenuItem.addToHomeScreen.getter)();
    v28 = AppShortcutAdditionMenuItem.name.getter(v27);
    v91 = v29;
    v92 = v28;
    v30 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v93 = v15;
    v31 = v30(v15, v9);
    v32 = static AppShortcutAdditionMenuItem.addToHomeScreen.getter(v31);
    v33 = AppShortcutAdditionMenuItem.symbolName.getter(v32);
    v89 = v34;
    v90 = v33;
    v30(v13, v9);
    v35 = sub_100026B2C((uint64_t)&unk_1000C2B60, 24);
    sub_100068FE0(v35);
    v22((char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v102, v25);
    v36 = swift_allocObject(&unk_1000C2E08, ((*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)) + v18, *(unsigned __int8 *)(v17 + 80) | 7);
    *(_QWORD *)(v36 + 16) = v35;
    sub_100068EC0(v36);
    v37 = v100;
    *v100 = sub_1000686D4;
    v37[1] = (void (*)())v36;
    v38 = enum case for LibraryMenuItem.ItemVariant.button(_:);
    (*(void (**)(void (**)()))(v103 + 104))(v37);
    v107 = _swiftEmptyArrayStorage;
    sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
    sub_100042AD8();
    v39 = sub_100012E2C(&qword_1000D3058);
    v40 = sub_100066114();
    v41 = v106;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v107, v39, v40);
    v42 = type metadata accessor for LibraryMenuItem(0);
    sub_100068E6C(v42);
    v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v92, v91, v90, v89, v41, 0, v37);
    sub_100042AE0();
    v44 = swift_retain(v43);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44, v45, v46, v47, v48, v49, v50, v51);
    v53 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v52 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v53 >= v52 >> 1)
      sub_100026AD8(v53 + 1, v52);
    v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v43);
    specialized Array._endMutation()(v54, v55);
    v56 = sub_100042CE0();
    v15 = v93;
    v57 = v38;
  }
  else
  {
    v56 = sub_100068F68(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    v57 = enum case for LibraryMenuItem.ItemVariant.button(_:);
  }
  v58 = static AppShortcutAdditionMenuItem.addToShortcut.getter(v56);
  v59 = AppShortcutAdditionMenuItem.name.getter(v58);
  v92 = v60;
  v93 = (char *)v59;
  v61 = *(uint64_t (**)(char *, uint64_t))(v96 + 8);
  v62 = v98;
  v63 = v61(v15, v98);
  v64 = v94;
  v65 = static AppShortcutAdditionMenuItem.addToShortcut.getter(v63);
  v66 = AppShortcutAdditionMenuItem.symbolName.getter(v65);
  v96 = v67;
  v61(v64, v62);
  v68 = sub_100026B2C((uint64_t)&unk_1000C2B60, 24);
  sub_100068FE0(v68);
  v95(v99, v102, v25);
  v69 = swift_allocObject(&unk_1000C2DE0, ((*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)) + v97, *(unsigned __int8 *)(v17 + 80) | 7);
  *(_QWORD *)(v69 + 16) = v68;
  sub_100068EC0(v69);
  v70 = v100;
  *v100 = sub_100068658;
  v70[1] = (void (*)())v69;
  (*(void (**)(void (**)(), uint64_t, uint64_t))(v103 + 104))(v70, v57, v104);
  v107 = _swiftEmptyArrayStorage;
  sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
  swift_retain(v68);
  v71 = sub_100012E2C(&qword_1000D3058);
  v72 = sub_100066114();
  v73 = v106;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v107, v71, v72);
  v74 = type metadata accessor for LibraryMenuItem(0);
  sub_100068E6C(v74);
  v75 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v93, v92, v66, v96, v73, 0, v70);
  swift_release(v68);
  v76 = sub_100042AD8();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v76, v77, v78, v79, v80, v81, v82, v83);
  v85 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v84 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v85 >= v84 >> 1)
    sub_100026AD8(v85 + 1, v84);
  v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v75);
  specialized Array._endMutation()(v86, v87);
  sub_100042AE0();
  sub_100018094();
}

_QWORD *sub_100062480(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_100068E3C();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_10001827C();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v7 = (void *)Strong;
  (*(void (**)(id *, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  v8 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v2, v4);
  if (v8 != enum case for AggregatedEntry.userShortcut(_:))
  {
    if (v8 == enum case for AggregatedEntry.appShortcut(_:))
    {
      sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));

      sub_100061F88();
      v15 = v16;
      goto LABEL_6;
    }

    sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    return _swiftEmptyArrayStorage;
  }
  sub_100047EF4(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
  v9 = *v2;
  v10 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v11 = sub_100026B2C(v10, 40);
  *(_OWORD *)(v11 + 16) = xmmword_100096F90;
  *(_QWORD *)(v11 + 32) = v9;
  specialized Array._endMutation()(v11, v12);
  v13 = v9;
  sub_100061DCC();
  v15 = v14;

  sub_100047F0C();
LABEL_6:

  return (_QWORD *)v15;
}

uint64_t sub_1000625DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = sub_100047EB8();
  return swift_deallocClassInstance(v1, v2, v3);
}

void sub_1000625F8()
{
  sub_100061A88();
}

_QWORD *sub_100062618(uint64_t a1)
{
  return sub_100062480(a1);
}

uint64_t sub_100062638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  unint64_t v45;
  id v46;
  unsigned int v47;
  void *v48;
  id v49;
  NSString v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  _QWORD *v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void (*v120)();
  uint64_t v121;
  _QWORD *v122;
  id v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(void);
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(void);
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  void *v177;
  void *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  id v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(void);
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  _QWORD *v206;
  id v207;
  uint64_t v208;
  unint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  id v233;
  uint64_t v234;
  unint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  void *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t *v253;
  _QWORD *v254;

  v253 = a7;
  v242 = a6;
  v246 = a4;
  LODWORD(v245) = a3;
  v252 = a2;
  v247 = type metadata accessor for LibraryMenuItem.Attributes(0);
  v9 = __chkstk_darwin(v247);
  v11 = (char *)&v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v248 = (char *)&v239 - v12;
  v13 = type metadata accessor for LibraryMenuItem.ItemVariant(0);
  v249 = *(_QWORD *)(v13 - 8);
  v250 = v13;
  __chkstk_darwin(v13);
  v251 = (uint64_t *)((char *)&v239 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for LibraryEditingAction(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v239 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v239 - v21;
  v244 = LibraryEditingAction.symbolName.getter(v20);
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v25(v22, a1, v15);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v22, v15);
  if ((_DWORD)v26 == enum case for LibraryEditingAction.remove(_:))
  {
    swift_bridgeObjectRelease(v24);
    v25(v19, (uint64_t)v22, v15);
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v27 = *((_QWORD *)v19 + 1);
    v28 = *((_QWORD *)v19 + 3);
    v29 = *((_QWORD *)v19 + 5);
    if (v27)
    {
      v30 = *((_QWORD *)v19 + 4);
      v31 = v22;
      v32 = *((_QWORD *)v19 + 2);
      v33 = *(void **)v19;
      if (!v29)
        v30 = 0;
      v245 = v30;
      v246 = v33;
      v34 = 0xE000000000000000;
      if (v29)
        v34 = v29;
      v244 = v34;
      v35 = swift_allocObject(&unk_1000C2B60, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16, v252);
      v36 = (_QWORD *)swift_allocObject(&unk_1000C2BD8, 48, 7);
      v36[2] = v35;
      v36[3] = a5;
      v36[4] = v32;
      v36[5] = v28;
      v37 = v250;
      v38 = v251;
      *v251 = sub_1000661B4;
      v38[1] = v36;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v38, enum case for LibraryMenuItem.ItemVariant.button(_:), v37);
      v254 = _swiftEmptyArrayStorage;
      sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
      swift_bridgeObjectRetain(a5);
      swift_retain(v35);
      v39 = sub_100012E2C(&qword_1000D3058);
      v40 = sub_100066114();
      v41 = v248;
      v22 = v31;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v39, v40);
      v42 = type metadata accessor for LibraryMenuItem(0);
      swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
      v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v246, v27, v245, v244, v41, 0, v38);
      v44 = swift_release(v35);
    }
    else
    {
      swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));
      swift_bridgeObjectRelease(v29);
      v43 = 0;
    }
    goto LABEL_129;
  }
  v45 = v24;
  v241 = v22;
  v243 = v16;
  if ((_DWORD)v26 != enum case for LibraryEditingAction.newWindow(_:))
  {
    if ((_DWORD)v26 == enum case for LibraryEditingAction.move(_:))
    {
      v54 = LibraryEditingAction.title.getter(v26);
      if (v55)
      {
        v56 = v54;
        v57 = v55;
        if (v45)
          v58 = (void *)v244;
        else
          v58 = 0;
        v59 = 0xE000000000000000;
        if (v45)
          v59 = v45;
        v245 = v59;
        v246 = v58;
        v60 = swift_allocObject(&unk_1000C2B60, 24, 7);
        swift_unknownObjectWeakInit(v60 + 16, v252);
        v61 = swift_allocObject(&unk_1000C2C00, 32, 7);
        *(_QWORD *)(v61 + 16) = v60;
        *(_QWORD *)(v61 + 24) = a5;
        v62 = v250;
        v63 = v251;
        *v251 = sub_1000661C4;
        v63[1] = v61;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v63, enum case for LibraryMenuItem.ItemVariant.button(_:), v62);
        v254 = _swiftEmptyArrayStorage;
        sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
        swift_bridgeObjectRetain(a5);
        swift_retain(v60);
        v64 = sub_100012E2C(&qword_1000D3058);
        v65 = sub_100066114();
        v66 = v248;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v64, v65);
        v67 = type metadata accessor for LibraryMenuItem(0);
        swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
        v68 = v56;
        v69 = v57;
        v71 = v245;
        v70 = v246;
        v72 = v66;
        v73 = 0;
LABEL_30:
        v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v68, v69, v70, v71, v72, v73, v63);
        v86 = v60;
LABEL_31:
        v44 = swift_release(v86);
        goto LABEL_128;
      }
LABEL_32:
      v87 = v24;
LABEL_127:
      swift_bridgeObjectRelease(v87);
      v43 = 0;
      goto LABEL_128;
    }
    if ((_DWORD)v26 == enum case for LibraryEditingAction.duplicate(_:))
    {
      v74 = LibraryEditingAction.title.getter(v26);
      if (v75)
      {
        v76 = v74;
        v77 = v75;
        v78 = (void *)v244;
        if (!v45)
          v78 = 0;
        v246 = v78;
        if (v45)
          v79 = v45;
        else
          v79 = 0xE000000000000000;
        v60 = swift_allocObject(&unk_1000C2B60, 24, 7);
        swift_unknownObjectWeakInit(v60 + 16, v252);
        v80 = swift_allocObject(&unk_1000C2CA0, 32, 7);
        *(_QWORD *)(v80 + 16) = v60;
        *(_QWORD *)(v80 + 24) = a5;
        v81 = v250;
        v63 = v251;
        *v251 = sub_100066254;
        v63[1] = v80;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v63, enum case for LibraryMenuItem.ItemVariant.button(_:), v81);
        v254 = _swiftEmptyArrayStorage;
        sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
        swift_retain(v60);
        swift_bridgeObjectRetain(a5);
        v82 = sub_100012E2C(&qword_1000D3058);
        v83 = sub_100066114();
        v84 = v248;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v82, v83);
        v85 = type metadata accessor for LibraryMenuItem(0);
        swift_allocObject(v85, *(unsigned int *)(v85 + 48), *(unsigned __int16 *)(v85 + 52));
        v68 = v76;
        v69 = v77;
        v70 = v246;
        v71 = v79;
        v72 = v84;
        v73 = 1;
        goto LABEL_30;
      }
      goto LABEL_32;
    }
    if ((_DWORD)v26 == enum case for LibraryEditingAction.share(_:))
    {
      v88 = v24;
      if ((v245 & 1) == 0)
      {
        v240 = v15;
        v89 = objc_msgSend(*(id *)(v252 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database), "conflictingReferenceForReference:", v246);

        v91 = LibraryEditingAction.title.getter(v90);
        if (v92)
        {
          v93 = v91;
          v94 = v92;
          v95 = (char *)v244;
          if (!v24)
            v95 = 0;
          v248 = v95;
          if (!v24)
            v88 = 0xE000000000000000;
          if (v89)
          {
            static LibraryMenuItem.Attributes.disabled.getter();
          }
          else
          {
            v254 = _swiftEmptyArrayStorage;
            sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
            v173 = sub_100012E2C(&qword_1000D3058);
            v174 = sub_100066114();
            dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v173, v174);
          }
          v175 = swift_allocObject(&unk_1000C2B60, 24, 7);
          swift_unknownObjectWeakInit(v175 + 16, v252);
          v176 = (_QWORD *)swift_allocObject(&unk_1000C2C50, 40, 7);
          v177 = v246;
          v176[2] = v175;
          v176[3] = v177;
          v178 = v242;
          v176[4] = v242;
          v179 = v250;
          v180 = v251;
          *v251 = sub_10006621C;
          v180[1] = v176;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v180, enum case for LibraryMenuItem.ItemVariant.button(_:), v179);
          v181 = type metadata accessor for LibraryMenuItem(0);
          swift_allocObject(v181, *(unsigned int *)(v181 + 48), *(unsigned __int16 *)(v181 + 52));
          v182 = v178;
          v183 = v177;
          v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v93, v94, v248, v88, v11, 0, v180);
        }
        else
        {
          swift_bridgeObjectRelease(v24);
          v43 = 0;
        }
        v15 = v240;
        goto LABEL_128;
      }
      goto LABEL_126;
    }
    if ((_DWORD)v26 == enum case for LibraryEditingAction.details(_:))
    {
      v88 = v24;
      if ((v245 & 1) == 0)
      {
        v111 = LibraryEditingAction.title.getter(v26);
        if (v112)
        {
          v113 = v111;
          v114 = v112;
          v115 = v244;
          if (!v45)
            v115 = 0;
          v245 = v115;
          if (!v88)
            v88 = 0xE000000000000000;
          v116 = v15;
          v117 = swift_allocObject(&unk_1000C2B60, 24, 7);
          swift_unknownObjectWeakInit(v117 + 16, v252);
          v118 = swift_allocObject(&unk_1000C2C28, 32, 7);
          v119 = v246;
          *(_QWORD *)(v118 + 16) = v117;
          *(_QWORD *)(v118 + 24) = v119;
          v120 = sub_1000661E8;
LABEL_52:
          v121 = v250;
          v122 = v251;
          *v251 = v120;
          v122[1] = v118;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v122, enum case for LibraryMenuItem.ItemVariant.button(_:), v121);
          v254 = _swiftEmptyArrayStorage;
          sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
          v123 = v119;
          swift_retain(v117);
          v124 = sub_100012E2C(&qword_1000D3058);
          v125 = sub_100066114();
          v126 = v248;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v124, v125);
          v127 = type metadata accessor for LibraryMenuItem(0);
          swift_allocObject(v127, *(unsigned int *)(v127 + 48), *(unsigned __int16 *)(v127 + 52));
          v128 = v113;
          v129 = v114;
          v130 = v245;
          v131 = v88;
          v132 = v126;
LABEL_53:
          v133 = v122;
LABEL_54:
          v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v128, v129, v130, v131, v132, 0, v133);
          v86 = v117;
          v15 = v116;
          goto LABEL_31;
        }
      }
      goto LABEL_126;
    }
    if ((_DWORD)v26 == enum case for LibraryEditingAction.delete(_:))
    {
      v134 = LibraryEditingAction.title.getter(v26);
      v43 = v135;
      if (v135)
      {
        v136 = v134;
        if (v45)
          v137 = v244;
        else
          v137 = 0;
        if (v45)
          v138 = v45;
        else
          v138 = 0xE000000000000000;
        v139 = v248;
        static LibraryMenuItem.Attributes.destructive.getter(v134);
        v140 = swift_allocObject(&unk_1000C2B60, 24, 7);
        swift_unknownObjectWeakInit(v140 + 16, v252);
        v141 = swift_allocObject(&unk_1000C2BB0, 32, 7);
        *(_QWORD *)(v141 + 16) = v140;
        *(_QWORD *)(v141 + 24) = a5;
        v142 = v250;
        v143 = v251;
        *v251 = sub_100066168;
        v143[1] = v141;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v143, enum case for LibraryMenuItem.ItemVariant.button(_:), v142);
        v144 = type metadata accessor for LibraryMenuItem(0);
        swift_allocObject(v144, *(unsigned int *)(v144 + 48), *(unsigned __int16 *)(v144 + 52));
        swift_bridgeObjectRetain(a5);
        v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v136, v43, v137, v138, v139, 0, v143);
      }
      else
      {
        swift_bridgeObjectRelease(v24);
      }
      goto LABEL_128;
    }
    v88 = v24;
    if ((_DWORD)v26 == enum case for LibraryEditingAction.run(_:))
    {
      if ((sub_100048650(v246) & 1) != 0)
        goto LABEL_126;
      sub_100012A90();
      v146 = v145;
      v147 = type metadata accessor for LibraryDataSource(0);
      v148 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v147, &method descriptor for LibraryDataSource.layoutMode.getter);
      v149 = v148();
      swift_release(v146);
      v150 = LibraryLayoutMode.rawValue.getter(v149 & 1);
      v152 = v151;
      v153 = LibraryLayoutMode.rawValue.getter(0);
      if (v150 == v153 && v152 == v154)
      {
        v158 = swift_bridgeObjectRelease_n(v152, 2);
      }
      else
      {
        v156 = v154;
        v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v150, v152, v153, v154, 0);
        swift_bridgeObjectRelease(v152);
        v158 = swift_bridgeObjectRelease(v156);
        if ((v157 & 1) == 0)
          goto LABEL_126;
      }
      if ((v245 & 1) != 0)
        goto LABEL_126;
      v198 = LibraryEditingAction.title.getter(v158);
      if (!v199)
        goto LABEL_126;
      v200 = v198;
      v201 = v199;
      v202 = v244;
      if (!v45)
        v202 = 0;
      v245 = v202;
      if (!v45)
        v88 = 0xE000000000000000;
      v116 = v15;
      v117 = swift_allocObject(&unk_1000C2B60, 24, 7);
      swift_unknownObjectWeakInit(v117 + 16, v252);
      v203 = swift_allocObject(&unk_1000C2B88, 32, 7);
      v204 = v246;
      *(_QWORD *)(v203 + 16) = v117;
      *(_QWORD *)(v203 + 24) = v204;
      v205 = v250;
      v206 = v251;
      *v251 = sub_10006615C;
      v206[1] = v203;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v206, enum case for LibraryMenuItem.ItemVariant.button(_:), v205);
      v254 = _swiftEmptyArrayStorage;
      sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
      v207 = v204;
      swift_retain(v117);
      v208 = sub_100012E2C(&qword_1000D3058);
      v209 = sub_100066114();
      v210 = v248;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v208, v209);
      v211 = type metadata accessor for LibraryMenuItem(0);
      swift_allocObject(v211, *(unsigned int *)(v211 + 48), *(unsigned __int16 *)(v211 + 52));
      v128 = v200;
      v129 = v201;
      v130 = v245;
    }
    else
    {
      if ((_DWORD)v26 != enum case for LibraryEditingAction.stop(_:))
      {
        if ((_DWORD)v26 == enum case for LibraryEditingAction.open(_:))
        {
          sub_100012A90();
          v185 = v184;
          v186 = type metadata accessor for LibraryDataSource(0);
          v187 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v186, &method descriptor for LibraryDataSource.layoutMode.getter);
          v188 = v187();
          swift_release(v185);
          v189 = LibraryLayoutMode.rawValue.getter(v188 & 1);
          v191 = v190;
          v192 = LibraryLayoutMode.rawValue.getter(1);
          if (v189 == v192 && v191 == v193)
          {
            v197 = swift_bridgeObjectRelease_n(v191, 2);
          }
          else
          {
            v195 = v193;
            v196 = _stringCompareWithSmolCheck(_:_:expecting:)(v189, v191, v192, v193, 0);
            swift_bridgeObjectRelease(v191);
            v197 = swift_bridgeObjectRelease(v195);
            if ((v196 & 1) == 0)
              goto LABEL_126;
          }
          if ((v245 & 1) == 0)
          {
            v224 = LibraryEditingAction.title.getter(v197);
            if (v225)
            {
              v226 = v224;
              v227 = v225;
              if (v45)
                v228 = v244;
              else
                v228 = 0;
              v229 = 0xE000000000000000;
              if (v45)
                v229 = v45;
              v245 = v229;
              v116 = v15;
              v117 = swift_allocObject(&unk_1000C2B60, 24, 7);
              swift_unknownObjectWeakInit(v117 + 16, v252);
              v230 = swift_allocObject(&unk_1000C2CF0, 32, 7);
              v231 = v246;
              *(_QWORD *)(v230 + 16) = v117;
              *(_QWORD *)(v230 + 24) = v231;
              v232 = v250;
              v122 = v251;
              *v251 = sub_10006626C;
              v122[1] = v230;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v122, enum case for LibraryMenuItem.ItemVariant.button(_:), v232);
              v254 = _swiftEmptyArrayStorage;
              sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
              swift_retain(v117);
              v233 = v231;
              v234 = sub_100012E2C(&qword_1000D3058);
              v235 = sub_100066114();
              v236 = v248;
              dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v234, v235);
              v237 = type metadata accessor for LibraryMenuItem(0);
              swift_allocObject(v237, *(unsigned int *)(v237 + 48), *(unsigned __int16 *)(v237 + 52));
              v128 = v226;
              v129 = v227;
              v130 = v228;
              v131 = v245;
              v132 = v236;
              goto LABEL_53;
            }
          }
        }
        else if ((_DWORD)v26 == enum case for LibraryEditingAction.rename(_:) && (v245 & 1) == 0)
        {
          v212 = LibraryEditingAction.title.getter(v26);
          if (v213)
          {
            v113 = v212;
            v114 = v213;
            v214 = v244;
            if (!v45)
              v214 = 0;
            v245 = v214;
            if (!v88)
              v88 = 0xE000000000000000;
            v116 = v15;
            v117 = swift_allocObject(&unk_1000C2B60, 24, 7);
            swift_unknownObjectWeakInit(v117 + 16, v252);
            v118 = swift_allocObject(&unk_1000C2C78, 32, 7);
            v119 = v246;
            *(_QWORD *)(v118 + 16) = v117;
            *(_QWORD *)(v118 + 24) = v119;
            v120 = sub_10006622C;
            goto LABEL_52;
          }
        }
LABEL_126:
        v87 = v88;
        goto LABEL_127;
      }
      if ((sub_100048650(v246) & 1) == 0)
        goto LABEL_126;
      sub_100012A90();
      v160 = v159;
      v161 = type metadata accessor for LibraryDataSource(0);
      v162 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v161, &method descriptor for LibraryDataSource.layoutMode.getter);
      v163 = v162();
      swift_release(v160);
      v164 = LibraryLayoutMode.rawValue.getter(v163 & 1);
      v166 = v165;
      v167 = LibraryLayoutMode.rawValue.getter(0);
      if (v164 == v167 && v166 == v168)
      {
        v172 = swift_bridgeObjectRelease_n(v166, 2);
      }
      else
      {
        v170 = v168;
        v171 = _stringCompareWithSmolCheck(_:_:expecting:)(v164, v166, v167, v168, 0);
        swift_bridgeObjectRelease(v166);
        v172 = swift_bridgeObjectRelease(v170);
        if ((v171 & 1) == 0)
          goto LABEL_126;
      }
      if ((v245 & 1) != 0)
        goto LABEL_126;
      v215 = LibraryEditingAction.title.getter(v172);
      if (!v216)
        goto LABEL_126;
      v217 = v215;
      v218 = v216;
      v219 = (void *)v244;
      if (!v45)
        v219 = 0;
      v246 = v219;
      if (!v45)
        v88 = 0xE000000000000000;
      v116 = v15;
      v117 = swift_allocObject(&unk_1000C2B60, 24, 7);
      swift_unknownObjectWeakInit(v117 + 16, v252);
      v220 = v250;
      v206 = v251;
      *v251 = sub_10006610C;
      v206[1] = v117;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v249 + 104))(v206, enum case for LibraryMenuItem.ItemVariant.button(_:), v220);
      v254 = _swiftEmptyArrayStorage;
      sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
      swift_retain(v117);
      v221 = sub_100012E2C(&qword_1000D3058);
      v222 = sub_100066114();
      v210 = v248;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v221, v222);
      v223 = type metadata accessor for LibraryMenuItem(0);
      swift_allocObject(v223, *(unsigned int *)(v223 + 48), *(unsigned __int16 *)(v223 + 52));
      v128 = v217;
      v129 = v218;
      v130 = (unint64_t)v246;
    }
    v131 = v88;
    v132 = v210;
    v133 = v206;
    goto LABEL_54;
  }
  swift_bridgeObjectRelease(v24);
  v46 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v47 = objc_msgSend(v46, "supportsMultipleScenes");

  v43 = 0;
  if (!v47)
  {
LABEL_128:
    v16 = v243;
    v22 = v241;
    goto LABEL_129;
  }
  v16 = v243;
  v22 = v241;
  if ((v245 & 1) == 0)
  {
    v48 = (void *)objc_opt_self(WFWindowSceneManager);
    v49 = objc_msgSend(v48, "existingSceneSessionForEditingWorkflowReference:", v246);
    v240 = v15;
    v50 = String._bridgeToObjectiveC()();
    v51 = String._bridgeToObjectiveC()();
    v52 = sub_100011544(v50);
    if (v49)
    {
      v245 = 0xEA00000000006572;
      v53 = 0x617571732E657965;
    }
    else
    {
      v245 = 0xEB00000000657261;
      v53 = 0x7571732E73756C70;
    }
    v244 = v53;
    v97 = v249;
    v96 = v250;
    v98 = v52;

    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v101 = v100;

    v102 = swift_allocObject(&unk_1000C2B60, 24, 7);
    swift_unknownObjectWeakInit(v102 + 16, v252);
    v103 = swift_allocObject(&unk_1000C2CC8, 32, 7);
    v104 = v246;
    *(_QWORD *)(v103 + 16) = v102;
    *(_QWORD *)(v103 + 24) = v104;
    v105 = v251;
    *v251 = sub_100066260;
    v105[1] = v103;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v97 + 104))(v105, enum case for LibraryMenuItem.ItemVariant.button(_:), v96);
    v254 = _swiftEmptyArrayStorage;
    sub_100004998(&qword_1000D3050, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes, (uint64_t)&protocol conformance descriptor for LibraryMenuItem.Attributes);
    v106 = v104;
    swift_retain(v102);
    v107 = sub_100012E2C(&qword_1000D3058);
    v108 = sub_100066114();
    v109 = v248;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v254, v107, v108);
    v110 = type metadata accessor for LibraryMenuItem(0);
    swift_allocObject(v110, *(unsigned int *)(v110 + 48), *(unsigned __int16 *)(v110 + 52));
    v43 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)(v99, v101, v244, v245, v109, 0, v105);
    swift_release(v102);

    v15 = v240;
    v16 = v243;
  }
LABEL_129:
  *v253 = v43;
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v22, v15, v44);
}

void sub_1000639A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "view");
    if (v6)
    {
      v7 = v6;
      v8 = (void *)objc_opt_self(WFWindowSceneManager);
      v9 = objc_msgSend(v7, "window");

      v10 = objc_msgSend(v9, "windowScene");
      objc_msgSend(v8, "activateSceneForWorkflowReference:sender:", a2, v10);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100063A90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = type metadata accessor for LibraryViewController(0);
    sub_100004998(&qword_1000D4460, type metadata accessor for LibraryViewController, (uint64_t)&unk_100097400);
    LibraryOperations.duplicateWorkflows(_:completion:)(a2, 0, 0, v6, v7);

  }
}

void sub_100063B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType(v7);
      dispatch thunk of LibraryDelegate.renameObject(_:)(a2, ObjectType, v9);

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
}

void sub_100063BC8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *Strong;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  char v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Class isa;
  id v28;
  id v29;
  _BYTE v31[24];

  v6 = sub_100012E2C(&qword_1000D10F0);
  __chkstk_darwin(v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v31, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "traitCollection");
    v16 = objc_msgSend(v15, "horizontalSizeClass");

    if (v16 != (id)1)
    {
      sub_100012A90();
      v18 = v17;
      v19 = type metadata accessor for LibraryDataSource(0);
      v20 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v19, &method descriptor for LibraryDataSource.layoutMode.getter);
      v21 = v20();
      v22 = swift_release(v18);
      if ((v21 & 1) == 0)
      {
        if (a3)
          dispatch thunk of PopoverModel.displaySharingPrompt(_:)(a2, v22);
        goto LABEL_4;
      }
      sub_100012A90();
      v24 = v23;
      sub_100087514();
      swift_release(v24);
      if (sub_100019D44((uint64_t)v8, 1, v9) == 1)
      {
        sub_10001222C((uint64_t)v8, &qword_1000D10F0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
        sub_10000C98C();
        v26 = v25;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v28 = objc_msgSend(v26, "cellForItemAtIndexPath:", isa);

        if (v28)
        {
          v29 = v28;
          sub_100063E34(a2, v28, v14);

          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          return;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
    }
    sub_100063E34(a2, 0, v14);
LABEL_4:

  }
}

void sub_100063E34(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  _QWORD aBlock[5];
  uint64_t v57;
  uint64_t v58;

  v7 = type metadata accessor for Logger(0);
  __chkstk_darwin(v7);
  v8 = *(void **)(v3 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  v9 = objc_msgSend(v8, "conflictingReferenceForReference:", a1);

  if (!v9)
  {
    sub_100003B2C(0, &qword_1000D1240, WFWorkflow_ptr);
    v10 = a1;
    v11 = sub_100030E6C(v10, v8);
    sub_100003B2C(0, (unint64_t *)&unk_1000D3070, WFWorkflowFileActivity_ptr);
    v12 = v11;
    if (a2)
    {
      objc_msgSend(a2, "bounds");
      v17 = a2;
    }
    else
    {
      v13 = 0.0;
      v14 = 0.0;
      v15 = 0.0;
      v16 = 0.0;
      v17 = 0;
    }
    v18 = sub_100064F2C(v17, 0, v13, v14, v15, v16);
    v58 = (uint64_t)_swiftEmptyArrayStorage;
    if (objc_msgSend((id)objc_opt_self(WFSharingSettings), "shortcutFileSharingEnabled"))
    {
      v19 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19, v20, v21, v22, v23, v24, v25, v26);
      v28 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v19);
      specialized Array._endMutation()(v29, v30);
    }
    v31 = objc_allocWithZone((Class)type metadata accessor for AddToHomeScreenActivity(0));
    v32 = (id)AddToHomeScreenActivity.init(reference:)(v10);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32, v33, v34, v35, v36, v37, v38, v39);
    v41 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v40 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v41 >= v40 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v32);
    specialized Array._endMutation()(v42, v43);
    v44 = objc_allocWithZone((Class)WFWorkflowActivityViewController);
    v45 = sub_1000654E4(v11, v58);
    if (a2)
    {
      v46 = a2;
      v47 = objc_msgSend(v45, "popoverPresentationController");
      if (v47)
      {
        v48 = v47;
        objc_msgSend(v47, "setSourceView:", v46);

      }
      v49 = objc_msgSend(v45, "popoverPresentationController");
      if (v49)
      {
        v50 = v49;
        objc_msgSend(v46, "bounds");
        objc_msgSend(v50, "setSourceRect:");

      }
      v51 = swift_allocObject(&unk_1000C2D18, 32, 7);
      *(_QWORD *)(v51 + 16) = v45;
      *(_QWORD *)(v51 + 24) = v18;
      aBlock[4] = sub_1000662A8;
      v57 = v51;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100007DA8;
      aBlock[3] = &unk_1000C2D30;
      v52 = _Block_copy(aBlock);
      v53 = v57;
      v54 = v18;
      v55 = v45;
      objc_msgSend(a3, "presentViewController:animated:completion:", v55, 1, v52, swift_release(v53).n128_f64[0]);

      _Block_release(v52);
    }
    else
    {
      objc_msgSend(a3, "presentViewController:animated:completion:", v45, 1, 0);

    }
  }
}

void sub_100064370(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1000643CC(a2, Strong);

  }
}

void sub_1000643CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  v6 = objc_msgSend(v5, "conflictingReferenceForReference:", a1);

  if (!v6)
  {
    sub_100003B2C(0, &qword_1000D1240, WFWorkflow_ptr);
    v7 = a1;
    v8 = v5;
    v9 = sub_100030E6C(v7, v8);
    if (v9)
    {
      v10 = v9;
      WFPresentWorkflowSettingsViewController(v9, v8, a2, 0);

    }
  }
}

void sub_1000644D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  Class isa;
  NSString v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  id v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
    sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v6 = String._bridgeToObjectiveC()();
    v13 = 0;
    v7 = objc_msgSend(v4, "removeReferences:fromCollectionWithIdentifier:error:", isa, v6, &v13);

    v8 = v13;
    if (v7)
    {
      v9 = v13;
    }
    else
    {
      v10 = v13;
      v11 = _convertNSErrorToError(_:)(v8);

      swift_willThrow(v12);
      swift_errorRelease(v11);
    }

  }
}

void sub_100064610(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;

  sub_100068D74(a1, a2);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v2(v3);

  }
  sub_10004280C();
}

double sub_100064650(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;

  sub_100012E2C(&qword_1000D10D0);
  sub_100018044();
  __chkstk_darwin(v3);
  sub_100019D7C();
  v6 = v5 - v4;
  v7 = type metadata accessor for TaskPriority(0);
  sub_100015D74(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v1;
  v9 = swift_bridgeObjectRetain(a1);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C2D68, 48);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  v11[5] = a1;
  v12 = sub_10005F1B8(v6, (uint64_t)&unk_1000D3098, (uint64_t)v11, (uint64_t)&unk_1000C2D90, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1000D30A8);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_100064744(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType(v7);
      dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)(a2, 0, 0, 0, 0, 0, 0, ObjectType, v9);

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
}

double sub_100064800(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  double result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v2 = sub_100012E2C((uint64_t *)&unk_1000D30D0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType(v9);
      dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v13 = type metadata accessor for RunningWorkflow(0);
      v14 = sub_100019D44((uint64_t)v4, 1, v13);
      if ((_DWORD)v14 == 1)
      {

        sub_10001222C((uint64_t)v4, (uint64_t *)&unk_1000D30D0);
      }
      else
      {
        v15 = (void (*)(uint64_t))RunningWorkflow.stop.getter(v14);
        v17 = v16;
        v18 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v4, v13);
        v15(v18);

        *(_QWORD *)&result = swift_release(v17).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_100064948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100012E2C(&qword_1000D10F0);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v5[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[6] = v8;
  v5[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9);
  v5[9] = v10;
  v5[10] = v11;
  return swift_task_switch(sub_100064A00, v10, v11);
}

uint64_t sub_100064A00()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  CGRect v45;
  CGRect v46;

  sub_10000C98C();
  v2 = v1;
  v0[11] = v1;
  sub_100012A90();
  v3 = type metadata accessor for LibraryDataSource(0);
  v4 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v3, &method descriptor for LibraryDataSource.layoutMode.getter);
  v5 = v4();
  sub_100019D9C();
  v6 = LibraryLayoutMode.rawValue.getter(v5 & 1);
  v8 = v7;
  v9 = LibraryLayoutMode.rawValue.getter(1);
  v11 = v6 == v9 && v8 == v10;
  if (v11)
  {
    sub_100068F20();
  }
  else
  {
    v12 = sub_100068E08(v6, v8, v9, v10);
    sub_100068FF8();
    sub_100018420();
    if ((v12 & 1) == 0)
      goto LABEL_14;
  }
  v14 = v0[4];
  v13 = v0[5];
  v16 = (void *)v0[2];
  v15 = v0[3];
  v17 = objc_msgSend(v2, "indexPathsForVisibleItems");
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v13);

  v19 = (_QWORD *)sub_10005F458(v18);
  v20 = sub_10005EB70(v15, v16);
  swift_bridgeObjectRetain(v19);
  sub_10005EE50((uint64_t)v20, v19, v14);
  swift_bridgeObjectRelease(v19);
  sub_100026B90();
  sub_100026D88(v14, 1, v13);
  if (v11)
  {
    sub_10001222C(v0[4], &qword_1000D10F0);
LABEL_14:
    v21 = 0;
    goto LABEL_15;
  }
  v21 = (void *)v0[7];
  (*(void (**)(void *, _QWORD, _QWORD))(v0[6] + 32))(v21, v0[4], v0[5]);
  v22 = objc_msgSend(v2, "cellForItemAtIndexPath:", IndexPath._bridgeToObjectiveC()().super.isa);
  sub_1000270D0();
  v24 = v0[6];
  v23 = v0[7];
  if (!v21)
  {
    sub_1000272BC(v0[7], *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    goto LABEL_15;
  }
  objc_msgSend(v2, "bounds");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  objc_msgSend(v21, "frame");
  v46.origin.x = v33;
  v46.origin.y = v34;
  v46.size.width = v35;
  v46.size.height = v36;
  v45.origin.x = v26;
  v45.origin.y = v28;
  v45.size.width = v30;
  v45.size.height = v32;
  v37 = CGRectContainsRect(v45, v46);
  sub_1000272BC(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  if (!v37)
  {

    goto LABEL_14;
  }
LABEL_15:
  v0[12] = v21;
  v38 = sub_100026B2C((uint64_t)&unk_1000C2DB8, 24);
  v0[13] = v38;
  *(_QWORD *)(v38 + 16) = v21;
  v39 = async function pointer to LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)[1];
  v40 = v21;
  v41 = (_QWORD *)swift_task_alloc(v39);
  v0[14] = v41;
  v42 = type metadata accessor for LibraryViewController(0);
  sub_100004998(&qword_1000D4460, type metadata accessor for LibraryViewController, (uint64_t)&unk_100097400);
  *v41 = v0;
  v41[1] = sub_100064CD4;
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v0[3], sub_1000663DC, v38, v42, v43);
}

uint64_t sub_100064CD4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  v1 = (_QWORD *)*v0;
  v3 = v1;
  sub_100068FB4(v1[14], &v3);
  sub_100019D9C();
  return swift_task_switch(sub_100064D1C, v1[9], v1[10]);
}

uint64_t sub_100064D1C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);

  sub_100019D9C();
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100064D74(void *a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(WFAlertPresentationSource), "sourceWithView:", a2);
  objc_msgSend(a1, "setPresentationSource:", v3);

}

void sub_100064DDC(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  sub_100068D74(a1, a2);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(v8);
      v2(v3, ObjectType, v10);

      swift_unknownObjectRelease(v9);
    }
    else
    {

    }
  }
}

void sub_100064E70(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  id v6;
  id v7;

  a2();
  v5 = *(_QWORD *)(a4 + 16);
  v6 = objc_allocWithZone((Class)type metadata accessor for ContextualActionEventTracker());
  v7 = (id)sub_100065028(0x6374726F6853794DLL, 0xEB00000000737475, v5);
  sub_100064EE4();

}

id sub_100064EE4()
{
  uint64_t v0;
  id result;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event), "track");
  result = *(id *)(v0
                 + OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator);
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

id sub_100064F2C(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  id v9;

  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "initWithSourceView:sourceRect:barButtonItem:", a1, a2, a3, a4, a5, a6);

  return v9;
}

id sub_100064FB4(void *a1, void *a2)
{
  id result;
  void *v4;
  id v5;

  result = objc_msgSend(a1, "popoverPresentationController");
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, "arrowDirection");

    return objc_msgSend(a2, "setArrowDirection:", v5);
  }
  return result;
}

uint64_t sub_100065028(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  const char *v20;
  uint64_t v21;
  objc_super v22;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v9 = OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event;
  v10 = objc_allocWithZone((Class)WFContextualActionMetricEvent);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator] = 0;
  sub_100068720(a1, a2, v12);
  if ((a3 & 0x8000000000000000) != 0)
  {
    v20 = "Negative value is not representable";
    v21 = 35;
  }
  else
  {
    if (!HIDWORD(a3))
    {
      objc_msgSend(v12, "setItemCount:", a3);

      v22.receiver = v11;
      v22.super_class = ObjectType;
      v13 = objc_msgSendSuper2(&v22, "init");
      v14 = (void *)objc_opt_self(BKSMousePointerService);
      v15 = (char *)v13;
      v16 = objc_msgSend(v14, "sharedInstance");
      v17 = objc_msgSend(v16, "addPointerDeviceObserver:", v15);

      v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator];
      *(_QWORD *)&v15[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator] = v17;
      swift_unknownObjectRelease(v18);
      return (uint64_t)v15;
    }
    v20 = "Not enough bits to represent the passed value";
    v21 = 45;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20, v21, 2, "Swift/Integers.swift", 20);
  __break(1u);
  return result;
}

id sub_100065200()
{
  char *v0;
  objc_class *ObjectType;
  void *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator];
  if (v2)
    objc_msgSend(v2, "invalidate");
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

id sub_1000652B8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event), "setHasTrackpad:", !sub_1000652F4(a1));
}

BOOL sub_1000652F4(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v1 = __CocoaSet.count.getter(a1);
  }
  else
  {
    v1 = *(_QWORD *)(a1 + 16);
  }
  return v1 == 0;
}

void sub_1000653A0()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.ContextualActionEventTracker", 38, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for ContextualActionEventTracker()
{
  return objc_opt_self(_TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker);
}

id sub_10006540C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v6[4] = a1;
  v7 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100065494;
  v6[3] = &unk_1000C2E98;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v2, "initWithDynamicProvider:", v3);
  _Block_release(v3);
  swift_release(v7);
  return v4;
}

id sub_100065494(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

id sub_1000654E4(void *a1, uint64_t a2)
{
  void *v2;
  NSArray v5;
  id v6;

  if (a2)
  {
    sub_100003B2C(0, &qword_1000D15E8, UIActivity_ptr);
    v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v5.super.isa = 0;
  }
  v6 = objc_msgSend(v2, "initWithWorkflow:applicationActivities:", a1, v5.super.isa);

  return v6;
}

void sub_100065570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;

  if (a1 < 0)
  {
    sub_100068CD8();
    sub_100068E24((uint64_t)"Fatal error", v3, v4, (uint64_t)"Can't construct Array with count < 0", v5, v6, (uint64_t)"Swift/Array.swift", v7, v8, v9, v10);
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v2 = sub_100068EB8();
      *(_QWORD *)(static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2) + 16) = a1;
    }
    sub_100068EB8();
    sub_100068F2C();
    sub_100068F8C();
  }
}

void sub_1000655F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;

  if (a1 < 0)
  {
    sub_100068CD8();
    sub_100068E24((uint64_t)"Fatal error", v3, v4, (uint64_t)"Can't construct Array with count < 0", v5, v6, (uint64_t)"Swift/Array.swift", v7, v8, v9, v10);
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v2 = sub_100047E90(a1, &qword_1000D3180, WFAction_ptr);
      *(_QWORD *)((static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2) & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    sub_100068F8C();
  }
}

uint64_t sub_100065678(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1000656DC;
  return v6(a1);
}

uint64_t sub_1000656DC()
{
  uint64_t v0;

  sub_1000424E0();
  return sub_100026EB8(*(uint64_t (**)(void))(v0 + 8));
}

id sub_100065704(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

uint64_t sub_10006573C(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100065764(a1, a2, a3, a4, &qword_1000D3188, (void (*)(_QWORD))&type metadata accessor for AutoShortcutApp);
}

uint64_t sub_100065750(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100065764(a1, a2, a3, a4, (uint64_t *)&unk_1000D3190, (void (*)(_QWORD))&type metadata accessor for LibrarySectionOptions);
}

uint64_t sub_100065764(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  const char *v24;
  uint64_t v25;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_24:
        sub_100068CD8();
        v24 = "Division by zero";
        v25 = 16;
LABEL_26:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v24, v25, 2, "Swift/IntegerTypes.swift", 24);
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100012E2C(a5);
  v14 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_24;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    sub_100068CD8();
    v24 = "Division results in an overflow";
    v25 = 31;
    goto LABEL_26;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  a6(0);
  sub_100068F2C();
  v22 = (unint64_t)v18 + v21;
  if ((a1 & 1) != 0)
  {
    sub_100014A58(a4 + v21, v11, v22, a6);
    *(_QWORD *)(a4 + 16) = 0;
    sub_1000183D0();
  }
  else
  {
    sub_100065AF4(0, v11, v22, a4, (uint64_t (*)(_QWORD))a6);
  }
  return (uint64_t)v18;
}

uint64_t sub_100065914(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100065764(a1, a2, a3, a4, &qword_1000D1F00, (void (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem);
}

void sub_100065928(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100012E2C(&qword_1000D3178);
    v11 = (char *)sub_100026B2C(v10, 8 * v9 + 32);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    sub_100065CDC((char *)(a4 + 32), v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
    sub_1000183D0();
  }
  else
  {
    sub_100065A04(0, v8, v13, a4);
  }
  sub_100018388();
}

char *sub_100065A04(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = (char *)(a4 + 8 * a1 + 32);
  v7 = &__dst[8 * v4];
  if (v6 >= v7 || &v6[8 * v4] <= __dst)
  {
    memcpy(__dst, v6, 8 * v4);
    swift_bridgeObjectRelease(a4);
    return v7;
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100065AF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_100068CD8();
    sub_100068D40();
    goto LABEL_11;
  }
  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 72);
  v13 = a4 + ((v11 + 32) & ~v11) + v12 * a1;
  v14 = v12 * v5;
  v15 = a3 + v14;
  v16 = v13 + v14;
  if (v13 >= v15 || v16 <= a3)
  {
    swift_arrayInitWithCopy(a3, v13, v5, v9);
    sub_1000183D0();
    return v15;
  }
  sub_100068CD8();
  sub_100068D30();
LABEL_11:
  result = sub_100068D04(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  __break(1u);
  return result;
}

void sub_100065BE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for IndexPath);
}

void sub_100065BEC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for LibraryEditingOption);
}

char *sub_100065BFC(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_100068CD8();
    result = (char *)sub_100068CEC((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_100068D10(a3, result);
  }
  return result;
}

void sub_100065C54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for LibrarySectionOptions.SectionType);
}

void sub_100065C60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for RootNavigationDestination);
}

char *sub_100065C6C(char *result, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  if (a2 < 0)
  {
    sub_100068CD8();
    result = (char *)sub_100068CEC((uint64_t)"Fatal error", v4, v5, (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count", v6, v7, (uint64_t)"Swift/UnsafePointer.swift", v8, v9, v10, v11);
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_100068D10(a3, result);
  }
  return result;
}

void sub_100065CC4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for NavigationDestinationEntity);
}

void sub_100065CD0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100014A58(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem);
}

char *sub_100065CDC(char *__src, uint64_t a2, char *__dst)
{
  char v4;

  if (a2 < 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

uint64_t sub_100065D60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_100065D6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for LibraryEditingOption);
}

uint64_t sub_100065D78(uint64_t a1, uint64_t a2)
{
  return sub_100065E38(a1, a2);
}

uint64_t sub_100065D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068D40();
  }
  else
  {
    sub_100069008();
    if (!v7 && v6)
    {
      v6 = v5 >= v4;
      v7 = v5 == v4;
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
    if (v7 || !v6)
      return sub_100068E78(v4, v2, v3, (uint64_t)&type metadata for String);
    sub_100068CD8();
    sub_100068D30();
  }
  result = sub_100068D04(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  __break(1u);
  return result;
}

uint64_t sub_100065E18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for LibrarySectionOptions.SectionType);
}

uint64_t sub_100065E24(uint64_t a1, uint64_t a2)
{
  return sub_100065E38(a1, a2);
}

uint64_t sub_100065E38(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  _QWORD *v4;
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068D40();
  }
  else
  {
    sub_100068E80();
    if (!v7 && v6)
    {
      v6 = v5 >= v2;
      v7 = v5 == v2;
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
    if (v7 || !v6)
    {
      sub_100003B2C(0, v3, v4);
      v8 = sub_100068E10();
      return sub_100068D20(v8, v9, v10, v11);
    }
    sub_100068CD8();
    sub_100068D30();
  }
  result = sub_100068D04(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  __break(1u);
  return result;
}

uint64_t sub_100065ECC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for RootNavigationDestination);
}

uint64_t sub_100065ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068D40();
  }
  else
  {
    sub_100069008();
    if (!v7 && v6)
    {
      v6 = v5 >= v4;
      v7 = v5 == v4;
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
    if (v7 || !v6)
      return sub_100068E78(v4, v2, v3, (uint64_t)&type metadata for Character);
    sub_100068CD8();
    sub_100068D30();
  }
  result = sub_100068D04(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  __break(1u);
  return result;
}

uint64_t sub_100065F64(uint64_t a1, uint64_t a2)
{
  return sub_100065E38(a1, a2);
}

uint64_t sub_100065F78(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_100065F84(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068D40();
  }
  else
  {
    sub_100068E80();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_100012E2C((uint64_t *)&unk_1000D31B0);
      v6 = sub_100068E10();
      return sub_100068D20(v6, v7, v8, v9);
    }
    sub_100068CD8();
    sub_100068D30();
  }
  result = sub_100068D04(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  __break(1u);
  return result;
}

uint64_t sub_100066014(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100066020(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ShortcutsLibraryItem);
}

uint64_t sub_100066020(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;

  if (a2 < 0)
  {
    sub_100068CD8();
    sub_100068D40();
  }
  else
  {
    v6 = *(_QWORD *)(*(_QWORD *)(a4(0) - 8) + 72) * a2;
    v7 = a3 + v6;
    v8 = a1 + v6;
    if (v7 <= a1 || v8 <= a3)
    {
      v10 = sub_100068E10();
      return sub_100068D20(v10, v11, v12, v13);
    }
    sub_100068CD8();
    sub_100068D30();
  }
  result = sub_100068D04(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  __break(1u);
  return result;
}

unint64_t sub_1000660D0(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000660F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

double sub_10006610C()
{
  uint64_t v0;

  return sub_100064800(v0);
}

unint64_t sub_100066114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D3060;
  if (!qword_1000D3060)
  {
    v1 = sub_1000143E4(&qword_1000D3058);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000D3060);
  }
  return result;
}

void sub_10006615C()
{
  uint64_t v0;

  sub_100064744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100066168()
{
  uint64_t v0;

  sub_100064610(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100066188()
{
  uint64_t v0;

  sub_100068E64();
  sub_100068F40();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1000661B4()
{
  uint64_t v0;

  sub_1000644D0(*(_QWORD *)(v0 + 16));
}

void sub_1000661C4()
{
  uint64_t v0;

  sub_100064610(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1000661E8()
{
  uint64_t v0;

  sub_100064370(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000661F0()
{
  uint64_t v0;

  sub_100068E64();
  sub_10002710C();

  return swift_deallocObject(v0, 40, 7);
}

void sub_10006621C()
{
  uint64_t v0;

  sub_100063BC8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10006622C()
{
  uint64_t v0;

  sub_100063B28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100066238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100068E64();
  sub_100068F40();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100066254()
{
  uint64_t v0;

  sub_100063A90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100066260()
{
  uint64_t v0;

  sub_1000639A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10006626C()
{
  uint64_t v0;

  sub_100064610(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10006628C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100026F0C();
  sub_10002710C();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

id sub_1000662A8()
{
  uint64_t v0;

  return sub_100064FB4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000662B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000662E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1000D3094);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100034C9C;
  return sub_100064948(a1, v4, v5, v7, v6);
}

uint64_t sub_10006635C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = sub_100068D64();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100066378()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc(dword_1000D30A4);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100068E44(v1);
  return sub_100068DCC(v2, v3, v4, v5);
}

uint64_t sub_1000663C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100026F0C();
  v0 = sub_100047EB8();
  return swift_deallocObject(v0, v1, v2);
}

void sub_1000663DC(void *a1)
{
  uint64_t v1;

  sub_100064D74(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1000663E4(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100066408(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_100066424(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38[9];

  v4 = v2;
  v7 = *v2;
  v8 = *(_QWORD *)(*v2 + 40);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v11 = v10;
  Hasher.init(_seed:)(v38, v8);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v38, v9, v11);
  v12 = sub_100068FAC();
  sub_100026B90();
  v13 = -1 << *(_BYTE *)(v7 + 32);
  v14 = v12 & ~v13;
  sub_100068FCC();
  if ((v15 & 1) != 0)
  {
    sub_100068FC0();
    v16 = sub_100068ED4();
    if (v3 == v16 && v12 == v17)
    {
LABEL_16:
      sub_100068F20();
    }
    else
    {
      v19 = sub_100068DDC(v16, v17);
      sub_100018420();
      sub_100026B90();
      if ((v19 & 1) == 0)
      {
        v20 = ~v13;
        do
        {
          v14 = (v14 + 1) & v20;
          sub_100068FCC();
          if ((v21 & 1) == 0)
            goto LABEL_15;
          sub_100068FC0();
          v22 = sub_100068ED4();
          if (v19 == v22 && v12 == v23)
            goto LABEL_16;
          v19 = sub_100068DDC(v22, v23);
          sub_100018420();
          sub_100026B90();
        }
        while ((v19 & 1) == 0);
      }
    }

    sub_100068FF8();
    v35 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v14);
    *a1 = v35;
    v36 = v35;
    goto LABEL_18;
  }
LABEL_15:
  sub_100068FF8();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  sub_100068F98();
  v26 = a2;
  sub_10006727C((uint64_t)v26, v14, isUniquelyReferenced_nonNull_native);
  sub_100068EE4(v27, v28, v29, v30, v31, v32, v33, v34, v37, v38[0]);
  *a1 = v26;
LABEL_18:
  sub_100068DB0();
}

void sub_100066584(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[9];

  v7 = *v3;
  Hasher.init(_seed:)(v33, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v33, a2, a3);
  v8 = sub_100068FAC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_100047DFC();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    sub_100026B90();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_100068F98();
    swift_bridgeObjectRetain(a3);
    sub_1000674A8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    sub_100068EE4(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33[0]);
    *a1 = a2;
    a1[1] = a3;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v7 + 48);
  v13 = (uint64_t *)(v12 + 16 * v10);
  v14 = v13[1];
  v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_100068E08(*v13, v14, a2, a3) & 1) == 0)
  {
    v18 = ~v9;
    do
    {
      v10 = (v10 + 1) & v18;
      sub_100047DFC();
      if ((v19 & 1) == 0)
        goto LABEL_16;
      v20 = (uint64_t *)(v12 + 16 * v10);
      v21 = v20[1];
      v22 = *v20 == a2 && v21 == a3;
    }
    while (!v22 && (sub_100068E08(*v20, v21, a2, a3) & 1) == 0);
  }
  swift_bridgeObjectRelease(a3);
  sub_100026B90();
  v16 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain(v17);
LABEL_17:
  sub_100068DB0();
}

uint64_t sub_1000666D4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char *v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  sub_100004998(&qword_1000D30B0, v12, (uint64_t)&protocol conformance descriptor for IndexPath);
  v14 = v13;
  swift_bridgeObjectRetain(v10);
  v36 = a2;
  v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v14);
  v16 = -1 << *(_BYTE *)(v10 + 32);
  v17 = v15 & ~v16;
  v18 = v10;
  v19 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v32 = v3;
    v33 = a1;
    v34 = ~v16;
    v35 = v7;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v22 = v18;
      v23 = v21;
      v21(v9, *(_QWORD *)(v18 + 48) + v20 * v17, v6);
      sub_100004998(&qword_1000D30B8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v36, v6, v24);
      v26 = *(void (**)(char *, uint64_t))(v35 + 8);
      v26(v9, v6);
      if ((v25 & 1) != 0)
        break;
      v17 = (v17 + 1) & v34;
      v18 = v22;
      v21 = v23;
      if (((*(_QWORD *)(v19 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      {
        swift_bridgeObjectRelease(v22);
        v3 = v32;
        a1 = v33;
        v27 = v35;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v22);
    v26(v36, v6);
    v23(v33, *(_QWORD *)(*v32 + 48) + v20 * v17, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v21 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v27 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v29 = v36;
    v21(v9, v36, v6);
    v37 = *v3;
    *v3 = 0x8000000000000000;
    sub_100067640((uint64_t)v9, v17, isUniquelyReferenced_nonNull_native);
    v30 = *v3;
    *v3 = v37;
    swift_bridgeObjectRelease(v30);
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(a1, v29, v6);
    return 1;
  }
}

void sub_100066930(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100012E2C(&qword_1000D1E18);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v32 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v34 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    if (!v9)
      goto LABEL_10;
LABEL_9:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * i);
      v18 = *(_QWORD *)(v6 + 40);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;
      Hasher.init(_seed:)(v35, v18);
      String.hash(into:)(v35, v19, v21);
      v22 = Hasher._finalize()();
      swift_bridgeObjectRelease(v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v10 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
      *(_QWORD *)(v10 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v26) = v17;
      ++*(_QWORD *)(v6 + 16);
      if (v9)
        goto LABEL_9;
LABEL_10:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_41;
      if (v14 >= v33)
        goto LABEL_35;
      v15 = v34[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v33)
          goto LABEL_35;
        v15 = v34[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v33)
            goto LABEL_35;
          v15 = v34[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v33)
            {
LABEL_35:
              swift_release(v3);
              v2 = v32;
              v31 = 1 << *(_BYTE *)(v3 + 32);
              if (v31 > 63)
                sub_100066408(0, (unint64_t)(v31 + 63) >> 6, v34);
              else
                *v34 = -1 << v31;
              *(_QWORD *)(v3 + 16) = 0;
              break;
            }
            v15 = v34[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_42;
                if (v11 >= v33)
                  goto LABEL_35;
                v15 = v34[v11];
                ++v16;
                if (v15)
                  goto LABEL_23;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_23:
      v9 = (v15 - 1) & v15;
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100066C3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100012E2C((uint64_t *)&unk_1000D3110);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    if (!v9)
      goto LABEL_10;
LABEL_9:
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
      v19 = *v18;
      v20 = v18[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v19, v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) == 0)
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v24);
          if (v29 != -1)
          {
            v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
      *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      v30 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v25);
      *v30 = v19;
      v30[1] = v20;
      ++*(_QWORD *)(v6 + 16);
      if (v9)
        goto LABEL_9;
LABEL_10:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_41;
      if (v15 >= v10)
        goto LABEL_35;
      v16 = v33[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v10)
          goto LABEL_35;
        v16 = v33[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v10)
            goto LABEL_35;
          v16 = v33[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v10)
            {
LABEL_35:
              swift_release(v3);
              v2 = v32;
              v31 = 1 << *(_BYTE *)(v3 + 32);
              if (v31 > 63)
                sub_100066408(0, (unint64_t)(v31 + 63) >> 6, v33);
              else
                *v33 = -1 << v31;
              *(_QWORD *)(v3 + 16) = 0;
              break;
            }
            v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_42;
                if (v12 >= v10)
                  goto LABEL_35;
                v16 = v33[v12];
                ++v17;
                if (v16)
                  goto LABEL_23;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_23:
      v9 = (v16 - 1) & v16;
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100066F14(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100012E2C(&qword_1000D30C8);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_38;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v39 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v37 = v2;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  swift_retain(v7);
  v15 = 0;
  if (!v13)
    goto LABEL_9;
LABEL_8:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = v7;
    v22 = *(_QWORD *)(v7 + 48);
    v23 = *(_QWORD *)(v40 + 72);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
    v24(v6, v22 + v23 * i, v4);
    v25 = *(_QWORD *)(v9 + 40);
    sub_100004998(&qword_1000D30B0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) == 0)
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      while (++v30 != v33 || (v32 & 1) == 0)
      {
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v14 + 8 * v30);
        if (v35 != -1)
        {
          v31 = __clz(__rbit64(~v35)) + (v30 << 6);
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(_QWORD *)(v14 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    v24((char *)(*(_QWORD *)(v9 + 48) + v31 * v23), (unint64_t)v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v21;
    if (v13)
      goto LABEL_8;
LABEL_9:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_40;
    if (v18 >= v38)
      goto LABEL_34;
    v19 = v39[v18];
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v38)
        goto LABEL_34;
      v19 = v39[v15];
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v38)
          goto LABEL_34;
        v19 = v39[v15];
        if (!v19)
          break;
      }
    }
LABEL_22:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 < v38)
  {
    v19 = v39[v20];
    if (!v19)
    {
      while (1)
      {
        v15 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_41;
        if (v15 >= v38)
          goto LABEL_34;
        v19 = v39[v15];
        ++v20;
        if (v19)
          goto LABEL_22;
      }
    }
    v15 = v20;
    goto LABEL_22;
  }
LABEL_34:
  swift_release(v7);
  v2 = v37;
  v36 = 1 << *(_BYTE *)(v7 + 32);
  if (v36 > 63)
    sub_100066408(0, (unint64_t)(v36 + 63) >> 6, v39);
  else
    *v39 = -1 << v36;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_38:
  swift_release(v7);
  *v2 = v9;
}

void sub_10006727C(uint64_t a1, unint64_t a2, char a3)
{
  Swift::Int v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[9];

  v4 = (uint64_t *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100066930(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100067844();
LABEL_22:
      v31 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v31 + 48) + 8 * a2) = a1;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (!v33)
      {
        *(_QWORD *)(v31 + 16) = v34;
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100067DB0(v9);
  }
  v10 = *(_QWORD *)v3;
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v14 = v13;
  Hasher.init(_seed:)(v36, v11);
  String.hash(into:)(v36, v12, v14);
  v3 = Hasher._finalize()();
  swift_bridgeObjectRelease(v14);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v3 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
  v3 = v17;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v16 == v18 && v3 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v3, v18, v19, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    v23 = ~v15;
    do
    {
      a2 = (a2 + 1) & v23;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
      v3 = v25;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v24 == v26 && v3 == v27)
        goto LABEL_25;
      v29 = v27;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v3, v26, v27, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v29);
    }
    while ((v30 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for WFWorkflowTypeName(0);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v35);
  __break(1u);
}

void sub_1000674A8(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100066C3C(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1000679EC();
      goto LABEL_22;
    }
    sub_100068088(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

uint64_t sub_100067640(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100066F14(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100067B88();
      goto LABEL_12;
    }
    sub_100068330(v12);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  sub_100004998(&qword_1000D30B0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      sub_100004998(&qword_1000D30B8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100067844()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v1 = v0;
  sub_100012E2C(&qword_1000D1E18);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    v21 = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000679EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_100012E2C((uint64_t *)&unk_1000D3110);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    sub_100042CE0();
    *v1 = v4;
    sub_100026D40();
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    swift_bridgeObjectRetain(v21);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100067B88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012E2C(&qword_1000D30C8);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_30:
    *v1 = v8;
    return;
  }
  v26 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = *(_QWORD *)(v6 + 56);
  v16 = -1;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  v17 = v16 & v15;
  v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v24 = *(_QWORD *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v24, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v24, v5, v2);
    if (v17)
      goto LABEL_11;
LABEL_12:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v18)
  {
LABEL_28:
    swift_release(v6);
    v1 = v26;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

void sub_100067DB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100012E2C(&qword_1000D1E18);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_37:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v32 = v2;
  v33 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v34 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  if (!v9)
    goto LABEL_10;
LABEL_9:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * i);
    v18 = *(_QWORD *)(v6 + 40);
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;
    Hasher.init(_seed:)(v35, v18);
    v22 = v17;
    String.hash(into:)(v35, v19, v21);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v21);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v10 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v10 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v27) = v22;
    ++*(_QWORD *)(v6 + 16);
    if (v9)
      goto LABEL_9;
LABEL_10:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v14 >= v34)
      goto LABEL_35;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v34)
        goto LABEL_35;
      v15 = *(_QWORD *)(v33 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v34)
          goto LABEL_35;
        v15 = *(_QWORD *)(v33 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v34)
  {
LABEL_35:
    swift_release_n(v3, 2);
    v2 = v32;
    goto LABEL_37;
  }
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v34)
      goto LABEL_35;
    v15 = *(_QWORD *)(v33 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void sub_100068088(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100012E2C((uint64_t *)&unk_1000D3110);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_37:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  if (!v10)
    goto LABEL_10;
LABEL_9:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v20);
    String.hash(into:)(v33, v19, v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v25);
    *v30 = v19;
    v30[1] = v20;
    ++*(_QWORD *)(v6 + 16);
    if (v10)
      goto LABEL_9;
LABEL_10:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v15 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_35;
      v16 = *(_QWORD *)(v8 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_35;
        v16 = *(_QWORD *)(v8 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_35:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v8 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void sub_100068330(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100012E2C(&qword_1000D30C8);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
LABEL_36:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v35 = v2;
  v36 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  swift_retain(v8);
  v16 = 0;
  if (!v14)
    goto LABEL_9;
LABEL_8:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v22 * i, v4);
    v23 = *(_QWORD *)(v10 + 40);
    sub_100004998(&qword_1000D30B0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v25 = dispatch thunk of Hashable._rawHashValue(seed:)(v23, v4, v24);
    v26 = -1 << *(_BYTE *)(v10 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v15 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(_QWORD *)(v15 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v29 * v22, v7, v4);
    ++*(_QWORD *)(v10 + 16);
    if (v14)
      goto LABEL_8;
LABEL_9:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_38;
    if (v19 >= v37)
      goto LABEL_34;
    v20 = *(_QWORD *)(v36 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v37)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v37)
          goto LABEL_34;
        v20 = *(_QWORD *)(v36 + 8 * v16);
        if (!v20)
          break;
      }
    }
LABEL_22:
    v14 = (v20 - 1) & v20;
  }
  v21 = v19 + 3;
  if (v21 >= v37)
  {
LABEL_34:
    swift_release_n(v8, 2);
    v2 = v35;
    goto LABEL_36;
  }
  v20 = *(_QWORD *)(v36 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v37)
      goto LABEL_34;
    v20 = *(_QWORD *)(v36 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
}

void sub_100068658()
{
  sub_1000686E0();
}

uint64_t sub_100068668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100068E3C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_100068E64();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000686D4()
{
  sub_1000686E0();
}

void sub_1000686E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100068E3C() - 8) + 80);
  sub_100064DDC(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_100068720(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setSource:", v5);

}

Swift::Int sub_100068770(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = sub_100068FAC();
  sub_100047F0C();
  return v6;
}

uint64_t sub_1000687D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = sub_100068E08(v3, v5, v6, v7);
  sub_1000183D0();
  sub_100018420();
  return v9 & 1;
}

void sub_100068850(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 1) == 0 || (a1 & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= a1 >> 16)
  {
    __break(1u);
LABEL_9:
    sub_1000688EC(a1, a2, a3);
    if ((v7 & 1) == 0)
      sub_100068958(v7, a2, a3);
  }
}

void sub_1000688EC(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 0xC) == 4 << v5)
    sub_1000252CC(a1, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= a1 >> 16)
    __break(1u);
}

unint64_t sub_100068958(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) != 0)
    {
      v10 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) == 0)
        v10 = a2 & 0xFFFFFFFFFFFFLL;
      if (v5 != v10)
        return _StringGuts.foreignScalarAlign(_:)();
    }
    else
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v9 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
        }
        else
        {
          v9 = result >> 16;
        }
        v5 = v9;
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = _StringObject.sharedUTF8.getter(a2, a3);
          v5 = v12;
        }
        if (v5 != v7)
        {
          do
            v8 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v8 == 128);
          ++v5;
        }
      }
      return v5 << 16;
    }
  }
  return result;
}

uint64_t sub_100068A50(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100068AB8;
  return v5(v2 + 32);
}

uint64_t sub_100068AB8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_BYTE **)(v1 + 16);
  sub_100068FB4(*(_QWORD *)(v1 + 24), &v4);
  *v2 = *(_BYTE *)(v1 + 32);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100068B00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc(dword_1000D3104);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100068E44(v1);
  return sub_100068DCC(v2, v3, v4, v5);
}

unint64_t sub_100068B4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D3128;
  if (!qword_1000D3128)
  {
    v1 = sub_100003B2C(255, &qword_1000D3120, BKSMousePointerDevice_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000D3128);
  }
  return result;
}

uint64_t sub_100068B9C()
{
  uint64_t v0;

  return sub_100061954(*(_QWORD *)(v0 + 24));
}

uint64_t sub_100068BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100026F0C();
  sub_100068F40();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100068BDC()
{
  uint64_t v0;

  sub_100060C7C(*(_QWORD *)(v0 + 24));
  sub_100018188();
}

uint64_t sub_100068C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100068E64();
  sub_10002710C();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100068C1C(uint64_t a1)
{
  uint64_t v1;

  return sub_10005F958(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100068C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E2C(&qword_1000D30F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100068C6C()
{
  return sub_100060A04();
}

uint64_t sub_100068C74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100068CA0(uint64_t a1)
{
  uint64_t v1;

  sub_100064E70(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100068CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, 11, 2, a4, 55, 2, a7, 25, a9, a10, a11);
}

uint64_t sub_100068D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2, a7, 25, a9, a10, a11);
}

void *sub_100068D10@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_100068D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_arrayInitWithCopy(a1, a2, a3, a4);
}

uint64_t sub_100068D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_100068D64()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100068D74(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return swift_beginAccess(a1 + 16, va, 0, 0);
}

uint64_t sub_100068D94()
{
  return type metadata accessor for IndexPath(0);
}

uint64_t sub_100068DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_100068DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, a1, a2, 0);
}

uint64_t sub_100068DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_100068E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
}

uint64_t sub_100068E10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100068E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11, 2, a4, 36, 2, a7, 17, a9, a10, a11);
}

uint64_t sub_100068E3C()
{
  return type metadata accessor for AggregatedEntry(0);
}

uint64_t sub_100068E44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_100068E64()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100068E6C(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_100068E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_arrayInitWithCopy(a1, a2, a3, a4);
}

uint64_t sub_100068EB8()
{
  return type metadata accessor for IndexPath(0);
}

uint64_t sub_100068EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(a1 + v1, v4, v2);
}

uint64_t sub_100068ED4()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100068EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;

  v11 = *v10;
  *v10 = a10;
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_100068EF4()
{
  return 0;
}

uint64_t sub_100068F0C()
{
  uint64_t v0;

  return v0;
}

void sub_100068F18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_10001222C(v2, a2);
}

uint64_t sub_100068F20()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_100068F40()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
}

uint64_t sub_100068F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100015D74(a1, a2, 1, v2);
}

uint64_t sub_100068F54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100068F68@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100068F74()
{
  return type metadata accessor for LibraryMenuItem.ItemVariant(0);
}

void sub_100068F98()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

Swift::Int sub_100068FAC()
{
  return Hasher._finalize()();
}

uint64_t sub_100068FB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_100068FC0()
{
  uint64_t v0;
  uint64_t v1;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v0 + 48) + 8 * v1));
}

uint64_t sub_100068FE0(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, *(_QWORD *)(v1 - 152));
}

uint64_t sub_100068FEC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_100068FF8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100069000@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10005E968(v2, a1, a2);
}

void sub_10006901C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection))
  {
    sub_100069208();
  }
  else
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
    if (v2)
      *(_QWORD *)(v1 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v2 - 1;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateLockObserver);
    if (Strong)
    {
      v4 = (void *)Strong;
      sub_1000693E0();
      v6 = v5;
      sub_10000DB08(v5);

    }
  }
}

void sub_1000690B4(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection) = a1;
  v3 = a1;

  sub_10006901C();
}

id sub_1000690F8()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore;
  v2 = objc_allocWithZone((Class)type metadata accessor for SearchStateStore());
  v3 = v0;
  *(_QWORD *)&v0[v1] = sub_100019EAC((uint64_t)v3, "init");
  sub_100069E68((uint64_t)&v3[OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateLockObserver]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for SearchStateController();
  return objc_msgSendSuper2(&v5, "init");
}

id sub_10006918C(uint64_t a1)
{
  return sub_100069314(a1, type metadata accessor for SearchStateController);
}

uint64_t sub_1000691DC(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 8);
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  *(_BYTE *)(v4 + 17) = HIBYTE(a3) & 1;
  return swift_bridgeObjectRelease(v5);
}

void sub_100069208()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
  v2 = __CFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
    __break(1u);
  else
    *(_QWORD *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v3;
}

void sub_100069228()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
  if (v1)
    *(_QWORD *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v1 - 1;
}

uint64_t sub_100069244(uint64_t result, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v5;
  __int16 v6;

  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter))
  {
    v5 = result;
    v6 = a3 & 0x101;
    swift_bridgeObjectRetain(a2);
    return sub_1000691DC(v5, a2, v6);
  }
  return result;
}

id sub_1000692A8()
{
  char *v0;
  char *v1;
  objc_super v3;

  v1 = &v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
  *(_OWORD *)v1 = xmmword_1000967F0;
  *((_WORD *)v1 + 8) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SearchStateStore();
  return objc_msgSendSuper2(&v3, "init");
}

id sub_100069304()
{
  return sub_100069314(0, type metadata accessor for SearchStateStore);
}

id sub_100069314(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100069358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_100069E30(v4);
}

uint64_t sub_100069370(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state + 8);
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  *(_BYTE *)(v4 + 17) = HIBYTE(a3) & 1;
  return sub_100069E30(v5);
}

void sub_100069398()
{
  uint64_t v0;
  id v1;

  v0 = sub_10005E7FC(OBJC_IVAR____TtC9Shortcuts16SearchController_stateController);
  if (v0)
  {
    v1 = *(id *)(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore);
    sub_100042738();
  }
  sub_100018188();
}

void sub_1000693E0()
{
  void *v0;
  id v1;

  sub_100069424();
  if (v0)
  {
    v1 = objc_msgSend(v0, "searchBar");
    sub_100042738();
  }
  sub_100018188();
}

void sub_100069424()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = sub_10005E7FC(OBJC_IVAR____TtC9Shortcuts16SearchController_viewController);
  if (v1)
  {
    v2 = sub_100019EAC(v1, "navigationItem");
    sub_100042738();
    v3 = objc_msgSend(v0, "searchController");

  }
  sub_100018188();
}

uint64_t sub_100069488()
{
  unsigned __int8 *v0;
  uint64_t v1;

  sub_100069398();
  if (!v0)
    return 0;
  v1 = v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 17];

  return v1;
}

uint64_t sub_1000694C8()
{
  char *v0;
  void *v1;
  uint64_t v2;

  sub_100069398();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state
                                        + 8]);

  return v2;
}

id sub_100069524()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  sub_100026FEC(v1, "removeObserver:");

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SearchController();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_100069590()
{
  void *v0;
  void *v1;

  sub_100069E40();
  sub_1000693E0();
  v1 = v0;
  sub_10000DB08(v0);
  sub_100069E14(v1);
}

uint64_t sub_1000695B8()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier + 8);
  if (!v1)
    return 0x625F686372616573;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier);
  swift_bridgeObjectRetain(v1);
  v2._countAndFlagsBits = 0x5F6863726165735FLL;
  v2._object = (void *)0xEB00000000726162;
  String.append(_:)(v2);
  return v4;
}

void sub_10006963C(void *a1)
{
  uint64_t v1;
  char *v3;
  void *v4;
  uint64_t v5;
  __int16 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;

  sub_100069398();
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 8];
    v6 = v3[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 16];
    v7 = v3[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 17];
    swift_bridgeObjectRetain(v5);

    if (a1)
    {
      sub_100079588(a1);
      v9 = v8;
      v11 = v10;
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      v9 = 0;
      v11 = 0;
    }
    if (v7)
      v12 = 256;
    else
      v12 = 0;
    sub_10000DA5C(v9, v11, v12 | v6);
    swift_bridgeObjectRelease(v11);
  }
  v13 = v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_viewController;
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = *(_QWORD *)(v13 + 8);
    v17 = (id)Strong;
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(void *, uint64_t, uint64_t))(v15 + 32))(a1, ObjectType, v15);

  }
}

void sub_100069758()
{
  void *v0;
  void *v1;

  sub_1000693E0();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, "becomeFirstResponder");
    sub_100069E14(v1);
  }
}

void sub_1000697C8()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.SearchController", 26, "init()", 6, 0);
  __break(1u);
}

void sub_100069800(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "searchBar");
  sub_10006963C(v1);
  sub_100069E14(v1);
}

void sub_100069888(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  sub_100079588(a1);
  sub_10000DA5C(v2, v3, 257);
  sub_100047F0C();
  sub_100069424();
  if (v4)

  else
    sub_10006963C(a1);
}

void sub_100069930(void *a1)
{
  void *v2;

  sub_100069424();
  if (v2)
    sub_100069E1C(v2);
  else
    sub_100069E38(a1);
}

void sub_1000699B4(void *a1)
{
  uint64_t v1;
  __int16 v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  void *v8;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_state + 16);
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_state + 17);
  sub_100079588(a1);
  if (v4)
    v7 = 256;
  else
    v7 = 0;
  sub_10000DA5C(v5, v6, v7 | v3);
  sub_100047F0C();
  sub_100069424();
  if (v8)

  else
    sub_10006963C(a1);
}

uint64_t sub_100069A88(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(a1, "resignFirstResponder");
  sub_100079588(a1);
  v3 = v2;
  sub_10000DA5C(v4, v2, 256);
  return swift_bridgeObjectRelease(v3);
}

void sub_100069B1C(void *a1)
{
  void *v2;

  sub_100069E40();
  sub_100069424();
  if (v2)
  {
    sub_100069E1C(v2);
  }
  else
  {
    sub_10003F9A4(0, 0xE000000000000000, a1);
    if (objc_msgSend(a1, "isFirstResponder"))
      objc_msgSend(a1, "resignFirstResponder");
    else
      sub_100069E38(a1);
  }
}

uint64_t destroy for SearchState(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

void _s9Shortcuts11SearchStateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  sub_100018188();
}

uint64_t assignWithCopy for SearchState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for SearchState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchState(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 18))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchState()
{
  return &type metadata for SearchState;
}

void sub_100069D80(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setPlaceholder:", v4);

}

void sub_100069DC4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setAccessibilityIdentifier:", v5);

}

void sub_100069E14(id a1)
{

}

void sub_100069E1C(id a1)
{

}

id sub_100069E24()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 16));
}

uint64_t sub_100069E30@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(a1);
}

void sub_100069E38(void *a1)
{
  sub_10006963C(a1);
}

void sub_100069E40()
{
  sub_10000DA5C(0, 0xE000000000000000, 0);
}

id sub_100069E50(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  return objc_msgSend(a10, a2);
}

void sub_100069E58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

uint64_t sub_100069E60@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t sub_100069E68(uint64_t a1)
{
  return swift_unknownObjectWeakInit(a1, 0);
}

void sub_100069E70()
{
  void *v0;

  sub_10006963C(v0);
}

uint64_t sub_100069E7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = type metadata accessor for _AssistantIntent(0);
  __chkstk_darwin(v1);
  sub_100026BF0();
  OpenNavigationDestinationAction.init()();
  v2 = sub_10003F5E8();
  sub_10006FB08(v2, (uint64_t)sub_10006A2F4, v3, (uint64_t)sub_10006A79C);
  v75 = sub_10006FB44();
  sub_10006FB1C();
  OpenWorkflowAction.init()();
  v4 = sub_10003F52C();
  sub_10006FB08(v4, (uint64_t)sub_10006A880, v5, (uint64_t)sub_10006ACB4);
  v74 = sub_10006FB44();
  sub_10006FB1C();
  CreateWorkflowAction.init()();
  v6 = sub_10003F490();
  sub_10006FB08(v6, (uint64_t)sub_10006AE00, v7, (uint64_t)sub_10006B128);
  v73 = sub_10006FB44();
  sub_10006FB1C();
  CreateFolderAction.init()();
  v8 = sub_10003F5AC();
  sub_10006FB08(v8, (uint64_t)sub_10006B144, v9, (uint64_t)sub_10006B4B8);
  v72 = sub_10006FB44();
  sub_10006FB1C();
  MoveShortcutToFolderAction.init()();
  v10 = sub_10003F624();
  sub_10006FB08(v10, (uint64_t)sub_10006B620, v11, (uint64_t)sub_10006BBB8);
  v71 = sub_10006FB44();
  sub_10006FB1C();
  AddShortcutToHomeScreenAction.init()();
  v12 = sub_10003F6A4();
  sub_10006FB08(v12, (uint64_t)sub_10006BD54, v13, (uint64_t)sub_10006C240);
  v70 = sub_10006FB44();
  sub_10006FB1C();
  RenameShortcutAction.init()();
  v14 = sub_10003F75C();
  sub_10006FB08(v14, (uint64_t)sub_10006C264, v15, (uint64_t)sub_10006C7BC);
  v69 = sub_10006FB44();
  sub_10006FB1C();
  ChangeShortcutIconAction.init()();
  v16 = sub_10003F7A0();
  sub_10006FB08(v16, (uint64_t)sub_10006C938, v17, (uint64_t)sub_10006CCFC);
  v68 = sub_10006FB44();
  sub_10006FB1C();
  GetShortcutAttributesAction.init()();
  v18 = sub_10003F818();
  sub_10006FB08(v18, (uint64_t)sub_10006CD20, v19, (uint64_t)sub_10006D23C);
  v67 = sub_10006FB44();
  sub_10006FB1C();
  SetShortcutAttributesAction.init()();
  sub_10006FB7C(v20, v21, v22, v23);
  v24 = sub_10003F8D8();
  sub_10006FB28(v24, (uint64_t)sub_10006D260, v25, (uint64_t)sub_10006D9FC);
  v66 = sub_10006FB44();
  sub_10006FB1C();
  sub_10006FB4C();
  v30 = sub_10006FB7C(v26, v27, v28, v29);
  sub_10006FB28(v30, (uint64_t)sub_10006DA20, v31, (uint64_t)sub_10006D9FC);
  v32 = sub_10006FB44();
  sub_10006FB1C();
  sub_10006FB4C();
  v37 = sub_10006FB7C(v33, v34, v35, v36);
  sub_10006FB28(v37, (uint64_t)sub_10006DDC0, v38, (uint64_t)sub_10006D9FC);
  v39 = sub_10006FB44();
  sub_10006FB1C();
  sub_10006FB4C();
  v44 = sub_10006FB7C(v40, v41, v42, v43);
  sub_10006FB28(v44, (uint64_t)sub_10006E170, v45, (uint64_t)sub_10006D9FC);
  v46 = sub_10006FB44();
  sub_10006FB1C();
  sub_10006FB4C();
  v51 = sub_10006FB7C(v47, v48, v49, v50);
  sub_10006FB28(v51, (uint64_t)sub_10006E530, v52, (uint64_t)sub_10006D9FC);
  v53 = sub_10006FB44();
  sub_10006FB1C();
  CreateShortcutiCloudLinkAction.init()();
  v54 = sub_10003F914();
  sub_10006FB08(v54, (uint64_t)sub_10006E8EC, v55, (uint64_t)sub_10006EC90);
  v56 = sub_10006FB44();
  sub_10006FB1C();
  DeleteWorkflowAction.init()();
  v57 = sub_100041020();
  sub_10006FB08(v57, (uint64_t)sub_10006ECB4, v58, (uint64_t)sub_10006F128);
  v59 = sub_10006FB44();
  sub_10006FB1C();
  SearchShortcutsAction.init()();
  v60 = sub_100041144();
  sub_10006FB08(v60, (uint64_t)sub_10006F258, v61, (uint64_t)sub_10006F6B0);
  v62 = sub_10006FB44();
  sub_10006FB1C();
  v63 = sub_100012E2C(&qword_1000D3420);
  v64 = swift_allocObject(v63, 168, 7);
  *(_OWORD *)(v64 + 16) = xmmword_10009A5F0;
  *(_QWORD *)(v64 + 32) = v75;
  *(_QWORD *)(v64 + 40) = v74;
  *(_QWORD *)(v64 + 48) = v73;
  *(_QWORD *)(v64 + 56) = v72;
  *(_QWORD *)(v64 + 64) = v71;
  *(_QWORD *)(v64 + 72) = v70;
  *(_QWORD *)(v64 + 80) = v69;
  *(_QWORD *)(v64 + 88) = v68;
  *(_QWORD *)(v64 + 96) = v67;
  *(_QWORD *)(v64 + 104) = v66;
  *(_QWORD *)(v64 + 112) = v32;
  *(_QWORD *)(v64 + 120) = v39;
  *(_QWORD *)(v64 + 128) = v46;
  *(_QWORD *)(v64 + 136) = v53;
  *(_QWORD *)(v64 + 144) = v56;
  *(_QWORD *)(v64 + 152) = v59;
  *(_QWORD *)(v64 + 160) = v62;
  static _AssistantIntent.Builder.buildBlock(_:)();
  sub_10006FB70();
  return v0;
}

uint64_t sub_10006A2F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v2 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  __chkstk_darwin(v2);
  v45 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100012E2C(&qword_1000D3570);
  v4 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D3578);
  __chkstk_darwin(v7);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F5E8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for OpenNavigationDestinationAction, v10);
  v11._countAndFlagsBits = 0x657461676976614ELL;
  v11._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_10009A910);
  v13 = sub_10006F9BC();
  v41[1] = a1;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v13);
  v15 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v7, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for OpenNavigationDestinationAction, v10);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenNavigationDestinationAction, v10);
  v41[0] = *(_QWORD *)(v4 + 8);
  v17 = v42;
  ((void (*)(char *, uint64_t))v41[0])(v6, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenNavigationDestinationAction, v10);
  v18._countAndFlagsBits = 0x206F7420706D754ALL;
  v18._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10009A910);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v13);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v7, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0x6E6F697463657320;
  v22._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for OpenNavigationDestinationAction, v10);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenNavigationDestinationAction, v10);
  v23 = v17;
  v24 = v17;
  v25 = (void (*)(char *, uint64_t))v41[0];
  ((void (*)(char *, uint64_t))v41[0])(v6, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 2, &type metadata for OpenNavigationDestinationAction, v10);
  v26._countAndFlagsBits = 0x206F74206F47;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(&unk_10009A910);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v13);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v7, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 544106784;
  v30._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = v45;
  v32 = v46;
  v33 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v7);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for OpenNavigationDestinationAction, v10);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for OpenNavigationDestinationAction, v10);
  v25(v6, v23);
  v36 = sub_100012E2C((uint64_t *)&unk_1000D3580);
  v37 = swift_allocObject(v36, 56, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100096F70;
  v38 = v43;
  *(_QWORD *)(v37 + 32) = v44;
  *(_QWORD *)(v37 + 40) = v38;
  *(_QWORD *)(v37 + 48) = v35;
  v39 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v37);
  return v39;
}

void sub_10006A724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for NavigationDestinationEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032B1C(a1, (uint64_t)v4);
  OpenNavigationDestinationAction.target.setter((uint64_t)v4);
}

void sub_10006A79C(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A910, (uint64_t (*)(void))sub_10006F9BC, (uint64_t (*)(__n128))sub_10003F5E8, (uint64_t)sub_10006A7C0);
}

uint64_t sub_10006A7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x726F6853206C6C41, 0xED00007374756374);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6172656D6143, 0xE600000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7972656C6C6147, 0xE700000000000000);
  v3 = sub_100012E2C(&qword_1000D3418);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100096F70;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10006A880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v0 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v42 = *(_QWORD *)(v0 - 8);
  v43 = v0;
  __chkstk_darwin(v0);
  v41 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100012E2C(&qword_1000D3558);
  v2 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D3560);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F52C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenWorkflowAction, v8);
  v9._countAndFlagsBits = 0x206E65704FLL;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10009A8E8);
  v11 = sub_10003F4F0();
  v39 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenWorkflowAction, v8);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenWorkflowAction, v8);
  v38 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v40;
  v38(v4, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for OpenWorkflowAction, v8);
  v16._countAndFlagsBits = 0x2074696445;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_10009A8E8);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 544106784;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = v41;
  v22 = v42;
  v23 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenWorkflowAction, v8);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenWorkflowAction, v8);
  v25 = v38;
  v38(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenWorkflowAction, v8);
  v26._object = (void *)0x800000010009E2A0;
  v26._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(&unk_10009A8E8);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v39);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v5, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenWorkflowAction, v8);
  v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenWorkflowAction, v8);
  v25(v4, v15);
  v32 = sub_100012E2C(&qword_1000D3568);
  v33 = swift_allocObject(v32, 56, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100096F70;
  v34 = v43;
  *(_QWORD *)(v33 + 32) = v44;
  *(_QWORD *)(v33 + 40) = v34;
  *(_QWORD *)(v33 + 48) = v31;
  v35 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v33);
  return v35;
}

void sub_10006AC8C(id *a1)
{
  AddShortcutToHomeScreenAction.shortcut.setter(*a1);
}

void sub_10006ACB4(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A8E8, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F52C, (uint64_t)sub_10006ADD4);
}

void sub_10006ACD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(__n128), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = sub_10006FB88();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v14 = a3();
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  v16 = swift_release(KeyPath);
  v17 = a4(v16);
  _AssistantIntent.Value.init<A>(for:builder:)(v15, a5, 0, v17);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = sub_100012E2C(&qword_1000D3430);
  v20 = sub_10006FB64(v19);
  *(_OWORD *)(v20 + 16) = xmmword_100096E80;
  *(_QWORD *)(v20 + 32) = v18;
  static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  sub_10006FB94();
  sub_100026D40();
}

void sub_10006ADD4()
{
  sub_10006F6D4(0x800000010009DEC0, 0xD000000000000011, 0x800000010009DEE0);
}

uint64_t sub_10006AE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v1 = sub_100012E2C(&qword_1000D3540);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D3548);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F490();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x800000010009E240, &type metadata for CreateWorkflowAction, v8);
  v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateWorkflowAction, v8);
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for CreateWorkflowAction, v8);
  v9._countAndFlagsBits = 0xD000000000000019;
  v9._object = (void *)0x800000010009E260;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10009A8C0);
  v11 = sub_10006FA38(&qword_1000D3518, &qword_1000D3520, (void (*)(void))sub_10006F8C4, (uint64_t)&protocol conformance descriptor for <A> A?);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v1, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v3, &type metadata for CreateWorkflowAction, v8);
  v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateWorkflowAction, v8);
  v15 = v28;
  v28(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CreateWorkflowAction, v8);
  v16._countAndFlagsBits = 0xD00000000000001ALL;
  v16._object = (void *)0x800000010009E280;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_10009A8C0);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v1, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v3, &type metadata for CreateWorkflowAction, v8);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateWorkflowAction, v8);
  v15(v7, v4);
  v22 = sub_100012E2C(&qword_1000D3550);
  v23 = swift_allocObject(v22, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100096F70;
  v24 = v29;
  *(_QWORD *)(v23 + 32) = v30;
  *(_QWORD *)(v23 + 40) = v24;
  *(_QWORD *)(v23 + 48) = v21;
  v25 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v23);
  swift_bridgeObjectRelease(v23);
  return v25;
}

void sub_10006B128(uint64_t a1)
{
  sub_10006B4D4(a1, (uint64_t)&unk_10009A8C0, (uint64_t (*)(__n128))sub_10003F490, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006B144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v1 = sub_100012E2C(&qword_1000D3528);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D3530);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F5AC();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x800000010009E1E0, &type metadata for CreateFolderAction, v8);
  v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateFolderAction, v8);
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for CreateFolderAction, v8);
  v9._countAndFlagsBits = 0xD000000000000017;
  v9._object = (void *)0x800000010009E200;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10009A898);
  v11 = sub_10006FA38(&qword_1000D3518, &qword_1000D3520, (void (*)(void))sub_10006F8C4, (uint64_t)&protocol conformance descriptor for <A> A?);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v1, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v3, &type metadata for CreateFolderAction, v8);
  v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateFolderAction, v8);
  v15 = v28;
  v28(v7, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for CreateFolderAction, v8);
  v16._countAndFlagsBits = 0xD000000000000018;
  v16._object = (void *)0x800000010009E220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_10009A898);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v1, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v3, &type metadata for CreateFolderAction, v8);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v7, &type metadata for CreateFolderAction, v8);
  v15(v7, v4);
  v22 = sub_100012E2C(&qword_1000D3538);
  v23 = swift_allocObject(v22, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100096F70;
  v24 = v29;
  *(_QWORD *)(v23 + 32) = v30;
  *(_QWORD *)(v23 + 40) = v24;
  *(_QWORD *)(v23 + 48) = v21;
  v25 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v23);
  swift_bridgeObjectRelease(v23);
  return v25;
}

uint64_t sub_10006B46C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  v6 = a1[1];
  v7 = *a2;
  swift_bridgeObjectRetain(v6);
  return a5(v5, v6, v7);
}

void sub_10006B4B8(uint64_t a1)
{
  sub_10006B4D4(a1, (uint64_t)&unk_10009A898, (uint64_t (*)(__n128))sub_10003F5AC, (uint64_t)sub_10006B5EC);
}

void sub_10006B4D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v7 = sub_10006FB88();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v12 = sub_10006FA38(&qword_1000D3518, &qword_1000D3520, (void (*)(void))sub_10006F8C4, (uint64_t)&protocol conformance descriptor for <A> A?);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  v14 = swift_release(KeyPath);
  v15 = a3(v14);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, a4, 0, v15);
  v16 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = sub_100012E2C(&qword_1000D3430);
  v18 = sub_10006FB64(v17);
  *(_OWORD *)(v18 + 16) = xmmword_100096E80;
  *(_QWORD *)(v18 + 32) = v16;
  static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  sub_10006FB70();
  sub_100026D40();
}

void sub_10006B5EC()
{
  sub_10006F6D4(0x800000010009E1C0, 0x6269737365636341, 0xED00007974696C69);
}

uint64_t sub_10006B620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v2 = sub_100012E2C(&qword_1000D3500);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = v2;
  __chkstk_darwin(v2);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D3508);
  __chkstk_darwin(v7);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F624();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for MoveShortcutToFolderAction, v10);
  v11._countAndFlagsBits = 0x2065766F4DLL;
  v11._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_10009A848);
  v49 = sub_10006FA38(&qword_1000D3450, qword_1000D19A0, (void (*)(void))sub_10003F4F0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v46[1] = a1;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v49);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 544175136;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_10009A870);
  v52 = sub_10006F9BC();
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v52);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v7, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveShortcutToFolderAction, v10);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for MoveShortcutToFolderAction, v10);
  v47 = *(void (**)(char *, uint64_t))(v3 + 8);
  v48 = v4;
  v47(v6, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 2, &type metadata for MoveShortcutToFolderAction, v10);
  v20._countAndFlagsBits = 0x6F6D20732774654CLL;
  v20._object = (void *)0xEB00000000206576;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A848);
  v22 = v49;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v21, v49);
  v24 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v7, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 544175136;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(&unk_10009A870);
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v52);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v7, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveShortcutToFolderAction, v10);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for MoveShortcutToFolderAction, v10);
  v30 = v47;
  v47(v6, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 2, &type metadata for MoveShortcutToFolderAction, v10);
  v31._countAndFlagsBits = 0x20656C6946;
  v31._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath(&unk_10009A848);
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v22);
  v34 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v7, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 0x207265646E7520;
  v35._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(&unk_10009A870);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v52);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v7, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveShortcutToFolderAction, v10);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for MoveShortcutToFolderAction, v10);
  v30(v6, v48);
  v41 = sub_100012E2C(&qword_1000D3510);
  v42 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100096F70;
  v43 = v50;
  *(_QWORD *)(v42 + 32) = v51;
  *(_QWORD *)(v42 + 40) = v43;
  *(_QWORD *)(v42 + 48) = v40;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v42);
  swift_bridgeObjectRelease(v42);
  return v44;
}

void sub_10006BADC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  GetShortcutAttributesAction.shortcut.getter();
  *a1 = v2;
}

void sub_10006BB08(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  MoveShortcutToFolderAction.shortcuts.setter(v1);
}

void sub_10006BB34()
{
  OpenNavigationDestinationAction.target.getter();
}

void sub_10006BB40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for NavigationDestinationEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032B1C(a1, (uint64_t)v4);
  OpenNavigationDestinationAction.target.setter((uint64_t)v4);
}

uint64_t sub_10006BBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10009A848);
  v5 = sub_10006FA38(&qword_1000D3450, qword_1000D19A0, (void (*)(void))sub_10003F4F0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_10003F624();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10006ADD4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v10 = swift_getKeyPath(&unk_10009A870);
  v11 = sub_10006F9BC();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(v10, v11);
  swift_release(v10);
  _AssistantIntent.Value.init<A>(for:builder:)(v12, sub_10006B5EC, 0, v7);
  v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9(v3, v0);
  v14 = sub_100012E2C(&qword_1000D3430);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100096F60;
  *(_QWORD *)(v15 + 32) = v8;
  *(_QWORD *)(v15 + 40) = v13;
  v16 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v15);
  return v16;
}

uint64_t sub_10006BD54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v41 = a1;
  v45 = sub_100012E2C(&qword_1000D34E8);
  v1 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E2C(&qword_1000D34F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F6A4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for AddShortcutToHomeScreenAction, v7);
  v8._countAndFlagsBits = 543450177;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_10009A820);
  v10 = sub_10003F4F0();
  v46 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._object = (void *)0x800000010009E120;
  v13._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddShortcutToHomeScreenAction, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddShortcutToHomeScreenAction, v7);
  v40 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14 = v45;
  v40(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for AddShortcutToHomeScreenAction, v7);
  v15._countAndFlagsBits = 0xD00000000000001ELL;
  v15._object = (void *)0x800000010009E140;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_10009A820);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v4, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddShortcutToHomeScreenAction, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddShortcutToHomeScreenAction, v7);
  v20 = v40;
  v40(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for AddShortcutToHomeScreenAction, v7);
  v21._countAndFlagsBits = 0xD000000000000021;
  v21._object = (void *)0x800000010009E160;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_10009A820);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v46);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddShortcutToHomeScreenAction, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddShortcutToHomeScreenAction, v7);
  v26 = v45;
  v20(v3, v45);
  v27 = v20;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for AddShortcutToHomeScreenAction, v7);
  v28._countAndFlagsBits = 0xD000000000000022;
  v28._object = (void *)0x800000010009E190;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_10009A820);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v46);
  v31 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddShortcutToHomeScreenAction, v7);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddShortcutToHomeScreenAction, v7);
  v27(v3, v26);
  v34 = sub_100012E2C(&qword_1000D34F8);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100096F50;
  v36 = v43;
  *(_QWORD *)(v35 + 32) = v44;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = v42;
  *(_QWORD *)(v35 + 56) = v33;
  v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v35);
  swift_bridgeObjectRelease(v35);
  return v37;
}

void sub_10006C1D4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = v2;
}

void sub_10006C204(id *a1)
{
  AddShortcutToHomeScreenAction.shortcut.setter(*a1);
}

void sub_10006C240(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A820, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F6A4, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006C264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  void (*v31)(char *, uint64_t);
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v2 = sub_100012E2C(&qword_1000D34D0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = v2;
  __chkstk_darwin(v2);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D34D8);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10003F75C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, &type metadata for RenameShortcutAction, v10);
  v11._countAndFlagsBits = 0x20656D616E6552;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_10009A7D0);
  v48 = sub_10003F4F0();
  v51 = a1;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v48);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 544175136;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_10009A7F8);
  v52 = sub_10006F8C4();
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v52);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v7, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameShortcutAction, v10);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for RenameShortcutAction, v10);
  v47 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20 = v4;
  v47(v6, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 2, &type metadata for RenameShortcutAction, v10);
  v21._countAndFlagsBits = 0x20656D614ELL;
  v21._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_10009A7D0);
  v23 = v48;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v48);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v7, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 32;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(&unk_10009A7F8);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v52);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v7, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameShortcutAction, v10);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for RenameShortcutAction, v10);
  v31 = v47;
  v47(v6, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for RenameShortcutAction, v10);
  v32._object = (void *)0x800000010009E100;
  v32._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = swift_getKeyPath(&unk_10009A7D0);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v23);
  v35 = swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v7, v35);
  swift_release(v34);
  v36._countAndFlagsBits = 544175136;
  v36._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(&unk_10009A7F8);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v52);
  v39 = swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v7, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameShortcutAction, v10);
  v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for RenameShortcutAction, v10);
  v31(v6, v20);
  v42 = sub_100012E2C(&qword_1000D34E0);
  v43 = swift_allocObject(v42, 56, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100096F70;
  v44 = v49;
  *(_QWORD *)(v43 + 32) = v50;
  *(_QWORD *)(v43 + 40) = v44;
  *(_QWORD *)(v43 + 48) = v41;
  v45 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v43);
  swift_bridgeObjectRelease(v43);
  return v45;
}

void sub_10006C6F8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = v2;
}

void sub_10006C724(id *a1)
{
  AddShortcutToHomeScreenAction.shortcut.setter(*a1);
}

void sub_10006C750(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  AddShortcutToHomeScreenAction.title.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_10006C77C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  swift_bridgeObjectRetain(v3);
  AddShortcutToHomeScreenAction.title.setter(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10006C7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10009A7D0);
  v5 = sub_10003F4F0();
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_10003F75C();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10006ADD4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v10 = swift_getKeyPath(&unk_10009A7F8);
  v11 = sub_10006F8C4();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(v10, v11);
  swift_release(v10);
  _AssistantIntent.Value.init<A>(for:builder:)(v12, sub_10006ADD4, 0, v7);
  v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9(v3, v0);
  v14 = sub_100012E2C(&qword_1000D3430);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100096F60;
  *(_QWORD *)(v15 + 32) = v8;
  *(_QWORD *)(v15 + 40) = v13;
  v16 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v15);
  return v16;
}

uint64_t sub_10006C938()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E2C(&qword_1000D34B8);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D34C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F7A0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for ChangeShortcutIconAction, v6);
  v7._object = (void *)0x800000010009E0C0;
  v7._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A7A8);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeShortcutIconAction, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeShortcutIconAction, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for ChangeShortcutIconAction, v6);
  v14._countAndFlagsBits = 0x20796669646F4DLL;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A7A8);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6E6F6369207327;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeShortcutIconAction, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeShortcutIconAction, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for ChangeShortcutIconAction, v6);
  v20._countAndFlagsBits = 0xD000000000000015;
  v20._object = (void *)0x800000010009E0E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A7A8);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeShortcutIconAction, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeShortcutIconAction, v6);
  v19(v2, v13);
  v26 = sub_100012E2C(&qword_1000D34C8);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100096F70;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_10006CCD4(id *a1, _QWORD *a2)
{
  return CreateShortcutiCloudLinkAction.shortcut.setter(*a1, *a2);
}

void sub_10006CCFC(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A7A8, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F7A0, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006CD20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  void (*v47)(char *, uint64_t);
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = sub_100012E2C(&qword_1000D34A0);
  v2 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D34A8);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F818();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for GetShortcutAttributesAction, v8);
  v9._object = (void *)0x800000010009E080;
  v9._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10009A780);
  v11 = sub_1000409FC();
  v50 = v11;
  v46[1] = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0x20726F6620;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A758);
  v48 = sub_10003F4F0();
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v48);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for GetShortcutAttributesAction, v8);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for GetShortcutAttributesAction, v8);
  v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19(v4, v52);
  v47 = v19;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2, &type metadata for GetShortcutAttributesAction, v8);
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v20._object = (void *)0x800000010009E0A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A780);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v11);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x20726F6620;
  v24._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(&unk_10009A758);
  v26 = v48;
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v25, v48);
  v28 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v5, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 63;
  v29._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for GetShortcutAttributesAction, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for GetShortcutAttributesAction, v8);
  v30 = v52;
  v19(v4, v52);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for GetShortcutAttributesAction, v8);
  v31._countAndFlagsBits = 0x2073692074616857;
  v31._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath(&unk_10009A758);
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v26);
  v34 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 2126631;
  v35._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(&unk_10009A780);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v50);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0x3F6F742074657320;
  v39._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for GetShortcutAttributesAction, v8);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for GetShortcutAttributesAction, v8);
  v47(v4, v30);
  v41 = sub_100012E2C(&qword_1000D34B0);
  v42 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100096F70;
  v43 = v49;
  *(_QWORD *)(v42 + 32) = v51;
  *(_QWORD *)(v42 + 40) = v43;
  *(_QWORD *)(v42 + 48) = v40;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v42);
  swift_bridgeObjectRelease(v42);
  return v44;
}

void sub_10006D1D4(_BYTE *a1@<X8>)
{
  char v2;

  SetShortcutAttributesAction.operation.getter();
  *a1 = v2;
}

void sub_10006D200(unsigned __int8 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  GetShortcutAttributesAction.attribute.setter(*a1, *a2, a2[1], a4, a5, a6, a7, a8);
}

void sub_10006D210(id *a1)
{
  GetShortcutAttributesAction.shortcut.setter(*a1);
}

void sub_10006D23C(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A758, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F818, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006D260(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  Swift::String v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;

  v2 = sub_100012E2C(&qword_1000D3488);
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E2C(&qword_1000D3490);
  __chkstk_darwin(v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10003F8D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 3, &type metadata for SetShortcutAttributesAction, v8);
  v9._object = (void *)0x800000010009E060;
  v9._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_10009A708);
  v76 = sub_1000409FC();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v76);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x20726F6620;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(&unk_10009A6E0);
  v15 = sub_10003F4F0();
  v75 = v15;
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v14, v15);
  v17 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 544175136;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10009A730);
  v20 = sub_10003F85C();
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v19, v20);
  v22 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v5, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetShortcutAttributesAction, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetShortcutAttributesAction, v8);
  v73 = *(_QWORD *)(v73 + 8);
  ((void (*)(char *, uint64_t))v73)(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 3, &type metadata for SetShortcutAttributesAction, v8);
  v24._countAndFlagsBits = 544499027;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(&unk_10009A6E0);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v15);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 2126631;
  v28._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_10009A708);
  v72 = a1;
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v76);
  v31 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0x676E697474657320;
  v32._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = swift_getKeyPath(&unk_10009A730);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v20);
  v35 = swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v5, v35);
  swift_release(v34);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetShortcutAttributesAction, v8);
  v68 = v8;
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetShortcutAttributesAction, v8);
  v37 = (void (*)(char *, uint64_t))v73;
  v38 = v74;
  ((void (*)(char *, uint64_t))v73)(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for SetShortcutAttributesAction, v8);
  v39._countAndFlagsBits = 0x20656C67676F54;
  v39._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(&unk_10009A6E0);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v75);
  v42 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v5, v42);
  swift_release(v41);
  v43._countAndFlagsBits = 2126631;
  v43._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  v44 = swift_getKeyPath(&unk_10009A708);
  v45 = v76;
  v46 = _AssistantIntent.IntentProjection.subscript.getter(v44, v76);
  v47 = swift_release(v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v46, v5, v47);
  swift_release(v46);
  v48._countAndFlagsBits = 0x676E697474657320;
  v48._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = v68;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetShortcutAttributesAction, v68);
  v50 = v49;
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetShortcutAttributesAction, v49);
  v51 = v38;
  v37(v4, v38);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 2, &type metadata for SetShortcutAttributesAction, v50);
  v52._countAndFlagsBits = 0x20656C67676F54;
  v52._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath(&unk_10009A708);
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v45);
  v55 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v5, v55);
  swift_release(v54);
  v56._countAndFlagsBits = 0x20726F6620;
  v56._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = swift_getKeyPath(&unk_10009A6E0);
  v58 = _AssistantIntent.IntentProjection.subscript.getter(v57, v75);
  v59 = swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v58, v5, v59);
  swift_release(v58);
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetShortcutAttributesAction, v50);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetShortcutAttributesAction, v50);
  ((void (*)(char *, uint64_t))v73)(v4, v51);
  v62 = sub_100012E2C(&qword_1000D3498);
  v63 = swift_allocObject(v62, 64, 7);
  *(_OWORD *)(v63 + 16) = xmmword_100096F50;
  v64 = v70;
  *(_QWORD *)(v63 + 32) = v71;
  *(_QWORD *)(v63 + 40) = v64;
  *(_QWORD *)(v63 + 48) = v69;
  *(_QWORD *)(v63 + 56) = v61;
  v65 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v63);
  swift_bridgeObjectRelease(v63);
  return v65;
}

void sub_10006D900(_BYTE *a1@<X8>)
{
  char v2;

  SetShortcutAttributesAction.attribute.getter();
  *a1 = v2;
}

void sub_10006D930(char *a1)
{
  SetShortcutAttributesAction.attribute.setter(*a1);
}

void sub_10006D944(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  SetShortcutAttributesAction.shortcut.getter(*a1);
  *a2 = v3;
}

void sub_10006D974(id *a1)
{
  SetShortcutAttributesAction.shortcut.setter(*a1);
}

void sub_10006D9B4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  SetShortcutAttributesAction.state.getter(*a1);
  *a2 = v3 & 1;
}

void sub_10006D9E8(char *a1)
{
  SetShortcutAttributesAction.state.setter(*a1);
}

void sub_10006D9FC(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A6E0, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F8D8, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006DA20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;

  v0 = sub_100012E2C(&qword_1000D3488);
  v33 = *(_QWORD *)(v0 - 8);
  v34 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D3490);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F8D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for SetShortcutAttributesAction, v6);
  v7._countAndFlagsBits = 0x20776F6853;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A6E0);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._object = (void *)0x800000010009E020;
  v35 = (void *)0x800000010009E020;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v13 = v34;
  v32 = *(void (**)(char *, uint64_t))(v33 + 8);
  v32(v2, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for SetShortcutAttributesAction, v6);
  v14._countAndFlagsBits = 543450177;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A6E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._object = (void *)0x800000010009E040;
  v18._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19 = v32;
  v32(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for SetShortcutAttributesAction, v6);
  v20._countAndFlagsBits = 0x20656C62616E45;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A6E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0xD000000000000012;
  v24._object = v35;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19(v2, v13);
  v26 = sub_100012E2C(&qword_1000D3498);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100096F70;
  v28 = v33;
  *(_QWORD *)(v27 + 32) = v36;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_10006DDC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E2C(&qword_1000D3488);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D3490);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F8D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for SetShortcutAttributesAction, v6);
  v7._countAndFlagsBits = 0x20776F6853;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A6E0);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._object = (void *)0x800000010009DFE0;
  v12._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for SetShortcutAttributesAction, v6);
  v14._countAndFlagsBits = 543450177;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A6E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x800000010009E000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for SetShortcutAttributesAction, v6);
  v20._countAndFlagsBits = 0x20656C62616E45;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A6E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x72616873206E6920;
  v24._object = (void *)0xEB00000000676E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19(v2, v13);
  v26 = sub_100012E2C(&qword_1000D3498);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100096F70;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_10006E170()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E2C(&qword_1000D3488);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D3490);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F8D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for SetShortcutAttributesAction, v6);
  v7._countAndFlagsBits = 0x20776F6853;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A6E0);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0x6D20796D206E6920;
  v12._object = (void *)0xEF72616220756E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for SetShortcutAttributesAction, v6);
  v14._countAndFlagsBits = 543450177;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A6E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x4D20796D206F7420;
  v18._object = (void *)0xEE00726162206361;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for SetShortcutAttributesAction, v6);
  v20._countAndFlagsBits = 0x20656C62616E45;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A6E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x20656874206E6920;
  v24._object = (void *)0xEF72616220706F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19(v2, v13);
  v26 = sub_100012E2C(&qword_1000D3498);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100096F70;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_10006E530()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E2C(&qword_1000D3488);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D3490);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F8D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for SetShortcutAttributesAction, v6);
  v7._object = (void *)0x800000010009DF80;
  v7._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A6E0);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0x6F6C206E65687720;
  v12._object = (void *)0xEC00000064656B63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for SetShortcutAttributesAction, v6);
  v14._countAndFlagsBits = 544109906;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A6E0);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0xD000000000000016;
  v18._object = (void *)0x800000010009DFA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for SetShortcutAttributesAction, v6);
  v20._countAndFlagsBits = 0x20656C62616E45;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_10009A6E0);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0xD000000000000018;
  v24._object = (void *)0x800000010009DFC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetShortcutAttributesAction, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetShortcutAttributesAction, v6);
  v19(v2, v13);
  v26 = sub_100012E2C(&qword_1000D3498);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100096F70;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v27);
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_10006E8EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_100012E2C(&qword_1000D3470);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E2C(&qword_1000D3478);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10003F914();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  v7._object = (void *)0x800000010009DF20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10009A6B8);
  v9 = sub_10003F4F0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v13 = v35;
  v33 = *(void (**)(char *, uint64_t))(v34 + 8);
  v33(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v14._object = (void *)0x800000010009DF40;
  v14._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_10009A6B8);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v19 = v13;
  v20 = v13;
  v21 = v33;
  v33(v2, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v22._countAndFlagsBits = 0xD000000000000019;
  v22._object = (void *)0x800000010009DF60;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v23 = swift_getKeyPath(&unk_10009A6B8);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v9);
  v25 = swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v3, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CreateShortcutiCloudLinkAction, v6);
  v21(v2, v20);
  v28 = sub_100012E2C(&qword_1000D3480);
  v29 = swift_allocObject(v28, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100096F70;
  v30 = v34;
  *(_QWORD *)(v29 + 32) = v36;
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 48) = v27;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v29);
  swift_bridgeObjectRelease(v29);
  return v31;
}

void sub_10006EC90(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A6B8, (uint64_t (*)(void))sub_10003F4F0, (uint64_t (*)(__n128))sub_10003F914, (uint64_t)sub_10006ADD4);
}

uint64_t sub_10006ECB4(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a1;
  v42 = sub_100012E2C(&qword_1000D3458);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D3460);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100041020();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for DeleteWorkflowAction, v10);
  v11._countAndFlagsBits = 0x206574656C6544;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_10009A690);
  v38 = sub_10006FA38(&qword_1000D3450, qword_1000D19A0, (void (*)(void))sub_10003F4F0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v38);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x206D6F726620;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for DeleteWorkflowAction, v10);
  v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for DeleteWorkflowAction, v10);
  v37 = *(void (**)(char *, uint64_t))(v40 + 8);
  v17 = v42;
  v37(v2, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, &type metadata for DeleteWorkflowAction, v10);
  v18._countAndFlagsBits = 0x2065766F6D6552;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_10009A690);
  v20 = v38;
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v19, v38);
  v22 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v7, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for DeleteWorkflowAction, v10);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for DeleteWorkflowAction, v10);
  v24 = v17;
  v25 = v37;
  v37(v2, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for DeleteWorkflowAction, v10);
  v26._countAndFlagsBits = 0x74206574656C6544;
  v26._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(&unk_10009A690);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v20);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v7, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 0x756374726F687320;
  v30._object = (void *)0xEA00000000007374;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for DeleteWorkflowAction, v10);
  v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for DeleteWorkflowAction, v10);
  v25(v2, v42);
  v32 = sub_100012E2C(&qword_1000D3468);
  v33 = swift_allocObject(v32, 56, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100096F70;
  v34 = v40;
  *(_QWORD *)(v33 + 32) = v41;
  *(_QWORD *)(v33 + 40) = v34;
  *(_QWORD *)(v33 + 48) = v31;
  v35 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v33);
  swift_bridgeObjectRelease(v33);
  return v35;
}

void sub_10006F100(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  DeleteWorkflowAction.entities.setter(v1);
}

uint64_t sub_10006F128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10009A690);
  v5 = sub_10006FA38(&qword_1000D3450, qword_1000D19A0, (void (*)(void))sub_10003F4F0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_100041020();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10006ADD4, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_100012E2C(&qword_1000D3430);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100096E80;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10006F258()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  Swift::String v23;
  void (*v24)(char *, uint64_t);
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v0 = sub_100012E2C(&qword_1000D3438);
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E2C(&qword_1000D3440);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100041144();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for SearchShortcutsAction, v10);
  v11._countAndFlagsBits = 0x20686372616553;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12._countAndFlagsBits = 0x736E6F6974636120;
  v12._object = (void *)0xED000020726F6620;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_10009A668);
  v14 = sub_10006F8C4();
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  v16 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v7, v16);
  swift_release(v15);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for SearchShortcutsAction, v10);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchShortcutsAction, v10);
  v18 = v38;
  v36 = *(void (**)(char *, uint64_t))(v37 + 8);
  v36(v2, v38);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for SearchShortcutsAction, v10);
  v19._object = (void *)0x800000010009DF00;
  v19._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v20 = swift_getKeyPath(&unk_10009A668);
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v14);
  v22 = swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v7, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for SearchShortcutsAction, v10);
  v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchShortcutsAction, v10);
  v24 = v36;
  v36(v2, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for SearchShortcutsAction, v10);
  v25._countAndFlagsBits = 0x20646E6946;
  v25._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(&unk_10009A668);
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v14);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v7, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for SearchShortcutsAction, v10);
  v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SearchShortcutsAction, v10);
  v24(v2, v18);
  v31 = sub_100012E2C(&qword_1000D3448);
  v32 = swift_allocObject(v31, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100096F70;
  v33 = v37;
  *(_QWORD *)(v32 + 32) = v39;
  *(_QWORD *)(v32 + 40) = v33;
  *(_QWORD *)(v32 + 48) = v30;
  v34 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v32);
  swift_bridgeObjectRelease(v32);
  return v34;
}

void sub_10006F674(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_bridgeObjectRetain(v3);
  SearchShortcutsAction.searchPhrase.setter(v2, v3, v4, v5, v6, v7, v8, v9);
}

void sub_10006F6B0(uint64_t a1)
{
  sub_10006ACD8(a1, (uint64_t)&unk_10009A668, (uint64_t (*)(void))sub_10006F8C4, (uint64_t (*)(__n128))sub_100041144, (uint64_t)sub_10006ADD4);
}

void sub_10006F6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, a1);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a2, a3);
  v7 = sub_100012E2C(&qword_1000D3418);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100096F60;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v6;
  static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  sub_10006FB94();
  sub_100018388();
}

void sub_10006F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_100026BF0();
  v3 = sub_10003F5E8();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for OpenNavigationDestinationAction, sub_10006F808, 0, &type metadata for OpenNavigationDestinationAction, v3);
  v4 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  v5 = sub_100012E2C(&qword_1000D3410);
  v6 = sub_10006FB64(v5);
  *(_OWORD *)(v6 + 16) = xmmword_100096E80;
  *(_QWORD *)(v6 + 32) = v4;
  static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  sub_10006FB70();
  sub_100018388();
}

uint64_t sub_10006F808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6D6143206E65704FLL, 0xEB00000000617265);
  v1 = sub_100012E2C(&qword_1000D3418);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100096E80;
  *(_QWORD *)(v2 + 32) = v0;
  v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v2);
  return v3;
}

ValueMetadata *type metadata accessor for ShortcutsAssistantIntentsProvider()
{
  return &type metadata for ShortcutsAssistantIntentsProvider;
}

void sub_10006F8A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_10006FB58(a1);
  SearchShortcutsAction.searchPhrase.getter();
  *v1 = v2;
  v1[1] = v3;
  sub_100018188();
}

unint64_t sub_10006F8C4()
{
  unint64_t result;

  result = qword_1000D3428;
  if (!qword_1000D3428)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000D3428);
  }
  return result;
}

void sub_10006F900(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_10006FB58(a1);
  AddShortcutToHomeScreenAction.shortcut.getter();
  *v1 = v2;
  sub_100018188();
}

void sub_10006F924(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = sub_10006FB58(a1);
  *v1 = CreateShortcutiCloudLinkAction.shortcut.getter(v2);
  sub_100018188();
}

void sub_10006F970(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = sub_10006FB58(a1);
  *v1 = CreateShortcutiCloudLinkAction.shortcut.getter(v2);
  sub_100018188();
}

unint64_t sub_10006F9BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D16C0;
  if (!qword_1000D16C0)
  {
    v1 = type metadata accessor for NavigationDestinationEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDestinationEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1000D16C0);
  }
  return result;
}

void sub_10006F9FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10006FB58(a1);
  *v1 = CreateWorkflowAction.name.getter(v2);
  v1[1] = v3;
  sub_100018188();
}

uint64_t sub_10006FA1C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B46C(a1, a2, a3, a4, CreateWorkflowAction.name.setter);
}

uint64_t sub_10006FA38(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1000143E4(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10006FA9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10006FB58(a1);
  *v1 = CreateWorkflowAction.name.getter(v2);
  v1[1] = v3;
  sub_100018188();
}

uint64_t sub_10006FABC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10006B46C(a1, a2, a3, a4, CreateWorkflowAction.name.setter);
}

void sub_10006FAD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_10006FB58(a1);
  AddShortcutToHomeScreenAction.shortcut.getter();
  *v1 = v2;
  sub_100018188();
}

void sub_10006FAFC()
{
  OpenNavigationDestinationAction.target.getter();
}

uint64_t sub_10006FB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _AssistantIntent.init<A>(_:phrases:parameterValues:)(v4 - 112, a2, 0, a4, 0);
}

uint64_t sub_10006FB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_10006FB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _AssistantIntent.init<A>(_:phrases:parameterValues:)(v4 - 112, a2, 0, a4, 0);
}

uint64_t sub_10006FB44()
{
  uint64_t v0;

  return static _AssistantIntent.Builder.buildExpression(_:)(v0);
}

void sub_10006FB4C()
{
  SetShortcutAttributesAction.init(attribute:operation:state:)();
}

uint64_t sub_10006FB58(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_10006FB64(uint64_t a1)
{
  return swift_allocObject(a1, 40, 7);
}

uint64_t sub_10006FB70()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10006FB7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = result;
  *(_QWORD *)(v4 - 104) = a2;
  *(_QWORD *)(v4 - 96) = a3;
  *(_QWORD *)(v4 - 88) = a4;
  return result;
}

uint64_t sub_10006FB88()
{
  return type metadata accessor for _AssistantIntent.Value(0);
}

uint64_t sub_10006FB94()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

_QWORD *sub_10006FBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  __n128 v30;
  id v32;

  sub_100012A90();
  sub_1000870D4(a3);
  v6 = v5;
  sub_100019D9C();
  if (!v6)
    return _swiftEmptyArrayStorage;
  v7 = *(void **)(v3 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  v32 = 0;
  v8 = objc_msgSend(v7, "recordWithDescriptor:error:", v6, &v32);
  v9 = v32;
  if (!v8)
  {
    v28 = v32;
    v29 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v30);
    swift_errorRelease(v29);
    return _swiftEmptyArrayStorage;
  }
  v10 = v8;
  v11 = objc_opt_self(WFWorkflowRecord);
  v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
  v13 = v9;
  if (!v12)
  {

    return _swiftEmptyArrayStorage;
  }
  v14 = objc_msgSend(v12, "fileRepresentation");
  v15 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v16 = sub_100019EAC((uint64_t)v15, "name");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  sub_100071D14(v17, v19, v15);
  objc_msgSend(v15, "registerObject:visibility:", v14, 3);
  objc_msgSend(v15, "registerObject:visibility:", v6, 3);
  v20 = (void *)objc_opt_self(WFWindowSceneManager);
  v21 = objc_msgSend(v20, "existingSceneSessionForEditingWorkflowReference:", v6);

  if (!v21)
  {
    v22 = objc_msgSend(v20, "userActivityForEditingWorkflow:", v6);
    objc_msgSend(v15, "registerObject:visibility:", v22, 0);

  }
  v23 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v15);
  objc_msgSend(v23, "setLocalObject:", v6);
  v24 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100096F90;
  *(_QWORD *)(v25 + 32) = v23;
  v32 = (id)v25;
  specialized Array._endMutation()(v25, v26);
  v27 = v32;

  return v27;
}

_QWORD *sub_10006FF50(uint64_t a1, id a2)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v16;
  void *v18;
  void *v20;
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  v2 = objc_msgSend(a2, "items");
  v16 = sub_100047E90((uint64_t)v2, &qword_1000D3678, UIDragItem_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v16);

  if (v3 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  for (; v4; v4 = sub_100047EC8())
  {
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
         : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, "localObject");
      if (v9)
      {
        _bridgeAnyObjectToAny(_:)(v21, v9);
        sub_100027130();
      }
      else
      {
        memset(v21, 0, sizeof(v21));
      }
      sub_100071CA4((uint64_t)v21, (uint64_t)v22, (uint64_t *)&unk_1000D3650);
      if (!v23)
      {
        sub_100071CE8((uint64_t)v22, (uint64_t *)&unk_1000D3650);
LABEL_16:
        sub_100071E50();

        return _swiftEmptyArrayStorage;
      }
      v10 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
      if ((sub_100071E7C((uint64_t)&v20, (uint64_t)v22, (uint64_t)&type metadata for Any + 8, v10) & 1) == 0)
        goto LABEL_16;
      v11 = v20;

      ++v5;
      if (v8 == v4)
        goto LABEL_14;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain(v3);
  }
LABEL_14:
  sub_100071E50();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v18, "collectionView:itemsForBeginningDragSession:atIndexPath:", a1, a2, isa);

  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v16);
  return (_QWORD *)v14;
}

id sub_10007028C(uint64_t a1, void *a2)
{
  return sub_100070294(a2);
}

id sub_100070294(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  sub_1000785E8(a1);
  if (!v1)
    return 0;
  v3 = v1;
  v4 = v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIDragPreviewParameters), "init");
  objc_msgSend(v5, "setVisiblePath:", v3);

  return v5;
}

id sub_10007031C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;

  v9 = sub_100068EB8();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100019D7C();
  v13 = v12 - v11;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v14 = a3;
  v15 = a1;
  v16 = (void *)a5();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  return v16;
}

id sub_1000703D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;

  v3 = sub_100012E2C(&qword_1000D12C0);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100096E80;
  *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(WFWorkflowFileType);
  *(_QWORD *)(v4 + 40) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend(a2, "hasItemsConformingToTypeIdentifiers:", isa);

  return v7;
}

id sub_1000704CC(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  NSIndexPath v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v79 = a3;
  v80 = a1;
  v5 = type metadata accessor for LibrarySectionOptions(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  sub_100018044();
  __chkstk_darwin(v6);
  sub_100018548();
  v71 = v7;
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018548();
  v76 = v9;
  v72 = type metadata accessor for LibrarySectionOptions.SectionType(0);
  v70 = *(_QWORD *)(v72 - 8);
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100018548();
  v73 = v11;
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100019D7C();
  v15 = v14 - v13;
  v16 = type metadata accessor for ShortcutsLibraryItem.ItemType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_100019D7C();
  v20 = (id *)(v19 - v18);
  v21 = sub_100068EB8();
  v82 = *(_QWORD *)(v21 - 8);
  sub_100018044();
  __chkstk_darwin(v22);
  sub_10004248C();
  v77 = v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  sub_100012E2C(&qword_1000D10F0);
  sub_100018044();
  __chkstk_darwin(v27);
  sub_10004248C();
  v81 = v28;
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v68 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v68 - v34;
  __chkstk_darwin(v33);
  sub_100068F80();
  v83 = v36;
  v78 = v3;
  v37 = sub_1000732C0();
  if ((v37 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 0, 1);
  v39 = sub_100019EAC(v37, "localDragSession");
  swift_unknownObjectRelease(v39);
  if (v39)
  {
    v40 = sub_100047F28(v83, 1);
    v41 = sub_100019EAC(v40, "items");
    v42 = sub_100047E90((uint64_t)v41, &qword_1000D3678, UIDragItem_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);
    sub_100027668();
    if (a2 >> 62)
    {
      sub_100042A6C();
      v43 = sub_100047EC8();
      sub_1000183D0();
    }
    else
    {
      v43 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1000183D0();
    if (v43 > 1)
    {
      v44 = 0;
      v45 = v83;
LABEL_8:
      v47 = v81;
      v46 = v82;
      goto LABEL_27;
    }
    sub_10004757C(v79, (uint64_t)v35);
    v48 = sub_100026C7C((uint64_t)v35);
    if (v50)
    {
      sub_100071E14(v48, &qword_1000D10F0);
      v46 = v82;
    }
    else
    {
      v69 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
      v69(v26, v35, v21);
      sub_100012A90();
      sub_100012EC0((uint64_t)v26, v15);
      sub_100019D9C();
      v49 = type metadata accessor for ShortcutsLibraryItem(0);
      v51 = sub_100071E2C(v15);
      if (v50)
      {
        sub_100071CE8(v15, &qword_1000D3670);
        v46 = v82;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v26, v21);
      }
      else
      {
        ShortcutsLibraryItem.itemType.getter(v51);
        sub_100026D68(v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8));
        v52 = (*(uint64_t (**)(id *, uint64_t))(v17 + 88))(v20, v16);
        if ((_DWORD)v52 == enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
        {
          v45 = v83;
          sub_100071E14(v52, &qword_1000D10F0);
          (*(void (**)(id *, uint64_t))(v17 + 96))(v20, v16);

          v53 = sub_100012E2C((uint64_t *)&unk_1000D3680);
          (*(void (**)(char *, uint64_t))(v74 + 8))((char *)v20 + *(int *)(v53 + 48), v75);
          v69((char *)v45, v26, v21);
          sub_100047F28(v45, 0);
          v44 = 2;
          goto LABEL_8;
        }
        v46 = v82;
        sub_100026C54((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
        (*(void (**)(id *, uint64_t))(v17 + 8))(v20, v16);
      }
    }
    sub_10004757C(v79, (uint64_t)v32);
    sub_100026C7C((uint64_t)v32);
    if (v50)
    {
      sub_100071CE8((uint64_t)v32, &qword_1000D10F0);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v77, v32, v21);
      sub_100012A90();
      v55 = v54;
      IndexPath.section.getter(v54);
      v56 = v76;
      sub_100012D0C();
      swift_release(v55);
      v57 = type metadata accessor for ShortcutsLibrarySection(0);
      v59 = sub_100071E2C(v56);
      if (!v58)
      {
        v63 = v71;
        ShortcutsLibrarySection.options.getter(v59);
        sub_100026D68(v56, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8));
        v64 = v73;
        sub_100071EA0();
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v63, v75);
        v65 = v70;
        v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 88))(v64, v72);
        v45 = v83;
        v47 = v81;
        if (v66 == enum case for LibrarySectionOptions.SectionType.appShortcuts(_:))
        {
          sub_100071E48(v64, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 96));
          v67 = type metadata accessor for AutoShortcutApp(0);
          sub_100042914(v67);
          v62 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 1, 1);
          v61 = (id)sub_100071D84();
LABEL_31:
          sub_100071E14((uint64_t)v61, &qword_1000D10F0);
          return v62;
        }
        sub_100071D84();
        sub_100071E48(v64, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
        v44 = 1;
LABEL_27:
        sub_10004757C(v45, v47);
        sub_100026C7C(v47);
        if (v50)
        {
          v60.super.isa = 0;
        }
        else
        {
          v60.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
          sub_100026C54(v47, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
        }
        objc_msgSend(v80, "selectItemAtIndexPath:animated:scrollPosition:", v60.super.isa, 0, 0);

        v61 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 3, v44);
        v62 = v61;
        goto LABEL_31;
      }
      sub_100071CE8(v56, &qword_1000D0AD0);
      sub_100071D84();
    }
    v44 = 1;
    v45 = v83;
    v47 = v81;
    goto LABEL_27;
  }
  return objc_msgSend(objc_allocWithZone((Class)UICollectionViewDropProposal), "initWithDropOperation:intent:", 2, 1);
}

void sub_100070C40(uint64_t a1, void *a2)
{
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  void *v41;
  uint64_t v42;
  Class isa;
  CGFloat v44;
  uint64_t v45;
  id v46;
  double v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  double v54;
  double v55;
  CGFloat v56;
  void *v57;
  double v58;
  id v59;
  CGFloat MinX;
  double v61;
  CGFloat Width;
  double MaxY;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  char **v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  id *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(Class, uint64_t);
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  Class v145;
  void (*v146)(uint64_t, uint64_t);
  id v147;
  void (*v148)(uint64_t, uint64_t);
  _QWORD v149[3];
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  objc_class *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char **v160;
  char *v161;
  NSString *v162;
  CGFloat v163;
  CGFloat v164;
  uint64_t v165;
  id v166;
  CGFloat v167;
  id v168;
  CGFloat v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _OWORD v173[2];
  _QWORD v174[4];
  uint64_t v175;
  unint64_t v176;
  CGPoint v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;

  v154 = type metadata accessor for LibrarySectionOptions.SectionType(0);
  v8 = *(_QWORD *)(v154 - 8);
  v9 = __chkstk_darwin(v154);
  v11 = (char *)v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  sub_100068F80();
  v160 = v12;
  sub_100012E2C(&qword_1000D0AD0);
  sub_100018044();
  __chkstk_darwin(v13);
  sub_100018548();
  v157 = v14;
  v156 = type metadata accessor for LibrarySectionOptions(0);
  v158 = *(_QWORD *)(v156 - 8);
  sub_100018044();
  __chkstk_darwin(v15);
  sub_10004248C();
  sub_100071D68();
  __chkstk_darwin(v16);
  sub_100068F80();
  v155 = v17;
  v18 = sub_100068EB8();
  v170 = *(_QWORD *)(v18 - 8);
  sub_100018044();
  __chkstk_darwin(v19);
  sub_10004248C();
  sub_100071D68();
  v21 = __chkstk_darwin(v20);
  v23 = (char *)v149 - v22;
  __chkstk_darwin(v21);
  sub_100068F80();
  v171 = v24;
  sub_100012E2C(&qword_1000D10F0);
  sub_100018044();
  __chkstk_darwin(v25);
  sub_10004248C();
  sub_100071D68();
  __chkstk_darwin(v26);
  sub_100071E94();
  sub_100071D68();
  __chkstk_darwin(v27);
  sub_100071E94();
  sub_100071D68();
  __chkstk_darwin(v28);
  sub_100071E94();
  sub_100071D68();
  __chkstk_darwin(v29);
  sub_100071E94();
  sub_100071D68();
  v31 = __chkstk_darwin(v30);
  v33 = (char *)v149 - v32;
  v34 = __chkstk_darwin(v31);
  v36 = (char *)v149 - v35;
  v37 = __chkstk_darwin(v34);
  v39 = (char *)v149 - v38;
  v166 = a2;
  v40 = sub_100019EAC(v37, "destinationIndexPath");
  v153 = v8;
  v150 = v11;
  if (v40)
  {
    v41 = v40;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v40);

    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  sub_100015D74((uint64_t)v36, v42, 1, v18);
  isa = (Class)&qword_1000D10F0;
  sub_100071CA4((uint64_t)v36, (uint64_t)v39, &qword_1000D10F0);
  v161 = v39;
  sub_10004757C((uint64_t)v39, (uint64_t)v33);
  v172 = v18;
  v44 = COERCE_DOUBLE(sub_100019D44((uint64_t)v33, 1, v18));
  v45 = sub_100071CE8((uint64_t)v33, &qword_1000D10F0);
  if (LODWORD(v44) == 1)
  {
    v46 = sub_100071D94(v45, "session");
    objc_msgSend(v46, "locationInView:", a1);
    v164 = v47;
    v163 = v48;
    sub_100027130();
    v49 = (uint64_t)objc_msgSend((id)a1, "numberOfSections");
    if ((v49 & 0x8000000000000000) == 0)
    {
      v50 = v49;
      if (!v49)
        goto LABEL_16;
      v51 = 0;
      v162 = UICollectionElementKindSectionHeader;
      while (v50 != v51)
      {
        v44 = COERCE_DOUBLE(sub_100071E64(v49, "numberOfItemsInSection:"));
        sub_100071DB8();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v8 = *(_QWORD *)(v170 + 8);
        sub_100071E5C((uint64_t)v46);
        v52 = sub_100071E04();
        sub_100071E84();
        if (v46)
        {
          sub_100071DE4();
          sub_100071DD0();
          if (__OFSUB__(*(_QWORD *)&v44, 1))
            goto LABEL_51;
          IndexPath.init(item:section:)((*(_QWORD *)&v44 - 1) & ~((*(_QWORD *)&v44 - 1) >> 63), v51);
          v46 = v23;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          sub_100071E5C((uint64_t)v23);
          v53 = sub_100071E04();
          sub_100071E84();
          if (v23)
          {
            sub_100071DE4();
            v169 = v54;
            v56 = v55;
            v168 = v57;
            v167 = v58;

            isa = v162;
            sub_100071DB8();
            v44 = *(double *)&IndexPath._bridgeToObjectiveC()().super.isa;
            sub_100071E5C((uint64_t)v23);
            v59 = objc_msgSend((id)a1, "layoutAttributesForSupplementaryElementOfKind:atIndexPath:", isa, *(_QWORD *)&v44);
            sub_100071E84();

            sub_100071DE4();
            sub_100071DD0();
            v178.origin.x = v2;
            v178.origin.y = v3;
            v178.size.width = v4;
            v178.size.height = v5;
            MinX = CGRectGetMinX(v178);
            v61 = sub_100071DF0();
            objc_msgSend((id)a1, "frame");
            Width = CGRectGetWidth(v179);
            v180.origin.x = v169;
            v180.origin.y = v56;
            *(_QWORD *)&v180.size.width = v168;
            v180.size.height = v167;
            MaxY = CGRectGetMaxY(v180);
            v181.size.height = MaxY - sub_100071DF0() + 12.0;
            v181.origin.x = MinX;
            v181.origin.y = v61;
            v181.size.width = Width;
            v177.x = v164;
            v177.y = v163;
            v49 = CGRectContainsPoint(v181, v177);
            if ((_DWORD)v49)
            {
              v64 = (uint64_t)sub_100071E64(v49, "numberOfItemsInSection:");
              v65 = v149[1];
              IndexPath.init(item:section:)(v64 & ~(v64 >> 63), v51);
              v66 = (uint64_t)v161;
              sub_100071CE8((uint64_t)v161, &qword_1000D10F0);
              sub_100015D74(v65, 0, 1, v172);
              sub_100071CA4(v65, v66, &qword_1000D10F0);
              goto LABEL_16;
            }
          }
        }
        if (v50 == ++v51)
          goto LABEL_16;
      }
      __break(1u);
LABEL_51:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    v67 = (uint64_t)v161;
    v68 = v159;
    sub_10004757C((uint64_t)v161, v159);
    v8 = v172;
    if (sub_100019D44(v68, 1, v172) == 1)
    {
      sub_100071CE8(v67, &qword_1000D10F0);
      v69 = v68;
LABEL_62:
      sub_100071CE8(v69, &qword_1000D10F0);
      return;
    }
    v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 32))(v165, v68, v8);
    v71 = sub_100071D94(v70, "items");
    *(double *)&v72 = COERCE_DOUBLE(sub_100012E2C((uint64_t *)&unk_1000D3660));
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v72);

    v169 = *(double *)&v72;
    if (!((unint64_t)a1 >> 62))
    {
      v73 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_20;
    }
  }
  if (a1 < 0)
    v100 = a1;
  else
    v100 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v73 = _CocoaArrayWrapper.endIndex.getter(v100);
  sub_100047F0C();
LABEL_20:
  v74 = v160;
  if (v73)
  {
    v174[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v73);
    if ((v73 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v75 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v76 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v75, a1);
      }
      else
      {
        v76 = *(void **)(a1 + 8 * v75 + 32);
        swift_unknownObjectRetain(v76);
      }
      ++v75;
      isa = (Class)objc_msgSend(v76, "dragItem");
      v77 = sub_100027130();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v77);
      v44 = *(double *)(v174[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v44);
      v78 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v44, isa);
      specialized ContiguousArray._endMutation()(v78);
    }
    while (v73 != v75);
    v73 = v174[0];
    sub_100047F0C();
    v74 = v160;
  }
  else
  {
    sub_100047F0C();
    v73 = (unint64_t)_swiftEmptyArrayStorage;
  }
  v176 = (unint64_t)_swiftEmptyArrayStorage;
  if (v73 >> 62)
  {
    sub_100042A6C();
    v79 = sub_100047EC8();
    if (v79)
    {
LABEL_31:
      if (v79 >= 1)
      {
        v80 = 0;
        while (1)
        {
          if ((v73 & 0xC000000000000001) != 0)
            v81 = (id)sub_100071E8C(v80);
          else
            v81 = *(id *)(v73 + 8 * v80 + 32);
          v82 = v81;
          v83 = objc_msgSend(v81, "localObject");
          if (v83)
          {
            v84 = v83;
            _bridgeAnyObjectToAny(_:)(v173, v83);
            swift_unknownObjectRelease(v84);
          }
          else
          {
            memset(v173, 0, sizeof(v173));
          }
          sub_100071CA4((uint64_t)v173, (uint64_t)v174, (uint64_t *)&unk_1000D3650);
          if (v174[3])
          {
            v85 = sub_100003B2C(0, (unint64_t *)&unk_1000D3080, WFWorkflowReference_ptr);
            if ((sub_100071E7C((uint64_t)&v175, (uint64_t)v174, (uint64_t)&type metadata for Any + 8, v85) & 1) != 0)
              goto LABEL_44;
          }
          else
          {
            sub_100071CE8((uint64_t)v174, (uint64_t *)&unk_1000D3650);
          }
          v175 = 0;
LABEL_44:

          v94 = v175;
          if (v175)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86, v87, v88, v89, v90, v91, v92, v93);
            v96 = *(_QWORD *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v95 = *(_QWORD *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v96 >= v95 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
            v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v94);
            specialized Array._endMutation()(v97, v98);
          }
          if (v79 == ++v80)
          {
            sub_1000183D0();
            v99 = (_QWORD *)v176;
            v8 = v172;
            v74 = v160;
            goto LABEL_59;
          }
        }
      }
      goto LABEL_78;
    }
  }
  else
  {
    v79 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v73);
    if (v79)
      goto LABEL_31;
  }
  sub_1000183D0();
  v99 = _swiftEmptyArrayStorage;
LABEL_59:
  sub_1000183D0();
  sub_100071D78();
  v102 = v101;
  IndexPath.section.getter(v101);
  v103 = v157;
  sub_100012D0C();
  v104 = v103;
  swift_release(v102);
  v105 = type metadata accessor for ShortcutsLibrarySection(0);
  v106 = sub_100071E2C(v103);
  v107 = v158;
  if (v108)
  {
    sub_100071CE8(v104, &qword_1000D0AD0);
    sub_100026B90();
    sub_100071DA0();
    v69 = (uint64_t)v161;
    goto LABEL_62;
  }
  v109 = v152;
  ShortcutsLibrarySection.options.getter(v106);
  sub_100026D68(v104, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8));
  isa = v155;
  (*(void (**)(objc_class *, uint64_t, uint64_t))(v107 + 32))(v155, v109, v156);
  sub_100071EA0();
  v110 = (id *)v74;
  v74 = (char **)v153;
  v111 = (*(uint64_t (**)(id *, uint64_t))(v153 + 88))(v110, v154);
  if (v111 != enum case for LibrarySectionOptions.SectionType.shortcuts(_:))
  {
    sub_100026B90();
    sub_100026D68((uint64_t)isa, *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
    sub_100071DA0();
    sub_100071CE8((uint64_t)v161, &qword_1000D10F0);
    sub_100071E48((uint64_t)v110, (uint64_t (*)(uint64_t, uint64_t))v74[1]);
    return;
  }
  sub_100071E48((uint64_t)v110, (uint64_t (*)(uint64_t, uint64_t))v74[12]);

  v168 = (id)LibrarySectionOptions.collection.getter(v112);
  v73 = ((uint64_t (*)(void))IndexPath.item.getter)();
  v44 = *(double *)&v150;
  v113 = sub_100071EA0();
  v114 = LibrarySectionOptions.SectionType.count.getter(v113);
  v115 = sub_100026C54(*(uint64_t *)&v44, (uint64_t (*)(uint64_t, uint64_t))v74[1]);
  if (__OFSUB__(v114, 1))
    goto LABEL_79;
  isa = (Class)v149[2];
  v74 = &selRef_isFirstResponder;
  if (v114 - 1 < (uint64_t)v73)
    v116 = NSNotFound.getter(v115);
  else
    v116 = IndexPath.item.getter(v115);
  v73 = v116;
  sub_100071D78();
  v118 = v117;
  LibraryDataSource.shortcutMoveService.getter(v117);
  swift_release(v118);
  LOBYTE(v174[0]) = 1;
  dispatch thunk of ShortcutMoveService.move(_:to:of:source:)(v99, v73, v168, 0x100000000);
  sub_100019D9C();
  sub_100026B90();
  sub_100071D78();
  sub_10000C9A0();
  v119 = sub_100019D9C();
  v120 = sub_100071D94(v119, "items");
  v44 = v169;
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v120, *(_QWORD *)&v169);
  sub_100027668();
  if (v73 >> 62)
  {
LABEL_80:
    sub_100042A6C();
    v126 = sub_100047EC8();
    sub_1000183D0();
    if (!v126)
      goto LABEL_81;
    goto LABEL_71;
  }
  if (!*(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_81:
    sub_1000183D0();
    v125 = v151;
    sub_100071E70(v151, 1);
    goto LABEL_82;
  }
LABEL_71:
  sub_1000660CC(0, (v73 & 0xC000000000000001) == 0, v73);
  if ((v73 & 0xC000000000000001) != 0)
  {
    v121 = (void *)sub_100071E8C(0);
  }
  else
  {
    v121 = *(void **)(v73 + 32);
    swift_unknownObjectRetain(v121);
  }
  sub_1000183D0();
  v122 = objc_msgSend(v121, "sourceIndexPath");
  sub_100027130();
  if (v122)
  {
    v123 = v149[0];
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v122);

    v124 = 0;
  }
  else
  {
    v124 = 1;
    v123 = v149[0];
  }
  sub_100071E70(v123, v124);
  v125 = v151;
  sub_100071CA4(v123, v151, &qword_1000D10F0);
LABEL_82:
  sub_10004757C(v125, (uint64_t)isa);
  v127 = sub_100019D44((uint64_t)isa, 1, v8);
  v128 = v127;
  if ((_DWORD)v127 == 1)
  {
    v129 = sub_100071E14(v127, &qword_1000D10F0);
    v130 = 0;
  }
  else
  {
    v130 = IndexPath.section.getter(v127);
    sub_100071E1C();
    v129 = v131(isa, v8);
  }
  v132 = IndexPath.section.getter(v129);
  v133 = 1;
  if (v130 != v132)
    v133 = 2;
  if (v128 == 1)
    v134 = 2;
  else
    v134 = v133;
  sub_100071D78();
  sub_1000877F0(v134);
  v135 = sub_100019D9C();
  v136 = sub_100071D94(v135, v74[21]);
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v136, *(_QWORD *)&v44);
  sub_100027668();
  if (v134 >> 62)
    goto LABEL_101;
  v137 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v137)
  {
LABEL_99:
    sub_1000183D0();

    sub_100071CE8(v151, &qword_1000D10F0);
    (*(void (**)(objc_class *, uint64_t))(v158 + 8))(v155, v156);
    sub_100071E1C();
    v148(v165, v172);
    v69 = (uint64_t)v161;
    goto LABEL_62;
  }
  while (v137 >= 1)
  {
    v138 = 0;
    while (1)
    {
      if ((v134 & 0xC000000000000001) != 0)
      {
        v139 = (void *)sub_100071E8C(v138);
      }
      else
      {
        v139 = *(void **)(v134 + 8 * v138 + 32);
        swift_unknownObjectRetain(v139);
      }
      v140 = objc_msgSend(v139, "dragItem");
      v141 = IndexPath.item.getter(v140);
      v142 = v141 + v138;
      if (__OFADD__(v141, v138))
        break;
      ++v138;
      v143 = IndexPath.section.getter(v141);
      v144 = v171;
      IndexPath.init(item:section:)(v142, v143);
      v145 = IndexPath._bridgeToObjectiveC()().super.isa;
      sub_100071E1C();
      v146(v144, v172);
      v147 = objc_msgSend(v166, "dropItem:toItemAtIndexPath:", v140, v145);
      swift_unknownObjectRelease(v139);
      swift_unknownObjectRelease(v147);

      if (v137 == v138)
        goto LABEL_99;
    }
    __break(1u);
LABEL_101:
    sub_100042A6C();
    v137 = sub_100047EC8();
    sub_1000183D0();
    if (!v137)
      goto LABEL_99;
  }
  __break(1u);
}

void sub_100071B68(int a1, id a2)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v2 = objc_msgSend(a2, "localContext");
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  v4 = sub_100071CA4((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_1000D3650);
  if (v10)
  {
    v5 = sub_100047E90(v4, &qword_1000D0AB0, UICollectionViewCell_ptr);
    if ((sub_100071E7C((uint64_t)&v7, (uint64_t)v9, (uint64_t)&type metadata for Any + 8, v5) & 1) != 0)
    {
      v6 = v7;
      objc_msgSend(v7, "_setDropTarget:", 0);

    }
  }
  else
  {
    sub_100071CE8((uint64_t)v9, (uint64_t *)&unk_1000D3650);
  }
}

uint64_t sub_100071CA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100012E2C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100071CE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100012E2C(a2);
  sub_100042914(v3);
  return a1;
}

void sub_100071D14(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a3, "setSuggestedName:", v5);

}

void sub_100071D68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

void sub_100071D78()
{
  sub_100012A90();
}

uint64_t sub_100071D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

id sub_100071D94(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 304), a2);
}

uint64_t sub_100071DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
}

uint64_t sub_100071DB8()
{
  uint64_t v0;

  return IndexPath.init(item:section:)(0, v0);
}

double sub_100071DD0()
{
  void *v0;
  double result;

  return result;
}

id sub_100071DE4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 1312));
}

double sub_100071DF0()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetMinY(v5);
}

id sub_100071E04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, *(SEL *)(v0 + 160), v2);
}

uint64_t sub_100071E14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_100071CE8(v2, a2);
}

uint64_t sub_100071E2C(uint64_t a1)
{
  uint64_t v1;

  return sub_100019D44(a1, 1, v1);
}

uint64_t sub_100071E48@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100071E50()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_100071E5C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 256));
}

id sub_100071E64(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100071E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100015D74(a1, a2, 1, v2);
}

uint64_t sub_100071E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, a2, a3, a4, 6);
}

void sub_100071E84()
{
  void *v0;

}

uint64_t sub_100071E8C(uint64_t a1)
{
  uint64_t v1;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

uint64_t sub_100071EA0()
{
  return LibrarySectionOptions.sectionType.getter();
}

void sub_100071EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v3;
  id v4;

  if (a2)
  {
    v3 = String._bridgeToObjectiveC()();
    sub_100047F0C();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "_systemImageNamed:", v3);
  sub_100042738();
  sub_100018388();
}

uint64_t sub_100071F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  int isUniquelyReferenced_nonNull_native;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  _QWORD *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[15];
  uint64_t v99;
  uint64_t v100;

  sub_100018190();
  v99 = v2;
  v100 = v3;
  v4 = type metadata accessor for Logger(0);
  v85 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  sub_100018044();
  __chkstk_darwin(v5);
  sub_100018548();
  v84 = v6;
  sub_100012E2C((uint64_t *)&unk_1000D4470);
  sub_100018044();
  __chkstk_darwin(v7);
  sub_100018548();
  v91 = v8;
  v9 = sub_100047F00();
  v10 = type metadata accessor for AutoShortcutApp(v9);
  v96 = *(_QWORD *)(v10 - 8);
  sub_100018044();
  __chkstk_darwin(v11);
  sub_10004248C();
  v95 = v12;
  __chkstk_darwin(v13);
  v89 = (uint64_t)&v81 - v14;
  v15 = sub_100047F00();
  v16 = type metadata accessor for LibrarySectionOptions.SectionType(v15);
  sub_100079E30();
  v18 = __chkstk_darwin(v17);
  v20 = (id *)((char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v92 = (char *)&v81 - v21;
  v22 = *(_QWORD **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_groups);
  v23 = v22[2];
  v90 = v1;
  v87 = v22;
  if (v23)
  {
    swift_bridgeObjectRetain(v22);
    v24 = v22 + 5;
    v25 = _swiftEmptyArrayStorage;
    while (1)
    {
      v26 = *(v24 - 1);
      v27 = *v24;
      ObjectType = swift_getObjectType(v26);
      swift_unknownObjectRetain(v26);
      v29 = ((uint64_t (*)(uint64_t, uint64_t))dispatch thunk of LibraryGroup.sections.getter)(ObjectType, v27);
      swift_unknownObjectRelease(v26);
      v30 = *(_QWORD *)(v29 + 16);
      v31 = v25[2];
      v32 = v31 + v30;
      if (__OFADD__(v31, v30))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
      if (!isUniquelyReferenced_nonNull_native || v32 > v25[3] >> 1)
      {
        if (v31 <= v32)
          v34 = v31 + v30;
        else
          v34 = v31;
        v25 = (_QWORD *)sub_100065750(isUniquelyReferenced_nonNull_native, v34, 1, (uint64_t)v25);
      }
      if (*(_QWORD *)(v29 + 16))
      {
        v35 = v25[2];
        v36 = (v25[3] >> 1) - v35;
        v37 = sub_1000507B4();
        if (v36 < v30)
          goto LABEL_53;
        v38 = v37;
        v39 = *(_QWORD *)(v37 - 8);
        v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        v41 = *(_QWORD *)(v39 + 72);
        v42 = (char *)v25 + v40 + v41 * v35;
        v43 = v29 + v40;
        v44 = v41 * v30;
        v45 = &v42[v44];
        v46 = v43 + v44;
        if (v43 < (unint64_t)v45 && (unint64_t)v42 < v46)
          goto LABEL_55;
        swift_arrayInitWithCopy(v42, v43, v30, v38);
        if (v30)
        {
          v48 = v25[2];
          v49 = __OFADD__(v48, v30);
          v50 = v48 + v30;
          if (v49)
            goto LABEL_54;
          v25[2] = v50;
        }
      }
      else if (v30)
      {
        goto LABEL_52;
      }
      sub_100018420();
      v24 += 2;
      if (!--v23)
      {
        v22 = v87;
        sub_100018420();
        v1 = v90;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
    __break(1u);
LABEL_56:
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v16, v16);
    __break(1u);
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
LABEL_24:
    v51 = sub_100072780((uint64_t)v25);
    sub_100026B90();
    v52 = v51[2];
    v53 = (uint64_t)v92;
    if (v52)
    {
      v83 = 0;
      v54 = (char *)v51 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v94 = enum case for LibrarySectionOptions.SectionType.shortcuts(_:);
      v88 = enum case for LibrarySectionOptions.SectionType.appShortcuts(_:);
      v93 = *(_QWORD *)(v1 + 72);
      v55 = (uint64_t)v51;
      v56 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
      v82 = v55;
      swift_bridgeObjectRetain(v55);
      v57 = _swiftEmptyArrayStorage;
      v58 = v91;
      do
      {
        v56(v53, v54, v16);
        v56((uint64_t)v20, (char *)v53, v16);
        v59 = (*(uint64_t (**)(id *, uint64_t))(v1 + 88))(v20, v16);
        if (v59 == v94)
        {
          sub_100027560((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));

          v60 = 1;
        }
        else
        {
          if (v59 != v88)
            goto LABEL_56;
          sub_100027560((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
          v61 = sub_1000184E0();
          v62(v61);
          v60 = 0;
        }
        sub_100015D74(v58, v60, 1, v10);
        sub_100027560(v53, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        if (sub_100019D44(v58, 1, v10) == 1)
        {
          sub_100007AEC(v58, (uint64_t *)&unk_1000D4470);
        }
        else
        {
          v63 = v89;
          sub_100079E88(v89, v58);
          sub_100079E88(v95, v63);
          if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
            v57 = (_QWORD *)sub_100079F44(0, v57[2] + 1);
          v65 = v57[2];
          v64 = v57[3];
          if (v65 >= v64 >> 1)
            v57 = (_QWORD *)sub_100079F44(v64 > 1, v65 + 1);
          v57[2] = v65 + 1;
          sub_100079E88((uint64_t)v57+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(_QWORD *)(v96 + 72) * v65, v95);
          v1 = v90;
          v58 = v91;
          v53 = (uint64_t)v92;
        }
        v54 += v93;
        --v52;
      }
      while (v52);
      sub_100026FC4(v82);
      v22 = v87;
    }
    else
    {
      swift_bridgeObjectRelease(v51);
      v57 = _swiftEmptyArrayStorage;
    }
    v66 = sub_1000728D8((uint64_t)v57);
    sub_100026B90();
    if (v22[2] == 1)
    {
      v67 = v22[4];
      v68 = ((uint64_t (*)(_QWORD))type metadata accessor for AllShortcutsGroup)(0);
      if (swift_dynamicCastClass(v67, v68))
        goto LABEL_49;
    }
    v69 = v66[2];
    if (v69 >= 2)
    {
      v70 = v84;
      static WFLog.subscript.getter(WFLogCategoryGeneral);
      v71 = swift_bridgeObjectRetain_n(v66, 2);
      v72 = Logger.logObject.getter(v71);
      v73 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)sub_100026B24(12);
        v75 = sub_100026B24(32);
        v98[0] = v75;
        *(_DWORD *)v74 = 136315138;
        v76 = sub_100047E50();
        v77 = ((uint64_t (*)(uint64_t, void *))Array.description.getter)(v76, &type metadata for String);
        v79 = v78;
        sub_1000183D0();
        v97 = sub_100015868(v77, v79, v98);
        ((void (*)(uint64_t *, uint64_t *, uint8_t *, uint8_t *))UnsafeMutableRawBufferPointer.copyMemory(from:))(&v97, v98, v74 + 4, v74 + 12);
        sub_100026FC4((uint64_t)v66);
        swift_bridgeObjectRelease(v79);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Found multiple auto-shortcut apps when checking which one to protect: %s", v74, 0xCu);
        swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
        sub_100026ACC(v75);
        sub_100026ACC((uint64_t)v74);

      }
      else
      {

        sub_100026FC4((uint64_t)v66);
      }
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v70, v86);
      v69 = v66[2];
    }
    if (!v69)
    {
LABEL_49:
      sub_1000183D0();
    }
    else
    {
      swift_bridgeObjectRetain(v66[5]);
      sub_1000183D0();
    }
    return sub_100079FC8();
  }
  return result;
}

uint64_t sub_1000725C0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = sub_100042DC8();
  v1(v3);
  return sub_100079DC0(v2);
}

_QWORD *sub_1000725E4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = *(_QWORD *)(type metadata accessor for LibraryEditingOption(0) - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    sub_100003B2C(0, &qword_1000D1EC0, UIAction_ptr);
    sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
    v7 = *(_QWORD *)(v5 + 72);
    do
    {
      v8 = LibraryEditingOption.title.getter();
      v10 = v9;
      v11 = LibraryEditingOption.symbolName.getter();
      v13 = sub_10007A7B0(v11, v12);
      sub_10007853C();
      v15 = v14;
      v16 = sub_100078184();
      v18 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v10, 0, 0, v13, 0, 0, 0, 0, v15, 0, v16, v17);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v19 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
      specialized ContiguousArray._endMutation()(v20);
      v6 += v7;
      --v3;
    }
    while (v3);

  }
  else
  {

  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100072780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v15 = type metadata accessor for LibrarySectionOptions.SectionType(0);
  v3 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v14 = v1;
    v16 = _swiftEmptyArrayStorage;
    sub_10003E9F8();
    v7 = v16;
    v8 = type metadata accessor for LibrarySectionOptions(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      LibrarySectionOptions.sectionType.getter(v8);
      v16 = v7;
      v12 = v7[2];
      if (v12 >= v7[3] >> 1)
      {
        sub_10003E9F8();
        v7 = v16;
      }
      v7[2] = v12 + 1;
      v8 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, v5, v15);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

_QWORD *sub_1000728D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000CF78(0, v1, 0);
    v3 = *(_QWORD *)(type metadata accessor for AutoShortcutApp(0) - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    do
    {
      v6 = AutoShortcutApp.bundleIdentifier.getter();
      v8 = v7;
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_10000CF78(v9 > 1, v10 + 1, 1);
      _swiftEmptyArrayStorage[2] = v10 + 1;
      v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

id sub_1000729D4()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
}

BOOL sub_1000729E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v0 = type metadata accessor for IndexPath(0);
  sub_1000040A8((unint64_t *)&unk_1000D3818, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
  v2 = v1;
  dispatch thunk of Collection.startIndex.getter(v0, v1);
  dispatch thunk of Collection.endIndex.getter(v4, v0, v2);
  return v4[1] == v4[0];
}

void sub_100072A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v7;
  uint64_t v8;
  objc_super v9;

  v7 = (objc_class *)sub_100079DB4(a4, (uint64_t *)((swift_isaMask & *v4) + qword_1000DB138));
  v9.receiver = v4;
  v9.super_class = v7;
  objc_msgSendSuper2(&v9, "setContentScrollView:forEdge:", a1, a2);
  v8 = a2;
  PassthroughSubject.send(_:)(&v8);
  sub_100079C00();
}

void sub_100072AF4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v10 = a3;
  v7 = a1;
  sub_100072A64((uint64_t)a3, a4, v8, v9);

}

#error "100072B6C: call analysis failed (funcsize=10)"

uint64_t sub_100072B78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v3 = *(_QWORD *)(qword_1000DB138 + (swift_isaMask & *v1) + 16);
  v4 = sub_100012E2C((uint64_t *)&unk_1000D37F8);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = v1;
  *(_QWORD *)((char *)v1 + v3) = PassthroughSubject.init()();

  v7 = a1;
  return UIHostingController.init(rootView:)(&v7);
}

void sub_100072C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  sub_1000275E4();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  v23 = *(_QWORD *)(*(_QWORD *)((swift_isaMask & *v18) + qword_1000DB138) - 8);
  __chkstk_darwin(v21);
  v25 = (char *)&a9 - v24;
  v27 = *(_QWORD *)(v26 + 16);
  v28 = sub_100012E2C((uint64_t *)&unk_1000D37F8);
  sub_100068E6C(v28);
  v29 = v18;
  *(_QWORD *)((char *)v18 + v27) = PassthroughSubject.init()();

  sub_100079E90((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  UIHostingController.init(rootView:)(v25);
  sub_100026C54(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  sub_100026D40();
}

#error "100072D04: call analysis failed (funcsize=12)"

void sub_100072D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void (*v37)(uint64_t, uint64_t);
  id v38;

  sub_100018190();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = (uint64_t *)((swift_isaMask & *v20) + qword_1000DB138);
  v28 = *v27;
  v29 = *(_QWORD *)(*v27 - 8);
  __chkstk_darwin(v25);
  v31 = (char *)&a9 - v30;
  v33 = *(_QWORD *)(v32 + 16);
  v34 = sub_100012E2C((uint64_t *)&unk_1000D37F8);
  sub_100068E6C(v34);
  v35 = v20;
  *(_QWORD *)((char *)v20 + v33) = PassthroughSubject.init()();

  sub_100079E90((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  v36 = (void *)UIHostingController.init(coder:rootView:)(v26, v31);
  v37 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v38 = v36;
  v37(v24, v28);
  if (v36)

  sub_100018094();
}

_QWORD *sub_100072DF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  v3 = swift_isaMask & *v1;
  v4 = *(_QWORD *)(qword_1000DB138 + v3 + 16);
  v5 = sub_100012E2C((uint64_t *)&unk_1000D37F8);
  sub_100068E6C(v5);
  v6 = sub_100079FB8();
  *(_QWORD *)((char *)v1 + v4) = PassthroughSubject.init()();

  v9.receiver = v6;
  v9.super_class = (Class)sub_100079DB4(v7, (uint64_t *)(v3 + qword_1000DB138));
  objc_msgSendSuper2(&v9, "initWithCoder:", a1);
  sub_100042738();
  return v1;
}

_QWORD *sub_100072EAC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100072DF8((uint64_t)a3);
}

uint64_t sub_100072ED0()
{
  _QWORD *v0;

  return swift_release(*(_QWORD *)((char *)v0 + *(_QWORD *)(qword_1000DB138 + (swift_isaMask & *v0) + 16)));
}

id sub_100072EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v12.receiver = v4;
  v12.super_class = (Class)sub_100079DB4(a4, (uint64_t *)((swift_isaMask & *v4) + qword_1000DB138));
  return sub_100079EA8((uint64_t)v12.super_class, "dealloc", v5, v6, v7, v8, v9, v10, v12);
}

uint64_t sub_100072F48(_QWORD *a1)
{
  return swift_release(*(_QWORD *)((char *)a1 + *(_QWORD *)(qword_1000DB138 + (swift_isaMask & *a1) + 16)));
}

uint64_t sub_100072F74()
{
  return sub_100079E9C(OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
}

uint64_t sub_100072F9C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_groups));
}

uint64_t sub_100072FAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  sub_100026D70(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)v3);
  v1 = sub_100047F14();
  return sub_100079CE0(v1);
}

void sub_100072FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  _BYTE v7[24];

  sub_1000424D0(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)v7, 33);
  v3 = *(_QWORD *)(sub_100047F14() - 8);
  v4 = sub_1000184E0();
  sub_100079C5C(v4, v5, v6);
  swift_endAccess(v7);
  sub_100010914();
  sub_100079B54(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_100079C00();
}

void sub_100073060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
  v12 = *(_OWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 80);
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v14;
  v15 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 48) = v15;
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v3 + 80) = v2;
  sub_100013B84(v5, v4, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1), v13);
}

void sub_100073144(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView);
}

void sub_100073150(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  id v21;
  _BYTE v22[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_100012A90();
    v9 = v8;
    v10 = type metadata accessor for LibraryDataSource(0);
    v11 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v10, &method descriptor for LibraryDataSource.layoutMode.getter);
    v12 = v11();
    swift_release(v9);
    v13 = LibraryLayoutMode.rawValue.getter(v12 & 1);
    v15 = v14;
    v16 = LibraryLayoutMode.rawValue.getter(0);
    if (v13 == v16 && v15 == v17)
    {
      swift_bridgeObjectRelease_n(v15, 2);
    }
    else
    {
      v19 = v17;
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
        goto LABEL_10;
    }
    v21 = objc_msgSend(a3, "contentScrollViewForEdge:", v4);
    objc_msgSend(v7, "setContentScrollView:forEdge:", v21, v4);

    v7 = v21;
LABEL_10:

  }
}

void sub_10007328C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  sub_100018188();
}

void sub_1000732B4(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
}

uint64_t sub_1000732C0()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_100069488();

  return v3 & 1;
}

void sub_100073308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v2);
  sub_1000184A0();
  v3 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (Strong)
  {
    v5 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    dispatch thunk of LibraryDelegate.runningWorkflow.getter(ObjectType, v5);
    sub_100027130();
    v7 = sub_100079F74();
    sub_100019D44(v1, 1, v7);
  }
  else
  {
    v8 = type metadata accessor for RunningWorkflow(0);
    sub_100026B84(v1, v9, v10, v8);
  }
  sub_100007AEC(v1, (uint64_t *)&unk_1000D30D0);
  sub_100047E10();
  sub_1000875B8();
  sub_100019D9C();
  sub_100018388();
}

void sub_1000733E4(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton);
}

void sub_1000733F0(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *preferredElementSize;
  Swift::String v40;
  UIMenu v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  Swift::OpaquePointer v45;
  void (*v46)(_QWORD);
  unint64_t v47;
  _BYTE v48[24];
  UIImage_optional v49;

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return;
  v6 = (void *)Strong;
  v7 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database), "sortedVisibleFolders");
  v8 = objc_msgSend(v7, "descriptors");

  v9 = sub_100003B2C(0, &qword_1000D1170, WFWorkflowCollection_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v34 = v10;
    else
      v34 = v10 & 0xFFFFFFFFFFFFFF8;
    v35 = v6;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v10);
    if (v11)
      goto LABEL_4;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = v6;
    if (v11)
    {
LABEL_4:
      specialized ContiguousArray.reserveCapacity(_:)(v11);
      if (v11 < 0)
      {
        __break(1u);
        return;
      }
      v13 = v6;
      v46 = a1;
      v47 = v10 & 0xC000000000000001;
      sub_100003B2C(0, &qword_1000D1EC0, UIAction_ptr);
      v14 = 0;
      v15 = v10;
      v16 = v11;
      do
      {
        if (v47)
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v10);
        else
          v17 = *(id *)(v10 + 8 * v14 + 32);
        v18 = v17;
        sub_10003F950(v17, (SEL *)&selRef_systemIconName);
        if (v20)
        {
          v21 = v19;
          v22 = v20;
          sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
          sub_100071EA8(v21, v22);
          v24 = v23;
        }
        else
        {
          v24 = 0;
        }
        ++v14;
        v25 = objc_msgSend(v18, "name");
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        v29 = swift_allocObject(&unk_1000C3180, 24, 7);
        swift_unknownObjectWeakInit(v29 + 16, v13);
        v30 = swift_allocObject(&unk_1000C3388, 32, 7);
        *(_QWORD *)(v30 + 16) = v29;
        *(_QWORD *)(v30 + 24) = v18;
        v31 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v26, v28, 0, 0, v24, 0, 0, 0, 0, 0, 0, sub_1000798AC, v30);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v32 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v31);
        specialized ContiguousArray._endMutation()(v33);
        v10 = v15;
      }
      while (v16 != v14);
      v6 = v13;

      swift_bridgeObjectRelease(v15);
      a1 = v46;
      goto LABEL_19;
    }
  }

  swift_bridgeObjectRelease(v10);
LABEL_19:
  v36 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v37 = swift_allocObject(v36, 40, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100096F90;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v43 = _swiftEmptyArrayStorage;
    else
      v43 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v44 = sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v43, v44);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v38 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v38);
    sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_100003B2C(0, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v49.value.super.isa = 0;
  v49.is_nil = 0;
  v41.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v49, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v45).super.super.isa;
  *(UIMenu *)(v37 + 32) = v41;
  specialized Array._endMutation()(v41.super.super.isa, v42);
  a1(v37);
  swift_bridgeObjectRelease(v37);

}

uint64_t sub_100073828(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  id v12;
  _BYTE v14[24];

  v5 = type metadata accessor for LibraryWorkflowCreationBehavior(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v10 = (void *)result;
    *v8 = a3;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LibraryWorkflowCreationBehavior.inFolder(_:), v5);
    v11 = type metadata accessor for LibraryViewController(0);
    sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
    v12 = a3;
    LibraryOperations.createWorkflow(from:withBehavior:)(0x747475625F726162, 0xEA00000000006E6FLL, v8, v11);

    return (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

id sub_100073958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v6[4] = a1;
  v7 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1000739EC;
  v6[3] = &unk_1000C3328;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "elementWithProvider:", v3);
  _Block_release(v3);
  swift_release(v7);
  return v4;
}

uint64_t sub_1000739EC(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t);
  void *v4;
  uint64_t v5;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1000C3360, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  swift_retain(v2);
  v3(sub_1000798A0, v5);
  swift_release(v2);
  return swift_release(v5);
}

void sub_100073A5C(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100003B2C(0, &qword_1000D1E88, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

void sub_100073AC0(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton);
}

void sub_100073ACC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem) = a1;
  sub_10000F634(v2);
}

void sub_100073AE4(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
}

void sub_100073AF0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem);
  if (!v1)
  {
    swift_getObjectType(v0);
    v2 = sub_100073B48();
    sub_100027600(v2);
    sub_100027368();
    v1 = 0;
  }
  v3 = v1;
  sub_100018388();
}

id sub_100073B48()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;

  v0 = objc_msgSend((id)objc_opt_self(WFCustomSymbolToolbarButton), "buttonWithType:", 1);
  v1 = sub_100012A90(v0);
  v2 = type metadata accessor for LibraryDataSource(0);
  v3 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v2, &method descriptor for LibraryDataSource.layoutMode.getter);
  v4 = v3();
  swift_release(v1);
  LibraryLayoutMode.symbolName.getter(v4 & 1);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v0, "setSymbolName:pointSizeToWidthRatio:", v7, 3.3);

  v8 = v0;
  sub_10007570C();
  v10 = v9;
  objc_msgSend(v8, "setMenu:", v9);

  objc_msgSend(v8, "setShowsMenuAsPrimaryAction:", 1);
  v11 = v8;
  v12 = sub_100012A90(v11);
  v13 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v2, &method descriptor for LibraryDataSource.layoutMode.getter);
  LOBYTE(v2) = v13();
  swift_release(v12);
  v14 = LibraryLayoutMode.accessibilityLabel.getter(v2 & 1);
  sub_10007CEA0(v14, v15, v11);

  v16 = v11;
  sub_100073AE4((uint64_t)v11);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v16);
  sub_100073CDC((uint64_t)v17);

  return v17;
}

void sub_100073CDC(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem);
}

void sub_100073CE8()
{
  sub_10000C944(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem, (uint64_t (*)(uint64_t))sub_100073CFC);
}

id sub_100073CFC(void *a1)
{
  id v2;
  _BYTE *v3;
  id v4;
  void *v5;
  Class isa;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;

  sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
  sub_100071EA8(0x73697370696C6C65, 0xEF656C637269632ELL);
  type metadata accessor for LibraryViewController(0);
  v15 = a1;
  v2 = objc_allocWithZone((Class)UIBarButtonItem);
  v3 = a1;
  v4 = sub_10007CD04();
  v5 = (void *)sub_10007570C(v4);
  isa = sub_1000755AC(v5).super.super.isa;

  objc_msgSend(v4, "setMenu:", isa, v15);
  v7 = v4;
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100011544(v8);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  sub_10007CEA0(v11, v13, v7);
  v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 1;
  return v7;
}

void sub_100073E80()
{
  char *v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  NSString v5;
  char v6[24];

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = objc_msgSend(v0, "view");
    if (v1)
    {
      v2 = v1;
      v3 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
      swift_beginAccess(v3, v6, 0, 0);
      v4 = *((_QWORD *)v3 + 1);
      if (v4)
      {
        swift_bridgeObjectRetain(v4);
        v5 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v5 = 0;
      }
      objc_msgSend(v2, "setAccessibilityIdentifier:", v5);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100073F50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier);
  sub_100026D70(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier, (uint64_t)v4);
  v2 = *v1;
  sub_100047E50();
  return v2;
}

void sub_100073F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier);
  sub_1000424D0(v2 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier, (uint64_t)v7, 1);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease(v6);
  sub_100073E80();
}

void sub_100073FF4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  id v9;
  uint64_t v10;

  sub_1000275E4();
  v3 = v0;
  sub_100079E48();
  sub_100026F60();
  __chkstk_darwin(v4);
  sub_100079B2C();
  sub_10002724C();
  __chkstk_darwin(v5);
  sub_100026BF0();
  sub_100026D70((uint64_t)v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v10);
  v6 = sub_100079BD8();
  LibraryConfiguration.editingBehavior.getter(v6);
  sub_100079CA4();
  v7 = sub_100026C54(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  v8 = enum case for LibraryEditingBehavior.autoShortcut(_:);
  sub_100026C54(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v7 == v8)
  {
    sub_100047E90(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
    sub_100071EA8(0x7269632E6F666E69, 0xEB00000000656C63);
    sub_1000273E4();
    objc_allocWithZone((Class)UIBarButtonItem);
    v9 = v3;
    sub_10007CD04();
  }
  sub_100026D40();
}

void sub_100074128(uint64_t a1)
{
  sub_100079ACC(a1, OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customSyncUnavailableButtonItem);
}

void sub_100074134()
{
  sub_10000F5BC();
}

id sub_100074158(uint64_t a1)
{
  id v2;
  NSString v3;
  id v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(WFCustomSymbolToolbarButton), "buttonWithType:", 1);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSymbolName:pointSizeToWidthRatio:", v3, 1.8);

  objc_msgSend(v2, "addTarget:action:forControlEvents:", a1, "syncUnavailableItemPressed:", 64);
  v4 = v2;
  sub_100074128((uint64_t)v2);
  v5 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v4);

  return v5;
}

uint64_t sub_100074240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation) = a1;
  return swift_release(v2);
}

uint64_t sub_100074258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache) = a1;
  return swift_bridgeObjectRelease(v2);
}

void sub_100074270()
{
  sub_1000275E4();
  sub_100079FC0();
  sub_1000742C8();
  sub_100026D40();
}

void sub_1000742C8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  _BYTE *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD v52[5];
  uint64_t v53;
  objc_super v54;

  sub_100018190();
  v49 = v2;
  v50 = v3;
  v40 = v4;
  v42 = v5;
  v7 = v6;
  v38 = v8;
  v39 = v6;
  v48 = *(_QWORD *)(type metadata accessor for DispatchWorkItemFlags(0) - 8);
  sub_100018044();
  __chkstk_darwin(v9);
  sub_100018548();
  v45 = v10;
  v11 = sub_100047F00();
  v12 = type metadata accessor for DispatchQoS(v11);
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  sub_100018044();
  __chkstk_darwin(v13);
  sub_100018548();
  v44 = v14;
  v15 = sub_100047F00();
  v16 = type metadata accessor for DispatchQoS.QoSClass(v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_100042BD0();
  v18 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource] = 0;
  sub_100079F50(OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems] = 1;
  v19 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout;
  v20 = objc_allocWithZone((Class)UICollectionViewFlowLayout);
  v21 = v0;
  *(_QWORD *)&v0[v19] = objc_msgSend(v20, "init");
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___toolbarViewController] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___createButtonItem] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem] = 0;
  v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem] = 0;
  v22 = &v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customSyncUnavailableButtonItem] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___syncUnavailableButtonItem] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables] = &_swiftEmptySetSingleton;
  v23 = &v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_QWORD *)v23 + 4) = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation] = 0;
  v24 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache;
  v25 = objc_msgSend((id)objc_opt_self(APApplication), "lockedAppBundleIdentifiers");
  v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, &protocol witness table for String);

  *(_QWORD *)&v21[v24] = v26;
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database] = v38;
  *((_QWORD *)v18 + 1) = v40;
  swift_unknownObjectWeakAssign(v18, v7);
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_groups] = v42;
  v27 = (uint64_t)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  v43 = *(_QWORD *)(sub_100047F14() - 8);
  sub_100079C5C(v27, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16));
  *(_QWORD *)&v21[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_shortcutMoveService] = v50;
  v41 = v38;
  swift_retain(v50);

  v54.receiver = v21;
  v54.super_class = (Class)sub_1000273E4();
  v28 = objc_msgSendSuper2(&v54, "initWithNibName:bundle:", 0, 0);
  v29 = LibraryConfiguration.title.getter(v28);
  sub_10007CF8C(v29, v30, v28);
  sub_100047E90(v31, &qword_1000D1290, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v1, enum case for DispatchQoS.QoSClass.background(_:), v16);
  v32 = (void *)static OS_dispatch_queue.global(qos:)(v1);
  sub_100027560(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  v33 = sub_100026B2C((uint64_t)&unk_1000C32E8, 24);
  *(_QWORD *)(v33 + 16) = v28;
  v52[4] = sub_100079874;
  v53 = v33;
  v52[0] = _NSConcreteStackBlock;
  v52[1] = 1107296256;
  v52[2] = sub_1000725C0;
  v52[3] = &unk_1000C3300;
  v34 = _Block_copy(v52);
  v35 = v28;
  static DispatchQoS.unspecified.getter(v35);
  v51 = _swiftEmptyArrayStorage;
  sub_1000040A8((unint64_t *)&unk_1000D3850, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v36 = sub_100012E2C(&qword_1000D1298);
  sub_100004038((unint64_t *)&qword_1000D3860, &qword_1000D1298);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v36, v37);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v45, v34);

  _Block_release(v34);
  swift_release(v50);
  swift_unknownObjectRelease(v39);

  sub_100079B54(v49, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
  sub_100026C54(v45, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v47);
  swift_release(v53);
  sub_100018094();
}

void sub_1000747A4(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = (void *)objc_opt_self(NSNotificationCenter);
  v3 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v3, "addObserver:selector:name:object:", a1, "keyboardWillChange:", WFKeyboardWillChangeNotification, 0);

  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = objc_msgSend(v4, "workflowUserDefaults");
  objc_msgSend(v5, "addObserver:forKeyPath:options:context:", a1, WFCloudKitSyncEnabledKey, 0, 0);

  v6 = objc_msgSend(v4, "syncShortcutsUserDefaults");
  objc_msgSend(v6, "addObserver:forKeyPath:options:context:", a1, WFCloudKitLibraryFetchedKey, 0, 0);

  v7 = objc_msgSend(v2, "defaultCenter");
  objc_msgSend(v7, "addObserver:selector:name:object:", a1, "didBecomeActive:", UIApplicationDidBecomeActiveNotification, 0);

}

void sub_100074904()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "workflowUserDefaults");
  sub_100079F0C(v2);

  v4 = sub_100019EAC(v3, "syncShortcutsUserDefaults");
  sub_100079F0C(v4);

  v11.receiver = v0;
  v11.super_class = (Class)sub_1000273E4();
  sub_100079EA8((uint64_t)v11.super_class, "dealloc", v5, v6, v7, v8, v9, v10, v11);
  sub_100027380();
}

void sub_100074BC4()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource] = 0;
  sub_100079F50(OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems] = 1;
  v2 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___toolbarViewController] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___createButtonItem] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem] = 0;
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem] = 0;
  v3 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customSyncUnavailableButtonItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___syncUnavailableButtonItem] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables] = &_swiftEmptySetSingleton;
  v4 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation] = 0;
  v5 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache;
  v6 = objc_msgSend((id)objc_opt_self(APApplication), "lockedAppBundleIdentifiers");
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, &protocol witness table for String);

  *(_QWORD *)&v0[v5] = v7;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009C2C0, "Shortcuts/LibraryViewController.swift", 37, 2, 262, 0);
  __break(1u);
}

void sub_100074DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100075518(Strong);

  }
}

void sub_100074E44(void *a1, id a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  _QWORD *v17;
  id v18;
  void (*v19)(_QWORD *);
  uint64_t v20;

  v3 = objc_msgSend(a2, "preferredContentSizeCategory");
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {

    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
    {
      sub_100003E30();
      sub_100073ACC(v14);
    }
  }
  sub_100012AF4(&v19);
  v16 = v19;
  v15 = v20;
  swift_retain(v20);
  v17 = sub_100012E6C(&v19);
  v16(v17);
  swift_release(v15);
  sub_10000FC34();
  v18 = objc_msgSend((id)objc_opt_self(WFApplicationContext), "sharedContext");
  LOBYTE(v16) = WFApplicationContext.isIPadInSplitScreen.getter();

  if ((v16 & 1) != 0)
    objc_msgSend(a1, "setEditing:animated:", 0, 1);
}

void sub_100074FD0(uint64_t a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)sub_1000273E4();
  objc_msgSendSuper2(&v3, "didMoveToParentViewController:", a1);
  sub_1000040A8((unint64_t *)&unk_1000D3840, type metadata accessor for LibraryViewController);
  LibraryView.observeChanges(_:)(a1 != 0);
  sub_100027380();
}

void sub_100075048()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_1000273E4();
  sub_100079D34((uint64_t)v7.super_class, "viewWillAppear:", v1, v2, v3, v4, v5, v6, v7);
  sub_1000270C4();
}

void sub_1000750B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)sub_1000273E4();
  v7 = sub_100079D34((uint64_t)v9.super_class, "viewDidAppear:", v1, v2, v3, v4, v5, v6, v9);
  v8 = sub_100019D50((uint64_t)v7, "navigationItem");
  objc_msgSend(v8, "setHidesSearchBarWhenScrolling:", 1);

  sub_10000B398();
  sub_1000270C4();
}

void sub_100075118()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_1000273E4();
  sub_100079D34((uint64_t)v7.super_class, "viewWillDisappear:", v1, v2, v3, v4, v5, v6, v7);
  sub_10008C6F8();
  sub_1000270C4();
}

uint64_t sub_100075190()
{
  uint64_t v0;

  sub_100012A90();
  sub_100079C94();
  return sub_100079DC0(v0);
}

uint64_t sub_1000752B8()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *);

  sub_100012AF4(&v6);
  v1 = v6;
  sub_100042DC8();
  v2 = sub_100012E6C(&v6);
  v1(v2);
  result = sub_100019D9C();
  v4 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData) & 1) == 0)
  {
    sub_1000273E4();
    sub_1000040A8((unint64_t *)&unk_1000D3840, type metadata accessor for LibraryViewController);
    LibraryView.reload(animated:)(1);
    sub_100012A90();
    *(_BYTE *)(v5 + qword_1000D3FE8) = 0;
    swift_release(v5);
    sub_100012A90();
    dispatch thunk of LibraryDataSource.observeChanges.setter(1);
    result = sub_100019D9C();
    *(_BYTE *)(v0 + v4) = 1;
  }
  return result;
}

void sub_100075380(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  double v9;
  id v10;

  v3 = v2;
  v6 = objc_msgSend(v3, "contentScrollViewForEdge:", 1);
  if (v6)
  {
    v7 = v6;
    objc_allocWithZone((Class)RPTScrollViewTestParameters);
    v8 = v7;
    sub_100047E50();
    v10 = sub_100078EBC(v9, a1, a2, v8, 0, 0);
    objc_msgSend((id)objc_opt_self(RPTTestRunner), "runTestWithParameters:", v10);

    sub_100047D38(v10);
  }
  else
  {
    sub_100027380();
  }
}

uint64_t sub_100075434()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;

  v2 = objc_msgSend((id)objc_opt_self(APApplication), "lockedAppBundleIdentifiers");
  static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, &protocol witness table for String);
  sub_100027368();
  v3 = swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache));
  v4 = sub_100078FA0(v3, v0);
  sub_100047F0C();
  if ((v4 & 1) != 0)
    return sub_100079D10(v0);
  sub_100074258(v0);
  sub_100012A90();
  sub_100079C94();
  return sub_10005E5CC(v1);
}

void sub_100075518(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  Class isa;
  void *v7;

  v2 = (void *)sub_10007570C(a1);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
  v7 = v2;
  if (v3)
  {
    objc_msgSend(v3, "setMenu:", v2);
    v2 = v7;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists) == 1)
  {
    sub_100073CE8();
    v5 = v4;
    isa = sub_1000755AC(v7).super.super.isa;
    sub_100079D80((uint64_t)isa, "setMenu:");

    v2 = v7;
  }

}

UIMenu sub_1000755AC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  UIMenuElementSize preferredElementSize;
  NSString v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::OpaquePointer v24;
  UIImage_optional v25;

  v4 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  preferredElementSize = sub_100026B2C(v4, 48);
  *(_OWORD *)(preferredElementSize + 16) = xmmword_100097720;
  sub_100047E90(preferredElementSize, &qword_1000D1EC0, UIAction_ptr);
  v6 = String._bridgeToObjectiveC()();
  sub_100079DA0();
  v7 = sub_10002726C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  sub_10002757C();
  v8 = sub_100026B2C((uint64_t)&unk_1000C3298, 24);
  *(_QWORD *)(v8 + 16) = v1;
  v9 = v1;
  sub_100079D00();
  v18 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v11, v12, v13, v14, v15, v16, v17, 0, 0, 0, sub_100079864, v8);
  *(_QWORD *)(preferredElementSize + 32) = v18;
  *(_QWORD *)(preferredElementSize + 40) = a1;
  v20 = specialized Array._endMutation()(v18, v19);
  sub_100047E90(v20, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v21 = a1;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v25.value.super.isa = 0;
  v25.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v25, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v24);
}

void sub_10007570C()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void);
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  UIMenuElementSize v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  UIMenuElementSize v122;
  uint64_t v123;
  Swift::String v124;
  Swift::String_optional v125;
  UIMenuIdentifier_optional v126;
  UIMenuOptions v127;
  Class isa;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  Swift::String v140;
  Swift::String_optional v141;
  UIMenuIdentifier_optional v142;
  UIMenuOptions v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  UIMenuElementSize v147;
  Swift::OpaquePointer v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  _QWORD *v159;
  UIMenuElementSize v160;
  UIImage_optional v161;
  UIImage_optional v162;

  sub_100018190();
  v2 = v0;
  v151 = sub_100079F6C();
  v158 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v154 = v3;
  v152 = (char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v4 = String._bridgeToObjectiveC()();
  sub_100026E3C();
  v5 = sub_100079B1C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  sub_100047E90(v6, (unint64_t *)&unk_1000D3160, UIImage_ptr);
  v7 = LibraryLayoutMode.symbolName.getter(1);
  sub_100071EA8(v7, v8);
  v10 = (void *)v9;
  v11 = sub_100079E80(v9);
  v12 = sub_1000507EC();
  v13 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v12, &method descriptor for LibraryDataSource.layoutMode.getter);
  LOBYTE(v5) = v13();
  sub_100019D9C();
  v14 = LibraryLayoutMode.rawValue.getter(v5 & 1);
  v15 = sub_100079EF4();
  if (v14 == v15 && v11 == v16)
  {
    v20 = sub_100026FC4(v11);
    v21 = 1;
  }
  else
  {
    v18 = v16;
    v19 = sub_100068E08(v14, v11, v15, v16);
    swift_bridgeObjectRelease(v18);
    v20 = sub_100018420();
    v21 = v19 & 1;
  }
  v22 = sub_100047E90(v20, &qword_1000D1EC0, UIAction_ptr);
  v23 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
  sub_100079E60(v23);
  v24 = v22;
  sub_100079D00();
  v33 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v25, v26, v27, v28, v29, v30, v31, v32, 0, 0, v21, sub_100079798, v11);
  sub_100079E20(v33, v34, v35, v36, v37, v38, v39, v40);
  sub_100079EBC();
  if (v42)
    sub_100026AD8(v21 + 1, v41);
  v43 = sub_100079F18();
  specialized Array._endMutation()(v43, v44);
  v45 = String._bridgeToObjectiveC()();
  sub_100026E3C();
  v46 = sub_100079B1C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v47 = LibraryLayoutMode.symbolName.getter(0);
  sub_100071EA8(v47, v48);
  v50 = v49;
  v51 = sub_100079E80(v49);
  v52 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v12, &method descriptor for LibraryDataSource.layoutMode.getter);
  v53 = v52();
  sub_100019D9C();
  v54 = LibraryLayoutMode.rawValue.getter(v53 & 1);
  v55 = sub_100079F00();
  if (v54 == v55 && v51 == v56)
  {
    sub_100026FC4(v51);
    v60 = 1;
  }
  else
  {
    v58 = v56;
    v59 = sub_100068E08(v54, v51, v55, v56);
    swift_bridgeObjectRelease(v58);
    sub_100018420();
    v60 = v59 & 1;
  }
  v61 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
  sub_100079E60(v61);
  sub_100079D00();
  v70 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v62, v63, v64, v65, v66, v67, v68, v69, 0, 0, v60, sub_1000797A0, v51);
  sub_100079E20(v70, v71, v72, v73, v74, v75, v76, v77);
  sub_100079EBC();
  if (v42)
    sub_100026AD8(v50 + 1, v78);
  v79 = v152;
  v80 = sub_100079F18();
  v82 = specialized Array._endMutation()(v80, v81);
  v83 = sub_100079E80(v82);
  v84 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v12, &method descriptor for LibraryDataSource.layoutMode.getter);
  v85 = v84();
  sub_100019D9C();
  v86 = LibraryLayoutMode.rawValue.getter(v85 & 1);
  v87 = sub_100079F00();
  if (v86 == v87 && v83 == v88)
  {
    v92 = sub_100026FC4(v83);
    v93 = v158;
  }
  else
  {
    v90 = v88;
    v91 = sub_100068E08(v86, v83, v87, v88);
    swift_bridgeObjectRelease(v90);
    v92 = sub_100018420();
    v93 = v158;
    if ((v91 & 1) == 0)
      goto LABEL_34;
  }
  v94 = static LibraryDataSource.SortType.allCases.getter(v92);
  v95 = *(_QWORD *)(v94 + 16);
  if (v95)
  {
    v159 = _swiftEmptyArrayStorage;
    v157 = v2;
    v96 = specialized ContiguousArray.reserveCapacity(_:)(v95);
    v97 = *(unsigned __int8 *)(v93 + 80);
    v150 = v94;
    v98 = v94 + ((v97 + 32) & ~v97);
    v99 = *(_QWORD *)(v93 + 72);
    v155 = (v97 + 24) & ~v97;
    v156 = v99;
    v153 = v97 | 7;
    v154 += v155;
    v100 = (uint64_t)v79;
    do
    {
      LibraryDataSource.SortType.displayName.getter(v96);
      v158 = v101;
      sub_100047E10();
      dispatch thunk of LibraryDataSource.sortType.getter();
      sub_100019D9C();
      v102 = static LibraryDataSource.SortType.== infix(_:_:)(v100, v98);
      sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8));
      v103 = v24;
      v104 = v102 & 1;
      v105 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
      sub_100079D60(v105);
      sub_100079C5C(v100, v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 16));
      v106 = swift_allocObject(&unk_1000C3270, v154, v153);
      *(_QWORD *)(v106 + 16) = v105;
      sub_100079C5C(v106 + v155, v100, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 32));
      v146 = v104;
      v24 = v103;
      sub_100079D00();
      v115 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v107, v108, v109, v110, v111, v112, v113, v114, 0, 0, v146, sub_100079810, v106);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v116 = v159[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v116);
      v117 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v115);
      v96 = specialized ContiguousArray._endMutation()(v117);
      v98 += v156;
      --v95;
    }
    while (v95);
    v118 = (UIMenuElementSize)v159;

    v119 = swift_bridgeObjectRelease(v150);
  }
  else
  {
    v119 = sub_100030630();
    v118 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v118 >> 62)
  {
    sub_100047E90(v119, &qword_1000D1E88, UIMenuElement_ptr);
    sub_100047E50();
    v144 = sub_100079FC8();
    v122 = _bridgeCocoaArray<A>(_:)(v144, v145);
    sub_1000183D0();
  }
  else
  {
    v120 = sub_100047E50();
    v121 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v120);
    sub_100047E90(v121, &qword_1000D1E88, UIMenuElement_ptr);
    v122 = v118;
  }
  v123 = sub_1000183D0();
  sub_100047E90(v123, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v124._countAndFlagsBits = sub_100079C70();
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v124, v125, v161, v126, v127, v122, v148).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(isa, v129, v130, v131, v132, v133, v134, v135);
  v137 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v136 = *(_QWORD *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v137 >= v136 >> 1)
    sub_100026AD8(v137 + 1, v136);
  v138 = sub_100079DF0(v137);
  v92 = specialized Array._endMutation()(v138, v139);
LABEL_34:
  sub_100047E90(v92, (unint64_t *)&unk_1000D3150, UIMenu_ptr);
  v147 = v160;
  v140._countAndFlagsBits = sub_100079C70();
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v140, v141, v162, v142, v143, v147, v148);
  sub_100018094();
}

void sub_100075D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  char v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_100012A90(Strong);

    v6 = type metadata accessor for LibraryDataSource(0);
    v7 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v6, &method descriptor for LibraryDataSource.layoutMode.getter);
    v8 = v7() & 1;
    v9 = (void (*)(uint64_t))method lookup function for LibraryDataSource(v6, &method descriptor for LibraryDataSource.layoutMode.setter);
    v9(1);
    sub_100086D30(v8);
    swift_release(v5);
  }
  swift_beginAccess(v2, &v12, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v11 = (void *)v10;
    sub_100075518(v10);

  }
}

void sub_100075E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  char v8;
  void (*v9)(_QWORD);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_100012A90(Strong);

    v6 = type metadata accessor for LibraryDataSource(0);
    v7 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v6, &method descriptor for LibraryDataSource.layoutMode.getter);
    v8 = v7() & 1;
    v9 = (void (*)(_QWORD))method lookup function for LibraryDataSource(v6, &method descriptor for LibraryDataSource.layoutMode.setter);
    v9(0);
    sub_100086D30(v8);
    swift_release(v5);
  }
  swift_beginAccess(v2, &v12, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v11 = (void *)v10;
    sub_100075518(v10);

  }
}

uint64_t sub_100075F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  _BYTE v13[24];

  v5 = type metadata accessor for LibraryDataSource.SortType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v10 = (void *)result;
    v11 = sub_100012A90(result);

    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    dispatch thunk of LibraryDataSource.sortType.setter(v8);
    return swift_release(v11);
  }
  return result;
}

void sub_100075FEC(void *a1)
{
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  double Height;
  unsigned __int8 v15;
  void *v16;
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;
  CGRect v20;

  v5 = objc_msgSend(a1, "object");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v17, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  v7 = sub_10002DD54((uint64_t)v17, (uint64_t)v18);
  if (v19)
  {
    v8 = sub_100047E90(v7, &qword_1000D13A0, WFKeyboard_ptr);
    v9 = swift_dynamicCast(&v16, v18, (char *)&type metadata for Any + 8, v8, 6);
    if ((v9 & 1) != 0)
    {
      v10 = v16;
      v11 = sub_100019D50(v9, "view");
      if (v11)
      {
        objc_msgSend(v10, "keyboardFrameInView:", v11);
        sub_100079BEC();
        v13 = sub_100019EAC(v12, "isVisible");
        Height = 0.0;
        if ((_DWORD)v13)
        {
          v20.origin.x = v1;
          v20.origin.y = v2;
          v20.size.width = v3;
          v20.size.height = v4;
          Height = CGRectGetHeight(v20);
        }
        v15 = sub_100019D50((uint64_t)v13, "isEditing");
        sub_10000C4A4(v15 ^ 1, Height);

      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_100007AEC((uint64_t)v18, (uint64_t *)&unk_1000D3650);
  }
}

void sub_10007619C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000275E4();
  sub_100079F38();
  sub_100026F60();
  __chkstk_darwin(v3);
  sub_100079B2C();
  sub_10002724C();
  __chkstk_darwin(v4);
  sub_100026BF0();
  objc_msgSend(v0, "setEditing:animated:", 0, 0);
  sub_100026D70((uint64_t)v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v6);
  v5 = sub_100079BD8();
  LibraryConfiguration.workflowCreationBehavior.getter(v5);
  sub_100079CA4();
  sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  sub_100079DC8(0x6D6574695F726162);
  sub_100026C54(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_100026D40();
}

void sub_1000762BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  sub_100018190();
  type metadata accessor for AutoShortcutsSettingView(0);
  sub_100018044();
  __chkstk_darwin(v2);
  sub_100018548();
  v30 = v3;
  v4 = sub_100079E48();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100047F14();
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1000272A4();
  v10 = type metadata accessor for AutoShortcutApp(0);
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  sub_100018044();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v27 - v15;
  v31 = v1;
  sub_100026D70((uint64_t)v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v32);
  v17 = sub_100079EB0(v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  LibraryConfiguration.editingBehavior.getter(v17);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for LibraryEditingBehavior.autoShortcut(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v19 = v28;
    v18 = v29;
    sub_100079C5C((uint64_t)v16, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_100079C5C((uint64_t)v14, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
    v20 = v31;
    v21 = type metadata accessor for AutoShortcutsSettingView.Model(0);
    sub_100068E6C(v21);
    v22 = sub_100079FB8();
    v23 = AutoShortcutsSettingView.Model.init(app:database:)(v14, v22);
    v24 = v30;
    AutoShortcutsSettingView.init(model:)(v23);
    v25 = objc_allocWithZone((Class)sub_100012E2C(&qword_1000D3838));
    v26 = (void *)UIHostingController.init(rootView:)(v24);
    sub_100027100(v20, "presentViewController:animated:completion:", (uint64_t)v26);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100018094();
}

void sub_100076510()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  NSString v23;
  NSString v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;

  v3 = v0;
  sub_100026A98();
  sub_100026A98();
  v4 = sub_100026AE8();
  sub_100079D98();

  v5 = sub_100079ED0();
  v7 = v6;

  v8 = sub_100012E2C(&qword_1000D11C8);
  v9 = sub_100026B2C(v8, 72);
  *(_OWORD *)(v9 + 16) = xmmword_100096E80;
  v10 = objc_msgSend((id)objc_opt_self(WFDevice), "currentDevice");
  sub_1000796A0(v10);
  v12 = v11;
  v14 = v13;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_10002676C();
  v15 = 5459817;
  if (v14)
    v15 = v12;
  v16 = 0xE300000000000000;
  if (v14)
    v16 = (unint64_t)v14;
  *(_QWORD *)(v9 + 32) = v15;
  *(_QWORD *)(v9 + 40) = v16;
  v17 = static String.localizedStringWithFormat(_:_:)(v5, v7, v9);
  v19 = v18;
  sub_100018420();
  v20 = sub_100068FF8();
  sub_100047E90(v20, &qword_1000D3828, UIAlertController_ptr);
  v21 = sub_100026A98();
  sub_100026E3C();
  v22 = sub_10002726C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  sub_10002757C();
  v30 = sub_100076768((uint64_t)v21, (uint64_t)v14, v17, v19, 1);
  sub_100047E90((uint64_t)v30, &qword_1000D3830, UIAlertAction_ptr);
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100079DA0();
  v25 = (void *)sub_100027354();
  v26 = sub_100011544(v25);

  sub_100026C64();
  v27 = sub_100027354();
  v29 = sub_10007681C(v27, v28, 0, 0, 0);
  objc_msgSend(v30, "addAction:", v29);

  sub_100027100(v3, "presentViewController:animated:completion:", (uint64_t)v30);
}

id sub_100076768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  NSString v10;
  NSString v11;
  id v12;

  v6 = v5;
  if (!a2)
  {
    v10 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
LABEL_6:
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "alertControllerWithTitle:message:preferredStyle:", v10, v11, a5);

  return v12;
}

id sub_10007681C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  NSString v11;
  void *v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;

  v6 = v5;
  if (!a2)
  {
    v11 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v15[4] = a4;
  v16 = a5;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100076908;
  v15[3] = &unk_1000C3238;
  v12 = _Block_copy(v15);
  swift_release(v16);
LABEL_6:
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(v6), "actionWithTitle:style:handler:", v11, a3, v12);
  _Block_release(v12);

  return v13;
}

void sub_100076908(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

unint64_t sub_100076A10()
{
  unint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSString v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  objc_super v117;
  unint64_t v118;

  v117.receiver = v1;
  v117.super_class = (Class)sub_1000273E4();
  v3 = objc_msgSendSuper2(&v117, "keyCommands");
  if (v3)
  {
    v4 = v3;
    v5 = sub_100047E90((uint64_t)v3, &qword_1000D1230, UIKeyCommand_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);
    sub_100027368();
  }
  else
  {
    v0 = (unint64_t)_swiftEmptyArrayStorage;
  }
  v118 = v0;
  v6 = sub_100019D50((uint64_t)v3, "presentedViewController");

  if (!v6)
  {
    sub_100043E58(v7);
    sub_100079FD4();
    if (v8)
      v9 = (id)sub_100079BAC();
    else
      v9 = *(id *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = sub_1000183D0();
    if (v9)
    {
      sub_100043E58(v10);
      sub_100079FD4();
      if (v11)
        v12 = sub_100079BAC();
      else
        v12 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      v13 = sub_1000183D0();
      if (v12 == 1)
      {
        sub_100047E90(v13, &qword_1000D1230, UIKeyCommand_ptr);
        v14 = String._bridgeToObjectiveC()();
        String._bridgeToObjectiveC()();
        v15 = sub_100026AE8();

        sub_100079ED0();
        sub_100079F94();
        v16 = sub_100079C14();
        v9 = (id)sub_100079C64(v16, v17, v18, v19, 114, 0xE100000000000000);
        sub_100079CF8((uint64_t)v9, v20, v21, v22, v23, v24, v25, v26);
        v27 = sub_100079BC4();
        if (v29)
        {
          sub_100079AD8(v27, v28);
          v27 = (uint64_t)v15;
        }
        v30 = sub_10002733C(v27);
        specialized Array._endMutation()(v30, v31);
        v32 = sub_100026A98();
        sub_100026A98();
        v33 = sub_100079B1C();
        sub_10002DE78();

        sub_100026C64();
        sub_100079DDC();
        v34 = sub_100079AF4();
        v38 = (id)sub_100079C64(v34, v35, v36, v37, 111, 0xE100000000000000);
        sub_100079CF8((uint64_t)v38, v39, v40, v41, v42, v43, v44, v45);
        v46 = sub_100079BC4();
        if (v29)
        {
          sub_100079AD8(v46, v47);
          v46 = (uint64_t)v15;
        }
        v48 = sub_100079DF0(v46);
        specialized Array._endMutation()(v48, v49);

      }
      sub_100047E90(v13, &qword_1000D1230, UIKeyCommand_ptr);
      v50 = sub_100026A98();
      sub_100026A98();
      v2 = sub_100026AE8();

      sub_100079ED0();
      sub_100079F94();
      v51 = sub_100079C14();
      v55 = (id)sub_100079C64(v51, v52, v53, v54, 100, 0xE100000000000000);
      sub_100079CF8((uint64_t)v55, v56, v57, v58, v59, v60, v61, v62);
      v63 = sub_100079BC4();
      if (v29)
      {
        sub_100079AD8(v63, v64);
        v63 = (uint64_t)v2;
      }
      v65 = sub_10002733C(v63);
      specialized Array._endMutation()(v65, v66);
      v67 = sub_100026A98();
      sub_100026A98();
      v68 = sub_100079B1C();
      sub_10002DE78();

      sub_100026C64();
      sub_100079DDC();
      static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDelete);
      v69 = sub_100079AF4();
      v74 = (id)sub_100079C64(v69, v70, v71, (uint64_t)"deleteSelectedWorkflowsFromKeyboard", v72, v73);
      sub_100079CF8((uint64_t)v74, v75, v76, v77, v78, v79, v80, v81);
      v82 = sub_100079BC4();
      if (v29)
      {
        sub_100079AD8(v82, v83);
        v82 = (uint64_t)v2;
      }
      v84 = sub_100079DF0(v82);
      specialized Array._endMutation()(v84, v85);

    }
    sub_100047E90(v10, &qword_1000D1230, UIKeyCommand_ptr);
    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
    v88 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "handleEscapeKeyboardPress", v86, v87, 0);
    sub_100079CF8((uint64_t)v88, v89, v90, v91, v92, v93, v94, v95);
    sub_100079ED8();
    if (v29)
      sub_100026AD8((uint64_t)v2 + 1, v96);
    v97 = sub_100079DF0((uint64_t)v2);
    specialized Array._endMutation()(v97, v98);
    v99 = sub_100026E3C();
    sub_100026A98();
    v100 = sub_100079B1C();
    sub_10002DE78();

    sub_100026C64();
    sub_100079DDC();
    v101 = sub_100079AF4();
    v105 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v101, v102, v103, v104, 97, 0xE100000000000000, 0x100000);
    sub_100079CF8((uint64_t)v105, v106, v107, v108, v109, v110, v111, v112);
    sub_100079ED8();
    if (v29)
      sub_100026AD8((uint64_t)v2 + 1, v113);
    v114 = sub_10002733C((uint64_t)v2);
    specialized Array._endMutation()(v114, v115);

    return v118;
  }
  return v0;
}

void sub_100076EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000275E4();
  sub_100079F38();
  sub_100026F60();
  __chkstk_darwin(v3);
  sub_100079B2C();
  sub_10002724C();
  __chkstk_darwin(v4);
  sub_100026BF0();
  sub_100026D70(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration, (uint64_t)&v6);
  v5 = sub_100079BD8();
  LibraryConfiguration.workflowCreationBehavior.getter(v5);
  sub_100079CA4();
  sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  sub_100079DC8(0x6472616F6279656BLL);
  sub_100026C54(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_100026D40();
}

void sub_100076FA8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  if (v1)
  {
    v2 = v1;
    sub_100069758();

  }
  else
  {
    sub_1000270C4();
  }
}

uint64_t sub_100076FF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_100043E58(a1);
  v2 = sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  LibraryOperations.duplicateWorkflows(_:completion:)(v1, 0, 0, v2, v3);
  return sub_100079D10((uint64_t)v1);
}

uint64_t sub_100077088(uint64_t a1)
{
  _QWORD *v1;

  v1 = sub_100043E58(a1);
  sub_100064650((uint64_t)v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1000770E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;

  sub_100043E58(a1);
  sub_100079FD4();
  if (v3)
  {
    if (sub_100079BAC())
      goto LABEL_3;
LABEL_7:
    sub_100079BBC(v1);
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_7;
LABEL_3:
  sub_100079D6C();
  if (v2)
    v4 = (id)sub_100079F7C();
  else
    v4 = *(id *)(v1 + 32);
  v5 = v4;
  sub_1000183D0();
  sub_100061954((uint64_t)v5);
  sub_100047D38(v5);
}

id sub_100077194(uint64_t a1)
{
  void *v1;
  id result;

  result = sub_100019D50(a1, "isEditing");
  if ((_DWORD)result)
    return objc_msgSend(v1, "setEditing:animated:", 0, 1);
  return result;
}

void sub_100077204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;

  sub_100043E58(a1);
  sub_100079FD4();
  if (v3)
  {
    if (sub_100079BAC())
      goto LABEL_3;
LABEL_9:
    sub_100079BBC(v1);
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_9;
LABEL_3:
  sub_100079D6C();
  if (v2)
    v4 = (id)sub_100079F7C();
  else
    v4 = *(id *)(v1 + 32);
  v9 = v4;
  sub_1000183D0();
  v5 = sub_100079E9C(OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(v5);
    dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)(v9, 0, 0, 0, 0, 0, 0, ObjectType, v7);

    swift_unknownObjectRelease(v6);
  }
  else
  {
    sub_100047D38(v9);
  }
}

void sub_100077310(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *);
  void (*v11)(_BYTE *, _QWORD);
  id v12;
  _BYTE v13[32];
  uint64_t v14[2];

  if (sub_100019D50(a1, "isEditing"))
    sub_10000FC34();
  v12 = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  objc_msgSend(v12, "selectionChanged");
  sub_100047E10();
  sub_100079FA0();
  v4 = v3;
  sub_100019D9C();
  if (v4)
  {
    sub_100047E10();
    v5 = sub_100079FF8();
    v6 = WFDatabaseObjectDescriptor.id.getter();
    v8 = v7;

    v9 = sub_1000507EC();
    v10 = (uint64_t (*)(_BYTE *))method lookup function for LibraryDataSource(v9, &method descriptor for LibraryDataSource.selectedWorkflowIds.modify);
    v11 = (void (*)(_BYTE *, _QWORD))v10(v13);
    sub_100066584(v14, v6, v8);
    swift_bridgeObjectRelease(v14[1]);
    v11(v13, 0);
    sub_100086920();
    swift_release(a2);

  }
  else
  {

  }
}

void sub_10007744C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *);
  void (*v10)(_BYTE *, _QWORD);
  _BYTE v11[32];

  if (sub_100019D50(a1, "isEditing"))
    sub_10000FC34();
  sub_100047E10();
  sub_100079FA0();
  v2 = v1;
  sub_100019D9C();
  if (v2)
  {
    v3 = sub_100047E10();
    v4 = v2;
    v5 = WFDatabaseObjectDescriptor.id.getter();
    v7 = v6;

    v8 = sub_1000507EC();
    v9 = (uint64_t (*)(_BYTE *))method lookup function for LibraryDataSource(v8, &method descriptor for LibraryDataSource.selectedWorkflowIds.modify);
    v10 = (void (*)(_BYTE *, _QWORD))v9(v11);
    sub_100079244(v5, v7);
    sub_100068FF8();
    sub_100018420();
    v10(v11, 0);
    sub_100086920();
    swift_release(v3);

  }
  sub_100079C00();
}

void sub_100077530()
{
  void (*v0)(id, uint64_t);
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  sub_1000275E4();
  sub_100079CB4();
  sub_100026F60();
  __chkstk_darwin(v3);
  sub_100079C3C();
  v4 = v1;
  v5 = sub_100079FF8();
  v0(v5, v2);

  sub_100079E10();
  sub_100026D40();
}

void sub_10007758C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  int v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_100018190();
  v7 = v6;
  sub_100012E2C((uint64_t *)&unk_1000D30D0);
  sub_100018044();
  __chkstk_darwin(v8);
  sub_100018548();
  v31 = v9;
  v10 = sub_100047F00();
  type metadata accessor for ShortcutsLibraryItem.ItemType(v10);
  sub_100079F24();
  __chkstk_darwin(v11);
  sub_1000184A0();
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v12);
  sub_100042BD0();
  v13 = type metadata accessor for ShortcutsLibraryItem(0);
  sub_10002728C();
  __chkstk_darwin(v14);
  sub_100018470();
  sub_100012A90();
  sub_100012EC0(v7, v4);
  sub_100019D9C();
  if (sub_100019D44(v4, 1, v13) == 1)
  {
    sub_100007AEC(v4, &qword_1000D3670);
  }
  else
  {
    v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v3, v4, v13);
    ShortcutsLibraryItem.itemType.getter(v15);
    v16 = sub_100027354();
    v18 = v17(v16);
    if (v18 == enum case for ShortcutsLibraryItem.ItemType.workflow(_:))
    {
      sub_100079B54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
      sub_100079DE8();
      v19 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
      if (Strong)
      {
        v21 = sub_100079FAC(Strong);
        v22 = v31;
        dispatch thunk of LibraryDelegate.runningWorkflow.getter(v21, v19);
        sub_100027130();
        sub_100079B74();
        v23 = sub_100079F74();
        sub_100019D44(v31, 1, v23);
      }
      else
      {
        sub_100079B74();
        v28 = sub_100079F74();
        v22 = v31;
        sub_100026B84(v31, v29, v30, v28);
      }
      sub_100007AEC(v22, (uint64_t *)&unk_1000D30D0);
    }
    else
    {
      v24 = v18;
      if (v18 == enum case for ShortcutsLibraryItem.ItemType.autoShortcut(_:))
      {
        sub_100079B74();
        sub_100079B54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
        sub_100079DE8();
      }
      else
      {
        v25 = enum case for ShortcutsLibraryItem.ItemType.emptyState(_:);
        sub_100079B74();
        if (v24 == v25)
        {
          sub_100079B54(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
          sub_100079DE8();
          sub_100012E2C((uint64_t *)&unk_1000D3680);
          sub_1000507B4();
          v26 = sub_100079CCC();
        }
        else
        {
          v26 = sub_100027354();
        }
        v27(v26);
      }
    }
  }
  sub_100018094();
}

uint64_t sub_1000777F8()
{
  void *v0;

  return objc_msgSend(v0, "isEditing") ^ 1;
}

void sub_1000778CC()
{
  objc_class *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  objc_class *v12;
  NSIndexPath *v13;
  void (__cdecl *v14)();
  objc_class *v15;
  objc_class *v16;
  NSIndexPath v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;

  sub_1000275E4();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for Logger(0);
  sub_10002724C();
  __chkstk_darwin(v8);
  sub_100018488();
  -[objc_class deselectAllCells](v0, "deselectAllCells");
  sub_100012A90();
  v10 = v9;
  sub_100086EE4(v4);
  v12 = v11;
  swift_release(v10);
  if (v12)
  {
    v13 = (NSIndexPath *)sub_100026B2C((uint64_t)&unk_1000C3220, 32);
    v13[2].super.isa = v2;
    v13[3].super.isa = v12;
    v14 = (void (__cdecl *)())sub_100079790;
    goto LABEL_11;
  }
  sub_100012A90();
  sub_1000870D4(v4);
  v16 = v15;
  sub_100019D9C();
  if (v16)
  {
    v17.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v6, "cellForItemAtIndexPath:", v17.super.isa);
    sub_100079D98();
    if (v7)
    {
      objc_msgSend(objc_allocWithZone((Class)WFWorkflowRunViewSource), "initWithView:", v7);
      sub_100071E84();
    }
    else
    {
      v17.super.isa = 0;
    }
    v13 = (NSIndexPath *)sub_100026B2C((uint64_t)&unk_1000C31F8, 40);
    v13[2].super.isa = v2;
    v13[3].super.isa = v16;
    v13[4].super.isa = v17.super.isa;
    v14 = sub_100079768;
LABEL_11:
    if ((sub_100019EAC((uint64_t)v2, "hasActiveDrag") & 1) == 0)
    {
      v23 = sub_100079F88();

      if (!v23)
      {
LABEL_15:
        v14();
        sub_100010914();
        goto LABEL_16;
      }
      v24 = sub_100079F88();
      if (v24)
      {
        v25 = v24;
        v26 = objc_opt_self(UISearchController);
        swift_dynamicCastObjCClass(v25, v26);
        sub_100042738();
        goto LABEL_15;
      }
    }
LABEL_16:
    v27 = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
    objc_msgSend(v27, "selectionChanged");
    swift_release(v13);

    return;
  }
  v19 = static WFLog.subscript.getter(WFLogCategoryGeneral);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)sub_100026B24(2);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "No workflow or auto shortcut associated with this cell.", v22, 2u);
    sub_100026ACC((uint64_t)v22);
  }

  sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_100026D40();
}

uint64_t sub_100077B58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    dispatch thunk of LibraryDelegate.run(_:)(a2, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_100077BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE v19[24];

  v6 = type metadata accessor for LibraryConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType(Strong);
    v15 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
    swift_beginAccess(v15, v19, 0, 0);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
    v17 = (void *)LibraryConfiguration.runSource.getter(v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)(a2, v17, 0, 0, a3, 0, 0, ObjectType, v13);
    swift_unknownObjectRelease(v12);

  }
}

void sub_100077DB8()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  sub_100018190();
  v7 = v6;
  v8 = type metadata accessor for ShortcutsLibraryItem.ItemType(0);
  sub_10004282C();
  __chkstk_darwin(v9);
  sub_1000272A4();
  sub_100012E2C(&qword_1000D3670);
  sub_100018044();
  __chkstk_darwin(v10);
  sub_100018470();
  type metadata accessor for ShortcutsLibraryItem(0);
  sub_100079F24();
  __chkstk_darwin(v11);
  sub_100018488();
  if (sub_1000729E4())
    goto LABEL_13;
  sub_100012A90();
  sub_100012EC0(v7, v3);
  sub_100019D9C();
  if (sub_100019D44(v3, 1, v1) == 1)
  {
    sub_100007AEC(v3, &qword_1000D3670);
LABEL_13:
    sub_100018094();
    return;
  }
  v12 = sub_100079C5C(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  ShortcutsLibraryItem.itemType.getter(v12);
  v13 = sub_100026C54((uint64_t)v0, v4[11]);
  if (v13 == enum case for ShortcutsLibraryItem.ItemType.workflow(_:))
  {
    sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_100026C54((uint64_t)v0, v4[1]);
    goto LABEL_13;
  }
  if (v13 == enum case for ShortcutsLibraryItem.ItemType.autoShortcut(_:))
  {
    sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v4[1]((uint64_t)v0, v8);
    goto LABEL_13;
  }
  if (v13 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
  {
    sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_100026C54((uint64_t)v0, v4[12]);
    type metadata accessor for AutoShortcutAppSection(0);
LABEL_12:
    v14 = sub_100079CCC();
    v16(v14, v15);
    goto LABEL_13;
  }
  if (v13 == enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
  {
    sub_100027434(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_100026C54((uint64_t)v0, v4[12]);

    sub_100012E2C((uint64_t *)&unk_1000D3680);
    sub_1000507B4();
    goto LABEL_12;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v8, v8);
  __break(1u);
}

uint64_t sub_100077FBC()
{
  uint64_t (*v0)(id, uint64_t);
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;

  sub_1000275E4();
  sub_100079CB4();
  sub_100026F60();
  __chkstk_darwin(v3);
  sub_100079C3C();
  v4 = v1;
  v5 = sub_100079FF8();
  v6 = v0(v5, v2);

  sub_100079E10();
  return v6 & 1;
}

id sub_100078030(void *a1)
{
  void *v1;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id result;

  sub_100077DA8();
  if ((v4 & 1) == 0)
    return objc_msgSend(a1, "setEditing:", 0, v3);
  v5 = objc_msgSend(a1, "isEditing");
  sub_100047E10();
  sub_1000875B8();
  v7 = v6;
  result = (id)sub_100019D9C();
  if (v7 >= 1)
    return objc_msgSend(v1, "setEditing:animated:", v5, 1);
  return result;
}

void (*sub_100078184())(uint64_t a1)
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_100079E40();
  sub_100079E30();
  __chkstk_darwin(v2);
  sub_100079B84(v3, v13);
  v4 = sub_100079DF8();
  if (v4 == enum case for LibraryEditingOption.selection(_:))
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v5 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
    sub_100079D54(v5);
    return sub_100079734;
  }
  else if (v4 == enum case for LibraryEditingOption.folderDetails(_:))
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    v7 = *v0;
    v8 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
    sub_100079D54(v8);
    v9 = sub_100026B2C((uint64_t)&unk_1000C31D0, 32);
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v7;
    return sub_10007972C;
  }
  else if (v4 == enum case for LibraryEditingOption.folderDeletion(_:))
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    v10 = *v0;
    v11 = sub_100026B2C((uint64_t)&unk_1000C3180, 24);
    sub_100079D54(v11);
    v12 = sub_100026B2C((uint64_t)&unk_1000C31A8, 32);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v10;
    return sub_100079720;
  }
  else
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    return (void (*)(uint64_t))static NavigationDestinationEntity.defaultQuery.setter;
  }
}

void sub_1000782E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "startEditing");

  }
}

void sub_10007833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    v9 = *(_QWORD *)(v7 + 8);

    if (v8)
    {
      ObjectType = swift_getObjectType(v8);
      dispatch thunk of LibraryDelegate.presentFolderEditor(_:)(a3, ObjectType, v9);
      swift_unknownObjectRelease(v8);
    }
  }
}

void sub_1000783D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _BYTE v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate);
    v9 = *(_QWORD *)(v7 + 8);

    if (v8)
    {
      ObjectType = swift_getObjectType(v8);
      v11 = sub_100012E2C((uint64_t *)&unk_1000D3690);
      v12 = swift_allocObject(v11, 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100096F90;
      *(_QWORD *)(v12 + 32) = a3;
      v15 = v12;
      specialized Array._endMutation()(v12, v13);
      v14 = a3;
      dispatch thunk of LibraryDelegate.deleteCollections(_:alertCustomizationBlock:completion:)(v15, sub_1000784D4, 0, 0, 0, ObjectType, v9);
      swift_bridgeObjectRelease(v15);
      swift_unknownObjectRelease(v8);
    }
  }
}

void sub_1000784D4(void *a1)
{
  id v2;

  objc_msgSend(a1, "setPreferredStyle:", 1);
  v2 = objc_msgSend(objc_allocWithZone((Class)WFAlertPresentationSource), "init");
  objc_msgSend(a1, "setPresentationSource:", v2);

}

void sub_10007853C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_100079E40();
  sub_100079E30();
  __chkstk_darwin(v2);
  sub_100079B84(v3, v5);
  v4 = sub_100079DF8();
  if (v4 == enum case for LibraryEditingOption.selection(_:))
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    swift_bridgeObjectRelease(*v0);
    sub_100073308();
  }
  else if (v4 == enum case for LibraryEditingOption.folderDeletion(_:))
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    sub_100079DE8();
  }
  else
  {
    sub_100079B48(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_100026B34();
}

void sub_1000785E8(void *a1)
{
  void *v2;
  void *v3;
  Class isa;
  id v5;
  uint64_t v6;

  sub_10000C98C();
  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "cellForItemAtIndexPath:", isa);
  sub_100027368();

  if (a1)
  {
    v6 = type metadata accessor for LibraryCell();
    if (swift_dynamicCastClass(a1, v6))
      sub_10008AAA0();
    else

  }
  sub_100018388();
}

void sub_1000786AC(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  sub_100012E2C(&qword_1000D10D0);
  sub_100018044();
  __chkstk_darwin(v4);
  sub_1000184A0();
  v5 = type metadata accessor for TaskPriority(0);
  sub_100026B84(v2, v6, v7, v5);
  type metadata accessor for MainActor(0);
  v8 = v1;
  v9 = a1;
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)sub_100026B2C((uint64_t)&unk_1000C3158, 48);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  v11[5] = v9;
  v12 = sub_10005F19C(v2, (uint64_t)&unk_1000D3810, (uint64_t)v11);
  swift_release(v12);
  sub_100026B34();
}

uint64_t sub_100078768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6);
  v5[6] = v7;
  v5[7] = v8;
  return swift_task_switch(sub_1000787D8, v7, v8);
}

uint64_t sub_1000787D8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = (void *)v0[4];
  v2 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v3 = (__n128 *)sub_100026B2C(v2, 40);
  sub_100079D40(v3, v4, (__n128)xmmword_100096F90);
  v0[8] = v10;
  v5 = async function pointer to LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)[1];
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v0[9] = v7;
  v8 = sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  *v7 = v0;
  v7[1] = sub_1000788A4;
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v10, 0, 0, v8);
}

uint64_t sub_1000788A4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_BYTE *)(*v1 + 80) = a1;
  swift_task_dealloc(v3);
  sub_100018420();
  return swift_task_switch(sub_100078900, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100078900()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 80);
  v2 = *(_BYTE **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100078980(void *a1)
{
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;

  v2 = sub_100012E2C((uint64_t *)&unk_1000D3690);
  v3 = (__n128 *)sub_100026B2C(v2, 40);
  sub_100079D40(v3, v4, (__n128)xmmword_100096F90);
  v5 = sub_1000273E4();
  sub_1000040A8(&qword_1000D4460, type metadata accessor for LibraryViewController);
  v6 = a1;
  LibraryOperations.duplicateWorkflows(_:completion:)(v8, 0, 0, v5);
  return swift_bridgeObjectRelease();
}

void sub_100078A6C()
{
  _swift_stdlib_reportUnimplementedInitializer("Shortcuts.LibraryViewController", 31, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void (*sub_100078AC4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier, a1, 33, 0);
  return sub_100078B0C;
}

void sub_100078B0C(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_100073E80();
}

double sub_100078B4C(void *a1)
{
  void *v1;
  char v2;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  v1 = a1;
  if (a1)
  {
    sub_1000159B8();
    if ((v2 & 1) != 0)
    {
      sub_100026B34();
      return result;
    }
    sub_10003F950(v1, (SEL *)&selRef_text);
    v1 = v5;
    v4 = v6;
  }
  else
  {
    v4 = 0;
  }
  sub_1000507EC();
  v7 = (void *)static LibraryDataSource.searchPredicate(for:)(v1, v4);
  sub_100030630();
  v8 = sub_100047E10();
  v9 = dispatch thunk of LibraryDataSource.searchPredicate.getter();
  swift_release(v8);
  if (v9)
  {
    if (!v7)
    {

      goto LABEL_13;
    }
    sub_100047E90(v10, &qword_1000D37F0, NSPredicate_ptr);
    v11 = v7;
    v12 = (id)v9;
    v9 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v9 & 1) == 0)
      goto LABEL_13;
    goto LABEL_11;
  }
  if (!v7)
  {
LABEL_11:
    v9 = sub_100047E10();
    sub_1000877F0(1);
    sub_100019D9C();
  }
LABEL_13:
  sub_100047E10();
  v13 = sub_100079FB8();
  dispatch thunk of LibraryDataSource.searchPredicate.setter(v7);
  sub_100019D9C();
  sub_100047E10();
  sub_100079C94();

  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_100078C8C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;
  id v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;

  sub_100012A90();
  v1 = v0;
  v2 = sub_1000507EC();
  v3 = (uint64_t (*)(void))method lookup function for LibraryDataSource(v2, &method descriptor for LibraryDataSource.layoutMode.getter);
  v4 = v3();
  sub_100019D9C();
  v5 = LibraryLayoutMode.rawValue.getter(v4 & 1);
  v6 = sub_100079EF4();
  if (v5 == v6 && v1 == (void *)v7)
  {
    sub_100026FC4((uint64_t)v1);
LABEL_8:
    sub_100079B5C();
    objc_msgSend(v11, "contentSize");
    v13 = v12;

    sub_100079B5C();
    objc_msgSend(v14, "bounds");
    v16 = v15;

    sub_100079B5C();
    objc_msgSend(v17, "adjustedContentInset");
    v19 = v18;
    v21 = v20;

    v23 = v13 - (v16 - v21 - v19);
    if (v23 <= 0.0)
    {
      result = (uint64_t)sub_100019EAC(v22, "navigationController");
      if (!result)
        return result;
    }
    else
    {
      if (v23 >= 64.0)
        v24 = v13 - v16 + v21;
      else
        v24 = v13 - v16 + v21 + 4.0;
      sub_100079B5C();
      objc_msgSend(v25, "contentOffset");
      v27 = v26;

      if (vabdd_f64(v27, v24) >= 0.1)
      {
        sub_10000C98C();
        v30 = v31;
        objc_msgSend(v31, "setContentOffset:animated:", 1, 0.0, v24);
LABEL_19:

        return 1;
      }
      result = (uint64_t)sub_100019EAC(v28, "navigationController");
      if (!result)
        return result;
    }
    v29 = (void *)result;
    v30 = objc_msgSend((id)result, "popViewControllerAnimated:", 1);

    if (!v30)
      return 0;
    goto LABEL_19;
  }
  v9 = sub_100068E08(v5, (uint64_t)v1, v6, v7);
  sub_100018420();
  sub_100047F0C();
  result = 0;
  if ((v9 & 1) != 0)
    goto LABEL_8;
  return result;
}

id sub_100078EBC(double a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  NSString v12;
  void *v13;
  id v14;
  _QWORD v16[5];
  uint64_t v17;

  v7 = v6;
  if (!a3)
  {
    v12 = 0;
    if (a5)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    goto LABEL_6;
  }
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  if (!a5)
    goto LABEL_5;
LABEL_3:
  v16[4] = a5;
  v17 = a6;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100007DA8;
  v16[3] = &unk_1000C32B0;
  v13 = _Block_copy(v16);
  *(_QWORD *)&a1 = swift_release(v17).n128_u64[0];
LABEL_6:
  v14 = objc_msgSend(v7, "initWithTestName:scrollView:completionHandler:", v12, a4, v13, a1);

  _Block_release(v13);
  return v14;
}

uint64_t sub_100078FA0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t j;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  _QWORD v35[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v32 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v33 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v34 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    Hasher.init(_seed:)(v35, *(_QWORD *)(a2 + 40));
    swift_bridgeObjectRetain(v17);
    String.hash(into:)(v35, v18, v17);
    v19 = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_41;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = v23[1];
    v25 = *v23 == v18 && v24 == v17;
    if (!v25 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v24, v18, v17, 0) & 1) == 0)
    {
      v26 = ~v20;
      for (j = v21 + 1; ; j = v28 + 1)
      {
        v28 = j & v26;
        if (((*(_QWORD *)(v8 + (((j & v26) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v26)) & 1) == 0)
          break;
        v29 = (_QWORD *)(v22 + 16 * v28);
        v30 = v29[1];
        v31 = *v29 == v18 && v30 == v17;
        if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v29, v30, v18, v17, 0) & 1) != 0)
          goto LABEL_30;
      }
LABEL_41:
      swift_bridgeObjectRelease(v17);
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease(v17);
    result = v15;
    v3 = v34;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v33)
      return 1;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v33)
        return 1;
      v12 = *(_QWORD *)(v32 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v33)
          return 1;
        v12 = *(_QWORD *)(v32 + 8 * v13);
        if (!v12)
        {
          v13 = v3 + 4;
          if (v3 + 4 >= v33)
            return 1;
          v12 = *(_QWORD *)(v32 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v34 = v13;
  }
  v14 = v3 + 5;
  if (v3 + 5 >= v33)
    return 1;
  v12 = *(_QWORD *)(v32 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      return 1;
    v12 = *(_QWORD *)(v32 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_100079244(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000679EC();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_1000793D0(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

unint64_t sub_1000793D0(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v24, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v24, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v2 >= v14)
          {
LABEL_15:
            v17 = *(_QWORD *)(v3 + 48);
            v18 = (_OWORD *)(v17 + 16 * v2);
            v19 = (_OWORD *)(v17 + 16 * v6);
            v20 = v2 != v6 || v18 >= v19 + 1;
            v2 = v6;
            if (v20)
            {
              *v18 = *v19;
              v2 = v6;
            }
          }
        }
        else if (v14 >= v9 || v2 >= v14)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_100079588(void *a1)
{
  sub_10003F950(a1, (SEL *)&selRef_text);
}

uint64_t sub_100079594()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000795C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1000D380C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100047768;
  return sub_100078768(a1, v4, v5, v7, v6);
}

void sub_100079640(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v7;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(a4, "setTitle:forState:", v7, a3);

}

void sub_1000796A0(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, "systemName");

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  }
  sub_100079FC8();
  sub_100018388();
}

uint64_t sub_100079700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

void sub_100079720(uint64_t a1)
{
  uint64_t v1;

  sub_1000783D4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10007972C(uint64_t a1)
{
  uint64_t v1;

  sub_10007833C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100079734(uint64_t a1)
{
  uint64_t v1;

  sub_1000782E4(a1, v1);
}

uint64_t sub_10007973C()
{
  uint64_t v0;

  sub_100026F0C();
  sub_10002710C();

  return swift_deallocObject(v0, 40, 7);
}

void sub_100079768()
{
  uint64_t *v0;

  sub_100077BC4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100079774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100026F0C();
  sub_10002710C();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100079790()
{
  uint64_t v0;

  return sub_100077B58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100079798(uint64_t a1)
{
  uint64_t v1;

  sub_100075D70(a1, v1);
}

void sub_1000797A0(uint64_t a1)
{
  uint64_t v1;

  sub_100075E48(a1, v1);
}

uint64_t sub_1000797A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_100079F6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  sub_100068E64();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = sub_100079FC8();
  return swift_deallocObject(v6, v7, v5);
}

uint64_t sub_100079810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100079F6C() - 8) + 80);
  return sub_100075F20(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10007984C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100026F0C();
  v0 = sub_100047EB8();
  return swift_deallocObject(v0, v1, v2);
}

id sub_100079864()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "startEditing");
}

void sub_100079874()
{
  uint64_t v0;

  sub_1000747A4(*(_QWORD *)(v0 + 16));
}

void sub_10007987C(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  sub_1000733F0(a1, a2, v2);
}

uint64_t sub_100079884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  _Block_release(*(const void **)(v0 + 16));
  v1 = sub_100047EB8();
  return swift_deallocObject(v1, v2, v3);
}

void sub_1000798A0(uint64_t a1)
{
  uint64_t v1;

  sub_100073A5C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000798AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100073828(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1000798BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100012E2C(a3);
  sub_100079CE0(v3);
  sub_100018188();
}

uint64_t sub_1000798E8(uint64_t a1)
{
  destroy for LibraryTable(a1);
  return a1;
}

unint64_t sub_10007991C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D38B0;
  if (!qword_1000D38B0)
  {
    v1 = sub_1000143E4(&qword_1000D38A8);
    sub_1000799A0();
    sub_100004038(&qword_1000D38C0, &qword_1000D38A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D38B0);
  }
  return result;
}

unint64_t sub_1000799A0()
{
  unint64_t result;

  result = qword_1000D38B8;
  if (!qword_1000D38B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryTable, &type metadata for LibraryTable);
    atomic_store(result, (unint64_t *)&qword_1000D38B8);
  }
  return result;
}

void sub_1000799E0(uint64_t *a1)
{
  uint64_t v1;

  sub_100073150(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1000799E8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(id *)(a1 + 72);
  swift_bridgeObjectRetain(v5);
  swift_retain(v2);
  v7 = v3;
  v8 = v4;
  return a1;
}

uint64_t sub_100079A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100068E64();
  v0 = sub_100068D64();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100079A58(uint64_t a1)
{
  uint64_t v1;

  sub_100074DF4(a1, v1);
}

uint64_t sub_100079A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100047EB8();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100079A70(void *a1, id a2)
{
  sub_100074E44(a1, a2);
}

uint64_t sub_100079A78()
{
  uint64_t v0;

  sub_100068E64();
  return swift_deallocObject(v0, 40, 7);
}

void sub_100079ACC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + a2);
  *(_QWORD *)(v2 + a2) = a1;

}

uint64_t sub_100079AD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1 + 1, 1);
}

uint64_t sub_100079AF4()
{
  uint64_t v0;

  return v0;
}

id sub_100079B1C()
{
  void *v0;

  return sub_100011544(v0);
}

uint64_t sub_100079B2C()
{
  return type metadata accessor for LibraryConfiguration(0);
}

uint64_t sub_100079B48@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_100079B54@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_100079B5C()
{
  sub_10000C98C();
}

uint64_t sub_100079B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_100079B84@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_100079BAC()
{
  uint64_t v0;

  if (v0 < 0)
    return _CocoaArrayWrapper.endIndex.getter(v0);
  else
    return _CocoaArrayWrapper.endIndex.getter(v0 & 0xFFFFFFFFFFFFFF8);
}

uint64_t sub_100079BBC(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_100079BC4()
{
  uint64_t v0;

  return *(_QWORD *)((*(_QWORD *)(v0 - 72) & 0xFFFFFFFFFFFFFF8) + 0x10);
}

uint64_t sub_100079BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

double sub_100079BEC()
{
  void *v0;
  double result;

  return result;
}

uint64_t sub_100079C14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100079C3C()
{
  uint64_t v0;

  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100079C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_100079C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(a1, a2, a3, a4, a5, a6, 0x100000);
}

uint64_t sub_100079C70()
{
  return 0;
}

void sub_100079C94()
{
  sub_10000C9A0();
}

uint64_t sub_100079CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_100079CB4()
{
  return type metadata accessor for IndexPath(0);
}

uint64_t sub_100079CCC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100079CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_100079CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100079D10(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

id sub_100079D1C(uint64_t a1, const char *a2)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;

  return objc_msgSend(v2, a2, v3, v4, v5, v6);
}

id sub_100079D34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  char v9;

  return objc_msgSendSuper2(&a9, a2, v9 & 1);
}

uint64_t sub_100079D40(__n128 *a1, uint64_t a2, __n128 a3)
{
  unint64_t v3;

  a1[1] = a3;
  a1[2].n128_u64[0] = v3;
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_100079D54(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

uint64_t sub_100079D60(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

unint64_t sub_100079D6C()
{
  uint64_t v0;

  return sub_1000660CC(0, (v0 & 0xC000000000000001) == 0, v0);
}

id sub_100079D80(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_100079D8C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 520));
}

void sub_100079D98()
{
  void *v0;

}

NSString sub_100079DA0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100079DB4@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  return type metadata accessor for LibraryViewController.TableHostingController(0, *a2, a2[1], a1);
}

uint64_t sub_100079DC0(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_100079DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return LibraryOperations.createWorkflow(from:withBehavior:)(a1, 0xE800000000000000, v2, v1);
}

void sub_100079DDC()
{
  void *v0;

}

void sub_100079DE8()
{
  id *v0;

}

uint64_t sub_100079DF0(uint64_t a1)
{
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v1);
}

uint64_t sub_100079DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

void sub_100079E08(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10000F634(*(id *)(v1 + a1));
}

uint64_t sub_100079E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100079E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100079E40()
{
  return type metadata accessor for LibraryEditingOption(0);
}

uint64_t sub_100079E48()
{
  return type metadata accessor for LibraryEditingBehavior(0);
}

void sub_100079E50()
{
  sub_10000C9A0();
}

uint64_t sub_100079E60(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

id sub_100079E70(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2, 0);
}

uint64_t sub_100079E80(uint64_t a1)
{
  return sub_100012A90(a1);
}

uint64_t sub_100079E88(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_100079E90@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_100079E9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + a1);
}

id sub_100079EA8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t sub_100079EB0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_100079ED0()
{
  uint64_t v0;

  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_100079EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + a1));
}

uint64_t sub_100079EF4()
{
  return LibraryLayoutMode.rawValue.getter(1);
}

uint64_t sub_100079F00()
{
  return LibraryLayoutMode.rawValue.getter(0);
}

id sub_100079F0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, *(SEL *)(v2 + 800), v1);
}

uint64_t sub_100079F18()
{
  uint64_t v0;
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t sub_100079F38()
{
  return type metadata accessor for LibraryWorkflowCreationBehavior(0);
}

uint64_t sub_100079F44(char a1, int64_t a2)
{
  uint64_t v2;

  return sub_10006573C(a1, a2, 1, v2);
}

double sub_100079F50@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + a1;
  result = 0.0;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_QWORD *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_100079F6C()
{
  return type metadata accessor for LibraryDataSource.SortType(0);
}

uint64_t sub_100079F74()
{
  return type metadata accessor for RunningWorkflow(0);
}

uint64_t sub_100079F7C()
{
  uint64_t v0;

  return specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0);
}

id sub_100079F88()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 3912));
}

void sub_100079F94()
{
  void *v0;

}

void sub_100079FA0()
{
  uint64_t v0;

  sub_1000870D4(v0);
}

uint64_t sub_100079FAC(uint64_t a1)
{
  return swift_getObjectType(a1);
}

id sub_100079FB8()
{
  void *v0;

  return v0;
}

id sub_100079FC0()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_100079FC8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100079FE0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

id sub_100079FEC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 520));
}

id sub_100079FF8()
{
  void *v0;

  return v0;
}

void sub_10007A000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100003B2C(0, (unint64_t *)&qword_1000D13B8, WFDatabaseObjectDescriptor_ptr);
    v5 = sub_10007CECC();
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v13 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v16 = __CocoaSet.Iterator.next()(v6);
    if (!v16)
      goto LABEL_35;
    v17 = v16;
    v26 = v16;
    v18 = sub_100003B2C(0, (unint64_t *)&qword_1000D13B8, WFDatabaseObjectDescriptor_ptr);
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v28;
    swift_unknownObjectRelease(v17);
    if (!v19)
      goto LABEL_35;
LABEL_34:
    v23 = objc_msgSend(v19, "objectType");

    if (v23 == (id)2)
      goto LABEL_35;
  }
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v19)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v20 >= v24)
      goto LABEL_35;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v8;
    if (!v21)
    {
      v8 = v13 + 2;
      if (v13 + 2 >= v24)
        goto LABEL_35;
      v21 = *(_QWORD *)(v25 + 8 * v8);
      if (!v21)
      {
        v8 = v13 + 3;
        if (v13 + 3 >= v24)
          goto LABEL_35;
        v21 = *(_QWORD *)(v25 + 8 * v8);
        if (!v21)
        {
          v8 = v13 + 4;
          if (v13 + 4 >= v24)
            goto LABEL_35;
          v21 = *(_QWORD *)(v25 + 8 * v8);
          if (!v21)
          {
            v8 = v13 + 5;
            if (v13 + 5 >= v24)
              goto LABEL_35;
            v21 = *(_QWORD *)(v25 + 8 * v8);
            if (!v21)
            {
              v22 = v13 + 6;
              while (v22 < v24)
              {
                v21 = *(_QWORD *)(v25 + 8 * v22++);
                if (v21)
                {
                  v8 = v22 - 1;
                  goto LABEL_32;
                }
              }
LABEL_35:
              sub_10002FC70(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_10007A2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100003B2C(0, (unint64_t *)&qword_1000D13B8, WFDatabaseObjectDescriptor_ptr);
    v5 = sub_10007CECC();
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v13 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v16 = __CocoaSet.Iterator.next()(v6);
    if (!v16)
      goto LABEL_35;
    v17 = v16;
    v26 = v16;
    v18 = sub_100003B2C(0, (unint64_t *)&qword_1000D13B8, WFDatabaseObjectDescriptor_ptr);
    swift_unknownObjectRetain(v17);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
    v19 = v28;
    swift_unknownObjectRelease(v17);
    if (!v19)
      goto LABEL_35;
LABEL_34:
    v23 = objc_msgSend(v19, "objectType");

    if (!v23)
      goto LABEL_35;
  }
  if (v9)
  {
    v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v15 = v14 | (v8 << 6);
LABEL_33:
    v19 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v19)
      goto LABEL_35;
    goto LABEL_34;
  }
  v20 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v20 >= v24)
      goto LABEL_35;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v8;
    if (!v21)
    {
      v8 = v13 + 2;
      if (v13 + 2 >= v24)
        goto LABEL_35;
      v21 = *(_QWORD *)(v25 + 8 * v8);
      if (!v21)
      {
        v8 = v13 + 3;
        if (v13 + 3 >= v24)
          goto LABEL_35;
        v21 = *(_QWORD *)(v25 + 8 * v8);
        if (!v21)
        {
          v8 = v13 + 4;
          if (v13 + 4 >= v24)
            goto LABEL_35;
          v21 = *(_QWORD *)(v25 + 8 * v8);
          if (!v21)
          {
            v8 = v13 + 5;
            if (v13 + 5 >= v24)
              goto LABEL_35;
            v21 = *(_QWORD *)(v25 + 8 * v8);
            if (!v21)
            {
              v22 = v13 + 6;
              while (v22 < v24)
              {
                v21 = *(_QWORD *)(v25 + 8 * v22++);
                if (v21)
                {
                  v8 = v22 - 1;
                  goto LABEL_32;
                }
              }
LABEL_35:
              sub_10002FC70(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

uint64_t sub_10007A5BC@<X0>(_QWORD *a1@<X8>)
{
  return sub_100051518(a1);
}

void sub_10007A5DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100012E2C(&qword_1000D1100);
  sub_100018034();
  __chkstk_darwin(v2);
  sub_100019D7C();
  v5 = v4 - v3;
  sub_1000064AC(a1, v4 - v3);
  sub_10005152C(v5);
}

uint64_t sub_10007A648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(id *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_100018190();
  v24 = v0;
  v25 = v1;
  v3 = v2;
  v5 = v4;
  v6 = sub_100026B08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (id *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (char *)&v22 - v11;
  v13 = dispatch thunk of SidebarSection.destinations.getter(v5, v3);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = *(unsigned __int8 *)(v7 + 80);
    v23 = v13;
    v16 = v13 + ((v15 + 32) & ~v15);
    v17 = enum case for RootNavigationDestination.folder(_:);
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v19(v12, v16, v6);
      v19((char *)v10, (uint64_t)v12, v6);
      if ((*(unsigned int (**)(id *, uint64_t))(v7 + 88))(v10, v6) == v17)
        break;
      v20 = *(void (**)(id *, uint64_t))(v7 + 8);
      v20(v10, v6);
      v20((id *)v12, v6);
      v16 += v18;
      if (!--v14)
      {
        v13 = v23;
        goto LABEL_6;
      }
    }
    (*(void (**)(id *, uint64_t))(v7 + 96))(v10, v6);

    sub_10005E530(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    swift_bridgeObjectRelease(v23);
    return 1;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease(v13);
    return 0;
  }
}

id sub_10007A7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "systemImageNamed:", v4);

  return v5;
}

id sub_10007A810()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___WFSidebarViewController_database);
}

uint64_t sub_10007A820()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___WFSidebarViewController_sections));
}

uint64_t sub_10007A830()
{
  uint64_t v0;
  _BYTE v2[24];

  sub_100026D70(v0 + OBJC_IVAR___WFSidebarViewController_rootView, (uint64_t)v2);
  return sub_10007D0F0();
}

void sub_10007A86C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR___WFSidebarViewController_rootView;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

  sub_100068F8C();
}

char *sub_10007A8B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  void *v4;
  char *v5;

  v1 = OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController;
  v2 = *(char **)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController);
  v3 = v2;
  if (v2 == (char *)1)
  {
    v3 = sub_10007A924(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_10000F634(v4);
  }
  sub_10000F620(v2);
  return v3;
}

char *sub_10007A924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for SidebarStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + OBJC_IVAR___WFSidebarViewController_style;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for SidebarStyle.column(_:), v2);
  LOBYTE(v6) = static SidebarStyle.== infix(_:_:)(v6, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = 0;
  if ((v6 & 1) != 0)
  {
    v8 = sub_100012E2C((uint64_t *)&unk_1000D3690);
    v9 = swift_allocObject(v8, 40, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100096F90;
    v10 = sub_10007AA4C();
    v12 = v11;
    v14 = v13;

    *(_QWORD *)(v9 + 32) = v12;
    v20 = v9;
    specialized Array._endMutation()(v15, v16);
    v17 = v20;
    v18 = objc_allocWithZone((Class)type metadata accessor for FloatingToolbarViewController());
    return sub_100005878(v17, 1);
  }
  return result;
}

id sub_10007AA4C()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  sub_100018190();
  v1 = v0;
  v2 = &v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v3 = *(void **)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v4 = *(void **)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons + 8];
  v5 = (void *)*((_QWORD *)v2 + 2);
  if (v3)
  {
    v6 = v3;
  }
  else
  {
    v7 = (void *)sub_10007AEC8(v1);
    v9 = v8;
    v11 = v10;
    v12 = *(void **)v2;
    v13 = (void *)*((_QWORD *)v2 + 1);
    v14 = (void *)*((_QWORD *)v2 + 2);
    *(_QWORD *)v2 = v7;
    *((_QWORD *)v2 + 1) = v8;
    *((_QWORD *)v2 + 2) = v10;
    v6 = v7;
    v9;
    v11;
    sub_10007CE28(v12, v13, v14);
  }
  sub_10007CE64(v3, v4, v5);
  return v6;
}

void sub_10007AB08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  sub_10007AB60(a1, a2, a3, a4);
}

void sub_10007AB60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v4;
  void *v5;
  objc_class *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;

  v7 = (objc_class *)sub_10007D080();
  sub_100069E68((uint64_t)&v4[OBJC_IVAR___WFSidebarViewController_rootView]);
  v4[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(_QWORD *)&v4[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  v8 = &v4[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v8[1] = 0;
  v8[2] = 0;
  *v8 = 0;
  *(_QWORD *)&v4[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;
  v9 = (uint64_t)&v4[OBJC_IVAR___WFSidebarViewController_style];
  v10 = *(_QWORD *)(sub_10007D110() - 8);
  sub_100079E90(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  *(_QWORD *)&v4[OBJC_IVAR___WFSidebarViewController_database] = v5;
  *(_QWORD *)&v4[OBJC_IVAR___WFSidebarViewController_sections] = a4;
  v4[OBJC_IVAR___WFSidebarViewController_isCompact] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___WFSidebarViewController_shortcutMoveService] = v4;
  v25.receiver = v4;
  v25.super_class = v7;
  v11 = v5;
  v12 = sub_10007D130();
  v20 = sub_10007D060(v12, v13, v14, v15, v16, v17, v18, v19, v25);
  sub_10007D00C();
  sub_10007D048();
  v21 = sub_10007D09C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  sub_10007D0D8();
  sub_10007D0BC(v22, v23, v24, (SEL *)&selRef_setTitle_);

  sub_100019D9C();
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  sub_10007D02C();
}

void sub_10007ACB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  _BYTE *v5;
  void *v6;
  objc_class *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v9 = (objc_class *)sub_10007D080();
  sub_100069E68((uint64_t)&v5[OBJC_IVAR___WFSidebarViewController_rootView]);
  v5[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(_QWORD *)&v5[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  v10 = &v5[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v10[1] = 0;
  v10[2] = 0;
  *v10 = 0;
  *(_QWORD *)&v5[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;
  v11 = (uint64_t)&v5[OBJC_IVAR___WFSidebarViewController_style];
  v12 = *(_QWORD *)(sub_10007D110() - 8);
  sub_100079E90(v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  *(_QWORD *)&v5[OBJC_IVAR___WFSidebarViewController_database] = v6;
  *(_QWORD *)&v5[OBJC_IVAR___WFSidebarViewController_sections] = a4;
  v5[OBJC_IVAR___WFSidebarViewController_isCompact] = (_BYTE)a5;
  *(_QWORD *)&v5[OBJC_IVAR___WFSidebarViewController_shortcutMoveService] = v5;
  v27.receiver = v5;
  v27.super_class = v9;
  v13 = v6;
  v14 = sub_10007D130();
  v22 = sub_10007D060(v14, v15, v16, v17, v18, v19, v20, v21, v27);
  sub_10007D00C();
  sub_10007D048();
  v23 = sub_10007D09C();

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  sub_10007D0D8();
  sub_10007D0BC(v24, v25, v26, (SEL *)&selRef_setTitle_);

  sub_100019D9C();
  sub_10004266C(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_10007D02C();
}

void sub_10007AE04()
{
  _BYTE *v0;
  _QWORD *v1;

  sub_100069E68((uint64_t)&v0[OBJC_IVAR___WFSidebarViewController_rootView]);
  v0[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(_QWORD *)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  v1 = &v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v1[1] = 0;
  v1[2] = 0;
  *v1 = 0;
  *(_QWORD *)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009C2C0, "Shortcuts/SidebarViewController.swift", 37, 2, 89, 0);
  __break(1u);
}

uint64_t sub_10007AEC8(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  swift_getObjectType(a1);
  v2 = objc_allocWithZone((Class)UIBarButtonItem);
  v3 = a1;
  sub_100045EFC();
  v5 = v4;
  sub_10004707C();
  sub_100003B2C(0, (unint64_t *)&unk_1000D3160, UIImage_ptr);
  sub_10007A7B0(0xD000000000000011, 0x800000010009EA40);
  v6 = objc_allocWithZone((Class)UIBarButtonItem);
  v7 = v3;
  v8 = sub_10007CD04();
  sub_10004707C();
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100011544(v10);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  sub_10007CF98(v13, v15, v9, (SEL *)&selRef_setAccessibilityLabel_);
  objc_allocWithZone((Class)UIBarButtonItem);
  v16 = v7;
  sub_100045EFC();
  sub_10004707C();
  return v5;
}

