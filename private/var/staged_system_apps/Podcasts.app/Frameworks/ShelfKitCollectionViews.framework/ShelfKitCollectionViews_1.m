uint64_t sub_A1214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2);
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, AssociatedTypeWitness);
}

uint64_t sub_A12C8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = __chkstk_darwin(AssociatedTypeWitness);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v21 - v13;
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15((char *)&v21 - v13, a2, AssociatedTypeWitness);
  v16 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a4, a5);
  CurrentValueSubject.value.getter();
  swift_release(v16);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a5, a4, AssociatedTypeWitness, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  LOBYTE(v16) = dispatch thunk of static Equatable.== infix(_:_:)(v14, v12, AssociatedTypeWitness, *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8));
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, AssociatedTypeWitness);
  if ((v16 & 1) == 0)
  {
    v19 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a4, a5);
    v15(v12, v14, AssociatedTypeWitness);
    CurrentValueSubject.value.setter(v12);
    swift_release(v19);
  }
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, AssociatedTypeWitness);
}

uint64_t sub_A144C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = *(_QWORD *)((swift_isaMask & *a2) + class metadata base offset for ScopeBar);
  v3 = type metadata accessor for Optional(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v17 - v6;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v5);
  v12 = (char *)&v17 - v11;
  v13 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v10);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v18, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v15, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v2);
  dispatch thunk of ScopeBar.selectScope(_:animated:)(v7, 1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v2);
}

uint64_t sub_A15C4(uint64_t a1)
{
  return dispatch thunk of FilterablePresenterFilter.title.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_A15D0(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of Hashable.hash(into:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8));
}

uint64_t sub_A15E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8)) & 1;
}

Swift::Int sub_A160C(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  dispatch thunk of Hashable.hash(into:)(v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  return Hasher._finalize()();
}

Swift::Int sub_A1660(uint64_t a1, uint64_t a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  sub_A15D0((uint64_t)v4, a2);
  return Hasher._finalize()();
}

uint64_t sub_A16A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_A15E0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_A16AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for NavigationItemFilterablePresenterHelper()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_EBA3641CCF5A79299249B1AA3CA1981639NavigationItemFilterablePresenterHelper);
}

void sub_A1700()
{
  uint64_t v0;

  sub_1ECCB0(*(_QWORD *)(*(_QWORD *)v0 + 32));
}

void sub_A1724()
{
  uint64_t v0;

  sub_1ECE78(*(void **)(*(_QWORD *)v0 + 32));
}

uint64_t sub_A1748(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t *v4;
  uint64_t (*v5)(_BYTE *, _QWORD);
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[32];

  ObjectType = swift_getObjectType();
  v5 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a2 + 144))(v43, ObjectType, a2);
  v6 = v4;
  v7 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_61;
  v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(*v4);
  while (v8)
  {
    v9 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      else
        v10 = *(id *)(v7 + 8 * v9 + 32);
      v11 = v10;
      v12 = type metadata accessor for FilterButton();
      if (swift_dynamicCastClass(v11, v12))
      {
        swift_bridgeObjectRelease(v7);

        v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
        }
        else
        {
          v7 = *v6;
          if (!((unint64_t)*v6 >> 62))
          {
            if (v16 == *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
              goto LABEL_12;
            goto LABEL_18;
          }
        }
        if (v7 < 0)
          v41 = v7;
        else
          v41 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v42 = _CocoaArrayWrapper.endIndex.getter(v41);
        swift_bridgeObjectRelease(v7);
        if (v16 == v42)
          goto LABEL_12;
LABEL_18:
        v17 = v9 + 5;
        while (2)
        {
          v7 = v17 - 4;
          v18 = *v6;
          if ((*v6 & 0xC000000000000001) != 0)
          {
            v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v18);
          }
          else
          {
            if (v7 < 0)
              goto LABEL_57;
            if ((unint64_t)v7 >= *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8)))
              goto LABEL_58;
            v19 = *(id *)(v18 + 8 * v17);
          }
          v20 = v19;
          v21 = swift_dynamicCastClass(v19, v12);

          if (v21)
            goto LABEL_44;
          if (v7 == v9)
            goto LABEL_43;
          v22 = *v6;
          if ((*v6 & 0xC000000000000001) != 0)
          {
            v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *v6);
            v22 = *v6;
            if ((*v6 & 0xC000000000000001) == 0)
              goto LABEL_29;
          }
          else
          {
            if (v9 < 0)
              goto LABEL_71;
            if ((unint64_t)v9 >= *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8)))
              goto LABEL_72;
            v23 = *(id *)(v22 + 8 * v9 + 32);
            if ((v22 & 0xC000000000000001) == 0)
            {
LABEL_29:
              if (v7 < 0)
                goto LABEL_73;
              if ((unint64_t)v7 >= *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8)))
                goto LABEL_74;
              v24 = *(id *)(v22 + 8 * v17);
LABEL_32:
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v22);
              *v6 = v22;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v22 < 0 || (v22 & 0x4000000000000000) != 0)
              {
                v22 = sub_E1D08(v22);
                *v6 = v22;
              }
              v26 = *(void **)((char *)&stru_20.cmd + 8 * v9 + (v22 & 0xFFFFFFFFFFFFFF8));
              *(_QWORD *)((char *)&stru_20.cmd + 8 * v9 + (v22 & 0xFFFFFFFFFFFFFF8)) = v24;

              specialized Array._endMutation()(v27);
              v28 = *v6;
              v29 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
              *v6 = v28;
              if (!v29 || v28 < 0 || (v28 & 0x4000000000000000) != 0)
              {
                v28 = sub_E1D08(v28);
                *v6 = v28;
              }
              if (v7 < 0)
                goto LABEL_75;
              v30 = v28 & 0xFFFFFFFFFFFFFF8;
              if ((unint64_t)v7 >= *(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8)))
                goto LABEL_76;
              v31 = *(void **)(v30 + 8 * v17);
              *(_QWORD *)(v30 + 8 * v17) = v23;

              specialized Array._endMutation()(v32);
LABEL_43:
              if (__OFADD__(v9++, 1))
                goto LABEL_60;
LABEL_44:
              v34 = v17 - 3;
              if (__OFADD__(v7, 1))
                goto LABEL_59;
              v35 = *v6;
              if ((unint64_t)*v6 >> 62)
              {
                if (v35 < 0)
                  v37 = *v6;
                else
                  v37 = v35 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(*v6);
                v36 = _CocoaArrayWrapper.endIndex.getter(v37);
                swift_bridgeObjectRelease(v35);
              }
              else
              {
                v36 = *(_QWORD *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFF8));
              }
              ++v17;
              if (v34 == v36)
                goto LABEL_12;
              continue;
            }
          }
          break;
        }
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v22);
        v22 = *v6;
        goto LABEL_32;
      }

      v13 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      ++v9;
      if (v13 == v8)
        goto LABEL_10;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    if (v7 < 0)
      v38 = v7;
    else
      v38 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v38);
  }
LABEL_10:
  swift_bridgeObjectRelease(v7);
  v12 = *v6;
  if ((unint64_t)*v6 >> 62)
    goto LABEL_77;
  v9 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
LABEL_12:
  while (1)
  {
    v12 = *v6;
    if ((unint64_t)*v6 >> 62)
      break;
    v14 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
    if (v14 >= v9)
      goto LABEL_14;
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    if (v12 < 0)
      v40 = v12;
    else
      v40 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v9 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v12);
  }
  if (v12 < 0)
    v39 = *v6;
  else
    v39 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v6);
  v14 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v12);
  if (v14 < v9)
    goto LABEL_70;
LABEL_14:
  sub_E2964(v9, v14);
  return v5(v43, 0);
}

uint64_t type metadata accessor for NavigationItemFilterablePresenterHelper.FilterWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NavigationItemFilterablePresenterHelper.FilterWrapper);
}

uint64_t sub_A1B84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_A1BB0(uint64_t *a1)
{
  uint64_t v1;

  return sub_A0BE8(a1, *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_A1BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D8FE0;
  if (!qword_3D8FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3D2ED0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3D8FE0);
  }
  return result;
}

uint64_t sub_A1C08()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_A1C2C(uint64_t a1, char *a2)
{
  uint64_t *v2;

  return sub_A12C8(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t sub_A1C38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_A1C5C(uint64_t a1)
{
  uint64_t v1;

  return sub_A144C(a1, *(_QWORD **)(v1 + 32));
}

uint64_t sub_A1C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_A1214(a1, *(_QWORD *)(v2 + 24), a2);
}

void sub_A1C84()
{
  AttributeScopes.SwiftUIAttributes.font.getter();
  __break(1u);
}

unint64_t sub_A1CA0()
{
  unint64_t result;

  result = qword_3D3D98;
  if (!qword_3D3D98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.SwiftUIAttributes.FontAttribute, &type metadata for AttributeScopes.SwiftUIAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_3D3D98);
  }
  return result;
}

void sub_A1CE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_A1CA0();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_A1D08()
{
  return 8;
}

uint64_t sub_A1D14(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_A1D1C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_A1D28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_A06C4(a1, a2, a3, &qword_3D3DA8) & 1;
}

uint64_t sub_A1D48(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_3D3DA8);
}

_QWORD *sub_A1D54(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_A1D60()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_A1D7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_99E20();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_A1DA0()
{
  return 8;
}

uint64_t sub_A1DAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_A06C4(a1, a2, a3, &qword_3D3DA0) & 1;
}

uint64_t sub_A1DCC(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_3D3DA0);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  return dispatch thunk of Hashable.hashValue.getter(v3, &protocol witness table for AnyKeyPath);
}

unint64_t sub_A1E18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2F70;
  if (!qword_3D2F70)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D2F70);
  }
  return result;
}

uint64_t sub_A1E54()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_A1E78()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_A1EAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_9FDC0(a1, a2, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_A1EBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_A1EE0(char *a1)
{
  uint64_t v1;

  return sub_9FF10(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_A1EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t WitnessTable;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  id v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1918);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for UIButton.Configuration(0);
  v62 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v54 = (char *)&v53 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a5);
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v18 = (uint64_t *)((char *)&v53 - v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ActionMenu(0);
  v57 = *(_QWORD *)(v22 - 8);
  v58 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ArtworkModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 1, 1, v25);
  v68 = a2;
  v64 = a4;
  v65 = a5;
  v66 = a3;
  v67 = a1;
  v60 = AssociatedTypeWitness;
  v26 = type metadata accessor for Array(0, AssociatedTypeWitness);
  v27 = type metadata accessor for ActionMenu.Child(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v26);
  sub_9F300((void (*)(char *, char *))sub_A2364, (uint64_t)v63, v26, v27, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v29);
  v30 = v24;
  v31 = (uint64_t)v18;
  v32 = ActionMenu.ID.init()();
  ActionMenu.init(id:title:subtitle:icon:children:)(v32);
  v33 = dispatch thunk of FilterablePresenter.selectedFilter.getter(a4, a5);
  CurrentValueSubject.value.getter(v18);
  swift_release(v33);
  if (qword_3CFBE8 != -1)
    swift_once(&qword_3CFBE8, sub_21853C);
  v34 = v56;
  v35 = __swift_project_value_buffer(v56, (uint64_t)qword_3FD5A0);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v37 = v54;
  v36(v54, v35, v34);
  v38 = v61;
  sub_A03F0(v31, a4, a5, (uint64_t)v12);
  v39 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v12, 0, 1, v39);
  UIButton.Configuration.attributedTitle.setter(v12);
  type metadata accessor for FilterButton();
  v40 = v55;
  v36(v55, (uint64_t)v37, v34);
  v41 = (void *)UIButton.init(configuration:primaryAction:)(v40, 0);
  v42 = a5;
  v43 = v60;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v42, a4, v60, &protocol requirements base descriptor for FilterablePresenter, &associated conformance descriptor for FilterablePresenter.FilterablePresenter.Filter: FilterablePresenterFilter);
  objc_msgSend(v41, "setSelected:", (dispatch thunk of FilterablePresenterFilter.isEmptyFilter.getter(v43, AssociatedConformanceWitness) & 1) == 0);
  UIButton.setMenu(_:asPartOf:)(v30, *(_QWORD *)(v38 + 16));
  v55 = v30;
  v45 = *(_QWORD *)(v38 + 40);
  ObjectType = swift_getObjectType();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v48 = swift_allocObject(v47, 40, 7);
  *(_OWORD *)(v48 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v48 + 32) = v41;
  v68 = v48;
  specialized Array._endMutation()(v48);
  v49 = v68;
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 136);
  v51 = v41;
  v50(v49, ObjectType, v45);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v34);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v31, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v55, v58);
}

uint64_t sub_A2364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_9FFA8(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_A2384()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v0 + 24));
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_A240C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness(0, v2) - 8) + 80);
  return sub_A0330(v0[4], (uint64_t)v0 + ((v3 + 40) & ~v3), v1, v2);
}

unint64_t sub_A2470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D3DB0;
  if (!qword_3D3DB0)
  {
    v1 = type metadata accessor for ClosureAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_3D3DB0);
  }
  return result;
}

uint64_t type metadata accessor for FilterablePresenterRedirectContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FilterablePresenterRedirectContainer);
}

uint64_t sub_A24C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_A24CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t sub_A2544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_A254C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_A25B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_A2628(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_A2638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_A2668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_A2698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_A26C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_A26F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_A27A8 + 4 * byte_2F2EB0[(v7 - 1)]))();
}

void sub_A27F8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_4;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &dword_0 + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_A29A8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2F3158, a1);
}

uint64_t sub_A29B8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2F3180, a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void sub_A2A14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  char v26;
  char *v27;
  char *v28;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView);
  if (*(double *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth) >= COERCE_DOUBLE(1))
  {
    if (v3)
    {
      v5 = *(char **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView);
    }
    else
    {
      v8 = type metadata accessor for BorderView();
      v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
      v10 = *(void **)((char *)v0 + v2);
      v11 = v9;
      if (v10)
      {
        objc_msgSend(v10, "removeFromSuperview");
        v10 = *(void **)((char *)v0 + v2);
      }
      *(_QWORD *)((char *)v0 + v2) = v9;
      v5 = (char *)v9;

      v12 = *(void **)((char *)v0 + v2);
      if (v12)
      {
        v13 = (void *)(*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
        v14 = v12;
        objc_msgSend(v13, "addSubview:", v14);

      }
      else
      {

      }
    }
    v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor);
    v16 = v3;
    v17 = v15;
    v18 = objc_msgSend(v5, "layer");
    v19 = objc_msgSend(v17, "CGColor");
    objc_msgSend(v18, "setBorderColor:", v19);

    v20 = *(double *)((char *)v0 + v1);
    v21 = objc_msgSend(v5, "layer");
    objc_msgSend(v21, "setBorderWidth:", v20);

    v22 = (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
    *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews10BorderView_roundedCorners] = v22;
    v23 = sub_13173C(v22);
    v24 = objc_msgSend(v5, "layer");
    objc_msgSend(v24, "setMaskedCorners:", v23);

    v25 = *(double *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius);
    if (v25 >= COERCE_DOUBLE(1))
    {
      v26 = *((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle);
      v27 = v5;
      v7 = v27;
      if ((v26 & 1) != 0)
      {
        objc_msgSend(v27, "_setContinuousCornerRadius:", 0.0);
        objc_msgSend(v7, "_setCornerRadius:", v25);
      }
      else
      {
        objc_msgSend(v27, "_setCornerRadius:", 0.0);
        objc_msgSend(v7, "_setContinuousCornerRadius:", v25);
      }
    }
    else
    {
      v7 = v5;
      objc_msgSend(v7, "_setContinuousCornerRadius:", 0.0);
      objc_msgSend(v7, "_setCornerRadius:", 0.0);
    }
    v28 = v7;
    goto LABEL_22;
  }
  if (v3)
  {
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView), "removeFromSuperview");
    v4 = *(void **)((char *)v0 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)((char *)v0 + v2) = 0;

  v6 = *(void **)((char *)v0 + v2);
  if (v6)
  {
    v28 = (char *)(*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
    v7 = v6;
    objc_msgSend(v28, "addSubview:", v7);
LABEL_22:

  }
}

BOOL sub_A2D74(char a1, double a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  _BOOL4 v11;
  _BOOL8 v12;
  BOOL v13;
  char **v14;
  char **v15;

  v3 = v2;
  v5 = a1 & 1;
  v6 = objc_msgSend(v2, "superview");
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for RoundedCornerView();
    v9 = (_QWORD *)swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      (*(void (**)(uint64_t, double))((char *)&stru_68.reserved2 + (swift_isaMask & *v9)))(v5, a2);
      v10 = objc_msgSend(v2, "superview");
      objc_msgSend(v10, "setNeedsLayout");

    }
  }
  v11 = v5 == 0;
  v12 = a2 >= COERCE_DOUBLE(1);
  if (a2 < COERCE_DOUBLE(1))
    a2 = 0.0;
  v13 = !v12 || !v11;
  if (v12 && v11)
    v14 = &selRef__setCornerRadius_;
  else
    v14 = &selRef__setContinuousCornerRadius_;
  if (v13)
    v15 = &selRef__setCornerRadius_;
  else
    v15 = &selRef__setContinuousCornerRadius_;
  objc_msgSend(v3, *v14);
  objc_msgSend(v3, *v15, a2);
  return v12;
}

void sub_A2E94(char a1, double a2)
{
  _BYTE *v2;
  const char *v5;
  const char *v6;
  double v7;

  *(double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius] = a2;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle] = a1 & 1;
  v5 = "_setCornerRadius:";
  if ((a1 & 1) != 0)
    v5 = "_setContinuousCornerRadius:";
  if (a2 >= COERCE_DOUBLE(1))
    objc_msgSend(v2, v5, 0.0);
  else
    objc_msgSend(v2, "_setContinuousCornerRadius:", 0.0);
  v6 = "_setContinuousCornerRadius:";
  if ((a1 & 1) != 0)
    v6 = "_setCornerRadius:";
  if (a2 >= COERCE_DOUBLE(1))
    v7 = a2;
  else
    v7 = 0.0;
  if (a2 >= COERCE_DOUBLE(1))
    objc_msgSend(v2, v6, v7);
  else
    objc_msgSend(v2, "_setCornerRadius:", v7);
  sub_A2A14();
}

uint64_t sub_A2F40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners);
}

void sub_A2F50(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners] = a1;
  v2 = sub_13173C(a1);
  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setMaskedCorners:", v2);

  sub_A2A14();
}

id sub_A2FB4()
{
  void *v0;

  return v0;
}

id sub_A2FBC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners] = -1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView] = 0;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "clearColor");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for RoundedCornerView();
  v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setClipsToBounds:", 1);
  return v12;
}

void sub_A310C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for RoundedCornerView();
  v1 = objc_msgSendSuper2(&v14, "layoutSubviews");
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView);
  if (v3)
  {
    v4 = (void *)(*(uint64_t (**)(id))&stru_108.segname[(swift_isaMask & *v0) + 8])(v1);
    v5 = v3;
    objc_msgSend(v4, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    objc_msgSend(v5, "setFrame:", v7, v9, v11, v13);
    if (*(_QWORD *)((char *)v0 + v2))
      objc_msgSend(v0, "bringSubviewToFront:");
  }
}

id sub_A3228()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoundedCornerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RoundedCornerView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17RoundedCornerView);
}

uint64_t storeEnumTagSinglePayload for CornerStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_A32FC + 4 * byte_2F31F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_A3330 + 4 * byte_2F31F0[v4]))();
}

uint64_t sub_A3330(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A3338(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA3340);
  return result;
}

uint64_t sub_A334C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA3354);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_A3358(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A3360(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CornerStyle()
{
  return &type metadata for CornerStyle;
}

unint64_t sub_A3380()
{
  unint64_t result;

  result = qword_3D3F18;
  if (!qword_3D3F18)
  {
    result = swift_getWitnessTable(&unk_2F3280, &type metadata for CornerStyle);
    atomic_store(result, (unint64_t *)&qword_3D3F18);
  }
  return result;
}

void sub_A33C4()
{
  _BYTE *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners] = -1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/RoundedCornerView.swift", 47, 2, 170, 0);
  __break(1u);
}

double sub_A3494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  _BYTE v22[24];

  v2 = v1;
  v4 = type metadata accessor for ToggleCellModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  __chkstk_darwin(v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FB0);
  __chkstk_darwin(v11);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item, v22, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_A47D4(a1, (uint64_t)v13);
  sub_A47D4(v14, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_D1D4((uint64_t)v13, &qword_3D3FA8);
      return result;
    }
  }
  else
  {
    sub_A47D4((uint64_t)v13, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v18 = sub_89A0(&qword_3D3FB8, (uint64_t (*)(uint64_t))&type metadata accessor for ToggleCellModel, (uint64_t)&protocol conformance descriptor for ToggleCellModel);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v18);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      sub_D1D4((uint64_t)v13, &qword_3D3FA8);
      if ((v19 & 1) != 0)
        return result;
      return sub_A36D8();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_D1D4((uint64_t)v13, &qword_3D3FB0);
  return sub_A36D8();
}

double sub_A36D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  char v61[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FC0);
  v53 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FC8);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FD0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v59 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ToggleCellModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_defaultsSubscription;
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_defaultsSubscription);
  if (v19)
  {
    swift_retain(v19);
    AnyCancellable.cancel()();
    swift_release(v19);
  }
  v20 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item, v61, 0, 0);
  sub_A47D4(v20, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_D1D4((uint64_t)v14, &qword_3D3FA8);
  }
  else
  {
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v23 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl);
    ToggleCellModel.offName.getter(v22);
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    v51 = v9;
    v27 = v26;
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v25).n128_u64[0];
    v52 = v10;
    objc_msgSend(v23, "setTitle:forSegmentAtIndex:", v27, 0, v28);

    ToggleCellModel.onName.getter();
    v30 = v29;
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setTitle:forSegmentAtIndex:", v31, 1, swift_bridgeObjectRelease(v30).n128_f64[0]);

    v32 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
    v33 = ToggleCellModel.keyPath.getter();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v33, 5);

    swift_release(v33);
    v34 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    v60 = (id)static OS_dispatch_queue.main.getter(v35);
    v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
    v37 = sub_10EDC(&qword_3D3FD8, &qword_3D3FC0, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
    v38 = sub_1E2DC();
    v39 = v54;
    v40 = v56;
    Publisher.receive<A>(on:options:)(&v60, v4, v56, v34, v37, v38);
    sub_D1D4((uint64_t)v4, &qword_3D2E70);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v40);
    v41 = sub_10EDC(&qword_3D3FE0, &qword_3D3FC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v42 = v58;
    v43 = v59;
    Publisher<>.removeDuplicates()(v58, v41, &protocol witness table for Bool);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v42);
    v44 = swift_allocObject(&unk_37E520, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, v1);
    v45 = sub_10EDC(&qword_3D3FE8, &qword_3D3FD0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v46 = v51;
    v47 = Publisher<>.sink(receiveValue:)(sub_A4888, v44, v51, v45);
    v48 = swift_release(v44);
    (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v43, v46, v48);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v49 = *(_QWORD *)(v1 + v55);
    *(_QWORD *)(v1 + v55) = v47;
    *(_QWORD *)&result = swift_release(v49).n128_u64[0];
  }
  return result;
}

char *sub_A3B9C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  Class isa;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  Class v49;
  id v51;
  id v52;
  objc_super v53;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_objectGraph] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item];
  v11 = type metadata accessor for ToggleCellModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_defaultsSubscription] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v14 = swift_allocObject(v13, 96, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v14 + 32) = 6710895;
  *(_QWORD *)(v14 + 40) = 0xE300000000000000;
  *(_QWORD *)(v14 + 88) = &type metadata for String;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = 28271;
  *(_QWORD *)(v14 + 72) = 0xE200000000000000;
  v15 = objc_allocWithZone((Class)UISegmentedControl);
  v16 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v15, "initWithItems:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  *(_QWORD *)&v4[v12] = v18;
  v53.receiver = v16;
  v53.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl;
  v21 = *(void **)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl];
  v22 = v19;
  objc_msgSend(v21, "addTarget:action:forControlEvents:", v22, "segmentedControlTapped", 0x2000);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v22, "contentView");
  objc_msgSend(v23, "addSubview:", v21);

  v24 = objc_msgSend(*(id *)&v19[v20], "leadingAnchor");
  v25 = objc_msgSend(v22, "contentView");
  v26 = objc_msgSend(v25, "leadingAnchor");

  v51 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
  v27 = objc_msgSend(*(id *)&v19[v20], "trailingAnchor");
  v28 = objc_msgSend(v22, "contentView");
  v29 = objc_msgSend(v28, "trailingAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
  v52 = (id)objc_opt_self(NSLayoutConstraint);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v32 = swift_allocObject(v31, 72, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2F1D10;
  v33 = objc_msgSend(*(id *)&v19[v20], "topAnchor");
  v34 = objc_msgSend(v22, "contentView");
  v35 = objc_msgSend(v34, "topAnchor");

  v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v32 + 32) = v36;
  v37 = objc_msgSend(*(id *)&v19[v20], "bottomAnchor");
  v38 = objc_msgSend(v22, "contentView");
  v39 = objc_msgSend(v38, "bottomAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v32 + 40) = v40;
  *(_QWORD *)(v32 + 48) = v51;
  *(_QWORD *)(v32 + 56) = v30;
  v41 = *(void **)&v19[v20];
  v42 = v51;
  v43 = v30;
  v44 = objc_msgSend(v41, "centerXAnchor");
  v45 = objc_msgSend(v22, "contentView");
  v46 = objc_msgSend(v45, "centerXAnchor");

  v47 = objc_msgSend(v44, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v32 + 64) = v47;
  specialized Array._endMutation()(v48);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v52, "activateConstraints:", v49, swift_bridgeObjectRelease(v32).n128_f64[0]);

  return v22;
}

uint64_t sub_A4100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  BOOL v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  _BYTE v14[15];
  BOOL v15;
  id v16;
  _BYTE v17[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for ToggleCellModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item, v17, 0, 0);
  sub_A47D4(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_D1D4((uint64_t)v3, &qword_3D3FA8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
  v10 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl), "selectedSegmentIndex") == (char *)&dword_0 + 1;
  v11 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "_applePodcastsFoundationSharedUserDefaults");
  v12 = ToggleCellModel.keyPath.getter();
  v16 = v11;
  v15 = v10;
  swift_setAtReferenceWritableKeyPath(&v16, v12, &v15);

  v13 = swift_release(v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
}

void sub_A42C8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl);

    objc_msgSend(v6, "setSelectedSegmentIndex:", v2);
  }
}

uint64_t sub_A43AC()
{
  return type metadata accessor for ToggleCell(0);
}

uint64_t type metadata accessor for ToggleCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D3F68;
  if (!qword_3D3F68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ToggleCell);
  return result;
}

void sub_A43F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  sub_A4478(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\b";
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_A4478(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D3F78)
  {
    v2 = type metadata accessor for ToggleCellModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D3F78);
  }
}

uint64_t sub_A44CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v13[-v7];
  v9 = type metadata accessor for ToggleCellModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item, v14, 0, 0);
  sub_A47D4(v11, (uint64_t)v5);
  swift_beginAccess(v11, v13, 33, 0);
  sub_A481C((uint64_t)v8, v11);
  swift_endAccess(v13);
  sub_A3494((uint64_t)v5);
  sub_D1D4((uint64_t)v8, &qword_3D3FA8);
  return sub_D1D4((uint64_t)v5, &qword_3D3FA8);
}

uint64_t sub_A4610()
{
  uint64_t v0;

  return static ShelfCellVerticalGridCustomizations.shouldExtendShelfEdgeToEdge.getter(v0);
}

uint64_t sub_A4618()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_objectGraph));
}

uint64_t sub_A4628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_A465C(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = sub_89A0(&qword_3D3FF0, type metadata accessor for ToggleCell, (uint64_t)&unk_2F3448);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v3);
}

uint64_t sub_A46B4()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 40.0);
}

uint64_t sub_A46C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_89A0(&qword_3D3FF0, type metadata accessor for ToggleCell, (uint64_t)&unk_2F3448);
  return static TypedShelfUIKitCell.modelType.getter(v0, v1);
}

uint64_t sub_A46F8()
{
  return sub_89A0(&qword_3D3F80, type metadata accessor for ToggleCell, (uint64_t)&unk_2F32F0);
}

uint64_t sub_A4724()
{
  return sub_89A0(&qword_3D3F88, type metadata accessor for ToggleCell, (uint64_t)&unk_2F3378);
}

uint64_t sub_A4750()
{
  return sub_89A0(&qword_3D3F90, type metadata accessor for ToggleCell, (uint64_t)&unk_2F3350);
}

uint64_t sub_A477C()
{
  return sub_89A0(&qword_3D3F98, type metadata accessor for ToggleCell, (uint64_t)&unk_2F33A8);
}

uint64_t sub_A47A8()
{
  return sub_89A0(&qword_3D3FA0, (uint64_t (*)(uint64_t))&type metadata accessor for ToggleCellModel, (uint64_t)&protocol conformance descriptor for ToggleCellModel);
}

uint64_t sub_A47D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A481C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3FA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_A4864()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A4888(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_A42C8(a1, v1);
}

void sub_A4890()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_objectGraph] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_item];
  v2 = type metadata accessor for ToggleCellModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_defaultsSubscription] = 0;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews10ToggleCell_segmentedControl;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2330);
  v5 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v5 + 16) = xmmword_2EFA20;
  *(_QWORD *)(v5 + 32) = 6710895;
  *(_QWORD *)(v5 + 40) = 0xE300000000000000;
  *(_QWORD *)(v5 + 88) = &type metadata for String;
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  *(_QWORD *)(v5 + 64) = 28271;
  *(_QWORD *)(v5 + 72) = 0xE200000000000000;
  v6 = objc_allocWithZone((Class)UISegmentedControl);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithItems:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  *(_QWORD *)&v0[v3] = v8;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ToggleCell.swift", 40, 2, 76, 0);
  __break(1u);
}

BOOL sub_A4A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  _BOOL8 v8;
  BOOL v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "systemItem");

      v8 = v7 == 0;
      ++v3;
      if (v7)
        v9 = v6 == v2;
      else
        v9 = 1;
      if (v9)
        goto LABEL_20;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v8 = 0;
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v8;
}

uint64_t static RootFlowController.shared.getter()
{
  _BYTE v1[24];

  swift_beginAccess(&off_3D3FF8, v1, 0, 0);
  return swift_retain(off_3D3FF8);
}

uint64_t static RootFlowController.shared.setter(int *a1)
{
  int *v2;
  _BYTE v4[24];

  swift_beginAccess(&off_3D3FF8, v4, 1, 0);
  v2 = off_3D3FF8;
  off_3D3FF8 = a1;
  return swift_release(v2);
}

uint64_t (*static RootFlowController.shared.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&off_3D3FF8, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t static RootFlowController.transitioningDelegateProvider.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for TransitioningDelegateProvider();
  return swift_initStaticObject(v0, &unk_3CFF78);
}

uint64_t RootFlowController.__allocating_init(rootViewController:asPartOf:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  return RootFlowController.init(rootViewController:asPartOf:)(a1, a2);
}

uint64_t RootFlowController.init(rootViewController:asPartOf:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _BYTE v17[24];
  _QWORD aBlock[3];
  void *v19;
  void (*v20)();
  uint64_t v21;

  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController;
  swift_unknownObjectWeakInit(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController, 0);
  v6 = (_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver);
  *v6 = 0u;
  v6[1] = 0u;
  v7 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_unknownObjectWeakAssign(v5, a1);
  v9 = sub_8CBF0((uint64_t)a1, a2);
  v10 = (void *)objc_opt_self(ASKRebootstrapCoordinator);
  v11 = objc_msgSend(v10, "sharedCoordinator", swift_retain(v9).n128_f64[0]);
  v12 = swift_allocObject(&unk_37E650, 24, 7);
  swift_weakInit(v12 + 16, v9);
  v20 = sub_A7CD8;
  v21 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  v19 = &block_descriptor_6;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend(v11, "registerCleanupHandler:", v13, swift_release(v21).n128_f64[0]);
  _Block_release(v13);

  v19 = (void *)sub_E710(0, &qword_3D4018, ASKStorefrontChangeHandlerToken_ptr);
  swift_release(v9);

  swift_release(a2);
  aBlock[0] = v14;
  v15 = v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver;
  swift_beginAccess(v9 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver, v17, 33, 0);
  sub_1EB00((uint64_t)aBlock, v15, &qword_3D1A70);
  swift_endAccess(v17);
  return v9;
}

void sub_A4E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "presentedViewController");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "presentingViewController");
        if (v8)
        {
          v9 = v8;
          sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
          v10 = v5;
          v11 = v9;
          v12 = static NSObject.== infix(_:_:)(v11, v10);

          if ((v12 & 1) != 0)
            objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 0, 0);
          swift_release(v3);

        }
        else
        {
          swift_release(v3);

        }
      }
      else
      {
        swift_release(v3);

      }
    }
    else
    {
      swift_release(v3);
    }
  }
}

void sub_A4F88(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Class isa;
  id v19;
  uint64_t v20;

  v19 = objc_msgSend(a1, "navigationItem");
  v2 = objc_msgSend(v19, "leftBarButtonItems");
  if (!v2
    || (v3 = v2,
        v4 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr),
        v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4),
        v3,
        LOBYTE(v3) = sub_A4A08(v5),
        swift_bridgeObjectRelease(v5),
        (v3 & 1) == 0))
  {
    v6 = objc_msgSend(v19, "rightBarButtonItems");
    if (!v6
      || (v7 = v6,
          v8 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr),
          v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8),
          v7,
          LOBYTE(v7) = sub_A4A08(v9),
          swift_bridgeObjectRelease(v9),
          (v7 & 1) == 0))
    {
      v10 = objc_msgSend(v19, "rightBarButtonItems");
      if (v10)
      {
        v11 = v10;
        v12 = sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
        v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      }
      else
      {
        v13 = (uint64_t)_swiftEmptyArrayStorage;
      }
      v20 = v13;
      v14 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v1, "dismissWrappedControllerFrom:");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
      v15 = *(_QWORD *)((char *)&dword_18 + (v20 & 0xFFFFFFFFFFFFFF8));
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized Array._endMutation()(v17);
      sub_E710(0, (unint64_t *)&unk_3D2F90, UIBarButtonItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    }
  }

}

id sub_A5248(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __n128 v15;
  char v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  Class isa;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  __int128 v45;
  void *v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  _UNKNOWN **v51;
  __int128 v52[3];

  v3 = v2;
  v6 = type metadata accessor for FlowPresentationContext(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()), "init");
  v11 = objc_msgSend(v10, "navigationBar");
  objc_msgSend(v11, "setPrefersLargeTitles:", 0);

  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FlowPresentationContext.presentCard(_:), v6);
  v12 = sub_89A0((unint64_t *)&unk_3D3840, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v49, v6, v12);
  dispatch thunk of RawRepresentable.rawValue.getter(&v47, v6, v12);
  v13 = *((_QWORD *)&v49 + 1);
  v14 = v47;
  if (v49 == v47)
  {
    v15 = swift_bridgeObjectRelease_n(*((_QWORD *)&v49 + 1), 2);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v15);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, *((_QWORD *)&v49 + 1), v47, *((_QWORD *)&v47 + 1), 0);
    swift_bridgeObjectRelease(v13);
    v17 = swift_bridgeObjectRelease(*((_QWORD *)&v14 + 1));
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v17);
    if ((v16 & 1) == 0)
    {
      v21 = *(_QWORD *)(v3 + 216);
      v22 = type metadata accessor for NavigationFlowController(0);
      v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      *(_BYTE *)(v23 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
      swift_unknownObjectUnownedInit(v23 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, v10, v24);
      v25 = v10;
      swift_retain(v21);
      v26 = sub_8CBF0((uint64_t)v25, v21);

      swift_release(v21);
      *((_QWORD *)&v50 + 1) = v22;
      v51 = &protocol witness table for BaseFlowController;
      *(_QWORD *)&v49 = v26;
      v27 = (uint64_t)v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController;
      goto LABEL_11;
    }
  }
  v45 = *(_OWORD *)(v3 + 104);
  sub_1D5D4(v3 + 176, (uint64_t)&v50);
  sub_1D5D4(v3 + 64, (uint64_t)v52);
  v49 = v45;
  v18 = type metadata accessor for FlowPresentationHints(0);
  sub_D184(a2 + *(int *)(v18 + 36), (uint64_t)&v47, &qword_3D1A70);
  if (v48)
  {
    v19 = sub_E710(0, &qword_3D4020, UIResponder_ptr);
    swift_unknownObjectRetain(v45);
    if (swift_dynamicCast(&v46, &v47, (char *)&type metadata for Any + 8, v19, 6))
      v20 = v46;
    else
      v20 = 0;
  }
  else
  {
    swift_unknownObjectRetain(v45);
    sub_D1D4((uint64_t)&v47, &qword_3D1A70);
    v20 = 0;
  }
  v28 = type metadata accessor for DismissingFlowController();
  v29 = swift_allocObject(v28, 128, 7);
  swift_unknownObjectWeakInit(v29 + 120, 0);
  swift_unknownObjectUnownedInit(v29 + 112, v10, v30);
  *(_OWORD *)(v29 + 16) = v49;
  sub_1B738(&v50, v29 + 32);
  sub_1B738(v52, v29 + 72);
  swift_unknownObjectWeakAssign(v29 + 120, v20);

  *((_QWORD *)&v50 + 1) = v28;
  v51 = &off_38C490;
  *(_QWORD *)&v49 = v29;
  v27 = (uint64_t)v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController;
LABEL_11:
  swift_beginAccess(v27, &v47, 33, 0);
  sub_1EB00((uint64_t)&v49, v27, &qword_3D31A0);
  swift_endAccess(&v47);
  sub_A4F88(a1);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2F11D0;
  *(_QWORD *)(v32 + 32) = a1;
  *(_QWORD *)&v49 = v32;
  specialized Array._endMutation()(v32);
  v33 = v49;
  sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v34 = v10;
  v35 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setViewControllers:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v37 = v34;
  objc_msgSend(v37, "setModalPresentationStyle:", objc_msgSend(v35, "modalPresentationStyle"));

  v38 = objc_msgSend(v35, "popoverPresentationController");
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(v37, "popoverPresentationController");
    if (v40)
    {
      v41 = v40;
      v42 = objc_msgSend(v39, "barButtonItem");
      objc_msgSend(v41, "setBarButtonItem:", v42);

      objc_msgSend(v39, "sourceRect");
      objc_msgSend(v41, "setSourceRect:");
      v43 = objc_msgSend(v39, "sourceView");
      objc_msgSend(v41, "setSourceView:", v43);

      objc_msgSend(v41, "setPermittedArrowDirections:", objc_msgSend(v39, "permittedArrowDirections"));
      v39 = v41;
    }

  }
  return v37;
}

uint64_t sub_A57E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *Strong;
  __n128 v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t ObjectType;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint8_t *v67;
  uint64_t *v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  NSObject *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, char *, uint64_t);
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  __n128 v111;
  NSObject *v112;
  __n128 v113;
  char v114;
  __n128 v115;
  void (*v116)(char *, uint64_t, __n128);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  __n128 v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  char v134;
  __n128 v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, _QWORD, uint64_t);
  uint64_t v151;
  id v152;
  id v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  NSObject *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  NSObject *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;

  v165 = a3;
  v166 = a4;
  v177 = a2;
  v161 = a1;
  v164 = type metadata accessor for FlowDestination(0);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = v5;
  v173 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4028);
  __chkstk_darwin(v6);
  v158 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v175 = v8;
  v176 = v9;
  __chkstk_darwin(v8);
  v172 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = v10;
  __chkstk_darwin(v11);
  v174 = (char *)&v148 - v12;
  v13 = type metadata accessor for Logger(0);
  v178 = *(_QWORD *)(v13 - 8);
  v179 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v148 - v17;
  __chkstk_darwin(v19);
  v170 = (char *)&v148 - v20;
  __chkstk_darwin(v21);
  v156 = (char *)&v148 - v22;
  v168 = type metadata accessor for FlowPresentationContext(0);
  v23 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v154 = (char *)&v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v155 = (char *)&v148 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v148 - v28;
  v30 = type metadata accessor for FlowPresentationHints(0);
  v157 = *(_QWORD *)(v30 - 8);
  v31 = *(_QWORD *)(v157 + 64);
  __chkstk_darwin(v30);
  v169 = ((char *)&v148 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  v171 = (uint64_t)&v148 - v33;
  __chkstk_darwin(v34);
  v167 = (uint64_t)&v148 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v148 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v148 - v40;
  v160 = v4;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
  if (!Strong
    || (v44 = Strong,
        v45 = objc_msgSend(Strong, "presentedViewController"),
        v44,
        !v45))
  {
    v71 = static Logger.navigation.getter(v43);
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_0, v72, v73, "Not deferring destination because there is no presented view controller.", v74, 2u);
      swift_slowDealloc(v74, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v178 + 8))(v15, v179);
    return 0;
  }
  v46 = v45;
  ObjectType = swift_getObjectType();
  v48 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for UserAcknowledgementRequiring);
  if (v48)
    v50 = (char *)v48;
  else
    v50 = 0;
  if (!v48)
    v45 = 0;
  if (!v45)
  {
    static Logger.navigation.getter(v49);
    v77 = v46;
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(12, -1);
      v81 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v80 = 138412290;
      v180 = v77;
      v77 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181);
      *v81 = v46;

      _os_log_impl(&dword_0, v78, v79, "Not deferring destination because of protocol conformance of the presented view controller %@", v80, 0xCu);
      v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
      swift_arrayDestroy(v81, 1, v82);
      swift_slowDealloc(v81, -1, -1);
      swift_slowDealloc(v80, -1, -1);
    }
    else
    {

      v78 = v77;
    }
    v84 = v178;
    v83 = v179;

    (*(void (**)(char *, uint64_t))(v84 + 8))(v18, v83);
    return 0;
  }
  v51 = swift_getObjectType();
  v153 = v46;
  v152 = v45;
  v151 = v51;
  if ((dispatch thunk of UserAcknowledgementRequiring.isAcknowledgementRequired.getter(v51, v50) & 1) == 0)
  {
LABEL_41:
    v136 = v170;
    static Logger.navigation.getter(v52);
    v137 = (uint64_t)v169;
    v138 = sub_54C0C(v177, (uint64_t)v169);
    v139 = Logger.logObject.getter(v138);
    v140 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v139, v140))
    {
      v141 = (uint8_t *)swift_slowAlloc(12, -1);
      v142 = swift_slowAlloc(32, -1);
      v180 = v142;
      *(_DWORD *)v141 = 136315138;
      v143 = FlowPresentationContext.rawValue.getter();
      v145 = v144;
      v182 = sub_37E78(v143, v144, (uint64_t *)&v180);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, &v183);
      swift_bridgeObjectRelease(v145);
      sub_56B40(v137);
      _os_log_impl(&dword_0, v139, v140, "Not deferring presentation for context: %s", v141, 0xCu);
      swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v142, -1, -1);
      swift_slowDealloc(v141, -1, -1);
      v146 = v153;

    }
    else
    {
      v147 = v153;

      sub_56B40(v137);
    }

    (*(void (**)(char *, uint64_t))(v178 + 8))(v136, v179);
    return 0;
  }
  if (qword_3CF150 != -1)
    swift_once(&qword_3CF150, sub_54C50);
  v53 = __swift_project_value_buffer(v30, (uint64_t)qword_3D2858);
  v54 = v177;
  v55 = _s23ShelfKitCollectionViews21FlowPresentationHintsV2eeoiySbAC_ACtFZ_0(v177, v53);
  sub_54C0C(v54, (uint64_t)v41);
  if ((v55 & 1) != 0)
    goto LABEL_16;
  v56 = v168;
  v150 = *(void (**)(char *, _QWORD, uint64_t))(v23 + 104);
  v150(v29, enum case for FlowPresentationContext.presentModalCard(_:), v168);
  v57 = sub_89A0((unint64_t *)&unk_3D3840, (uint64_t (*)(uint64_t))&type metadata accessor for FlowPresentationContext, (uint64_t)&protocol conformance descriptor for FlowPresentationContext);
  dispatch thunk of RawRepresentable.rawValue.getter(&v180, v56, v57);
  v149 = v57;
  dispatch thunk of RawRepresentable.rawValue.getter(&v182, v56, v57);
  v58 = v181;
  v59 = v183;
  if (v180 != v182 || v181 != v183)
  {
    v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v182, v183, 0);
    swift_bridgeObjectRelease(v58);
    v115 = swift_bridgeObjectRelease(v59);
    v116 = *(void (**)(char *, uint64_t, __n128))(v23 + 8);
    v117 = v29;
    v118 = v168;
    v116(v117, v168, v115);
    sub_56B40((uint64_t)v41);
    v54 = v177;
    sub_54C0C(v177, (uint64_t)v38);
    if ((v114 & 1) != 0)
      goto LABEL_17;
    v150(v155, enum case for FlowPresentationContext.presentModal(_:), v118);
    v119 = v149;
    dispatch thunk of RawRepresentable.rawValue.getter(&v180, v118, v149);
    dispatch thunk of RawRepresentable.rawValue.getter(&v182, v118, v119);
    v120 = v181;
    v121 = v183;
    if (v180 == v182 && v181 == v183)
    {
      v122 = swift_bridgeObjectRelease_n(v181, 2);
      v116(v155, v118, v122);
      goto LABEL_17;
    }
    v123 = v118;
    v124 = v54;
    v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v182, v183, 0);
    swift_bridgeObjectRelease(v120);
    v126 = swift_bridgeObjectRelease(v121);
    v116(v155, v123, v126);
    sub_56B40((uint64_t)v38);
    v127 = v124;
    v61 = v167;
    sub_54C0C(v127, v167);
    if ((v125 & 1) != 0)
      goto LABEL_18;
    v128 = v154;
    v150(v154, enum case for FlowPresentationContext.presentModalFormSheet(_:), v123);
    v129 = v149;
    dispatch thunk of RawRepresentable.rawValue.getter(&v180, v123, v149);
    dispatch thunk of RawRepresentable.rawValue.getter(&v182, v123, v129);
    v130 = v181;
    v131 = v183;
    v132 = v123;
    if (v180 == v182 && v181 == v183)
    {
      v133 = swift_bridgeObjectRelease_n(v181, 2);
      v116(v128, v123, v133);
      goto LABEL_18;
    }
    v134 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v182, v183, 0);
    swift_bridgeObjectRelease(v130);
    v135 = swift_bridgeObjectRelease(v131);
    v116(v128, v132, v135);
    sub_56B40(v61);
    if ((v134 & 1) != 0)
      goto LABEL_19;
    goto LABEL_41;
  }
  v60 = swift_bridgeObjectRelease_n(v181, 2);
  (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v29, v168, v60);
  v54 = v177;
LABEL_16:
  sub_56B40((uint64_t)v41);
  sub_54C0C(v54, (uint64_t)v38);
LABEL_17:
  sub_56B40((uint64_t)v38);
  v61 = v167;
  sub_54C0C(v54, v167);
LABEL_18:
  sub_56B40(v61);
LABEL_19:
  v170 = v50;
  v62 = v156;
  static Logger.navigation.getter(v52);
  v63 = v153;
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.default.getter();
  v66 = os_log_type_enabled(v64, v65);
  v169 = v63;
  if (v66)
  {
    v67 = (uint8_t *)swift_slowAlloc(12, -1);
    v68 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v67 = 138412290;
    v168 = (uint64_t)v46;
    v180 = v63;
    v69 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181);
    *v68 = v168;

    _os_log_impl(&dword_0, v64, v65, "Deferring show destination because of ACK requiring VC %@", v67, 0xCu);
    v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
    swift_arrayDestroy(v68, 1, v70);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v67, -1, -1);
  }
  else
  {

    v64 = v63;
  }
  v85 = v178;

  v86 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v62, v179);
  v87 = v174;
  UUID.init()(v86);
  v89 = v175;
  v88 = v176;
  v90 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
  v91 = (uint64_t)v158;
  v90(v158, v87, v175);
  v92 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56);
  v75 = 1;
  v92(v91, 0, 1, v89);
  v93 = v160;
  v94 = v160 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid;
  swift_beginAccess(v160 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid, &v180, 33, 0);
  sub_1EB00(v91, v94, &qword_3D4028);
  swift_endAccess(&v180);
  v179 = swift_allocObject(&unk_37E650, 24, 7);
  swift_weakInit(v179 + 16, v93);
  v90(v172, v87, v89);
  v95 = v163;
  v96 = v164;
  (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v173, v161, v164);
  sub_54C0C(v177, v171);
  v97 = v176;
  v98 = *(unsigned __int8 *)(v176 + 80);
  v99 = (v98 + 24) & ~v98;
  v100 = *(unsigned __int8 *)(v95 + 80);
  v101 = (v159 + v100 + v99) & ~v100;
  v102 = *(unsigned __int8 *)(v157 + 80);
  v103 = (v162 + v102 + v101) & ~v102;
  v104 = (v31 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
  v105 = swift_allocObject(&unk_37E720, v104 + 16, v98 | v100 | v102 | 7);
  v106 = v179;
  *(_QWORD *)(v105 + 16) = v179;
  v107 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
  v108 = v175;
  v107(v105 + v99, v172, v175);
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v105 + v101, v173, v96);
  sub_A7FA8(v171, v105 + v103);
  v109 = (_QWORD *)(v105 + v104);
  v110 = v166;
  *v109 = v165;
  v109[1] = v110;
  swift_bridgeObjectRetain(v110);
  v111 = swift_retain(v106);
  dispatch thunk of UserAcknowledgementRequiring.deferUntilAcknowledged(_:)(sub_A8368, v105, v151, v170, v111);
  v112 = v169;

  v113 = swift_release(v105);
  (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v174, v108, v113);
  swift_release(v106);
  return v75;
}

double sub_A6560(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t Strong;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  char v48[24];
  char v49[24];

  v44 = a4;
  v45 = a5;
  v43 = a3;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4280);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4028);
  __chkstk_darwin(v15);
  v42 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v38 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v38 - v24;
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v40 = a6;
    v28 = a2;
    v46 = Strong;
    v29 = Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid;
    swift_beginAccess(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid, v48, 0, 0);
    v39 = v29;
    sub_D184(v29, (uint64_t)v25, &qword_3D4028);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v22, v28, v9);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v38(v22, 0, 1, v9);
    v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_D184((uint64_t)v25, (uint64_t)v14, &qword_3D4028);
    sub_D184((uint64_t)v22, v30, &qword_3D4028);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (v31((uint64_t)v14, 1, v9) == 1)
    {
      sub_D1D4((uint64_t)v22, &qword_3D4028);
      sub_D1D4((uint64_t)v25, &qword_3D4028);
      if (v31(v30, 1, v9) == 1)
      {
        sub_D1D4((uint64_t)v14, &qword_3D4028);
LABEL_9:
        v36 = (uint64_t)v42;
        v38(v42, 1, 1, v9);
        v37 = v39;
        swift_beginAccess(v39, v47, 33, 0);
        sub_1EB00(v36, v37, &qword_3D4028);
        swift_endAccess(v47);
        sub_A6958(v43, v44, v45, v40);
        goto LABEL_10;
      }
    }
    else
    {
      sub_D184((uint64_t)v14, (uint64_t)v19, &qword_3D4028);
      if (v31(v30, 1, v9) != 1)
      {
        v32 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v41, v30, v9);
        v33 = sub_89A0(&qword_3D4288, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v34 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v32, v9, v33);
        v35 = *(void (**)(char *, uint64_t))(v10 + 8);
        v35(v32, v9);
        sub_D1D4((uint64_t)v22, &qword_3D4028);
        sub_D1D4((uint64_t)v25, &qword_3D4028);
        v35(v19, v9);
        sub_D1D4((uint64_t)v14, &qword_3D4028);
        if ((v34 & 1) != 0)
          goto LABEL_9;
LABEL_10:
        *(_QWORD *)&result = swift_release(v46).n128_u64[0];
        return result;
      }
      sub_D1D4((uint64_t)v22, &qword_3D4028);
      sub_D1D4((uint64_t)v25, &qword_3D4028);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    }
    sub_D1D4((uint64_t)v14, &qword_3D4280);
    goto LABEL_10;
  }
  return result;
}

void sub_A6958(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void *Strong;
  id v19;
  id v20;
  void *v21;
  uint64_t ObjectType;
  void *v23;
  id v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  id v34;
  id v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  Swift::Bool v46;
  id v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  double v64;
  id v65;
  id v66;
  double v67;
  objc_class *v68;
  char *v69;
  void (*v70)(char *, id, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  id v83;
  _QWORD aBlock[3];
  void *v85;
  uint64_t (*v86)();
  uint64_t v87;
  void *v88;
  objc_super v89;

  v80 = type metadata accessor for FlowPresentationHints(0);
  v75 = *(_QWORD *)(v80 - 8);
  v9 = *(_QWORD *)(v75 + 64);
  __chkstk_darwin(v80);
  v76 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for FlowPresentationContext(0);
  v10 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for FlowDestination(0);
  v82 = *(_QWORD *)(v79 - 8);
  v13 = *(_QWORD *)(v82 + 64);
  __chkstk_darwin(v79);
  v73 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v70 - v16;
  v83 = a1;
  v77 = a3;
  v74 = a4;
  if ((sub_A57E0(a1, a2, a3, a4, v15) & 1) == 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
    if (Strong)
    {
      v71 = v4;
      v72 = a2;
      v81 = Strong;
      v19 = objc_msgSend(v81, "presentedViewController");
      v20 = v81;
      if (v19)
      {
        v21 = v19;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ReusableFlowViewController))
          v23 = v21;
        else
          v23 = 0;
        if (v23)
        {
          v24 = v21;
          FlowNavigationController.reconfigureToShow(destination:)((uint64_t)v83);
          v26 = v25;

          if ((v26 & 1) != 0)
          {

            return;
          }
        }
        v27 = v82;
        v28 = v79;
        v70 = *(void (**)(char *, id, uint64_t))(v82 + 16);
        v70(v17, v83, v79);
        v29 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v17, v28);
        v30 = enum case for FlowDestination.viewController(_:);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v28);
        if (v29 != v30)
        {
          v31 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v72, v78);
          v32 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v31);
          v33 = enum case for FlowPresentationContext.presentSheetOverNowPlaying(_:);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
          if (v32 != v33)
          {
            v50 = v73;
            v70(v73, v83, v28);
            v83 = v21;
            v51 = v76;
            sub_54C0C(v72, v76);
            v52 = v82;
            v53 = *(unsigned __int8 *)(v82 + 80);
            v54 = (v53 + 24) & ~v53;
            v55 = *(unsigned __int8 *)(v75 + 80);
            v56 = (v13 + v55 + v54) & ~v55;
            v57 = (v9 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
            v58 = swift_allocObject(&unk_37E6A0, v57 + 16, v53 | v55 | 7);
            v59 = v71;
            *(_QWORD *)(v58 + 16) = v71;
            (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v58 + v54, v50, v28);
            sub_A7FA8(v51, v58 + v56);
            v60 = (_QWORD *)(v58 + v57);
            v61 = v74;
            *v60 = v77;
            v60[1] = v61;
            v86 = sub_A7FEC;
            v87 = v58;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_24360;
            v85 = &block_descriptor_6;
            v62 = _Block_copy(aBlock);
            v63 = v87;
            swift_bridgeObjectRetain(v61);
            swift_retain(v59);
            *(_QWORD *)&v64 = swift_release(v63).n128_u64[0];
            objc_msgSend(v81, "dismissViewControllerAnimated:completion:", 1, v62, v64);

            _Block_release(v62);
            return;
          }
        }
        v34 = v21;
        v35 = objc_msgSend(v34, "presentedViewController");
        v20 = v34;
        if (v35)
        {
          v36 = v34;
          do
          {
            v20 = v35;

            v35 = objc_msgSend(v20, "presentedViewController");
            v36 = v20;
          }
          while (v35);
        }

      }
      v37 = sub_5BB78((uint64_t)v83, 0, 0);
      if (!v37)
        goto LABEL_34;
      v38 = v37;
      v39 = v80;
      v40 = v72;
      v41 = *(_BYTE *)(v72 + *(int *)(v80 + 20));
      v42 = objc_opt_self(UINavigationController);
      v43 = swift_dynamicCastObjCClass(v38, v42);
      v44 = v38;
      if (!v43)
      {
        v45 = objc_msgSend(v20, "traitCollection");
        v46 = FlowDestination.requiresNavigationController(for:)((UITraitCollection)v45);

        if (v46)
        {
          v47 = sub_A5248(v44, v40);

LABEL_33:
          sub_A701C(v40);
          objc_msgSend(v20, "presentViewController:animated:completion:", v47, (v41 & 1) == 0, 0);

LABEL_34:
          return;
        }
      }
      v47 = v44;
      if ((sub_A7CF8(v44, v40) & 1) == 0)
        goto LABEL_33;
      sub_D184(v40 + *(int *)(v39 + 36), (uint64_t)aBlock, &qword_3D1A70);
      if (v85)
      {
        v48 = sub_E710(0, &qword_3D4020, UIResponder_ptr);
        if ((swift_dynamicCast(&v88, aBlock, (char *)&type metadata for Any + 8, v48, 6) & 1) != 0)
        {
          v49 = v88;
          goto LABEL_32;
        }
      }
      else
      {
        sub_D1D4((uint64_t)aBlock, &qword_3D1A70);
      }
      v65 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v49 = objc_msgSend(v65, "delegate");

      if (v49)
      {
        if ((objc_msgSend(v49, "respondsToSelector:", "window") & 1) != 0)
        {
          v66 = objc_msgSend(v49, "window");
          *(_QWORD *)&v67 = swift_unknownObjectRelease(v49).n128_u64[0];
          if (v66)
          {
            v49 = objc_msgSend(v66, "rootViewController", v67);

            goto LABEL_32;
          }
        }
        else
        {
          swift_unknownObjectRelease(v49);
        }
        v49 = 0;
      }
LABEL_32:
      v68 = (objc_class *)type metadata accessor for FlowRedirectionWrapperViewController();
      v69 = (char *)objc_allocWithZone(v68);
      *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews36FlowRedirectionWrapperViewController_child] = v44;
      *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews36FlowRedirectionWrapperViewController_customNextResponder] = v49;
      v89.receiver = v69;
      v89.super_class = v68;
      v47 = objc_msgSendSuper2(&v89, "initWithNibName:bundle:", 0, 0);
      v40 = v72;
      goto LABEL_33;
    }
  }
}

void sub_A701C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for FlowPresentationContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for FlowPresentationContext.presentModalFormSheet(_:))
  {
    objc_msgSend(v2, "setModalPresentationStyle:", 2);
  }
  else if (v9 == enum case for FlowPresentationContext.presentModalPageSheet(_:))
  {
    objc_msgSend(v2, "setModalPresentationStyle:", 1);
  }
  else if (v9 == enum case for FlowPresentationContext.presentModalCard(_:)
         || v9 == enum case for FlowPresentationContext.presentCard(_:)
         || v9 == enum case for FlowPresentationContext.presentSheet(_:))
  {
    objc_msgSend(v2, "setModalPresentationStyle:", 4);
    v12 = type metadata accessor for TransitioningDelegateProvider();
    swift_initStaticObject(v12, &unk_3CFF78);
    v13 = sub_FCB94(a1);
    objc_msgSend(v2, "setTransitioningDelegate:", v13);

  }
  else if (v9 == enum case for FlowPresentationContext.presentPopover(_:))
  {
    objc_msgSend(v2, "setModalPresentationStyle:", 7);
    v14 = objc_msgSend(v2, "popoverPresentationController");
    if (v14)
    {
      v15 = v14;
      v16 = a1 + *(int *)(type metadata accessor for FlowPresentationHints(0) + 24);
      v17 = *(unsigned __int8 *)(v16 + 40);
      if (v17 == 255)
      {
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002DLL, 0x800000000030ACB0, "ShelfKitCollectionViews/RootFlowController.swift", 48, 2, 390, 0);
        __break(1u);
      }
      else
      {
        v18 = *(id *)v16;
        v19 = *(_QWORD *)(v16 + 8);
        v20 = *(_QWORD *)(v16 + 16);
        v21 = *(_QWORD *)(v16 + 24);
        v22 = *(_QWORD *)(v16 + 32);
        v23 = *(id *)v16;
        if ((v17 & 1) != 0)
        {
          objc_msgSend(v15, "setBarButtonItem:", v18);
        }
        else
        {
          objc_msgSend(v15, "setSourceView:", v18);
          objc_msgSend(v15, "setSourceRect:", *(double *)&v19, *(double *)&v20, *(double *)&v21, *(double *)&v22);
        }

        sub_56AE0(v18, v19, v20, v21, v22, v17);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_A7338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unsigned int *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[32];
  _QWORD v46[5];
  _OWORD v47[2];
  _BYTE v48[32];

  v11 = type metadata accessor for ActionMetricsBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
    if (Strong)
    {
      v16 = (void *)Strong;
      LODWORD(v44) = a6;
      v17 = type metadata accessor for FlowActionRunner();
      v18 = swift_allocObject(v17, 32, 7);
      v19 = objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0));
      swift_bridgeObjectRetain(a2);
      v20 = v16;
      *(_QWORD *)(v18 + 16) = objc_msgSend(v19, "init");
      v21 = swift_unknownObjectWeakInit(v18 + 24, 0);
      swift_beginAccess(v21, v48, 1, 0);
      swift_unknownObjectWeakAssign(v18 + 24, v20);

      v22 = type metadata accessor for FlowNavigationController();
      v23 = swift_dynamicCastClass(v20, v22);
      if (v23)
      {
        v24 = (void *)v23;
        v43 = a7;
        v25 = v12;
        v26 = v20;
        v27 = objc_msgSend(v24, "topViewController");
        if (v27)
        {
          v28 = v27;
          v29 = type metadata accessor for LoadingPageViewController();
          if (swift_dynamicCastClass(v28, v29))
          {

            v28 = objc_msgSend(v24, "popViewControllerAnimated:", 0);
          }

          v26 = v28;
        }
        v12 = v25;

        a7 = v43;
      }
      v30 = (unsigned int *)&enum case for ActionMetricsBehavior.notProcessed(_:);
      v43 = v12;
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
      if ((v44 & 1) == 0)
        v30 = (unsigned int *)&enum case for ActionMetricsBehavior.fromAction(_:);
      v32 = *v30;
      v44 = v11;
      v31(v14, v32, v11);
      type metadata accessor for ActionRunnerOptions(0);
      v33 = swift_retain(a7);
      v34 = BaseObjectGraph.__allocating_init(_:)(v33);
      memset(v47, 0, sizeof(v47));
      v35 = objc_msgSend(v20, "view");
      sub_D184((uint64_t)v47, (uint64_t)v45, &qword_3D1A70);
      v36 = v35;
      ActionOrigin.init(sender:view:)(v46, v45, v35);
      v37 = ActionRunnerOptions.withActionOrigin(_:)(v46);
      sub_D1D4((uint64_t)v46, (uint64_t *)&unk_3D30E0);
      swift_release(v34);

      sub_D1D4((uint64_t)v47, &qword_3D1A70);
      v38 = *(_QWORD *)(a2 + 16);
      if (v38)
      {
        v39 = a2 + 32;
        v40 = sub_89A0(&qword_3D31F0, (uint64_t (*)(uint64_t))type metadata accessor for FlowActionRunner, (uint64_t)&protocol conformance descriptor for FlowActionRunner);
        do
        {
          v41 = ActionRunner.perform(_:withMetrics:asPartOf:)(v39, v14, v37, v17, v40);
          swift_release(v41);
          v39 += 40;
          --v38;
        }
        while (v38);
      }
      swift_release(v37);
      swift_release(v18);
      swift_bridgeObjectRelease(a2);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    }
  }
}

void sub_A7658(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  id Strong;

  Strong = (id)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
  if (Strong)
  {
    v5 = objc_msgSend(a1, "presentingViewController");
    if (v5)
    {
      v6 = v5;
      sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
      v7 = Strong;
      v8 = v6;
      LOBYTE(v6) = static NSObject.== infix(_:_:)(v8, v7);

      if ((v6 & 1) != 0)
      {
        v9 = FlowAnimationBehavior.rawValue.getter(a2);
        v11 = v10;
        v13 = FlowAnimationBehavior.rawValue.getter(1);
        v14 = v12;
        if (v9 == v13 && v11 == v12)
        {
          swift_bridgeObjectRelease_n(v11, 2);
          v15 = 0;
        }
        else
        {
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v12, 0);
          swift_bridgeObjectRelease(v11);
          swift_bridgeObjectRelease(v14);
          v15 = v16 ^ 1;
        }
        objc_msgSend(v7, "dismissViewControllerAnimated:completion:", v15 & 1, 0);
      }
    }

  }
}

uint64_t sub_A77BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
  sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver, &qword_3D1A70);
  return sub_D1D4(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid, &qword_3D4028);
}

_QWORD *RootFlowController.deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectWeakDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver, &qword_3D1A70);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid, &qword_3D4028);
  return v0;
}

uint64_t RootFlowController.__deallocating_deinit()
{
  _QWORD *v0;

  v0 = BaseFlowController.deinit();
  swift_unknownObjectWeakDestroy((char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_rootViewController);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_storefrontChangeObserver, &qword_3D1A70);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18RootFlowController_showDeferralUuid, &qword_3D4028);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

double UIViewController.preferredModalSize.getter()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "preferredContentSize");
    v4 = v3;

  }
  else
  {
    objc_msgSend(v0, "preferredContentSize");
    return v5;
  }
  return v4;
}

void sub_A7954(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  v4 = objc_msgSend(*a1, "navigationController");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "preferredContentSize");
    v7 = v6;
    v9 = v8;

  }
  else
  {
    objc_msgSend(v3, "preferredContentSize");
    v7 = v10;
    v9 = v11;
  }
  *a2 = v7;
  a2[1] = v9;
}

id UIViewController.preferredModalSize.setter(double a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  id v8;

  v5 = objc_msgSend(v2, "navigationController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setPreferredContentSize:", a1, a2);
    v7 = objc_msgSend(v6, "presentationController");
    v8 = objc_msgSend(v7, "containerView");

    objc_msgSend(v8, "setNeedsLayout");
    objc_msgSend(v8, "layoutIfNeeded");

  }
  return objc_msgSend(v2, "setPreferredContentSize:", a1, a2);
}

id (*UIViewController.preferredModalSize.modify(_QWORD *a1))(double *a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  a1[2] = v1;
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "preferredContentSize");
    v6 = v5;
    v8 = v7;

  }
  else
  {
    objc_msgSend(v1, "preferredContentSize");
    v6 = v9;
    v8 = v10;
  }
  *a1 = v6;
  a1[1] = v8;
  return sub_A7B3C;
}

id sub_A7B3C(double *a1, char a2)
{
  void *v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = (void *)*((_QWORD *)a1 + 2);
  v4 = *a1;
  v5 = a1[1];
  v6 = objc_msgSend(v3, "navigationController");
  v7 = v6;
  if ((a2 & 1) != 0)
  {
    if (v6)
      goto LABEL_5;
  }
  else if (v6)
  {
LABEL_5:
    objc_msgSend(v6, "setPreferredContentSize:", v4, v5);
    v8 = objc_msgSend(v7, "presentationController");
    v9 = objc_msgSend(v8, "containerView");

    objc_msgSend(v9, "setNeedsLayout");
    objc_msgSend(v9, "layoutIfNeeded");

  }
  return objc_msgSend(v3, "setPreferredContentSize:", v4, v5);
}

void (*sub_A7C70(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UIViewController.preferredModalSize.modify(v2);
  return sub_91A00;
}

uint64_t sub_A7CB4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A7CD8()
{
  uint64_t v0;

  sub_A4E40(v0);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_6(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_A7CF8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  int v11;
  _OWORD v15[2];
  uint64_t v16;
  void *v17;

  v4 = type metadata accessor for FlowPresentationContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v8 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v9 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4270);
  if (swift_dynamicCast(v15, &v17, v8, v10, 6))
  {
    sub_D1D4((uint64_t)v15, &qword_3D4278);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v11 == enum case for FlowPresentationContext.presentModal(_:)
      || v11 == enum case for FlowPresentationContext.presentModalFormSheet(_:)
      || v11 == enum case for FlowPresentationContext.presentModalPageSheet(_:))
    {
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_D1D4((uint64_t)v15, &qword_3D4278);
  }
  return 0;
}

uint64_t sub_A7E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;

  v1 = type metadata accessor for FlowDestination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for FlowPresentationHints(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v11);
  v12 = v0 + v9;
  v13 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v9, v13);
  v14 = v0 + v9 + v6[6];
  if (*(unsigned __int8 *)(v14 + 40) != 255)

  v15 = v12 + v6[7];
  v16 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);

  v17 = (_QWORD *)(v12 + v6[9]);
  if (v17[3])
    __swift_destroy_boxed_opaque_existential_0(v17);
  v18 = (v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = v18 + 16;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v18 + 8));
  return swift_deallocObject(v0, v19, v3 | v8 | 7);
}

uint64_t sub_A7FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowPresentationHints(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A7FEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for FlowPresentationHints(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_A6958(v0 + v2, v0 + v5, *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8));
}

id sub_A8074(double *a1)
{
  return UIViewController.preferredModalSize.setter(*a1, a1[1]);
}

uint64_t sub_A8098()
{
  return type metadata accessor for RootFlowController(0);
}

uint64_t type metadata accessor for RootFlowController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D4058;
  if (!qword_3D4058)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootFlowController);
  return result;
}

void sub_A80DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_2F3508;
  v4[1] = &unk_2F3520;
  sub_A8170(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 304);
  }
}

uint64_t method lookup function for RootFlowController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RootFlowController);
}

uint64_t dispatch thunk of RootFlowController.__allocating_init(rootViewController:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

void sub_A8170(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D4068)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D4068);
  }
}

uint64_t sub_A81C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v25 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v25 + 24) & ~v25;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FlowDestination(0);
  v6 = *(_QWORD *)(v5 - 8);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v7 = (v3 + v4 + v24) & ~v24;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (int *)type metadata accessor for FlowPresentationHints(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v23 = *(_QWORD *)(v10 + 64);
  v13 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v13);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  v14 = v0 + v12;
  v15 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v12, v15);
  v16 = v0 + v12 + v9[6];
  if (*(unsigned __int8 *)(v16 + 40) != 255)

  v17 = v14 + v9[7];
  v18 = type metadata accessor for FlowDestinationPageHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);

  v19 = (_QWORD *)(v14 + v9[9]);
  if (v19[3])
    __swift_destroy_boxed_opaque_existential_0(v19);
  v20 = (v23 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = v20 + 16;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v20 + 8));
  return swift_deallocObject(v0, v21, v25 | v24 | v11 | 7);
}

double sub_A8368()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for FlowDestination(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for FlowPresentationHints(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t *)(v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_A6560(*(_QWORD *)(v0 + 16), v0 + v2, (void *)(v0 + v5), v0 + v8, *v9, v9[1]);
}

uint64_t sub_A8414@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

id sub_A8460(char *a1)
{
  char *v1;
  char v2;
  char *v3;
  char v5[24];

  v2 = *a1;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment], v5, 1, 0);
  *v3 = v2;
  return objc_msgSend(v1, "setNeedsDisplay");
}

uint64_t (*sub_A84C0(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment, a1, 33, 0);
  return sub_A8508;
}

double sub_A850C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize, v3, 0, 0);
  return *(double *)v1;
}

id sub_A8550(double a1, double a2)
{
  char *v2;
  double *v5;
  _BYTE v7[24];

  v5 = (double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v7, 1, 0);
  *v5 = a1;
  v5[1] = a2;
  return objc_msgSend(v2, "setNeedsDisplay");
}

uint64_t (*sub_A85B4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize, a1, 33, 0);
  return sub_A8508;
}

double sub_A85FC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength, v3, 0, 0);
  return *(double *)v1;
}

id sub_A8640(double a1)
{
  char *v1;
  double *v3;
  _BYTE v5[24];

  v3 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength], v5, 1, 0);
  *v3 = a1;
  return objc_msgSend(v1, "setNeedsDisplay");
}

uint64_t (*sub_A86A0(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength, a1, 33, 0);
  return sub_A8508;
}

id sub_A86E8(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), "setNeedsDisplay");
  return result;
}

double sub_A8728()
{
  char *v0;
  char *v1;
  CGFloat v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double MaxX;
  char v12[24];
  CGRect v13;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment], v12, 0, 0);
  LODWORD(v1) = *v1;
  objc_msgSend(v0, "bounds");
  v6 = v2;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  MaxX = v2;
  if ((_DWORD)v1 == 1)
    MaxX = CGRectGetMaxX(*(CGRect *)&v2);
  v13.origin.x = v6;
  v13.origin.y = v7;
  v13.size.width = v8;
  v13.size.height = v9;
  CGRectGetMaxY(v13);
  return MaxX;
}

double sub_A87E4()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  _BYTE *v8;
  double *v9;
  double v10;
  uint64_t v11;
  uint64_t inited;
  double MaxY;
  CGFloat MaxX;
  uint64_t v15;
  double v16;
  double v17;
  double *v18;
  __n128 v19;
  double v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[64];
  _BYTE v25[24];
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v1 = sub_A89B0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = (_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment, v25, 0, 0);
  if (*v8 == 1)
  {
    v9 = (double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength);
    swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength, v23, 0, 0);
    v10 = v1 - *v9;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D42D8);
    inited = swift_initStackObject(v11, &v22);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(double *)(inited + 32) = v10;
    *(double *)(inited + 40) = v3 + 0.0;
    v26.origin.x = v1;
    v26.origin.y = v3;
    v26.size.width = v5;
    v26.size.height = v7;
    MaxY = CGRectGetMaxY(v26);
    *(double *)(inited + 48) = v1;
  }
  else
  {
    v27.origin.x = v1;
    v27.origin.y = v3;
    v27.size.width = v5;
    v27.size.height = v7;
    MaxX = CGRectGetMaxX(v27);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D42D8);
    inited = swift_initStackObject(v15, v24);
    *(_OWORD *)(inited + 16) = xmmword_2EFA20;
    *(CGFloat *)(inited + 32) = MaxX;
    *(double *)(inited + 40) = v3;
    v28.origin.x = v1;
    v28.origin.y = v3;
    v28.size.width = v5;
    v28.size.height = v7;
    v16 = CGRectGetMaxX(v28);
    v29.origin.x = v1;
    v29.origin.y = v3;
    v29.size.width = v5;
    v29.size.height = v7;
    v17 = CGRectGetMaxY(v29);
    v18 = (double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength);
    swift_beginAccess(v18, v23, 0, 0);
    MaxY = v17 + 0.0;
    *(double *)(inited + 48) = v16 + *v18;
  }
  *(double *)(inited + 56) = MaxY;
  v19.n128_f64[0] = _sSo6CGRectV23ShelfKitCollectionViewsE10containing6pointsABSo7CGPointVd_tFZ_0((double *)inited);
  v20 = v19.n128_f64[0];
  swift_setDeallocating(inited, v19);
  return v20;
}

double sub_A89B0()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double MaxX;
  double *v11;
  double v12;
  char v14[24];
  _BYTE v15[24];
  char v16[24];
  CGRect v17;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment];
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment], v16, 0, 0);
  LOBYTE(v1) = *v1;
  objc_msgSend(v0, "bounds");
  v6 = v2;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  if ((v1 & 1) != 0)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&v2);
    v17.origin.x = v6;
    v17.origin.y = v7;
    v17.size.width = v8;
    v17.size.height = v9;
    CGRectGetMaxY(v17);
    v11 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v15, 0, 0);
    v12 = MaxX - *v11;
  }
  else
  {
    CGRectGetMaxY(*(CGRect *)&v2);
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v15, 0, 0);
    v12 = v6 + 0.0;
  }
  swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize], v14, 0, 0);
  return v12;
}

void sub_A8B34()
{
  uint64_t v0;
  CGContext *v1;
  CGContext *v2;
  double v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t inited;
  int8x16_t *v12;
  _BYTE *v13;
  uint64_t v14;
  CGColorSpace *DeviceGray;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  const __CFArray *isa;
  CGGradient *v25;
  CGFloat MinX;
  CGFloat MidY;
  CGFloat MaxX;
  _BYTE v29[24];
  _BYTE v30[48];
  CGPoint v31;
  CGPoint v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v1 = UIGraphicsGetCurrentContext();
  if (!v1)
    return;
  v2 = v1;
  CGContextSaveGState(v1);
  v3 = sub_A87E4();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  CGContextSetBlendMode(v2, kCGBlendModeDestinationOut);
  v33.origin.x = v3;
  v33.origin.y = v5;
  v33.size.width = v7;
  v33.size.height = v9;
  CGContextClipToRect(v2, v33);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22D8);
  inited = swift_initStackObject(v10, v30);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_OWORD *)(inited + 32) = xmmword_2F1D50;
  v12 = (int8x16_t *)(inited + 32);
  v13 = (_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment);
  swift_beginAccess(v13, v29, 0, 0);
  if ((*v13 & 1) == 0)
  {
    v14 = *(_QWORD *)(inited + 16);
    if (v14)
    {
      if (v14 != 1)
      {
        *v12 = vextq_s8(*v12, *v12, 8uLL);
        goto LABEL_6;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_6:
  DeviceGray = CGColorSpaceCreateDeviceGray();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_2EFC90;
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "clearColor");
  v20 = objc_msgSend(v19, "CGColor");

  *(_QWORD *)(v17 + 32) = v20;
  v21 = objc_msgSend(v18, "blackColor");
  v22 = objc_msgSend(v21, "CGColor");

  *(_QWORD *)(v17 + 40) = v22;
  specialized Array._endMutation()(v23);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v25 = CGGradientCreateWithColors(DeviceGray, isa, (const CGFloat *)v12->i64);

  swift_bridgeObjectRelease(inited);
  if (v25)
  {
    v34.origin.x = v3;
    v34.origin.y = v5;
    v34.size.width = v7;
    v34.size.height = v9;
    MinX = CGRectGetMinX(v34);
    v35.origin.x = v3;
    v35.origin.y = v5;
    v35.size.width = v7;
    v35.size.height = v9;
    MidY = CGRectGetMidY(v35);
    v36.origin.x = v3;
    v36.origin.y = v5;
    v36.size.width = v7;
    v36.size.height = v9;
    MaxX = CGRectGetMaxX(v36);
    v37.origin.x = v3;
    v37.origin.y = v5;
    v37.size.width = v7;
    v37.size.height = v9;
    v32.y = CGRectGetMidY(v37);
    v31.x = MinX;
    v31.y = MidY;
    v32.x = MaxX;
    CGContextDrawLinearGradient(v2, v25, v31, v32, 2u);
    CGContextRestoreGState(v2);

  }
}

id CornerFadeView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v15;

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment] = 1;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for CornerFadeView();
  v10 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "clearColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  return v12;
}

id CornerFadeView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CornerFadeView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_A9098()
{
  void *v0;
  CGContext *v1;
  void *v2;
  id v3;
  CGColor *v4;
  CGContext *v5;
  CGContext *v6;
  double v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  id v14;
  CGColor *v15;
  CGContext *c;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v1 = UIGraphicsGetCurrentContext();
  if (v1)
  {
    c = v1;
    v2 = (void *)objc_opt_self(UIColor);
    v3 = objc_msgSend(v2, "blackColor");
    v4 = (CGColor *)objc_msgSend(v3, "CGColor");

    CGContextSetFillColorWithColor(c, v4);
    objc_msgSend(v0, "bounds");
    CGContextFillRect(c, v17);
    v5 = UIGraphicsGetCurrentContext();
    if (v5)
    {
      v6 = v5;
      v7 = sub_A89B0();
      v9 = v8;
      v11 = v10;
      v13 = v12;
      CGContextSaveGState(v6);
      v18.origin.x = v7;
      v18.origin.y = v9;
      v18.size.width = v11;
      v18.size.height = v13;
      CGContextClipToRect(v6, v18);
      CGContextSetBlendMode(v6, kCGBlendModeDestinationOut);
      v14 = objc_msgSend(v2, "blackColor");
      v15 = (CGColor *)objc_msgSend(v14, "CGColor");

      CGContextSetFillColorWithColor(v6, v15);
      v19.origin.x = v7;
      v19.origin.y = v9;
      v19.size.width = v11;
      v19.size.height = v13;
      CGContextFillRect(v6, v19);
      CGContextRestoreGState(v6);

    }
    sub_A8B34();

  }
}

uint64_t type metadata accessor for CornerFadeView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14CornerFadeView);
}

unint64_t sub_A925C()
{
  unint64_t result;

  result = qword_3D42A8;
  if (!qword_3D42A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CornerFadeView.Alignment, &type metadata for CornerFadeView.Alignment);
    atomic_store(result, (unint64_t *)&qword_3D42A8);
  }
  return result;
}

uint64_t sub_A92A0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

id sub_A92F0(char *a1, void **a2)
{
  char v2;
  void *v3;
  _BYTE *v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  v4 = (char *)*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_alignment;
  swift_beginAccess(v4, v6, 1, 0);
  *v4 = v2;
  return objc_msgSend(v3, "setNeedsDisplay");
}

__n128 sub_A9354@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;
  _BYTE v5[24];

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *v3;
  return result;
}

id sub_A93A4(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = (char *)*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_safetyCutoutSize;
  swift_beginAccess(v5, v7, 1, 0);
  *v5 = v2;
  v5[1] = v3;
  return objc_msgSend(v4, "setNeedsDisplay");
}

double sub_A9408@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;
  _BYTE v5[24];

  v3 = (double *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

id sub_A9458(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  v4 = (char *)*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CornerFadeView_fadeLength;
  swift_beginAccess(v4, v6, 1, 0);
  *v4 = v2;
  return objc_msgSend(v3, "setNeedsDisplay");
}

uint64_t method lookup function for CornerFadeView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for CornerFadeView);
}

uint64_t dispatch thunk of CornerFadeView.alignment.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of CornerFadeView.alignment.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of CornerFadeView.alignment.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of CornerFadeView.safetyCutoutSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of CornerFadeView.safetyCutoutSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of CircularProgressView.style.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CornerFadeView.fadeLength.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CornerFadeView.fadeLength.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CircularProgressView.episodeCellState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of CornerFadeView.pinnedCorner.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t storeEnumTagSinglePayload for CornerFadeView.Alignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_A962C + 4 * byte_2F3575[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_A9660 + 4 * asc_2F3570[v4]))();
}

uint64_t sub_A9660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A9668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA9670);
  return result;
}

uint64_t sub_A967C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA9684);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_A9688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A9690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CornerFadeView.Alignment()
{
  return &type metadata for CornerFadeView.Alignment;
}

void *sub_A96AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  objc_class *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int16 v12;
  int v13;
  char *v14;
  uint64_t v15;
  __int16 v16;
  char *v17;
  unsigned __int16 v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  _QWORD v43[11];
  char v44;
  char v45;

  v7 = *(_QWORD *)(a1 + 8);
  v38 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 40);
  v41 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(a1 + 48);
  v39 = *(_QWORD *)(a1 + 72);
  v40 = *(_QWORD *)(a1 + 64);
  v36 = *(_QWORD *)(a1 + 80);
  v37 = *(_QWORD *)(a1 + 56);
  v12 = *(unsigned __int8 *)(a1 + 88);
  v13 = *(unsigned __int8 *)(a1 + 89);
  v14 = (char *)objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setNumberOfLines:", a2);
  if ((a4 & 1) != 0)
  {
    if (a2)
      v15 = 4;
    else
      v15 = 0;
    objc_msgSend(v14, "setLineBreakMode:", v15);
  }
  else
  {
    objc_msgSend(v14, "setLineBreakMode:", a3);
  }
  if (v13)
    v16 = 256;
  else
    v16 = 0;
  v17 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v33 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v31 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v30 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v29 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v28 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v27 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v25 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v26 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v24 = *(_OWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v34 = v12;
  v23 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v35 = v14;
  v18 = *(_WORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  *(_QWORD *)v17 = v38;
  *((_QWORD *)v17 + 1) = v7;
  *((_QWORD *)v17 + 2) = v8;
  *((_QWORD *)v17 + 3) = v9;
  *((_QWORD *)v17 + 4) = v41;
  *((_QWORD *)v17 + 5) = v10;
  *((_QWORD *)v17 + 6) = v11;
  *((_QWORD *)v17 + 7) = v37;
  *((_QWORD *)v17 + 8) = v40;
  *((_QWORD *)v17 + 9) = v39;
  *((_QWORD *)v17 + 10) = v36;
  *((_WORD *)v17 + 44) = v16 | v12;
  sub_DDA0(v38, v7, v8, v9, v41, v10, v11, v37, v40, v39, v36, v12, v13);
  sub_DC94(v25, v33, v31, v30, v29, v28, v27, v26, v24, *((uint64_t *)&v24 + 1), v23, v18);
  v19 = objc_msgSend(v14, "traitCollection");
  v43[0] = v38;
  v43[1] = v7;
  v43[2] = v8;
  v43[3] = v9;
  v43[4] = v41;
  v43[5] = v10;
  v43[6] = v11;
  v43[7] = v37;
  v43[8] = v40;
  v43[9] = v39;
  v43[10] = v36;
  v44 = v12;
  v45 = v13;
  v20 = sub_1D5728((uint64_t)v43, v19);
  v21 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v20, 0.0);

  sub_DCC8(v38, v7, v8, v9, v41, v10, v11, v37, v40, v39, v36, v34, v13);
  v42.receiver = v35;
  v42.super_class = (Class)type metadata accessor for DynamicTypeLabel();
  objc_msgSendSuper2(&v42, "setFont:", v21);

  return v35;
}

void sub_A99A8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  __int16 v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;
  __int128 v16;
  __int128 v17;
  unsigned int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  objc_super v38;
  _QWORD v39[11];
  __int16 v40;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_WORD *)(a1 + 88);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v6 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v15 = *(_WORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v16;
  v17 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v4 + 3) = v17;
  *((_OWORD *)v4 + 4) = *(_OWORD *)(a1 + 64);
  *((_QWORD *)v4 + 10) = v2;
  *((_WORD *)v4 + 44) = v3;
  sub_DC94(v6, v5, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  v18 = *((unsigned __int16 *)v4 + 44);
  if (v18 >> 8 <= 0xFE)
  {
    v33 = *((_QWORD *)v4 + 9);
    v34 = *((_QWORD *)v4 + 10);
    v32 = *((_QWORD *)v4 + 8);
    v20 = *((_QWORD *)v4 + 5);
    v19 = (void *)*((_QWORD *)v4 + 6);
    v22 = *((_QWORD *)v4 + 3);
    v21 = *((_QWORD *)v4 + 4);
    v24 = *((_QWORD *)v4 + 1);
    v23 = *((_QWORD *)v4 + 2);
    v25 = *(void **)v4;
    v36 = *(void **)v4;
    v37 = v24;
    v26 = *((_QWORD *)v4 + 7);
    sub_DDA0(v25, v24, v23, v22, v21, v20, v19, v26, v32, v33, v34, v18, (unsigned __int16)(v18 & 0x1FF) >> 8);
    v35 = v1;
    v27 = objc_msgSend(v1, "traitCollection");
    v39[0] = v25;
    v39[1] = v24;
    v39[2] = v23;
    v39[3] = v22;
    v39[4] = v21;
    v39[5] = v20;
    LOBYTE(v24) = v20;
    v39[6] = v19;
    v39[7] = v26;
    v28 = v19;
    v29 = v26;
    v39[8] = v32;
    v39[9] = v33;
    v39[10] = v34;
    v40 = v18 & 0x1FF;
    v30 = sub_1D5728((uint64_t)v39, v27);
    v31 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v30, 0.0);

    v38.receiver = v35;
    v38.super_class = (Class)type metadata accessor for DynamicTypeLabel();
    objc_msgSendSuper2(&v38, "setFont:", v31);

    sub_DC94(v36, v37, v23, v22, v21, v24, v28, v29, v32, v33, v34, v18);
  }
}

id sub_A9BF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLabel();
  return objc_msgSendSuper2(&v2, "font");
}

uint64_t type metadata accessor for DynamicTypeLabel()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16DynamicTypeLabel);
}

void sub_A9CD4(void *a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unsigned __int16 v15;
  unsigned int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  objc_super v33;
  _QWORD v34[11];
  __int16 v35;
  objc_super v36;

  v3 = (objc_class *)type metadata accessor for DynamicTypeLabel();
  v36.receiver = v1;
  v36.super_class = v3;
  objc_msgSendSuper2(&v36, "setFont:", a1);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 8];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 16];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 24];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 32];
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 40];
  v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 48];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 56];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 64];
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 80];
  v15 = *(_WORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  *((_QWORD *)v4 + 10) = 0;
  *((_WORD *)v4 + 44) = -256;
  sub_DC94(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  v16 = *((unsigned __int16 *)v4 + 44);
  if (v16 >> 8 <= 0xFE)
  {
    v26 = *((_QWORD *)v4 + 9);
    v27 = *((_QWORD *)v4 + 10);
    v25 = *((_QWORD *)v4 + 8);
    v18 = *((_QWORD *)v4 + 5);
    v17 = (void *)*((_QWORD *)v4 + 6);
    v20 = *((_QWORD *)v4 + 3);
    v19 = *((_QWORD *)v4 + 4);
    v32 = v3;
    v21 = *(void **)v4;
    v29 = *(void **)v4;
    v30 = *((_QWORD *)v4 + 1);
    v31 = *((_QWORD *)v4 + 2);
    v28 = *((_QWORD *)v4 + 7);
    sub_DDA0(*(void **)v4, v30, v31, v20, v19, v18, v17, v28, v25, v26, v27, v16, (unsigned __int16)(v16 & 0x1FF) >> 8);
    v34[0] = v21;
    v34[1] = v30;
    v34[2] = v31;
    v34[3] = v20;
    v34[4] = v19;
    v34[5] = v18;
    v34[6] = v17;
    v34[7] = v28;
    v34[8] = v25;
    v34[9] = v26;
    v34[10] = v27;
    v35 = v16 & 0x1FF;
    v22 = objc_msgSend(v1, "traitCollection");
    v23 = sub_1D5728((uint64_t)v34, v22);
    v24 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v23, 0.0);

    v33.receiver = v1;
    v33.super_class = v32;
    objc_msgSendSuper2(&v33, "setFont:", v24);

    sub_DC94(v29, v30, v31, v20, v19, v18, v17, v28, v25, v26, v27, v16);
  }

}

void sub_A9EE8(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  objc_class *v21;
  objc_super v22;
  _QWORD v23[11];
  __int16 v24;
  objc_super v25;

  v3 = (objc_class *)type metadata accessor for DynamicTypeLabel();
  v25.receiver = v1;
  v25.super_class = v3;
  objc_msgSendSuper2(&v25, "traitCollectionDidChange:", a1);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  v5 = *(unsigned __int16 *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase + 88];
  if (v5 >> 8 <= 0xFE)
  {
    v16 = *((_QWORD *)v4 + 9);
    v17 = *((_QWORD *)v4 + 10);
    v15 = *((_QWORD *)v4 + 8);
    v7 = *((_QWORD *)v4 + 5);
    v6 = (void *)*((_QWORD *)v4 + 6);
    v8 = *((_QWORD *)v4 + 4);
    v9 = *((_QWORD *)v4 + 1);
    v10 = *((_QWORD *)v4 + 2);
    v11 = *(void **)v4;
    v19 = *(void **)v4;
    v20 = *((_QWORD *)v4 + 3);
    v21 = v3;
    v18 = *((_QWORD *)v4 + 7);
    sub_DDA0(*(void **)v4, v9, v10, v20, v8, v7, v6, v18, v15, v16, v17, v5, (unsigned __int16)(v5 & 0x1FF) >> 8);
    v23[0] = v11;
    v23[1] = v9;
    v23[2] = v10;
    v23[3] = v20;
    v23[4] = v8;
    v23[5] = v7;
    v23[6] = v6;
    v23[7] = v18;
    v23[8] = v15;
    v23[9] = v16;
    v23[10] = v17;
    v24 = v5 & 0x1FF;
    v12 = objc_msgSend(v1, "traitCollection");
    v13 = sub_1D5728((uint64_t)v23, v12);
    v14 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v13, 0.0);

    v22.receiver = v1;
    v22.super_class = v21;
    objc_msgSendSuper2(&v22, "setFont:", v14);

    sub_DC94(v19, v9, v10, v20, v8, v7, v6, v18, v15, v16, v17, v5);
  }
}

id DynamicTypeLabel.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_super v11;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_QWORD *)v9 + 10) = 0;
  *((_WORD *)v9 + 44) = -256;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for DynamicTypeLabel();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id DebugSettingsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id DynamicTypeLabel.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16DynamicTypeLabel_fontUseCase];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_QWORD *)v3 + 10) = 0;
  *((_WORD *)v3 + 44) = -256;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DynamicTypeLabel();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id DynamicTypeLabel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicTypeLabel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t method lookup function for DynamicTypeLabel(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DynamicTypeLabel);
}

double sub_AA3D4()
{
  double result;

  result = 1320.0;
  xmmword_3FAC00 = xmmword_2F36A0;
  return result;
}

uint64_t MacGridSpec.basePageMargin(for:)()
{
  uint64_t result;

  if (qword_3CF248 != -1)
    return swift_once(&qword_3CF248, sub_AA3D4);
  return result;
}

double MacGridSpec.pageColumnMargin(for:traitCollection:axis:gridType:)()
{
  return 20.0;
}

ValueMetadata *type metadata accessor for MacGridSpec()
{
  return &type metadata for MacGridSpec;
}

uint64_t sub_AA46C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 5459817;
  else
    v3 = 0x79616C50726163;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 5459817;
  else
    v5 = 0x79616C50726163;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_AA508(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65676150776F6873;
  else
    v3 = 0x5065646F73697065;
  if (v2)
    v4 = 0xEB00000000656761;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65676150776F6873;
  else
    v5 = 0x5065646F73697065;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEB00000000656761;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_AA5B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_AA604(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_AA6DC + 4 * byte_2F36F8[a2]))(0x746E6F4379616C70);
}

uint64_t sub_AA6DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746E6F4379616C70 && v1 == 0xEC000000736C6F72)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x746E6F4379616C70, 0xEC000000736C6F72, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC000000736C6F72);
  return v2 & 1;
}

uint64_t SmartPlayButtonController.__allocating_init(button:context:platform:objectGraph:)(void *a1, char *a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  SmartPlayButtonController.init(button:context:platform:objectGraph:)(a1, a2, a3, a4);
  return v9;
}

ShelfKitCollectionViews::SmartPlayContext_optional __swiftcall SmartPlayContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_379D30;
  return (ShelfKitCollectionViews::SmartPlayContext_optional)sub_AAAA4(rawValue, v2, v1);
}

uint64_t SmartPlayContext.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x65676150776F6873;
  else
    return 0x5065646F73697065;
}

uint64_t sub_AA8C8(char *a1, char *a2)
{
  return sub_AA508(*a1, *a2);
}

Swift::Int sub_AA8D4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x65676150776F6873;
  else
    v2 = 0x5065646F73697065;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEB00000000656761;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_AA95C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x65676150776F6873;
  else
    v2 = 0x5065646F73697065;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEB00000000656761;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_AA9C0(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x65676150776F6873;
  else
    v3 = 0x5065646F73697065;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB00000000656761;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

ShelfKitCollectionViews::SmartPlayContext_optional sub_AAA44(Swift::String *a1)
{
  return SmartPlayContext.init(rawValue:)(*a1);
}

void sub_AAA50(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x5065646F73697065;
  if (*v1)
    v2 = 0x65676150776F6873;
  v3 = 0xEB00000000656761;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

ShelfKitCollectionViews::SmartPlayPlatformContext_optional __swiftcall SmartPlayPlatformContext.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;

  v2._rawValue = &off_379D80;
  return (ShelfKitCollectionViews::SmartPlayPlatformContext_optional)sub_AAAA4(rawValue, v2, v1);
}

uint64_t sub_AAAA4@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X2>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v7;
  uint64_t result;
  char v9;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v7 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v7 == 1)
    v9 = 1;
  else
    v9 = 2;
  if (!v7)
    v9 = 0;
  *a3 = v9;
  return result;
}

uint64_t SmartPlayPlatformContext.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 5459817;
  else
    return 0x79616C50726163;
}

uint64_t sub_AAB34(char *a1, char *a2)
{
  return sub_AA46C(*a1, *a2);
}

Swift::Int sub_AAB40()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 5459817;
  else
    v2 = 0x79616C50726163;
  if (v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_AABB8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 5459817;
  else
    v2 = 0x79616C50726163;
  if (*v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_AAC0C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 5459817;
  else
    v3 = 0x79616C50726163;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

ShelfKitCollectionViews::SmartPlayPlatformContext_optional sub_AAC80(Swift::String *a1)
{
  return SmartPlayPlatformContext.init(rawValue:)(*a1);
}

void sub_AAC8C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 5459817;
  if (!*v1)
    v2 = 0x79616C50726163;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_AACC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ChannelSubscriptionOffer(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 248);
  *(_QWORD *)(v2 + 248) = a1;
  result = swift_bridgeObjectRelease(v8);
  v10 = *(_QWORD *)(v2 + 248);
  if (v10)
  {
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v13 = *(_QWORD *)(v5 + 72);
      v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + 248));
      v15 = v11 - 1;
      do
      {
        v16 = v15;
        v17 = v14(v7, v12, v4);
        LOBYTE(v11) = ChannelSubscriptionOffer.freeTrial.getter(v17);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if ((v11 & 1) != 0)
          break;
        v15 = v16 - 1;
        v12 += v13;
      }
      while (v16);
      result = swift_bridgeObjectRelease(v10);
    }
    v18 = v11 & 1;
  }
  else
  {
    v18 = 2;
  }
  *(_BYTE *)(v2 + 256) = v18;
  return result;
}

uint64_t SmartPlayButtonController.init(button:context:platform:objectGraph:)(void *a1, char *a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v17[24];
  _QWORD v18[5];
  _BYTE v19[168];

  v7 = *a2;
  v8 = *a3;
  swift_unknownObjectWeakInit(v4 + 16, 0);
  *(_QWORD *)(v4 + 80) = 0;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  sub_AAF58((uint64_t)v19);
  sub_D210((uint64_t)v19, v4 + 88, &qword_3D4310);
  *(_QWORD *)(v4 + 248) = 0;
  *(_WORD *)(v4 + 256) = 2;
  *(_QWORD *)(v4 + 272) = 0;
  *(_QWORD *)(v4 + 280) = 0;
  *(_QWORD *)(v4 + 264) = 0;
  v9 = v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState;
  v10 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_unknownObjectWeakAssign(v4 + 16, a1);
  *(_BYTE *)(v4 + 24) = v7;
  *(_BYTE *)(v4 + 25) = v8;
  *(_QWORD *)(v4 + 32) = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1738);
  v12 = type metadata accessor for BaseObjectGraph(0);
  v13 = swift_retain(a4);
  inject<A, B>(_:from:)(v18, v11, a4, v11, v12, v13);
  *(_QWORD *)(v4 + 40) = v18[0];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  inject<A, B>(_:from:)(v18, v14, a4, v14, v12, v15);

  swift_release(a4);
  swift_beginAccess(v4 + 48, v17, 33, 0);
  sub_AAF80((uint64_t)v18, v4 + 48);
  swift_endAccess(v17);
  return v4;
}

double sub_AAF58(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 137) = 0u;
  return result;
}

uint64_t sub_AAF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_AAFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  int v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[8];
  _OWORD v54[2];
  _BYTE v55[160];
  _BYTE v56[168];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v4);
  v43 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_retain(a1);
  v42 = EpisodeHeader.episodeTypeResolvedValue.getter(v6);
  v41 = EpisodeHeader.showTypeIsSerial.getter();
  v40 = EpisodeHeader.episodeEntitlementState.getter();
  v39 = EpisodeHeader.adamId.getter(v40);
  v38 = v7;
  v37 = EpisodeHeader.channelAdamId.getter();
  v36 = v8;
  v10 = EpisodeHeader.uuid.getter(v9);
  v34 = v11;
  v35 = v10;
  v33 = EpisodeHeader.episodeNumber.getter();
  v32 = v12;
  v13 = EpisodeHeader.seasonNumber.getter();
  v31 = v14;
  v15 = EpisodeHeader.title.getter();
  v17 = v16;
  v18 = EpisodeHeader.referenceTime.getter();
  v20 = v19;
  v21 = EpisodeHeader.playerTime.getter();
  v23 = v22;
  v24 = swift_release(a1);
  LOBYTE(v44) = v42;
  BYTE1(v44) = v41 & 1;
  *((_QWORD *)&v44 + 1) = v40;
  *(_QWORD *)&v45 = v39;
  BYTE8(v45) = v38 & 1;
  *(_QWORD *)&v46 = v37;
  BYTE8(v46) = v36 & 1;
  *(_QWORD *)&v47 = v35;
  *((_QWORD *)&v47 + 1) = v34;
  *(_QWORD *)&v48 = v33;
  BYTE8(v48) = v32 & 1;
  *(_QWORD *)&v49 = v13;
  BYTE8(v49) = v31 & 1;
  *(_QWORD *)&v50 = v15;
  *((_QWORD *)&v50 + 1) = v17;
  *(_QWORD *)&v51 = 0;
  BYTE8(v51) = 1;
  *(_QWORD *)&v52[0] = v18;
  BYTE8(v52[0]) = v20 & 1;
  *(_QWORD *)&v52[1] = v21;
  BYTE8(v52[1]) = v23 & 1;
  v25 = EpisodeHeader.primaryButtonAction.getter(v24);
  v53[6] = v50;
  v53[7] = v51;
  v54[0] = v52[0];
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v52 + 9);
  v53[2] = v46;
  v53[3] = v47;
  v53[4] = v48;
  v53[5] = v49;
  v53[0] = v44;
  v53[1] = v45;
  UINavigationBar.overrideBackButtonStyle.setter(v53);
  sub_D210((uint64_t)v53, (uint64_t)v56, &qword_3D4310);
  sub_D210(v2 + 88, (uint64_t)v55, &qword_3D4310);
  sub_D210((uint64_t)v56, v2 + 88, &qword_3D4310);
  sub_AB284((uint64_t)&v44);
  sub_AEE50((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
  sub_AACC4(0);
  *(_BYTE *)(v2 + 257) = 0;
  v26 = type metadata accessor for EpisodePlayState(0);
  v27 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v43, 1, 1, v26);
  sub_AD380(v27);
  v28 = *(_QWORD *)(v2 + 272);
  *(_QWORD *)(v2 + 264) = 0;
  *(_QWORD *)(v2 + 272) = 0;
  swift_bridgeObjectRelease(v28);
  sub_AEC9C(0);
  sub_AB5DC(v25, (uint64_t)v56);
  sub_AC7DC(v25, (uint64_t)v56);
  sub_AEE1C((uint64_t)&v44);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_AB284(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 104));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_AB2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a8 != 1)
  {
    swift_bridgeObjectRelease(a8);
    return swift_bridgeObjectRelease(a14);
  }
  return result;
}

uint64_t sub_AB2EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  _BYTE v49[160];
  _BYTE v50[8];
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  _BYTE v70[168];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_retain(a1);
  v8 = ShowHeader.episodeToPlay.getter(v7);
  if (v8)
  {
    v9 = v8;
    v41 = Episode.episodeTypeResolvedValue.getter();
    v37 = Episode.showTypeIsSerial.getter();
    v40 = Episode.episodeEntitlementState.getter();
    v39 = Episode.adamId.getter();
    v32 = v10;
    v38 = Episode.channelAdamId.getter();
    v42 = v6;
    v12 = v11;
    v13 = Episode.uuid.getter();
    v35 = v14;
    v36 = v13;
    v34 = Episode.episodeNumber.getter();
    v16 = v15;
    v33 = Episode.seasonNumber.getter();
    v18 = v17;
    v31 = Episode.title.getter();
    v20 = v19;
    v21 = Episode.showTypeSetting.getter();
    v23 = v22;
    swift_release(a1);
    swift_release(v9);
    v49[0] = v32 & 1;
    v24 = v12 & 1;
    v6 = v42;
    v48 = v24;
    v47 = v16 & 1;
    v46 = v18 & 1;
    v45 = v23 & 1;
    v44 = 1;
    v43 = 1;
    v50[0] = v41;
    v50[1] = v37 & 1;
    v51 = v40;
    v52 = v39;
    v53 = v32 & 1;
    v54 = v38;
    v55 = v24;
    v56 = v36;
    v57 = v35;
    v58 = v34;
    v59 = v16 & 1;
    v60 = v33;
    v61 = v18 & 1;
    v62 = v31;
    v63 = v20;
    v64 = v21;
    v65 = v23 & 1;
    v66 = 0;
    v67 = 1;
    v68 = 0;
    v69 = 1;
    UINavigationBar.overrideBackButtonStyle.setter(v50);
  }
  else
  {
    swift_release(a1);
    sub_AAF58((uint64_t)v50);
  }
  sub_D210((uint64_t)v50, (uint64_t)v70, &qword_3D4310);
  v25 = sub_D210((uint64_t)v70, (uint64_t)v50, &qword_3D4310);
  v26 = ShowHeader.primaryButtonAction.getter(v25);
  sub_D210(v2 + 88, (uint64_t)v49, &qword_3D4310);
  sub_D210((uint64_t)v50, v2 + 88, &qword_3D4310);
  sub_AEE50((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AEEBC);
  sub_AEE50((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
  sub_AACC4(0);
  *(_BYTE *)(v2 + 257) = 0;
  v27 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  sub_AD380((uint64_t)v6);
  v28 = *(_QWORD *)(v2 + 272);
  *(_QWORD *)(v2 + 264) = 0;
  *(_QWORD *)(v2 + 272) = 0;
  swift_bridgeObjectRelease(v28);
  sub_AEC9C(0);
  sub_AB5DC(v26, (uint64_t)v50);
  sub_AC7DC(v26, (uint64_t)v50);
  swift_release(v26);
  return sub_AEE50((uint64_t)v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
}

double sub_AB5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t Strong;
  double result;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t, uint64_t);
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  __n128 v80;
  char v81;
  uint64_t v82;
  _QWORD *boxed_opaque_existential_0;
  __n128 v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  id v88;
  __n128 v89;
  int v90;
  int v91;
  _BYTE v92[12];
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  _BYTE v105[160];
  void **v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  void *v109;
  id (*v110)();
  uint64_t v111;
  uint64_t v112;
  char v113;
  _OWORD v114[8];
  _OWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[3];
  _OWORD v122[2];
  _BYTE v123[16];
  _BYTE v124[16];
  _BYTE v125[16];
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE v130[168];

  v3 = v2;
  v4 = a2;
  sub_D210(a2, (uint64_t)v105, &qword_3D4310);
  sub_D210((uint64_t)v105, (uint64_t)v130, &qword_3D4310);
  v6 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v6);
  v8 = &v92[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v9);
  v11 = &v92[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45D0);
  __chkstk_darwin(v12);
  v14 = &v92[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return result;
  v17 = (void *)Strong;
  sub_D210(v4, (uint64_t)v114, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v114) != 1)
  {
    v121[1] = v114[6];
    v121[2] = v114[7];
    v122[0] = v115[0];
    *(_OWORD *)((char *)v122 + 9) = *(_OWORD *)((char *)v115 + 9);
    v118 = v114[2];
    v119 = v114[3];
    v120 = v114[4];
    v121[0] = v114[5];
    v116 = v114[0];
    v117 = v114[1];
    sub_D210((uint64_t)&v119, (uint64_t)v123, (uint64_t *)&unk_3DBE40);
    sub_D210((uint64_t)v123, (uint64_t)&v128, (uint64_t *)&unk_3DBE40);
    if (v129)
    {
      v97 = v129;
      v96 = v128;
      v18 = (void *)objc_opt_self(UIView);
      v19 = swift_allocObject(&unk_37EC40, 24, 7);
      *(_QWORD *)(v19 + 16) = v17;
      v110 = sub_AF7F0;
      v111 = v19;
      v106 = _NSConcreteStackBlock;
      v107 = 1107296256;
      v108 = sub_24360;
      v109 = &block_descriptor_38;
      v20 = _Block_copy(&v106);
      v21 = v111;
      sub_AF6B0((uint64_t)v123);
      v22 = v17;
      swift_release(v21);
      objc_msgSend(v18, "animateWithDuration:animations:", v20, 0.15);
      _Block_release(v20);
      v23 = *((_QWORD *)&v116 + 1) != 2;
      v24 = BYTE8(v118);
      if (*((_QWORD *)&v116 + 1) == 2)
        v25 = v118;
      else
        v25 = 0;
      v95 = v25;
      v26 = type metadata accessor for EpisodeListSettings(0);
      v27 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
      LODWORD(v98) = 1;
      v27(v14, 1, 1, v26);
      v28 = sub_AE510();
      v99 = v4;
      if (v28)
      {
        if ((BYTE8(v122[0]) & 1) != 0)
        {
          v94 = *(_QWORD *)&v122[1];
          LODWORD(v98) = BYTE8(v122[1]);
        }
        else
        {
          LODWORD(v98) = 0;
          v94 = *(_QWORD *)&v122[0];
        }
      }
      else
      {
        v94 = 0;
      }
      v93 = v23 | v24;
      sub_D210((uint64_t)v121, (uint64_t)v124, &qword_3D45C8);
      v58 = sub_D210((uint64_t)v124, (uint64_t)&v106, &qword_3D45C8);
      v59 = 0;
      if ((v107 & 1) != 0 || (uint64_t)v106 < 1)
        goto LABEL_34;
      v60 = EpisodeType.rawValue.getter(v116);
      v62 = v61;
      v64 = EpisodeType.rawValue.getter(2);
      v65 = v63;
      if (v60 == v64 && v62 == v63)
      {
        swift_bridgeObjectRelease_n(v62, 2);
      }
      else
      {
        v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v64, v63, 0);
        swift_bridgeObjectRelease(v62);
        swift_bridgeObjectRelease(v65);
        v59 = 0;
        if ((v66 & 1) == 0)
        {
LABEL_34:
          v67 = v117;
          v68 = BYTE8(v117);
          static ActionMetrics.notInstrumented.getter(v58);
          v69 = type metadata accessor for LibraryPlayPauseAction(0);
          swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
          BYTE2(v91) = v59;
          LOWORD(v91) = v98;
          BYTE2(v90) = 0;
          LOWORD(v90) = 258;
          v44 = LibraryPlayPauseAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:isSmartPlayButton:isWidgetPlayButton:timestamp:waitForEngine:shouldPreventQueueing:actionMetrics:)(v96, v97, v67, v68, v95, v93 & 1, v14, 0, v90, v94, v91, v11);
          v4 = v99;
LABEL_42:
          v101 = type metadata accessor for Action(0);
          v102 = sub_89A0((unint64_t *)&qword_3D9C10, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
          v100[0] = v44;
          v79 = *(_QWORD *)(v3 + 32);
          swift_retain_n(v44, 2);
          UIControl.setAction(_:for:asPartOf:)(v100, 0x2000, v79);
          swift_release(v44);
          __swift_destroy_boxed_opaque_existential_0(v100);
          goto LABEL_44;
        }
      }
      sub_D210((uint64_t)&v120, (uint64_t)v125, &qword_3D45C8);
      v58 = sub_D210((uint64_t)v125, (uint64_t)&v126, &qword_3D45C8);
      v59 = (v127 & 1) != 0 || v126 < 1;
      goto LABEL_34;
    }
  }
  if (a1)
  {
    v29 = type metadata accessor for PlayAction(0);
    if (swift_dynamicCastClass(a1, v29))
    {
      v99 = v4;
      v30 = (void *)objc_opt_self(UIView);
      v31 = swift_allocObject(&unk_37EBF0, 24, 7);
      *(_QWORD *)(v31 + 16) = v17;
      v110 = sub_AF7F0;
      v111 = v31;
      v106 = _NSConcreteStackBlock;
      v107 = 1107296256;
      v108 = sub_24360;
      v109 = &block_descriptor_31;
      v32 = _Block_copy(&v106);
      v33 = v111;
      v34 = v17;
      v97 = a1;
      swift_retain(a1);
      swift_release(v33);
      objc_msgSend(v30, "animateWithDuration:animations:", v32, 0.15);
      _Block_release(v32);
      v36 = PlayAction.contentId.getter(v35);
      PlayAction.episodeOffer.getter(v37);
      v38 = sub_AE510();
      v98 = v36;
      if (v38 && (sub_D210(v99, (uint64_t)&v106, &qword_3D4310), sub_AEF2C((uint64_t)&v106) != 1))
      {
        if ((v113 & 1) != 0)
        {
          sub_D210((uint64_t)v130, (uint64_t)v100, &qword_3D4310);
          v39 = v103;
          v40 = v104;
        }
        else
        {
          v40 = 0;
          v39 = v112;
        }
      }
      else
      {
        v39 = 0;
        v40 = 1;
      }
      a1 = v97;
      v41 = swift_retain(v97);
      dispatch thunk of Action.actionMetrics.getter(v41);
      v42 = swift_release(a1);
      v43 = type metadata accessor for PlayPauseAction(0, v42);
      swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
      v44 = PlayPauseAction.init(adamId:episodeOffer:timestamp:actionMetrics:)(v98, v8, v39, v40, v11);
      swift_release(a1);
      v4 = v99;
      goto LABEL_42;
    }
    v45 = ((uint64_t (*)(void))type metadata accessor for LibraryPlayPauseAction)();
    v46 = swift_dynamicCastClass(a1, v45);
    if (v46)
    {
      v44 = v46;
      v48 = swift_retain(a1);
      v49 = LibraryPlayPauseAction.episodeUuid.getter(v48);
      v51 = v50;
      swift_bridgeObjectRelease(v50);
      v52 = HIBYTE(v51) & 0xF;
      if ((v51 & 0x2000000000000000) == 0)
        v52 = v49 & 0xFFFFFFFFFFFFLL;
      if (v52)
      {
        v53 = (void *)objc_opt_self(UIView);
        v54 = swift_allocObject(&unk_37EBA0, 24, 7);
        *(_QWORD *)(v54 + 16) = v17;
        v110 = sub_AF7F0;
        v111 = v54;
        v106 = _NSConcreteStackBlock;
        v107 = 1107296256;
        v108 = sub_24360;
        v109 = &block_descriptor_24;
        v55 = _Block_copy(&v106);
        v56 = v111;
        v57 = v17;
LABEL_41:
        swift_release(v56);
        objc_msgSend(v53, "animateWithDuration:animations:", v55, 0.15);
        _Block_release(v55);
        goto LABEL_42;
      }
      v47 = swift_release(a1);
    }
    v70 = type metadata accessor for PlayPauseStationAction(0, v47);
    v71 = swift_dynamicCastClass(a1, v70);
    if (v71)
    {
      v44 = v71;
      v53 = (void *)objc_opt_self(UIView);
      v73 = swift_allocObject(&unk_37EB50, 24, 7);
      *(_QWORD *)(v73 + 16) = v17;
      v110 = sub_AF7F0;
      v111 = v73;
      v106 = _NSConcreteStackBlock;
      v107 = 1107296256;
      v74 = &block_descriptor_17;
LABEL_40:
      v108 = sub_24360;
      v109 = v74;
      v55 = _Block_copy(&v106);
      v56 = v111;
      v78 = v17;
      swift_retain(a1);
      goto LABEL_41;
    }
    v75 = type metadata accessor for FlowAction(0, v72);
    v76 = swift_dynamicCastClass(a1, v75);
    if (v76)
    {
      v44 = v76;
      v53 = (void *)objc_opt_self(UIView);
      v77 = swift_allocObject(&unk_37EB00, 24, 7);
      *(_QWORD *)(v77 + 16) = v17;
      v110 = sub_AF734;
      v111 = v77;
      v106 = _NSConcreteStackBlock;
      v107 = 1107296256;
      v74 = &block_descriptor_7;
      goto LABEL_40;
    }
  }
  objc_msgSend(v17, "setAlpha:", 0.5);
  v44 = 0;
LABEL_44:
  if (*(_BYTE *)(v3 + 25) == 1)
  {
    v80 = swift_bridgeObjectRelease(0xE300000000000000);
LABEL_47:
    v82 = type metadata accessor for Podcasts(0, v80);
    v101 = v82;
    v102 = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v100);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.smartPlayButtonHaptics(_:), v82);
    LOBYTE(v82) = isFeatureEnabled(_:)(v100);
    __swift_destroy_boxed_opaque_existential_0(v100);
    if ((v82 & 1) != 0 && v44)
    {
      sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
      v85 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v84, 0, 0, 0, sub_AC0EC, 0);
      objc_msgSend(v17, "addAction:forControlEvents:", v85, 0x2000);

    }
    goto LABEL_50;
  }
  v81 = _stringCompareWithSmolCheck(_:_:expecting:)(0x79616C50726163, 0xE700000000000000, 5459817, 0xE300000000000000, 0);
  v80 = swift_bridgeObjectRelease(0xE700000000000000);
  if ((v81 & 1) != 0)
    goto LABEL_47;
LABEL_50:
  if (sub_AE510())
  {
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v86 = swift_allocObject(&unk_37EA88, 24, 7);
    swift_weakInit(v86 + 16, v3);
    v87 = (_QWORD *)swift_allocObject(&unk_37EAD8, 200, 7);
    v87[2] = a1;
    v87[3] = v17;
    sub_D210(v4, (uint64_t)(v87 + 4), &qword_3D4310);
    v87[24] = v86;
    swift_retain(a1);
    v88 = v17;
    sub_AEE50(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AEEBC);
    v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v89, 0, 0, 0, sub_AF724, v87);
    objc_msgSend(v88, "addAction:forControlEvents:", v17, 0x2000);

  }
  *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  return result;
}

void sub_AC0EC()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  objc_msgSend(v0, "impactOccurred");

}

void sub_AC134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  _BYTE v56[160];
  _BYTE v57[24];
  _BYTE v58[160];
  _BYTE v59[160];
  char v60;
  char v61;
  __int128 v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  char v74;
  char v75;
  __int128 v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  __int128 v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  _BYTE v92[168];

  sub_D210(a4, (uint64_t)v59, &qword_3D4310);
  sub_D210((uint64_t)v59, (uint64_t)v92, &qword_3D4310);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for EpisodeOffer(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v50 = a5 + 16;
    v20 = type metadata accessor for PlayAction(0);
    if (swift_dynamicCastClass(a2, v20))
    {
      swift_retain(a2);
      UIControl.removeActions(for:)(0x2000uLL);
      sub_D210(a4, (uint64_t)&v60, &qword_3D4310);
      if (sub_AEF2C((uint64_t)&v60) == 1)
      {
        v21 = v92;
      }
      else
      {
        v56[0] = v63 & 1;
        v57[0] = v65 & 1;
        v55 = v68 & 1;
        v54 = v70 & 1;
        v53 = v73 & 1;
        v52 = 1;
        v51 = 1;
        v74 = v60;
        v75 = v61 & 1;
        v76 = v62;
        v77 = v63 & 1;
        v78 = v64;
        v79 = v65 & 1;
        v80 = v66;
        v49 = v67;
        v81 = v67;
        v82 = v68 & 1;
        v83 = v69;
        v84 = v70 & 1;
        v85 = v71;
        v48 = v72;
        v86 = v72;
        v87 = v73 & 1;
        v88 = 0;
        v89 = 1;
        v90 = 0;
        v91 = 1;
        UINavigationBar.overrideBackButtonStyle.setter(&v74);
        v24 = v49;
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v24);
        v21 = &v74;
      }
      sub_D210((uint64_t)v21, (uint64_t)v58, &qword_3D4310);
      v25 = sub_D210((uint64_t)v58, (uint64_t)&v74, &qword_3D4310);
      v26 = PlayAction.contentId.getter(v25);
      v28 = PlayAction.episodeOffer.getter(v27);
      static ActionMetrics.notInstrumented.getter(v28);
      swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      v29 = PlayAction.init(adamId:episodeOffer:timestamp:actionMetrics:)(v26, v19, 0, 1, v16);
    }
    else
    {
      v22 = type metadata accessor for LibraryPlayPauseAction();
      if (!swift_dynamicCastClass(a2, v22))
        return;
      swift_retain(a2);
      UIControl.removeActions(for:)(0x2000uLL);
      sub_D210(a4, (uint64_t)&v60, &qword_3D4310);
      if (sub_AEF2C((uint64_t)&v60) == 1)
      {
        v23 = v92;
      }
      else
      {
        v56[0] = v63 & 1;
        v57[0] = v65 & 1;
        v55 = v68 & 1;
        v54 = v70 & 1;
        v53 = v73 & 1;
        v52 = 1;
        v51 = 1;
        v74 = v60;
        v75 = v61 & 1;
        v76 = v62;
        v77 = v63 & 1;
        v78 = v64;
        v79 = v65 & 1;
        v80 = v66;
        v49 = v67;
        v81 = v67;
        v82 = v68 & 1;
        v83 = v69;
        v84 = v70 & 1;
        v85 = v71;
        v48 = v72;
        v86 = v72;
        v87 = v73 & 1;
        v88 = 0;
        v89 = 1;
        v90 = 0;
        v91 = 1;
        UINavigationBar.overrideBackButtonStyle.setter(&v74);
        v30 = v49;
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRetain(v30);
        v23 = &v74;
      }
      sub_D210((uint64_t)v23, (uint64_t)v58, &qword_3D4310);
      sub_D210((uint64_t)v58, (uint64_t)&v74, &qword_3D4310);
      v32 = LibraryPlayPauseAction.episodeUuid.getter(v31);
      v34 = v33;
      v35 = LibraryPlayPauseAction.episodeAdamId.getter();
      v37 = v36 & 1;
      v38 = type metadata accessor for EpisodeListSettings(0);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v10, 1, 1, v38);
      static ActionMetrics.notInstrumented.getter(v39);
      v40 = type metadata accessor for LibraryPlayAction(0);
      swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
      v29 = LibraryPlayAction.init(episodeUuid:episodeAdamId:channelAdamId:settings:showPlayerIfPlaying:forcePlay:title:timestamp:actionMetrics:)(v32, v34, v35, v37, 0, 1, v10, 2, 2, 0, 0, 0, 1, v16);
    }
    v41 = v29;
    v42 = v50;
    swift_beginAccess(v50, v57, 0, 0);
    Strong = swift_weakLoadStrong(v42);
    if (Strong)
    {
      v44 = Strong;
      v45 = Strong + 88;
      sub_D210(Strong + 88, (uint64_t)v56, &qword_3D4310);
      sub_D210((uint64_t)&v74, v45, &qword_3D4310);
      swift_retain(v41);
      sub_AEE50((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AEEBC);
      sub_AEE50((uint64_t)v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
      sub_AACC4(0);
      *(_BYTE *)(v44 + 257) = 0;
      v46 = type metadata accessor for EpisodePlayState(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v13, 1, 1, v46);
      sub_AD380((uint64_t)v13);
      v47 = *(_QWORD *)(v44 + 272);
      *(_QWORD *)(v44 + 264) = 0;
      *(_QWORD *)(v44 + 272) = 0;
      swift_bridgeObjectRelease(v47);
      sub_AEC9C(0);
      sub_AB5DC(v41, &v74);
      sub_AC7DC(v41, (uint64_t)&v74);
      swift_release(a2);
      swift_release(v41);
      sub_AEE50((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
      swift_release(v44);
      swift_release(v41);
    }
    else
    {
      swift_release(a2);
      swift_release(v41);
      sub_AEE50((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
    }
  }
}

void sub_AC7DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[8];
  _OWORD v56[5];
  _OWORD v57[5];
  _OWORD v58[2];
  _BYTE v59[16];
  uint64_t v60;
  uint64_t v61;

  v3 = v2;
  v6 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v6);
  v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EpisodeOffer(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v3[35])
  {
    sub_D210(a2, (uint64_t)v55, &qword_3D4310);
    if (sub_AEF2C((uint64_t)v55) != 1)
    {
      v57[3] = v55[6];
      v57[4] = v55[7];
      v58[0] = v56[0];
      *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v56 + 9);
      v56[4] = v55[2];
      v57[0] = v55[3];
      v57[1] = v55[4];
      v57[2] = v55[5];
      v56[2] = v55[0];
      v56[3] = v55[1];
      sub_D210((uint64_t)v57, (uint64_t)v59, (uint64_t *)&unk_3DBE40);
      sub_D210((uint64_t)v59, (uint64_t)&v60, (uint64_t *)&unk_3DBE40);
      v13 = v61;
      if (v61)
      {
        v14 = v60;
        v15 = v3[5];
        v16 = type metadata accessor for PlaybackStatusPresenter(0);
        swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
        sub_AF6B0((uint64_t)v59);
        swift_retain(v15);
        v17 = sub_276AA0(v14, v13, v15);
        sub_AEC9C((uint64_t)v17);
        swift_release(v17);
        return;
      }
    }
    if (!a1)
      goto LABEL_18;
    v18 = type metadata accessor for PlayAction(0);
    if (swift_dynamicCastClass(a1, v18))
    {
      v19 = swift_retain(a1);
      v20 = Action.title.getter(v19);
      v21 = v3[34];
      v3[33] = v20;
      v3[34] = v22;
      v23 = swift_bridgeObjectRelease(v21);
      v24 = PlayAction.episodeOffer.getter(v23);
      v25 = EpisodeOffer.contentId.getter(v24);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v26 = v3[5];
      v27 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      swift_retain(v26);
      v28 = sub_276978(v25, v26);
LABEL_11:
      v39 = v28;
      sub_AEC9C((uint64_t)v28);
      swift_release(a1);
      swift_release(v39);
      return;
    }
    v29 = type metadata accessor for LibraryPlayPauseAction();
    if (swift_dynamicCastClass(a1, v29))
    {
      v30 = swift_retain(a1);
      v31 = LibraryPlayPauseAction.episodeUuid.getter(v30);
      v33 = v32;
      v34 = v3[5];
      v35 = type metadata accessor for PlaybackStatusPresenter(0);
      swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
      swift_retain(v34);
      v36 = v31;
      v37 = v33;
      v38 = v34;
LABEL_10:
      v28 = sub_276AA0(v36, v37, v38);
      goto LABEL_11;
    }
    v40 = type metadata accessor for PlayPauseStationAction();
    if (swift_dynamicCastClass(a1, v40))
    {
      v42 = swift_retain(a1);
      v43 = PlayPauseStationAction.episodeUuid.getter(v42);
      if (v44)
      {
        v45 = v43;
        v46 = v44;
        v47 = v3[5];
        v48 = type metadata accessor for PlaybackStatusPresenter(0);
        swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
        swift_retain(v47);
        v36 = v45;
        v37 = v46;
        v38 = v47;
        goto LABEL_10;
      }
      v41 = swift_release(a1);
    }
    v49 = Action.title.getter(v41);
    if (v50)
    {
      v51 = v3[34];
      v3[33] = v49;
      v3[34] = v50;
      swift_bridgeObjectRelease(v51);
      v52 = v8;
      v53 = v6;
      v54 = 4;
    }
    else
    {
LABEL_18:
      v52 = v8;
      v53 = v6;
      v54 = 5;
    }
    swift_storeEnumTagMultiPayload(v52, v53, v54);
    sub_AE7D4((uint64_t)v8);
    sub_AEEF0((uint64_t)v8);
  }
}

uint64_t sub_ACB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v8;
  int v9;
  char v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[160];
  _BYTE v26[160];
  _QWORD v27[19];
  char v28;
  _BYTE v29[160];
  _QWORD v30[17];
  unsigned __int8 v31;
  _BYTE v32[160];
  _BYTE v33[176];
  Swift::String v34;

  v3 = type metadata accessor for EpisodePlayState(0);
  v4 = __chkstk_darwin(v3);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v7 = &v25[-v6];
  if (!sub_AE674())
    goto LABEL_6;
  sub_D210(v1 + 88, (uint64_t)v32, &qword_3D4310);
  sub_D210((uint64_t)v32, (uint64_t)v30, &qword_3D4310);
  sub_D210((uint64_t)v32, (uint64_t)v33, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v33) == 1
    || (sub_D210((uint64_t)v32, (uint64_t)v27, &qword_3D4310),
        v8 = *(double *)&v30[16],
        v9 = v31,
        sub_D210((uint64_t)v30, (uint64_t)v29, &qword_3D4310),
        sub_AB284((uint64_t)v27),
        sub_AEE50((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8), v9 == 1))
  {
    sub_D210(v1 + 88, (uint64_t)v29, &qword_3D4310);
    sub_D210((uint64_t)v29, (uint64_t)v27, &qword_3D4310);
    sub_D210((uint64_t)v29, (uint64_t)v30, &qword_3D4310);
    if (sub_AEF2C((uint64_t)v30) == 1
      || (sub_D210((uint64_t)v29, (uint64_t)v25, &qword_3D4310),
          v8 = *(double *)&v27[18],
          v10 = v28,
          sub_D210((uint64_t)v27, (uint64_t)v26, &qword_3D4310),
          sub_AB284((uint64_t)v25),
          sub_AEE50((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8), (v10 & 1) != 0))
    {
LABEL_6:
      sub_F8BC(a1, (uint64_t)v7);
      v11 = (char *)&loc_ACD54 + *((int *)qword_AD368 + swift_getEnumCaseMultiPayload(v7, v3));
      __asm { BR              X10 }
    }
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  objc_msgSend(v12, "setStyle:", 1);
  v13 = objc_msgSend(v12, "stringFromSeconds:", v8);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18._countAndFlagsBits = 0xD000000000000025;
  v34._object = (void *)0xE000000000000000;
  v18._object = (void *)0x800000000030AE50;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v34);

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_49BB8();
  *(_QWORD *)(v22 + 32) = v14;
  *(_QWORD *)(v22 + 40) = v16;
  v23 = static String.localizedStringWithFormat(_:_:)(v20._countAndFlagsBits, v20._object, v22);

  swift_bridgeObjectRelease(v20._object);
  swift_bridgeObjectRelease(v22);
  return v23;
}

uint64_t sub_AD380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v24;
  _BYTE v25[24];

  v2 = v1;
  v4 = type metadata accessor for Glyph(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for EpisodePlayState(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState, v25, 33, 0);
  v24 = a1;
  sub_AF784(a1, v15);
  swift_endAccess(v25);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v17 = (void *)Strong;
    sub_D184(v15, (uint64_t)v10, &qword_3D4328);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {

      sub_D1D4((uint64_t)v10, &qword_3D4328);
    }
    else
    {
      sub_AF608((uint64_t)v10, (uint64_t)v14);
      v18 = sub_AD8A4((uint64_t)v14);
      v19 = (void *)Glyph.image.getter(v18);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v17, "setImage:forState:", v19, 0);

      sub_ACB6C((uint64_t)v14);
      v21 = v20;
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "setTitle:forState:", v22, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

      sub_AEEF0((uint64_t)v14);
    }
  }
  return sub_D1D4(v24, &qword_3D4328);
}

uint64_t sub_AD5AC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  uint64_t v22;
  _BYTE v23[160];
  _BYTE v24[160];
  _BYTE v25[32];
  uint64_t v26;
  char v27;
  _BYTE v28[160];
  _BYTE v29[160];

  if ((*(_BYTE *)(v2 + 257) & 1) == 0)
  {
    v3 = v2;
    if (!*(_QWORD *)(v2 + 248))
    {
      v5 = result;
      sub_D210(v2 + 88, (uint64_t)v28, &qword_3D4310);
      sub_D210((uint64_t)v28, (uint64_t)v25, &qword_3D4310);
      sub_D210((uint64_t)v28, (uint64_t)v29, &qword_3D4310);
      result = sub_AEF2C((uint64_t)v29);
      if ((_DWORD)result != 1)
      {
        sub_D210((uint64_t)v28, (uint64_t)v23, &qword_3D4310);
        v6 = v26;
        v7 = v27;
        sub_D210((uint64_t)v25, (uint64_t)v24, &qword_3D4310);
        sub_AB284((uint64_t)v23);
        result = sub_AEE50((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
        if ((v7 & 1) == 0)
        {
          v8 = (_BYTE *)(v3 + 257);
          swift_beginAccess(v3 + 48, v20, 0, 0);
          sub_D184(v3 + 48, (uint64_t)v21, &qword_3D4320);
          if (v22)
          {
            sub_1D5D4((uint64_t)v21, (uint64_t)v17);
            sub_D1D4((uint64_t)v21, &qword_3D4320);
            v9 = v18;
            v10 = v19;
            __swift_project_boxed_opaque_existential_1(v17, v18);
            v11 = dispatch thunk of StoreDataProvider.fetchChannelSubscriptionOffers(for:)(v6, v9, v10);
            v12 = swift_allocObject(&unk_37EA88, 24, 7);
            swift_weakInit(v12 + 16, v3);
            v13 = (_QWORD *)swift_allocObject(&unk_37EAB0, 40, 7);
            v13[2] = v12;
            v13[3] = v5;
            v13[4] = a2;
            v14 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
            v15 = swift_retain(a2);
            v16[3] = v14;
            v16[4] = &protocol witness table for OS_dispatch_queue;
            v16[0] = static OS_dispatch_queue.main.getter(v15);
            Promise.then(getResult:on:)(sub_AF69C, v13, v16);
            swift_release(v11);
            swift_release(v13);
            __swift_destroy_boxed_opaque_existential_0(v16);
            result = __swift_destroy_boxed_opaque_existential_0(v17);
          }
          else
          {
            result = sub_D1D4((uint64_t)v21, &qword_3D4320);
          }
          *v8 = 1;
        }
      }
    }
  }
  return result;
}

void sub_AD7E4(uint64_t *a1, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  if (*((_BYTE *)a1 + 8) == 1)
  {
    swift_beginAccess(v3, v12, 0, 0);
    Strong = swift_weakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      sub_AACC4((uint64_t)_swiftEmptyArrayStorage);
      swift_release(v5);
    }
  }
  else
  {
    v7 = *a1;
    swift_beginAccess(v3, v12, 0, 0);
    v8 = swift_weakLoadStrong(v3);
    if (v8)
    {
      v10 = v8;
      v11 = swift_bridgeObjectRetain(v7);
      sub_AACC4(v11);
      v9 = swift_release(v10);
    }
    a3(v9);
  }
}

uint64_t sub_AD8A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v15;

  v2 = type metadata accessor for EpisodePlayState(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v15 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v15 - v9;
  if (sub_AE674())
  {
    v11 = 0x6C69662E79616C70;
    v12 = 0xE90000000000006CLL;
    return Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(v11, v12, 0x4031000000000000, 0, 5, -1, 0, 0, 0);
  }
  sub_F8BC(a1, (uint64_t)v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v2);
  switch(EnumCaseMultiPayload)
  {
    case 0:
      goto LABEL_8;
    case 2:
      sub_F8BC((uint64_t)v10, (uint64_t)v5);
      Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C632E776F727261, 0xEF657369776B636FLL, 0x4031000000000000, 0, 5, -1, 0, 0, 0);
      sub_D1D4((uint64_t)v5, &qword_3D0A50);
      return sub_AEEF0((uint64_t)v10);
    case 3:
      sub_F8BC((uint64_t)v10, (uint64_t)v8);
      if ((v8[16] & 1) == 0)
      {
LABEL_8:
        sub_AEEF0((uint64_t)v10);
        v11 = 0x69662E6573756170;
        v12 = 0xEA00000000006C6CLL;
        return Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(v11, v12, 0x4031000000000000, 0, 5, -1, 0, 0, 0);
      }
      break;
  }
  Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x6C69662E79616C70, 0xE90000000000006CLL, 0x4031000000000000, 0, 5, -1, 0, 0, 0);
  return sub_AEEF0((uint64_t)v10);
}

uint64_t sub_ADAB8(uint64_t a1)
{
  uint64_t v1;
  char v3;
  unint64_t v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t countAndFlagsBits;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[16];
  _QWORD v17[2];

  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
LABEL_6:
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v15 = 0xE000000000000000;
    v6 = 0x800000000030ADA0;
    v7 = 0xD000000000000016;
    goto LABEL_7;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(5459817, 0xE300000000000000, 0x79616C50726163, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((v3 & 1) != 0)
    goto LABEL_6;
  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 2)
    goto LABEL_6;
  if (v4 == 2)
  {
    if ((*(_BYTE *)(v1 + 256) & 1) == 0)
    {
      sub_D210(a1 + 48, (uint64_t)v16, (uint64_t *)&unk_3DBE40);
      sub_D210((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_3DBE40);
      if (v17[1])
      {
        swift_retain(v1);
        sub_AD5AC((uint64_t)sub_AF6A8, v1);
        swift_release(v1);
      }
      countAndFlagsBits = *(_QWORD *)(v1 + 264);
      v13 = *(_QWORD *)(v1 + 272);
      if (v13)
      {
        swift_bridgeObjectRetain(v13);
        return countAndFlagsBits;
      }
      v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0xD00000000000001FLL;
      v15 = 0xE000000000000000;
      v6 = 0x800000000030B080;
      v8 = countAndFlagsBits;
LABEL_8:
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v10 = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)(unint64_t)v8, (NSBundle)v5, v9, *(Swift::String *)(&v15 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
    }
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7 = 0xD000000000000026;
    v15 = 0xE000000000000000;
    v6 = 0x800000000030B0A0;
LABEL_7:
    v8 = 0;
    goto LABEL_8;
  }
  type metadata accessor for MTEpisodeEntitlementState(0);
  v17[0] = v4;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v14, v17, v14, &type metadata for Int64);
  __break(1u);
  return result;
}

uint64_t sub_ADD00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  _BYTE v22[24];

  v2 = type metadata accessor for Glyph(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  __chkstk_darwin(v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for EpisodePlayState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v14 = (void *)result;
    v15 = a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState;
    swift_beginAccess(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState, v22, 0, 0);
    sub_D184(v15, (uint64_t)v8, &qword_3D4328);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      return sub_D1D4((uint64_t)v8, &qword_3D4328);
    }
    else
    {
      sub_AF608((uint64_t)v8, (uint64_t)v12);
      v16 = sub_AD8A4((uint64_t)v12);
      v17 = (void *)Glyph.image.getter(v16);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v14, "setImage:forState:", v17, 0);

      sub_ACB6C(v12);
      v19 = v18;
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v14, "setTitle:forState:", v20, 0, swift_bridgeObjectRelease(v19).n128_f64[0]);

      return sub_AEEF0((uint64_t)v12);
    }
  }
  return result;
}

uint64_t sub_ADF00(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  const char *v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t countAndFlagsBits;
  unint64_t v21;

  v3 = EpisodeType.rawValue.getter(*a1);
  v5 = v4;
  v6 = EpisodeType.rawValue.getter(2);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_11:
    v15 = *(_BYTE *)(v1 + 25);
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((v15 & 1) != 0)
    {
      v14 = 0xD00000000000001ELL;
      v21 = 0xE000000000000000;
      v16 = "SMART_PLAY_BUTTON_PLAY_TRAILER";
    }
    else
    {
      v14 = 0xD000000000000019;
      v21 = 0xE000000000000000;
      v16 = "SMART_PLAY_BUTTON_TRAILER";
    }
    goto LABEL_15;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
    goto LABEL_11;
  if ((a1[120] & 1) != 0 || *((_QWORD *)a1 + 14) != 4)
  {
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v14 = 0xD000000000000020;
    v21 = 0xE000000000000000;
    v16 = "SMART_PLAY_BUTTON_LATEST_EPISODE";
LABEL_15:
    v13 = (unint64_t)(v16 - 32) | 0x8000000000000000;
    goto LABEL_16;
  }
  v11 = *(_BYTE *)(v1 + 25);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v11 & 1) == 0)
  {
    v14 = 0xD00000000000001FLL;
    v21 = 0xE000000000000000;
    v16 = "SMART_PLAY_BUTTON_FIRST_EPISODE";
    goto LABEL_15;
  }
  v21 = 0xE000000000000000;
  v13 = 0x800000000030ADA0;
  v14 = 0xD000000000000016;
LABEL_16:
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v18 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v14, (Swift::String_optional)0, (NSBundle)v12, v17, *(Swift::String *)(&v21 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_AE0E8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  const char *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  unint64_t v25;
  id v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t countAndFlagsBits;
  char v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  char v39;
  Swift::String v40;
  Swift::String v41;

  if (a1[88])
    v3 = 0;
  else
    v3 = *((_QWORD *)a1 + 10);
  v4 = EpisodeType.rawValue.getter(*a1);
  v6 = v5;
  v7 = EpisodeType.rawValue.getter(2);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
    {
      if (v3 <= 0)
      {
        v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      }
      else
      {
        sub_D210((uint64_t)(a1 + 64), (uint64_t)v37, &qword_3D45C8);
        sub_D210((uint64_t)v37, (uint64_t)&v38, &qword_3D45C8);
        if ((v39 & 1) == 0)
        {
          v12 = v38;
          if (v38 >= 1)
          {
            if (v3 == 1 && v38 == 1)
            {
              v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v14 = 0xD00000000000001FLL;
              v36 = 0xE000000000000000;
              v15 = "SMART_PLAY_BUTTON_FIRST_EPISODE";
            }
            else
            {
              v30 = *(_BYTE *)(v1 + 25);
              v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              if ((v30 & 1) != 0)
              {
                v31._countAndFlagsBits = 0xD000000000000017;
                v41._object = (void *)0xE000000000000000;
                v31._object = (void *)0x800000000030AF90;
                v32._countAndFlagsBits = 0;
                v32._object = (void *)0xE000000000000000;
                v41._countAndFlagsBits = 0;
                v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v13, v32, v41);

                v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
                v35 = swift_allocObject(v34, 112, 7);
                *(_OWORD *)(v35 + 16) = xmmword_2EFA20;
                *(_QWORD *)(v35 + 56) = &type metadata for Int64;
                *(_QWORD *)(v35 + 64) = &protocol witness table for Int64;
                *(_QWORD *)(v35 + 32) = v3;
                *(_QWORD *)(v35 + 96) = &type metadata for Int64;
                *(_QWORD *)(v35 + 104) = &protocol witness table for Int64;
                *(_QWORD *)(v35 + 72) = v12;
                countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v33._countAndFlagsBits, v33._object, v35);
                swift_bridgeObjectRelease(v33._object);
                swift_bridgeObjectRelease(v35);
                return countAndFlagsBits;
              }
              v14 = 0xD00000000000001ELL;
              v36 = 0xE000000000000000;
              v15 = "SMART_PLAY_BUTTON_NEXT_EPISODE";
            }
            goto LABEL_21;
          }
        }
        v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      }
      v13 = v26;
      v36 = 0xE000000000000000;
      v25 = 0x800000000030ADA0;
      v14 = 0xD000000000000016;
      goto LABEL_25;
    }
  }
  if (v3 > 1)
  {
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17._countAndFlagsBits = 0xD000000000000015;
    v40._object = (void *)0xE000000000000000;
    v17._object = (void *)0x800000000030B030;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v40);

    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D22C8);
    v21 = swift_allocObject(v20, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v21 + 56) = &type metadata for Int64;
    *(_QWORD *)(v21 + 64) = &protocol witness table for Int64;
    *(_QWORD *)(v21 + 32) = v3;
    v22 = static String.localizedStringWithFormat(_:_:)(v19._countAndFlagsBits, v19._object, v21);
    swift_bridgeObjectRelease(v19._object);
    swift_bridgeObjectRelease(v21);
    return v22;
  }
  v24 = *(_BYTE *)(v1 + 25);
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v24 & 1) != 0)
  {
    v14 = 0xD00000000000001ELL;
    v36 = 0xE000000000000000;
    v15 = "SMART_PLAY_BUTTON_PLAY_TRAILER";
  }
  else
  {
    v14 = 0xD000000000000019;
    v36 = 0xE000000000000000;
    v15 = "SMART_PLAY_BUTTON_TRAILER";
  }
LABEL_21:
  v25 = (unint64_t)(v15 - 32) | 0x8000000000000000;
LABEL_25:
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v28 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v14, (Swift::String_optional)0, (NSBundle)v13, v27, *(Swift::String *)(&v36 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

BOOL sub_AE510()
{
  uint64_t v0;
  char v1;
  double v2;
  char v3;
  _BYTE v5[160];
  _BYTE v6[160];
  _BYTE v7[144];
  double v8;
  char v9;
  _BYTE v10[160];
  _BYTE v11[160];
  _BYTE v12[160];
  _BYTE v13[160];

  sub_D210(v0 + 88, (uint64_t)v12, &qword_3D4310);
  sub_D210((uint64_t)v12, (uint64_t)v11, &qword_3D4310);
  sub_D210((uint64_t)v12, (uint64_t)v13, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v13) != 1)
  {
    sub_D210((uint64_t)v12, (uint64_t)v7, &qword_3D4310);
    v1 = v11[136];
    sub_D210((uint64_t)v11, (uint64_t)v10, &qword_3D4310);
    sub_AB284((uint64_t)v7);
    sub_AEE50((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
    if ((v1 & 1) == 0)
      return 1;
  }
  sub_D210(v0 + 88, (uint64_t)v10, &qword_3D4310);
  sub_D210((uint64_t)v10, (uint64_t)v7, &qword_3D4310);
  sub_D210((uint64_t)v10, (uint64_t)v11, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v11) == 1)
    return 0;
  sub_D210((uint64_t)v10, (uint64_t)v5, &qword_3D4310);
  v2 = v8;
  v3 = v9;
  sub_D210((uint64_t)v7, (uint64_t)v6, &qword_3D4310);
  sub_AB284((uint64_t)v5);
  sub_AEE50((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
  return (v3 & 1) == 0 && v2 >= 1.0;
}

BOOL sub_AE674()
{
  uint64_t v0;
  double v1;
  char v2;
  char v3;
  _BYTE v5[160];
  _BYTE v6[160];
  _BYTE v7[144];
  double v8;
  char v9;
  _BYTE v10[160];
  _BYTE v11[128];
  double v12;
  char v13;
  _BYTE v14[160];
  _BYTE v15[160];

  sub_D210(v0 + 88, (uint64_t)v14, &qword_3D4310);
  sub_D210((uint64_t)v14, (uint64_t)v11, &qword_3D4310);
  sub_D210((uint64_t)v14, (uint64_t)v15, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v15) != 1)
  {
    sub_D210((uint64_t)v14, (uint64_t)v7, &qword_3D4310);
    v1 = v12;
    v2 = v13;
    sub_D210((uint64_t)v11, (uint64_t)v10, &qword_3D4310);
    sub_AB284((uint64_t)v7);
    sub_AEE50((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
    if ((v2 & 1) == 0)
      return v1 >= 1.0;
  }
  sub_D210(v0 + 88, (uint64_t)v10, &qword_3D4310);
  sub_D210((uint64_t)v10, (uint64_t)v7, &qword_3D4310);
  sub_D210((uint64_t)v10, (uint64_t)v11, &qword_3D4310);
  if (sub_AEF2C((uint64_t)v11) == 1)
    return 0;
  sub_D210((uint64_t)v10, (uint64_t)v5, &qword_3D4310);
  v1 = v8;
  v3 = v9;
  sub_D210((uint64_t)v7, (uint64_t)v6, &qword_3D4310);
  sub_AB284((uint64_t)v5);
  sub_AEE50((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
  return (v3 & 1) == 0 && v1 >= 1.0;
}

uint64_t sub_AE7D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  _QWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v2 = v1;
  v24 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D45C0);
  __chkstk_darwin(v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v23 - v10;
  v12 = type metadata accessor for EpisodePlayState(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v23[1] = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  __chkstk_darwin(v16);
  v18 = (char *)v23 - v17;
  v19 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState;
  swift_beginAccess(v19, v25, 0, 0);
  sub_D184(v19, (uint64_t)v11, &qword_3D4328);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v23[0] = v2;
    sub_AF608((uint64_t)v11, (uint64_t)v18);
    v21 = (uint64_t)&v5[*(int *)(v3 + 48)];
    sub_F8BC(v24, (uint64_t)v5);
    sub_F8BC((uint64_t)v18, v21);
    v22 = (char *)&loc_AE9F8 + 4 * byte_2F3700[swift_getEnumCaseMultiPayload(v5, v12)];
    __asm { BR              X10 }
  }
  sub_D1D4((uint64_t)v11, &qword_3D4328);
  sub_F8BC(v24, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  return sub_AD380((uint64_t)v9);
}

_QWORD *SmartPlayButtonController.deinit()
{
  _QWORD *v0;
  _BYTE v2[160];

  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_release(v0[4]);
  swift_release(v0[5]);
  sub_D1D4((uint64_t)(v0 + 6), &qword_3D4320);
  sub_D210((uint64_t)(v0 + 11), (uint64_t)v2, &qword_3D4310);
  sub_AEE50((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_AB2B8);
  swift_bridgeObjectRelease(v0[31]);
  swift_bridgeObjectRelease(v0[34]);
  swift_release(v0[35]);
  sub_D1D4((uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews25SmartPlayButtonController_currentPlayState, &qword_3D4328);
  return v0;
}

uint64_t SmartPlayButtonController.__deallocating_deinit()
{
  uint64_t v0;

  SmartPlayButtonController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_AEC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = type metadata accessor for EpisodePlayState(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_QWORD *)(v2 + 280);
  *(_QWORD *)(v2 + 280) = a1;
  swift_retain(a1);
  swift_release(v7);
  v8 = *(_QWORD *)(v2 + 280);
  if (v8)
  {
    *(_QWORD *)(v8 + 40) = &off_37E898;
    v9 = swift_unknownObjectWeakAssign(v8 + 32, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v11 = Strong;
      v12 = *(_QWORD *)(v8 + 40);
      ObjectType = swift_getObjectType();
      v14 = v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
      swift_beginAccess(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v19, 0, 0);
      sub_F8BC(v14, (uint64_t)v6);
      v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v12 + 8);
      swift_retain(v8);
      v16 = swift_retain(v2);
      v15(v6, ObjectType, v12, v16);
      swift_unknownObjectRelease(v11);
      sub_AEEF0((uint64_t)v6);
      swift_release(v2);
    }
    else
    {
      swift_retain(v8);
    }
    v17 = v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState;
    swift_beginAccess(v8 + OBJC_IVAR____TtC23ShelfKitCollectionViews23PlaybackStatusPresenter_currentState, v18, 0, 0);
    sub_F8BC(v17, (uint64_t)v6);
    sub_AE7D4((uint64_t)v6);
    swift_release(v8);
    sub_AEEF0((uint64_t)v6);
  }
}

uint64_t sub_AEE1C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 104);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_AEE50(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 152);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    v4);
  return a1;
}

uint64_t sub_AEEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a8 != 1)
  {
    swift_bridgeObjectRetain(a14);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

uint64_t sub_AEEF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_AEF2C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_AEF54()
{
  unint64_t result;

  result = qword_3D4330;
  if (!qword_3D4330)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SmartPlayContext, &type metadata for SmartPlayContext);
    atomic_store(result, (unint64_t *)&qword_3D4330);
  }
  return result;
}

unint64_t sub_AEF9C()
{
  unint64_t result;

  result = qword_3D4338;
  if (!qword_3D4338)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SmartPlayPlatformContext, &type metadata for SmartPlayPlatformContext);
    atomic_store(result, (unint64_t *)&qword_3D4338);
  }
  return result;
}

ValueMetadata *type metadata accessor for SmartPlayContext()
{
  return &type metadata for SmartPlayContext;
}

uint64_t _s23ShelfKitCollectionViews16SmartPlayContextOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_AF044 + 4 * byte_2F370B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_AF078 + 4 * byte_2F3706[v4]))();
}

uint64_t sub_AF078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_AF080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xAF088);
  return result;
}

uint64_t sub_AF094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xAF09CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_AF0A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_AF0A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SmartPlayPlatformContext()
{
  return &type metadata for SmartPlayPlatformContext;
}

uint64_t sub_AF0C4()
{
  return type metadata accessor for SmartPlayButtonController(0);
}

uint64_t type metadata accessor for SmartPlayButtonController(uint64_t a1)
{
  uint64_t result;

  result = qword_3D4368;
  if (!qword_3D4368)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmartPlayButtonController);
  return result;
}

void sub_AF108(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_2F3970;
  v4[1] = &unk_2F3988;
  v4[2] = &unk_2F3988;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = &unk_2F39A0;
  v4[6] = &unk_2F39B8;
  v4[7] = &unk_2F39D0;
  v4[8] = &unk_2F39E8;
  v4[9] = &unk_2F3988;
  v4[10] = &unk_2F3A00;
  v4[11] = &unk_2F39D0;
  sub_AF1FC(319);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

uint64_t method lookup function for SmartPlayButtonController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SmartPlayButtonController);
}

uint64_t dispatch thunk of SmartPlayButtonController.__allocating_init(button:context:platform:objectGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of SmartPlayButtonController.buttonTitle(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

void sub_AF1FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D4378)
  {
    v2 = type metadata accessor for EpisodePlayState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D4378);
  }
}

uint64_t destroy for SmartPlayEpisode(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
}

uint64_t initializeWithCopy for SmartPlayEpisode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v6 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v6;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for SmartPlayEpisode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v12;
  v13 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v13;
  v14 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v14;
  return a1;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SmartPlayEpisode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartPlayEpisode(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 153))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SmartPlayEpisode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 153) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SmartPlayEpisode()
{
  return &type metadata for SmartPlayEpisode;
}

uint64_t sub_AF608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodePlayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_AF64C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_AF670()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_AF69C(uint64_t *a1)
{
  uint64_t v1;

  sub_AD7E4(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_AF6A8()
{
  uint64_t v0;

  return sub_ADD00(v0);
}

uint64_t sub_AF6B0(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_AF6D8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 16));

  v1 = *(_QWORD *)(v0 + 88);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  }
  swift_release(*(_QWORD *)(v0 + 192));
  return swift_deallocObject(v0, 200, 7);
}

void sub_AF724(uint64_t a1)
{
  uint64_t *v1;

  sub_AC134(a1, v1[2], v1[3], (uint64_t)(v1 + 4), v1[24]);
}

id sub_AF734()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_7(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_AF760()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_AF784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_AF988()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaletteBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PaletteBackgroundView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21PaletteBackgroundView);
}

UIFontTextStyle sub_AF9E8()
{
  xmmword_3FAC10 = xmmword_2F0A30;
  byte_3FAC20 = 0;
  qword_3FAC28 = (uint64_t)UIFontTextStyleBody;
  unk_3FAC30 = 0x8000;
  *(_OWORD *)&qword_3FAC38 = 0u;
  *(_OWORD *)&qword_3FAC48 = 0u;
  *(_OWORD *)&qword_3FAC58 = 0u;
  *(_OWORD *)&qword_3FAC68 = 0u;
  qword_3FAC78 = 0;
  word_3FAC80 = 0x8000;
  return UIFontTextStyleBody;
}

void sub_AFA34()
{
  qword_3FAC88 = 0x4024000000000000;
}

void sub_AFA44()
{
  qword_3D4608 = 0x4010000000000000;
}

double static PodcastsSpacer.macPlayerBarShadowHeight.getter()
{
  return sub_AFAF4(&qword_3CF260, (uint64_t)&qword_3D4608, (uint64_t)sub_AFA44);
}

void sub_AFA70()
{
  qword_3D4610 = 0x404A000000000000;
}

double static PodcastsSpacer.macPlayerBarHeight.getter()
{
  return sub_AFAF4(&qword_3CF268, (uint64_t)&qword_3D4610, (uint64_t)sub_AFA70);
}

void sub_AFA9C()
{
  qword_3D4618 = 0x4040000000000000;
}

double static PodcastsSpacer.macGlobalTopSafeAreaInset.getter()
{
  return sub_AFAF4(&qword_3CF270, (uint64_t)&qword_3D4618, (uint64_t)sub_AFA9C);
}

void sub_AFAC8()
{
  qword_3D4620 = 0x4043000000000000;
}

double static PodcastsSpacer.macNavBarHeight.getter()
{
  return sub_AFAF4(&qword_3CF278, (uint64_t)&qword_3D4620, (uint64_t)sub_AFAC8);
}

double sub_AFAF4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return *(double *)a2;
}

ValueMetadata *type metadata accessor for PodcastsSpacer()
{
  return &type metadata for PodcastsSpacer;
}

void sub_AFB3C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v0 = (void *)static UIFont.footnoteEmph.getter();
  v1 = (void *)static UIFont.subheadEmph.getter();
  v2 = static UIFont.preferredFont(iOS:mac:)(v0, v1);

  qword_3D4628 = v2;
}

_QWORD *sub_AFBA8()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4038000000000000;
  v2 = 0x4033000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3D4630, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_AFBE8()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4038000000000000;
  v2 = 0x4036000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3D4638, &v2, &v1, &type metadata for CGFloat);
}

uint64_t sub_AFC28()
{
  uint64_t result;

  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  result = static UIFont.title2EmphShort.getter();
  qword_3D4640 = result;
  return result;
}

void sub_AFC68(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  unint64_t v22;
  id v23;
  NSString v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t KeyPath;
  void *v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  Swift::String v38;
  id v39;
  uint64_t v40;
  __n128 v41;
  void (*v42)(char *, uint64_t);
  void *v43;
  id v44;
  uint64_t v45;
  void (*v46)(id *, _QWORD);
  uint64_t *v47;
  uint64_t v48;
  void (*v49)(id *, _QWORD);
  uint64_t v50;
  id v51;
  void (*v52)(id *, _QWORD);
  id v53;
  void (*v54)(id *, _QWORD);
  id v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62[2];
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;

  v2 = v1;
  v64 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v3);
  v66 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIListContentConfiguration(0);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v8);
  v10 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for AttributedString(0);
  v63 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v12 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v62 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v62 - v17;
  if (qword_3CF298 != -1)
    swift_once(&qword_3CF298, sub_AFC28);
  v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_3D4640, 1);
  v20 = objc_msgSend(v2, "traitCollection");
  v21 = (char *)objc_msgSend(v20, "layoutDirection");

  if (v21 == (_BYTE *)&dword_0 + 1)
    v22 = 0xEC0000007466656CLL;
  else
    v22 = 0xED00007468676972;
  v23 = v19;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v24, v23);

  v65 = v23;
  if (v25)
  {
    v26 = (void *)objc_opt_self(NSTextAttachment);
    v62[0] = v25;
    v27 = objc_msgSend(v26, "textAttachmentWithImage:", v25);
    v28 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v27);

    AttributedString.init(_:)(v28);
    KeyPath = swift_getKeyPath(&unk_2F3CA8);
    __chkstk_darwin(KeyPath);
    v62[-2] = v30;
    v31 = swift_getKeyPath(&unk_2F3CD8);
    v32 = (void *)objc_opt_self(UIColor);
    v70 = objc_msgSend(v32, "secondaryLabelColor");
    v33 = sub_99EA4();
    AttributedString.subscript.setter(&v70, v31, v33);
    v34 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    v62[1] = v2;
    v35 = objc_msgSend(v2, "traitCollection");
    v36 = (char *)objc_msgSend(v35, "layoutDirection");

    objc_msgSend(v34, "setBaseWritingDirection:", v36 == (_BYTE *)&dword_0 + 1);
    sub_E710(0, (unint64_t *)&qword_3D46A8, NSMutableAttributedString_ptr);
    v37 = *(_QWORD *)(v64 + 24);
    v70 = *(id *)(v64 + 16);
    v71 = v37;
    swift_bridgeObjectRetain(v37);
    v38._countAndFlagsBits = 41154;
    v38._object = (void *)0xA200000000000000;
    String.append(_:)(v38);
    v39 = v70;
    v40 = v71;
    AttributeContainer.init()(v41);
    AttributedString.init(_:attributes:)(v39, v40, v10);
    static AttributedString.+ infix(_:_:)(v12, v18);
    v42 = *(void (**)(char *, uint64_t))(v63 + 8);
    v42(v12, v69);
    v43 = (void *)NSAttributedString.init(_:)(v15);
    v44 = v34;
    objc_msgSend(v43, "addAttribute:value:range:", NSParagraphStyleAttributeName, v44, 0, objc_msgSend(v43, "length"));

    static UIListContentConfiguration.cell()();
    UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(1);
    if (qword_3CF288 != -1)
      swift_once(&qword_3CF288, sub_AFBA8);
    v45 = qword_3D4630;
    v46 = (void (*)(id *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(&v70);
    *v47 = v45;
    v46(&v70, 0);
    if (qword_3CF290 != -1)
      swift_once(&qword_3CF290, sub_AFBE8);
    v48 = qword_3D4638;
    v49 = (void (*)(id *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(&v70);
    *(_QWORD *)(v50 + 16) = v48;
    v49(&v70, 0);
    v51 = objc_msgSend(v32, "secondaryLabelColor");
    v52 = (void (*)(id *, _QWORD))UIListContentConfiguration.textProperties.modify(&v70);
    UIListContentConfiguration.TextProperties.color.setter(v51);
    v52(&v70, 0);
    if (qword_3CF280 != -1)
      swift_once(&qword_3CF280, sub_AFB3C);
    v53 = (id)qword_3D4628;
    v54 = (void (*)(id *, _QWORD))UIListContentConfiguration.textProperties.modify(&v70);
    UIListContentConfiguration.TextProperties.font.setter(v53);
    v54(&v70, 0);
    v55 = v43;
    UIListContentConfiguration.attributedText.setter(v43);
    v56 = v68;
    v72 = v68;
    v73 = &protocol witness table for UIListContentConfiguration;
    v57 = __swift_allocate_boxed_opaque_existential_0(&v70);
    v58 = v67;
    (*(void (**)(_QWORD *, char *, uint64_t))(v67 + 16))(v57, v7, v56);
    v59 = UICollectionViewCell.contentConfiguration.setter(&v70);
    v60 = v66;
    static UIBackgroundConfiguration.clear()(v59);
    v61 = type metadata accessor for UIBackgroundConfiguration(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
    UICollectionViewCell.backgroundConfiguration.setter(v60);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v56);
    v42(v18, v69);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_B0324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FAC90);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FAC90);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Placement.never(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v7, v3);
}

uint64_t type metadata accessor for SubscriptionLinkCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews20SubscriptionLinkCell);
}

uint64_t sub_B0538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CF2A0 != -1)
    swift_once(&qword_3CF2A0, sub_B0324);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FAC90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_B05A8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SubscriptionLinkCell_objectGraph));
}

uint64_t sub_B05B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SubscriptionLinkCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SubscriptionLinkCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_B05EC(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D46B0, v3, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3C68);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_B0644()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000029, 0x800000000030B1A0, "ShelfKitCollectionViews/SubscriptionLinkCell.swift", 50, 2, 66, 0);
  __break(1u);
}

uint64_t sub_B069C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D46B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3C68);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_B06D0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D4678, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3AE8);
}

uint64_t sub_B06FC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D4680, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3B70);
}

uint64_t sub_B0728(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D4688, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3B48);
}

uint64_t sub_B0754(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D4690, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3BA0);
}

uint64_t sub_B0780(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D4698, a2, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionLinkCell, (uint64_t)&unk_2F3BC8);
}

uint64_t sub_B07AC()
{
  return sub_239FC(&qword_3D46A0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Link, (uint64_t)&protocol conformance descriptor for Link);
}

uint64_t sub_B07E8()
{
  return 8;
}

uint64_t sub_B07F4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_B07FC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_B0810(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_B081C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  __n128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  void *v24;
  _OWORD v25[2];
  _BYTE v26[24];
  uint64_t v27;

  v3 = v2;
  swift_beginAccess(&unk_3D5290, v25, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_3D5290);
  swift_endAccess(v25);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v25, v6, v7);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_56AF8((uint64_t)v25, (uint64_t)v26);
  if (v27)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4730);
    if ((swift_dynamicCast(&v24, v26, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v24;
      goto LABEL_9;
    }
  }
  else
  {
    sub_D1D4((uint64_t)v26, &qword_3D1A70);
  }
  v9 = &_swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v25[0] = v9;
  v10 = swift_allocObject(&unk_37F4E8, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = type metadata accessor for GestureRecognizerHandler();
  v12 = swift_allocObject(v11, 40, 7);
  v13 = swift_unknownObjectWeakInit(v12 + 16, 0);
  swift_unknownObjectWeakAssign(v13, v3);
  v14 = swift_allocObject(&unk_37F510, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_B26AC;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v12 + 24) = sub_B8CC0;
  *(_QWORD *)(v12 + 32) = v14;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12 + 16);
  if (Strong)
  {
    v16 = Strong;
    objc_msgSend(Strong, "addTarget:action:", v12, "handleActionFromGestureRecognizer:", swift_retain(a2).n128_f64[0]);

  }
  else
  {
    swift_retain(a2);
  }
  swift_retain(v12);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  v18 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v12);
  specialized Array._endMutation()(v20);
  v21 = *(_QWORD *)&v25[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  swift_beginAccess(&unk_3D5290, v26, 32, 0);
  objc_setAssociatedObject(v3, &unk_3D5290, isa, (char *)&dword_0 + 1);
  swift_endAccess(v26);

  return v12;
}

uint64_t sub_B0A98(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  __n128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  void *v24;
  _OWORD v25[2];
  _BYTE v26[24];
  uint64_t v27;

  v3 = v2;
  swift_beginAccess(&unk_3D5290, v25, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_3D5290);
  swift_endAccess(v25);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v25, v6, v7);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_56AF8((uint64_t)v25, (uint64_t)v26);
  if (v27)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4730);
    if ((swift_dynamicCast(&v24, v26, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v24;
      goto LABEL_9;
    }
  }
  else
  {
    sub_D1D4((uint64_t)v26, &qword_3D1A70);
  }
  v9 = &_swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v25[0] = v9;
  v10 = swift_allocObject(&unk_37EF98, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = type metadata accessor for GestureRecognizerHandler();
  v12 = swift_allocObject(v11, 40, 7);
  v13 = swift_unknownObjectWeakInit(v12 + 16, 0);
  swift_unknownObjectWeakAssign(v13, v3);
  v14 = swift_allocObject(&unk_37EFC0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_B26AC;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v12 + 24) = sub_B36F8;
  *(_QWORD *)(v12 + 32) = v14;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12 + 16);
  if (Strong)
  {
    v16 = Strong;
    objc_msgSend(Strong, "addTarget:action:", v12, "handleActionFromGestureRecognizer:", swift_retain(a2).n128_f64[0]);

  }
  else
  {
    swift_retain(a2);
  }
  swift_retain(v12);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  v18 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v12);
  specialized Array._endMutation()(v20);
  v21 = *(_QWORD *)&v25[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  swift_beginAccess(&unk_3D5290, v26, 32, 0);
  objc_setAssociatedObject(v3, &unk_3D5290, isa, (char *)&dword_0 + 1);
  swift_endAccess(v26);

  return v12;
}

uint64_t sub_B0D14(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  _QWORD *v24;
  _OWORD v25[2];
  _BYTE v26[24];
  uint64_t v27;

  v3 = v2;
  swift_beginAccess(&unk_3D5290, v25, 32, 0);
  v6 = objc_getAssociatedObject(v3, &unk_3D5290);
  swift_endAccess(v25);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v25, v6, v7);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_56AF8((uint64_t)v25, (uint64_t)v26);
  if (v27)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4730);
    if ((swift_dynamicCast(&v24, v26, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = v24;
      goto LABEL_9;
    }
  }
  else
  {
    sub_D1D4((uint64_t)v26, &qword_3D1A70);
  }
  v9 = _swiftEmptyArrayStorage;
LABEL_9:
  *(_QWORD *)&v25[0] = v9;
  v10 = swift_allocObject(&unk_37EF20, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = type metadata accessor for GestureRecognizerHandler();
  v12 = swift_allocObject(v11, 40, 7);
  v13 = swift_unknownObjectWeakInit(v12 + 16, 0);
  swift_unknownObjectWeakAssign(v13, v3);
  v14 = swift_allocObject(&unk_37EF48, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_B26AC;
  *(_QWORD *)(v14 + 24) = v10;
  *(_QWORD *)(v12 + 24) = sub_B26B0;
  *(_QWORD *)(v12 + 32) = v14;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12 + 16);
  if (Strong)
  {
    v16 = Strong;
    objc_msgSend(Strong, "addTarget:action:", v12, "handleActionFromGestureRecognizer:", swift_retain(a2).n128_f64[0]);

  }
  else
  {
    swift_retain(a2);
  }
  swift_retain(v12);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  v18 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)&v25[0] & 0xFFFFFFFFFFFFFF8));
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v12);
  specialized Array._endMutation()(v20);
  v21 = *(_QWORD *)&v25[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  swift_beginAccess(&unk_3D5290, v26, 32, 0);
  objc_setAssociatedObject(v3, &unk_3D5290, isa, (char *)&dword_0 + 1);
  swift_endAccess(v26);

  return v12;
}

void sub_B0F90()
{
  sub_B0FA4((uint64_t)&unk_37F678, (uint64_t)sub_B8D08);
}

void sub_B0FA4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  sub_E710(0, (unint64_t *)&qword_3D7730, UITraitCollection_ptr);
  if ((static UITraitCollection.supportsPointerDevice.getter() & 1) != 0)
  {
    v5 = type metadata accessor for UnpreventableHoverGestureRecognizer();
    v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
    v6 = swift_allocObject(a1, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v2);
    swift_retain(v6);
    v7 = sub_B0A98(a2, v6);
    swift_release(v7);
    swift_release_n(v6, 2);
    objc_msgSend(v2, "addGestureRecognizer:", v8);

  }
}

void sub_B1090()
{
  sub_B0FA4((uint64_t)&unk_37F100, (uint64_t)sub_B8B48);
}

void sub_B10A4()
{
  sub_B0FA4((uint64_t)&unk_37F718, (uint64_t)sub_B8D1C);
}

void sub_B10B8()
{
  sub_B0FA4((uint64_t)&unk_37F5D8, (uint64_t)sub_B8CF4);
}

void sub_B10CC()
{
  sub_B0FA4((uint64_t)&unk_37F448, (uint64_t)sub_B8C6C);
}

void sub_B10E0()
{
  sub_B0FA4((uint64_t)&unk_37F538, (uint64_t)sub_B8CE0);
}

void sub_B10F4()
{
  sub_B0FA4((uint64_t)&unk_37F3A8, (uint64_t)sub_B8BF0);
}

void sub_B1108()
{
  sub_B0FA4((uint64_t)&unk_37F308, (uint64_t)sub_B8BC4);
}

void sub_B111C()
{
  sub_B0FA4((uint64_t)&unk_37F268, (uint64_t)sub_B8B98);
}

void sub_B1130()
{
  sub_B0FA4((uint64_t)&unk_37F240, (uint64_t)sub_B8B78);
}

void sub_B1144()
{
  sub_B0FA4((uint64_t)&unk_37F1A0, (uint64_t)sub_B8B64);
}

void sub_B1158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D65C((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_15EA48(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_D1D4(a1, &qword_3D1A70);
    sub_186D74(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_D1D4((uint64_t)v10, &qword_3D1A70);
  }
}

double sub_B122C(char a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  double result;
  char v7;
  unint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (a1 == 2)
  {
    v5 = sub_36DF0(a2);
    if ((v7 & 1) == 0)
      return result;
    v8 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v10 = *v2;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1606FC();
      v10 = v14;
    }
    sub_B80EC(v8, v10);
    v11 = *v3;
    *v3 = v10;
  }
  else
  {
    v12 = a1 & 1;
    v13 = swift_isUniquelyReferenced_nonNull_native(*v2);
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_15EC98(v12, a2, v13);
    v11 = *v2;
    *v2 = v15;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

uint64_t sub_B1300(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1D80);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShelfCellHeight(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_D1D4(a1, &qword_3D1D80);
    sub_186F48(a2, (uint64_t)v8);
    v14 = type metadata accessor for ModernShelf.ItemPresentation(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_D1D4((uint64_t)v8, &qword_3D1D80);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_15EF10((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20;
    swift_bridgeObjectRelease(v17);
    v18 = type metadata accessor for ModernShelf.ItemPresentation(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
}

double sub_B148C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A58);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_D1D4(a1, &qword_3D1A58);
    sub_187084(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    sub_D1D4((uint64_t)v10, &qword_3D1A58);
  }
  else
  {
    sub_3B38C(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_15F098((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    v18 = *v4;
    *v4 = v20;
    swift_bridgeObjectRelease(a3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  return result;
}

uint64_t sub_B15EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (**v4)(void *);
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11[2];

  sub_D184(a1, (uint64_t)&v9, (uint64_t *)&unk_3D30D0);
  if (v10)
  {
    sub_1B738(&v9, (uint64_t)v11);
    v2 = swift_allocObject(&unk_37EED0, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16, v1);
    sub_1B738(v11, (uint64_t)&v9);
    v3 = swift_allocObject(&unk_37EEF8, 64, 7);
    *(_QWORD *)(v3 + 16) = v2;
    sub_1B738(&v9, v3 + 24);
    v4 = (uint64_t (**)(void *))(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8);
    *v4 = sub_B25A4;
    v4[1] = (uint64_t (*)(void *))v3;
  }
  else
  {
    sub_D1D4((uint64_t)&v9, (uint64_t *)&unk_3D30D0);
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8);
    *v7 = 0;
    v7[1] = 0;
  }
  return sub_1D618(v5, v6);
}

uint64_t sub_B16D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v13[4];
  _BYTE v14[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v13[3] = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    v13[0] = a1;
    v8 = type metadata accessor for BlurIconButton();
    v10 = sub_239FC(&qword_3D4728, v9, (uint64_t (*)(uint64_t))type metadata accessor for BlurIconButton, (uint64_t)&unk_2F3D48);
    v11 = a1;
    v12 = DependencyBindableView.perform(_:from:in:)(a3, v13, a1, v8, v10);

    swift_release(v12);
    return sub_D1D4((uint64_t)v13, &qword_3D1A70);
  }
  return result;
}

char *sub_B17C0(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _BYTE *v5;
  _BYTE *v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  id v23;
  id v24;
  id v25;
  double v26;
  double v27;
  char *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  char **v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  objc_class *ObjectType;
  objc_super v43;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
  *v10 = 0;
  v10[1] = 0;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering] = 0;
  v6[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_animateHoverChanges] = 0;
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background;
  v13 = objc_allocWithZone((Class)UIView);
  v14 = v6;
  *(_QWORD *)&v6[v12] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v16, "setTintColor:", v17);

  *(_QWORD *)&v14[v15] = v16;
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = 0;
  v18 = *(void **)&v6[v11];
  *(_QWORD *)&v6[v11] = a1;
  v19 = a1;

  if ((a4 & 1) != 0)
  {
    objc_msgSend(v19, "size");
  }
  else
  {
    v20 = a2;
    v21 = a3;
  }
  v22 = (double *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageSize];
  *(_QWORD *)v22 = v20;
  *((_QWORD *)v22 + 1) = v21;
  v23 = (id)objc_opt_self(UIBlurEffect);
  if ((a5 & 1) == 0)
  {
    v23 = objc_msgSend(v23, "effectWithBlurRadius:", 5.0);
    v24 = v23;
    if (v23)
      goto LABEL_8;
    __break(1u);
  }
  v24 = objc_msgSend(v23, "effectWithStyle:", 2);
LABEL_8:
  v25 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v24);

  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_blurView] = v25;
  v26 = *v22;
  v27 = v22[1];
  v43.receiver = v14;
  v43.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v43, "initWithFrame:", 0.0, 0.0, v26, v27);
  objc_msgSend(v28, "setPreservesSuperviewLayoutMargins:", 0);
  objc_msgSend(v28, "setInsetsLayoutMarginsFromSafeArea:", 0);
  objc_msgSend(v28, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v29 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background];
  objc_msgSend(v29, "setClipsToBounds:", 1);
  objc_msgSend(v28, "addSubview:", v29);
  v30 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_blurView];
  objc_msgSend(v29, "addSubview:", v30);
  v31 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView];
  objc_msgSend(v29, "addSubview:", v31);
  objc_msgSend(v31, "setImage:", v19);
  sub_B0FA4((uint64_t)&unk_37EF70, (uint64_t)sub_B36D8);
  v32 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering;
  objc_msgSend(v30, "setHidden:", v28[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering]);
  if (v28[v32] == 1)
  {
    v33 = &selRef_accessibilityContextButton;
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v34 = (id)qword_3D0890;
  }
  else
  {
    v34 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
    v33 = &selRef_accessibilityContextButton;
  }
  objc_msgSend(v29, "setBackgroundColor:", v34);

  v35 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), v33[36]);
  v36 = swift_allocObject(&unk_37EED0, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v28);
  swift_retain(v36);
  v37 = sub_B0D14((uint64_t)sub_B25B0, v36);
  swift_release(v37);
  swift_release_n(v36, 2);
  v38 = v28;
  objc_msgSend(v38, "addGestureRecognizer:", v35);

  return v38;
}

void sub_B1BFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_blurView), "setHidden:", *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering));
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background);
  if (*(_BYTE *)(v0 + v1) == 1)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v3 = (id)qword_3D0890;
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
  }
  v4 = v3;
  objc_msgSend(v2, "setBackgroundColor:");

}

void sub_B1CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void (*v6)(void *, __n128);
  uint64_t v7;
  __n128 v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void (**)(void *, __n128))(Strong
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
    if (v6)
    {
      v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8);
      v8 = swift_retain(v7);
      v6(v5, v8);
      sub_1D618((uint64_t)v6, v7);
    }

  }
}

void sub_B1DDC()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  Swift::Int v25;
  double v26;
  BOOL v27;
  double v28;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v33;
  CGFloat v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  double v39;
  double v40;
  double v41;
  objc_super v42;
  CGRect v43;
  CGRect v44;

  v42.receiver = v0;
  v42.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v42, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v5 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageSize];
  v6 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageSize + 8];
  objc_msgSend(v0, "layoutMargins");
  v8 = v7;
  objc_msgSend(v0, "layoutMargins");
  v10 = v8 + v9;
  objc_msgSend(v0, "layoutMargins");
  v12 = v11;
  objc_msgSend(v0, "layoutMargins");
  v14 = v6 + v12 + v13;
  if (v2 >= v5 + v10)
    v15 = v5 + v10;
  else
    v15 = v2;
  if (v4 >= v14)
    v16 = v14;
  else
    v16 = v4;
  objc_msgSend(v0, "layoutMargins");
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = sub_F387C((uint64_t)&off_379DD0);
  if (sub_310B0(0, v25))
    v26 = v15 - v20 - v24;
  else
    v26 = v15;
  v27 = sub_310B0(1uLL, v25);
  swift_bridgeObjectRelease(v25);
  if (v27)
    v28 = v16 - v18 - v22;
  else
    v28 = v16;
  objc_msgSend(v0, "bounds");
  x = v43.origin.x;
  y = v43.origin.y;
  width = v43.size.width;
  height = v43.size.height;
  v33 = CGRectGetWidth(v43) * 0.5;
  v44.origin.x = x;
  v44.origin.y = y;
  v44.size.width = width;
  v44.size.height = height;
  v34 = CGRectGetHeight(v44) * 0.5;
  v35 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background];
  objc_msgSend(v35, "setBounds:", 0.0, 0.0, v26, v28);
  objc_msgSend(v35, "setCenter:", v33, v34);
  v36 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_blurView];
  objc_msgSend(v35, "bounds");
  objc_msgSend(v36, "setFrame:");
  v37 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView];
  objc_msgSend(v35, "bounds");
  objc_msgSend(v37, "setFrame:");
  v38 = objc_msgSend(v35, "layer");
  objc_msgSend(v35, "bounds");
  if (v40 >= v39)
    v41 = v39;
  else
    v41 = v40;
  objc_msgSend(v38, "setCornerRadius:", v41 * 0.5);

}

id sub_B2054()
{
  void *v0;

  objc_msgSend(v0, "layoutMargins");
  objc_msgSend(v0, "layoutMargins");
  objc_msgSend(v0, "layoutMargins");
  return objc_msgSend(v0, "layoutMargins");
}

id sub_B217C(uint64_t a1, double a2, double a3)
{
  char *v3;
  objc_class *ObjectType;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  id v33;
  objc_super v35;
  CGRect v36;
  CGRect v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background];
  objc_msgSend(v8, "frame");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  objc_msgSend(v3, "bounds");
  v37.origin.x = v17;
  v37.origin.y = v18;
  v37.size.width = v19;
  v37.size.height = v20;
  v36.origin.x = v10;
  v36.origin.y = v12;
  v36.size.width = v14;
  v36.size.height = v16;
  if (CGRectEqualToRect(v36, v37))
  {
    objc_msgSend(v3, "bounds");
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    objc_msgSend(v8, "bounds");
    if (v30 >= v29)
      v31 = v29;
    else
      v31 = v30;
    v32 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v22, v24, v26, v28, v31 * 0.5);
    v33 = objc_msgSend(v32, "containsPoint:", a2, a3);

  }
  else
  {
    v35.receiver = v3;
    v35.super_class = ObjectType;
    return objc_msgSendSuper2(&v35, "pointInside:withEvent:", a1, a2, a3);
  }
  return v33;
}

uint64_t type metadata accessor for BlurIconButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14BlurIconButton);
}

uint64_t sub_B246C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering);
}

void sub_B247C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering) = a1;
  sub_B1BFC();
}

uint64_t sub_B248C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_1D618(v4, v5);
}

void sub_B24AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image) = a1;
  v4 = a1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView), "setImage:", *(_QWORD *)(v1 + v2));
}

uint64_t sub_B2510()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph));
}

uint64_t sub_B2520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_B2554()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_B2578()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_B25A4(void *a1)
{
  uint64_t v1;

  return sub_B16D8(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

void sub_B25B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_B1CD8(a1, a2, v2);
}

void sub_B25B8(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = a4(0);
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    v8 = v7;
    v9 = a1;
    a2(v8);

  }
}

void sub_B2630(void *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = objc_opt_self(UITapGestureRecognizer);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    v7 = a1;
    a2(v6);

  }
}

void sub_B26B0(void *a1)
{
  uint64_t v1;

  sub_B2630(a1, *(void (**)(uint64_t))(v1 + 16));
}

void sub_B26B8(char a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;

  if (a1 == 2)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView);
    if (!v2)
      return;
    v3 = qword_3CEFF0;
    v4 = v2;
    if (v3 != -1)
    {
      v10 = v4;
      swift_once(&qword_3CEFF0, sub_DFAC);
      v4 = v10;
    }
    v5 = &qword_3D0898;
  }
  else
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView);
    if ((a1 & 1) != 0)
    {
      if (!v6)
        return;
      v8 = qword_3CF088;
      v4 = v6;
      if (v8 != -1)
      {
        v12 = v4;
        swift_once(&qword_3CF088, sub_E54C);
        v4 = v12;
      }
      v5 = &qword_3FA8E8;
    }
    else
    {
      if (!v6)
        return;
      v7 = qword_3CEFE8;
      v4 = v6;
      if (v7 != -1)
      {
        v11 = v4;
        swift_once(&qword_3CEFE8, sub_DF80);
        v4 = v11;
      }
      v5 = &qword_3D0890;
    }
  }
  v9 = v4;
  objc_msgSend(v4, "setBackgroundColor:", *v5);

}

void sub_B27F0(int a1, int a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  void *v52;
  __n128 v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  __n128 v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(id, uint64_t, uint64_t, _QWORD *);
  id v59;
  char *v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t (*v82)(char *, uint64_t, _QWORD *);
  id v83;
  uint64_t v84;
  void *v85;
  char *v86;
  char *v87;
  char v88;
  char *v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  char v93;
  char *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  char *v102;
  char *v103;
  char *v104;
  id v105;
  uint64_t v106;
  void *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  char v115;
  char v116;
  unint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  double v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  int v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142[32];
  _QWORD aBlock[5];
  uint64_t v144;
  char v145[24];
  char v146[40];

  v134 = a1;
  LODWORD(v135) = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v129 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v128 = (char *)&v123 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  v9 = __chkstk_darwin(v8);
  v130 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v131 = (char *)&v123 - v12;
  __chkstk_darwin(v11);
  v132 = (char *)&v123 - v13;
  v14 = swift_allocObject(&unk_37EFE8, 24, 7);
  *(_QWORD *)(v14 + 16) = v2;
  v15 = swift_allocObject(&unk_37F010, 24, 7);
  *(_QWORD *)(v15 + 16) = v2;
  v16 = (id *)(v15 + 16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4738);
  inited = swift_initStackObject(v17, v146);
  *(_QWORD *)(inited + 16) = sub_B7B54;
  *(_QWORD *)(inited + 24) = v15;
  v133 = v2;
  swift_retain(v15);
  swift_beginAccess(v15 + 16, v145, 1, 0);
  v19 = *(void **)(v15 + 16);
  v20 = v19;
  v21 = objc_msgSend(v20, "superview");
  v22 = *(void **)(v15 + 16);
  *(_QWORD *)(v15 + 16) = v21;

  if (!v19)
  {
LABEL_11:
    swift_release(inited);
    swift_release(v15);
    v30 = v14;
    goto LABEL_24;
  }
  v126 = v3;
  v127 = v4;
  while (1)
  {
    ObjectType = swift_getObjectType();
    v24 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for TableCollectionCell);
    v25 = v24 ? v24 : 0;
    v26 = v24 ? v20 : 0;
    if (v26)
      break;

    v27 = *v16;
    v20 = *v16;
    v28 = objc_msgSend(v20, "superview");
    v29 = *v16;
    *v16 = v28;

    if (!v27)
      goto LABEL_11;
  }
  swift_release(inited);
  swift_release(v15);
  swift_release(v14);
  v31 = swift_allocObject(&unk_37F0B0, 24, 7);
  *(_QWORD *)(v31 + 16) = v26;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4740);
  v33 = swift_initStackObject(v32, v142);
  *(_QWORD *)(v33 + 16) = sub_B7BA4;
  *(_QWORD *)(v33 + 24) = v31;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4748);
  v35 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_initStackObject(v34, &v141);
  *((_QWORD *)v35 + 2) = sub_B7BA4;
  *((_QWORD *)v35 + 3) = v31;
  *((_QWORD *)v35 + 4) = 1;
  v36 = v20;
  swift_retain(v31);
  swift_release(v33);
  v37 = swift_allocObject(&unk_37F010, 24, 7);
  *(_QWORD *)(v37 + 16) = v26;
  v38 = (void **)(v37 + 16);
  v39 = swift_initStackObject(v17, &v140);
  *(_QWORD *)(v39 + 16) = sub_B7B54;
  *(_QWORD *)(v39 + 24) = v37;
  v123 = v39;
  v20 = v36;
  swift_retain(v31);
  v124 = v37;
  swift_retain(v37);
  swift_retain(v35);
  swift_beginAccess(v37 + 16, &v139, 1, 0);
  v40 = *(void **)(v37 + 16);
  v41 = v40;
  v42 = objc_msgSend(v41, "superview");
  v43 = *v38;
  *v38 = v42;

  swift_release(v31);
  if (v40)

  v125 = v35;
  swift_release(v35);
  v44 = v42;
  v45 = objc_msgSend(v44, "superview");
  v46 = *v38;
  *v38 = v45;

  if (!v44)
  {
LABEL_23:
    swift_release(v123);
    v53 = swift_release(v124);
    v54 = v125;
    swift_setDeallocating(v125, v53);
    v30 = *((_QWORD *)v54 + 3);
LABEL_24:
    swift_release(v30);
    v51 = 0;
    if ((v135 & 1) == 0)
    {
LABEL_28:
      v65 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
      v66 = swift_allocObject(&unk_37F038, 24, 7);
      swift_unknownObjectWeakInit(v66 + 16, v133);
      v67 = swift_allocObject(&unk_37F060, 25, 7);
      *(_QWORD *)(v67 + 16) = v66;
      *(_BYTE *)(v67 + 24) = v134;
      aBlock[4] = sub_B7B80;
      v144 = v67;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24360;
      aBlock[3] = &block_descriptor_8;
      v68 = _Block_copy(aBlock);
      objc_msgSend(v65, "performBlock:", v68, swift_release(v144).n128_f64[0]);

      _Block_release(v68);
      return;
    }
LABEL_25:

    return;
  }
  while (1)
  {
    v47 = v45;
    v48 = swift_getObjectType();
    v49 = swift_conformsToProtocol2(v48, &protocol descriptor for TableCollectionContainer);
    v50 = v49 ? (_QWORD *)v49 : 0;
    v51 = v49 ? v44 : 0;
    if (v51)
      break;

    v44 = v47;
    v45 = objc_msgSend(v44, "superview");
    v52 = *v38;
    *v38 = v45;

    if (!v47)
      goto LABEL_23;
  }
  swift_release(v123);
  v55 = swift_release(v124);
  v56 = v125;
  swift_setDeallocating(v125, v55);
  swift_release(*((_QWORD *)v56 + 3));
  v57 = swift_getObjectType();
  v58 = (void (*)(id, uint64_t, uint64_t, _QWORD *))v50[1];
  v20 = v20;
  v59 = v44;
  v60 = v132;
  v58(v26, v25, v57, v50);
  v61 = (uint64_t)v60;
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
  v63 = v60;
  v64 = v126;
  if (v62(v63, 1, v126) == 1)
  {

    sub_D1D4(v61, (uint64_t *)&unk_3D1A00);
    if ((v135 & 1) == 0)
      goto LABEL_28;
    goto LABEL_25;
  }
  sub_D1D4(v61, (uint64_t *)&unk_3D1A00);
  v138 = &_swiftEmptyDictionarySingleton;
  sub_B122C(v134, 1u);
  v69 = (char *)v59;
  objc_msgSend(v26, "bounds");
  objc_msgSend(v51, "convertPoint:fromCoordinateSpace:", v26, v70 * 0.5, -1.0);
  v72 = v71;
  v74 = v73;
  v132 = v69;

  v75 = (uint64_t)v131;
  v135 = (char *)v50[2];
  ((void (*)(uint64_t, _QWORD *, double, double))v135)(v57, v50, v72, v74);
  v76 = v62((char *)v75, 1, v64);
  v125 = v62;
  if (v76 == 1)
  {
    sub_D1D4(v75, (uint64_t *)&unk_3D1A00);
    v77 = (uint64_t)v130;
    v78 = (char *)v57;
  }
  else
  {
    v79 = v75;
    v80 = v127;
    v81 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v128, v79, v64);
    v82 = (uint64_t (*)(char *, uint64_t, _QWORD *))v50[3];
    v131 = (char *)v57;
    v83 = (id)v82(v81, v57, v50);
    if (v83)
    {
      v85 = v83;
      if (v26 == v83)
      {
        v64 = v126;
        (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v126);

      }
      else
      {
        v86 = (char *)sub_B8A1C(v83, v84);
        if (v86)
        {
          v87 = v86;
          v88 = 2;
          sub_B354C(2u, v134);
          v89 = &v87[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds];
          swift_beginAccess(&v87[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds], &v136, 0, 0);
          v90 = *(_QWORD *)v89;
          v91 = v128;
          if (*(_QWORD *)(v90 + 16))
          {
            v92 = sub_36DF0(1u);
            if ((v93 & 1) != 0)
              v88 = *(_BYTE *)(*(_QWORD *)(v90 + 56) + v92);
          }
          sub_B122C(v88, 0);

          v64 = v126;
          (*(void (**)(char *, uint64_t))(v127 + 8))(v91, v126);
        }
        else
        {
          v64 = v126;
          (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v126);

        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v64);
    }
    v77 = (uint64_t)v130;
    v78 = v131;
  }
  v94 = v132;
  objc_msgSend(v26, "bounds");
  v96 = v95 * 0.5;
  objc_msgSend(v26, "bounds");
  objc_msgSend(v51, "convertPoint:fromCoordinateSpace:", v26, v96, v97 + 1.0);
  v99 = v98;
  v101 = v100;

  ((void (*)(char *, _QWORD *, double, double))v135)(v78, v50, v99, v101);
  if (v125((char *)v77, 1, v64) == 1)
  {
    sub_D1D4(v77, (uint64_t *)&unk_3D1A00);
LABEL_44:
    v102 = v133;
    goto LABEL_56;
  }
  v135 = v94;
  v103 = v78;
  v104 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v129, v77, v64);
  v105 = (id)((uint64_t (*)(char *, char *, _QWORD *))v50[3])(v104, v103, v50);
  if (v105)
  {
    v107 = v105;
    v94 = v135;
    if (v26 == v105)
    {
      (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v64);

      goto LABEL_44;
    }
    v108 = (char *)sub_B8A1C(v105, v106);
    if (!v108)
    {
      (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v64);

      goto LABEL_44;
    }
    v109 = v108;
    sub_B354C(0, v134);
    v110 = &v109[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds];
    swift_beginAccess(&v109[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds], &v137, 0, 0);
    v111 = *(_QWORD *)v110;
    v112 = v127;
    v113 = v129;
    if (*(_QWORD *)(v111 + 16) && (v114 = sub_36DF0(1u), (v115 & 1) != 0))
      v116 = *(_BYTE *)(*(_QWORD *)(v111 + 56) + v114);
    else
      v116 = 2;
    sub_B122C(v116, 2u);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v64);
    v102 = v133;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v104, v64);
    v102 = v133;
  }
  v94 = v135;
LABEL_56:
  v117 = (unint64_t)v138;
  v118 = (uint64_t *)&v102[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds];
  swift_beginAccess(&v102[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds], aBlock, 1, 0);
  if ((sub_B7BAC(v117, *v118) & 1) != 0)
  {

    swift_bridgeObjectRelease(v117);
  }
  else
  {
    v119 = *v118;
    *v118 = v117;
    *(_QWORD *)&v120 = swift_bridgeObjectRelease(v119).n128_u64[0];
    v121 = *(void **)&v102[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView];
    if (v121)
    {
      v122 = objc_msgSend(v121, "layer", v120);
      objc_msgSend(v122, "setMaskedCorners:", sub_2C7E64());

    }
    sub_B32B0();

  }
}

uint64_t sub_B32B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  char v27[24];
  char v28[32];
  _OWORD v29[2];
  uint64_t v30;

  v1 = swift_allocObject(&unk_37F0D8, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4740);
  inited = swift_initStackObject(v2, v28);
  *(_QWORD *)(inited + 16) = sub_B8D34;
  *(_QWORD *)(inited + 24) = v1;
  v4 = swift_allocObject(&unk_37F010, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4738);
  v6 = swift_allocObject(v5, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_B7B54;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4770);
  v8 = swift_initStackObject(v7, v27);
  *(_QWORD *)(v8 + 16) = v6;
  v9 = v0;
  dispatch thunk of _AnyIteratorBoxBase.next()(v29);
  v10 = *(void **)&v29[0];
  if (!*(_QWORD *)&v29[0])
  {
LABEL_5:
    v14 = swift_release(v6);
    swift_setDeallocating(inited, v14);
    swift_release(*(_QWORD *)(inited + 24));
LABEL_7:
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    goto LABEL_8;
  }
  v11 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  while (1)
  {
    v24[0] = v10;
    v12 = v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4758);
    if (swift_dynamicCast(v29, v24, v11, v13, 6))
      break;

    v6 = *(_QWORD *)(v8 + 16);
    dispatch thunk of _AnyIteratorBoxBase.next()(v29);
    v10 = *(void **)&v29[0];
    if (!*(_QWORD *)&v29[0])
      goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_0(v29);
  swift_release(inited);
  swift_release(v8);
  v24[0] = v12;
  if ((swift_dynamicCast(v29, v24, v11, v13, 6) & 1) == 0)
    goto LABEL_7;
LABEL_8:
  sub_D184((uint64_t)v29, (uint64_t)&v22, &qword_3D4760);
  if (v23)
  {
    sub_1B738(&v22, (uint64_t)v24);
    v15 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds];
    swift_beginAccess(v15, &v22, 0, 0);
    v16 = *(_QWORD *)v15;
    v17 = swift_bridgeObjectRetain(v16);
    v18 = sub_B8778(v17, (uint64_t)&off_37A110);
    swift_bridgeObjectRelease(v16);
    v19 = v25;
    v20 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v20 + 24))(v18 != 3, v19, v20);
    __swift_destroy_boxed_opaque_existential_0(v24);
  }
  else
  {
    sub_D1D4((uint64_t)&v22, &qword_3D4760);
  }
  return sub_D1D4((uint64_t)v29, &qword_3D4760);
}

void sub_B354C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_neighborsWithBackgrounds, v13, 0, 0);
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16) && (v8 = sub_36DF0(a1), (v9 & 1) != 0))
  {
    if (a2 != 2 && ((((a2 & 1) == 0) ^ *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v8)) & 1) != 0)
      return;
  }
  else if (a2 == 2)
  {
    return;
  }
  swift_beginAccess(v6, v12, 33, 0);
  sub_B122C(a2, a1);
  swift_endAccess(v12);
  v10 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView);
  if (v10)
  {
    v11 = objc_msgSend(v10, "layer");
    objc_msgSend(v11, "setMaskedCorners:", sub_2C7E64());

  }
  sub_B32B0();
}

void sub_B367C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_B27F0(a2, 1);

  }
}

void sub_B36D8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B44BC(a1, a2, v2, (void (*)(_QWORD, _BOOL8, id, id))sub_B46FC);
}

void sub_B36F8(void *a1)
{
  uint64_t v1;

  sub_B25B8(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for UnpreventableHoverGestureRecognizer);
}

void sub_B3718(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F6A0, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F6C8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8D10;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_168;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B389C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F128, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F150, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8B50;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8B5C;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_55;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B3A20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F740, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F768, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8D24;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_181;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B3BA4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F600, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F628, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8CFC;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_155;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B3D28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F470, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F498, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8C74;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_123;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B3EAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F560, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F588, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8CE8;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_142;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B4030(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F3D0, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F3F8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8C24;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_110_0;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B41B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F330, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F358, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8BCC;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_97;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B4338(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F290, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F2B8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8BA0;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_84_0;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B44BC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _BOOL8, id, id))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BOOL8 v9;
  id v10;
  id v11;
  _BYTE v12[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v10 = a1;
    v11 = v8;
    a4(0, v9, v11, v10);

  }
}

void sub_B4578(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a1, "state") == (char *)&dword_0 + 1 || objc_msgSend(a1, "state") == (char *)&dword_0 + 2;
    v8 = swift_allocObject(&unk_37F1C8, 40, 7);
    *(_BYTE *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    *(_QWORD *)(v8 + 32) = a1;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_37F1F0, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_B8B6C;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_B8D30;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_68;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = a1;
    v14 = v6;
    swift_retain(v8);
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 65574, v11, 0, 0.12, 0.0);
    swift_release(v8);
    _Block_release(v11);

  }
}

void sub_B46FC(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t ObjectType;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  _BYTE *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void *v50;
  char *v51;
  char *v52;
  __int16 v53;
  char *v54;
  __int16 v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74[13];
  __int16 v75;

  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering;
  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering] == (a2 & 1))
    goto LABEL_21;
  a3[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering] = a2 & 1;
  objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_blurView], "setHidden:");
  v9 = *(void **)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background];
  if (a3[v8] == 1)
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v10 = (id)qword_3D0890;
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.2);
  }
  v11 = v10;
  objc_msgSend(v9, "setBackgroundColor:", v10);

  ObjectType = swift_getObjectType();
  v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
  if (!v13 || !*(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    goto LABEL_21;
  v14 = swift_getObjectType();
  if (!swift_conformsToProtocol2(v14, &protocol descriptor for SelectableCell))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (*(_BYTE *)(*(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage] + 16) == 1)
  {
    v15 = a3;
    v16 = 0;
  }
  else
  {
    v17 = swift_conformsToProtocol2(v14, &protocol descriptor for HoverableView);
    if (!v17)
    {
LABEL_42:
      __break(1u);
      return;
    }
    v18 = v17;
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    v20 = a3;
    if ((v19(v14, v18) & 1) != 0)
      v16 = 1;
    else
      v16 = 2;
  }
  sub_B26B8(v16);
  v21 = swift_getObjectType();
  if (!swift_conformsToProtocol2(v21, &protocol descriptor for CellWithBackgroundNeighbor))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v22 = v13;
  sub_B27F0(v16, 0);

LABEL_21:
  v23 = swift_getObjectType();
  v24 = swift_conformsToProtocol2(v23, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (v24)
    v25 = v24;
  else
    v25 = 0;
  if (v24)
    v26 = a3;
  else
    v26 = 0;
  if (v26)
  {
    v27 = swift_getObjectType();
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 16);
    v29 = a3;
    v73 = (char *)v28(v27, v25);
    v30 = (a2 & 1) != 0 && sub_1A1034(a4, v27, v25);
    sub_2624F4(a2 & 1, a1 & 1);
    if (v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
      || *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
      || *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
    {
      v31 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
      v69 = v29;
      if (v30)
      {
        v66 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
        v67 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
        v32 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
        v65 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
        v33 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
        v34 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
        v35 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
        v36 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
        v37 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
        v38 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
        v39 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
        v56 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
        v55 = v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
        v68 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
        v40 = v68;
        v63 = v33;
        v64 = v32;
        v61 = v35;
        v62 = v34;
        v59 = v37;
        v60 = v36;
        v57 = v39;
        v58 = v38;
        sub_B7A24(v32, v33, v34, v35, v36, v37, v38, v39);
      }
      else
      {
        v55 = *(_WORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
        v56 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
        v57 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
        v58 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
        v59 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
        v60 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
        v61 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
        v67 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
        v68 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
        v65 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
        v66 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
        v63 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
        v64 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
        v62 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
        sub_B79AC((char *)v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57);
      }
      v41 = v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
      v42 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
      v43 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
      v54 = v42;
      v45 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
      v44 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
      v71 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
      v72 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
      v46 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
      v47 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
      v70 = (char *)v46;
      v48 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
      v49 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
      v51 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
      v50 = *(void **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
      v52 = *(char **)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
      v53 = *(_WORD *)(v31 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
      *(_QWORD *)v41 = v68;
      *(_QWORD *)(v41 + 8) = v67;
      *(_QWORD *)(v41 + 16) = v66;
      *(_QWORD *)(v41 + 24) = v65;
      *(_QWORD *)(v41 + 32) = v64;
      *(_QWORD *)(v41 + 40) = v63;
      *(_QWORD *)(v41 + 48) = v62;
      *(_QWORD *)(v41 + 56) = v61;
      *(_QWORD *)(v41 + 64) = v60;
      *(_QWORD *)(v41 + 72) = v59;
      *(_QWORD *)(v41 + 80) = v58;
      *(_QWORD *)(v41 + 88) = v57;
      *(_QWORD *)(v41 + 96) = v56;
      *(_WORD *)(v41 + 104) = v55;
      sub_B79AC(v42, (uint64_t)v43, (uint64_t)v45, (uint64_t)v44, (uint64_t)v72, (uint64_t)v71, v46, (uint64_t)v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v51, v50);
      sub_B7A70(v54, (uint64_t)v43, (uint64_t)v45, (uint64_t)v44, (uint64_t)v72, (uint64_t)v71, (uint64_t)v70, (uint64_t)v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v51, v50);
      v74[0] = v54;
      v74[1] = v43;
      v74[2] = v45;
      v74[3] = v44;
      v74[4] = v72;
      v74[5] = v71;
      v74[6] = v70;
      v74[7] = v47;
      v74[8] = v48;
      v74[9] = v49;
      v74[10] = v51;
      v74[11] = (char *)v50;
      v74[12] = v52;
      v75 = v53;
      sub_EA15C(v74);
      sub_B7A70(v54, (uint64_t)v43, (uint64_t)v45, (uint64_t)v44, (uint64_t)v72, (uint64_t)v71, (uint64_t)v70, (uint64_t)v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v51, v50);

    }
    else
    {

    }
  }
}

void sub_B4C84(char a1, char a2, _BYTE *a3, void *a4)
{
  int v8;
  uint64_t ObjectType;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  _BYTE *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  char *v47;
  char *v48;
  __int16 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73[13];
  __int16 v74;

  v8 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering];
  if (v8 != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews24SingleShowMacEpisodeCell_isHovering] = a2 & 1;
    sub_207A8(v8);
    ObjectType = swift_getObjectType();
    v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v10 && *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v11 = swift_getObjectType();
      if (swift_conformsToProtocol2(v11, &protocol descriptor for SelectableCell))
      {
        if (*(_BYTE *)(*(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                      + 16) == 1)
        {
          v12 = a3;
          v13 = 0;
        }
        else
        {
          v14 = swift_conformsToProtocol2(v11, &protocol descriptor for HoverableView);
          if (!v14)
          {
LABEL_37:
            __break(1u);
            return;
          }
          v15 = v14;
          v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
          v17 = a3;
          if ((v16(v11, v15) & 1) != 0)
            v13 = 1;
          else
            v13 = 2;
        }
        sub_B26B8(v13);
        v18 = swift_getObjectType();
        if (swift_conformsToProtocol2(v18, &protocol descriptor for CellWithBackgroundNeighbor))
        {
          v19 = v10;
          sub_B27F0(v13, 0);

          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_37;
    }
  }
LABEL_16:
  v20 = swift_getObjectType();
  v21 = swift_conformsToProtocol2(v20, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (v21)
    v22 = v21;
  else
    v22 = 0;
  if (v21)
    v23 = a3;
  else
    v23 = 0;
  if (v23)
  {
    v24 = swift_getObjectType();
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 16);
    v26 = a3;
    v72 = (char *)v25(v24, v22);
    v27 = (a2 & 1) != 0 && sub_1A1034(a4, v24, v22);
    sub_2624F4(a2 & 1, a1 & 1);
    if (v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
      || *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
      || *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
    {
      v28 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
      v69 = v26;
      if (v27)
      {
        v66 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
        v67 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
        v29 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
        v65 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
        v30 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
        v31 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
        v32 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
        v33 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
        v34 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
        v35 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
        v36 = *(void **)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
        v57 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
        v56 = v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
        v68 = *(void **)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
        v37 = v68;
        v63 = v30;
        v64 = v29;
        v61 = v32;
        v62 = v31;
        v59 = v34;
        v60 = v33;
        v58 = v35;
        sub_B7A24(v29, v30, v31, v32, v33, v34, v35, v36);
      }
      else
      {
        v36 = *(void **)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
        v56 = *(_WORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
        v57 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
        v58 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
        v59 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
        v60 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
        v67 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
        v68 = *(void **)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
        v65 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
        v66 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
        v63 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
        v64 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
        v61 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
        v62 = *(_QWORD *)&v72[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
        sub_B79AC((char *)v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v36);
      }
      v38 = v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
      v39 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
      v52 = (char *)v39;
      v53 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
      v41 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
      v40 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
      v42 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
      v43 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
      v70 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
      v71 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
      v44 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
      v45 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
      v47 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
      v46 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
      v48 = *(char **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
      v49 = *(_WORD *)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
      *(_QWORD *)v38 = v68;
      *(_QWORD *)(v38 + 8) = v67;
      *(_QWORD *)(v38 + 16) = v66;
      *(_QWORD *)(v38 + 24) = v65;
      *(_QWORD *)(v38 + 32) = v64;
      *(_QWORD *)(v38 + 40) = v63;
      *(_QWORD *)(v38 + 48) = v62;
      *(_QWORD *)(v38 + 56) = v61;
      *(_QWORD *)(v38 + 64) = v60;
      *(_QWORD *)(v38 + 72) = v59;
      *(_QWORD *)(v38 + 80) = v58;
      *(_QWORD *)(v38 + 88) = v36;
      *(_QWORD *)(v38 + 96) = v57;
      *(_WORD *)(v38 + 104) = v56;
      v54 = (char *)v44;
      v50 = v44;
      v51 = (char *)v42;
      v55 = v42;
      sub_B79AC(v53, v39, (uint64_t)v41, (uint64_t)v40, (uint64_t)v71, v42, (uint64_t)v43, (uint64_t)v70, v44, (uint64_t)v45, (uint64_t)v47, v46);
      sub_B7A70(v53, (uint64_t)v52, (uint64_t)v41, (uint64_t)v40, (uint64_t)v71, (uint64_t)v51, (uint64_t)v43, (uint64_t)v70, v50, (uint64_t)v45, (uint64_t)v47, v46);
      v73[0] = v53;
      v73[1] = v52;
      v73[2] = v41;
      v73[3] = v40;
      v73[4] = v71;
      v73[5] = v51;
      v73[6] = v43;
      v73[7] = v70;
      v73[8] = v54;
      v73[9] = v45;
      v73[10] = v47;
      v73[11] = (char *)v46;
      v73[12] = v48;
      v74 = v49;
      sub_EA15C(v73);
      sub_B7A70(v53, (uint64_t)v52, (uint64_t)v41, (uint64_t)v40, (uint64_t)v71, v55, (uint64_t)v43, (uint64_t)v70, (uint64_t)v54, (uint64_t)v45, (uint64_t)v47, v46);

    }
    else
    {

    }
  }
}

void sub_B5158(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t ObjectType;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  int v32;
  int v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  _BYTE *v42;
  char *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  void *v65;
  char *v66;
  char *v67;
  __int16 v68;
  char *v69;
  __int16 v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89[13];
  __int16 v90;
  char v91[32];
  CGPoint v92;
  CGRect v93;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHovering] = a2 & 1;
    ObjectType = swift_getObjectType();
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v9 && *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v10 = swift_getObjectType();
      if (swift_conformsToProtocol2(v10, &protocol descriptor for SelectableCell))
      {
        if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                      + 16) == 1)
        {
          v11 = a3;
          v12 = 0;
        }
        else
        {
          v13 = swift_conformsToProtocol2(v10, &protocol descriptor for HoverableView);
          if (!v13)
          {
LABEL_44:
            __break(1u);
            return;
          }
          v14 = v13;
          v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
          v16 = a3;
          if ((v15(v10, v14) & 1) != 0)
            v12 = 1;
          else
            v12 = 2;
        }
        sub_B26B8(v12);
        v17 = swift_getObjectType();
        if (swift_conformsToProtocol2(v17, &protocol descriptor for CellWithBackgroundNeighbor))
        {
          v18 = v9;
          sub_B27F0(v12, 0);

          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_44;
    }
  }
LABEL_16:
  v19 = (void **)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel];
  swift_beginAccess(&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_titleLabel], v91, 0, 0);
  v20 = *v19;
  if (!*v19)
    goto LABEL_23;
  if ((a2 & 1) != 0)
  {
    v21 = v20;
    objc_msgSend(v21, "bounds");
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;
    objc_msgSend(a4, "locationInView:", v21);
    v92.x = v30;
    v92.y = v31;
    v93.origin.x = v23;
    v93.origin.y = v25;
    v93.size.width = v27;
    v93.size.height = v29;
    v32 = CGRectContainsPoint(v93, v92);
    v33 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle];
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle] = v32;
    if (v32 == v33)
      goto LABEL_22;
    goto LABEL_21;
  }
  v34 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle];
  a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isHoveringOnTitle] = 0;
  v35 = v20;
  if ((v34 & 1) != 0)
LABEL_21:
    sub_1B7CD0();
LABEL_22:

LABEL_23:
  v36 = swift_getObjectType();
  v37 = swift_conformsToProtocol2(v36, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (v37)
    v38 = v37;
  else
    v38 = 0;
  if (v37)
    v39 = a3;
  else
    v39 = 0;
  if (v39)
  {
    v40 = swift_getObjectType();
    v41 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 16);
    v42 = a3;
    v43 = (char *)v41(v40, v38);
    v44 = (a2 & 1) != 0 && sub_1A1034(a4, v40, v38);
    sub_2624F4(a2 & 1, a1 & 1);
    if (v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
      || *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
      || *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
    {
      v45 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
      v85 = v42;
      v75 = v43;
      if (v44)
      {
        v82 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
        v83 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
        v46 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
        v81 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
        v47 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
        v48 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
        v49 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
        v50 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
        v51 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
        v52 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
        v53 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
        v71 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
        v70 = v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
        v84 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
        v54 = v84;
        v79 = v47;
        v80 = v46;
        v77 = v49;
        v78 = v48;
        v76 = v50;
        v73 = v52;
        v74 = v51;
        v72 = v53;
        sub_B7A24(v46, v47, v48, v49, v50, v51, v52, v53);
      }
      else
      {
        v70 = *(_WORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
        v71 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
        v72 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
        v73 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
        v74 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
        v76 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
        v77 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
        v83 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
        v84 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
        v81 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
        v82 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
        v79 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
        v80 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
        v78 = *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
        sub_B79AC((char *)v84, v83, v82, v81, v80, v79, v78, v77, v76, v74, v73, v72);
      }
      v55 = v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
      v56 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
      v57 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
      v69 = v56;
      v58 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
      v59 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
      v60 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
      v87 = (char *)v60;
      v88 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
      v61 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
      v62 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
      v86 = (char *)v61;
      v63 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
      v64 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
      v66 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
      v65 = *(void **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
      v67 = *(char **)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
      v68 = *(_WORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
      *(_QWORD *)v55 = v84;
      *(_QWORD *)(v55 + 8) = v83;
      *(_QWORD *)(v55 + 16) = v82;
      *(_QWORD *)(v55 + 24) = v81;
      *(_QWORD *)(v55 + 32) = v80;
      *(_QWORD *)(v55 + 40) = v79;
      *(_QWORD *)(v55 + 48) = v78;
      *(_QWORD *)(v55 + 56) = v77;
      *(_QWORD *)(v55 + 64) = v76;
      *(_QWORD *)(v55 + 72) = v74;
      *(_QWORD *)(v55 + 80) = v73;
      *(_QWORD *)(v55 + 88) = v72;
      *(_QWORD *)(v55 + 96) = v71;
      *(_WORD *)(v55 + 104) = v70;
      sub_B79AC(v56, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v88, v60, v61, (uint64_t)v62, (uint64_t)v63, (uint64_t)v64, (uint64_t)v66, v65);
      sub_B7A70(v69, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v88, (uint64_t)v87, (uint64_t)v86, (uint64_t)v62, (uint64_t)v63, (uint64_t)v64, (uint64_t)v66, v65);
      v89[0] = v69;
      v89[1] = v57;
      v89[2] = v58;
      v89[3] = v59;
      v89[4] = v88;
      v89[5] = v87;
      v89[6] = v86;
      v89[7] = v62;
      v89[8] = v63;
      v89[9] = v64;
      v89[10] = v66;
      v89[11] = (char *)v65;
      v89[12] = v67;
      v90 = v68;
      sub_EA15C(v89);
      sub_B7A70(v69, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v88, (uint64_t)v87, (uint64_t)v86, (uint64_t)v62, (uint64_t)v63, (uint64_t)v64, (uint64_t)v66, v65);

    }
    else
    {

    }
  }
}

void sub_B56F0(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t ObjectType;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  int v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  _BYTE *v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  void *v57;
  char *v58;
  char *v59;
  __int16 v60;
  char *v61;
  __int16 v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  char *v77;
  char *v78;
  char *v79;
  _BYTE *v80;
  char *v81[13];
  __int16 v82;
  CGPoint v83;
  CGRect v84;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHovering] = a2 & 1;
    sub_2C7F78();
    ObjectType = swift_getObjectType();
    if (!swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (*(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      if (!swift_conformsToProtocol2(ObjectType, &protocol descriptor for SelectableCell))
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (*(_BYTE *)(*(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage] + 16) == 1)
      {
        v9 = a3;
        v10 = 0;
      }
      else
      {
        v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HoverableView);
        if (!v11)
        {
LABEL_35:
          __break(1u);
          return;
        }
        v12 = v11;
        v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
        v14 = a3;
        if ((v13(ObjectType, v12) & 1) != 0)
          v10 = 1;
        else
          v10 = 2;
      }
      sub_B26B8(v10);
      v15 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v15, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v16 = a3;
      sub_B27F0(v10, 0);

    }
  }
  if ((a2 & 1) == 0)
  {
    v30 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle];
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle] = 0;
    if ((v30 & 1) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
  v17 = *(void **)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_titleLabel];
  objc_msgSend(v17, "bounds");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  objc_msgSend(a4, "locationInView:", v17);
  v83.x = v26;
  v83.y = v27;
  v84.origin.x = v19;
  v84.origin.y = v21;
  v84.size.width = v23;
  v84.size.height = v25;
  v28 = CGRectContainsPoint(v84, v83);
  v29 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle];
  a3[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_isHoveringOnTitle] = v28;
  if (v28 != v29)
LABEL_17:
    sub_2C8120();
LABEL_18:
  v31 = swift_getObjectType();
  v32 = swift_conformsToProtocol2(v31, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v32)
  {
    __break(1u);
    goto LABEL_32;
  }
  v33 = v32;
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 16);
  v35 = a3;
  v80 = (_BYTE *)v34(v31, v33);
  v36 = (a2 & 1) != 0 && sub_1A1034(a4, v31, v33);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v37 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v76 = v35;
    if (v36)
    {
      v73 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v74 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v38 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v72 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v39 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v40 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v41 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v42 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v43 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v44 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v45 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v63 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v62 = v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v75 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v46 = v75;
      v70 = v39;
      v71 = v38;
      v68 = v41;
      v69 = v40;
      v66 = v43;
      v67 = v42;
      v64 = v45;
      v65 = v44;
      sub_B7A24(v38, v39, v40, v41, v42, v43, v44, v45);
    }
    else
    {
      v62 = *(_WORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v63 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v64 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v65 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v66 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v67 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v68 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v74 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v75 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v72 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v73 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v70 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v71 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v69 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v75, v74, v73, v72, v71, v70, v69, v68, v67, v66, v65, v64);
    }
    v47 = v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v48 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v49 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v61 = v48;
    v51 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v50 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v52 = *(_QWORD *)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v78 = (char *)v52;
    v79 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v53 = *(_QWORD *)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v54 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v77 = (char *)v53;
    v55 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v56 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v58 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v57 = *(void **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v59 = *(char **)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v60 = *(_WORD *)(v37 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v47 = v75;
    *(_QWORD *)(v47 + 8) = v74;
    *(_QWORD *)(v47 + 16) = v73;
    *(_QWORD *)(v47 + 24) = v72;
    *(_QWORD *)(v47 + 32) = v71;
    *(_QWORD *)(v47 + 40) = v70;
    *(_QWORD *)(v47 + 48) = v69;
    *(_QWORD *)(v47 + 56) = v68;
    *(_QWORD *)(v47 + 64) = v67;
    *(_QWORD *)(v47 + 72) = v66;
    *(_QWORD *)(v47 + 80) = v65;
    *(_QWORD *)(v47 + 88) = v64;
    *(_QWORD *)(v47 + 96) = v63;
    *(_WORD *)(v47 + 104) = v62;
    sub_B79AC(v48, (uint64_t)v49, (uint64_t)v51, (uint64_t)v50, (uint64_t)v79, v52, v53, (uint64_t)v54, (uint64_t)v55, (uint64_t)v56, (uint64_t)v58, v57);
    sub_B7A70(v61, (uint64_t)v49, (uint64_t)v51, (uint64_t)v50, (uint64_t)v79, (uint64_t)v78, (uint64_t)v77, (uint64_t)v54, (uint64_t)v55, (uint64_t)v56, (uint64_t)v58, v57);
    v81[0] = v61;
    v81[1] = v49;
    v81[2] = v51;
    v81[3] = v50;
    v81[4] = v79;
    v81[5] = v78;
    v81[6] = v77;
    v81[7] = v54;
    v81[8] = v55;
    v81[9] = v56;
    v81[10] = v58;
    v81[11] = (char *)v57;
    v81[12] = v59;
    v82 = v60;
    sub_EA15C(v81);
    sub_B7A70(v61, (uint64_t)v49, (uint64_t)v51, (uint64_t)v50, (uint64_t)v79, (uint64_t)v78, (uint64_t)v77, (uint64_t)v54, (uint64_t)v55, (uint64_t)v56, (uint64_t)v58, v57);

  }
  else
  {

  }
}

void sub_B5C58(char a1, char a2, char *a3, void *a4)
{
  void *v8;
  id v9;
  uint64_t ObjectType;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  char *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char *v46;
  char *v47;
  __int16 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  char *v69;
  char *v70;
  _BYTE *v71;
  char *v72[13];
  __int16 v73;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_isHovering] = a2 & 1;
    v8 = *(void **)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowcaseCollectionViewCell_thumbnailArtworkContainer];
    if (!v8)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v9 = v8;
    sub_2624F4(a2 & 1, 0);

    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground))
      v11 = a3;
    else
      v11 = 0;
    if (v11 && *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v12 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v12, &protocol descriptor for SelectableCell))
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if (*(_BYTE *)(*(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                    + 16) == 1)
      {
        v13 = a3;
        v14 = 0;
      }
      else
      {
        v15 = swift_conformsToProtocol2(v12, &protocol descriptor for HoverableView);
        if (!v15)
        {
LABEL_34:
          __break(1u);
          return;
        }
        v16 = v15;
        v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
        v18 = a3;
        if ((v17(v12, v16) & 1) != 0)
          v14 = 1;
        else
          v14 = 2;
      }
      sub_B26B8(v14);
      v19 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v19, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      v20 = v11;
      sub_B27F0(v14, 0);

    }
  }
  v21 = swift_getObjectType();
  v22 = swift_conformsToProtocol2(v21, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v22)
  {
    __break(1u);
    goto LABEL_31;
  }
  v23 = v22;
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 16);
  v25 = a3;
  v71 = (_BYTE *)v24(v21, v23);
  v26 = (a2 & 1) != 0 && sub_1A1034(a4, v21, v23);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v27 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v68 = v25;
    if (v26)
    {
      v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v28 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v29 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v30 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v31 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v32 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v33 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v34 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v35 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v55 = v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v36 = v67;
      v62 = v29;
      v63 = v28;
      v60 = v31;
      v61 = v30;
      v58 = v33;
      v59 = v32;
      v57 = v34;
      sub_B7A24(v28, v29, v30, v31, v32, v33, v34, v35);
    }
    else
    {
      v35 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v55 = *(_WORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v57 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v58 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v59 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v62 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v63 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v60 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v61 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57, v35);
    }
    v37 = v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v38 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v51 = (char *)v38;
    v52 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v40 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v39 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v41 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v42 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v69 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v70 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v43 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v44 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v46 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v45 = *(void **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v47 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v48 = *(_WORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v37 = v67;
    *(_QWORD *)(v37 + 8) = v66;
    *(_QWORD *)(v37 + 16) = v65;
    *(_QWORD *)(v37 + 24) = v64;
    *(_QWORD *)(v37 + 32) = v63;
    *(_QWORD *)(v37 + 40) = v62;
    *(_QWORD *)(v37 + 48) = v61;
    *(_QWORD *)(v37 + 56) = v60;
    *(_QWORD *)(v37 + 64) = v59;
    *(_QWORD *)(v37 + 72) = v58;
    *(_QWORD *)(v37 + 80) = v57;
    *(_QWORD *)(v37 + 88) = v35;
    *(_QWORD *)(v37 + 96) = v56;
    *(_WORD *)(v37 + 104) = v55;
    v53 = (char *)v43;
    v49 = v43;
    v50 = (char *)v41;
    v54 = v41;
    sub_B79AC(v52, v38, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, v41, (uint64_t)v42, (uint64_t)v69, v43, (uint64_t)v44, (uint64_t)v46, v45);
    sub_B7A70(v52, (uint64_t)v51, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, (uint64_t)v50, (uint64_t)v42, (uint64_t)v69, v49, (uint64_t)v44, (uint64_t)v46, v45);
    v72[0] = v52;
    v72[1] = v51;
    v72[2] = v40;
    v72[3] = v39;
    v72[4] = v70;
    v72[5] = v50;
    v72[6] = v42;
    v72[7] = v69;
    v72[8] = v53;
    v72[9] = v44;
    v72[10] = v46;
    v72[11] = (char *)v45;
    v72[12] = v47;
    v73 = v48;
    sub_EA15C(v72);
    sub_B7A70(v52, (uint64_t)v51, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, v54, (uint64_t)v42, (uint64_t)v69, (uint64_t)v53, (uint64_t)v44, (uint64_t)v46, v45);

  }
  else
  {

  }
}

void sub_B6120(char a1, char a2, _BYTE *a3, id a4)
{
  uint64_t ObjectType;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  BOOL v23;
  int v24;
  BOOL v25;
  int v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  _BYTE *v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  void *v54;
  char *v55;
  char *v56;
  __int16 v57;
  char *v58;
  __int16 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  char *v74;
  char *v75;
  char *v76;
  _BYTE *v77;
  char *v78[13];
  __int16 v79;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isHovering] = a2 & 1;
    ObjectType = swift_getObjectType();
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v9 && *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v10 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v10, &protocol descriptor for SelectableCell))
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage] + 16) == 1)
      {
        v11 = a3;
        v12 = 0;
      }
      else
      {
        v13 = swift_conformsToProtocol2(v10, &protocol descriptor for HoverableView);
        if (!v13)
        {
LABEL_41:
          __break(1u);
          return;
        }
        v14 = v13;
        v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
        v16 = a3;
        if ((v15(v10, v14) & 1) != 0)
          v12 = 1;
        else
          v12 = 2;
      }
      sub_B26B8(v12);
      v17 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v17, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      v18 = v9;
      sub_B27F0(v12, 0);

    }
  }
  objc_msgSend(a4, "locationInView:", a3);
  if ((a2 & 1) != 0)
  {
    v21 = v19;
    v22 = v20;
    v23 = sub_1AA580(v19, v20);
    v24 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle];
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] = v23;
    if (v23 != v24)
      sub_1A8C60();
    v25 = sub_1AA6FC(v21, v22);
    v26 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle];
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle] = v25;
    if (v25 == v26)
      goto LABEL_25;
LABEL_24:
    sub_1A8C60();
    goto LABEL_25;
  }
  v27 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle];
  a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnTitle] = 0;
  if ((v27 & 1) != 0)
    sub_1A8C60();
  v28 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle];
  a3[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_isMouseHoveringOnSubtitle] = 0;
  if ((v28 & 1) != 0)
    goto LABEL_24;
LABEL_25:
  v29 = swift_getObjectType();
  v30 = swift_conformsToProtocol2(v29, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v30)
  {
    __break(1u);
    goto LABEL_39;
  }
  v31 = v30;
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 16);
  v33 = a3;
  v77 = (_BYTE *)v32(v29, v31);
  v34 = (a2 & 1) != 0 && sub_1A1034(a4, v29, v31);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v35 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v73 = v33;
    if (v34)
    {
      v70 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v71 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v36 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v69 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v37 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v38 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v39 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v40 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v41 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v42 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v43 = *(void **)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v60 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v59 = v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v72 = *(void **)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v44 = v72;
      v67 = v37;
      v68 = v36;
      v65 = v39;
      v66 = v38;
      v63 = v41;
      v64 = v40;
      v61 = v43;
      v62 = v42;
      sub_B7A24(v36, v37, v38, v39, v40, v41, v42, v43);
    }
    else
    {
      v59 = *(_WORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v60 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v61 = *(void **)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v62 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v63 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v64 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v65 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v71 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v72 = *(void **)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v69 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v70 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v67 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v68 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v66 = *(_QWORD *)&v77[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v72, v71, v70, v69, v68, v67, v66, v65, v64, v63, v62, v61);
    }
    v45 = v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v46 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v47 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v58 = v46;
    v49 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v48 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v76 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v50 = *(_QWORD *)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v51 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v74 = (char *)v50;
    v75 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v52 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v53 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v55 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v54 = *(void **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v56 = *(char **)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v57 = *(_WORD *)(v35 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v45 = v72;
    *(_QWORD *)(v45 + 8) = v71;
    *(_QWORD *)(v45 + 16) = v70;
    *(_QWORD *)(v45 + 24) = v69;
    *(_QWORD *)(v45 + 32) = v68;
    *(_QWORD *)(v45 + 40) = v67;
    *(_QWORD *)(v45 + 48) = v66;
    *(_QWORD *)(v45 + 56) = v65;
    *(_QWORD *)(v45 + 64) = v64;
    *(_QWORD *)(v45 + 72) = v63;
    *(_QWORD *)(v45 + 80) = v62;
    *(_QWORD *)(v45 + 88) = v61;
    *(_QWORD *)(v45 + 96) = v60;
    *(_WORD *)(v45 + 104) = v59;
    sub_B79AC(v46, (uint64_t)v47, (uint64_t)v49, (uint64_t)v48, (uint64_t)v76, (uint64_t)v75, v50, (uint64_t)v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v55, v54);
    sub_B7A70(v58, (uint64_t)v47, (uint64_t)v49, (uint64_t)v48, (uint64_t)v76, (uint64_t)v75, (uint64_t)v74, (uint64_t)v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v55, v54);
    v78[0] = v58;
    v78[1] = v47;
    v78[2] = v49;
    v78[3] = v48;
    v78[4] = v76;
    v78[5] = v75;
    v78[6] = v74;
    v78[7] = v51;
    v78[8] = v52;
    v78[9] = v53;
    v78[10] = v55;
    v78[11] = (char *)v54;
    v78[12] = v56;
    v79 = v57;
    sub_EA15C(v78);
    sub_B7A70(v58, (uint64_t)v47, (uint64_t)v49, (uint64_t)v48, (uint64_t)v76, (uint64_t)v75, (uint64_t)v74, (uint64_t)v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v55, v54);

  }
  else
  {

  }
}

void sub_B6698(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  double v11;
  uint64_t ObjectType;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  _BYTE *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  char *v48;
  char *v49;
  __int16 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  __int16 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  char *v71;
  char *v72;
  _BYTE *v73;
  char *v74[13];
  __int16 v75;

  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering;
  v9 = a3[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering];
  if (v9 != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering] = a2 & 1;
    v10 = *(_QWORD *)&a3[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter];
    if (!v10)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    *(_BYTE *)(v10 + 56) = a2 & 1;
    swift_retain(v10);
    sub_2B33B8();
    *(_QWORD *)&v11 = swift_release(v10).n128_u64[0];
    if (v9 != a3[v8])
      objc_msgSend(a3, "setNeedsUpdateConfiguration", v11);
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground))
      v13 = a3;
    else
      v13 = 0;
    if (v13 && *(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v14 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v14, &protocol descriptor for SelectableCell))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (*(_BYTE *)(*(_QWORD *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                    + 16) == 1)
      {
        v15 = a3;
        v16 = 0;
      }
      else
      {
        v17 = swift_conformsToProtocol2(v14, &protocol descriptor for HoverableView);
        if (!v17)
        {
LABEL_36:
          __break(1u);
          return;
        }
        v18 = v17;
        v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
        v20 = a3;
        if ((v19(v14, v18) & 1) != 0)
          v16 = 1;
        else
          v16 = 2;
      }
      sub_B26B8(v16);
      v21 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v21, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v22 = v13;
      sub_B27F0(v16, 0);

    }
  }
  v23 = swift_getObjectType();
  v24 = swift_conformsToProtocol2(v23, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v24)
  {
    __break(1u);
    goto LABEL_33;
  }
  v25 = v24;
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 16);
  v27 = a3;
  v73 = (_BYTE *)v26(v23, v25);
  v28 = (a2 & 1) != 0 && sub_1A1034(a4, v23, v25);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v29 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v70 = v27;
    if (v28)
    {
      v67 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v68 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v30 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v66 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v31 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v32 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v33 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v34 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v35 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v36 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v37 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v58 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v57 = v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v69 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v38 = v69;
      v64 = v31;
      v65 = v30;
      v62 = v33;
      v63 = v32;
      v60 = v35;
      v61 = v34;
      v59 = v36;
      sub_B7A24(v30, v31, v32, v33, v34, v35, v36, v37);
    }
    else
    {
      v37 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v57 = *(_WORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v58 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v59 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v60 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v61 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v68 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v69 = *(void **)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v66 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v67 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v64 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v65 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v62 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v63 = *(_QWORD *)&v73[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v37);
    }
    v39 = v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v40 = *(_QWORD *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v53 = (char *)v40;
    v54 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v42 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v41 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v43 = *(_QWORD *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v44 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v71 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v72 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v45 = *(_QWORD *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v46 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v48 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v47 = *(void **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v49 = *(char **)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v50 = *(_WORD *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v39 = v69;
    *(_QWORD *)(v39 + 8) = v68;
    *(_QWORD *)(v39 + 16) = v67;
    *(_QWORD *)(v39 + 24) = v66;
    *(_QWORD *)(v39 + 32) = v65;
    *(_QWORD *)(v39 + 40) = v64;
    *(_QWORD *)(v39 + 48) = v63;
    *(_QWORD *)(v39 + 56) = v62;
    *(_QWORD *)(v39 + 64) = v61;
    *(_QWORD *)(v39 + 72) = v60;
    *(_QWORD *)(v39 + 80) = v59;
    *(_QWORD *)(v39 + 88) = v37;
    *(_QWORD *)(v39 + 96) = v58;
    *(_WORD *)(v39 + 104) = v57;
    v55 = (char *)v45;
    v51 = v45;
    v52 = (char *)v43;
    v56 = v43;
    sub_B79AC(v54, v40, (uint64_t)v42, (uint64_t)v41, (uint64_t)v72, v43, (uint64_t)v44, (uint64_t)v71, v45, (uint64_t)v46, (uint64_t)v48, v47);
    sub_B7A70(v54, (uint64_t)v53, (uint64_t)v42, (uint64_t)v41, (uint64_t)v72, (uint64_t)v52, (uint64_t)v44, (uint64_t)v71, v51, (uint64_t)v46, (uint64_t)v48, v47);
    v74[0] = v54;
    v74[1] = v53;
    v74[2] = v42;
    v74[3] = v41;
    v74[4] = v72;
    v74[5] = v52;
    v74[6] = v44;
    v74[7] = v71;
    v74[8] = v55;
    v74[9] = v46;
    v74[10] = v48;
    v74[11] = (char *)v47;
    v74[12] = v49;
    v75 = v50;
    sub_EA15C(v74);
    sub_B7A70(v54, (uint64_t)v53, (uint64_t)v42, (uint64_t)v41, (uint64_t)v72, v56, (uint64_t)v44, (uint64_t)v71, (uint64_t)v55, (uint64_t)v46, (uint64_t)v48, v47);

  }
  else
  {

  }
}

void sub_B6B7C(char a1, char a2, _BYTE *a3, void *a4)
{
  sub_B6B94(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering);
}

void sub_B6B88(char a1, char a2, _BYTE *a3, void *a4)
{
  sub_B6B94(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering);
}

void sub_B6B94(char a1, char a2, _BYTE *a3, void *a4, _QWORD *a5)
{
  uint64_t ObjectType;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  _BYTE *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char *v46;
  char *v47;
  __int16 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  char *v69;
  char *v70;
  _BYTE *v71;
  char *v72[13];
  __int16 v73;

  if (a3[*a5] != (a2 & 1))
  {
    a3[*a5] = a2 & 1;
    ObjectType = swift_getObjectType();
    v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v10 && *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v11 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v11, &protocol descriptor for SelectableCell))
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (*(_BYTE *)(*(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                    + 16) == 1)
      {
        v12 = a3;
        v13 = 0;
      }
      else
      {
        v14 = swift_conformsToProtocol2(v11, &protocol descriptor for HoverableView);
        if (!v14)
        {
LABEL_32:
          __break(1u);
          return;
        }
        v15 = v14;
        v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
        v17 = a3;
        if ((v16(v11, v15) & 1) != 0)
          v13 = 1;
        else
          v13 = 2;
      }
      sub_B26B8(v13);
      v18 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v18, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v19 = v10;
      sub_B27F0(v13, 0);

    }
  }
  v20 = swift_getObjectType();
  v21 = swift_conformsToProtocol2(v20, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v21)
  {
    __break(1u);
    goto LABEL_30;
  }
  v22 = v21;
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
  v24 = a3;
  v71 = (_BYTE *)v23(v20, v22);
  v25 = (a2 & 1) != 0 && sub_1A1034(a4, v20, v22);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v26 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v68 = v24;
    if (v25)
    {
      v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v27 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v28 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v29 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v30 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v31 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v32 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v33 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v34 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v55 = v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v35 = v67;
      v62 = v28;
      v63 = v27;
      v60 = v30;
      v61 = v29;
      v58 = v32;
      v59 = v31;
      v57 = v33;
      sub_B7A24(v27, v28, v29, v30, v31, v32, v33, v34);
    }
    else
    {
      v34 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v55 = *(_WORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v57 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v58 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v59 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v62 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v63 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v60 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v61 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57, v34);
    }
    v36 = v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v37 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v51 = (char *)v37;
    v52 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v39 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v38 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v40 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v42 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v41 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v69 = (char *)v41;
    v70 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v43 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v44 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v46 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v45 = *(void **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v47 = *(char **)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v48 = *(_WORD *)(v26 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v36 = v67;
    *(_QWORD *)(v36 + 8) = v66;
    *(_QWORD *)(v36 + 16) = v65;
    *(_QWORD *)(v36 + 24) = v64;
    *(_QWORD *)(v36 + 32) = v63;
    *(_QWORD *)(v36 + 40) = v62;
    *(_QWORD *)(v36 + 48) = v61;
    *(_QWORD *)(v36 + 56) = v60;
    *(_QWORD *)(v36 + 64) = v59;
    *(_QWORD *)(v36 + 72) = v58;
    *(_QWORD *)(v36 + 80) = v57;
    *(_QWORD *)(v36 + 88) = v34;
    *(_QWORD *)(v36 + 96) = v56;
    *(_WORD *)(v36 + 104) = v55;
    v53 = (char *)v43;
    v49 = v43;
    v50 = (char *)v40;
    v54 = v40;
    sub_B79AC(v52, v37, (uint64_t)v39, (uint64_t)v38, (uint64_t)v70, v40, (uint64_t)v42, v41, v43, (uint64_t)v44, (uint64_t)v46, v45);
    sub_B7A70(v52, (uint64_t)v51, (uint64_t)v39, (uint64_t)v38, (uint64_t)v70, (uint64_t)v50, (uint64_t)v42, (uint64_t)v69, v49, (uint64_t)v44, (uint64_t)v46, v45);
    v72[0] = v52;
    v72[1] = v51;
    v72[2] = v39;
    v72[3] = v38;
    v72[4] = v70;
    v72[5] = v50;
    v72[6] = v42;
    v72[7] = v69;
    v72[8] = v53;
    v72[9] = v44;
    v72[10] = v46;
    v72[11] = (char *)v45;
    v72[12] = v47;
    v73 = v48;
    sub_EA15C(v72);
    sub_B7A70(v52, (uint64_t)v51, (uint64_t)v39, (uint64_t)v38, (uint64_t)v70, v54, (uint64_t)v42, (uint64_t)v69, (uint64_t)v53, (uint64_t)v44, (uint64_t)v46, v45);

  }
  else
  {

  }
}

void sub_B7030(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t ObjectType;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  _BYTE *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char *v46;
  char *v47;
  __int16 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72[13];
  __int16 v73;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8011BE26F891C4A443938FF26204113410MarkButton_isHovering] = a2 & 1;
    sub_26FE38();
    ObjectType = swift_getObjectType();
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v9 && *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v10 = swift_getObjectType();
      if (swift_conformsToProtocol2(v10, &protocol descriptor for SelectableCell))
      {
        if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage]
                      + 16) == 1)
        {
          v11 = a3;
          v12 = 0;
        }
        else
        {
          v13 = swift_conformsToProtocol2(v10, &protocol descriptor for HoverableView);
          if (!v13)
          {
LABEL_37:
            __break(1u);
            return;
          }
          v14 = v13;
          v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
          v16 = a3;
          if ((v15(v10, v14) & 1) != 0)
            v12 = 1;
          else
            v12 = 2;
        }
        sub_B26B8(v12);
        v17 = swift_getObjectType();
        if (swift_conformsToProtocol2(v17, &protocol descriptor for CellWithBackgroundNeighbor))
        {
          v18 = v9;
          sub_B27F0(v12, 0);

          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_37;
    }
  }
LABEL_16:
  v19 = swift_getObjectType();
  v20 = swift_conformsToProtocol2(v19, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (v20)
    v21 = v20;
  else
    v21 = 0;
  if (v20)
    v22 = a3;
  else
    v22 = 0;
  if (v22)
  {
    v23 = swift_getObjectType();
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
    v25 = a3;
    v71 = (char *)v24(v23, v21);
    v26 = (a2 & 1) != 0 && sub_1A1034(a4, v23, v21);
    sub_2624F4(a2 & 1, a1 & 1);
    if (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
      || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
      || *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
    {
      v27 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
      v68 = v25;
      if (v26)
      {
        v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
        v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
        v28 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
        v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
        v29 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
        v30 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
        v31 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
        v32 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
        v33 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
        v34 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
        v35 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
        v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
        v55 = v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
        v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
        v36 = v67;
        v62 = v29;
        v63 = v28;
        v60 = v31;
        v61 = v30;
        v58 = v33;
        v59 = v32;
        v57 = v34;
        sub_B7A24(v28, v29, v30, v31, v32, v33, v34, v35);
      }
      else
      {
        v35 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
        v55 = *(_WORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
        v56 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
        v57 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
        v58 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
        v59 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
        v66 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
        v67 = *(void **)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
        v64 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
        v65 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
        v62 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
        v63 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
        v60 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
        v61 = *(_QWORD *)&v71[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
        sub_B79AC((char *)v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57, v35);
      }
      v37 = v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
      v38 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
      v51 = (char *)v38;
      v52 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
      v40 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
      v39 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
      v41 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
      v42 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
      v69 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
      v70 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
      v43 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
      v44 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
      v46 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
      v45 = *(void **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
      v47 = *(char **)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
      v48 = *(_WORD *)(v27 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
      *(_QWORD *)v37 = v67;
      *(_QWORD *)(v37 + 8) = v66;
      *(_QWORD *)(v37 + 16) = v65;
      *(_QWORD *)(v37 + 24) = v64;
      *(_QWORD *)(v37 + 32) = v63;
      *(_QWORD *)(v37 + 40) = v62;
      *(_QWORD *)(v37 + 48) = v61;
      *(_QWORD *)(v37 + 56) = v60;
      *(_QWORD *)(v37 + 64) = v59;
      *(_QWORD *)(v37 + 72) = v58;
      *(_QWORD *)(v37 + 80) = v57;
      *(_QWORD *)(v37 + 88) = v35;
      *(_QWORD *)(v37 + 96) = v56;
      *(_WORD *)(v37 + 104) = v55;
      v53 = (char *)v43;
      v49 = v43;
      v50 = (char *)v41;
      v54 = v41;
      sub_B79AC(v52, v38, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, v41, (uint64_t)v42, (uint64_t)v69, v43, (uint64_t)v44, (uint64_t)v46, v45);
      sub_B7A70(v52, (uint64_t)v51, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, (uint64_t)v50, (uint64_t)v42, (uint64_t)v69, v49, (uint64_t)v44, (uint64_t)v46, v45);
      v72[0] = v52;
      v72[1] = v51;
      v72[2] = v40;
      v72[3] = v39;
      v72[4] = v70;
      v72[5] = v50;
      v72[6] = v42;
      v72[7] = v69;
      v72[8] = v53;
      v72[9] = v44;
      v72[10] = v46;
      v72[11] = (char *)v45;
      v72[12] = v47;
      v73 = v48;
      sub_EA15C(v72);
      sub_B7A70(v52, (uint64_t)v51, (uint64_t)v40, (uint64_t)v39, (uint64_t)v70, v54, (uint64_t)v42, (uint64_t)v69, (uint64_t)v53, (uint64_t)v44, (uint64_t)v46, v45);

    }
    else
    {

    }
  }
}

void sub_B7500(char a1, char a2, _BYTE *a3, void *a4)
{
  uint64_t ObjectType;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  _BYTE *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  char *v45;
  __int16 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  char *v67;
  char *v68;
  _BYTE *v69;
  char *v70[13];
  __int16 v71;

  if (a3[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering] != (a2 & 1))
  {
    a3[OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_isHovering] = a2 & 1;
    sub_2AA31C();
    ObjectType = swift_getObjectType();
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackground) ? a3 : 0;
    if (v9 && *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_backgroundView])
    {
      v10 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v10, &protocol descriptor for SelectableCell))
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_selectableCellStorage] + 16) == 1)
      {
        v11 = a3;
        v12 = 0;
      }
      else
      {
        v13 = swift_conformsToProtocol2(v10, &protocol descriptor for HoverableView);
        if (!v13)
        {
LABEL_32:
          __break(1u);
          return;
        }
        v14 = v13;
        v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
        v16 = a3;
        if ((v15(v10, v14) & 1) != 0)
          v12 = 1;
        else
          v12 = 2;
      }
      sub_B26B8(v12);
      v17 = swift_getObjectType();
      if (!swift_conformsToProtocol2(v17, &protocol descriptor for CellWithBackgroundNeighbor))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v18 = v9;
      sub_B27F0(v12, 0);

    }
  }
  v19 = swift_getObjectType();
  v20 = swift_conformsToProtocol2(v19, &protocol descriptor for HoverableLegacyCellWithArtworkContainer);
  if (!v20)
  {
    __break(1u);
    goto LABEL_30;
  }
  v21 = v20;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 16);
  v23 = a3;
  v69 = (_BYTE *)v22(v19, v21);
  v24 = (a2 & 1) != 0 && sub_1A1034(a4, v19, v21);
  sub_2624F4(a2 & 1, a1 & 1);
  if (v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_style] == 6
    || *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_playAction]
    || *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_contextAction])
  {
    v25 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_artworkView];
    v66 = v23;
    if (v24)
    {
      v63 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 16];
      v64 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 8];
      v26 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 32];
      v62 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 24];
      v27 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 40];
      v28 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 48];
      v29 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 56];
      v30 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 64];
      v31 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 72];
      v32 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 80];
      v33 = *(void **)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 88];
      v54 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 96];
      v53 = v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 104] | (v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle + 105] << 8);
      v65 = *(void **)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_mt_hoverStyle];
      v34 = v65;
      v60 = v27;
      v61 = v26;
      v58 = v29;
      v59 = v28;
      v56 = v31;
      v57 = v30;
      v55 = v32;
      sub_B7A24(v26, v27, v28, v29, v30, v31, v32, v33);
    }
    else
    {
      v33 = *(void **)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 88];
      v53 = *(_WORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 104];
      v54 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 96];
      v55 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 80];
      v56 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 72];
      v57 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 64];
      v64 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 8];
      v65 = *(void **)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle];
      v62 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 24];
      v63 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 16];
      v60 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 40];
      v61 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 32];
      v58 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 56];
      v59 = *(_QWORD *)&v69[OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_defaultStyle + 48];
      sub_B79AC((char *)v65, v64, v63, v62, v61, v60, v59, v58, v57, v56, v55, v33);
    }
    v35 = v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
    v36 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
    v49 = (char *)v36;
    v50 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
    v38 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
    v37 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
    v39 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
    v40 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
    v67 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
    v68 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
    v41 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
    v42 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
    v44 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
    v43 = *(void **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
    v45 = *(char **)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 96);
    v46 = *(_WORD *)(v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 104);
    *(_QWORD *)v35 = v65;
    *(_QWORD *)(v35 + 8) = v64;
    *(_QWORD *)(v35 + 16) = v63;
    *(_QWORD *)(v35 + 24) = v62;
    *(_QWORD *)(v35 + 32) = v61;
    *(_QWORD *)(v35 + 40) = v60;
    *(_QWORD *)(v35 + 48) = v59;
    *(_QWORD *)(v35 + 56) = v58;
    *(_QWORD *)(v35 + 64) = v57;
    *(_QWORD *)(v35 + 72) = v56;
    *(_QWORD *)(v35 + 80) = v55;
    *(_QWORD *)(v35 + 88) = v33;
    *(_QWORD *)(v35 + 96) = v54;
    *(_WORD *)(v35 + 104) = v53;
    v51 = (char *)v41;
    v47 = v41;
    v48 = (char *)v39;
    v52 = v39;
    sub_B79AC(v50, v36, (uint64_t)v38, (uint64_t)v37, (uint64_t)v68, v39, (uint64_t)v40, (uint64_t)v67, v41, (uint64_t)v42, (uint64_t)v44, v43);
    sub_B7A70(v50, (uint64_t)v49, (uint64_t)v38, (uint64_t)v37, (uint64_t)v68, (uint64_t)v48, (uint64_t)v40, (uint64_t)v67, v47, (uint64_t)v42, (uint64_t)v44, v43);
    v70[0] = v50;
    v70[1] = v49;
    v70[2] = v38;
    v70[3] = v37;
    v70[4] = v68;
    v70[5] = v48;
    v70[6] = v40;
    v70[7] = v67;
    v70[8] = v51;
    v70[9] = v42;
    v70[10] = v44;
    v70[11] = (char *)v43;
    v70[12] = v45;
    v71 = v46;
    sub_EA15C(v70);
    sub_B7A70(v50, (uint64_t)v49, (uint64_t)v38, (uint64_t)v37, (uint64_t)v68, v52, (uint64_t)v40, (uint64_t)v67, (uint64_t)v51, (uint64_t)v42, (uint64_t)v44, v43);

  }
  else
  {

  }
}

char *sub_B79AC(char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  char *v16;

  if (result != (_BYTE *)&dword_0 + 1)
  {
    v16 = result;
    return (char *)sub_B7A24(a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_B7A24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v10;
  id v11;

  if (result)
  {
    v10 = result;
    swift_bridgeObjectRetain(a3);
    v11 = a8;
    swift_bridgeObjectRetain(v10);
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

char *sub_B7A70(char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (result != (_BYTE *)&dword_0 + 1)
  {

    return (char *)sub_B7AE8(a5, a6, a7, a8, a9, a10, a11, a12);
  }
  return result;
}

uint64_t sub_B7AE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);

    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_B7B30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_B7B54(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1B4CD4(v1, a1);
}

uint64_t sub_B7B5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_B7B80()
{
  uint64_t v0;

  sub_B367C(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_B7BA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1B4C3C(*(void **)(v1 + 16), a1);
}

unint64_t sub_B7BAC(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  char v16;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    result = sub_36DF0(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || v15 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + result))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_B7D28(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_B7EFC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v30, v10);
        v15 = v11;
        String.hash(into:)(v30, v12, v14);
        v16 = Hasher._finalize()();

        result = swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v17 < v8)
            goto LABEL_5;
        }
        else if (v17 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_OWORD *)(v21 + 32 * v3);
          v23 = (_OWORD *)(v21 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 2))
          {
            v9 = v23[1];
            *v22 = *v23;
            v22[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_B80EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_BYTE *)(v14 + v3);
          v16 = (_BYTE *)(v14 + v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_B82A4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v44 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v45 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v43(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_239FC(&qword_3D1D88, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ModernShelf.ItemPresentation, (uint64_t)&protocol conformance descriptor for ModernShelf.ItemPresentation);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v44)
        {
          if (v21 >= v44 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25, v26);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for ShelfCellHeight(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            v31 = v27 + v29 * a1;
            v32 = v29 * v9;
            v33 = v27 + v29 * v9;
            v34 = v33 + v29;
            if (v30 < v32 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v33, 1, v28);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v30 != v32)
              {
                swift_arrayInitWithTakeBackToFront(v31, v33);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v44 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v36;
    v38 = (-1 << a1) - 1;
  }
  else
  {
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v36;
    v37 = (-1 << a1) - 1;
  }
  *v36 = v38 & v37;
  v39 = *(_QWORD *)(a2 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v41;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_B857C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD v33[9];

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      while (1)
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v33, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v33, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
          break;
        if (v14 < v9)
          goto LABEL_11;
LABEL_12:
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_OWORD *)(v15 + 16 * v3);
        v17 = (_OWORD *)(v15 + 16 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
        v20 = *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72);
        v21 = v20 * v3;
        v22 = v18 + v20 * v3;
        v23 = v20 * v6;
        v24 = v18 + v20 * v6;
        v25 = v24 + v20;
        if (v21 < v23 || v22 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack(v22, v24, 1, v19);
        }
        else
        {
          v3 = v6;
          if (v21 == v23)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v22, v24);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v14 < v9)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v14)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v28 = *v27;
    v29 = (-1 << v3) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_B8778(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  do
  {
    do
    {
LABEL_4:
      while (v6)
      {
        v8 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v9 = v8 | (v2 << 6);
        v10 = *(_QWORD *)(a2 + 16);
        if (v10)
          goto LABEL_23;
      }
      v11 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_33;
      if (v11 >= v7)
        return 3;
      v12 = *(_QWORD *)(v3 + 8 * v11);
      ++v2;
      if (!v12)
      {
        v2 = v11 + 1;
        if (v11 + 1 >= v7)
          return 3;
        v12 = *(_QWORD *)(v3 + 8 * v2);
        if (!v12)
        {
          v2 = v11 + 2;
          if (v11 + 2 >= v7)
            return 3;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          if (!v12)
          {
            v2 = v11 + 3;
            if (v11 + 3 >= v7)
              return 3;
            v12 = *(_QWORD *)(v3 + 8 * v2);
            if (!v12)
            {
              v13 = v11 + 4;
              if (v13 >= v7)
                return 3;
              v12 = *(_QWORD *)(v3 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v2 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_34;
                  if (v2 >= v7)
                    return 3;
                  v12 = *(_QWORD *)(v3 + 8 * v2);
                  ++v13;
                  if (v12)
                    goto LABEL_22;
                }
              }
              v2 = v13;
            }
          }
        }
      }
LABEL_22:
      v14 = __clz(__rbit64(v12));
      v6 = (v12 - 1) & v12;
      v9 = v14 + (v2 << 6);
      v10 = *(_QWORD *)(a2 + 16);
    }
    while (!v10);
LABEL_23:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v9);
    if (*(unsigned __int8 *)(a2 + 32) == (_DWORD)v15)
      return v15;
  }
  while (v10 == 1);
  v16 = 33;
  while (1)
  {
    v17 = v16 - 31;
    if (__OFADD__(v16 - 32, 1))
      break;
    if (*(unsigned __int8 *)(a2 + v16) == (_DWORD)v15)
      return v15;
    ++v16;
    if (v17 == v10)
      goto LABEL_4;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_B88DC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v5 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_handler];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_image] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_isHovering] = 0;
  v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_animateHoverChanges] = 0;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_background;
  *(_QWORD *)&v2[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_imageView;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v8, "setTintColor:", v9);

  *(_QWORD *)&v2[v7] = v8;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews14BlurIconButton_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, a1, "ShelfKitCollectionViews/BlurIconButton.swift", 44, 2, a2, 0);
  __break(1u);
}

void *sub_B8A1C(void *a1, uint64_t a2)
{
  uint64_t ObjectType;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];
  uint64_t v15;
  _QWORD v16[2];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CellWithBackgroundNeighbor))
    v5 = a1;
  else
    v5 = 0;
  if (!v5)
  {
    v16[0] = a1;
    v16[1] = a2;
    v7 = a1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4750);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4758);
    if ((swift_dynamicCast(v14, v16, v8, v9, 6) & 1) != 0)
    {
      sub_1B738(v14, (uint64_t)v17);
      v10 = v18;
      v11 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4768);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v12, v12, v10, v11);
      v5 = *(void **)&v14[0];
      if (*(_QWORD *)&v14[0])
      {
        __swift_destroy_boxed_opaque_existential_0(v17);
        return v5;
      }
      __swift_destroy_boxed_opaque_existential_0(v17);
    }
    else
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));
      sub_D1D4((uint64_t)v14, &qword_3D4760);
    }
    return 0;
  }
  v6 = a1;
  return v5;
}

void sub_B8B48(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B389C(a1, a2, v2);
}

void sub_B8B50(char a1)
{
  uint64_t v1;

  sub_B5158(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_B8B5C()
{
  uint64_t v0;

  return sub_1A113C(*(uint64_t (**)(uint64_t))(v0 + 16));
}

void sub_B8B64(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B4578(a1, a2, v2);
}

void sub_B8B6C(char a1)
{
  uint64_t v1;

  sub_B7500(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_B8B78(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B44BC(a1, a2, v2, (void (*)(_QWORD, _BOOL8, id, id))sub_B7030);
}

void sub_B8B98(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B4338(a1, a2, v2);
}

void sub_B8BA0(char a1)
{
  uint64_t v1;

  sub_B6B94(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32), &OBJC_IVAR____TtC23ShelfKitCollectionViews17HighlightItemCell_isHovering);
}

void sub_B8BC4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B41B4(a1, a2, v2);
}

void sub_B8BCC(char a1)
{
  uint64_t v1;

  sub_B6B94(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32), &OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_isHovering);
}

void sub_B8BF0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B4030(a1, a2, v2);
}

uint64_t sub_B8BF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_B8C24(char a1)
{
  uint64_t v1;

  sub_B6B94(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32), &OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_isHovering);
}

uint64_t sub_B8C48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_B8C6C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B3D28(a1, a2, v2);
}

void sub_B8C74(char a1)
{
  uint64_t v1;

  sub_B6120(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(id *)(v1 + 32));
}

uint64_t sub_B8C80(void *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(void *, id))(v1 + 16))(a1, objc_msgSend(a1, "state"));
}

void sub_B8CC0(void *a1)
{
  uint64_t v1;

  sub_B25B8(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for EpisodeCellDoubleClickGestureRecognizer);
}

void sub_B8CE0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B3EAC(a1, a2, v2);
}

void sub_B8CE8(char a1)
{
  uint64_t v1;

  sub_B6698(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_B8CF4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B3BA4(a1, a2, v2);
}

void sub_B8CFC(char a1)
{
  uint64_t v1;

  sub_B5C58(a1, *(_BYTE *)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_B8D08(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B3718(a1, a2, v2);
}

void sub_B8D10(char a1)
{
  uint64_t v1;

  sub_B4C84(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_B8D1C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B3A20(a1, a2, v2);
}

void sub_B8D24(char a1)
{
  uint64_t v1;

  sub_B56F0(a1, *(_BYTE *)(v1 + 16), *(_BYTE **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_B8E28(uint64_t a1, char *a2, _QWORD *a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  __n128 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *);
  char *v69;
  __n128 v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, char *);
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  __n128 v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  __int128 v131;
  __int128 v132;

  v127 = a1;
  v125 = a2;
  v6 = type metadata accessor for AutomationSemantics(0);
  v126 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v121 = (char *)&v121 - v10;
  __chkstk_darwin(v11);
  v122 = (char *)&v121 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v121 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v121 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v121 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v121 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v121 - v26;
  __chkstk_darwin(v28);
  v123 = (char *)&v121 - v29;
  __chkstk_darwin(v30);
  v124 = (char *)&v121 - v31;
  sub_1D5D4((uint64_t)a3, (uint64_t)&v131);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v33 = type metadata accessor for LegacyEpisodeLockup(0);
  if (swift_dynamicCast(&v128, &v131, v32, v33, 6))
  {
    v34 = v128;
    *(_QWORD *)&v131 = 0;
    *((_QWORD *)&v131 + 1) = 0xE000000000000000;
    LOBYTE(v128) = a4;
    _print_unlocked<A, B>(_:_:)(&v128, &v131, &type metadata for ModernShelf.ItemKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v35 = *((_QWORD *)&v131 + 1);
    v122 = (char *)v131;
    v36 = swift_retain(v34);
    v37 = LegacyLockup.adamId.getter(v36);
    swift_release(v34);
    *(_QWORD *)&v131 = v37;
    v38 = sub_5AE80();
    v39 = BinaryInteger.description.getter(&type metadata for UInt64, v38);
    *((_QWORD *)&v132 + 1) = &type metadata for String;
    *(_QWORD *)&v131 = v39;
    *((_QWORD *)&v131 + 1) = v40;
    v42 = ModernShelf.id.getter(v41);
    v130 = &type metadata for String;
    v128 = v42;
    v129 = v43;
    static AutomationSemantics.shelfItem(itemKind:id:parentId:)(v122, v35, &v131, &v128);
    swift_bridgeObjectRelease(v35);
    sub_1FE78((uint64_t)&v128);
    v44 = sub_1FE78((uint64_t)&v131);
    v125 = v27;
    v45 = IndexPath.item.getter(v44);
    *((_QWORD *)&v132 + 1) = &type metadata for Int;
    *(_QWORD *)&v131 = v45;
    AutomationSemantics.attribute(key:value:)(0x7865646E69, 0xE500000000000000, &v131);
    v46 = *(void (**)(char *, uint64_t))(v126 + 8);
    v46(v15, v6);
    sub_1FE78((uint64_t)&v131);
    v47 = swift_retain(v34);
    v48 = LegacyLockup.isExplicit.getter(v47);
    swift_release(v34);
    *((_QWORD *)&v132 + 1) = &type metadata for Bool;
    LOBYTE(v131) = v48 & 1;
    AutomationSemantics.attribute(key:value:)(0x63696C7078457369, 0xEA00000000007469, &v131);
    v46(v18, v6);
    v49 = sub_1FE78((uint64_t)&v131);
    v50 = IndexPath.section.getter(v49);
    *((_QWORD *)&v132 + 1) = &type metadata for Int;
    *(_QWORD *)&v131 = v50;
    AutomationSemantics.attribute(key:value:)(0x646E49666C656873, 0xEA00000000007865, &v131);
    v46(v21, v6);
    sub_1FE78((uint64_t)&v131);
    *((_QWORD *)&v132 + 1) = &type metadata for Bool;
    LOBYTE(v131) = 1;
    v51 = v125;
    AutomationSemantics.attribute(key:value:)(0x646F736970457369, 0xE900000000000065, &v131);
    v46(v24, v6);
    v52 = sub_1FE78((uint64_t)&v131);
    v53 = LegacyEpisodeLockup.duration.getter(v52);
    if ((v54 & 1) != 0)
    {
      v53 = 0;
      *((_QWORD *)&v131 + 1) = 0;
      v132 = 0uLL;
    }
    else
    {
      *((_QWORD *)&v132 + 1) = &type metadata for Double;
    }
    *(_QWORD *)&v131 = v53;
    v78 = v123;
    AutomationSemantics.attribute(key:value:)(0x6E6F697461727564, 0xE800000000000000, &v131);
    v46(v51, v6);
    v79 = sub_1FE78((uint64_t)&v131);
    v80 = LegacyEpisodeLockup.mediaType.getter(v79);
    v81 = EpisodeMediaType.rawValue.getter(v80);
    *((_QWORD *)&v132 + 1) = &type metadata for String;
    *(_QWORD *)&v131 = v81;
    *((_QWORD *)&v131 + 1) = v82;
    v83 = v124;
    AutomationSemantics.attribute(key:value:)(0x707954616964656DLL, 0xE900000000000065, &v131);
    v46(v78, v6);
    sub_1FE78((uint64_t)&v131);
    UIView.setAutomationSemantics(_:)(v83);
    v84 = swift_release(v34);
    return ((uint64_t (*)(char *, uint64_t, __n128))v46)(v83, v6, v84);
  }
  v123 = v21;
  v124 = (char *)v6;
  sub_1D5D4((uint64_t)a3, (uint64_t)&v131);
  v55 = type metadata accessor for LegacyLockup(0);
  if (swift_dynamicCast(&v128, &v131, v32, v55, 6))
  {
    v56 = v128;
    *(_QWORD *)&v131 = 0;
    *((_QWORD *)&v131 + 1) = 0xE000000000000000;
    LOBYTE(v128) = a4;
    _print_unlocked<A, B>(_:_:)(&v128, &v131, &type metadata for ModernShelf.ItemKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v58 = *((_QWORD *)&v131 + 1);
    v57 = v131;
    *(_QWORD *)&v131 = LegacyLockup.adamId.getter(v59);
    v60 = sub_5AE80();
    v61 = BinaryInteger.description.getter(&type metadata for UInt64, v60);
    *((_QWORD *)&v132 + 1) = &type metadata for String;
    *(_QWORD *)&v131 = v61;
    *((_QWORD *)&v131 + 1) = v62;
    v64 = ModernShelf.id.getter(v63);
    v130 = &type metadata for String;
    v128 = v64;
    v129 = v65;
    static AutomationSemantics.shelfItem(itemKind:id:parentId:)(v57, v58, &v131, &v128);
    swift_bridgeObjectRelease(v58);
    sub_1FE78((uint64_t)&v128);
    v66 = sub_1FE78((uint64_t)&v131);
    v67 = IndexPath.item.getter(v66);
    *((_QWORD *)&v132 + 1) = &type metadata for Int;
    *(_QWORD *)&v131 = v67;
    AutomationSemantics.attribute(key:value:)(0x7865646E69, 0xE500000000000000, &v131);
    v68 = *(void (**)(char *, char *))(v126 + 8);
    v69 = v124;
    v68(v15, v124);
    sub_1FE78((uint64_t)&v131);
    v71 = LegacyLockup.isExplicit.getter(v70);
    *((_QWORD *)&v132 + 1) = &type metadata for Bool;
    LOBYTE(v131) = v71 & 1;
    v72 = v123;
    AutomationSemantics.attribute(key:value:)(0x63696C7078457369, 0xEA00000000007469, &v131);
    v68(v18, v69);
    v73 = sub_1FE78((uint64_t)&v131);
    v74 = IndexPath.section.getter(v73);
    *((_QWORD *)&v132 + 1) = &type metadata for Int;
    *(_QWORD *)&v131 = v74;
    AutomationSemantics.attribute(key:value:)(0x646E49666C656873, 0xEA00000000007865, &v131);
    v68(v72, v69);
    sub_1FE78((uint64_t)&v131);
    UIView.setAutomationSemantics(_:)(v24);
    v75 = swift_release(v56);
    v76 = v24;
    v77 = v69;
    return ((uint64_t (*)(char *, char *, __n128))v68)(v76, v77, v75);
  }
  sub_1D5D4((uint64_t)a3, (uint64_t)&v131);
  v86 = type metadata accessor for ShowHeader(0);
  if (!swift_dynamicCast(&v128, &v131, v32, v86, 6))
  {
    *(_QWORD *)&v131 = 0;
    *((_QWORD *)&v131 + 1) = 0xE000000000000000;
    LOBYTE(v128) = a4;
    _print_unlocked<A, B>(_:_:)(&v128, &v131, &type metadata for ModernShelf.ItemKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v97 = *((_QWORD *)&v131 + 1);
    v96 = v131;
    v98 = a3[3];
    v99 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v98);
    v100 = dispatch thunk of ModernShelfItem.shelfUniqueId.getter(v98, v99);
    *((_QWORD *)&v132 + 1) = &type metadata for String;
    *(_QWORD *)&v131 = v100;
    *((_QWORD *)&v131 + 1) = v101;
    v102 = ((uint64_t (*)(void))ModernShelf.id.getter)();
    v130 = &type metadata for String;
    v128 = v102;
    v129 = v103;
    v104 = v123;
    static AutomationSemantics.shelfItem(itemKind:id:parentId:)(v96, v97, &v131, &v128);
    swift_bridgeObjectRelease(v97);
    sub_1FE78((uint64_t)&v128);
    v105 = sub_1FE78((uint64_t)&v131);
    v106 = IndexPath.section.getter(v105);
    *((_QWORD *)&v132 + 1) = &type metadata for Int;
    *(_QWORD *)&v131 = v106;
    AutomationSemantics.attribute(key:value:)(0x646E49666C656873, 0xEA00000000007865, &v131);
    v68 = *(void (**)(char *, char *))(v126 + 8);
    v107 = v124;
    v68(v104, v124);
    sub_1FE78((uint64_t)&v131);
    UIView.setAutomationSemantics(_:)(v24);
    v76 = v24;
    v77 = v107;
    return ((uint64_t (*)(char *, char *, __n128))v68)(v76, v77, v75);
  }
  v87 = v128;
  *(_QWORD *)&v131 = 0;
  *((_QWORD *)&v131 + 1) = 0xE000000000000000;
  LOBYTE(v128) = a4;
  v88 = _print_unlocked<A, B>(_:_:)(&v128, &v131, &type metadata for ModernShelf.ItemKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v89 = v131;
  v90 = ShowHeader.followAction.getter(v88);
  if (!v90
    || (v91 = v90, v92 = PodcastOfferAction.adamId.getter(), v94 = v93, v95 = swift_release(v91), (v94 & 1) != 0))
  {
    v95 = 0uLL;
    v131 = 0u;
    v132 = 0u;
  }
  else
  {
    *((_QWORD *)&v132 + 1) = &type metadata for AdamID;
    *(_QWORD *)&v131 = v92;
  }
  v108 = v126;
  v109 = ModernShelf.id.getter(v95);
  v130 = &type metadata for String;
  v128 = v109;
  v129 = v110;
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)(v89, *((_QWORD *)&v89 + 1), &v131, &v128);
  swift_bridgeObjectRelease(*((_QWORD *)&v89 + 1));
  sub_1FE78((uint64_t)&v128);
  v111 = sub_1FE78((uint64_t)&v131);
  v112 = IndexPath.item.getter(v111);
  *((_QWORD *)&v132 + 1) = &type metadata for Int;
  *(_QWORD *)&v131 = v112;
  v113 = v121;
  AutomationSemantics.attribute(key:value:)(0x7865646E69, 0xE500000000000000, &v131);
  v114 = *(void (**)(char *, char *))(v108 + 8);
  v115 = v8;
  v116 = v124;
  v114(v115, v124);
  v117 = sub_1FE78((uint64_t)&v131);
  v118 = IndexPath.section.getter(v117);
  *((_QWORD *)&v132 + 1) = &type metadata for Int;
  *(_QWORD *)&v131 = v118;
  v119 = v122;
  AutomationSemantics.attribute(key:value:)(0x646E49666C656873, 0xEA00000000007865, &v131);
  v114(v113, v116);
  sub_1FE78((uint64_t)&v131);
  UIView.setAutomationSemantics(_:)(v119);
  v120 = swift_release(v87);
  return ((uint64_t (*)(char *, char *, __n128))v114)(v119, v116, v120);
}

uint64_t getEnumTagSinglePayload for ProductPageID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductPageID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_B98E4 + 4 * byte_2F3DB5[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_B9918 + 4 * byte_2F3DB0[v4]))();
}

uint64_t sub_B9918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B9920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB9928);
  return result;
}

uint64_t sub_B9934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB993CLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_B9940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B9948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductPageID()
{
  return &type metadata for ProductPageID;
}

uint64_t getEnumTagSinglePayload for ShelfItemSubcomponentID(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfItemSubcomponentID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_B9A40 + 4 * byte_2F3DBF[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_B9A74 + 4 * byte_2F3DBA[v4]))();
}

uint64_t sub_B9A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_B9A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xB9A84);
  return result;
}

uint64_t sub_B9A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xB9A98);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_B9A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_B9AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShelfItemSubcomponentID()
{
  return &type metadata for ShelfItemSubcomponentID;
}

uint64_t sub_B9AC0()
{
  return sub_BA0E8(&qword_3D4778, &qword_3D4780);
}

uint64_t sub_B9AE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_B9B1C + 4 * byte_2F3DC4[a1]))(0x6C746954776F6873, 0xE900000000000065);
}

uint64_t sub_B9B1C()
{
  return 0x766F7250776F6873;
}

unint64_t sub_B9B3C()
{
  return 0xD000000000000010;
}

uint64_t sub_B9C64()
{
  return 0x61426C6C65737075;
}

uint64_t sub_B9C88()
{
  return 0x617461646174656DLL;
}

uint64_t sub_B9CA8()
{
  return 0x6956676E69746172;
}

uint64_t sub_B9CC4()
{
  return 1852793705;
}

uint64_t sub_B9CD4()
{
  return 0x5465646F73697065;
}

uint64_t sub_B9CF4()
{
  return 0x5365646F73697065;
}

uint64_t sub_B9D18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_B9AE4(*a1);
  v5 = v4;
  v6 = sub_B9AE4(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_B9DA0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = sub_B9AE4(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_B9E00(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = sub_B9AE4(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_B9E40(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = sub_B9AE4(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_B9E9C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_BA170(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_B9EC8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_B9AE4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_B9EF0(_QWORD *a1@<X8>)
{
  *a1 = &off_379FD0;
}

uint64_t sub_B9F00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_B9F34 + 4 * byte_2F3DD6[a1]))(0x6B726F77747261, 0xE700000000000000);
}

uint64_t sub_B9F34()
{
  return 0x746E6F4379616C70;
}

uint64_t sub_B9F54()
{
  return 0x4965646F73697065;
}

uint64_t sub_B9F74()
{
  return 0x75747865746E6F63;
}

unint64_t sub_B9F98()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_B9FB4()
{
  return 0x6E6F73616572;
}

uint64_t sub_B9FC8()
{
  return 0x656C746974;
}

uint64_t sub_B9FDC()
{
  return 0x7972616D6D7573;
}

void sub_B9FF0(char *a1)
{
  sub_AA5B4(*a1);
}

void sub_B9FFC()
{
  char *v0;

  sub_202FB0(0, *v0);
}

void sub_BA008(uint64_t a1)
{
  char *v1;

  sub_202E54(a1, *v1);
}

void sub_BA010(uint64_t a1)
{
  char *v1;

  sub_202FB0(a1, *v1);
}

unint64_t sub_BA018@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_BA1C0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_BA044@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_B9F00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_BA06C(_QWORD *a1@<X8>)
{
  *a1 = &off_37A0E8;
}

unint64_t sub_BA080()
{
  unint64_t result;

  result = qword_3D4788;
  if (!qword_3D4788)
  {
    result = swift_getWitnessTable(&unk_2F3FF8, &type metadata for ShelfItemSubcomponentID);
    atomic_store(result, (unint64_t *)&qword_3D4788);
  }
  return result;
}

uint64_t sub_BA0C4()
{
  return sub_BA0E8(&qword_3D4790, &qword_3D4798);
}

uint64_t sub_BA0E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_BA12C()
{
  unint64_t result;

  result = qword_3D47A0;
  if (!qword_3D47A0)
  {
    result = swift_getWitnessTable(&unk_2F40D0, &type metadata for ProductPageID);
    atomic_store(result, (unint64_t *)&qword_3D47A0);
  }
  return result;
}

uint64_t sub_BA170(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_379E00, a1, a2, &unk_3CFF90);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x12)
    return 18;
  else
    return v3;
}

unint64_t sub_BA1C0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_37A008, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

id sub_BA20C()
{
  char *v0;
  id result;
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SizeClassAutoMarginView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  result = objc_msgSend(v0, "bounds");
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews23SizeClassAutoMarginView_totalWidth;
  v4 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23SizeClassAutoMarginView_totalWidth];
  *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23SizeClassAutoMarginView_totalWidth] = v2;
  if (v2 != v4)
  {
    v5 = SizeClass.init(width:)(v2);
    v6 = SizeClass.margins(width:)(v5, *(double *)&v0[v3]);
    return objc_msgSend(v0, "setLayoutMargins:", UIEdgeInsets.init(topBottom:sides:)(0.0, v6));
  }
  return result;
}

id sub_BA394()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SizeClassAutoMarginView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SizeClassAutoMarginView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23SizeClassAutoMarginView);
}

id sub_BA6D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeaderButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews12HeaderButton);
}

__n128 sub_BA728()
{
  __n128 result;

  __asm { FMOV            V0.2D, #22.0 }
  xmmword_3FACB0 = (__int128)result;
  return result;
}

char *sub_BA738()
{
  void *v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  void *v6;
  id v7;
  unsigned __int8 v8;
  char *v9;
  unsigned __int8 v11;

  sub_1BFEF4();
  v1 = v0;
  v2 = objc_allocWithZone((Class)UIColor);
  v3 = v1;
  v4 = objc_msgSend(v2, "initWithWhite:alpha:", 0.0, 0.13);
  v5 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v6 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v5 = v4;
  *((_QWORD *)v5 + 1) = 0x4008000000000000;
  *((_QWORD *)v5 + 2) = 0;
  *((_QWORD *)v5 + 3) = 0;
  v7 = v4;

  sub_E9020();
  v8 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 1;
  v11 = v8;
  v9 = v3;
  sub_EB33C(&v11);

  return v9;
}

char *sub_BA80C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  char v23;
  id v24;
  __int16 v25;
  id v26;
  double v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  double leading;
  double bottom;
  double trailing;
  char *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::OpaquePointer v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  Class isa;
  void *v58;
  id v59;
  Swift::String v60;
  Swift::String v61;
  unint64_t v62;
  NSString v63;
  void *v64;
  id v65;
  Swift::String v66;
  Swift::String v67;
  unint64_t v68;
  NSString v69;
  id v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  __int16 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  objc_class *ObjectType;
  uint64_t v80;
  char v81;
  objc_super v82;
  void *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int16 v93;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_hStackView;
  v10 = objc_allocWithZone((Class)UIStackView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setAxis:", 0);
  objc_msgSend(v12, "setAlignment:", 3);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setAllowsGroupBlending:", 0);

  objc_msgSend(v12, "setSpacing:", 6.0);
  *(_QWORD *)&v4[v9] = v12;
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon;
  *(_QWORD *)&v11[v14] = sub_BA738();
  v77 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button;
  v78 = v11;
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v15 = (void *)qword_3FB490;
  v16 = qword_3FB4A8;
  v73 = qword_3FB4A0;
  v74 = qword_3FB498;
  v17 = qword_3FB4B0;
  v18 = qword_3FB4B8;
  v19 = xmmword_3FB4C0;
  v20 = qword_3FB4D0;
  v21 = xmmword_3FB4D8;
  v76 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v22 = word_3FB4E8;
  v75 = word_3FB4E8;
  v23 = HIBYTE(word_3FB4E8);
  v72 = HIBYTE(word_3FB4E8);
  v71 = objc_allocWithZone((Class)type metadata accessor for ChevronButton());
  sub_DDA0(v15, v74, v73, v16, v17, v18, (void *)v19, *((uint64_t *)&v19 + 1), v20, v21, *((uint64_t *)&v21 + 1), v22, v23);
  v24 = objc_msgSend(v71, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v83 = v15;
  v84 = v74;
  if (v72)
    v25 = 256;
  else
    v25 = 0;
  v85 = v73;
  v86 = v16;
  v87 = v17;
  v88 = v18;
  v89 = v19;
  v90 = v20;
  v91 = v21;
  v92 = v76;
  v93 = v25 | v75;
  v26 = v24;
  sub_22158C((uint64_t)&v83);

  LODWORD(v27) = 1148846080;
  objc_msgSend(v26, "setContentCompressionResistancePriority:forAxis:", 1, v27);
  *(_QWORD *)&v78[v77] = v26;
  *(_QWORD *)&v78[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph] = 0;

  v82.receiver = v78;
  v82.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v82, "initWithFrame:", a1, a2, a3, a4);
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_hStackView;
  v30 = *(void **)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_hStackView];
  v31 = v28;
  objc_msgSend(v31, "addSubview:", v30);
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v35 = v31;
  v36 = v30;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v36, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v37 = *(void **)&v28[v29];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_2EFC90;
  v40 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon;
  v41 = *(void **)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon];
  *(_QWORD *)(v39 + 32) = v41;
  v80 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button;
  v42 = *(void **)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button];
  *(_QWORD *)(v39 + 40) = v42;
  v83 = (void *)v39;
  specialized Array._endMutation()(v39);
  v43._rawValue = v83;
  v44 = v37;
  v45 = v41;
  v46 = v42;
  UIStackView.addArrangedSubviews(_:)(v43);

  swift_bridgeObjectRelease(v43._rawValue);
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v48 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v48 + 16) = xmmword_2EFC90;
  v49 = objc_msgSend(*(id *)&v35[v40], "heightAnchor");
  if (qword_3CF2A8 != -1)
    swift_once(&qword_3CF2A8, sub_BA728);
  v50 = objc_retainAutoreleasedReturnValue(objc_msgSend(v49, "constraintEqualToConstant:", *((double *)&xmmword_3FACB0
                                                                                           + 1)));

  *(_QWORD *)(v48 + 32) = v50;
  v51 = *(void **)&v35[v40];
  v52 = objc_msgSend(v51, "heightAnchor");
  v53 = objc_msgSend(v51, "widthAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v48 + 40) = v54;
  v83 = (void *)v48;
  specialized Array._endMutation()(v55);
  v56 = v83;
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", isa, swift_bridgeObjectRelease(v56).n128_f64[0]);

  v58 = *(void **)&v35[v40];
  v83 = 0;
  v84 = 0xE000000000000000;
  v59 = v58;
  v60._countAndFlagsBits = 0xD000000000000014;
  v60._object = (void *)0x8000000000308A30;
  String.append(_:)(v60);
  v61._countAndFlagsBits = 46;
  v61._object = (void *)0xE100000000000000;
  String.append(_:)(v61);
  v81 = 15;
  _print_unlocked<A, B>(_:_:)(&v81, &v83, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v62 = v84;
  v63 = String._bridgeToObjectiveC()();
  objc_msgSend(v59, "setAccessibilityIdentifier:", v63, swift_bridgeObjectRelease(v62).n128_f64[0]);

  v64 = *(void **)&v35[v80];
  v83 = 0;
  v84 = 0xE000000000000000;
  v65 = v64;
  v66._countAndFlagsBits = 0xD000000000000014;
  v66._object = (void *)0x8000000000308A30;
  String.append(_:)(v66);
  v67._countAndFlagsBits = 46;
  v67._object = (void *)0xE100000000000000;
  String.append(_:)(v67);
  v81 = 1;
  _print_unlocked<A, B>(_:_:)(&v81, &v83, &type metadata for ProductPageID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v68 = v84;
  v69 = String._bridgeToObjectiveC()();
  objc_msgSend(v65, "setAccessibilityIdentifier:", v69, swift_bridgeObjectRelease(v68).n128_f64[0]);

  return v35;
}

uint64_t type metadata accessor for LegacyPrimaryButtonView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView);
}

uint64_t sub_BAF20()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph));
}

uint64_t sub_BAF30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph) = a1;
  swift_release(v3);
  v4 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  swift_retain_n(a1, 2);
  return swift_release(v5);
}

void sub_BAFBC()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  char v12;
  id v13;
  __int16 v14;
  id v15;
  double v16;
  id v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_hStackView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setAxis:", 0);
  objc_msgSend(v2, "setAlignment:", 3);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v2, "layer");
  objc_msgSend(v3, "setAllowsGroupBlending:", 0);

  objc_msgSend(v2, "setSpacing:", 6.0);
  *(_QWORD *)&v0[v1] = v2;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_icon;
  *(_QWORD *)&v0[v4] = sub_BA738();
  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_button;
  v25 = v0;
  if (qword_3CF4B8 != -1)
    swift_once(&qword_3CF4B8, sub_13FCC0);
  v5 = (void *)qword_3FB490;
  v20 = qword_3FB4A0;
  v21 = qword_3FB498;
  v6 = qword_3FB4B0;
  v19 = qword_3FB4A8;
  v7 = qword_3FB4B8;
  v9 = xmmword_3FB4C0;
  v8 = qword_3FB4D0;
  v10 = xmmword_3FB4D8;
  v23 = *((_QWORD *)&xmmword_3FB4D8 + 1);
  v11 = word_3FB4E8;
  v22 = word_3FB4E8;
  v12 = HIBYTE(word_3FB4E8);
  v18 = HIBYTE(word_3FB4E8);
  v17 = objc_allocWithZone((Class)type metadata accessor for ChevronButton());
  sub_DDA0(v5, v21, v20, v19, v6, v7, (void *)v9, *((uint64_t *)&v9 + 1), v8, v10, *((uint64_t *)&v10 + 1), v11, v12);
  v13 = objc_msgSend(v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = v5;
  v27 = v21;
  if (v18)
    v14 = 256;
  else
    v14 = 0;
  v28 = v20;
  v29 = v19;
  v30 = v6;
  v31 = v7;
  v32 = v9;
  v33 = v8;
  v34 = v10;
  v35 = v23;
  v36 = v14 | v22;
  v15 = v13;
  sub_22158C((uint64_t)&v26);

  LODWORD(v16) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v16);
  *(_QWORD *)&v25[v24] = v15;
  *(_QWORD *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews23LegacyPrimaryButtonView_objectGraph] = 0;

  v26 = 0;
  v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v27);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/LegacyPrimaryButtonView.swift", 53, 2, 66, 0);
  __break(1u);
}

id sub_BB268()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v11;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___timestampView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___timestampView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___timestampView);
  }
  else
  {
    v4 = v0;
    v11 = 1;
    v5 = sub_BB2FC();
    v6 = objc_allocWithZone((Class)type metadata accessor for TranscriptTimestampView());
    v7 = TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(&v11, v5);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

char *sub_BB2FC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textView];
  }
  else
  {
    v4 = v0;
    v5 = v0;
    v6 = sub_C8028((uint64_t)v5, v4);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v6, "setFindInteractionEnabled:", 1);
    objc_msgSend(v6, "setEditable:", 0);
    v7 = (void *)objc_opt_self(UIColor);
    v8 = v6;
    v9 = objc_msgSend(v7, "clearColor");
    objc_msgSend(v8, "setBackgroundColor:", v9);

    objc_msgSend(v8, "setAutocorrectionType:", 1);
    objc_msgSend(v8, "setDelegate:", v5);
    objc_msgSend(v8, "setTextDragDelegate:", v5);
    objc_msgSend(v8, "setSelectable:", 1);
    objc_msgSend(v8, "setAlwaysBounceVertical:", 1);
    objc_msgSend(v8, "setDataDetectorTypes:", 2);
    objc_msgSend(v8, "setWritingToolsBehavior:", -1);
    v10 = sub_BB4AC();
    objc_msgSend(v8, "addGestureRecognizer:", v10);

    v11 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_BB4AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textViewTapGesture;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textViewTapGesture);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textViewTapGesture);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "highlightParagraph:");
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_BB540(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___timestampView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_lastSelectionStart] = 0;
  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textViewTapGesture] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations] = 0;
  v8 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar];
  *(_QWORD *)v8 = UINavigationBar.overrideBackButtonStyle.setter;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_objectGraph] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel] = a2;
  v17.receiver = v3;
  v17.super_class = ObjectType;
  swift_retain(a1);
  swift_retain(a2);
  v9 = objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
  v10 = (void *)objc_opt_self(NSNotificationCenter);
  v11 = v9;
  v12 = objc_msgSend(v10, "defaultCenter", v17.receiver, v17.super_class);
  objc_msgSend(v12, "addObserver:selector:name:object:", v11, "keyboardWillShow:", UIKeyboardPrivateWillShowNotification, 0);

  v13 = objc_msgSend(v10, "defaultCenter");
  v14 = UIKeyboardPrivateWillHideNotification;
  v15 = v11;
  objc_msgSend(v13, "addObserver:selector:name:object:", v15, "keyboardWillHide", v14, 0);

  swift_release(a1);
  swift_release(a2);
  return v15;
}

id sub_BB758()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_BB268();
  objc_msgSend(v2, "removeFromSuperview");

  v3 = (void *)objc_opt_self(NSNotificationCenter);
  v4 = objc_msgSend(v3, "defaultCenter");
  objc_msgSend(v4, "removeObserver:name:object:", v0, UIKeyboardPrivateWillShowNotification, 0);

  v5 = objc_msgSend(v3, "defaultCenter");
  objc_msgSend(v5, "removeObserver:name:object:", v0, UIKeyboardPrivateWillHideNotification, 0);

  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

id sub_BB924()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  Class isa;
  void *v33;
  id v34;
  objc_super v35;

  v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v35, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  v4 = sub_BB2FC();
  objc_msgSend(v3, "addSubview:", v4);

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_2F0A20;
  v7 = sub_BB2FC();
  v8 = objc_msgSend(v7, "topAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = result;
  v10 = objc_msgSend(result, "topAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = sub_BB2FC();
  v13 = objc_msgSend(v12, "leadingAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = result;
  v15 = objc_msgSend(result, "safeAreaLayoutGuide");

  v16 = objc_msgSend(v15, "leadingAnchor");
  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v6 + 40) = v17;
  v18 = sub_BB2FC();
  v19 = objc_msgSend(v18, "trailingAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v20 = result;
  v21 = objc_msgSend(result, "safeAreaLayoutGuide");

  v22 = objc_msgSend(v21, "trailingAnchor");
  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v6 + 48) = v23;
  v24 = sub_BB2FC();
  v25 = objc_msgSend(v24, "bottomAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v26 = result;
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = objc_msgSend(v26, "bottomAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v6 + 56) = v29;
  specialized Array._endMutation()(v30);
  v31 = v6;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v33 = result;
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v33, "setBackgroundColor:", v34);

    return (id)sub_BBD34();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_BBD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = type metadata accessor for MetricsEventType(0);
  v35 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ScalarDictionary(0);
  v38 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - v8;
  v39 = type metadata accessor for MetricsPageFields(0, v7);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E50);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_metricsController);
  v16 = *(_QWORD *)(v0 + 24);
  v17 = static MetricsPageType.transcript.getter(v13);
  v19 = v18;
  v41 = v16;
  v20 = sub_5AE80();
  v21 = BinaryInteger.description.getter(&type metadata for UInt64, v20);
  MetricsPageFields.init(pageID:pageType:pageDetails:sharedContent:customFields:)(v21, v22, v17, v19, 0, 0, 0);
  ScalarDictionary.init()(v23);
  v34 = sub_272D78((uint64_t)_swiftEmptyArrayStorage);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E58);
  v25 = *(_QWORD *)(type metadata accessor for PageMetrics.Instruction(0) - 8);
  v26 = swift_allocObject(v24, ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ 2 * *(_QWORD *)(v25 + 72), *(unsigned __int8 *)(v25 + 80) | 7);
  *(_OWORD *)(v26 + 16) = xmmword_2EFA20;
  v27 = *(void (**)(char *, _QWORD, uint64_t))(v35 + 104);
  v27(v3, enum case for MetricsEventType.page(_:), v1);
  PageMetrics.Instruction.init(eventType:)(v3);
  v27(v3, enum case for MetricsEventType.impressions(_:), v1);
  v28 = PageMetrics.Instruction.init(eventType:)(v3);
  v29 = MetricsPageFields.metricsFields.getter(v28);
  v30 = v38;
  v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v5, v9, v40);
  PageMetrics.init(instructions:pageFields:custom:clickLocationFields:)(v26, v29, v5, v34);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v39);
  v32 = type metadata accessor for PageMetrics(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v15, 0, 1, v32);
  return MetricsController.pageMetrics.setter(v15);
}

double sub_BC058(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  double result;
  id v32[3];
  objc_super v33;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v5);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E28);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E30);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v32[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33.receiver = v2;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "viewIsAppearing:", a1 & 1, v14);
  swift_beginAccess(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel]+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel__state, v32, 33, 0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D18);
  Published.projectedValue.getter(v17);
  swift_endAccess(v32);
  v18 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v32[0] = (id)static OS_dispatch_queue.main.getter(v19);
  v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
  v21 = sub_10EDC(&qword_3D4E38, &qword_3D4E28, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v22 = sub_1E2DC();
  Publisher.receive<A>(on:options:)(v32, v7, v8, v18, v21, v22);
  sub_D1D4((uint64_t)v7, &qword_3D2E70);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = swift_allocObject(&unk_37FBC0, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v2);
  v24 = sub_BB2FC();
  v25 = swift_allocObject(&unk_37FE90, 32, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = v23;
  v26 = sub_10EDC((unint64_t *)&unk_3D4E40, &qword_3D4E30, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v27 = Publisher<>.sink(receiveValue:)(sub_C9614, v25, v12, v26);
  v28 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v28);
  v29 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_subscriptions];
  swift_beginAccess(v29, v32, 33, 0);
  AnyCancellable.store(in:)(v29);
  swift_endAccess(v32);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

void sub_BC34C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = a3 + 16;
  if (!*(_BYTE *)(a1 + 8))
  {
    v4 = *(id *)a1;
    objc_msgSend(a2, "setAttributedText:", *(id *)a1);
    swift_beginAccess(v3, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (!Strong)
      goto LABEL_6;
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    swift_retain(v7);

    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v7 + 72);
    v10 = *(_BYTE *)(v7 + 80);
    swift_release(v7);
    if ((v10 & 1) != 0)
      goto LABEL_6;
    swift_beginAccess(v3, v15, 0, 0);
    v11 = swift_unknownObjectWeakLoadStrong(v3);
    if (v11)
    {
      v12 = (void *)v11;
      sub_BC484(v8, v9, 0);
      sub_C7DD8(v4, 0);

    }
    else
    {
LABEL_6:
      sub_C7DD8(v4, 0);
    }
  }
  swift_beginAccess(v3, v17, 0, 0);
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setNeedsUpdateContentUnavailableConfiguration");

  }
}

void sub_BC484(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  char *v35;
  uint8_t *v36;
  void **v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void **aBlock;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v70;
  uint64_t (*v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;

  LODWORD(v64) = a3;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for Logger(0);
  v8 = *(char **)(v7 - 8);
  __chkstk_darwin(v7);
  v65 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - v11;
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_2F44E0);
  v15 = swift_getKeyPath(&unk_2F4508);
  static Published.subscript.getter(&aBlock, v13, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  if ((_BYTE)v68)
  {
    sub_C7DD8(aBlock, v68);
    return;
  }
  v16 = a1;
  v62 = v7;
  v63 = v3;
  v61 = ObjectType;
  v17 = v8;
  sub_C7DD8(aBlock, 0);
  if ((v64 & 1) != 0)
  {
    v32 = static Logger.transcripts.getter(v18);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter();
    v35 = v17;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = (void **)swift_slowAlloc(32, -1);
      aBlock = v37;
      *(_DWORD *)v36 = 136315138;
      v38 = _typeName(_:qualified:)(v61, 0);
      v40 = v39;
      v73 = sub_37E78(v38, v39, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      swift_bridgeObjectRelease(v40);
      _os_log_impl(&dword_0, v33, v34, "[%s] reset highlight and scroll position.", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v35 + 1))(v65, v62);
    v41 = sub_BB2FC();
    objc_msgSend(v41, "setSelectedRange:", 0, 0);

    v42 = sub_BB2FC();
    objc_msgSend(v42, "scrollToTopAnimated:", 1);
LABEL_17:

    return;
  }
  v73 = 0;
  v74 = 0;
  v75 = 1;
  v19 = sub_BB2FC();
  v20 = objc_msgSend(v19, "attributedText");

  v65 = v17;
  if (v20)
  {
    v21 = v12;
    if (qword_3CF2C0 != -1)
      swift_once(&qword_3CF2C0, sub_C68BC);
    v22 = qword_3D4850;
    v23 = sub_BB2FC();
    v24 = objc_msgSend(v23, "attributedText");

    if (!v24)
      goto LABEL_20;
    v25 = objc_msgSend(v24, "length");

    v26 = (_QWORD *)swift_allocObject(&unk_37FEB8, 40, 7);
    v26[2] = v16;
    v26[3] = a2;
    v26[4] = &v73;
    v27 = swift_allocObject(&unk_37FEE0, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_C962C;
    *(_QWORD *)(v27 + 24) = v26;
    v71 = sub_C9978;
    v72 = v27;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = sub_26D688;
    v70 = &block_descriptor_84_1;
    v28 = _Block_copy(&aBlock);
    v29 = v72;
    swift_retain(v27);
    objc_msgSend(v20, "enumerateAttribute:inRange:options:usingBlock:", v22, 0, v25, 0, v28, swift_release(v29).n128_f64[0]);

    _Block_release(v28);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v27, "", 149, 849, 130, 1);
    swift_release(v27);
    if ((v25 & 1) == 0)
    {
      v31 = v61;
      if ((v75 & 1) != 0)
      {
        swift_release(v26);
        return;
      }
      v44 = v73;
      v43 = v74;
      v45 = static Logger.transcripts.getter(v30);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc(22, -1);
        v64 = swift_slowAlloc(64, -1);
        aBlock = (void **)v64;
        *(_DWORD *)v48 = 136315394;
        v49 = _typeName(_:qualified:)(v31, 0);
        v51 = v50;
        v66 = sub_37E78(v49, v50, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &aBlock);
        v52 = swift_bridgeObjectRelease(v51);
        *(_WORD *)(v48 + 12) = 2080;
        v53 = _NSRange.description.getter(v44, v43, v52);
        v55 = v54;
        v66 = sub_37E78(v53, v54, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &aBlock);
        swift_bridgeObjectRelease(v55);
        _os_log_impl(&dword_0, v46, v47, "[%s] selecting range: %s.", (uint8_t *)v48, 0x16u);
        v56 = v64;
        swift_arrayDestroy(v64, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v48, -1, -1);
      }

      (*((void (**)(char *, uint64_t))v65 + 1))(v21, v62);
      v57 = v63;
      v58 = sub_BB2FC();
      objc_msgSend(v58, "select:", v57);

      v59 = v57 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange;
      *(_QWORD *)v59 = v44;
      *(_QWORD *)(v59 + 8) = v43;
      *(_BYTE *)(v59 + 16) = 0;
      v42 = sub_BB2FC();
      objc_msgSend(v42, "setSelectedRange:", v44, v43);
      swift_release(v26);
      goto LABEL_17;
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
}

void sub_BCAE0(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  objc_super v22;

  v2 = v1;
  v22.receiver = v2;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, "viewWillAppear:", a1 & 1);
  v4 = objc_msgSend(v2, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "navigationBar");

    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v2, "navigationItem");
      objc_msgSend(v8, "_setManualScrollEdgeAppearanceEnabled:", 0);
      objc_msgSend(v7, "_setTitleOpacity:", 1.0);
      v9 = objc_msgSend(v8, "titleView");
      if (v9)
      {
        v10 = v9;
        v11 = type metadata accessor for UberNavigationTitleView();
        v12 = (void *)swift_dynamicCastClass(v10, v11);
        if (v12)
          objc_msgSend(v12, "setHideStandardTitle:", 0);

      }
      if (qword_3CEFE8 != -1)
        swift_once(&qword_3CEFE8, sub_DF80);
      objc_msgSend(v7, "setTintColor:", qword_3D0890);

    }
  }
  sub_BCD10();
  v13 = sub_BB2FC();
  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);

  v14 = (uint64_t *)(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel]
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_menuBarProvider);
  v15 = *v14;
  if (*v14)
  {
    v16 = v14[1];
    ObjectType = swift_getObjectType();
    v19 = sub_239FC(&qword_3D4E20, v18, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeDetailTranscriptViewController, (uint64_t)&unk_2F4440);
    swift_unknownObjectRetain(v15);
    v20 = v2;
    dispatch thunk of MenuBarProvider.menuBarPresenter.setter(v2, v19, ObjectType, v16);
    swift_unknownObjectRelease(v15);
  }
  v21 = sub_BB2FC();
  objc_msgSend(v21, "becomeFirstResponder");

}

void sub_BCD10()
{
  void *v0;
  char *v1;
  id v2;
  int v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  Swift::String v10;

  v1 = sub_BB2FC();
  v2 = objc_msgSend(v1, "findInteraction");

  if (v2)
  {
    v3 = objc_msgSend(v2, "isFindNavigatorVisible");

  }
  else
  {
    v3 = 0;
  }
  sub_BE458(v3);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x495243534E415254;
  v5._object = (void *)0xEA00000000005450;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v10)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v9, "setLargeTitleDisplayMode:", 2);

}

uint64_t sub_BCEB4(void *a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5)
{
  const char *v8;
  char *v9;
  uint64_t v10;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType();
  v8 = *a4;
  v9 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, v8, a3);
  v10 = *(_QWORD *)(*(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel]
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_metricsController);
  swift_retain(v10);
  MetricsController.observe(lifecycleEvent:)(a5);

  return swift_release(v10);
}

void sub_BCFFC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Width;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  double v25;
  char *v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  char *v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  double v54;
  char *v55;
  char *v56;
  objc_super v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;

  v1 = v0;
  v57.receiver = v0;
  v57.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v57, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v58.origin.x = v5;
  v58.origin.y = v7;
  v58.size.width = v9;
  v58.size.height = v11;
  Width = CGRectGetWidth(v58);
  v13 = SizeClass.init(width:)(Width);
  v14 = objc_msgSend(v1, "view");
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v14;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v59.origin.x = v17;
  v59.origin.y = v19;
  v59.size.width = v21;
  v59.size.height = v23;
  v24 = CGRectGetWidth(v59);
  v25 = SizeClass.margins(width:)(v13, v24);
  v26 = sub_BB2FC();
  v27 = objc_msgSend(v26, "textContainer");

  objc_msgSend(v27, "lineFragmentPadding");
  v29 = v28;

  v30 = objc_msgSend(v1, "traitCollection");
  LOBYTE(v27) = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v27 & 1) == 0)
  {
    v32 = objc_msgSend(v1, "view");
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, "readableContentGuide");

      objc_msgSend(v34, "layoutFrame");
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v42 = v41;

      v60.origin.x = v36;
      v60.origin.y = v38;
      v60.size.width = v40;
      v60.size.height = v42;
      v31 = CGRectGetWidth(v60);
      goto LABEL_7;
    }
LABEL_13:
    __break(1u);
    return;
  }
  v31 = 520.0;
LABEL_7:
  v43 = v25 - v29;
  v44 = sub_BB2FC();
  objc_msgSend(v44, "bounds");
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;

  v61.origin.x = v46;
  v61.origin.y = v48;
  v61.size.width = v50;
  v61.size.height = v52;
  v53 = v43 + (CGRectGetWidth(v61) - (v43 + v43) - v31) * 0.5;
  if ((SizeClass.isIpadWide.getter(v13) & 1) != 0)
    v54 = 16.0;
  else
    v54 = 8.0;
  v55 = sub_BB2FC();
  objc_msgSend(v55, "setTextContainerInset:", 20.0, v53, 30.0, v53);

  v56 = sub_BB2FC();
  objc_msgSend(v56, "setScrollIndicatorInsets:", 0.0, 0.0, v54, 0.0);

}

uint64_t sub_BD310()
{
  char *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  _BYTE v33[12];
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  void *v41;

  v37 = type metadata accessor for UIButton.Configuration(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v2 = &v33[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4D20);
  __chkstk_darwin(v3);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v36 = &v33[-v7];
  __chkstk_darwin(v8);
  v10 = &v33[-v9];
  v12 = __chkstk_darwin(v11);
  v14 = &v33[-v13];
  v15 = type metadata accessor for UIContentUnavailableConfiguration(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v14, 1, 1, v15);
  v38 = v0;
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_2F44E0);
  v20 = swift_getKeyPath(&unk_2F4508);
  static Published.subscript.getter(&v39, v18, KeyPath, v20);
  swift_release(KeyPath);
  v21 = swift_release(v20);
  if (BYTE8(v39) != 2 || (_QWORD)v39)
  {
    sub_C7DD8((id)v39, SBYTE8(v39));
    v23 = swift_getKeyPath(&unk_2F44E0);
    v24 = swift_getKeyPath(&unk_2F4508);
    static Published.subscript.getter(&v39, v18, v23, v24);
    swift_release(v23);
    swift_release(v24);
    v25 = (void *)v39;
    if (BYTE8(v39) != 1)
    {
      sub_C7DD8((id)v39, SBYTE8(v39));
      goto LABEL_11;
    }
    v26 = swift_allocObject(&unk_37FBC0, 24, 7);
    v27 = v38;
    swift_unknownObjectWeakInit(v26 + 16, v38);
    v34 = *(unsigned __int8 *)(v18
                             + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_isNetworkReachable) ^ 1;
    swift_errorRetain(v25);
    v28 = objc_msgSend(v27, "traitCollection");
    LOBYTE(v27) = UITraitCollection.interfaceIdiomIsMac.getter();

    if ((v27 & 1) != 0)
      static UIButton.Configuration.bordered()();
    else
      static UIButton.Configuration.plain()(v29);
    v30 = v36;
    sub_110DF0((uint64_t)v25, v34 & 1, (uint64_t)v2, (uint64_t)sub_C943C, v26, v36);
    (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v2, v37);
    sub_C7DD8(v25, 1);
    swift_release(v26);
    sub_C7DD8(v25, 1);
    sub_D1D4((uint64_t)v14, (uint64_t *)&unk_3D4D20);
    v17(v30, 0, 1, v15);
    v22 = (uint64_t)v30;
  }
  else
  {
    static UIContentUnavailableConfiguration.loading()(v21);
    sub_D1D4((uint64_t)v14, (uint64_t *)&unk_3D4D20);
    v17(v10, 0, 1, v15);
    v22 = (uint64_t)v10;
  }
  sub_D210(v22, (uint64_t)v14, (uint64_t *)&unk_3D4D20);
LABEL_11:
  sub_D184((uint64_t)v14, (uint64_t)v5, (uint64_t *)&unk_3D4D20);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D4D20);
    v39 = 0u;
    v40 = 0u;
    v41 = 0;
  }
  else
  {
    *((_QWORD *)&v40 + 1) = v15;
    v41 = &protocol witness table for UIContentUnavailableConfiguration;
    v31 = __swift_allocate_boxed_opaque_existential_0(&v39);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v16 + 32))(v31, v5, v15);
  }
  UIViewController.contentUnavailableConfiguration.setter(&v39);
  return sub_D1D4((uint64_t)v14, (uint64_t *)&unk_3D4D20);
}

uint64_t sub_BD6F0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F44E0);
  v2 = swift_getKeyPath(&unk_2F4508);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_BD764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v15[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    swift_retain(v8);

    sub_BD8A8();
    swift_release(v8);
  }
  v9 = static Logger.transcripts.getter(Strong);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "Retry button tapped - initiating retry", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

double sub_BD8A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  double result;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[2];
  uint64_t v85;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v1);
  v79 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D30);
  v4 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  v72 = v4;
  __chkstk_darwin(v3);
  v69 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D38);
  v7 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  v75 = v7;
  __chkstk_darwin(v6);
  v70 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D40);
  v10 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  v78 = v10;
  __chkstk_darwin(v9);
  v73 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D48);
  v13 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  v83 = v13;
  v14 = __chkstk_darwin(v12);
  v76 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AssetLifetime(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for NetworkTaskPriority(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TranscriptRequest(0, v22);
  v80 = *(_QWORD *)(v25 - 8);
  v81 = v25;
  v26 = __chkstk_darwin(v25);
  v68 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v0[3];
  v30 = v0[6];
  v29 = v0[7];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v21 + 104))(v24, enum case for NetworkTaskPriority.userInteractive(_:), v20, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for AssetLifetime.ephemeral(_:), v16);
  v85 = 0;
  memset(v84, 0, sizeof(v84));
  v31 = swift_bridgeObjectRetain(v29);
  v32 = v68;
  TranscriptRequest.init(episodeAdamID:ttmlIdentifier:priority:lifetime:trace:)(v28, v30, v29, v24, v19, v84, v31);
  v33 = v0;
  v34 = *(_QWORD *)((char *)v0
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptProvider
                  + 24);
  v35 = *(_QWORD *)((char *)v0
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptProvider
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v0+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptProvider), v34);
  v36 = dispatch thunk of TranscriptProvider.transcript(for:)(v32, v34, v35);
  *(_QWORD *)&v84[0] = v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D50);
  v38 = type metadata accessor for TranscriptModel(0);
  v39 = sub_10EDC(&qword_3D4D58, &qword_3D4D50, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v40 = v69;
  Publisher.compactMap<A>(_:)(sub_C1004, 0, v37, v38, v39);
  swift_release(v36);
  KeyPath = swift_getKeyPath(&unk_2F4530);
  v42 = sub_10EDC(&qword_3D4D60, &qword_3D4D30, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v44 = v70;
  v43 = v71;
  Publisher.map<A>(_:)(KeyPath, v71, v42);
  v45 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v72 + 8))(v40, v43, v45);
  v46 = swift_allocObject(&unk_37FDF0, 24, 7);
  swift_weakInit(v46 + 16, v0);
  v47 = sub_10EDC((unint64_t *)&unk_3D4D68, &qword_3D4D38, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v48 = swift_retain(v46);
  v49 = v74;
  v50 = v73;
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(sub_C9468, v46, 0, 0, 0, 0, 0, 0, v48, 0, 0, v74, v47);
  v51 = swift_release(v46);
  (*(void (**)(char *, uint64_t, __n128))(v75 + 8))(v44, v49, v51);
  swift_release(v46);
  v52 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  *(_QWORD *)&v84[0] = static OS_dispatch_queue.main.getter(v53);
  v54 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v55 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v79, 1, 1, v54);
  v56 = sub_10EDC(&qword_3D4D78, &qword_3D4D40, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v57 = sub_1E2DC();
  v58 = v76;
  v59 = v77;
  Publisher.receive<A>(on:options:)(v84, v55, v77, v52, v56, v57);
  sub_D1D4(v55, &qword_3D2E70);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v50, v59);
  v60 = swift_allocObject(&unk_37FDF0, 24, 7);
  swift_weakInit(v60 + 16, v33);
  v61 = swift_allocObject(&unk_37FDF0, 24, 7);
  swift_weakInit(v61 + 16, v33);
  v62 = sub_10EDC(&qword_3D4D88, &qword_3D4D48, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v63 = v82;
  v64 = Publisher.sink(receiveCompletion:receiveValue:)(sub_C9470, v60, sub_C9478, v61, v82, v62);
  swift_release(v60);
  v65 = swift_release(v61);
  (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v58, v63, v65);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v32, v81);
  v66 = *(_QWORD *)((char *)v33
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptObserver);
  *(_QWORD *)((char *)v33
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptObserver) = v64;
  *(_QWORD *)&result = swift_release(v66).n128_u64[0];
  return result;
}

void sub_BDF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64[24];

  v1 = type metadata accessor for EpisodeOffer(0);
  v62 = *(_QWORD *)(v1 - 8);
  v63 = v1;
  __chkstk_darwin(v1);
  v61 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_BB2FC();
  objc_msgSend(v16, "selectedRange");
  v18 = v17;

  if (v18 >= 1)
  {
    v60 = v5;
    v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    v20 = v19 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
    swift_beginAccess(v19 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, v64, 0, 0);
    sub_D184(v20, (uint64_t)v8, &qword_3D4CC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_D1D4((uint64_t)v8, &qword_3D4CC0);
    }
    else
    {
      v21 = v15;
      sub_C92F8((uint64_t)v8, (uint64_t)v15);
      v22 = sub_BB2FC();
      v23 = objc_msgSend(v22, "attributedText");

      if (v23)
      {
        v24 = sub_BB2FC();
        v25 = objc_msgSend(v24, "selectedRange");
        v27 = v26;

        v28 = objc_msgSend(v23, "attributedSubstringFromRange:", v25, v27);
        v59 = sub_C88FC(v28);
        v58 = v29 & 1;
        sub_C933C((uint64_t)v15, (uint64_t)v12);
        if (swift_getEnumCaseMultiPayload(v12, v9) == 1)
        {
          v31 = v61;
          v30 = v62;
          v32 = v63;
          (*(void (**)(char *, uint64_t *, uint64_t))(v62 + 32))(v61, v12, v63);
          v33 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
          v34 = *(_QWORD *)(v19
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v35 = *(_QWORD *)(v19
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v19+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController), v34);
          dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeOffer:selectedText:referenceTime:playerTime:)(v31, v28, v59, v58, 0, 1, v34, v35);
          v37 = v36;
          v38 = String._bridgeToObjectiveC()();
          objc_msgSend(v33, "setString:", v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

          (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
          v39 = (uint64_t)v21;
        }
        else
        {
          v40 = *v12;
          v61 = (char *)v12[1];
          v62 = v40;
          v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
          v42 = (uint64_t)v12 + *(int *)(v41 + 48);
          v43 = (uint64_t *)((char *)v12 + *(int *)(v41 + 64));
          v44 = v43[1];
          v57 = *v43;
          v45 = (uint64_t)v60;
          sub_D210(v42, (uint64_t)v60, &qword_3D0A50);
          v46 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
          v63 = (uint64_t)v21;
          v48 = *(_QWORD *)(v19
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v47 = *(_QWORD *)(v19
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v19+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController), v48);
          v49 = *(_QWORD *)(v19 + 32);
          v50 = *(_QWORD *)(v19 + 40);
          v51 = swift_bridgeObjectRetain(v50);
          v56 = v47;
          v52 = v61;
          dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeUUID:episodeTitle:podcastTitle:episodePubdate:selectedText:referenceTime:playerTime:)(v62, v61, v49, v50, v57, v44, v45, v28, v51, v59, (_BYTE)v58, 0, 1, v48, v56);
          v54 = v53;
          swift_bridgeObjectRelease(v50);
          swift_bridgeObjectRelease(v44);
          swift_bridgeObjectRelease(v52);
          v55 = String._bridgeToObjectiveC()();
          objc_msgSend(v46, "setString:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

          sub_D1D4(v45, &qword_3D0A50);
          v39 = v63;
        }
        sub_C79D0(v39);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_BE458(int a1)
{
  char *v1;
  char *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void (*v30)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _BYTE v46[12];
  int v47;

  v2 = v1;
  LODWORD(v3) = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v4);
  v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v46[-v8];
  v10 = type metadata accessor for Glyph(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v46[-v15];
  __chkstk_darwin(v17);
  v19 = &v46[-v18];
  Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(0x697966696E67616DLL, 0xEF7373616C67676ELL, 0x4030000000000000, 0, 4, 3, 0, 0, 0);
  if ((v3 & 1) != 0)
  {
    v20 = v19;
    v21 = swift_allocObject(&unk_37FBC0, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v1);
    v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, 0, 0, swift_retain(v21).n128_f64[0]);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v23 = swift_allocObject(&unk_37FC10, 32, 7);
    *(_QWORD *)(v23 + 16) = sub_C923C;
    *(_QWORD *)(v23 + 24) = v21;
    v24 = v22;
    v25 = swift_retain(v21);
    v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v25, 0, 0, 0, sub_23764, v23);
    objc_msgSend(v24, "setPrimaryAction:", v26);

    swift_release_n(v21, 2);
    v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton;
    v28 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton];
    if (v28)
    {
      objc_msgSend(v28, "removeFromSuperview");
      v29 = *(void **)&v2[v27];
    }
    else
    {
      v29 = 0;
    }
    *(_QWORD *)&v2[v27] = 0;
  }
  else
  {
    v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
    v30(v16, v19, v10);
    v31 = type metadata accessor for Glyph.Color(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    v32 = swift_allocObject(&unk_37FBC0, 24, 7);
    v47 = (int)v3;
    v3 = v19;
    v33 = v32;
    swift_unknownObjectWeakInit(v32 + 16, v2);
    v30(v13, v16, v10);
    sub_D184((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_3D4C90);
    v34 = objc_allocWithZone((Class)type metadata accessor for GlyphButton(0));
    swift_retain(v33);
    GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v13, (uint64_t)v6, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
    v29 = v35;
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v36 = swift_allocObject(&unk_37FBE8, 32, 7);
    *(_QWORD *)(v36 + 16) = sub_C9230;
    *(_QWORD *)(v36 + 24) = v33;
    v37 = swift_retain(v33);
    v45 = v36;
    v20 = v3;
    LOBYTE(v3) = v47;
    v38 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v37, 0, 0, 0, sub_23764, v45);
    objc_msgSend(v29, "addAction:forControlEvents:", v38, 64);
    swift_release(v33);

    sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D4C90);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v16, v10);
    swift_release(v33);
    v24 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v29);
  }

  v39 = objc_msgSend(v2, "navigationItem");
  objc_msgSend(v39, "setRightBarButtonItem:", v24);

  v40 = (_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel]
                 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController);
  v41 = v40[3];
  v42 = v40[4];
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v43 = v3 & 1;
  dispatch thunk of EpisodeControllerProtocol.transcriptSearchSessionDidChange(isSearching:)(v43, v41, v42);
  sub_BEB84(v43);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v20, v10);
}

void sub_BE954(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_BB2FC();

    v5 = objc_msgSend(v4, "findInteraction");
    objc_msgSend(v5, "dismissFindNavigator");

  }
}

void sub_BE9DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  _QWORD v21[3];
  _BYTE v22[24];

  v2 = type metadata accessor for MetricsData(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  swift_beginAccess(v6, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    swift_retain(v9);

    type metadata accessor for ClickMetricsEvent(0);
    v21[0] = *(_QWORD *)(v9 + 24);
    v10 = sub_5AE80();
    v11 = BinaryInteger.description.getter(&type metadata for UInt64, v10);
    v13 = v12;
    v14 = static ClickMetricsEvent.makeTranscriptSearchClickEvent(adamId:)(v11);
    swift_bridgeObjectRelease(v13);
    dispatch thunk of MetricsEvent.metricsData.getter(v15);
    MetricsController.process(_:)(v5);
    v16 = swift_release(v14);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    swift_release(v9);
  }
  swift_beginAccess(v6, v21, 0, 0);
  v17 = swift_unknownObjectWeakLoadStrong(v6);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = sub_BB2FC();

    v20 = objc_msgSend(v19, "findInteraction");
    if (v20)
    {
      objc_msgSend(v20, "presentFindNavigatorShowingReplace:", 0);

    }
  }
}

void sub_BEB84(char a1)
{
  void *v1;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  uint64_t v14;
  id v15;
  double top;
  double left;
  double bottom;
  double right;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  CGRect v25;

  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v25.origin.x = v6;
    v25.origin.y = v8;
    v25.size.width = v10;
    v25.size.height = v12;
    Width = CGRectGetWidth(v25);
    v14 = SizeClass.init(width:)(Width);
    if ((SizeClass.isIpadWide.getter(v14) & 1) != 0)
    {
      v15 = objc_msgSend(v1, "navigationController");
      if (v15)
      {
        v24 = v15;
        if ((a1 & 1) != 0)
        {
          top = UIEdgeInsetsZero.top;
          left = UIEdgeInsetsZero.left;
          bottom = UIEdgeInsetsZero.bottom;
          right = UIEdgeInsetsZero.right;
        }
        else
        {
          if (qword_3CF2B8 != -1)
            swift_once(&qword_3CF2B8, sub_C4C98);
          top = UIEdgeInsets.init(edges:inset:)(4, *(double *)&qword_3FACC8);
          v15 = v24;
        }
        objc_msgSend(v15, "setAdditionalSafeAreaInsets:", top, left, bottom, right);

      }
    }
    else
    {
      if ((a1 & 1) != 0)
      {
        if (qword_3CF2B0 != -1)
          swift_once(&qword_3CF2B0, sub_C4C88);
        v20 = UIEdgeInsets.init(edges:inset:)(4, *(double *)&qword_3FACC0);
      }
      else
      {
        v20 = UIEdgeInsetsZero.top;
        v21 = UIEdgeInsetsZero.left;
        v22 = UIEdgeInsetsZero.bottom;
        v23 = UIEdgeInsetsZero.right;
      }
      objc_msgSend(v1, "setAdditionalSafeAreaInsets:", v20, v21, v22, v23);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_BED3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  char v18;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for FlowDestination(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptRequestInformation(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v8, v4) != enum case for FlowDestination.episodeDetailTranscript(_:))
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v5 + 96))(v8, v4);
  v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  v15 = COERCE_DOUBLE(TranscriptRequestInformation.selectedTextTimeInterval.getter(v14));
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
  if ((v18 & 1) == 0)
  {
    if ((*(_BYTE *)(v17 + 80) & 1) == 0 && *(double *)(v17 + 64) == v15 && *(double *)(v17 + 72) == v16)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_12;
  }
  if ((*(_BYTE *)(v17 + 80) & 1) == 0)
  {
LABEL_12:
    v21 = TranscriptRequestInformation.selectedTextTimeInterval.getter(*(_QWORD *)&v15);
    *(_QWORD *)(v17 + 64) = v21;
    *(_QWORD *)(v17 + 72) = v22;
    *(_BYTE *)(v17 + 80) = v23 & 1;
    v24 = TranscriptRequestInformation.selectedTextTimeInterval.getter(v21);
    sub_BC484(v24, v26, v25 & 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_BEEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2DB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations;
  v6 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations);
  if (v6)
  {
    v7 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2B50);
    v31 = type metadata accessor for FlowDestination(0);
    v9 = *(_QWORD *)(v31 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = (v10 + 32) & ~v10;
    v7 = swift_allocObject(v8, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F03C0;
    v30 = v7 + v11;
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    v32 = *(_QWORD *)(v12 + 24);
    v13 = sub_5AE80();
    v14 = BinaryInteger.description.getter(&type metadata for UInt64, v13);
    v28 = v15;
    v29 = v14;
    v16 = *(_QWORD *)(v12 + 32);
    v17 = *(_QWORD *)(v12 + 40);
    v19 = *(_QWORD *)(v12 + 48);
    v18 = *(_QWORD *)(v12 + 56);
    v26 = *(_QWORD *)(v12 + 64);
    v27 = v16;
    v25 = *(_QWORD *)(v12 + 72);
    LOBYTE(v8) = *(_BYTE *)(v12 + 80);
    sub_D184(v12 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptSource, (uint64_t)v4, &qword_3D2DB0);
    swift_bridgeObjectRetain(v17);
    v20 = swift_bridgeObjectRetain(v18);
    v24 = v8;
    v21 = v30;
    TranscriptRequestInformation.init(episodeAdamId:episodeTitle:ttmlIdentifier:selectedTextTimeInterval:source:)(v29, v28, v27, v17, v19, v18, v26, v25, v20, v24, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v21, enum case for FlowDestination.episodeDetailTranscript(_:), v31);
    v22 = *(_QWORD *)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v7;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRelease(v22);
    v6 = 0;
  }
  swift_bridgeObjectRetain(v6);
  return v7;
}

void sub_BF09C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  char *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __n128 v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  __n128 v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  char *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  void *v58;
  uint64_t v59;
  void (**v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  UIMenuElementSize v70;
  UIMenuElementSize v71;
  uint64_t v72;
  id v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  void *v83;
  char *v84;
  id v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  Swift::String v89;
  Class isa;
  char *v91;
  Swift::OpaquePointer v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  UIMenuElementSize v102;
  __int128 v103;
  __int128 v104;
  double v105;
  double v106;
  double v107;
  double v108;
  char v109;
  UIImage_optional v110;
  Swift::String v111;

  v3 = type metadata accessor for InteractionContext(0);
  v99 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E80);
  __chkstk_darwin(v6);
  v8 = (char **)((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for PresentationSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v100 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return;
  v12 = sub_BB2FC();
  objc_msgSend(a1, "locationInView:", v12);
  v14 = v13;
  v16 = v15;

  v17 = sub_BB2FC();
  v18 = objc_msgSend(v17, "characterRangeAtPoint:", v14, v16);

  v19 = sub_BB2FC();
  if (!v18)
  {
LABEL_10:

    return;
  }
  v101 = v19;
  v20 = v18;
  v21 = objc_msgSend(v101, "beginningOfDocument");
  v22 = objc_msgSend(v20, "start");
  v97 = v10;
  v98 = v9;
  v23 = v22;
  v24 = objc_msgSend(v101, "offsetFromPosition:toPosition:", v21, v22);

  v25 = objc_msgSend(v20, "start");
  v26 = objc_msgSend(v20, "end");
  v27 = objc_msgSend(v101, "offsetFromPosition:toPosition:", v25, v26);

  v28 = sub_BB2FC();
  v101 = (char *)objc_msgSend(v28, "text");

  if (!v101)
    return;
  v29 = sub_BB2FC();
  v30 = objc_msgSend(v29, "attributedText");

  if (!v30)
  {
    v19 = v101;
    goto LABEL_10;
  }
  v31 = (char *)objc_msgSend(v101, "paragraphRangeForRange:", v24, v27);
  v33 = v32;
  v34 = swift_allocObject(&unk_37FDA0, 32, 7);
  *(_QWORD *)(v34 + 16) = v31;
  *(_QWORD *)(v34 + 24) = v33;
  v96 = v34;
  if (qword_3CF2C8 != -1)
    swift_once(&qword_3CF2C8, sub_C68F0);
  v35 = objc_msgSend(v30, "attribute:atIndex:effectiveRange:", qword_3D4858, v31, 0);
  if (v35)
  {
    v37 = v35;
    _bridgeAnyObjectToAny(_:)(&v103, v35, v36);
    swift_unknownObjectRelease(v37);
  }
  else
  {
    v103 = 0u;
    v104 = 0u;
  }
  sub_D210((uint64_t)&v103, (uint64_t)&v105, &qword_3D1A70);
  if (v108 == 0.0)
  {
    sub_D1D4((uint64_t)&v105, &qword_3D1A70);
  }
  else if ((swift_dynamicCast(&v102, &v105, (char *)&type metadata for Any + 8, &type metadata for TranscriptSelectionContentType, 6) & 1) != 0&& (v102 & 1) == 0)
  {
    v38 = &v31[v33];
    if (__OFADD__(v31, v33))
    {
      __break(1u);
    }
    else if (!__OFADD__(v38, 1))
    {
      v39 = (char *)objc_msgSend(v101, "paragraphRangeForRange:", v38 + 1, 1);
      v41 = &v39[v40];
      if (!__OFADD__(v39, v40))
      {
        if ((uint64_t)v38 > (uint64_t)v41)
          v41 = &v31[v33];
        if ((uint64_t)v31 >= (uint64_t)v39)
          v31 = v39;
        v42 = __OFSUB__(v41, v31);
        v33 = v41 - v31;
        v43 = v96;
        if (!v42)
        {
          *(_QWORD *)(v96 + 16) = v39;
          *(_QWORD *)(v43 + 24) = v40;
          goto LABEL_42;
        }
        goto LABEL_54;
      }
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    __break(1u);
    goto LABEL_53;
  }
  if ((uint64_t)v31 >= 1)
  {
    v44 = objc_msgSend(v30, "attribute:atIndex:effectiveRange:", qword_3D4858, v31 - 1, 0);
    if (v44)
    {
      v46 = v44;
      _bridgeAnyObjectToAny(_:)(&v103, v44, v45);
      swift_unknownObjectRelease(v46);
    }
    else
    {
      v103 = 0u;
      v104 = 0u;
    }
    sub_D210((uint64_t)&v103, (uint64_t)&v105, &qword_3D1A70);
    if (v108 == 0.0)
    {
LABEL_41:
      sub_D1D4((uint64_t)&v105, &qword_3D1A70);
      goto LABEL_42;
    }
    if ((swift_dynamicCast(&v102, &v105, (char *)&type metadata for Any + 8, &type metadata for TranscriptSelectionContentType, 6) & 1) != 0&& (v102 & 1) == 0)
    {
      v47 = (char *)objc_msgSend(v101, "paragraphRangeForRange:", v31 - 1, 1);
      v49 = &v31[v33];
      if (__OFADD__(v31, v33))
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (__OFADD__(v47, v48))
      {
LABEL_56:
        __break(1u);
        return;
      }
      if ((uint64_t)v49 <= (uint64_t)&v47[v48])
        v49 = &v47[v48];
      if ((uint64_t)v31 >= (uint64_t)v47)
        v31 = v47;
      v33 = v49 - v31;
      if (!__OFSUB__(v49, v31))
        goto LABEL_42;
      __break(1u);
      goto LABEL_41;
    }
  }
LABEL_42:
  sub_BFA64((uint64_t)v31, v33, (uint64_t)&v103);
  sub_D210((uint64_t)&v103, (uint64_t)&v105, &qword_3D4CF0);
  if ((v109 & 1) != 0)
  {
    swift_release(v96);

  }
  else
  {
    v50 = v105;
    v51 = v106;
    v52 = v107;
    v53 = v108;
    v54 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HighlightedParagraphButton()), "initWithFrame:", v105, v106, v107, v108);
    v55 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton;
    v56 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton];
    v95 = v30;
    v57 = v54;
    if (v56)
    {
      objc_msgSend(v56, "removeFromSuperview");
      v58 = *(void **)&v1[v55];
    }
    else
    {
      v58 = 0;
    }
    *(_QWORD *)&v1[v55] = v54;

    v59 = swift_allocObject(&unk_37FBC0, 24, 7);
    swift_unknownObjectWeakInit(v59 + 16, v1);
    v60 = (void (**)())&v54[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton_onDismissMenu];
    v61 = *(_QWORD *)&v54[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton_onDismissMenu];
    v62 = *(_QWORD *)&v54[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton_onDismissMenu
                        + 8];
    *v60 = sub_C9400;
    v60[1] = (void (*)())v59;
    sub_1D618(v61, v62);
    *v8 = sub_BB2FC();
    *((double *)v8 + 1) = v50;
    *((double *)v8 + 2) = v51;
    *((double *)v8 + 3) = v52;
    *((double *)v8 + 4) = v53;
    v63 = enum case for PresentationSource.Position.view(_:);
    v64 = type metadata accessor for PresentationSource.Position(0);
    v65 = *(_QWORD *)(v64 - 8);
    (*(void (**)(char **, uint64_t, uint64_t))(v65 + 104))(v8, v63, v64);
    (*(void (**)(char **, _QWORD, uint64_t, uint64_t))(v65 + 56))(v8, 0, 1, v64);
    v66 = v1;
    v67 = (uint64_t)v100;
    PresentationSource.init(viewController:position:)(v66, v8);
    v68 = objc_msgSend(v95, "attributedSubstringFromRange:", v31, v33);
    v69 = sub_BB2FC();
    UIView.interactionContext.getter(v69);

    sub_BFD84(v68, (uint64_t)v5, v67);
    v71 = v70;
    v94 = v72;

    (*(void (**)(char *, uint64_t))(v99 + 8))(v5, v3);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v73 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v111._object = (void *)0xE000000000000000;
    v74._countAndFlagsBits = 0x545F5443454C4553;
    v74._object = (void *)0xEB00000000545845;
    v75._countAndFlagsBits = 0;
    v75._object = (void *)0xE000000000000000;
    v111._countAndFlagsBits = 0;
    v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, (Swift::String_optional)0, (NSBundle)v73, v75, v111);

    v77 = String._bridgeToObjectiveC()();
    v78 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v77);

    v79 = swift_allocObject(&unk_37FBC0, 24, 7);
    swift_unknownObjectWeakInit(v79 + 16, v66);
    v80 = swift_allocObject(&unk_37FDC8, 32, 7);
    v81 = v96;
    *(_QWORD *)(v80 + 16) = v79;
    *(_QWORD *)(v80 + 24) = v81;
    v82 = swift_retain(v81);
    v83 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v76._countAndFlagsBits, v76._object, 0, 0, v78, 0, 0, 0, v82, 0, 0, 0, sub_C9434, v80);
    v102 = v71;
    v84 = v54;
    v85 = v83;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
    v87 = *(_QWORD *)((char *)&dword_10 + (v102 & 0xFFFFFFFFFFFFFF8));
    v86 = *(_QWORD *)((char *)&dword_18 + (v102 & 0xFFFFFFFFFFFFFF8));
    if (v87 >= v86 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
    sub_E710(0, &qword_3D4CF8, UIMenu_ptr);
    v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v85);
    specialized Array._endMutation()(v88);
    sub_1F6F0C(v94);
    v89._countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    v110.value.super.isa = 0;
    v110.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v89, (Swift::String_optional)0, v110, 0, 0xFFFFFFFFFFFFFFFFLL, v102, v92).super.super.isa;
    objc_msgSend(v84, "setMenu:", isa);

    v91 = sub_BB2FC();
    objc_msgSend(v91, "addSubview:", v84);

    objc_msgSend(v84, "performPrimaryAction");
    (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v98);
    swift_release(v81);
  }
}

BOOL static TranscriptSelectionContentType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_BFA64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v6;
  id v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  CGFloat x;
  double v19;
  CGFloat y;
  double v21;
  CGFloat width;
  double v23;
  CGFloat height;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  char v33;
  uint64_t v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v6 = sub_BB2FC();
  v7 = sub_C0348(a1, a2);

  v8 = sub_BB2FC();
  v9 = v8;
  if (v7)
  {
    v10 = v7;
    v11 = objc_msgSend(v9, "selectionRectsForRange:", v10);
    v12 = sub_E710(0, (unint64_t *)&unk_3D4D00, UITextSelectionRect_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
      goto LABEL_20;
    v14 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
    while (v14)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        v15 = *(id *)(v13 + 32);
      }
      v16 = v15;
      objc_msgSend(v15, "rect");
      x = v17;
      y = v19;
      width = v21;
      height = v23;

      swift_bridgeObjectRetain(v13);
      v25 = 0;
      while (1)
      {
        v26 = (v13 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v13)
            : *(id *)(v13 + 8 * v25 + 32);
        v27 = v26;
        v28 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        objc_msgSend(v26, "rect");
        if (CGRectGetWidth(v35) > 1.0)
        {
          objc_msgSend(v27, "rect");
          v40.origin.x = v29;
          v40.origin.y = v30;
          v40.size.width = v31;
          v40.size.height = v32;
          v36.origin.x = x;
          v36.origin.y = y;
          v36.size.width = width;
          v36.size.height = height;
          v37 = CGRectUnion(v36, v40);
          x = v37.origin.x;
          y = v37.origin.y;
          width = v37.size.width;
          height = v37.size.height;

          if (v28 == v14)
          {
LABEL_17:
            swift_bridgeObjectRelease_n(v13, 2);
            v38.origin.x = x;
            v38.origin.y = y;
            v38.size.width = width;
            v38.size.height = height;
            v39 = CGRectInset(v38, -8.0, -5.0);
            v33 = 0;
            goto LABEL_26;
          }
          ++v25;
        }
        else
        {

          ++v25;
          if (v28 == v14)
            goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      if (v13 < 0)
        v34 = v13;
      else
        v34 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v13);
    }
    swift_bridgeObjectRelease(v13);
  }
  else
  {

  }
  v33 = 1;
  v39.origin.x = 0.0;
  v39.origin.y = 0.0;
  v39.size.width = 0.0;
  v39.size.height = 0.0;
LABEL_26:
  *(CGRect *)a3 = v39;
  *(_BYTE *)(a3 + 32) = v33;
}

void sub_BFD00(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton;
    v5 = *(void **)(Strong
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton);
    if (v5)
    {
      objc_msgSend(v5, "removeFromSuperview");
      v6 = *(void **)&v3[v4];
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)&v3[v4] = 0;

  }
}

void sub_BFD84(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;
  _QWORD v40[2];
  char v41;

  v36 = a3;
  v37 = a2;
  v5 = type metadata accessor for EpisodeOffer(0);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v40[0] = 0;
  v40[1] = 0;
  v41 = 1;
  if (qword_3CF2C0 != -1)
    swift_once(&qword_3CF2C0, sub_C68BC);
  v13 = qword_3D4850;
  v14 = objc_msgSend(a1, "length");
  v15 = swift_allocObject(&unk_37FD28, 24, 7);
  *(_QWORD *)(v15 + 16) = v40;
  v16 = swift_allocObject(&unk_37FD50, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_C93C8;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_C93E0;
  v39 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_26D688;
  aBlock[3] = &block_descriptor_43;
  v17 = _Block_copy(aBlock);
  v18 = v39;
  swift_retain(v16);
  objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:", v13, 0, v14, 0, v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v16, "", 149, 585, 112, 1);
  swift_release(v16);
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((v41 & 1) == 0)
    {
      v19 = *(double *)v40;
      v20 = v3 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
      swift_beginAccess(v3 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, aBlock, 0, 0);
      sub_D184(v20, (uint64_t)v12, &qword_3D4CC0);
      v21 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v12, 1, v21) != 1)
      {
        sub_D184((uint64_t)v12, (uint64_t)v9, &qword_3D4CC0);
        if (swift_getEnumCaseMultiPayload(v9, v21) == 1)
        {
          v23 = v33;
          v22 = v34;
          v24 = v35;
          (*(void (**)(char *, uint64_t *, uint64_t))(v34 + 32))(v33, v9, v35);
          v25 = *(_QWORD *)(v3
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v26 = *(_QWORD *)(v3
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v3+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController), v25);
          dispatch thunk of EpisodeControllerProtocol.transcriptSelectionMenuItems(asPartOf:episodeOffer:selectedText:referenceStartTime:alignmentCoordinator:presentationSource:interactionContext:)(*(_QWORD *)(v3 + 16), v23, a1, v3+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator, v36, v37, v25, v26, v19);
          (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
        }
        else
        {
          v27 = *v9;
          v28 = v9[1];
          v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
          v30 = (uint64_t)v9 + *(int *)(v29 + 48);
          swift_bridgeObjectRelease(*(uint64_t *)((char *)v9 + *(int *)(v29 + 64) + 8));
          v31 = *(_QWORD *)(v3
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v32 = *(_QWORD *)(v3
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v3+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController), v31);
          dispatch thunk of EpisodeControllerProtocol.transcriptSelectionMenuItems(asPartOf:episodeUuid:selectedText:referenceStartTime:alignmentCoordinator:presentationSource:interactionContext:)(*(_QWORD *)(v3 + 16), v27, v28, a1, v3+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator, v36, v37, v31, v19, v32);
          swift_bridgeObjectRelease(v28);
          sub_D1D4(v30, &qword_3D0A50);
        }
      }
      sub_D1D4((uint64_t)v12, &qword_3D4CC0);
    }
    swift_release(v15);
  }
}

void sub_C01A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v4 = a2 + 16;
  v5 = a3 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton;
    v9 = *(void **)(Strong
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton);
    if (v9)
    {
      objc_msgSend(v9, "removeFromSuperview");
      v10 = *(void **)&v7[v8];
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)&v7[v8] = 0;

  }
  swift_beginAccess(v5, v22, 0, 0);
  v11 = *(_QWORD *)(a3 + 24);
  v12 = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)(a3 + 16);
    swift_beginAccess(v4, v21, 0, 0);
    v14 = swift_unknownObjectWeakLoadStrong(v4);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = sub_BB2FC();

      objc_msgSend(v16, "setSelectedRange:", v13, v12 & ~(v12 >> 63));
    }
    swift_beginAccess(v4, &v20, 0, 0);
    v17 = swift_unknownObjectWeakLoadStrong(v4);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = sub_BB2FC();
      objc_msgSend(v19, "_presentEditMenu");

    }
  }
}

id sub_C0348(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  id result;
  void *v8;
  id v9;
  id v10;

  v5 = objc_msgSend(v2, "beginningOfDocument");
  v6 = objc_msgSend(v2, "positionFromPosition:offset:", v5, a1);

  if (!v6)
    return 0;
  result = objc_msgSend(v2, "beginningOfDocument");
  if (!__OFADD__(a1, a2))
  {
    v8 = result;
    v9 = objc_msgSend(v2, "positionFromPosition:offset:", result, a1 + a2);

    if (v9)
    {
      v10 = objc_msgSend(v2, "textRangeFromPosition:toPosition:", v6, v9);

      return v10;
    }

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_C047C()
{
  return sub_BEEC8();
}

uint64_t sub_C049C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*v1
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations);
  *(_QWORD *)(*v1
            + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations) = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_C04B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F44E0);
  v5 = swift_getKeyPath(&unk_2F4508);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_C053C(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *a2;
  v4 = *(_BYTE *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_2F44E0);
  v6 = swift_getKeyPath(&unk_2F4508);
  v8 = v2;
  v9 = v4;
  sub_C7DAC(v2, v4);
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v6);
}

double sub_C05C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double result;
  _QWORD v24[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E88);
  __chkstk_darwin(v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_37FF30, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_D1D4((uint64_t)v4, &qword_3D4E88);
    v11 = 0;
    v12 = 0;
    v13 = "/System/Library/PrivateFrameworks/ShareSheet.framework/ShareSheet";
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = (char *)(v14 | 0x1C00);
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType();
      v18 = swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16, v18);
      v12 = v19;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v20 = swift_allocObject(&unk_37FF58, 32, 7);
  *(_QWORD *)(v20 + 16) = &unk_3D4E98;
  *(_QWORD *)(v20 + 24) = v7;
  if (v12 | v11)
  {
    v24[0] = 0;
    v24[1] = 0;
    v21 = v24;
    v24[2] = v11;
    v24[3] = v12;
  }
  else
  {
    v21 = 0;
  }
  v22 = swift_task_create(v13, v21, (char *)&type metadata for () + 8, &unk_3D4EA0, v20);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double sub_C079C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  _QWORD v23[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4ED0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4ED8);
  v22 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = NetworkObserver.remoteServerReachabilityPublisher.getter(v7);
  v23[0] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4EE0);
  v12 = swift_allocObject(v11, 33, 7);
  *(_OWORD *)(v12 + 16) = xmmword_2F03C0;
  *(_BYTE *)(v12 + 32) = dispatch thunk of NetworkObserver.isLikelyToReachRemoteServer.getter() & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4EE8);
  v14 = sub_10EDC(&qword_3D4EF0, &qword_3D4EE8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.prepend(_:)(v12, v13, v14);
  swift_release(v10);
  swift_bridgeObjectRelease(v12);
  v15 = sub_10EDC(&qword_3D4EF8, &qword_3D4ED0, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  Publisher<>.removeDuplicates()(v2, v15, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = swift_allocObject(&unk_37FDF0, 24, 7);
  swift_weakInit(v16 + 16, v0);
  v17 = sub_10EDC(&qword_3D4F00, &qword_3D4ED8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v18 = Publisher<>.sink(receiveValue:)(sub_C9858, v16, v6, v17);
  v19 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v9, v6, v19);
  v20 = v1 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_subscriptions;
  swift_beginAccess(v20, v23, 33, 0);
  AnyCancellable.store(in:)(v20);
  swift_endAccess(v23);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_C09F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD v7[5];

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_libraryDataProvider
                 + 8);
  ObjectType = swift_getObjectType();
  v3 = dispatch thunk of LibraryDataProviderProtocol.fetchEpisode(with:)(*(_QWORD *)(v0 + 24), ObjectType, v1);
  v4 = swift_allocObject(&unk_37FDF0, 24, 7);
  swift_weakInit(v4 + 16, v0);
  v7[3] = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v7[4] = &protocol witness table for OS_dispatch_queue;
  v7[0] = static OS_dispatch_queue.main.getter(v5);
  Promise.then(perform:orCatchError:on:)(sub_C9648, v4, UINavigationBar.overrideBackButtonStyle.setter, 0, v7);
  swift_release(v3);
  swift_release(v4);
  return __swift_destroy_boxed_opaque_existential_0(v7);
}

void sub_C0AE0(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  char v35[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    if (v7)
    {
      v10 = v7;
      v11 = objc_msgSend(v10, "uuid");
      if (v11)
      {
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
        v17 = (char *)v6 + *(int *)(v16 + 48);
        v18 = (uint64_t *)((char *)v6 + *(int *)(v16 + 64));
        *v6 = v13;
        v6[1] = v15;
        Date.init(timeIntervalSinceReferenceDate:)(objc_msgSend(v10, "pubDate"));
        v19 = type metadata accessor for Date(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
        v20 = objc_msgSend(v10, "podcast");
        v21 = v20;
        if (v20)
        {
          v22 = objc_msgSend(v20, "title");

          if (v22)
          {
            v21 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
            v24 = v23;

LABEL_11:
            *v18 = v21;
            v18[1] = v24;
            v32 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
            swift_storeEnumTagMultiPayload(v6, v32, 0);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 0, 1, v32);
            v33 = v9
                + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
            swift_beginAccess(v9+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, v34, 33, 0);
            sub_C9658((uint64_t)v6, v33);
            swift_endAccess(v34);
            sub_C05C8();
            sub_D1D4((uint64_t)v6, &qword_3D4CC0);
            swift_release(v9);

            return;
          }
          v21 = 0;
        }
        v24 = 0xE000000000000000;
        goto LABEL_11;
      }

    }
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v9+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_storeDataProvider), *(_QWORD *)(v9+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_storeDataProvider+ 24));
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E80);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_2F03C0;
    *(_QWORD *)(v26 + 32) = *(_QWORD *)(v9 + 24);
    v27 = dispatch thunk of StoreDataProvider.fetchEpisodeOffers(with:)();
    swift_bridgeObjectRelease(v26);
    v28 = swift_allocObject(&unk_37FDF0, 24, 7);
    swift_weakInit(v28 + 16, v9);
    v29 = sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
    v31 = static OS_dispatch_queue.main.getter(v30);
    v34[3] = v29;
    v34[4] = &protocol witness table for OS_dispatch_queue;
    v34[0] = v31;
    Promise.then(perform:orCatchError:on:)(sub_C9650, v28, UINavigationBar.overrideBackButtonStyle.setter, 0, v34);
    swift_release(v9);
    swift_release(v27);
    swift_release(v28);
    __swift_destroy_boxed_opaque_existential_0(v34);
  }
}

uint64_t sub_C0E14(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void (*v16)(_BYTE *, unint64_t, uint64_t);
  uint64_t Strong;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  _QWORD v23[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for EpisodeOffer(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  v23[0] = *a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4EC0);
  v13 = sub_10EDC(&qword_3D4EC8, &qword_3D4EC0, (uint64_t)&protocol conformance descriptor for [A]);
  result = Collection.isNotEmpty.getter(v12, v13);
  if ((result & 1) != 0 && *(_QWORD *)(v11 + 16))
  {
    v15 = a2 + 16;
    v16 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v8 + 16);
    v16(v10, v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    swift_beginAccess(v15, v23, 0, 0);
    Strong = swift_weakLoadStrong(v15);
    if (Strong)
    {
      v19 = Strong;
      v16(v6, (unint64_t)v10, v7);
      v20 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
      swift_storeEnumTagMultiPayload(v6, v20, 1);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
      v21 = v19
          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
      swift_beginAccess(v19 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, v22, 33, 0);
      sub_C9658((uint64_t)v6, v21);
      swift_endAccess(v22);
      sub_C05C8();
      sub_D1D4((uint64_t)v6, &qword_3D4CC0);
      v18 = swift_release(v19);
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v18);
  }
  return result;
}

uint64_t sub_C1004@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  void (*v15)(char *, id *, uint64_t);
  id *v16;
  uint64_t v17;

  v4 = type metadata accessor for TranscriptData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (id *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TranscriptModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, v4, v10);
  v13 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v7, v4);
  if (v13 == enum case for TranscriptData.signature(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  }
  if (v13 == enum case for TranscriptData.transcript(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);
    v15 = *(void (**)(char *, id *, uint64_t))(v9 + 32);
    v15(v12, v7, v8);
  }
  else
  {
    if (v13 != enum case for TranscriptData.complete(_:))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
      return (*(uint64_t (**)(id *, uint64_t))(v5 + 8))(v7, v4);
    }
    (*(void (**)(id *, uint64_t))(v5 + 96))(v7, v4);

    v16 = (id *)((char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D4E18) + 48));
    v15 = *(void (**)(char *, id *, uint64_t))(v9 + 32);
    v15(v12, v16, v8);
  }
  v15(a2, (id *)v12, v8);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
}

uint64_t sub_C11E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    KeyPath = swift_getKeyPath(&unk_2F44E0);
    v6 = swift_getKeyPath(&unk_2F4508);
    v7 = 0;
    v8 = 2;
    return static Published.subscript.setter(&v7, v4, KeyPath, v6);
  }
  return result;
}

void sub_C1264(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  _QWORD v27[3];
  _BYTE v28[8];
  uint64_t v29;
  char v30[8];
  uint64_t v31[3];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if (v8)
  {
    v9 = a2 + 16;
    v10 = swift_errorRetain(v8);
    static Logger.transcripts.getter(v10);
    swift_errorRetain(v8);
    v11 = swift_errorRetain(v8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v26 = a2 + 16;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc(32, -1);
      v31[0] = v16;
      *(_DWORD *)v15 = 136315138;
      v25[1] = v15 + 4;
      swift_getErrorValue(v8, v28, v27);
      v17 = Error.localizedDescription.getter(v27[1], v27[2]);
      v19 = v18;
      v29 = sub_37E78(v17, v18, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30);
      swift_bridgeObjectRelease(v19);
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      _os_log_impl(&dword_0, v12, v13, "Could not fetch transcripts on transcript view: %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      v20 = v15;
      v9 = v26;
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      swift_errorRelease(v8);
      swift_errorRelease(v8);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_beginAccess(v9, v31, 0, 0);
    Strong = swift_weakLoadStrong(v9);
    if (Strong)
    {
      v22 = Strong;
      KeyPath = swift_getKeyPath(&unk_2F44E0);
      v24 = swift_getKeyPath(&unk_2F4508);
      v29 = v8;
      v30[0] = 1;
      static Published.subscript.setter(&v29, v22, KeyPath, v24);
    }
    else
    {
      swift_errorRelease(v8);
    }
  }
}

double sub_C14C8(uint64_t a1, uint64_t (*a2)(void *a1))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(void *);
  uint64_t (*v21)(void *);
  __n128 v22;
  __n128 v23;
  double result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *);
  uint64_t v30;

  v29 = a2;
  v27 = a1;
  v4 = type metadata accessor for TranscriptModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptSentenceSplittingBehavior(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a2);
  sub_C4CA8();
  v28 = v13;
  v26 = sub_C4F3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for TranscriptSentenceSplittingBehavior.doNotSplit(_:), v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_37FE18, v18 + 16, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19 + v15, v8, v4);
  *(_QWORD *)(v19 + v16) = v26;
  *(_QWORD *)(v19 + v17) = v28;
  v20 = (uint64_t (**)(void *))(v19 + v18);
  v21 = v29;
  *v20 = sub_C9480;
  v20[1] = v21;
  v22 = swift_retain(v21);
  TranscriptModel.createParagraphs(with:completion:)(v12, sub_C9528, v19, v22);
  v23 = swift_release(v19);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v30, v23);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_C168C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  void *v9;
  char v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    KeyPath = swift_getKeyPath(&unk_2F44E0);
    v7 = swift_getKeyPath(&unk_2F4508);
    v9 = a1;
    v10 = 0;
    v8 = a1;
    return static Published.subscript.setter(&v9, v5, KeyPath, v7);
  }
  return result;
}

uint64_t sub_C1720(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  _BYTE v10[24];
  uint64_t v11;

  sub_D184(a1, (uint64_t)v10, &qword_3D1A70);
  if (!v11)
    return sub_D1D4((uint64_t)v10, &qword_3D1A70);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC8);
  result = swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v7, 6);
  if ((result & 1) != 0)
  {
    *(_OWORD *)a5 = v9;
    *(_BYTE *)(a5 + 16) = 0;
    *a4 = 1;
  }
  return result;
}

double sub_C17B8(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  char v10;
  _BYTE v11[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    *(_BYTE *)(Strong
             + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_isNetworkReachable) = v2;
    KeyPath = swift_getKeyPath(&unk_2F44E0);
    v8 = swift_getKeyPath(&unk_2F4508);
    static Published.subscript.getter(&v9, v6, KeyPath, v8);
    swift_release(KeyPath);
    swift_release(v8);
    if (v10 == 1)
    {
      sub_C7DD8(v9, v10);
      if ((v2 & 1) != 0)
        sub_BD8A8();
    }
    else
    {
      sub_C7DD8(v9, v10);
    }
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_C18A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  __n128 v4;
  _QWORD *v5;

  v1 = type metadata accessor for Logger(0);
  v0[7] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[8] = v2;
  v0[9] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v3);
  v5 = (_QWORD *)swift_task_alloc(dword_3D4EAC, v4);
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_C1910;
  return sub_C1B84();
}

uint64_t sub_C1910()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_C1984, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 72));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_C1984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 88);
  static Logger.transcripts.getter(a1);
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 88);
    v17 = *(_QWORD *)(v1 + 64);
    v18 = *(_QWORD *)(v1 + 56);
    v19 = *(_QWORD *)(v1 + 72);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue(v6, v1 + 40, v1 + 16);
    v9 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
    v11 = v10;
    *(_QWORD *)(v1 + 48) = sub_37E78(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v4, v5, "Failed to resolve asset: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 88);
    v14 = *(_QWORD *)(v1 + 64);
    v13 = *(_QWORD *)(v1 + 72);
    v15 = *(_QWORD *)(v1 + 56);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 72));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_C1B84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  __n128 v21;

  v1[6] = v0;
  v2 = type metadata accessor for TranscriptEpisodeContext(0);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v4);
  v5 = type metadata accessor for EpisodeOffer(0);
  v1[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[11] = v6;
  v1[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v9);
  v10 = type metadata accessor for URL(0);
  v1[14] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[15] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v12, v13);
  v1[17] = swift_task_alloc(v12, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v16);
  v17 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  v1[19] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v1[20] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v19, v20);
  v1[22] = swift_task_alloc(v19, v21);
  return swift_task_switch(sub_C1CC4, 0, 0);
}

uint64_t sub_C1CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  __n128 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 48)
     + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_D184(v4, v3, &qword_3D4CC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_D1D4(*(_QWORD *)(v0 + 144), &qword_3D4CC0);
    v5 = sub_C9814();
    v6 = swift_allocError(&type metadata for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError, v5, 0, 0);
    *v7 = 0;
    swift_willThrow(v6);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 136);
    v38 = *(_QWORD *)(v0 + 144);
    v40 = *(_QWORD *)(v0 + 128);
    v42 = *(_QWORD *)(v0 + 96);
    v41 = *(_QWORD *)(v0 + 104);
    v43 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 152);
  sub_C92F8(*(_QWORD *)(v0 + 144), v9);
  sub_C933C(v9, v8);
  if (swift_getEnumCaseMultiPayload(v8, v10) == 1)
  {
    v12 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 32))(v14, *(_QWORD *)(v0 + 168), v16);
    EpisodeOffer.streamUrl.getter(v17);
    v18 = objc_allocWithZone((Class)AVURLAsset);
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    v62 = objc_msgSend(v18, "initWithURL:options:", v20, 0);

    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v23 = EpisodeOffer.priceType.getter(v22);
    v24 = (id)NSPersistentStringForMTEpisodePriceType(v23);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v28 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD **)(v0 + 48);
    v30 = *(_QWORD *)((char *)v29
                    + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator
                    + 24);
    v31 = *(_QWORD *)((char *)v29
                    + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator
                    + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v29+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator), v30);
    v32 = v29[3];
    v34 = v29[6];
    v33 = v29[7];
    v35 = swift_bridgeObjectRetain(v33);
    TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)(v32, v25, v27, v34, v33, v35);
    dispatch thunk of AlignmentCoordinator.align(asset:to:)(v62, v28, v30, v31);
    v36 = *(_QWORD *)(v0 + 176);
    v55 = *(_QWORD *)(v0 + 168);
    v57 = *(_QWORD *)(v0 + 136);
    v56 = *(_QWORD *)(v0 + 144);
    v58 = *(_QWORD *)(v0 + 128);
    v60 = *(_QWORD *)(v0 + 96);
    v59 = *(_QWORD *)(v0 + 104);
    v61 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v61, *(_QWORD *)(v0 + 56));

    sub_C79D0(v36);
    swift_task_dealloc(v36);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  v46 = *(uint64_t **)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 48);
  v48 = *v46;
  v49 = v46[1];
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
  *(_DWORD *)(v0 + 208) = *(_DWORD *)(v50 + 48);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v46 + *(int *)(v50 + 64) + 8));
  v51 = *(_QWORD *)(v47
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_libraryDataProvider
                  + 8);
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + 184) = dispatch thunk of LibraryDataProviderProtocol.fetchEpisode(with:)(v48, v49, ObjectType, v51);
  v53 = swift_bridgeObjectRelease(v49);
  v54 = (_QWORD *)swift_task_alloc(async function pointer to Promise.then()[1], v53);
  *(_QWORD *)(v0 + 192) = v54;
  *v54 = v0;
  v54[1] = sub_C20B0;
  return Promise.then()(v0 + 40);
}

uint64_t sub_C20B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  swift_release(*(_QWORD *)(v2 + 184));
  if (v0)
    v4 = sub_C2494;
  else
    v4 = sub_C211C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_C211C()
{
  uint64_t v0;
  void *v1;
  id v2;
  __n128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;

  v1 = *(void **)(v0 + 40);
  if (!v1)
    goto LABEL_8;
  v2 = objc_msgSend(*(id *)(v0 + 40), "bestUrl");
  if (!v2)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 112));
    goto LABEL_7;
  }
  v4 = v2;
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9(v8, v5, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
LABEL_7:
    v19 = *(_QWORD *)(v0 + 104);

    sub_D1D4(v19, (uint64_t *)&unk_3D2D70);
LABEL_8:
    v20 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 168) + *(int *)(v0 + 208);
    v22 = sub_C9814();
    v23 = swift_allocError(&type metadata for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError, v22, 0, 0);
    *v24 = 1;
    swift_willThrow(v23);
    sub_C79D0(v20);
    sub_D1D4(v21, &qword_3D0A50);
    goto LABEL_9;
  }
  v9(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  v10 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v11);
  v13 = v12;
  v14 = objc_msgSend(v10, "initWithURL:options:", v12, 0);

  v15 = objc_msgSend(v1, "priceType");
  v54 = v14;
  if (v15)
  {
    v16 = v15;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

  }
  else
  {

    v53 = 0;
    v18 = 0;
  }
  v34 = *(_QWORD *)(v0 + 168) + *(int *)(v0 + 208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  sub_D1D4(v34, &qword_3D0A50);
  v35 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 72);
  v37 = *(_QWORD **)(v0 + 48);
  v38 = *(_QWORD *)((char *)v37
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator
                  + 24);
  v39 = *(_QWORD *)((char *)v37
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v37+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator), v38);
  v40 = v37[3];
  v41 = v37[6];
  v42 = v37[7];
  v43 = swift_bridgeObjectRetain(v42);
  TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)(v40, v53, v18, v41, v42, v43);
  dispatch thunk of AlignmentCoordinator.align(asset:to:)(v54, v36, v38, v39);
  v44 = v35;
  v45 = *(_QWORD *)(v0 + 176);
  if (!v44)
  {
    v46 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 136);
    v47 = *(_QWORD *)(v0 + 144);
    v49 = *(_QWORD *)(v0 + 128);
    v51 = *(_QWORD *)(v0 + 96);
    v50 = *(_QWORD *)(v0 + 104);
    v52 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v52, *(_QWORD *)(v0 + 56));

    sub_C79D0(v45);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));

  sub_C79D0(v45);
LABEL_9:
  v25 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 128);
  v30 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_C2494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 168) + *(int *)(v0 + 208);
  sub_C79D0(*(_QWORD *)(v0 + 176));
  sub_D1D4(v1, &qword_3D0A50);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_C2548()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  sub_D1D4((uint64_t)v0+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptSource, &qword_3D2DB0);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptProvider));
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptObserver));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController));
  swift_unknownObjectRelease(*(_QWORD *)((char *)v0
                                       + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_libraryDataProvider));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_storeDataProvider));
  swift_unknownObjectRelease(*(_QWORD *)((char *)v0
                                       + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_menuBarProvider));
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_metricsController));
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)((char *)v0
                                                      + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator));
  swift_release(*(_QWORD *)((char *)v0
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_networkObserver));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_subscriptions));
  v1 = (char *)v0 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel__state;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D18);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_D1D4((uint64_t)v0+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, &qword_3D4CC0);
  return v0;
}

uint64_t sub_C2678()
{
  uint64_t v0;

  sub_C2548();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_C269C@<X0>(BOOL *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  *a1 = *(_QWORD *)(*v1
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton) == 0;
  v3 = type metadata accessor for InteractionContext.Page(0);
  return swift_storeEnumTagMultiPayload(a1, v3, 5);
}

uint64_t sub_C26E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for InteractionContext.Origin.none(_:);
  v3 = type metadata accessor for InteractionContext.Origin(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_C272C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  char *v18;
  id v19;
  char *v20;
  double MaxX;
  id v22;
  char *v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  __n128 v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  double v40[2];
  _OWORD v41[2];
  id v42;
  char v43;
  uint64_t v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v2 = v1;
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v4 = sub_BB2FC();
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
    KeyPath = swift_getKeyPath(&unk_2F44E0);
    v8 = swift_getKeyPath(&unk_2F4508);
    static Published.subscript.getter(&v42, v6, KeyPath, v8);
    swift_release(KeyPath);
    swift_release(v8);
    if (v43)
    {
      sub_C7DD8(v42, v43);
      return;
    }
    sub_C7DD8(v42, 0);
    v9 = sub_BB2FC();
    objc_msgSend(v9, "visibleTextRect");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    v45.origin.x = v11;
    v45.origin.y = v13;
    v45.size.width = v15;
    v45.size.height = v17;
    if (CGRectGetMinY(v45) <= 0.0)
    {
      v30 = (char *)sub_BB268();
      v31 = static Duration.zero.getter();
      v33 = v32;
      v34 = (uint64_t *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration];
      swift_beginAccess(&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration], &v42, 1, 0);
      *v34 = v31;
      v34[1] = v33;
      sub_CAF10(v31, v33);
LABEL_14:

      return;
    }
    v18 = sub_BB2FC();
    v19 = objc_msgSend(v18, "closestPositionToPoint:", v11, v13);

    if (v19)
    {
      v20 = sub_BB2FC();
      v46.origin.x = v11;
      v46.origin.y = v13;
      v46.size.width = v15;
      v46.size.height = v17;
      MaxX = CGRectGetMaxX(v46);
      v47.origin.x = v11;
      v47.origin.y = v13;
      v47.size.width = v15;
      v47.size.height = v17;
      v22 = objc_msgSend(v20, "closestPositionToPoint:", MaxX, CGRectGetMinY(v47) + 1.0);

      if (v22)
      {
        v23 = sub_BB2FC();
        v24 = objc_msgSend(v23, "textRangeFromPosition:toPosition:", v19, v22);

        v25 = sub_BB2FC();
        v26 = objc_msgSend(v25, "_attributedTextInRange:", v24);

        if (v26)
        {
          if ((uint64_t)objc_msgSend(v26, "length") > 0)
          {
            if (qword_3CF2C0 != -1)
              swift_once(&qword_3CF2C0, sub_C68BC);
            v27 = objc_msgSend(v26, "attribute:atIndex:effectiveRange:", qword_3D4850, 0, 0);
            if (v27)
            {
              v29 = v27;
              _bridgeAnyObjectToAny(_:)(v41, v27, v28);
              swift_unknownObjectRelease(v29);
            }
            else
            {
              memset(v41, 0, sizeof(v41));
            }
            sub_D210((uint64_t)v41, (uint64_t)&v42, &qword_3D1A70);
            if (!v44)
            {

              sub_D1D4((uint64_t)&v42, &qword_3D1A70);
              return;
            }
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC8);
            if ((swift_dynamicCast(v40, &v42, (char *)&type metadata for Any + 8, v35, 6) & 1) != 0)
            {
              v36 = static Duration.seconds(_:)(v40[0]);
              v38 = v37;
              v30 = (char *)sub_BB268();
              v39 = (uint64_t *)&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration];
              swift_beginAccess(&v30[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration], &v42, 1, 0);
              *v39 = v36;
              v39[1] = v38;
              sub_CAF10(v36, v38);

              goto LABEL_14;
            }
          }

        }
      }

    }
  }
}

void sub_C2B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  char v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v11;

  v2 = v1;
  sub_E710(0, (unint64_t *)&qword_3D4D10, NSObject_ptr);
  v4 = sub_BB2FC();
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  if ((v5 & 1) != 0)
  {
    v6 = sub_BB2FC();
    v7 = objc_msgSend(v6, "selectedRange");
    v9 = v8;

    if ((*(_BYTE *)(v2
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange
                   + 16) & 1) == 0
      && v7 == *(id *)(v2
                     + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange)
      && v9 == *(_QWORD *)(v2
                         + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange
                         + 8))
    {
      v11 = sub_BB2FC();
      objc_msgSend(v11, "_presentEditMenu");

    }
  }
}

void sub_C2E54(id a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  _BOOL4 v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange;
  v4 = (_BYTE *)(v1
               + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange
               + 16);
  if ((*v4 & 1) == 0)
  {
    v5 = *(id *)v3;
    v6 = *(_QWORD *)(v3 + 8);
    if (objc_msgSend(a1, "selectedRange") == v5 && v7 == v6)
    {
      objc_msgSend(a1, "scrollRangeToVisible:", v5, v6);
      v9 = sub_BB2FC();
      objc_msgSend(v9, "_presentEditMenu");

      v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
      v3 = v10 + 64;
      v4 = (_BYTE *)(v10 + 80);
    }
  }
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *v4 = 1;
  v11 = objc_msgSend(a1, "selectedTextRange");
  if (v11)
  {
    v37 = v11;
    v12 = objc_msgSend(v11, "start");
    v13 = objc_msgSend(v37, "end");
    v14 = objc_msgSend(a1, "offsetFromPosition:toPosition:", v12, v13);

    v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_lastSelectionStart;
    v16 = *(void **)(v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_lastSelectionStart);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v37, "start");
      v19 = objc_msgSend(a1, "comparePosition:toPosition:", v18, v17);

      v20 = v19 == (id)-1;
    }
    else
    {
      v20 = 0;
    }
    v21 = objc_msgSend(v37, "start");
    v22 = *(void **)(v1 + v15);
    *(_QWORD *)(v1 + v15) = v21;

    v23 = objc_msgSend(a1, "textInRange:", v37);
    if (!v23)
      goto LABEL_22;
    v24 = v23;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v27 = v26;

    v28 = sub_C31D0(200, 0, v25, v27);
    v29 = (uint64_t)objc_msgSend(v28, "length", swift_bridgeObjectRelease(v27).n128_f64[0]);

    if (v29 >= (uint64_t)v14)
      goto LABEL_22;
    if (!v20)
    {
      v35 = objc_msgSend(v37, "start");
      v32 = objc_msgSend(a1, "positionFromPosition:offset:", v35, v29);

      if (v32)
      {
        v33 = objc_msgSend(v37, "start");
        v34 = objc_msgSend(a1, "textRangeFromPosition:toPosition:", v33, v32);
        goto LABEL_21;
      }
LABEL_22:

      return;
    }
    v30 = objc_msgSend(v37, "end");
    if (!__OFSUB__(0, v29))
    {
      v31 = v30;
      v32 = objc_msgSend(a1, "positionFromPosition:offset:", v30, -v29);

      if (v32)
      {
        v33 = objc_msgSend(v37, "end");
        v34 = objc_msgSend(a1, "textRangeFromPosition:toPosition:", v32, v33);
LABEL_21:
        v36 = v34;

        objc_msgSend(a1, "setSelectedTextRange:", v36);
        goto LABEL_22;
      }
      goto LABEL_22;
    }
    __break(1u);
  }
}

id sub_C31D0(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v42;
  _QWORD v44[2];
  _QWORD v45[3];
  _QWORD v46[3];

  v7 = swift_allocObject(&unk_37FC38, 24, 7);
  *(_QWORD *)(v7 + 16) = 0;
  v8 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v8 = a3;
  v9 = 11;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) == 0)
    v9 = 7;
  v10 = v9 | (v8 << 16);
  v11 = swift_allocObject(&unk_37FC38, 24, 7);
  *(_QWORD *)(v11 + 16) = v10;
  v12 = swift_allocObject(&unk_37FC60, 17, 7);
  *(_BYTE *)(v12 + 16) = 0;
  v13 = (unsigned __int8 *)(v12 + 16);
  v46[0] = a3;
  v46[1] = a4;
  v45[0] = 15;
  v45[1] = v10;
  v14 = (_QWORD *)swift_allocObject(&unk_37FC88, 48, 7);
  v14[2] = v7;
  v14[3] = a1;
  v14[4] = v11;
  v14[5] = v12;
  v42 = v7;
  swift_retain(v7);
  swift_retain(v11);
  swift_retain(v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4CA0);
  v16 = sub_D254();
  v17 = sub_10EDC((unint64_t *)&qword_3D4CB0, (uint64_t *)&unk_3D4CA0, (uint64_t)&protocol conformance descriptor for Range<A>);
  StringProtocol.enumerateSubstrings<A>(in:options:_:)(v45, 3, sub_C92C8, v14, &type metadata for String, v15, v16, v17);
  swift_release(v14);
  v18 = swift_beginAccess(v11 + 16, v46, 0, 0);
  v19 = String.subscript.getter(15, *(_QWORD *)(v11 + 16), a3, a4, v18);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  if ((a2 & 1) != 0)
  {
    v20 = swift_beginAccess(v13, v45, 0, 0);
    v27 = *v13;
    v28 = v42;
    if (v27 == 1)
    {
      v44[0] = 0x5DA680E25BLL;
      v44[1] = 0xA500000000000000;
      v29 = static String._fromSubstring(_:)(v19, v22, v24, v26, v20);
      v31 = v30;
      v32 = swift_bridgeObjectRelease(v26);
      String.append<A>(contentsOf:)(v44, &type metadata for String, &protocol witness table for String, v32);
      v19 = Substring.init(_:)(v29, v31);
      v22 = v33;
      v24 = v34;
      v26 = v35;
    }
  }
  else
  {
    v28 = v42;
  }
  static String._fromSubstring(_:)(v19, v22, v24, v26, v20);
  v37 = v36;
  swift_bridgeObjectRelease(v26);
  v38 = objc_allocWithZone((Class)NSAttributedString);
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v38, "initWithString:", v39, swift_bridgeObjectRelease(v37).n128_f64[0]);
  swift_release(v28);
  swift_release(v11);
  swift_release(v12);

  return v40;
}

Class sub_C3510(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  char *v16;
  Class result;
  Class v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::OpaquePointer v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE v40[40];
  _OWORD v41[2];
  char v42;
  UIImage_optional v43;

  v37 = a4;
  v35 = type metadata accessor for InteractionContext(0);
  v8 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E80);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for PresentationSource(0);
  v36 = *(_QWORD *)(v38 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v38).n128_u64[0];
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (Class)objc_msgSend(a1, "attributedText", v14);
  if (result)
  {
    v18 = result;
    v19 = -[objc_class attributedSubstringFromRange:](result, "attributedSubstringFromRange:", a2, a3);

    v39 = _swiftEmptyArrayStorage;
    if ((uint64_t)objc_msgSend(v19, "length") < 1)
    {

      return 0;
    }
    else
    {
      sub_BFA64(a2, a3, (uint64_t)v40);
      sub_D210((uint64_t)v40, (uint64_t)v41, &qword_3D4CF0);
      if ((v42 & 1) != 0)
      {
        v20 = a1;
        v21 = PresentationSource.init(view:)(a1);
      }
      else
      {
        *(_QWORD *)v13 = a1;
        v23 = v41[1];
        *(_OWORD *)(v13 + 8) = v41[0];
        *(_OWORD *)(v13 + 24) = v23;
        v24 = enum case for PresentationSource.Position.view(_:);
        v25 = type metadata accessor for PresentationSource.Position(0);
        v26 = *(_QWORD *)(v25 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v13, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
        v27 = a1;
        v21 = PresentationSource.init(viewController:position:)(v4, v13);
      }
      UIView.interactionContext.getter(v21);
      sub_BFD84(v19, (uint64_t)v10, (uint64_t)v16);
      v29 = v28;
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
      sub_1F6F0C(v29);
      swift_bridgeObjectRetain(v37);
      sub_1F6F0C(v32);
      sub_1F6F0C(v31);
      sub_E710(0, &qword_3D4CF8, UIMenu_ptr);
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v43.value.super.isa = 0;
      v43.is_nil = 0;
      isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v43, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v39, v34).super.super.isa;

      (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v38);
    }
    return isa;
  }
  else
  {
    __break(1u);
  }
  return result;
}

NSUInteger sub_C38A4(uint64_t a1, NSUInteger a2, NSUInteger a3, _BYTE *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v13;
  NSUInteger result;
  NSRange v15;
  double v16[2];
  _BYTE v17[24];
  uint64_t v18;
  NSRange v19;

  sub_D184(a1, (uint64_t)v17, &qword_3D1A70);
  if (!v18)
    return sub_D1D4((uint64_t)v17, &qword_3D1A70);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC8);
  result = swift_dynamicCast(v16, v17, (char *)&type metadata for Any + 8, v13, 6);
  if ((result & 1) != 0)
  {
    if (v16[0] <= a7)
    {
      if (v16[1] >= a6)
      {
        if (*(_BYTE *)(a5 + 16) == 1)
        {
          *(_QWORD *)a5 = a2;
          *(_QWORD *)(a5 + 8) = a3;
        }
        else
        {
          v19.location = a2;
          v19.length = a3;
          v15 = NSUnionRange(*(NSRange *)a5, v19);
          result = v15.location;
          *(NSRange *)a5 = v15;
        }
        *(_BYTE *)(a5 + 16) = 0;
      }
    }
    else
    {
      *a4 = 1;
    }
  }
  return result;
}

uint64_t sub_C399C(void *a1)
{
  void *v1;
  void *v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "buildMenuWithBuilder:", a1);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuStandardEdit);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuShare);
  v5[4] = sub_C3CFC;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_C3D08;
  v5[3] = &block_descriptor_34;
  v3 = _Block_copy(v5);
  objc_msgSend(a1, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", UIMenuLookup, v3, swift_release(v6).n128_f64[0]);
  _Block_release(v3);
  result = swift_isEscapingClosureAtFileLocation(0, "", 149, 896, 50, 1);
  if ((result & 1) != 0)
    __break(1u);
  return result;
}

void sub_C3ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  unint64_t v22;

  v1 = a1;
  v22 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v1);
    return;
  }
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v2)
    goto LABEL_20;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = v1 & 0xC000000000000001;
    do
    {
      if (v4)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      else
        v5 = *(id *)(v1 + 8 * v3 + 32);
      v6 = v5;
      v7 = objc_opt_self(UICommand);
      v8 = swift_dynamicCastObjCClass(v6, v7);
      if (v8)
      {
        v9 = (void *)v8;
        v6 = v6;
        if ((static Selector.== infix(_:_:)(objc_msgSend(v9, "action"), "_translate:") & 1) != 0)
        {
          sub_E710(0, (unint64_t *)&unk_3D4CE0, UICommand_ptr);
          v10 = objc_msgSend(v9, "title");
          v11 = v1;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

          memset(v21, 0, sizeof(v21));
          v15 = v12;
          v1 = v11;
          v16 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v15, v14, 0, 0, 0, 0, "presentTranslation", v21, _swiftEmptyArrayStorage, 0, 0, 0, 0);

          v6 = (id)v16;
        }
        else
        {

        }
      }
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v18 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
      v17 = *(_QWORD *)((char *)&dword_18 + (v22 & 0xFFFFFFFFFFFFFF8));
      if (v18 >= v17 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
      ++v3;
      v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v6);
      specialized Array._endMutation()(v19);
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
}

Class sub_C3D08(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  v4 = sub_E710(0, (unint64_t *)&unk_3D4C80, UIMenuElement_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = v3();
  swift_bridgeObjectRelease(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

id sub_C3DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  NSString v5;
  void *Strong;
  id v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id *v22;
  id v23;
  id v24;
  id v25;
  _BYTE v27[24];

  v3 = a3 + 16;
  v4 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5);

  swift_beginAccess(v3, v27, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  v7 = v4;
  if (Strong)
  {
    v8 = sub_BB2FC();

    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

  }
  else
  {
    v14 = 0.0;
    v16 = 0.0;
    v10 = 0.0;
    v12 = 0.0;
  }
  objc_msgSend(v7, "setFrame:", v10, v12, v14, v16);

  v17 = (void *)objc_opt_self(UIColor);
  v18 = v7;
  v19 = objc_msgSend(v17, "clearColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  v20 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v21 = (char *)objc_msgSend(v20, "userInterfaceIdiom");

  v22 = (id *)&UIFontTextStyleTitle2;
  if (v21 != (_BYTE *)&dword_4 + 1)
    v22 = (id *)&UIFontTextStyleBody;
  v23 = *v22;
  v24 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:design:weight:", v23, UIFontDescriptorSystemDesignSerif, UIFontWeightRegular);

  objc_msgSend(v18, "setFont:", v24);
  v25 = objc_msgSend(objc_allocWithZone((Class)UIDragPreview), "initWithView:", v18);

  return v25;
}

id sub_C4028(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

_QWORD *sub_C40EC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  _QWORD *v26;
  Swift::String v27;

  if ((unint64_t)a1 >> 62)
    goto LABEL_25;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v26 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if ((v2 & 0x8000000000000000) == 0)
    {
      v4 = 0;
      while (1)
      {
        if (v2 == v4)
        {
          __break(1u);
LABEL_25:
          if (a1 < 0)
            v24 = a1;
          else
            v24 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v2 = _CocoaArrayWrapper.endIndex.getter(v24);
          swift_bridgeObjectRelease(a1);
          goto LABEL_3;
        }
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        else
          v7 = *(id *)(a1 + 8 * v4 + 32);
        v8 = v7;
        v9 = objc_opt_self(UIKeyCommand);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (v10)
        {
          v11 = (void *)v10;
          v8 = v8;
          v12 = objc_msgSend(v11, "input");
          if (v12)
          {
            v13 = v12;
            v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
            v16 = v15;

            if (v14 == 99 && v16 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease(0xE100000000000000);
LABEL_21:
              sub_E710(0, &qword_3D4C78, UIKeyCommand_ptr);
              v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v27._object = (void *)0xE000000000000000;
              v20._countAndFlagsBits = 1498435395;
              v20._object = (void *)0xE400000000000000;
              v21._countAndFlagsBits = 0;
              v21._object = (void *)0xE000000000000000;
              v27._countAndFlagsBits = 0;
              v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v27);

              memset(v25, 0, sizeof(v25));
              v23 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v22._countAndFlagsBits, v22._object, 0, "customCopyAction", 99, 0xE100000000000000, 0x100000, v25, _swiftEmptyArrayStorage, 0, 0, 0, 0);

              v8 = (id)v23;
              goto LABEL_7;
            }
            v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 99, 0xE100000000000000, 0);
            swift_bridgeObjectRelease(v16);
            if ((v18 & 1) != 0)
              goto LABEL_21;
          }

        }
LABEL_7:
        ++v4;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v5 = v26[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
        v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
        specialized ContiguousArray._endMutation()(v6);
        if (v2 == v4)
          return v26;
      }
    }
    __break(1u);
  }
  return result;
}

_QWORD *sub_C4384(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  _QWORD *v26;
  Swift::String v27;

  if ((unint64_t)a1 >> 62)
    goto LABEL_25;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v26 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if ((v2 & 0x8000000000000000) == 0)
    {
      v4 = 0;
      while (1)
      {
        if (v2 == v4)
        {
          __break(1u);
LABEL_25:
          if (a1 < 0)
            v24 = a1;
          else
            v24 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v2 = _CocoaArrayWrapper.endIndex.getter(v24);
          swift_bridgeObjectRelease(a1);
          goto LABEL_3;
        }
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        else
          v7 = *(id *)(a1 + 8 * v4 + 32);
        v8 = v7;
        v9 = objc_opt_self(UIKeyCommand);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (v10)
        {
          v11 = (void *)v10;
          v8 = v8;
          v12 = objc_msgSend(v11, "input");
          if (v12)
          {
            v13 = v12;
            v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
            v16 = v15;

            if (v14 == 102 && v16 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease(0xE100000000000000);
LABEL_21:
              sub_E710(0, &qword_3D4C78, UIKeyCommand_ptr);
              v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v27._object = (void *)0xE000000000000000;
              v20._countAndFlagsBits = 1145981254;
              v20._object = (void *)0xE400000000000000;
              v21._countAndFlagsBits = 0;
              v21._object = (void *)0xE000000000000000;
              v27._countAndFlagsBits = 0;
              v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v27);

              memset(v25, 0, sizeof(v25));
              v23 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v22._countAndFlagsBits, v22._object, 0, "beginFindInteraction", 102, 0xE100000000000000, 0x100000, v25, _swiftEmptyArrayStorage, 0, 0, 0, 0);

              v8 = (id)v23;
              goto LABEL_7;
            }
            v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 102, 0xE100000000000000, 0);
            swift_bridgeObjectRelease(v16);
            if ((v18 & 1) != 0)
              goto LABEL_21;
          }

        }
LABEL_7:
        ++v4;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v5 = v26[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
        v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
        specialized ContiguousArray._endMutation()(v6);
        if (v2 == v4)
          return v26;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_C46CC()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  id v16;

  v1 = sub_BB2FC();
  objc_msgSend(v1, "selectedRange");
  v3 = v2;

  if (v3 >= 1)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)LTUITranslationViewController), "init");
    v5 = sub_BB2FC();
    v6 = objc_msgSend(v5, "attributedText");

    if (v6)
    {
      v7 = sub_BB2FC();
      v8 = objc_msgSend(v7, "selectedRange");
      v10 = v9;

      v16 = objc_msgSend(v6, "attributedSubstringFromRange:", v8, v10);
      v11 = objc_msgSend(v16, "string");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15 = sub_C31D0(200, 1, v12, v14);
      objc_msgSend(v4, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      objc_msgSend(v4, "setIsSourceEditable:", 0);
      objc_msgSend(v0, "presentViewController:animated:completion:", v4, 1, 0);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_C4898()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t sub_C48EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*sub_C4948(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_C498C(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  char *v18;
  char *v19;
  _QWORD v20[2];
  id v21[5];
  __int128 v22;
  __int128 v23;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
  {
    v22 = 0u;
    v23 = 0u;
LABEL_11:
    sub_D1D4((uint64_t)&v22, &qword_3D1A70);
    return;
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v20[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v20[1] = v6;
  AnyHashable.init<A>(_:)(v21, v20, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_36FB4((uint64_t)v21), (v8 & 1) != 0))
  {
    sub_1D66C(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  sub_3D5CC((uint64_t)v21);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_11;
  v9 = sub_E710(0, &qword_3D4CB8, NSValue_ptr);
  if ((swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = v21[0];
    objc_msgSend(v21[0], "CGRectValue");
    v12 = v11;
    v13 = objc_msgSend(v2, "view");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "safeAreaInsets");
      v16 = v15;

      v17 = v12 - v16;
      v18 = sub_BB2FC();
      objc_msgSend(v18, "setContentInset:", 0.0, 0.0, v17, 0.0);

      v19 = sub_BB2FC();
      objc_msgSend(v19, "setScrollIndicatorInsets:", 0.0, 0.0, v17, 0.0);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_C4C88()
{
  qword_3FACC0 = 0xC050000000000000;
}

void sub_C4C98()
{
  qword_3FACC8 = 0x4052000000000000;
}

void sub_C4CA8()
{
  id v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  NSString *v4;
  id v5;
  char *v6;
  id *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  NSString *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v0, "setParagraphSpacing:", 11.0);
  objc_msgSend(v0, "setLineSpacing:", 2.0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v1, &v21);
  *(_OWORD *)(inited + 16) = xmmword_2F4200;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v3 = (void *)objc_opt_self(UIDevice);
  v4 = NSFontAttributeName;
  v5 = objc_msgSend(v3, "currentDevice");
  v6 = (char *)objc_msgSend(v5, "userInterfaceIdiom");

  v7 = (id *)&UIFontTextStyleTitle2;
  if (v6 != (_BYTE *)&dword_4 + 1)
    v7 = (id *)&UIFontTextStyleBody;
  v8 = *v7;
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:design:weight:", v8, UIFontDescriptorSystemDesignSerif, UIFontWeightRegular);

  if (v9)
  {
    v10 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 64) = v10;
    *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
    v11 = (void *)objc_opt_self(UIColor);
    v12 = NSForegroundColorAttributeName;
    v13 = objc_msgSend(v11, "labelColor");
    v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 0.85);

    v15 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
    *(_QWORD *)(inited + 80) = v14;
    *(_QWORD *)(inited + 104) = v15;
    *(_QWORD *)(inited + 112) = NSParagraphStyleAttributeName;
    *(_QWORD *)(inited + 144) = sub_E710(0, &qword_3D4E10, NSMutableParagraphStyle_ptr);
    *(_QWORD *)(inited + 120) = v0;
    v16 = qword_3CF2C8;
    v17 = NSParagraphStyleAttributeName;
    v18 = v0;
    if (v16 != -1)
      swift_once(&qword_3CF2C8, sub_C68F0);
    v19 = (void *)qword_3D4858;
    *(_QWORD *)(inited + 152) = qword_3D4858;
    *(_QWORD *)(inited + 184) = &type metadata for TranscriptSelectionContentType;
    *(_BYTE *)(inited + 160) = 1;
    v20 = v19;
    sub_D4784(inited);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_C4F3C()
{
  id v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  NSString *v4;
  void *v5;
  NSString *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v16;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v0, "setParagraphSpacing:", 2.0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F60);
  inited = swift_initStackObject(v1, &v16);
  *(_OWORD *)(inited + 16) = xmmword_2F4200;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v3 = sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v4 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightSemibold);
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = NSForegroundColorAttributeName;
  v7 = objc_msgSend(v5, "secondaryLabelColor");
  v8 = sub_E710(0, (unint64_t *)&qword_3E1830, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v7;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 144) = sub_E710(0, &qword_3D4E10, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(inited + 120) = v0;
  v9 = qword_3CF2C8;
  v10 = NSParagraphStyleAttributeName;
  v11 = v0;
  if (v9 != -1)
    swift_once(&qword_3CF2C8, sub_C68F0);
  v12 = (void *)qword_3D4858;
  *(_QWORD *)(inited + 152) = qword_3D4858;
  *(_QWORD *)(inited + 184) = &type metadata for TranscriptSelectionContentType;
  *(_BYTE *)(inited + 160) = 0;
  v13 = v12;
  v14 = sub_D4784(inited);

  return v14;
}

uint64_t sub_C5118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  id v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD aBlock[5];
  _QWORD *v71;

  v53 = a6;
  v52 = a5;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  __chkstk_darwin(v10);
  v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  __chkstk_darwin(v12);
  v54 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4D90);
  __chkstk_darwin(v14);
  v67 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v51 - v17);
  v19 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v20 = *(_QWORD *)(a1 + 16);
  v68 = a1;
  swift_bridgeObjectRetain(a1);
  if (v20)
  {
    v21 = type metadata accessor for TranscriptModel.Paragraph(0);
    v22 = 0;
    v23 = *(_QWORD *)(v21 - 8);
    v24 = v68 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v25 = *(_QWORD *)(v23 + 72);
    v62 = v23;
    v63 = v21;
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v61 = v25;
    v65 = a3;
    v66 = a2;
    v64 = v19;
    v26 = v21;
    do
    {
      v69 = v22 + 1;
      v27 = a4;
      v28 = &v67[*(int *)(v14 + 48)];
      v60(v28, v24, v26);
      v29 = (char *)v18 + *(int *)(v14 + 48);
      *v18 = v22;
      v30 = v28;
      v31 = v65;
      v32 = v66;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v29, v30, v26);
      v33 = (uint64_t)v29;
      v19 = v64;
      v34 = v31;
      a4 = v27;
      sub_C54FC(v22, v33, v32, v68, v64, v34, v27);
      sub_D1D4((uint64_t)v18, (uint64_t *)&unk_3D4D90);
      v24 += v61;
      v22 = v69;
    }
    while (v20 != v69);
  }
  swift_bridgeObjectRelease(v68);
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v36 = (void *)static OS_dispatch_queue.main.getter(v35);
  v37 = (_QWORD *)swift_allocObject(&unk_37FE40, 40, 7);
  v38 = v53;
  v37[2] = v52;
  v37[3] = v38;
  v37[4] = v19;
  aBlock[4] = sub_C95C0;
  v71 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_70;
  v39 = _Block_copy(aBlock);
  v40 = v71;
  swift_retain(v38);
  v41 = v19;
  v42 = swift_release(v40);
  v43 = v54;
  static DispatchQoS.unspecified.getter(v42);
  aBlock[0] = _swiftEmptyArrayStorage;
  v44 = sub_239FC((unint64_t *)&qword_3D2FD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v46 = sub_10EDC((unint64_t *)&qword_3D2FE0, (uint64_t *)&unk_3D4DA0, (uint64_t)&protocol conformance descriptor for [A]);
  v47 = v57;
  v48 = v45;
  v49 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v46, v59, v44);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v47, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v43, v56);
}

void sub_C54FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  NSString v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char **v58;
  _UNKNOWN **v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  id v67;
  NSString v68;
  Class v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v73 = a6;
  v77 = type metadata accessor for TranscriptModel.Paragraph(0);
  v79 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v72 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DB0);
  __chkstk_darwin(v76);
  v80 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DB8);
  __chkstk_darwin(v14);
  v74 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v81 = (uint64_t)&v71 - v17;
  __chkstk_darwin(v18);
  v78 = (char *)&v71 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DC0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TranscriptModel.Speaker(0, v21);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = a4;
  sub_C5B8C(a2, a1, a4, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    v28 = sub_D1D4((uint64_t)v23, (uint64_t *)&unk_3D4DC0);
  }
  else
  {
    v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
    v30 = TranscriptModel.Speaker.name.getter(v29);
    v32 = v31;
    v82 = v30;
    v83 = v31;
    swift_bridgeObjectRetain(v31);
    v33._countAndFlagsBits = 10;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v32);
    v34 = v83;
    v35 = objc_allocWithZone((Class)NSAttributedString);
    v36 = v73;
    swift_bridgeObjectRetain(v73);
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    type metadata accessor for Key(0);
    sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v35, "initWithString:attributes:", v37, isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

    objc_msgSend(a5, "appendAttributedString:", v39);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  v40 = TranscriptModel.Paragraph.sentences.getter(v28);
  v41 = *(_QWORD *)(v40 + 16);
  v42 = v77;
  v43 = (uint64_t)v78;
  if (v41)
  {
    v44 = *(_QWORD *)(type metadata accessor for TranscriptModel.Sentence(0) - 8);
    v45 = v40 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v46 = *(_QWORD *)(v44 + 72);
    do
    {
      sub_C5DCC(v45, a5, a7, a2);
      v45 += v46;
      --v41;
    }
    while (v41);
  }
  v47 = swift_bridgeObjectRelease(v40);
  v48 = v79;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v79 + 16);
  v49(v43, a2, v42, v47);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v51 = 1;
  v50(v43, 0, 1, v42);
  v52 = *(_QWORD *)(v75 + 16);
  if (v52)
  {
    v53 = v81;
    ((void (*)(uint64_t, unint64_t, uint64_t))v49)(v81, v75+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * (v52 - 1), v42);
    v51 = 0;
    v54 = (uint64_t)v80;
  }
  else
  {
    v54 = (uint64_t)v80;
    v53 = v81;
  }
  v50(v53, v51, 1, v42);
  v55 = v54 + *(int *)(v76 + 48);
  sub_D184(v43, v54, &qword_3D4DB8);
  sub_D184(v53, v55, &qword_3D4DB8);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v56(v54, 1, v42) == 1)
  {
    sub_D1D4(v53, &qword_3D4DB8);
    sub_D1D4(v43, &qword_3D4DB8);
    if (v56(v55, 1, v42) == 1)
    {
      sub_D1D4(v54, &qword_3D4DB8);
      return;
    }
  }
  else
  {
    v57 = v74;
    sub_D184(v54, v74, &qword_3D4DB8);
    if (v56(v55, 1, v42) != 1)
    {
      v60 = v43;
      v61 = v57;
      v62 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v72, v55, v42);
      v63 = sub_239FC(&qword_3D4DD0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptModel.Paragraph, (uint64_t)&protocol conformance descriptor for TranscriptModel.Paragraph);
      v64 = dispatch thunk of static Equatable.== infix(_:_:)(v61, v62, v42, v63);
      v65 = *(void (**)(char *, uint64_t))(v48 + 8);
      v65(v62, v42);
      sub_D1D4(v81, &qword_3D4DB8);
      v66 = v60;
      v59 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
      sub_D1D4(v66, &qword_3D4DB8);
      v65((char *)v61, v42);
      sub_D1D4(v54, &qword_3D4DB8);
      v58 = &selRef_accessibilityContextButton;
      if ((v64 & 1) != 0)
        return;
      goto LABEL_17;
    }
    sub_D1D4(v81, &qword_3D4DB8);
    sub_D1D4(v43, &qword_3D4DB8);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v57, v42);
  }
  sub_D1D4(v54, &qword_3D4DB0);
  v58 = &selRef_accessibilityContextButton;
  v59 = &_sSo8UIButtonC5UIKitE13ConfigurationV5titleSSSgvs_ptr;
LABEL_17:
  v67 = objc_allocWithZone((Class)v59[297]);
  swift_bridgeObjectRetain(a7);
  v68 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  v69 = Dictionary._bridgeToObjectiveC()().super.isa;
  v70 = objc_msgSend(v67, v58[261], v68, v69, swift_bridgeObjectRelease(a7).n128_f64[0]);

  objc_msgSend(a5, "appendAttributedString:", v70);
}

uint64_t sub_C5B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  uint64_t result;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;

  v33 = a3;
  v34 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for TranscriptModel.Speaker(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v33 - v19;
  TranscriptModel.speaker(for:)(a1, v18);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v21(v12, 1, v13) == 1)
  {
    sub_D1D4((uint64_t)v12, (uint64_t *)&unk_3D4DC0);
LABEL_3:
    v22 = 1;
    v23 = v34;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v23, v22, 1, v13);
  }
  v24 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 32);
  result = v24(v20, v12, v13);
  if (!a2)
  {
LABEL_12:
    v23 = v34;
    v24(v34, v20, v13);
    v22 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v23, v22, 1, v13);
  }
  v26 = __OFSUB__(a2, 1);
  v27 = a2 - 1;
  if (v26)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v28 = v33;
  if (v27 < *(_QWORD *)(v33 + 16))
  {
    v29 = type metadata accessor for TranscriptModel.Paragraph(0);
    TranscriptModel.speaker(for:)(v28+ ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v27, v30);
    if (v21(v8, 1, v13) == 1)
    {
      sub_D1D4((uint64_t)v8, (uint64_t *)&unk_3D4DC0);
    }
    else
    {
      v24(v16, v8, v13);
      v31 = static TranscriptModel.Speaker.== infix(_:_:)(v16, v20);
      v32 = *(void (**)(char *, uint64_t))(v14 + 8);
      v32(v16, v13);
      if ((v31 & 1) != 0)
      {
        v32(v20, v13);
        goto LABEL_3;
      }
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_C5DCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  id v51;
  NSString v52;
  Class isa;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v58 = a4;
  v59 = type metadata accessor for TranscriptModel.Sentence(0);
  v7 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v55 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DD8);
  __chkstk_darwin(v61);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DE0);
  __chkstk_darwin(v11);
  v56 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v62 = (uint64_t)&v55 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  v19 = TranscriptModel.Sentence.words.getter(v18);
  v20 = v19;
  v21 = *(_QWORD *)(v19 + 16);
  v63 = v17;
  v60 = v10;
  if (v21)
  {
    v22 = v7;
    v23 = *(_QWORD *)(type metadata accessor for TranscriptModel.Word(0) - 8);
    v24 = v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v25 = *(_QWORD *)(v23 + 72);
    do
    {
      sub_C62C4(v24, a2, a3, a1);
      v24 += v25;
      --v21;
    }
    while (v21);
    v26 = swift_bridgeObjectRelease(v20);
    v7 = v22;
    v17 = v63;
  }
  else
  {
    v26 = swift_bridgeObjectRelease(v19);
  }
  v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v28 = v59;
  v27(v17, a1, v59, v26);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v30 = v17;
  v31 = v7;
  v32 = 1;
  v33 = v29(v30, 0, 1, v28);
  v34 = TranscriptModel.Paragraph.sentences.getter(v33);
  v35 = v34;
  v36 = *(_QWORD *)(v34 + 16);
  v57 = v31;
  if (v36)
  {
    v37 = v62;
    ((void (*)(uint64_t, unint64_t, uint64_t))v27)(v62, v34+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * (v36 - 1), v28);
    v38 = v37;
    v32 = 0;
  }
  else
  {
    v38 = v62;
  }
  v29((char *)v38, v32, 1, v28);
  swift_bridgeObjectRelease(v35);
  v39 = (uint64_t)v60;
  v40 = (uint64_t)&v60[*(int *)(v61 + 48)];
  v41 = (uint64_t)v63;
  sub_D184((uint64_t)v63, (uint64_t)v60, &qword_3D4DE0);
  v61 = v40;
  sub_D184(v38, v40, &qword_3D4DE0);
  v42 = v57;
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v43(v39, 1, v28) == 1)
  {
    sub_D1D4(v38, &qword_3D4DE0);
    sub_D1D4(v41, &qword_3D4DE0);
    v44 = v39;
    if (v43(v61, 1, v28) == 1)
    {
      sub_D1D4(v39, &qword_3D4DE0);
      return;
    }
  }
  else
  {
    v45 = v56;
    sub_D184(v39, v56, &qword_3D4DE0);
    v44 = v39;
    if (v43(v61, 1, v28) != 1)
    {
      v46 = v45;
      v47 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v55, v61, v28);
      v48 = sub_239FC(&qword_3D4DE8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptModel.Sentence, (uint64_t)&protocol conformance descriptor for TranscriptModel.Sentence);
      LODWORD(v61) = dispatch thunk of static Equatable.== infix(_:_:)(v45, v47, v28, v48);
      v49 = v44;
      v50 = *(void (**)(char *, uint64_t))(v42 + 8);
      v50(v47, v28);
      sub_D1D4(v62, &qword_3D4DE0);
      sub_D1D4((uint64_t)v63, &qword_3D4DE0);
      v50((char *)v46, v28);
      sub_D1D4(v49, &qword_3D4DE0);
      if ((v61 & 1) != 0)
        return;
      goto LABEL_16;
    }
    sub_D1D4(v62, &qword_3D4DE0);
    sub_D1D4((uint64_t)v63, &qword_3D4DE0);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v28);
  }
  sub_D1D4(v44, &qword_3D4DD8);
LABEL_16:
  v51 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a3);
  v52 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v54 = objc_msgSend(v51, "initWithString:attributes:", v52, isa, swift_bridgeObjectRelease(a3).n128_f64[0]);

  objc_msgSend(a2, "appendAttributedString:", v54);
}

void sub_C62C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  id v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  Class isa;
  id v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  NSString v46;
  Class v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;

  v57 = a4;
  v60 = a2;
  v7 = type metadata accessor for TranscriptModel.Word(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v52 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DF0);
  __chkstk_darwin(v58);
  v61 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4DF8);
  __chkstk_darwin(v11);
  v53 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  TranscriptModel.Word.text.getter(v17);
  v21 = v20;
  v22 = TranscriptModel.Word.startTime.getter();
  v23 = TranscriptModel.Word.endTime.getter();
  if (v22 > v23)
  {
    __break(1u);
  }
  else
  {
    v59 = v4;
    v56 = a3;
    v24 = sub_C67F0(a3, v22, v23);
    v25 = objc_allocWithZone((Class)NSAttributedString);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    type metadata accessor for Key(0);
    v28 = v27;
    v54 = sub_239FC((unint64_t *)&qword_3D0150, 255, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2EDC20);
    v55 = v28;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v25, "initWithString:attributes:", v26, isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

    objc_msgSend(v60, "appendAttributedString:", v30);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v31(v19, a1, v7);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v33 = 1;
    v34 = v32(v19, 0, 1, v7);
    v35 = TranscriptModel.Sentence.words.getter(v34);
    v36 = v35;
    v37 = *(_QWORD *)(v35 + 16);
    if (v37)
    {
      v31(v15, v35+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * (v37 - 1), v7);
      v33 = 0;
    }
    v32(v15, v33, 1, v7);
    swift_bridgeObjectRelease(v36);
    v38 = v61;
    v39 = v61 + *(int *)(v58 + 48);
    sub_D184((uint64_t)v19, v61, &qword_3D4DF8);
    sub_D184((uint64_t)v15, v39, &qword_3D4DF8);
    v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v41 = v40(v38, 1, v7);
    v42 = v56;
    if (v41 == 1)
    {
      sub_D1D4((uint64_t)v15, &qword_3D4DF8);
      sub_D1D4((uint64_t)v19, &qword_3D4DF8);
      if (v40(v39, 1, v7) == 1)
      {
        sub_D1D4(v61, &qword_3D4DF8);
        return;
      }
      goto LABEL_9;
    }
    v43 = v53;
    sub_D184(v38, v53, &qword_3D4DF8);
    if (v40(v39, 1, v7) == 1)
    {
      sub_D1D4((uint64_t)v15, &qword_3D4DF8);
      sub_D1D4((uint64_t)v19, &qword_3D4DF8);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v43, v7);
LABEL_9:
      sub_D1D4(v61, &qword_3D4DF0);
      v44 = v60;
LABEL_10:
      v45 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(v42);
      v46 = String._bridgeToObjectiveC()();
      v47 = Dictionary._bridgeToObjectiveC()().super.isa;
      v48 = objc_msgSend(v45, "initWithString:attributes:", v46, v47, swift_bridgeObjectRelease(v42).n128_f64[0]);

      objc_msgSend(v44, "appendAttributedString:", v48);
      return;
    }
    v49 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v52, v39, v7);
    v50 = sub_239FC((unint64_t *)&unk_3D4E00, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptModel.Word, (uint64_t)&protocol conformance descriptor for TranscriptModel.Word);
    LODWORD(v58) = dispatch thunk of static Equatable.== infix(_:_:)(v43, v49, v7, v50);
    v51 = *(void (**)(char *, uint64_t))(v8 + 8);
    v51(v49, v7);
    sub_D1D4((uint64_t)v15, &qword_3D4DF8);
    sub_D1D4((uint64_t)v19, &qword_3D4DF8);
    v51((char *)v43, v7);
    sub_D1D4(v61, &qword_3D4DF8);
    v44 = v60;
    if ((v58 & 1) == 0)
      goto LABEL_10;
  }
}

uint64_t sub_C67F0(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;

  v6 = qword_3CF2C0;
  swift_bridgeObjectRetain(a1);
  if (v6 != -1)
    swift_once(&qword_3CF2C0, sub_C68BC);
  v7 = (void *)qword_3D4850;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC8);
  *(double *)&v12 = a2;
  *((double *)&v12 + 1) = a3;
  sub_1D65C(&v12, v11);
  v8 = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  sub_15EB78(v11, v8, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease(0x8000000000000000);
  return a1;
}

NSString sub_C68BC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3D4850 = (uint64_t)result;
  return result;
}

NSString sub_C68F0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_3D4858 = (uint64_t)result;
  return result;
}

id static NSAttributedStringKey.contentType.getter()
{
  if (qword_3CF2C8 != -1)
    swift_once(&qword_3CF2C8, sub_C68F0);
  return (id)qword_3D4858;
}

void TranscriptSelectionContentType.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int TranscriptSelectionContentType.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

unint64_t sub_C69D4()
{
  unint64_t result;

  result = qword_3D4860;
  if (!qword_3D4860)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TranscriptSelectionContentType, &type metadata for TranscriptSelectionContentType);
    atomic_store(result, (unint64_t *)&qword_3D4860);
  }
  return result;
}

uint64_t type metadata accessor for EpisodeDetailTranscriptViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController);
}

uint64_t sub_C6A38()
{
  return type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel(0);
}

uint64_t type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D4958, (uint64_t)&nominal type descriptor for EpisodeDetailTranscriptViewController.ViewModel);
}

void sub_C6A54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[19];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v8[2] = &unk_2F4320;
  v8[3] = &unk_2F4338;
  v8[4] = &unk_2F4350;
  sub_3D544(319, &qword_3D4968, (uint64_t (*)(uint64_t))&type metadata accessor for TranscriptSource);
  if (v3 <= 0x3F)
  {
    v8[5] = *(_QWORD *)(v2 - 8) + 64;
    v8[6] = &unk_2F4368;
    v8[7] = &unk_2F4380;
    v8[8] = &unk_2F4368;
    v8[9] = &unk_2F4338;
    v8[10] = &unk_2F4368;
    v8[11] = &unk_2F4320;
    v8[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[13] = &unk_2F4368;
    v8[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[15] = &unk_2F4398;
    v8[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_C6B90();
    if (v5 <= 0x3F)
    {
      v8[17] = *(_QWORD *)(v4 - 8) + 64;
      sub_3D544(319, (unint64_t *)&unk_3D4978, type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData);
      if (v7 <= 0x3F)
      {
        v8[18] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 19, v8, a1 + 80);
      }
    }
  }
}

void sub_C6B90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_3D4970)
  {
    v0 = type metadata accessor for Published(0, &type metadata for EpisodeDetailTranscriptViewController.ViewModel.State);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_3D4970);
  }
}

uint64_t type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D4C30, (uint64_t)&nominal type descriptor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData);
}

ValueMetadata *type metadata accessor for TranscriptSelectionContentType()
{
  return &type metadata for TranscriptSelectionContentType;
}

id sub_C6C8C(void *a1, uint64_t a2)
{
  char *v2;
  void *v3;
  objc_class *ObjectType;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  NSString v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_navBarButtonUpdater], *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_navBarButtonUpdater+ 24]);
  sub_BE458(1);
  v7 = objc_msgSend(a1, "searchText");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

    v12 = sub_C31D0(200, 0, v9, v11);
    v13 = objc_msgSend(v12, "string", swift_bridgeObjectRelease(v11).n128_f64[0]);

    if (!v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v16 = v15;
      v13 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v14 = swift_bridgeObjectRelease(v16).n128_u64[0];
    }
    objc_msgSend(a1, "setSearchText:", v13, v14);

  }
  v18.receiver = v3;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "findInteraction:didBeginFindSession:", a1, a2);
}

double sub_C6EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  Strong = swift_unknownObjectWeakLoadStrong(v1+ OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_copyDelegate);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_D184(a1, (uint64_t)v13, &qword_3D1A70);
    v6 = v14;
    if (v14)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v13, v14);
      v8 = *(_QWORD *)(v6 - 8);
      v9 = __chkstk_darwin(v7);
      v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      __swift_destroy_boxed_opaque_existential_0(v13);
    }
    else
    {
      v12 = 0;
    }
    objc_msgSend(v5, "copy:", v12);

    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

uint64_t type metadata accessor for FindInteractionTextView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView);
}

id sub_C7144(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _QWORD v19[5];
  uint64_t v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton_onDismissMenu];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v21.receiver = v4;
  v21.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v12 = objc_allocWithZone((Class)UIColor);
  v19[4] = sub_C72F0;
  v20 = 0;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_EBBFC;
  v19[3] = &block_descriptor_6_0;
  v13 = _Block_copy(v19);
  v14 = v11;
  v15 = objc_msgSend(v12, "initWithDynamicProvider:", v13);
  _Block_release(v13);
  objc_msgSend(v14, "setBackgroundColor:", v15, swift_release(v20).n128_f64[0]);

  v16 = objc_msgSend(v14, "layer");
  objc_msgSend(v16, "setCornerRadius:", 12.0);

  v17 = objc_msgSend(v14, "layer");
  objc_msgSend(v17, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v14, "setShowsMenuAsPrimaryAction:", 1);
  return v14;
}

id sub_C72F0(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (_BYTE *)&dword_0 + 2)
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.22);
  }
  else
  {
    v3 = objc_msgSend(v2, "tintColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  v5 = v4;

  return v5;
}

uint64_t type metadata accessor for HighlightedParagraphButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton);
}

uint64_t *sub_C74D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for EpisodeOffer(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
      v14 = *(int *)(v13 + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for Date(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = *(int *)(v13 + 64);
      v21 = (uint64_t *)((char *)a1 + v20);
      v22 = (uint64_t *)((char *)a2 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain(v23);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double sub_C7650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for EpisodeOffer(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
    v6 = a1 + *(int *)(v5 + 48);
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 64) + 8)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_C7718(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for EpisodeOffer(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain(v10);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
    v12 = *(int *)(v11 + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Date(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = *(int *)(v11 + 64);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain(v21);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_C7864(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_C79D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for EpisodeOffer(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
      v12 = *(int *)(v11 + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v18 = *(int *)(v11 + 64);
      v19 = (_QWORD *)((char *)a1 + v18);
      v20 = (_QWORD *)((char *)a2 + v18);
      *v19 = *v20;
      v21 = v20[1];
      v19[1] = v21;
      swift_bridgeObjectRetain(v21);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_C79D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_C7A0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for EpisodeOffer(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    *a1 = *a2;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
    v11 = *(int *)(v10 + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Date(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(_OWORD *)((char *)a1 + *(int *)(v10 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v10 + 64));
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_OWORD *sub_C7B48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_C79D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for EpisodeOffer(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      *a1 = *a2;
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Date(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v10 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v10 + 64));
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PlayState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_C7CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

void sub_C7CC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[2];

  sub_3D544(319, (unint64_t *)&qword_3D4C40, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v6, &unk_2F4338, *(_QWORD *)(v2 - 8) + 64, &unk_2F4338);
    v7[0] = v6;
    v4 = type metadata accessor for EpisodeOffer(319);
    if (v5 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_C7DAC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_C7DAC(id result, char a2)
{
  if (a2 == 1)
    return (id)swift_errorRetain(result);
  if (!a2)
    return result;
  return result;
}

void destroy for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t a1)
{
  sub_C7DD8(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_C7DD8(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_errorRelease(a1);
  }
  else if (!a2)
  {

  }
}

uint64_t assignWithCopy for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_C7DAC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_C7DD8(v5, v6);
  return a1;
}

uint64_t assignWithTake for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_C7DD8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeDetailTranscriptViewController.ViewModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_C7F0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_C7F24(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.State()
{
  return &type metadata for EpisodeDetailTranscriptViewController.ViewModel.State;
}

uint64_t sub_C7F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v14 = (_QWORD *)(a8 + 16);
  result = swift_beginAccess(a8 + 16, v22, 1, 0);
  v16 = *(_QWORD *)(a8 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *v14 = v18;
    if (v18 == a9)
    {
      swift_beginAccess(a10 + 16, &v19, 1, 0);
      *(_QWORD *)(a10 + 16) = a4;
    }
    result = swift_beginAccess(v14, v21, 0, 0);
    if (*v14 > a9)
    {
      result = swift_beginAccess(a11 + 16, v20, 1, 0);
      *(_BYTE *)(a11 + 16) = 1;
      *a7 = 1;
    }
  }
  return result;
}

char *sub_C8028(uint64_t a1, void *a2)
{
  uint64_t v4;
  objc_class *InteractionTextView;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  objc_super v18;
  _QWORD v19[5];
  _QWORD v20[5];

  v4 = type metadata accessor for EpisodeDetailTranscriptViewController();
  v20[3] = v4;
  v20[4] = &off_37FAF8;
  v20[0] = a1;
  InteractionTextView = (objc_class *)type metadata accessor for FindInteractionTextView();
  v6 = (char *)objc_allocWithZone(InteractionTextView);
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v4);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  v12 = *v10;
  v19[3] = v4;
  v19[4] = &off_37FAF8;
  v19[0] = v12;
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_copyDelegate], 0);
  sub_1D5D4((uint64_t)v19, (uint64_t)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_navBarButtonUpdater]);
  v18.receiver = v6;
  v18.super_class = InteractionTextView;
  v13 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakAssign(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE23FindInteractionTextView_copyDelegate], a2);
  v14 = v13;
  v15 = objc_msgSend(v14, "layoutManager");
  v16 = objc_msgSend(v15, "textContainers");

  __swift_destroy_boxed_opaque_existential_0(v19);
  __swift_destroy_boxed_opaque_existential_0(v20);
  return v14;
}

id sub_C81A4(void *a1, id a2, char a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;

  if ((a3 & 1) == 0)
  {
    objc_msgSend(a2, "_setManualScrollEdgeAppearanceEnabled:", 1);
    objc_allocWithZone((Class)type metadata accessor for UberNavigationTitleView());
    swift_retain(a5);
    sub_2659B8(v8);
    objc_msgSend(a2, "setTitleView:", v9);
    __asm { BR              X10 }
  }
  objc_msgSend(a2, "_setManualScrollEdgeAppearanceEnabled:", 0);
  objc_msgSend(a1, "_setTitleOpacity:", 1.0);
  v11 = objc_msgSend(a2, "titleView");
  if (v11)
  {
    v12 = v11;
    v13 = type metadata accessor for UberNavigationTitleView();
    v14 = (void *)swift_dynamicCastClass(v12, v13);
    if (v14)
      objc_msgSend(v14, "setHideStandardTitle:", 0);

  }
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return objc_msgSend(a1, "setTintColor:", qword_3D0890);
}

uint64_t sub_C84A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[3];

  v11 = v10;
  v45 = a6;
  v46 = a7;
  v43 = a4;
  v44 = a5;
  v47 = a10;
  v48 = a8;
  v42 = a9;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4D18);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 72) = 0;
  *(_BYTE *)(v10 + 80) = 1;
  *(_QWORD *)(v10
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptObserver) = 0;
  v20 = OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_networkObserver;
  type metadata accessor for NetworkObserver(0, v17);
  *(_QWORD *)(v10 + v20) = NetworkObserver.__allocating_init()();
  *(_BYTE *)(v10
           + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_isNetworkReachable) = 1;
  *(_QWORD *)(v10
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_subscriptions) = &_swiftEmptySetSingleton;
  v21 = v10 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel__state;
  *(_QWORD *)&v49[0] = 0;
  BYTE8(v49[0]) = 2;
  Published.init(initialValue:)(v49, &type metadata for EpisodeDetailTranscriptViewController.ViewModel.State);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v21, v19, v15);
  v22 = v11 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
  v23 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v24 = v43;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = v24;
  v25 = v45;
  *(_QWORD *)(v11 + 48) = v44;
  *(_QWORD *)(v11 + 56) = v25;
  v26 = v47;
  v27 = v48;
  *(_QWORD *)(v11 + 64) = v46;
  *(_QWORD *)(v11 + 72) = v27;
  *(_BYTE *)(v11 + 80) = v42 & 1;
  sub_D184(v26, v11 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptSource, &qword_3D2DB0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4E60);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v49, v28, v28);
  sub_1B738(v49, v11 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_transcriptProvider);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  BaseObjectGraph.inject<A>(_:)(v49, v29, v29);
  sub_1B738(v49, v11 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D80);
  BaseObjectGraph.inject<A>(_:)(v49, v30, v30);
  *(_OWORD *)(v11
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_libraryDataProvider) = v49[0];
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3B70);
  BaseObjectGraph.inject<A>(_:)(v49, v31, v31);
  sub_1B738(v49, v11 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_storeDataProvider);
  v32 = type metadata accessor for MetricsController(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  swift_retain(a1);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_metricsController) = MetricsController.init(asPartOf:)(v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E70);
  BaseObjectGraph.optional<A>(_:)(v49, v34, v34, v35);
  *(_OWORD *)(v11
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_menuBarProvider) = v49[0];
  v36 = type metadata accessor for EpisodeDetailAlignmentCoordinator(0);
  v37 = swift_retain(a1);
  v38 = EpisodeDetailAlignmentCoordinator.__allocating_init(asPartOf:)(v37);
  v39 = (uint64_t *)(v11
                  + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator);
  *(_QWORD *)(v11
            + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_alignmentCoordinator
            + 24) = v36;
  v39[4] = sub_239FC(&qword_3D4E78, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeDetailAlignmentCoordinator, (uint64_t)&protocol conformance descriptor for EpisodeDetailAlignmentCoordinator);
  *v39 = v38;
  sub_C079C();
  sub_BD8A8();
  sub_C09F8();
  sub_D1D4(v26, &qword_3D2DB0);
  return v11;
}

void sub_C87F4()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___timestampView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_lastSelectionStart] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_manuallySelectedRange];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___textViewTapGesture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController____lazy_storage___representedFlowDestinations] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_rebuildMenuBar];
  *(_QWORD *)v2 = UINavigationBar.overrideBackButtonStyle.setter;
  *((_QWORD *)v2 + 1) = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeDetailTranscriptViewController.swift", 67, 2, 100, 0);
  __break(1u);
}

uint64_t sub_C88FC(id a1)
{
  id v2;
  __n128 v3;
  id v4;
  uint64_t v5;
  uint64_t v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  if (qword_3CF2C0 != -1)
    swift_once(&qword_3CF2C0, sub_C68BC);
  v2 = objc_msgSend(a1, "attribute:atIndex:effectiveRange:", qword_3D4850, 0, 0);
  if (v2)
  {
    v4 = v2;
    _bridgeAnyObjectToAny(_:)(v8, v2, v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_D210((uint64_t)v8, (uint64_t)v9, &qword_3D1A70);
  if (v10)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC8);
    if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
      return v7;
  }
  else
  {
    sub_D1D4((uint64_t)v9, &qword_3D1A70);
  }
  return 0;
}

void sub_C8A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  id v58;
  id v59;
  NSString v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD aBlock[5];
  _QWORD *v75;
  char v76[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A50);
  __chkstk_darwin(v2);
  v73 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EpisodeOffer(0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - v15;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_viewModel);
  v18 = v17 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData;
  swift_beginAccess(v17 + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeData, v76, 0, 0);
  sub_D184(v18, (uint64_t)v9, &qword_3D4CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_D1D4((uint64_t)v9, &qword_3D4CC0);
  }
  else
  {
    sub_C92F8((uint64_t)v9, (uint64_t)v16);
    v19 = sub_BB2FC();
    objc_msgSend(v19, "selectedRange");
    v21 = v20;

    if (v21 < 1)
    {
      sub_C79D0((uint64_t)v16);
    }
    else
    {
      v70 = v16;
      v22 = sub_BB2FC();
      v23 = objc_msgSend(v22, "attributedText");

      if (v23)
      {
        v69 = v1;
        v24 = sub_BB2FC();
        v25 = objc_msgSend(v24, "selectedRange");
        v27 = v26;

        v28 = objc_msgSend(v23, "attributedSubstringFromRange:", v25, v27);
        v29 = sub_C88FC(v28);
        v31 = v30 & 1;
        sub_C933C((uint64_t)v70, (uint64_t)v13);
        if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
        {
          v33 = v71;
          v32 = v72;
          (*(void (**)(char *, uint64_t *, uint64_t))(v71 + 32))(v6, v13, v72);
          v34 = (_QWORD *)(v17
                         + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController);
          v35 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v36 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1(v34, v35);
          v37 = dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeOffer:selectedText:referenceTime:playerTime:)(v6, v28, v29, v31, 0, 1, v35, v36);
          v39 = v38;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v32);
        }
        else
        {
          v40 = *v13;
          v71 = v13[1];
          v72 = v40;
          v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4BB0);
          v42 = (uint64_t)v13 + *(int *)(v41 + 48);
          v43 = (uint64_t *)((char *)v13 + *(int *)(v41 + 64));
          v44 = *v43;
          v67 = v43[1];
          v68 = v44;
          v45 = v31;
          v46 = v73;
          sub_D210(v42, v73, &qword_3D0A50);
          v47 = v28;
          v49 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 24);
          v48 = *(_QWORD *)(v17
                          + OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v17+ OBJC_IVAR____TtCC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController9ViewModel_episodeController), v49);
          v50 = *(_QWORD *)(v17 + 32);
          v51 = *(_QWORD *)(v17 + 40);
          v52 = swift_bridgeObjectRetain(v51);
          v66 = v48;
          v28 = v47;
          v53 = v71;
          v54 = v50;
          v55 = v67;
          v37 = dispatch thunk of EpisodeControllerProtocol.textForTranscriptSelectionCopying(episodeUUID:episodeTitle:podcastTitle:episodePubdate:selectedText:referenceTime:playerTime:)(v72, v71, v54, v51, v68, v67, v46, v47, v52, v29, v45, 0, 1, v49, v66);
          v39 = v56;
          swift_bridgeObjectRelease(v53);
          swift_bridgeObjectRelease(v51);
          swift_bridgeObjectRelease(v55);
          sub_D1D4(v46, &qword_3D0A50);
        }
        v57 = String._bridgeToObjectiveC()();
        v58 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithObject:", v57);

        v59 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v58);
        v60 = String._bridgeToObjectiveC()();
        objc_msgSend(v59, "setLocalObject:", v60);

        v61 = swift_allocObject(&unk_37FBC0, 24, 7);
        swift_unknownObjectWeakInit(v61 + 16, v69);
        v62 = (_QWORD *)swift_allocObject(&unk_37FCB0, 40, 7);
        v62[2] = v37;
        v62[3] = v39;
        v62[4] = v61;
        aBlock[4] = sub_C93AC;
        v75 = v62;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_C4028;
        aBlock[3] = &block_descriptor_31_0;
        v63 = _Block_copy(aBlock);
        objc_msgSend(v59, "setPreviewProvider:", v63, swift_release(v75).n128_f64[0]);
        _Block_release(v63);
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
        v65 = swift_allocObject(v64, 40, 7);
        *(_OWORD *)(v65 + 16) = xmmword_2F11D0;
        *(_QWORD *)(v65 + 32) = v59;
        aBlock[0] = v65;
        specialized Array._endMutation()(v65);

        sub_C79D0((uint64_t)v70);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_C8F8C(void *a1)
{
  void *v2;
  uint64_t result;
  void *v4;
  void **v5;
  uint64_t v6;
  Class (*v7)(uint64_t, uint64_t);
  void *v8;
  _QWORD *(*v9)(uint64_t);
  uint64_t v10;

  v9 = sub_C3D00;
  v10 = 0;
  v5 = _NSConcreteStackBlock;
  v6 = 1107296256;
  v7 = sub_C3D08;
  v8 = &block_descriptor_9;
  v2 = _Block_copy(&v5);
  objc_msgSend(a1, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", UIMenuStandardEdit, v2, swift_release(v10).n128_f64[0]);
  _Block_release(v2);
  result = swift_isEscapingClosureAtFileLocation(0, "", 149, 1000, 56, 1);
  if ((result & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v9 = sub_C3D04;
  v10 = 0;
  v5 = _NSConcreteStackBlock;
  v6 = 1107296256;
  v7 = sub_C3D08;
  v8 = &block_descriptor_3;
  v4 = _Block_copy(&v5);
  objc_msgSend(a1, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:", UIMenuEdit, v4, swift_release(v10).n128_f64[0]);
  _Block_release(v4);
  result = swift_isEscapingClosureAtFileLocation(0, "", 149, 1015, 48, 1);
  if ((result & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_9(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

BOOL sub_C9104(id a1)
{
  uint64_t v1;
  id v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_BB4AC();

  if (v3 != a1)
    return 1;
  v5 = sub_BB2FC();
  objc_msgSend(v5, "selectedRange");
  v7 = v6;

  return !v7
      && *(_QWORD *)(v1
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews37EpisodeDetailTranscriptViewController_highlightedParagraphButton) == 0;
}

void sub_C9180()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_4B6A8D49F15B3AE23629E1279D1F5DBE26HighlightedParagraphButton_onDismissMenu];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EpisodeDetailTranscriptViewController.swift", 67, 2, 1328, 0);
  __break(1u);
}

uint64_t sub_C920C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_C9230()
{
  uint64_t v0;

  sub_BE9DC(v0);
}

void sub_C923C()
{
  uint64_t v0;

  sub_BE954(v0);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C9274()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C9284()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_C9294()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_C92C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t *v7;

  return sub_C7F4C(a1, a2, a3, a4, a5, a6, a7, v7[2], v7[3], v7[4], v7[5]);
}

uint64_t sub_C92F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C933C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.EpisodeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C9380()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_C93AC()
{
  uint64_t *v0;

  return sub_C3DDC(v0[2], v0[3], v0[4]);
}

uint64_t sub_C93B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C93C8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  return sub_C1720(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_C93D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C93E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_152230(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_C93F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_C9400()
{
  uint64_t v0;

  sub_BFD00(v0);
}

uint64_t sub_C9408()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_C9434(uint64_t a1)
{
  uint64_t v1;

  sub_C01A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_C943C()
{
  uint64_t v0;

  return sub_BD764(v0);
}

uint64_t sub_C9444()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C9468(uint64_t a1)
{
  uint64_t v1;

  return sub_C11E0(a1, v1);
}

void sub_C9470(uint64_t *a1)
{
  uint64_t v1;

  sub_C1264(a1, v1);
}

double sub_C9478(uint64_t a1)
{
  uint64_t (*v1)(void *);

  return sub_C14C8(a1, v1);
}

uint64_t sub_C9480(void *a1)
{
  uint64_t v1;

  return sub_C168C(a1, v1);
}

uint64_t sub_C9488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for TranscriptModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v5);
}

uint64_t sub_C9528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TranscriptModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_C5118(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_C9594()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C95C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_C95E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_C9614(uint64_t a1)
{
  uint64_t v1;

  sub_BC34C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_C961C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

NSUInteger sub_C962C(uint64_t a1, NSUInteger a2, NSUInteger a3, _BYTE *a4)
{
  uint64_t v4;

  return sub_C38A4(a1, a2, a3, a4, *(_QWORD *)(v4 + 32), *(double *)(v4 + 16), *(double *)(v4 + 24));
}

uint64_t sub_C9638()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_C9648(void **a1)
{
  uint64_t v1;

  sub_C0AE0(a1, v1);
}

uint64_t sub_C9650(uint64_t *a1)
{
  uint64_t v1;

  return sub_C0E14(a1, v1);
}

uint64_t sub_C9658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_C96A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C96CC(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_3D4E94, a1);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C9738;
  return sub_C18A0();
}

uint64_t sub_C9738()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_C9780()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C97A4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  __n128 v7;

  v5 = *(int **)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_3E0F6C, a2);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_C9738;
  return ((uint64_t (*)(uint64_t, int *, __n128))((char *)&dword_3E0F68 + dword_3E0F68))(a1, v5, v7);
}

unint64_t sub_C9814()
{
  unint64_t result;

  result = qword_3D4EB8;
  if (!qword_3D4EB8)
  {
    result = swift_getWitnessTable(&unk_2F45C0, &type metadata for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError);
    atomic_store(result, (unint64_t *)&qword_3D4EB8);
  }
  return result;
}

double sub_C9858(char *a1)
{
  uint64_t v1;

  return sub_C17B8(a1, v1);
}

uint64_t _s23ShelfKitCollectionViews30TranscriptSelectionContentTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C98AC + 4 * byte_2F4225[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C98E0 + 4 * byte_2F4220[v4]))();
}

uint64_t sub_C98E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C98E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC98F0);
  return result;
}

uint64_t sub_C98FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC9904);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C9908(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C9910(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError()
{
  return &type metadata for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError;
}

unint64_t sub_C9930()
{
  unint64_t result;

  result = qword_3D4F08;
  if (!qword_3D4F08)
  {
    result = swift_getWitnessTable(&unk_2F4598, &type metadata for EpisodeDetailTranscriptViewController.ViewModel.AlignmentError);
    atomic_store(result, (unint64_t *)&qword_3D4F08);
  }
  return result;
}

uint64_t sub_C99BC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  v1 = (char *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ImpressionIdScrollCoordinator_impressionID;
  v2 = type metadata accessor for ImpressionMetrics.ID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_C9A14()
{
  return type metadata accessor for ImpressionIdScrollCoordinator(0);
}

uint64_t type metadata accessor for ImpressionIdScrollCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_3D4F38;
  if (!qword_3D4F38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ImpressionIdScrollCoordinator);
  return result;
}

uint64_t sub_C9A58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for ImpressionMetrics.ID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_C9AD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ImpressionIdScrollCoordinator_impressionID;
  objc_msgSend(a1, "bounds");
  return DynamicImpressionsCalculator.changeImpressionableBounds(for:to:)(v2);
}

uint64_t sub_C9B14(int a1, id a2)
{
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(a2, "container");
  objc_msgSend(v3, "contentSize");
  swift_unknownObjectRelease(v3);
  return DynamicImpressionsCalculator.changeImpressionableBounds(for:to:)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ImpressionIdScrollCoordinator_impressionID);
}

id TranscriptTimestampView.__allocating_init(enclosingViewType:enclosingScrollView:)(char *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(a1, a2);
}

uint64_t TranscriptTimestampView.duration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  _BYTE v7[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration, v7, 1, 0);
  *v5 = a1;
  v5[1] = a2;
  return sub_CAF10(a1, a2);
}

id TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(char *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  char v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = *a1;
  v7 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration];
  v8 = v2;
  *(_QWORD *)v7 = static Duration.zero.getter();
  *((_QWORD *)v7 + 1) = v9;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_label;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions] = _swiftEmptyArrayStorage;
  v11 = swift_unknownObjectWeakInit(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_scrollView], 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalConstraint] = 0;
  swift_unknownObjectWeakAssign(v11, a2);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
  v13 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v13, "systemFontSize");
  v14 = objc_msgSend(v13, "monospacedDigitSystemFontOfSize:weight:");
  v15 = objc_msgSend(v12, "scaledFontForFont:", v14);

  v16 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 225.0, 50.0, 0.0, 0.0);
  v17 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants];
  *(_QWORD *)v17 = v15;
  v17[8] = v6;
  *((_OWORD *)v17 + 1) = xmmword_2F4660;
  *((_QWORD *)v17 + 4) = 0x4028000000000000;
  *((_QWORD *)v17 + 5) = v16;

  v18 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1);
  v26.receiver = v8;
  v26.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v26, "initWithEffect:", v18);

  v20 = v19;
  objc_msgSend(v20, "setClipsToBounds:", 1);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v20, "setAlpha:", 0.0);
  sub_CA03C();
  sub_CA458();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D36C8);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_2F03C0;
  *(_QWORD *)(v22 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v22 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v23 = v20;
  v24 = UIView.registerForTraitChanges<A>(_:handler:)(v22, sub_CB988, 0, ObjectType);
  swift_unknownObjectRelease(v24);
  swift_bridgeObjectRelease(v22);

  return v23;
}

void __swiftcall TranscriptTimestampView.Constants.init(viewType:)(ShelfKitCollectionViews::TranscriptTimestampView::Constants *__return_ptr retstr, ShelfKitCollectionViews::TranscriptTimestampView::Constants::ViewType viewType)
{
  ShelfKitCollectionViews::TranscriptTimestampView::Constants::ViewType v3;
  id v4;
  void *v5;
  id v6;
  objc_class *v7;
  objc_class *v8;

  v3 = *(_BYTE *)viewType;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleSubheadline);
  v5 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v5, "systemFontSize");
  v6 = objc_msgSend(v5, "monospacedDigitSystemFontOfSize:weight:");
  v7 = (objc_class *)objc_msgSend(v4, "scaledFontForFont:", v6);

  v8 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 225.0, 50.0, 0.0, 0.0);
  retstr->font.super.isa = v7;
  retstr->viewType = v3;
  *(_OWORD *)&retstr->size.height = xmmword_2F4660;
  retstr->spacing.horizontalPadding = 12.0;
  retstr->animation.timing.super.isa = v8;
}

void sub_CA03C()
{
  char *v0;
  void *v1;
  double *v2;
  int v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  NSString v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  Class isa;
  Swift::String v35;

  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_label];
  v2 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants];
  objc_msgSend(v1, "setFont:", *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants]);
  v3 = *((unsigned __int8 *)v2 + 8);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_secondaryLabelColor;
  if (!v3)
    v5 = &selRef_whiteColor;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(v1, "setTextColor:", v6);

  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v35._object = (void *)0xE000000000000000;
  v8._object = (void *)0x800000000030BBE0;
  v8._countAndFlagsBits = 0xD000000000000010;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v35)._object;

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v11, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v0, "contentView");
  objc_msgSend(v12, "addSubview:", v1);

  v13 = (void *)objc_opt_self(NSLayoutConstraint);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_2F0A20;
  v16 = objc_msgSend(v1, "leadingAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "leadingAnchor");

  v19 = v2[4];
  v20 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v18, v19);

  *(_QWORD *)(v15 + 32) = v20;
  v21 = objc_msgSend(v1, "trailingAnchor");
  v22 = objc_msgSend(v0, "contentView");
  v23 = objc_msgSend(v22, "trailingAnchor");

  v24 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v23, -v19);
  *(_QWORD *)(v15 + 40) = v24;
  v25 = objc_msgSend(v1, "topAnchor");
  v26 = objc_msgSend(v0, "contentView");
  v27 = objc_msgSend(v26, "topAnchor");

  v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v15 + 48) = v28;
  v29 = objc_msgSend(v1, "bottomAnchor");
  v30 = objc_msgSend(v0, "contentView");
  v31 = objc_msgSend(v30, "bottomAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v15 + 56) = v32;
  specialized Array._endMutation()(v33);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

}

void sub_CA458()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Class isa;
  double v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, __n128);
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86[3];
  uint64_t v87;
  uint64_t v88;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5030);
  v82 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  __chkstk_darwin(v6);
  v81 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5038);
  v85 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v84 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5040);
  v76 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5048);
  v77 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5050);
  v78 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_scrollView]);
  if (Strong)
  {
    v18 = (void *)Strong;
    v75 = v8;
    v19 = sub_CB1A8();
    v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator;
    v21 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator] = v19;

    v23 = *(void **)&v1[v20];
    if (v23)
    {
      v24 = v23;
      v74 = v24;
      objc_msgSend(v18, "addSubview:", v1);
      v73 = (id)objc_opt_self(NSLayoutConstraint);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v26 = swift_allocObject(v25, 48, 7);
      *(_OWORD *)(v26 + 16) = xmmword_2EFC90;
      v27 = objc_msgSend(v1, "trailingAnchor");
      v28 = objc_msgSend(v24, "leadingAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      *(_QWORD *)(v26 + 32) = v29;
      v30 = objc_msgSend(v1, "heightAnchor");
      v31 = objc_msgSend(v30, "constraintGreaterThanOrEqualToConstant:", *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants + 16]);

      *(_QWORD *)(v26 + 40) = v31;
      v86[0] = v26;
      specialized Array._endMutation()(v32);
      v33 = v86[0];
      sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v35 = swift_bridgeObjectRelease(v33).n128_u64[0];
      objc_msgSend(v73, "activateConstraints:", isa, v35);

      KeyPath = swift_getKeyPath(&unk_2F47A0);
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);
      swift_release(KeyPath);
      v37 = swift_allocObject(&unk_380308, 24, 7);
      swift_unknownObjectWeakInit(v37 + 16, v18);
      v72 = sub_10EDC(&qword_3D5058, &qword_3D5040, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      v38 = v79;
      Publisher.map<A>(_:)(sub_CBFD4, v37, v79, &type metadata for Bool, v72);
      v39 = swift_release(v37);
      v71 = *(void (**)(char *, uint64_t, __n128))(v76 + 8);
      v71(v11, v38, v39);
      v73 = (id)sub_10EDC(&qword_3D5060, &qword_3D5048, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
      v40 = v80;
      Publisher<>.removeDuplicates()(v80, v73, &protocol witness table for Bool);
      v76 = *(_QWORD *)(v77 + 8);
      ((void (*)(char *, uint64_t))v76)(v13, v40);
      v41 = swift_allocObject(&unk_380330, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16, v1);
      v42 = sub_10EDC(&qword_3D5068, &qword_3D5050, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      v43 = Publisher<>.sink(receiveValue:)(sub_CBFDC, v41, v14, v42);
      v44 = swift_release(v41);
      (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v16, v14, v44);
      v45 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions];
      swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions], v86, 33, 0);
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2ED0);
      v78 = v46;
      v77 = sub_10EDC((unint64_t *)&qword_3D8FE0, (uint64_t *)&unk_3D2ED0, (uint64_t)&protocol conformance descriptor for [A]);
      AnyCancellable.store<A>(in:)(v45, v46, v77);
      swift_endAccess(v86);
      swift_release(v43);
      v47 = swift_getKeyPath(&unk_2F47A0);
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v47, 5);
      swift_release(v47);
      v48 = swift_allocObject(&unk_380308, 24, 7);
      swift_unknownObjectWeakInit(v48 + 16, v18);
      Publisher.map<A>(_:)(sub_CBFE4, v48, v38, &type metadata for Bool, v72);
      v49 = swift_release(v48);
      v71(v11, v38, v49);
      v50 = swift_allocObject(&unk_380330, 24, 7);
      swift_unknownObjectWeakInit(v50 + 16, v1);
      v51 = swift_allocObject(&unk_380358, 32, 7);
      v52 = v74;
      *(_QWORD *)(v51 + 16) = v50;
      *(_QWORD *)(v51 + 24) = v52;
      v53 = v52;
      v54 = v81;
      Publisher.filter(_:)(sub_CBFF0, v51, v40, v73);
      v55 = swift_release(v51);
      ((void (*)(char *, uint64_t, __n128))v76)(v13, v40, v55);
      v56 = sub_10EDC(&qword_3D5070, &qword_3D5030, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
      v57 = v83;
      v58 = v84;
      Publisher<>.removeDuplicates()(v83, v56, &protocol witness table for Bool);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v57);
      v59 = swift_allocObject(&unk_380330, 24, 7);
      swift_unknownObjectWeakInit(v59 + 16, v1);
      v60 = swift_allocObject(&unk_380380, 32, 7);
      *(_QWORD *)(v60 + 16) = v59;
      *(_QWORD *)(v60 + 24) = v53;
      v61 = sub_10EDC(&qword_3D5078, &qword_3D5038, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      v62 = v53;
      v63 = v75;
      v64 = Publisher<>.sink(receiveValue:)(sub_CC028, v60, v75, v61);
      v65 = swift_release(v60);
      (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v58, v63, v65);
      swift_beginAccess(v45, v86, 33, 0);
      AnyCancellable.store<A>(in:)(v45, v78, v77);
      swift_endAccess(v86);

      swift_release(v64);
    }
    else
    {
      v66 = static Logger.transcripts.getter(v22);
      v67 = Logger.logObject.getter(v66);
      v68 = static os_log_type_t.error.getter(v67);
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc(12, -1);
        v70 = swift_slowAlloc(32, -1);
        v86[0] = v70;
        *(_DWORD *)v69 = 136315138;
        v87 = sub_37E78(0xD00000000000001ALL, 0x800000000030BBC0, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
        _os_log_impl(&dword_0, v67, v68, "%s Unable to find vertical scroll indicator.", v69, 0xCu);
        swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v70, -1, -1);
        swift_slowDealloc(v69, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

Swift::Void __swiftcall TranscriptTimestampView.layoutSubviews()()
{
  void *v0;
  id v1;
  objc_super v2;
  CGRect v3;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setCornerRadius:", CGRectGetHeight(v3) * 0.5);

}

uint64_t TranscriptTimestampView.duration.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_CAEB0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(*a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration);
  swift_beginAccess(v4, v6, 1, 0);
  *v4 = v2;
  v4[1] = v3;
  return sub_CAF10(v2, v3);
}

uint64_t sub_CAF10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];

  v5 = type metadata accessor for Duration.TimeFormatStyle(0);
  v28 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Duration.TimeFormatStyle.Pattern(0, v10);
  v26 = *(_QWORD *)(v13 - 8);
  v27 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v18 = a1;
  v19 = a2;
  LOBYTE(a2) = static Duration.< infix(_:_:)(v18, a2, 0x28093E61EE400000, 195, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v8);
  if ((a2 & 1) != 0)
    static Duration.TimeFormatStyle.Pattern.minuteSecond(padMinuteToLength:fractionalSecondsLength:roundFractionalSeconds:)(2, 0, v12);
  else
    static Duration.TimeFormatStyle.Pattern.hourMinuteSecond(padHourToLength:fractionalSecondsLength:roundFractionalSeconds:)(1, 0, v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_label);
  static FormatStyle<>.time(pattern:)(v16);
  v21 = sub_CC078();
  Duration.formatted<A>(_:)(v29, v7, v17, v19, v5, v21);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  v22 = v29[1];
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v27);
}

void (*TranscriptTimestampView.duration.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_CB168;
}

void sub_CB168(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t *v4;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (uint64_t *)(v3[3] + v3[4]);
    sub_CAF10(*v4, v4[1]);
  }
  free(v3);
}

void *sub_CB1A8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  uint64_t v13;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v3);
  if (!v4)
  {
LABEL_22:
    swift_bridgeObjectRelease_n(v3, 2);
    return 0;
  }
  while (1)
  {
    while (1)
    {
      if (__OFSUB__(v4--, 1))
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if ((v3 & 0xC000000000000001) != 0)
        break;
      if ((v4 & 0x8000000000000000) != 0)
        goto LABEL_16;
      if (v4 < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8)))
      {
        v6 = *(id *)(v3 + 32 + 8 * v4);
        goto LABEL_11;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      if (v3 < 0)
        v13 = v3;
      else
        v13 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v4 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (!v4)
        goto LABEL_22;
    }
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
LABEL_11:
    v7 = v6;
    v8 = objc_opt_self(_UIScrollViewScrollIndicator);
    if (swift_dynamicCastObjCClass(v7, v8))
    {
      objc_msgSend(v7, "bounds");
      v10 = v9;
      objc_msgSend(v7, "bounds");
      if (v10 < v11)
        break;
    }

    if (!v4)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease_n(v3, 2);
  return v7;
}

void sub_CB32C(uint64_t a1@<X1>, unsigned __int8 *a2@<X8>)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  unsigned __int8 v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (objc_msgSend(Strong, "respondsToSelector:", "_isScrubbing"))
      v6 = objc_msgSend(v5, "_isScrubbing");
    else
      v6 = 0;

  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

void sub_CB3C0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_CB418(v2);

  }
}

void sub_CB418(char a1)
{
  char *v1;
  id v3;
  double v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants + 40];
  objc_msgSend(v3, "settlingDuration");
  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v3, v4);
  v6 = swift_allocObject(&unk_3803A8, 25, 7);
  *(_QWORD *)(v6 + 16) = v1;
  *(_BYTE *)(v6 + 24) = a1;
  v10[4] = sub_CC054;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_24360;
  v10[3] = &block_descriptor_10;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v1;
  objc_msgSend(v5, "addAnimations:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  objc_msgSend(v5, "startAnimation");

}

void sub_CB544(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  double v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  double v8;
  double v9;
  BOOL v10;
  _BYTE v11[24];

  v4 = *(double *)(a1 + 8);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "contentInset");
    v9 = v8;

    v10 = v4 <= v9;
  }
  else
  {
    v10 = 0;
  }
  *a3 = v10;
}

uint64_t sub_CB5C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = Strong;
  v7 = objc_msgSend(Strong, "superview");
  v8 = objc_msgSend(a3, "superview");
  v9 = (uint64_t)v8;
  if (v7)
  {

    if (v9)
    {

      v9 = v7 == (id)v9;
    }
  }
  else if (v8)
  {

    v9 = 0;
  }
  else
  {
    v9 = 1;
  }

  return v9;
}

void sub_CB688(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  int v4;
  uint64_t v5;
  char *Strong;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  char v16[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    if (v4)
    {
      v8 = objc_msgSend(Strong, "topAnchor");
      v9 = objc_msgSend(a3, "topAnchor");
    }
    else
    {
      v8 = objc_msgSend(Strong, "centerYAnchor");
      v9 = objc_msgSend(a3, "centerYAnchor");
    }
    v10 = v9;
    v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);

    v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalConstraint;
    v13 = *(void **)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalConstraint];
    *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalConstraint] = v11;
    v14 = v11;
    if (v13)
      objc_msgSend(v13, "setActive:", 0);
    v15 = *(void **)&v7[v12];
    if (v15)
      objc_msgSend(v15, "setActive:", 1);

  }
}

id sub_CB7C4(char *a1, char a2)
{
  double v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  CGAffineTransform v9;

  v4 = 0.0;
  if ((a2 & 1) != 0)
    v4 = 1.0;
  objc_msgSend(a1, "setAlpha:", v4);
  if ((a2 & 1) != 0)
  {
    CGAffineTransformMakeTranslation(&v9, -*(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_constants + 24], 0.0);
    v6 = *(_OWORD *)&v9.a;
    v5 = *(_OWORD *)&v9.c;
    v7 = *(_OWORD *)&v9.tx;
  }
  else
  {
    v5 = xmmword_2F4670;
    v6 = xmmword_2F4680;
    v7 = 0uLL;
  }
  *(_OWORD *)&v9.a = v6;
  *(_OWORD *)&v9.c = v5;
  *(_OWORD *)&v9.tx = v7;
  return objc_msgSend(a1, "setTransform:", &v9);
}

id TranscriptTimestampView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithEffect:", a1);

  return v3;
}

void TranscriptTimestampView.init(effect:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.TranscriptTimestampView", 47, "init(effect:)", 13, 0);
  __break(1u);
}

unint64_t sub_CB990()
{
  unint64_t result;

  result = qword_3D5000;
  if (!qword_3D5000)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TranscriptTimestampView.Constants.ViewType, &type metadata for TranscriptTimestampView.Constants.ViewType);
    atomic_store(result, (unint64_t *)&qword_3D5000);
  }
  return result;
}

__n128 sub_CB9D4@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;
  _BYTE v5[24];

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t type metadata accessor for TranscriptTimestampView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23TranscriptTimestampView);
}

uint64_t method lookup function for TranscriptTimestampView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TranscriptTimestampView);
}

uint64_t dispatch thunk of TranscriptTimestampView.__allocating_init(enclosingViewType:enclosingScrollView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void destroy for TranscriptTimestampView.Constants(id *a1)
{

}

uint64_t initializeWithCopy for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptTimestampView.Constants(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptTimestampView.Constants(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants()
{
  return &type metadata for TranscriptTimestampView.Constants;
}

uint64_t storeEnumTagSinglePayload for TranscriptTimestampView.Constants.ViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CBC94 + 4 * byte_2F4695[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CBCC8 + 4 * byte_2F4690[v4]))();
}

uint64_t sub_CBCC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CBCD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCBCD8);
  return result;
}

uint64_t sub_CBCE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCBCECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CBCF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CBCF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.ViewType()
{
  return &type metadata for TranscriptTimestampView.Constants.ViewType;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Animation()
{
  return &type metadata for TranscriptTimestampView.Constants.Animation;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Spacing()
{
  return &type metadata for TranscriptTimestampView.Constants.Spacing;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Size()
{
  return &type metadata for TranscriptTimestampView.Constants.Size;
}

void sub_CBD44(char *a1)
{
  void *v2;
  id v3;
  uint64_t Strong;
  void *v5;
  id v6;
  char v7;
  id v8;
  char *v9;
  uint64_t v10;
  char v11[24];

  v2 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator];
  if (v2)
    v3 = objc_msgSend(v2, "superview");
  else
    v3 = 0;
  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_scrollView]);
  v5 = (void *)Strong;
  if (v3)
  {
    if (Strong)
    {
      sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) != 0)
        return;
      goto LABEL_12;
    }
    v5 = v3;
  }
  else if (!Strong)
  {
    return;
  }

LABEL_12:
  v8 = objc_msgSend(a1, "superview");

  if (v8)
  {
    v9 = &a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions];
    swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions], v11, 1, 0);
    v10 = *(_QWORD *)v9;
    *(_QWORD *)v9 = _swiftEmptyArrayStorage;
    objc_msgSend(a1, "removeFromSuperview", swift_bridgeObjectRelease(v10).n128_f64[0]);
    sub_CA458();
  }
}

void sub_CBE88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_duration];
  *(_QWORD *)v1 = static Duration.zero.getter();
  *((_QWORD *)v1 + 1) = v2;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_label;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_subscriptions] = &_swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_scrollView], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalScrollIndicator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23TranscriptTimestampView_verticalConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/TranscriptTimestampView.swift", 53, 2, 47, 0);
  __break(1u);
}

const char *keypath_get_selector_contentOffset()
{
  return "contentOffset";
}

id sub_CBF6C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentOffset");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_CBF9C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentOffset:", *a1, a1[1]);
}

uint64_t sub_CBFB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_CBFD4(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  sub_CB32C(v1, a1);
}

void sub_CBFDC(char *a1)
{
  uint64_t v1;

  sub_CB3C0(a1, v1);
}

void sub_CBFE4(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  sub_CB544(a1, v2, a2);
}

uint64_t sub_CBFF0(uint64_t a1)
{
  uint64_t v1;

  return sub_CB5C4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_9Tm_0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_CC028(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_CB688(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_CC030()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_CC054()
{
  uint64_t v0;

  return sub_CB7C4(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_CC078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5080;
  if (!qword_3D5080)
  {
    v1 = type metadata accessor for Duration.TimeFormatStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Duration.TimeFormatStyle, v1);
    atomic_store(result, (unint64_t *)&qword_3D5080);
  }
  return result;
}

uint64_t View.hidden(_:)(char a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  a4.n128_u64[0] = 1.0;
  if ((a1 & 1) != 0)
    a4.n128_f64[0] = 0.0;
  return View.opacity(_:)(a2, a3, a4);
}

uint64_t sub_CC0E0(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _OpacityEffect);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

uint64_t sub_CC134()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:forControlEvents:", v0, "handleAction:", 0x2000);

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_CC1EC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  _BYTE v13[24];

  v3 = v2;
  if (a1)
  {
    v6 = type metadata accessor for UIButtonActionHandler();
    v7 = (_QWORD *)swift_allocObject(v6, 40, 7);
    v8 = swift_unknownObjectWeakInit(v7 + 2, 0);
    v9 = swift_unknownObjectWeakAssign(v8, v3);
    v7[3] = a1;
    v7[4] = a2;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v11 = Strong;
      objc_msgSend(Strong, "addTarget:action:forControlEvents:", v7, "handleAction:", 0x2000, swift_retain(a2).n128_f64[0]);

    }
    else
    {
      swift_retain(a2);
    }
  }
  else
  {
    v7 = 0;
  }
  swift_beginAccess(&unk_3D5088, v13, 32, 0);
  swift_retain(v7);
  objc_setAssociatedObject(v3, &unk_3D5088, v7, (char *)&dword_0 + 1);
  swift_endAccess(v13);
  sub_1D618(a1, a2);
  return swift_release_n(v7, 2);
}

uint64_t type metadata accessor for UIButtonActionHandler()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViewsP33_16A1E32B0455FC508DCF935CFA1B287021UIButtonActionHandler);
}

void sub_CC328()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  double v30;
  NSString v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  NSString v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  CAMediaTimingFunctionName v54;
  void *v55;
  _OWORD v56[2];
  _QWORD v57[3];
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t v62;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  if (v2)
  {
    v4 = *((_QWORD *)v1 + 2);
    v3 = *((_QWORD *)v1 + 3);
    v5 = *((_QWORD *)v1 + 1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51A0);
    v7 = swift_allocObject(v6, 224, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F4200;
    *(_QWORD *)(v7 + 32) = 0x6F43776F64616873;
    *(_QWORD *)(v7 + 40) = 0xEB00000000726F6CLL;
    v8 = v2;
    v9 = objc_msgSend(v8, "CGColor");
    type metadata accessor for CGColor(0);
    *(_QWORD *)(v7 + 48) = v9;
    *(_QWORD *)(v7 + 72) = v10;
    strcpy((char *)(v7 + 80), "shadowRadius");
    *(_BYTE *)(v7 + 93) = 0;
    *(_WORD *)(v7 + 94) = -5120;
    *(_QWORD *)(v7 + 96) = v5;
    *(_QWORD *)(v7 + 120) = &type metadata for CGFloat;
    strcpy((char *)(v7 + 128), "shadowOffset");
    *(_BYTE *)(v7 + 141) = 0;
    *(_WORD *)(v7 + 142) = -5120;
    type metadata accessor for CGSize(0);
    *(_QWORD *)(v7 + 144) = v4;
    *(_QWORD *)(v7 + 152) = v3;
    *(_QWORD *)(v7 + 168) = v11;
    strcpy((char *)(v7 + 176), "shadowOpacity");
    *(_QWORD *)(v7 + 216) = &type metadata for Double;
    *(_WORD *)(v7 + 190) = -4864;
    *(_QWORD *)(v7 + 192) = 0x3FF0000000000000;

    v12 = 4;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51A0);
    v7 = swift_allocObject(v13, 80, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F03C0;
    strcpy((char *)(v7 + 32), "shadowOpacity");
    *(_WORD *)(v7 + 46) = -4864;
    *(_QWORD *)(v7 + 72) = &type metadata for Double;
    *(_QWORD *)(v7 + 48) = 0;
    v12 = 1;
  }
  v14 = &v62;
  v15 = (void *)objc_opt_self(UIView);
  v16 = 0;
  v54 = kCAMediaTimingFunctionEaseInEaseOut;
  v17 = 48 * v12;
  v51 = v7;
  v55 = v15;
  v53 = 48 * v12;
  do
  {
    sub_CCC4C(v7 + v16 + 32, (uint64_t)v61);
    v29 = v61[1];
    sub_1D65C(v14, &v59);
    objc_msgSend(v15, "inheritedAnimationDuration");
    if (v30 != 0.0)
    {
      swift_bridgeObjectRetain(v29);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v32 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v31);

      v33 = v32;
      objc_msgSend(v15, "inheritedAnimationDuration");
      objc_msgSend(v33, "setDuration:");

      objc_msgSend(v33, "setBeginTime:", 0.0);
      v34 = (void *)objc_opt_self(CAMediaTimingFunction);
      v35 = v33;
      v36 = objc_msgSend(v34, "functionWithName:", v54);
      objc_msgSend(v35, "setTimingFunction:", v36);

      v37 = objc_msgSend(v0, "layer");
      v38 = objc_msgSend(v37, "presentationLayer");

      if (!v38)
        goto LABEL_5;
      v39 = String._bridgeToObjectiveC()();
      v40 = objc_msgSend(v38, "valueForKey:", v39);

      if (v40)
      {
        _bridgeAnyObjectToAny(_:)(v56, v40, v41);
        swift_unknownObjectRelease(v40);
      }
      else
      {
        memset(v56, 0, sizeof(v56));
      }
      sub_56AF8((uint64_t)v56, (uint64_t)v57);
      v42 = v58;
      if (v58)
      {
        v43 = __swift_project_boxed_opaque_existential_1(v57, v58);
        v52 = &v50;
        v44 = v14;
        v45 = v0;
        v46 = *(_QWORD *)(v42 - 8);
        __chkstk_darwin(v43);
        v48 = (char *)&v50 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v46 + 16))(v48);
        v18 = _bridgeAnythingToObjectiveC<A>(_:)(v48, v42);
        v49 = *(void (**)(char *, uint64_t))(v46 + 8);
        v0 = v45;
        v14 = v44;
        v49(v48, v42);
        v7 = v51;
        __swift_destroy_boxed_opaque_existential_0(v57);
      }
      else
      {
LABEL_5:
        v18 = 0;
      }
      objc_msgSend(v35, "setFromValue:", v18);
      swift_unknownObjectRelease(v18);
      v19 = v60;
      v20 = __swift_project_boxed_opaque_existential_1(&v59, v60);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v19);
      objc_msgSend(v35, "setToValue:", v21);
      v22 = objc_msgSend(v0, "layer", swift_unknownObjectRelease(v21).n128_f64[0]);
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "addAnimation:forKey:", v35, v23);

      v15 = v55;
      v17 = v53;
    }
    v24 = objc_msgSend(v0, "layer");
    v25 = v60;
    v26 = __swift_project_boxed_opaque_existential_1(&v59, v60);
    v27 = _bridgeAnythingToObjectiveC<A>(_:)(v26, v25);
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setValue:forKey:", v27, v28, swift_bridgeObjectRelease(v29).n128_f64[0]);

    swift_unknownObjectRelease(v27);
    __swift_destroy_boxed_opaque_existential_0(&v59);
    v16 += 48;
  }
  while (v17 != v16);
  swift_bridgeObjectRelease(v7);
}

void sub_CC904()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  id v11;
  char v12;
  id v13;
  id v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ShadowView();
  objc_msgSendSuper2(&v16, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v0, "layer");
  v10 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerRadius];
  if (v10 < COERCE_DOUBLE(1))
  {
    v11 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRect:", v2, v4, v6, v8);
LABEL_7:
    v14 = v11;
    goto LABEL_8;
  }
  v12 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerStyle];
  v13 = (id)objc_opt_self(UIBezierPath);
  if ((v12 & 1) == 0)
  {
LABEL_6:
    v11 = objc_msgSend(v13, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", -1, v2, v4, v6, v8, v10, v10);
    goto LABEL_7;
  }
  v13 = objc_msgSend(v13, "_bezierPathWithArcRoundedRect:cornerRadius:", v2, v4, v6, v8, v10);
  v14 = v13;
  if (!v13)
  {
    __break(1u);
    goto LABEL_6;
  }
LABEL_8:
  v15 = objc_msgSend(v14, "CGPath");

  objc_msgSend(v9, "setShadowPath:", v15);
}

id sub_CCBEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShadowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShadowView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews10ShadowView);
}

uint64_t sub_CCC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double static ShelfBackgroundView.register(layout:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  _QWORD *v6;
  uint64_t v7;
  NSString v8;
  double result;

  v3 = sub_CD628();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v1);
    v6 = (_QWORD *)(v3 + 40);
    do
    {
      v7 = *v6;
      swift_bridgeObjectRetain(*v6);
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "registerClass:forDecorationViewOfKind:", ObjCClassFromMetadata, v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

      v6 += 2;
      --v4;
    }
    while (v4);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

id static ShelfBackgroundView.layout(for:)(unint64_t a1)
{
  return sub_CD83C(a1 | ((HIDWORD(a1) & 1) << 32));
}

void sub_CCD50()
{
  char *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  id v4;
  void *v5;
  char *v6;
  char v7;
  int v8;
  char v9;
  char *v10;
  unint64_t v11;
  unsigned __int8 v12;
  _BYTE *v13;
  char v14[24];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill;
  v2 = *(_BYTE **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill];
  if (v2)
    goto LABEL_3;
  v3 = type metadata accessor for ShelfBackgroundFillView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:");
  objc_msgSend(v4, "setAutoresizingMask:", 18);
  objc_msgSend(v0, "addSubview:", v4);
  v5 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v4;

  v2 = *(_BYTE **)&v0[v1];
  if (v2)
  {
LABEL_3:
    v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
    swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background], v14, 0, 0);
    v7 = v6[4];
    v8 = *(_DWORD *)v6;
    v9 = v6[5];
    v10 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
    v11 = *(unsigned int *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
    v12 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
    *(_DWORD *)v10 = v8;
    v10[4] = v7;
    v10[5] = v9;
    v13 = v2;
    sub_CDF48(v11 | ((unint64_t)v12 << 40));

  }
}

unint64_t sub_CCE78()
{
  uint64_t v0;
  unsigned int *v1;
  _BYTE v3[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background, v3, 0, 0);
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

void sub_CCED4(unint64_t a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  unint64_t v11;
  unsigned __int8 v12;
  _BYTE *v13;
  char v14[24];

  v2 = a1;
  v3 = (a1 >> 40) & 1;
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background], v14, 1, 0);
  v4[4] = BYTE4(v2);
  *(_DWORD *)v4 = v2;
  v4[5] = v3;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill;
  v6 = *(_BYTE **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill];
  if (!v6)
  {
    v7 = type metadata accessor for ShelfBackgroundFillView();
    v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
    objc_msgSend(v1, "bounds");
    objc_msgSend(v8, "setFrame:");
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    objc_msgSend(v1, "addSubview:", v8);
    v9 = *(void **)&v1[v5];
    *(_QWORD *)&v1[v5] = v8;

    v6 = *(_BYTE **)&v1[v5];
    if (!v6)
      return;
    v2 = *(unsigned int *)v4 | ((unint64_t)v4[4] << 32);
    LOBYTE(v3) = v4[5];
  }
  v10 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
  v11 = *(unsigned int *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
  v12 = v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
  *(_DWORD *)v10 = v2;
  v10[4] = BYTE4(v2);
  v10[5] = v3;
  v13 = v6;
  sub_CDF48(v11 | ((unint64_t)v12 << 40));

}

void (*sub_CD024(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_CD07C;
}

void sub_CD07C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  char v11;
  int v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 v15;
  _BYTE *v16;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[3];
    v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill;
    v6 = *(_BYTE **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill];
    if (v6)
    {
LABEL_5:
      v10 = &v4[v3[4]];
      v11 = v10[4];
      v12 = *(_DWORD *)v10;
      LOBYTE(v10) = v10[5];
      v13 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
      v14 = *(unsigned int *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
      v15 = v6[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
      *(_DWORD *)v13 = v12;
      v13[4] = v11;
      v13[5] = (char)v10;
      v16 = v6;
      sub_CDF48(v14 | ((unint64_t)v15 << 40));

      goto LABEL_6;
    }
    v7 = type metadata accessor for ShelfBackgroundFillView();
    v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
    objc_msgSend(v4, "bounds");
    objc_msgSend(v8, "setFrame:");
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    objc_msgSend(v4, "addSubview:", v8);
    v9 = *(void **)&v4[v5];
    *(_QWORD *)&v4[v5] = v8;

    v6 = *(_BYTE **)&v4[v5];
    if (v6)
    {
      v4 = (char *)v3[3];
      goto LABEL_5;
    }
  }
LABEL_6:
  free(v3);
}

void sub_CD1AC(void *a1)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  uint64_t v15;
  id v16;
  void *v17;
  char *v18;
  unint64_t v19;
  unsigned __int8 v20;
  _BYTE *v21;
  char v22[32];
  objc_super v23;

  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for ShelfBackgroundView();
  objc_msgSendSuper2(&v23, "applyLayoutAttributes:", a1);
  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setZPosition:", -1.0);

  v4 = objc_msgSend(a1, "representedElementKind");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = sub_CDA78(v6, v8);
  if ((v9 & 0x10000000000) == 0)
  {
    v10 = v9 & 0xFFFFFFFFFFLL;
    if ((ModernShelf.Background.isHexColorFaded.getter(v9 | ((((v9 & 0xFFFFFFFFFFLL) >> 32) & 1) << 32)) & 1) == 0)
    {
      v11 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
      swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background], v22, 1, 0);
      v11[4] = BYTE4(v10);
      *(_DWORD *)v11 = v10;
      v11[5] = 0;
      v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill;
      v13 = *(_BYTE **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill];
      if (v13)
      {
        v14 = 0;
      }
      else
      {
        v15 = type metadata accessor for ShelfBackgroundFillView();
        v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
        objc_msgSend(v1, "bounds");
        objc_msgSend(v16, "setFrame:");
        objc_msgSend(v16, "setAutoresizingMask:", 18);
        objc_msgSend(v1, "addSubview:", v16);
        v17 = *(void **)&v1[v12];
        *(_QWORD *)&v1[v12] = v16;

        v13 = *(_BYTE **)&v1[v12];
        if (!v13)
          return;
        v10 = *(unsigned int *)v11 | ((unint64_t)v11[4] << 32);
        v14 = v11[5];
      }
      v18 = &v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
      v19 = *(unsigned int *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
      v20 = v13[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
      *(_DWORD *)v18 = v10;
      v18[4] = BYTE4(v10);
      v18[5] = v14;
      v21 = v13;
      sub_CDF48(v19 | ((unint64_t)v20 << 40));

    }
  }
}

id ShelfBackgroundView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_super v11;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
  *(_DWORD *)v9 = 0;
  *((_WORD *)v9 + 2) = 256;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for ShelfBackgroundView();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id ShelfBackgroundView.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill] = 0;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
  *(_DWORD *)v3 = 0;
  *((_WORD *)v3 + 2) = 256;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ShelfBackgroundView();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id ShelfBackgroundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_CD628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51F0);
  v1 = swift_allocObject(v0, 112, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2F48B0;
  v2 = type metadata accessor for ShelfBackgroundView();
  v31 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51E8);
  v4 = String.init<A>(describing:)(&v31, v3);
  v6 = v5;
  v31 = v4;
  v32 = v5;
  swift_bridgeObjectRetain(v5);
  v7._countAndFlagsBits = 0x6D6574737973;
  v7._object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8 = v32;
  *(_QWORD *)(v1 + 32) = v31;
  *(_QWORD *)(v1 + 40) = v8;
  v31 = v2;
  v9 = String.init<A>(describing:)(&v31, v3);
  v11 = v10;
  v31 = v9;
  v32 = v10;
  swift_bridgeObjectRetain(v10);
  v12._countAndFlagsBits = 0x7261646E6F636573;
  v12._object = (void *)0xE900000000000079;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13 = v32;
  *(_QWORD *)(v1 + 48) = v31;
  *(_QWORD *)(v1 + 56) = v13;
  v31 = v2;
  v14 = String.init<A>(describing:)(&v31, v3);
  v16 = v15;
  v31 = v14;
  v32 = v15;
  swift_bridgeObjectRetain(v15);
  v17._countAndFlagsBits = 0x7972616974726574;
  v17._object = (void *)0xE800000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18 = v32;
  *(_QWORD *)(v1 + 64) = v31;
  *(_QWORD *)(v1 + 72) = v18;
  v31 = v2;
  v19 = String.init<A>(describing:)(&v31, v3);
  v21 = v20;
  v31 = v19;
  v32 = v20;
  swift_bridgeObjectRetain(v20);
  v22._object = (void *)0x800000000030BD10;
  v22._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v22);
  v23 = swift_bridgeObjectRelease(v21);
  v24 = v32;
  *(_QWORD *)(v1 + 80) = v31;
  *(_QWORD *)(v1 + 88) = v24;
  HexColor.init(red:green:blue:alpha:)(0, 0, 0, 255, v23);
  v31 = v2;
  v25 = String.init<A>(describing:)(&v31, v3);
  v27 = v26;
  v31 = v25;
  v32 = v26;
  swift_bridgeObjectRetain(v26);
  v28._countAndFlagsBits = 0x726F6C6F43786568;
  v28._object = (void *)0xED00006465646146;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v27);
  v29 = v32;
  *(_QWORD *)(v1 + 96) = v31;
  *(_QWORD *)(v1 + 104) = v29;
  return v1;
}

id sub_CD83C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v11;
  uint64_t v12;

  if ((a1 & 0x100000000) != 0)
    __asm { BR              X10 }
  v1 = (void *)objc_opt_self(NSCollectionLayoutDecorationItem);
  v11 = type metadata accessor for ShelfBackgroundView();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51E8);
  v3 = String.init<A>(describing:)(&v11, v2);
  v5 = v4;
  v11 = v3;
  v12 = v4;
  swift_bridgeObjectRetain(v4);
  v6._countAndFlagsBits = 0x726F6C6F43786568;
  v6._object = (void *)0xED00006465646146;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(0xED00006465646146);
  swift_bridgeObjectRelease(v5);
  v7 = v12;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v1, "backgroundDecorationItemWithElementKind:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  return v9;
}

uint64_t type metadata accessor for ShelfBackgroundView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews19ShelfBackgroundView);
}

unint64_t sub_CD9DC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v5, a2, a3);
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return String.subscript.getter();
  }
  __break(1u);
  return result;
}

unint64_t sub_CDA78(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v28;

  if (!a2)
    goto LABEL_27;
  v28 = type metadata accessor for ShelfBackgroundView();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D51E8);
  v5 = String.init<A>(describing:)(&v28, v4);
  v7 = v6;
  v8 = String.count.getter(v5, v6);
  swift_bridgeObjectRelease(v7);
  v9 = sub_CD9DC(v8, a1, a2);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = swift_bridgeObjectRelease(a2);
  v17 = static String._fromSubstring(_:)(v9, v11, v13, v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease(v15);
  if (v17 == 0x6D6574737973 && v19 == 0xE600000000000000)
  {
    v21 = 0xE600000000000000;
    goto LABEL_9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D6574737973, 0xE600000000000000, v17, v19, 0) & 1) == 0)
  {
    if (v17 == 0x7261646E6F636573 && v19 == 0xE900000000000079)
    {
      v24 = 0xE900000000000079;
LABEL_15:
      swift_bridgeObjectRelease(v24);
      v22 = 0;
      v23 = 0x100000001;
      return v23 | ((unint64_t)v22 << 40);
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7261646E6F636573, 0xE900000000000079, v17, v19, 0) & 1) != 0)
    {
      v24 = v19;
      goto LABEL_15;
    }
    v23 = 0x100000002;
    if (v17 == 0x7972616974726574 && v19 == 0xE800000000000000)
    {
      v25 = 0xE800000000000000;
LABEL_21:
      swift_bridgeObjectRelease(v25);
      v22 = 0;
      return v23 | ((unint64_t)v22 << 40);
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7972616974726574, 0xE800000000000000, v17, v19, 0) & 1) != 0)
    {
      v25 = v19;
      goto LABEL_21;
    }
    if (v17 == 0xD000000000000010 && v19 == 0x800000000030BD10)
    {
      swift_bridgeObjectRelease(0x800000000030BD10);
LABEL_26:
      v22 = 0;
      v23 = 0x100000003;
      return v23 | ((unint64_t)v22 << 40);
    }
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000000030BD10, v17, v19, 0);
    swift_bridgeObjectRelease(v19);
    if ((v26 & 1) != 0)
      goto LABEL_26;
LABEL_27:
    v23 = 0;
    v22 = 1;
    return v23 | ((unint64_t)v22 << 40);
  }
  v21 = v19;
LABEL_9:
  swift_bridgeObjectRelease(v21);
  v22 = 0;
  v23 = 0x100000000;
  return v23 | ((unint64_t)v22 << 40);
}

uint64_t sub_CDCF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  _BYTE v7[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background;
  result = swift_beginAccess(v3, v7, 0, 0);
  v5 = *(_DWORD *)v3;
  v6 = *(_BYTE *)(v3 + 5);
  *(_BYTE *)(a2 + 4) = *(_BYTE *)(v3 + 4);
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 5) = v6;
  return result;
}

void sub_CDD50(int *a1, _QWORD *a2)
{
  int v2;
  char v3;
  char v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 4);
  v4 = *((_BYTE *)a1 + 5);
  v5 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background;
  swift_beginAccess(v5, v6, 1, 0);
  *(_BYTE *)(v5 + 4) = v3;
  *(_DWORD *)v5 = v2;
  *(_BYTE *)(v5 + 5) = v4;
  sub_CCD50();
}

uint64_t method lookup function for ShelfBackgroundView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShelfBackgroundView);
}

uint64_t dispatch thunk of ShelfBackgroundView.background.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])() & 0xFFFFFFFFFFLL;
}

uint64_t dispatch thunk of ShelfBackgroundView.background.setter(unint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(unint64_t))&stru_68.segname[(swift_isaMask & *v1) + 8])(a1 & 0xFFFFFFFFFFLL | (((a1 >> 40) & 1) << 40));
}

uint64_t dispatch thunk of ShelfBackgroundView.background.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

id sub_CDEF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarHeaderCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SidebarHeaderCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17SidebarHeaderCell);
}

void sub_CDF48(unint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSString *v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
  v4 = *(unsigned int *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
  if ((a1 & 0x10000000000) != 0)
  {
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5] & 1) != 0)
      return;
  }
  else
  {
    if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5] & 1) != 0)
      goto LABEL_12;
    if ((static ModernShelf.Background.== infix(_:_:)(a1 | ((HIDWORD(a1) & 1) << 32), *(unsigned int *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((HIDWORD(v4) & 1) << 32)) & 1) != 0)return;
    if ((v3[5] & 1) != 0)
      goto LABEL_12;
    v4 = *(unsigned int *)v3 | ((unint64_t)v3[4] << 32);
  }
  if ((v4 & 0x100000000) != 0 && v4 >= 3)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_2EFC90;
    v7 = (void *)objc_opt_self(UIColor);
    v8 = objc_msgSend(v7, "secondarySystemBackgroundColor");
    v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.0);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v7, "secondarySystemBackgroundColor");
    *(_QWORD *)(v6 + 40) = v10;
    *(_QWORD *)&v70 = v6;
    specialized Array._endMutation()(v10);
    v11 = v6;
    v67 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradientView;
    v12 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradientView];
    v13 = kCAGradientLayerAxial;
    if (v12)
      objc_msgSend(v12, "removeFromSuperview");
    v39 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient];
    v40 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient];
    v41 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 8];
    v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 16];
    v43 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 24];
    v44 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 32];
    v45 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 40];
    v46 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 48];
    v47 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 56];
    *v39 = v11;
    v39[1] = 0;
    v39[2] = 0;
    *(_OWORD *)(v39 + 3) = xmmword_2F1D40;
    *(_OWORD *)(v39 + 5) = xmmword_2F1D50;
    v39[7] = (uint64_t)kCAGradientLayerAxial;
    sub_B7AE8(v40, v41, v42, v43, v44, v45, v46, v47);
    v48 = *v39;
    if (*v39)
    {
      v49 = (void *)v39[7];
      v66 = v39[6];
      v51 = v39[4];
      v50 = v39[5];
      v53 = v39[2];
      v52 = v39[3];
      v63 = v39[1];
      v54 = type metadata accessor for GradientView();
      v55 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v54));
      swift_bridgeObjectRetain(v53);
      v64 = v49;
      swift_bridgeObjectRetain(v48);
      v56 = objc_msgSend(v55, "init", swift_bridgeObjectRetain(v63).n128_f64[0]);
      *(_QWORD *)&v70 = v48;
      *((_QWORD *)&v70 + 1) = v63;
      v71 = v53;
      v72 = v52;
      v73 = v51;
      v74 = v50;
      v75 = v66;
      v76 = v49;
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRetain(v53);
      v57 = v64;
      sub_ECA74(&v70);
      v58 = v56;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v58, "setFrame:");

      objc_msgSend(v58, "setAutoresizingMask:", 18);
      objc_msgSend(v2, "addSubview:", v58);
      v59 = *(void **)&v67[(_QWORD)v2];
      *(_QWORD *)&v67[(_QWORD)v2] = v58;

      sub_B7AE8(v48, v63, v53, v52, v51, v50, v66, v49);
    }
    objc_msgSend(v2, "setBackgroundColor:", 0);
    return;
  }
LABEL_12:
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradientView;
  v15 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradientView];
  if (v15)
    objc_msgSend(v15, "removeFromSuperview");
  v16 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient];
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient];
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 8];
  v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 16];
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 24];
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 32];
  v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 40];
  v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 48];
  v24 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_gradient + 56];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  sub_B7AE8(v17, v18, v19, v20, v21, v22, v23, v24);
  v25 = *v16;
  if (*v16)
  {
    v26 = (void *)v16[7];
    v65 = v14;
    v68 = v2;
    v27 = v16[4];
    v28 = v16[5];
    v30 = v16[2];
    v29 = v16[3];
    v61 = v16[6];
    v62 = v29;
    v31 = v16[1];
    v32 = type metadata accessor for GradientView();
    v33 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v32));
    swift_bridgeObjectRetain(v30);
    v60 = v26;
    swift_bridgeObjectRetain(v25);
    v34 = objc_msgSend(v33, "init", swift_bridgeObjectRetain(v31).n128_f64[0]);
    *(_QWORD *)&v70 = v25;
    *((_QWORD *)&v70 + 1) = v31;
    v71 = v30;
    v72 = v29;
    v2 = v68;
    v73 = v27;
    v74 = v28;
    v75 = v61;
    v76 = v26;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v30);
    v35 = v60;
    sub_ECA74(&v70);
    v36 = v34;
    objc_msgSend(v68, "bounds");
    objc_msgSend(v36, "setFrame:");

    objc_msgSend(v36, "setAutoresizingMask:", 18);
    objc_msgSend(v68, "addSubview:", v36);
    v37 = *(void **)&v68[v65];
    *(_QWORD *)&v68[v65] = v36;

    sub_B7AE8(v25, v31, v30, v62, v27, v28, v61, v26);
  }
  if ((v3[5] & 1) != 0)
    v38 = 0;
  else
    v38 = ModernShelf.Background.color.getter(*(unsigned int *)v3 | ((unint64_t)(v3[4] & 1) << 32));
  v69 = (id)v38;
  objc_msgSend(v2, "setBackgroundColor:", v60);

}

id sub_CE590()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfBackgroundFillView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfBackgroundFillView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23ShelfBackgroundFillView);
}

void sub_CE628(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v16 = a1;
  else
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v2)
    goto LABEL_19;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v8 = *(id *)(a1 + 8 * i + 32);
      v9 = v8;
      v10 = objc_opt_self(UILabel);
      v11 = swift_dynamicCastObjCClass(v9, v10);
      if (v11)
      {
        v12 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v14 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v13 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v15);
      }
      else
      {
        v4 = objc_msgSend(v9, "subviews");
        v5 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
        v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

        v7 = sub_CE628(v6);
        swift_bridgeObjectRelease(v6);
        sub_1F6F18(v7);
      }

    }
    goto LABEL_19;
  }
  __break(1u);
}

id sub_CE880(void *a1)
{
  CGRect v3;

  objc_msgSend(a1, "bounds");
  CGRectGetHeight(v3);
  objc_msgSend(a1, "center");
  return objc_msgSend(a1, "setCenter:");
}

void sub_CE8D8(int a1, id a2)
{
  id v2;

  v2 = objc_msgSend(a2, "tabBar");
  objc_msgSend(v2, "setAlpha:", 1.0);

}

void sub_CE920(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CGFloat *v25;
  CGFloat *v26;
  char v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat MidX;
  double v35;
  double MidY;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  double v41;
  id v42;
  double v43;
  id v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  id v55;
  void *v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double MinY;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  double v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  NSString v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  NSString v78;
  double v79;
  double v80;
  __n128 v81;
  void *v82;
  __n128 v83;
  char *v84;
  CGFloat v85;
  void *v86;
  CGFloat m22;
  id v88;
  __n128 v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  void *v96;
  CGFloat *v97;
  id v98;
  CGFloat v99;
  void *v100;
  CGFloat v101;
  id v102;
  id v103;
  CGFloat v104;
  void *v105;
  CGFloat v106;
  id v107;
  CGFloat m43;
  CGFloat m44;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  double v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  CGFloat v129;
  double v130;
  CGFloat v131;
  uint64_t v132;
  id v133;
  CATransform3D aBlock;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;
  CGRect v141;
  CGRect v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;

  v125 = type metadata accessor for DispatchWorkItemFlags(0);
  v128 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v124 = (char *)&m43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for DispatchQoS(0);
  v126 = *(_QWORD *)(v127 - 8);
  v4 = __chkstk_darwin(v127);
  v123 = (char *)&m43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for DispatchTime(0, v4);
  v6 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v8 = (char *)&m43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v122 = (char *)&m43 - v11;
  v133 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey, v10);
  if (v133)
  {
    objc_msgSend(v133, "frame");
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
  }
  else
  {
    v20 = objc_msgSend(a1, "containerView");
    objc_msgSend(v20, "bounds");
    v13 = v21;
    v15 = v22;
    v17 = v23;
    v19 = v24;

  }
  *(double *)&v25 = COERCE_DOUBLE(swift_allocObject(&unk_380468, 48, 7));
  v26 = (CGFloat *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21BouncyToRectAnimation_toRect];
  v27 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21BouncyToRectAnimation_toRect + 32];
  v129 = v19;
  if ((v27 & 1) != 0)
  {
    v135.origin.x = v13;
    v135.origin.y = v15;
    v135.size.width = v17;
    v135.size.height = v19;
    v28 = CGRectGetWidth(v135) * 0.3;
    v136.origin.x = v13;
    v136.origin.y = v15;
    v136.size.width = v17;
    v136.size.height = v129;
    v29 = CGRectGetHeight(v136) * 0.3;
    v19 = v129;
    v137.origin.x = v13;
    v137.origin.y = v15;
    v137.size.width = v17;
    v137.size.height = v129;
    v138 = CGRectInset(v137, v28, v29);
    x = v138.origin.x;
    y = v138.origin.y;
    width = v138.size.width;
    height = v138.size.height;
  }
  else
  {
    width = v26[2];
    height = v26[3];
    x = *v26;
    y = v26[1];
  }
  v25[2] = x;
  v25[3] = y;
  v25[4] = width;
  v25[5] = height;
  v139.origin.x = v13;
  v139.origin.y = v15;
  v139.size.width = v17;
  v139.size.height = v19;
  v121 = CGRectGetWidth(v139);
  v140.origin.x = x;
  v140.origin.y = y;
  v140.size.width = width;
  v140.size.height = height;
  v118 = CGRectGetWidth(v140);
  v141.origin.x = v13;
  v141.origin.y = v15;
  v141.size.width = v17;
  v141.size.height = v19;
  *(_QWORD *)&v116 = CGRectGetHeight(v141);
  v142.origin.x = x;
  v142.origin.y = y;
  v142.size.width = width;
  v142.size.height = height;
  *(_QWORD *)&v115 = CGRectGetHeight(v142);
  v143.origin.x = v13;
  v143.origin.y = v15;
  v143.size.width = v17;
  v143.size.height = v19;
  *(_QWORD *)&v114 = CGRectGetMidX(v143);
  v144.origin.x = x;
  v144.origin.y = y;
  v144.size.width = width;
  v144.size.height = height;
  MidX = CGRectGetMidX(v144);
  v145.size.width = v17;
  v35 = MidX;
  v131 = v13;
  v145.origin.x = v13;
  v119 = v15;
  v145.origin.y = v15;
  v120 = v145.size.width;
  v145.size.height = v19;
  MidY = CGRectGetMidY(v145);
  v130 = x;
  v146.origin.x = x;
  v37 = y;
  v146.origin.y = y;
  v117 = width;
  v146.size.width = width;
  v38 = height;
  v146.size.height = height;
  v39 = CGRectGetMidY(v146);
  v40 = sqrt((v121 - v118) * (v121 - v118) + (*(double *)&v116 - *(double *)&v115)
                                           * (*(double *)&v116 - *(double *)&v115));
  v41 = sqrt((*(double *)&v114 - v35) * (*(double *)&v114 - v35) + (MidY - v39) * (MidY - v39));
  if (v40 > v41)
    v41 = v40;
  v118 = v41 / 0.7 / v41;
  v42 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  v43 = *(double *)&v42;
  if (*(double *)&v42 != 0.0)
  {
    v44 = v42;
    v45 = objc_msgSend(a1, "containerView");
    objc_msgSend(v45, "bounds");
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v53 = v52;

    objc_msgSend(v44, "setFrame:", v47, v49, v51, v53);
    v54 = v44;
    v55 = objc_msgSend(a1, "containerView");
    objc_msgSend(v55, "insertSubview:below:", v54, v133);

  }
  v121 = v43;
  v56 = v1;
  v57 = v130;
  v147.origin.x = v130;
  v58 = v37;
  v147.origin.y = v37;
  v59 = v117;
  v147.size.width = v117;
  v60 = v38;
  v147.size.height = v38;
  MinY = CGRectGetMinY(v147);
  v148.origin.x = v131;
  v62 = v119;
  v148.origin.y = v119;
  v63 = v120;
  v148.size.width = v120;
  v64 = v129;
  v148.size.height = v129;
  v65 = MinY - CGRectGetMinY(v148);
  v149.origin.x = v57;
  v149.origin.y = v58;
  v149.size.width = v59;
  v149.size.height = v60;
  v66 = CGRectGetMidX(v149);
  v67 = v131;
  v150.origin.x = v131;
  v150.origin.y = v62;
  v150.size.width = v63;
  v150.size.height = v64;
  v68 = CGRectGetMidX(v150);
  CATransform3DMakeTranslation(&aBlock, v66 - v68, v65, 0.0);
  v116 = *(_OWORD *)&aBlock.m11;
  v115 = *(_OWORD *)&aBlock.m13;
  v114 = *(_OWORD *)&aBlock.m21;
  v113 = *(_OWORD *)&aBlock.m23;
  v112 = *(_OWORD *)&aBlock.m31;
  v111 = *(_OWORD *)&aBlock.m33;
  v110 = *(_OWORD *)&aBlock.m41;
  m43 = aBlock.m43;
  m44 = aBlock.m44;
  v25[3] = v62;
  v151.origin.x = v67;
  v151.origin.y = v62;
  v151.size.width = v63;
  v151.size.height = v64;
  v69 = CGRectGetWidth(v151);
  v152.origin.x = v130;
  v152.origin.y = v62;
  v152.size.width = v59;
  v152.size.height = v60;
  v70 = CGRectGetWidth(v152);
  v131 = *(double *)&v25;
  v25[2] = v67 + (v69 - v70) * 0.5;
  v71 = String._bridgeToObjectiveC()();
  v72 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v71);

  v73 = (void *)objc_opt_self(NSValue);
  v74 = v72;
  *(_OWORD *)&aBlock.m11 = v116;
  *(_OWORD *)&aBlock.m13 = v115;
  *(_OWORD *)&aBlock.m21 = v114;
  *(_OWORD *)&aBlock.m23 = v113;
  *(_OWORD *)&aBlock.m31 = v112;
  *(_OWORD *)&aBlock.m33 = v111;
  *(_OWORD *)&aBlock.m41 = v110;
  aBlock.m43 = m43;
  aBlock.m44 = m44;
  v75 = objc_msgSend(v73, "valueWithCATransform3D:", &aBlock);
  objc_msgSend(v74, "setToValue:", v75);

  objc_msgSend(v74, "setDamping:", 16.0);
  objc_msgSend(v74, "setMass:", 1.0);
  objc_msgSend(v74, "setStiffness:", 150.0);
  objc_msgSend(v74, "setInitialVelocity:", v118);
  v76 = v74;
  objc_msgSend(v76, "settlingDuration");
  objc_msgSend(v76, "setDuration:");

  objc_msgSend(v76, "setFillMode:", kCAFillModeForwards);
  objc_msgSend(v76, "setRemovedOnCompletion:", 0);
  if (v133)
  {
    v77 = objc_msgSend(v133, "layer");
    v78 = String._bridgeToObjectiveC()();
    objc_msgSend(v77, "addAnimation:forKey:", v76, v78);

  }
  objc_msgSend(v76, "settlingDuration");
  v80 = v79 * 0.65;
  sub_E710(0, (unint64_t *)&qword_3D2F10, OS_dispatch_queue_ptr);
  v82 = (void *)static OS_dispatch_queue.main.getter(v81);
  static DispatchTime.now()(v83);
  v84 = v122;
  + infix(_:_:)(v8, v80);
  v130 = *(double *)(v6 + 8);
  (*(void (**)(char *, uint64_t))&v130)(v8, v132);
  v85 = COERCE_DOUBLE(swift_allocObject(&unk_380490, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v85 + 16) = a1;
  *(_QWORD *)(*(_QWORD *)&v85 + 24) = v56;
  *(_QWORD *)&aBlock.m21 = sub_CF964;
  aBlock.m22 = v85;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_24360;
  *(_QWORD *)&aBlock.m14 = &block_descriptor_11;
  v86 = _Block_copy(&aBlock);
  m22 = aBlock.m22;
  swift_unknownObjectRetain(a1);
  v88 = v56;
  v89 = swift_release(*(_QWORD *)&m22);
  v90 = v123;
  static DispatchQoS.unspecified.getter(v89);
  *(_QWORD *)&aBlock.m11 = _swiftEmptyArrayStorage;
  v91 = sub_CF9B0();
  v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v93 = sub_CF9F8();
  v94 = v124;
  v95 = v125;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v92, v93, v125, v91);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v84, v90, v94, v86);
  _Block_release(v86);

  (*(void (**)(char *, uint64_t))(v128 + 8))(v94, v95);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v90, v127);
  (*(void (**)(char *, uint64_t))&v130)(v84, v132);
  v96 = (void *)objc_opt_self(UIView);
  v97 = (CGFloat *)swift_allocObject(&unk_3804E0, 40, 7);
  v98 = v133;
  *((_QWORD *)v97 + 2) = v88;
  *((_QWORD *)v97 + 3) = v98;
  v99 = v131;
  v97[4] = v131;
  *(_QWORD *)&aBlock.m21 = sub_CFA78;
  *(_QWORD *)&aBlock.m22 = v97;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_24360;
  *(_QWORD *)&aBlock.m14 = &block_descriptor_9;
  v100 = _Block_copy(&aBlock);
  v101 = aBlock.m22;
  v102 = v88;
  v103 = v98;
  swift_retain(*(_QWORD *)&v99);
  swift_release(*(_QWORD *)&v101);
  v104 = COERCE_DOUBLE(swift_allocObject(&unk_380530, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v104 + 16) = v98;
  *(_QWORD *)&aBlock.m21 = sub_CFAA8;
  aBlock.m22 = v104;
  *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.m12 = 1107296256;
  *(_QWORD *)&aBlock.m13 = sub_1E3D64;
  *(_QWORD *)&aBlock.m14 = &block_descriptor_15;
  v105 = _Block_copy(&aBlock);
  v106 = aBlock.m22;
  v107 = v103;
  swift_release(*(_QWORD *)&v106);
  objc_msgSend(v96, "animateWithDuration:delay:options:animations:completion:", 131201, v100, v105, 0.35, 0.0);

  _Block_release(v105);
  _Block_release(v100);
  swift_release(*(_QWORD *)&v99);
}

id sub_CF508(uint64_t a1, void *a2, double *a3)
{
  _QWORD *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  _BYTE v14[24];

  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks);
  result = (id)((uint64_t (*)(uint64_t, _BYTE *, _QWORD, _QWORD))swift_beginAccess)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks, v14, 0, 0);
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain(*v6);
    v10 = (_BYTE *)(v8 + 48);
    do
    {
      if (*v10 == 1)
      {
        v12 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v10 - 2);
        v11 = *((_QWORD *)v10 - 1);
        swift_retain(v11);
        v12(1, 1);
        swift_release(v11);
      }
      v10 += 24;
      --v9;
    }
    while (v9);
    result = (id)swift_bridgeObjectRelease(v8);
  }
  if (a2)
  {
    swift_beginAccess(a3 + 2, &v13, 0, 0);
    result = objc_msgSend(a2, "setFrame:", a3[2], a3[3], a3[4], a3[5]);
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21BouncyToRectAnimation_toRect + 32) == 1)
      return objc_msgSend(a2, "setAlpha:", 0.0);
  }
  return result;
}

void sub_CF628(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;

  if (!a2)
    goto LABEL_16;
  v2 = objc_msgSend(a2, "subviews");
  v3 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  sub_CE628(v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend(objc_allocWithZone((Class)CATransition), "init");
  v8 = (void *)objc_opt_self(CAMediaTimingFunction);
  v9 = v7;
  v10 = objc_msgSend(v8, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v9, "setTimingFunction:", v10);

  objc_msgSend(v9, "setType:");
  objc_msgSend(v9, "setDuration:", 0.2);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v22 = v6;
    else
      v22 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v11)
      goto LABEL_4;
LABEL_14:

    swift_bridgeObjectRelease_n(v6, 2);
    return;
  }
  v11 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v6);
  if (!v11)
    goto LABEL_14;
LABEL_4:
  if (v11 >= 1)
  {
    v12 = 0;
    v13 = v6 & 0xC000000000000001;
    v14 = v6;
    do
    {
      if (v13)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v6);
      else
        v15 = *(id *)(v6 + 8 * v12 + 32);
      v16 = v15;
      ++v12;
      v17 = objc_msgSend(v15, "layer");
      objc_msgSend(v17, "setMasksToBounds:", 1);

      v18 = objc_msgSend(v16, "layer");
      static String._unconditionallyBridgeFromObjectiveC(_:)(kCATransitionFade);
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "addAnimation:forKey:", v9, v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

      v6 = v14;
    }
    while (v11 != v12);
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_CF8D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BouncyToRectAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BouncyToRectAnimation()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21BouncyToRectAnimation);
}

uint64_t sub_CF928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CF938()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_CF964()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "completeTransition:", 1);
  return sub_2A2608(2);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_11(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_CF9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2FD0;
  if (!qword_3D2FD0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_3D2FD0);
  }
  return result;
}

unint64_t sub_CF9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2FE0;
  if (!qword_3D2FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_3D4DA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3D2FE0);
  }
  return result;
}

uint64_t sub_CFA44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_CFA78()
{
  uint64_t v0;

  return sub_CF508(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(double **)(v0 + 32));
}

uint64_t sub_CFA84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_CFAA8(int a1)
{
  uint64_t v1;

  sub_CF628(a1, *(id *)(v1 + 16));
}

void sub_CFAB0(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v2)
  {
    v39 = v2;
    v3 = objc_opt_self(UITabBarController);
    v4 = (void *)swift_dynamicCastObjCClass(v39, v3);
    if (!v4)
      goto LABEL_7;
    v5 = v4;
    v6 = objc_msgSend(v4, "tabBar");
    objc_msgSend(v6, "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v15 = objc_msgSend(v5, "view");
    if (!v15)
    {
      __break(1u);
      return;
    }
    v16 = v15;
    v17 = objc_msgSend(v15, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, v8, v10, v12, v14, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

    if (!v17)
    {
LABEL_7:

      return;
    }
    v18 = objc_msgSend(a1, "containerView");
    v19 = objc_msgSend(v5, "view");
    objc_msgSend(v18, "convertRect:fromView:", v19, v8, v10, v12, v14);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    objc_msgSend(v17, "setFrame:", v21, v23 + v27, v25, v27);
    v28 = objc_msgSend(a1, "containerView");
    objc_msgSend(v28, "addSubview:", v17);

    v29 = objc_msgSend(v5, "tabBar");
    objc_msgSend(v29, "setAlpha:", 0.0);

    v30 = (void *)objc_opt_self(UIView);
    v31 = swift_allocObject(&unk_380580, 24, 7);
    *(_QWORD *)(v31 + 16) = v17;
    v44 = sub_CFE1C;
    v45 = v31;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_24360;
    v43 = &block_descriptor_21;
    v32 = _Block_copy(&aBlock);
    v33 = v45;
    v34 = v17;
    swift_release(v33);
    v35 = swift_allocObject(&unk_3805D0, 24, 7);
    *(_QWORD *)(v35 + 16) = v5;
    v44 = sub_CFE24;
    v45 = v35;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_1E3D64;
    v43 = &block_descriptor_27;
    v36 = _Block_copy(&aBlock);
    v37 = v45;
    v38 = v39;
    swift_release(v37);
    objc_msgSend(v30, "animateWithDuration:delay:options:animations:completion:", 0x20000, v32, v36, 0.233333333, 0.0);

    _Block_release(v36);
    _Block_release(v32);
  }
}

id sub_CFE1C()
{
  uint64_t v0;

  return sub_CE880(*(void **)(v0 + 16));
}

void sub_CFE24(int a1)
{
  uint64_t v1;

  sub_CE8D8(a1, *(id *)(v1 + 16));
}

uint64_t sub_CFE54()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:", v0, "handleActionFromGestureRecognizer:");

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for GestureRecognizerHandler()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24GestureRecognizerHandler);
}

void sub_CFF28()
{
  qword_3D5368 = 0x4024000000000000;
}

int64x2_t sub_CFF38()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4056800000000000uLL);
  xmmword_3D5370 = (__int128)result;
  return result;
}

void sub_CFF54()
{
  qword_3D5380 = 0x4030000000000000;
}

void sub_CFF64()
{
  qword_3D5388 = 0x4008000000000000;
}

void sub_CFF74()
{
  qword_3D5390 = 0x4026000000000000;
}

int64x2_t sub_CFF84()
{
  double v0;
  int64x2_t result;

  if (qword_3CF2E8 != -1)
    swift_once(&qword_3CF2E8, sub_CFF64);
  v0 = *(double *)&qword_3D5388;
  if (qword_3CF2D0 != -1)
    swift_once(&qword_3CF2D0, sub_CFF28);
  *(double *)&qword_3D5398 = -v0;
  unk_3D53A0 = -*(double *)&qword_3D5368;
  result = vdupq_n_s64(0xC044000000000000);
  xmmword_3D53A8 = (__int128)result;
  return result;
}

uint64_t sub_D001C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer(v0, qword_3D53B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3D53B8);
  if (qword_3CFDD0 != -1)
    swift_once(&qword_3CFDD0, sub_2B2F84);
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_3FD888);
  return sub_19C4C(v2, v1, type metadata accessor for PlayControlsIconsSet);
}

void sub_D0164(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  _BYTE *v25;
  unsigned __int8 v26;
  _BYTE *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  void *v35;
  __int128 v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  double v48;
  double v49;
  __int128 v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BOOL8 v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  char *v79;
  void *v80;
  char *v81;
  void *v82;
  id v83;
  Swift::String v84;
  Swift::String v85;
  unint64_t v86;
  NSString v87;
  void *v88;
  id v89;
  Swift::String v90;
  Swift::String v91;
  unint64_t v92;
  NSString v93;
  id v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  id v105;
  void *v106;
  id v107;
  char *v108;
  id v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  double v117;
  double v118;
  double v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  char *v124;
  id v125;
  id v126;
  void *v127;
  id v128;
  id v129;
  id v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  id v136;
  id v137;
  void *v138;
  id v139;
  void *v140;
  id v141;
  id v142;
  void *v143;
  id v144;
  void *v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  void *v150;
  id v151;
  id v152;
  void *v153;
  id v154;
  void *v155;
  id v156;
  id v157;
  void *v158;
  void *v159;
  id v160;
  char *v161;
  id v162;
  id v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  char *v168;
  Class isa;
  uint64_t v170;
  void *v171;
  id v172;
  id v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  Class v177;
  _QWORD v178[2];
  uint64_t v179;
  char *v180;
  uint64_t v181;
  id v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  unint64_t v190;
  unsigned __int8 v191[32];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v6);
  v8 = (char *)v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v10 = __chkstk_darwin(v9);
  v183 = (char *)v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.ReorderOptions(0, v10);
  v184 = *(char **)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v178 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)type metadata accessor for UICellAccessory.DisplayedState(0, v13);
  v181 = *(v16 - 1);
  v182 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)v178 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v19);
  v21 = (char *)v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView;
  if (!*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView)
    || !*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView)
    || !*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView))
  {
    v179 = v12;
    v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
    v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView;
    v24 = *(void **)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView) = v22;

    v25 = *(_BYTE **)((char *)v2 + v23);
    if (v25)
    {
      v180 = v8;
      v26 = v25[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v25[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      v191[0] = v26;
      v27 = v25;
      sub_EB33C(v191);

      v28 = *(void **)((char *)v3 + v23);
      if (v28)
      {
        v29 = a2;
        v186 = v23;
        v30 = qword_3CFA90;
        v31 = v28;
        if (v30 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v32 = (void *)qword_3FCF18;
        v33 = qword_3FCF30;
        v34 = &v31[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v35 = *(void **)&v31[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v36 = unk_3FCF20;
        *(_QWORD *)v34 = qword_3FCF18;
        *(_OWORD *)(v34 + 8) = v36;
        *((_QWORD *)v34 + 3) = v33;
        v37 = v32;

        sub_E9020();
        v191[0] = 0;
        if (qword_3CF300 != -1)
          swift_once(&qword_3CF300, sub_D001C);
        v38 = __swift_project_value_buffer(v19, (uint64_t)qword_3D53B8);
        sub_19C4C(v38, (uint64_t)v21, type metadata accessor for PlayControlsIconsSet);
        v39 = type metadata accessor for PlayControlsPresenter(0);
        swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
        swift_retain(a1);
        v40 = sub_2B4D24(v191, (uint64_t)v21, a1);
        swift_release(a1);
        v41 = OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter;
        v42 = *(_QWORD *)((char *)v3
                        + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter);
        *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter) = v40;
        swift_release(v42);
        v43 = *(_QWORD *)((char *)v3 + v41);
        if (v43)
        {
          v44 = v29;
          v45 = qword_3CF2F8;
          swift_retain(v43);
          v46 = v185;
          v47 = v180;
          if (v45 != -1)
            swift_once(&qword_3CF2F8, sub_CFF84);
          v178[1] = v44;
          v48 = *(double *)&qword_3D5398;
          v49 = unk_3D53A0;
          v50 = xmmword_3D53A8;
          v51 = objc_allocWithZone((Class)type metadata accessor for PlayControlsStackView());
          v52 = sub_10B650(v43, v48, v49, *(double *)&v50, *((double *)&v50 + 1));
          v53 = *(void **)((char *)v3 + v46);
          *(_QWORD *)((char *)v3 + v46) = v52;

          v191[0] = 1;
          v54 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
          v55 = sub_1B80D8((char *)v191, (uint64_t)&_swiftEmptySetSingleton);
          v56 = OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView;
          v57 = *(void **)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView);
          *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView) = v55;

          v187 = v56;
          v58 = *(_QWORD *)((char *)v3 + v56);
          if (v58)
          {
            v59 = (uint64_t *)(v58 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher);
            swift_beginAccess(v58 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_playStatePublisher, v191, 0, 0);
            v60 = *v59;
            v189 = v60;
            v61 = swift_allocObject(&unk_3806B8, 24, 7);
            swift_unknownObjectWeakInit(v61 + 16, v3);
            swift_retain(v60);
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5470);
            v63 = sub_D2C94();
            v64 = Publisher<>.sink(receiveValue:)(sub_D2C8C, v61, v62, v63);
            swift_release(v61);
            swift_release(v189);
            v65 = *(_QWORD *)((char *)v3
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playStateSubscription);
            *(_QWORD *)((char *)v3
                      + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playStateSubscription) = v64;
            swift_release(v65);
            v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5480);
            v67 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
            v68 = swift_allocObject(v66, ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72), *(unsigned __int8 *)(v67 + 80) | 7);
            *(_OWORD *)(v68 + 16) = xmmword_2F03C0;
            v70 = v181;
            v69 = v182;
            (*(void (**)(char *, _QWORD, id))(v181 + 104))(v18, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v182);
            v71 = type metadata accessor for UICellAccessory.LayoutDimension(0);
            v72 = v183;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v183, 1, 1, v71);
            UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v72, 0, 2);
            static UICellAccessory.reorder(displayed:options:)(v18, v15);
            (*((void (**)(char *, uint64_t))v184 + 1))(v15, v179);
            (*(void (**)(char *, id))(v70 + 8))(v18, v69);
            UICollectionViewListCell.accessories.setter(v68);
            v73 = sub_D13B0();
            if (v73)
              static UIBackgroundConfiguration.listPlainCell()(v73);
            else
              static UIBackgroundConfiguration.clear()(v73);
            v74 = type metadata accessor for UIBackgroundConfiguration(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v47, 0, 1, v74);
            UICollectionViewCell.backgroundConfiguration.setter(v47);
            v75 = objc_msgSend(v3, "contentView");
            objc_msgSend(v75, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

            v76 = objc_msgSend(v3, "contentView");
            LOBYTE(v75) = sub_D13B0();
            v77 = objc_msgSend(v3, "traitCollection");
            v78 = objc_allocWithZone((Class)type metadata accessor for EpisodeCellLayoutGuide());
            v79 = sub_151878(v76, v75 & 1, v77);
            v80 = *(void **)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide);
            *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide) = v79;
            v81 = v79;

            v82 = *(void **)((char *)v3 + v186);
            if (v82)
            {
              v189 = 0;
              v190 = 0xE000000000000000;
              v83 = v82;
              v84._countAndFlagsBits = 0xD00000000000001ELL;
              v84._object = (void *)0x80000000003078F0;
              String.append(_:)(v84);
              v85._countAndFlagsBits = 46;
              v85._object = (void *)0xE100000000000000;
              String.append(_:)(v85);
              v188 = 0;
              _print_unlocked<A, B>(_:_:)(&v188, &v189, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
              v86 = v190;
              v87 = String._bridgeToObjectiveC()();
              objc_msgSend(v83, "setAccessibilityIdentifier:", v87, swift_bridgeObjectRelease(v86).n128_f64[0]);

              v88 = *(void **)((char *)v3 + v187);
              if (v88)
              {
                v189 = 0;
                v190 = 0xE000000000000000;
                v89 = v88;
                v90._countAndFlagsBits = 0xD00000000000001ELL;
                v90._object = (void *)0x80000000003078F0;
                String.append(_:)(v90);
                v91._countAndFlagsBits = 46;
                v91._object = (void *)0xE100000000000000;
                String.append(_:)(v91);
                v188 = 2;
                _print_unlocked<A, B>(_:_:)(&v188, &v189, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                v92 = v190;
                v93 = String._bridgeToObjectiveC()();
                objc_msgSend(v89, "setAccessibilityIdentifier:", v93, swift_bridgeObjectRelease(v92).n128_f64[0]);

                v94 = objc_msgSend(v3, "contentView");
                v95 = v186;
                if (*(_QWORD *)((char *)v3 + v186))
                {
                  v96 = v94;
                  objc_msgSend(v94, "addSubview:");

                  v97 = objc_msgSend(v3, "contentView");
                  if (*(_QWORD *)((char *)v3 + v187))
                  {
                    v98 = v97;
                    objc_msgSend(v97, "addSubview:");

                    v99 = objc_msgSend(v3, "contentView");
                    if (*(_QWORD *)((char *)v3 + v46))
                    {
                      v100 = v99;
                      objc_msgSend(v99, "addSubview:");

                      v101 = *(void **)((char *)v3 + v95);
                      if (v101)
                      {
                        objc_msgSend(v101, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                        v102 = *(void **)((char *)v3 + v187);
                        if (v102)
                        {
                          objc_msgSend(v102, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                          v103 = *(void **)((char *)v3 + v46);
                          if (v103)
                          {
                            objc_msgSend(v103, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                            v104 = *(void **)((char *)v3 + v46);
                            if (v104)
                            {
                              v105 = objc_msgSend(v104, "bottomAnchor");
                              v106 = *(void **)((char *)v3 + v95);
                              if (v106)
                              {
                                v107 = objc_msgSend(v106, "bottomAnchor");
                                v108 = (char *)objc_msgSend(v105, "constraintEqualToAnchor:", v107);

                                v109 = objc_msgSend(v81, "bottomAnchor");
                                v110 = *(void **)((char *)v3 + v95);
                                if (v110)
                                {
                                  v111 = objc_msgSend(v110, "bottomAnchor");
                                  if (qword_3CF2E0 != -1)
                                    swift_once(&qword_3CF2E0, sub_CFF54);
                                  v112 = objc_msgSend(v109, "constraintEqualToAnchor:constant:", v111, *(double *)&qword_3D5380);

                                  v113 = objc_msgSend(v81, "bottomAnchor");
                                  v114 = *(void **)((char *)v3 + v46);
                                  if (v114)
                                  {
                                    v115 = objc_msgSend(v114, "bottomAnchor");
                                    if (qword_3CF2F0 != -1)
                                      swift_once(&qword_3CF2F0, sub_CFF74);
                                    v116 = objc_msgSend(v113, "constraintGreaterThanOrEqualToAnchor:constant:", v115, *(double *)&qword_3D5390);

                                    LODWORD(v117) = 1132068864;
                                    objc_msgSend(v108, "setPriority:", v117);
                                    LODWORD(v118) = 1132068864;
                                    objc_msgSend(v112, "setPriority:", v118);
                                    LODWORD(v119) = 1132068864;
                                    objc_msgSend(v116, "setPriority:", v119);
                                    v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                                    v120 = swift_allocObject(v181, 128, 7);
                                    *(_OWORD *)(v120 + 16) = xmmword_2F4A70;
                                    v121 = *(void **)((char *)v3 + v95);
                                    if (v121)
                                    {
                                      v122 = v95;
                                      v183 = v108;
                                      v123 = objc_msgSend(v121, "leadingAnchor");
                                      v124 = v81;
                                      v125 = objc_msgSend(v81, "leadingAnchor");
                                      v126 = objc_msgSend(v123, "constraintEqualToAnchor:", v125);

                                      *(_QWORD *)(v120 + 32) = v126;
                                      v127 = *(void **)((char *)v3 + v122);
                                      if (v127)
                                      {
                                        v128 = objc_msgSend(v127, "topAnchor");
                                        v184 = v124;
                                        v129 = objc_msgSend(v124, "topAnchor");
                                        v130 = objc_msgSend(v128, "constraintEqualToAnchor:constant:", v129, *(double *)&qword_3D5380);

                                        *(_QWORD *)(v120 + 40) = v130;
                                        *(_QWORD *)(v120 + 48) = v112;
                                        v131 = *(void **)((char *)v3 + v122);
                                        if (v131)
                                        {
                                          v132 = v112;
                                          v133 = objc_msgSend(v131, "heightAnchor");
                                          if (qword_3CF2D8 != -1)
                                            swift_once(&qword_3CF2D8, sub_CFF38);
                                          v134 = objc_msgSend(v133, "constraintEqualToConstant:", *((double *)&xmmword_3D5370 + 1));

                                          *(_QWORD *)(v120 + 56) = v134;
                                          v135 = *(void **)((char *)v3 + v186);
                                          if (v135)
                                          {
                                            v136 = objc_msgSend(v135, "widthAnchor");
                                            v137 = objc_msgSend(v136, "constraintEqualToConstant:", *(double *)&xmmword_3D5370);

                                            *(_QWORD *)(v120 + 64) = v137;
                                            v138 = *(void **)((char *)v3 + v187);
                                            if (v138)
                                            {
                                              v139 = objc_msgSend(v138, "leadingAnchor");
                                              v140 = *(void **)((char *)v3 + v186);
                                              if (v140)
                                              {
                                                v182 = v132;
                                                v141 = objc_msgSend(v140, "trailingAnchor");
                                                if (qword_3CF2D0 != -1)
                                                  swift_once(&qword_3CF2D0, sub_CFF28);
                                                v142 = objc_msgSend(v139, "constraintEqualToAnchor:constant:", v141, *(double *)&qword_3D5368);

                                                *(_QWORD *)(v120 + 72) = v142;
                                                v143 = *(void **)((char *)v3 + v187);
                                                if (v143)
                                                {
                                                  v144 = objc_msgSend(v143, "topAnchor");
                                                  v145 = *(void **)((char *)v3 + v186);
                                                  if (v145)
                                                  {
                                                    v146 = objc_msgSend(v145, "topAnchor");
                                                    v147 = objc_msgSend(v144, "constraintEqualToAnchor:", v146);

                                                    *(_QWORD *)(v120 + 80) = v147;
                                                    v148 = *(void **)((char *)v3 + v185);
                                                    if (v148)
                                                    {
                                                      v149 = objc_msgSend(v148, "topAnchor");
                                                      v150 = *(void **)((char *)v3 + v187);
                                                      if (v150)
                                                      {
                                                        v151 = objc_msgSend(v150, "bottomAnchor");
                                                        if (qword_3CF2E8 != -1)
                                                          swift_once(&qword_3CF2E8, sub_CFF64);
                                                        v152 = objc_msgSend(v149, "constraintGreaterThanOrEqualToAnchor:constant:", v151, *(double *)&qword_3D5388);

                                                        *(_QWORD *)(v120 + 88) = v152;
                                                        v153 = *(void **)((char *)v3 + v185);
                                                        if (v153)
                                                        {
                                                          v154 = objc_msgSend(v153, "leadingAnchor");
                                                          v155 = *(void **)((char *)v3 + v186);
                                                          if (v155)
                                                          {
                                                            v156 = objc_msgSend(v155, "trailingAnchor");
                                                            v157 = objc_msgSend(v154, "constraintEqualToAnchor:constant:", v156, *(double *)&qword_3D5368);

                                                            *(_QWORD *)(v120 + 96) = v157;
                                                            v158 = *(void **)((char *)v3 + v185);
                                                            if (v158)
                                                            {
                                                              v159 = (void *)objc_opt_self(NSLayoutConstraint);
                                                              v160 = objc_msgSend(v158, "trailingAnchor");
                                                              v161 = v184;
                                                              v162 = objc_msgSend(v184, "trailingAnchor");
                                                              v163 = objc_msgSend(v160, "constraintEqualToAnchor:", v162);

                                                              *(_QWORD *)(v120 + 104) = v163;
                                                              *(_QWORD *)(v120 + 112) = v116;
                                                              v164 = v183;
                                                              *(_QWORD *)(v120 + 120) = v183;
                                                              v189 = v120;
                                                              specialized Array._endMutation()(v165);
                                                              v166 = v189;
                                                              sub_12D34();
                                                              v167 = v116;
                                                              v168 = v164;
                                                              isa = Array._bridgeToObjectiveC()().super.isa;
                                                              objc_msgSend(v159, "activateConstraints:", isa, swift_bridgeObjectRelease(v166).n128_f64[0]);

                                                              if (((*(uint64_t (**)(void))((char *)&stru_158.reloff
                                                                                         + (swift_isaMask & *v3)))() & 1) == 0)
                                                              {
LABEL_55:

                                                                return;
                                                              }
                                                              v170 = swift_allocObject(v181, 40, 7);
                                                              *(_OWORD *)(v170 + 16) = xmmword_2F11D0;
                                                              v171 = *(void **)((char *)v3 + v187);
                                                              if (v171)
                                                              {
                                                                v172 = objc_msgSend(v171, "trailingAnchor");
                                                                v161 = v184;
                                                                v173 = objc_msgSend(v184, "trailingAnchor");
                                                                v174 = objc_msgSend(v172, "constraintEqualToAnchor:", v173);

                                                                *(_QWORD *)(v170 + 32) = v174;
                                                                v189 = v170;
                                                                specialized Array._endMutation()(v175);
                                                                v176 = v189;
                                                                v177 = Array._bridgeToObjectiveC()().super.isa;
                                                                objc_msgSend(v159, "activateConstraints:", v177, swift_bridgeObjectRelease(v176).n128_f64[0]);

                                                                goto LABEL_55;
                                                              }
LABEL_86:
                                                              __break(1u);
                                                              return;
                                                            }
LABEL_85:
                                                            __break(1u);
                                                            goto LABEL_86;
                                                          }
LABEL_84:
                                                          __break(1u);
                                                          goto LABEL_85;
                                                        }
LABEL_83:
                                                        __break(1u);
                                                        goto LABEL_84;
                                                      }
LABEL_82:
                                                      __break(1u);
                                                      goto LABEL_83;
                                                    }
LABEL_81:
                                                    __break(1u);
                                                    goto LABEL_82;
                                                  }
LABEL_80:
                                                  __break(1u);
                                                  goto LABEL_81;
                                                }
LABEL_79:
                                                __break(1u);
                                                goto LABEL_80;
                                              }
LABEL_78:
                                              __break(1u);
                                              goto LABEL_79;
                                            }
LABEL_77:
                                            __break(1u);
                                            goto LABEL_78;
                                          }
LABEL_76:
                                          __break(1u);
                                          goto LABEL_77;
                                        }
LABEL_75:
                                        __break(1u);
                                        goto LABEL_76;
                                      }
LABEL_74:
                                      __break(1u);
                                      goto LABEL_75;
                                    }
LABEL_73:
                                    __break(1u);
                                    goto LABEL_74;
                                  }
LABEL_72:
                                  __break(1u);
                                  goto LABEL_73;
                                }
LABEL_71:
                                __break(1u);
                                goto LABEL_72;
                              }
LABEL_70:
                              __break(1u);
                              goto LABEL_71;
                            }
LABEL_69:
                            __break(1u);
                            goto LABEL_70;
                          }
LABEL_68:
                          __break(1u);
                          goto LABEL_69;
                        }
LABEL_67:
                        __break(1u);
                        goto LABEL_68;
                      }
LABEL_66:
                      __break(1u);
                      goto LABEL_67;
                    }
LABEL_65:
                    __break(1u);
                    goto LABEL_66;
                  }
LABEL_64:
                  __break(1u);
                  goto LABEL_65;
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
LABEL_62:
              __break(1u);
              goto LABEL_63;
            }
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_59;
  }
}

void sub_D1238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  uint64_t v8;

  v3 = objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_3806E0, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_D2CE0;
  *(_QWORD *)(v4 + 24) = a2;
  v7[4] = sub_101EC;
  v8 = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_920D4;
  v7[3] = &block_descriptor_12;
  v5 = _Block_copy(v7);
  v6 = v8;
  swift_retain(a2);
  swift_retain(v4);
  objc_msgSend((id)v3, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v4, "", 185, 105, 44, 1);
  swift_release(a2);
  swift_release(v4);
  if ((v3 & 1) != 0)
    __break(1u);
}

void sub_D1358(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "invalidateIntrinsicContentSize");

  }
}

BOOL sub_D13B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  os_log_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint8_t *v31;
  os_log_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = ModernShelf.ItemPresentation.itemKind.getter(v12);
  v14 = v13;
  v15 = ModernShelf.ItemPresentation.orientation.getter(v13);
  if (v14 == 1)
    return 0;
  if (v14 == 4)
  {
    if ((v15 & 1) == 0)
      return 1;
    goto LABEL_8;
  }
  if (v14 != 3)
  {
LABEL_8:
    static Logger.ui.getter();
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v18 = v17(v7, v0, v1);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc(12, -1);
      v33 = v21;
      v23 = (uint8_t *)v22;
      v34 = swift_slowAlloc(32, -1);
      v36 = v34;
      v31 = v23;
      v32 = v19;
      *(_DWORD *)v23 = 136315138;
      v17(v4, (uint64_t)v7, v1);
      v24 = String.init<A>(describing:)(v4, v1);
      v26 = v25;
      v35 = sub_37E78(v24, v25, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
      v27 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v7, v1, v27);
      v29 = v31;
      v28 = v32;
      _os_log_impl(&dword_0, v32, (os_log_type_t)v33, "We are using MultiShowEpisodeCell for an unsupported presentation %s", v31, 0xCu);
      v30 = v34;
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  return (v15 & 1) == 0;
}

void sub_D162C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  _BYTE v24[24];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  __chkstk_darwin(v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_objectGraph);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v9);
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v8, a2, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  v12 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_presentation;
  swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_presentation, v24, 33, 0);
  sub_D2C20((uint64_t)v8, v12);
  swift_endAccess(v24);
  sub_D0164(a1, a2);
  v13 = *(char **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView);
  if (!v13)
  {
    __break(1u);
    goto LABEL_6;
  }
  v14 = (uint64_t *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
  swift_beginAccess(&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v24, 1, 0);
  v15 = *v14;
  *v14 = a1;
  v16 = v13;
  swift_release(v15);
  v17 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v23, v17, v17);
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v23;

  swift_release(v18);
  v19 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView);
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v20 = v19;
  sub_1D6A8(a1);

  v21 = *(void **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView);
  if (v21)
  {
    v22 = v21;
    PlayControlsStackView.bind(to:)(a1);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_D1828()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char *v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide);
  if (v1)
  {
    v8 = v1;
    v2 = ShelfAttributes.sizeClass.getter();
    v3 = v8;
    if ((v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_isMultiShowListLayout] & 1) == 0)
    {
      v4 = SizeClass.rawValue.getter(v2);
      v5 = SizeClass.rawValue.getter(0);
      v3 = v8;
      if (v4 == v5 || (v6 = SizeClass.rawValue.getter(v2), v7 = SizeClass.rawValue.getter(1), v3 = v8, v6 == v7))
      {
        *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_extraTrailingPadding] = 0x4024000000000000;
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_internalTrailingConstraint], "setConstant:", 10.0);
        v3 = v8;
      }
    }

  }
}

void sub_D1914(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  void *v10;
  _BYTE *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  double v27;
  void *v28;
  double v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  objc_super v34;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for MultiShowEpisodeCell(0);
  v34.receiver = v2;
  v34.super_class = v8;
  v9 = objc_msgSendSuper2(&v34, "preferredLayoutAttributesFittingAttributes:", a1);
  v10 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide];
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v2, "contentView");
    objc_msgSend(v12, "bounds");
    v14 = v13;

    objc_msgSend(v9, "bounds");
    v16 = v15;
    v17 = objc_msgSend(v2, "contentView");
    objc_msgSend(v17, "directionalLayoutMargins");
    v19 = v18;
    v21 = v20;

    if (v11[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_isMultiShowListLayout] == 1)
      v22 = v14 - v19 - v21;
    else
      v22 = v16
          - *(double *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews22EpisodeCellLayoutGuide_extraTrailingPadding];
    if (qword_3CF2D8 != -1)
      swift_once(&qword_3CF2D8, sub_CFF38);
    v27 = *(double *)&xmmword_3D5370;
    if (qword_3CF2D0 != -1)
      swift_once(&qword_3CF2D0, sub_CFF28);
    v28 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView];
    if (v28)
    {
      v29 = v22 - v27 - *(double *)&qword_3D5368;
      v30 = v28;
      EpisodeInfoView.prepareForLayout(fitting:)(v29);

      if (qword_3CF2E0 != -1)
        swift_once(&qword_3CF2E0, sub_CFF54);
      if (qword_3CF2E8 != -1)
        swift_once(&qword_3CF2E8, sub_CFF64);
      v31 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView];
      if (v31)
      {
        v32 = qword_3CF348;
        v33 = v31;
        if (v32 != -1)
          swift_once(&qword_3CF348, sub_10BB04);

        if (qword_3CF2F0 != -1)
          swift_once(&qword_3CF2F0, sub_CFF74);
        objc_msgSend(v9, "size");
        objc_msgSend(v9, "setSize:");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  v23 = static Logger.ui.getter();
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "It is an error to not have a layoutArea at this point and will definitelly lead to wrong layout and other problems.", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_D1D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  __int128 v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _OWORD v40[2];
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v4);
  v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ArtworkRequest(0);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView);
  if (!v19)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  v20 = v19;
  sub_1BA170(a1, 0);
  sub_1BA4B4();
  sub_1BA5E4();
  sub_1BA9D4(a1);
  v22 = type metadata accessor for LibraryEpisodeLockup(0, v21);
  if (swift_dynamicCastClass(a1, v22))
  {
    swift_retain(a1);
    sub_1BADF4();
    swift_release(a1);
  }
  else
  {
    v24 = LegacyLockup.adamId.getter(v23);
    if ((AdamID.isEmpty.getter(v24) & 1) == 0)
    {
      v26 = LegacyLockup.adamId.getter(v25);
      sub_1BAFF4(v26);
    }
  }
  EpisodeInfoView.beginUpdates()();

  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter);
  if (!v27)
    goto LABEL_14;
  swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter));
  sub_2B2D0C(a1);
  swift_release(v27);
  LegacyLockup.artwork.getter(v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_D1D4((uint64_t)v11, &qword_3D0A58);
    return;
  }
  sub_2376C((uint64_t)v11, (uint64_t)v18);
  v29 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView);
  if (!v29)
    goto LABEL_15;
  v30 = qword_3CF2D8;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_3CF2D8, sub_CFF38);
  v32 = xmmword_3D5370;
  v33 = *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_displayScale);
  sub_19C4C((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  v34 = type metadata accessor for CropCode(0);
  v35 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v39, 1, 1, v34);
  v41 = 0;
  memset(v40, 0, sizeof(v40));
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v15, 1, 0, v35, 0, _swiftEmptyArrayStorage, v40, *(double *)&v32, *((double *)&v32 + 1), v33);
  sub_1DAA4(v8);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v38);

  sub_239C0((uint64_t)v18);
}

void sub_D2094()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for MultiShowEpisodeCell(0);
  objc_msgSendSuper2(&v12, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView];
  if (!v1)
    goto LABEL_16;
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v11, 1, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v8 = *v2;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v2, 2);
    v9 = v1;
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (v4)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v3, 2);
    v10 = *v2;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;

    swift_bridgeObjectRelease(v10);
    return;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(*v2, 2);
  v5 = v1;
  if (!v4)
    goto LABEL_14;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_D2224(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_objectGraph] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_presentation];
  v10 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView] = 0;
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_imageProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playStateSubscription] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_displayScale] = 0x3FF0000000000000;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MultiShowEpisodeCell(0);
  return objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
}

id sub_D235C(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_objectGraph] = 0;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_presentation];
  v4 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_layoutGuide] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playControlsView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView] = 0;
  v5 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_imageProvider];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_playStateSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_displayScale] = 0x3FF0000000000000;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MultiShowEpisodeCell(0);
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_D2484()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiShowEpisodeCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_D2570()
{
  return type metadata accessor for MultiShowEpisodeCell(0);
}

uint64_t type metadata accessor for MultiShowEpisodeCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D5430;
  if (!qword_3D5430)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultiShowEpisodeCell);
  return result;
}

void sub_D25B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = "\b";
  sub_D2650(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    v4[4] = "\b";
    v4[5] = "\b";
    v4[6] = "\b";
    v4[7] = &unk_2F4AD0;
    v4[8] = "\b";
    v4[9] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_D2650(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D5440)
  {
    v2 = type metadata accessor for ModernShelf.ItemPresentation(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D5440);
  }
}

uint64_t sub_D26BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  char v17;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_D13B0())
    return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 0.0);
  v17 = 1;
  v6 = _s23ShelfKitCollectionViews15EpisodeInfoViewC15estimatedHeight3for05traitC012CoreGraphics7CGFloatVAA0efG5StyleO_So07UITraitC0CtFZ_0(&v17);
  if (qword_3CF2E0 != -1)
    v5 = swift_once(&qword_3CF2E0, sub_CFF54);
  v7 = v6 + *(double *)&qword_3D5380;
  if (qword_3CF2E8 != -1)
    v5 = swift_once(&qword_3CF2E8, sub_CFF64);
  v8 = v7 + *(double *)&qword_3D5388;
  v9 = static Glyph.PlayControls.play.getter(v5);
  v10 = (void *)Glyph.image.getter(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v10, "size");
  v12 = v11;

  v13 = v8 + v12;
  if (qword_3CF2F0 != -1)
    swift_once(&qword_3CF2F0, sub_CFF74);
  v14 = v13 + *(double *)&qword_3D5390;
  if (qword_3CF2D8 != -1)
    swift_once(&qword_3CF2D8, sub_CFF38);
  if (v14 > *(double *)&qword_3D5380 + *((double *)&xmmword_3D5370 + 1) + *(double *)&qword_3D5380)
    v15 = v14;
  else
    v15 = *(double *)&qword_3D5380 + *((double *)&xmmword_3D5370 + 1) + *(double *)&qword_3D5380;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v15);
}

uint64_t sub_D28AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD))&stru_1A8.segname[(swift_isaMask & *v1) - 8])(*a1);
}

uint64_t sub_D28CC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_objectGraph));
}

uint64_t sub_D28E0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t sub_D28FC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F4CB8, a2);
  return TypedShelfUIKitCell.apply(model:)(a1, a2, WitnessTable);
}

uint64_t sub_D293C()
{
  return sub_D26BC();
}

uint64_t sub_D2950(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F4CB8, a1);
  return static TypedShelfUIKitCell.modelType.getter(a1, WitnessTable);
}

void sub_D2984(uint64_t a1@<X8>)
{
  char v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (sub_D13B0())
  {
    v2 = -1;
    v3 = 0.0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
  }
  else
  {
    if (qword_3CF2E0 != -1)
      swift_once(&qword_3CF2E0, sub_CFF54);
    v3 = UIEdgeInsets.init(topBottom:sides:)(*(double *)&qword_3D5380, 0.0);
    v2 = 1;
  }
  *(double *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v2;
}

BOOL sub_D2A10()
{
  return sub_D13B0();
}

id sub_D2A34()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20MultiShowEpisodeCell_internalArtworkView);
  if (result)
    return result;
  __break(1u);
  return result;
}

double sub_D2A4C()
{
  if (qword_3CF2D8 != -1)
    swift_once(&qword_3CF2D8, sub_CFF38);
  return *(double *)&xmmword_3D5370;
}

uint64_t sub_D2A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for CropCode(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ArtworkCrop.cropCode.getter(v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v4, v0) == enum case for CropCode.boundingBox(_:))
    return 6;
  v6 = ArtworkCrop.preferredContentMode.getter();
  v5 = ContentMode.viewContentMode.getter(v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t sub_D2B44()
{
  return sub_89A0(&qword_3D5448, type metadata accessor for MultiShowEpisodeCell, (uint64_t)&unk_2F4B90);
}

uint64_t sub_D2B70()
{
  return sub_89A0(&qword_3D5450, type metadata accessor for MultiShowEpisodeCell, (uint64_t)&unk_2F4C18);
}

uint64_t sub_D2B9C()
{
  return sub_89A0(&qword_3D5458, type metadata accessor for MultiShowEpisodeCell, (uint64_t)&unk_2F4BF0);
}

uint64_t sub_D2BC8()
{
  return sub_89A0(&qword_3D5460, type metadata accessor for MultiShowEpisodeCell, (uint64_t)&unk_2F4C48);
}

uint64_t sub_D2BF4()
{
  return sub_89A0(&qword_3D1420, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
}

uint64_t sub_D2C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D19E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_D2C68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_D2C8C(uint64_t a1)
{
  uint64_t v1;

  sub_D1238(a1, v1);
}

unint64_t sub_D2C94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5478;
  if (!qword_3D5478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D5470);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D5478);
  }
  return result;
}

void sub_D2CE0()
{
  uint64_t v0;

  sub_D1358(v0);
}

uint64_t sub_D2CE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_12(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_D2D10()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  _QWORD v5[6];
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF498 != -1)
    swift_once(&qword_3CF498, sub_13FB40);
  v5[0] = qword_3FB310;
  v5[1] = qword_3FB318;
  v5[2] = qword_3FB320;
  v5[3] = qword_3FB328;
  v5[4] = qword_3FB330;
  v5[5] = qword_3FB338;
  v6 = xmmword_3FB340;
  v7 = qword_3FB350;
  v8 = qword_3FB358;
  v9 = qword_3FB360;
  v10 = word_3FB368;
  sub_DDA0((void *)qword_3FB310, qword_3FB318, qword_3FB320, qword_3FB328, qword_3FB330, qword_3FB338, (void *)xmmword_3FB340, *((uint64_t *)&xmmword_3FB340 + 1), qword_3FB350, qword_3FB358, qword_3FB360, word_3FB368, SHIBYTE(word_3FB368));
  v0 = sub_A96AC((uint64_t)v5, 1, 4, 0);
  objc_msgSend(v0, "setTextAlignment:", 1);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = v0;
  v3 = objc_msgSend(v1, "labelColor");
  objc_msgSend(v2, "setTextColor:", v3);

  return v2;
}

id sub_D2E3C()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  _QWORD v6[6];
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4F0 != -1)
    swift_once(&qword_3CF4F0, sub_13FF60);
  v6[0] = qword_3FB730;
  v6[1] = *(_QWORD *)algn_3FB738;
  v6[2] = qword_3FB740;
  v6[3] = qword_3FB748;
  v6[4] = qword_3FB750;
  v6[5] = qword_3FB758;
  v7 = xmmword_3FB760;
  v8 = qword_3FB770;
  v9 = unk_3FB778;
  v10 = qword_3FB780;
  v11 = word_3FB788;
  sub_DDA0((void *)qword_3FB730, *(uint64_t *)algn_3FB738, qword_3FB740, qword_3FB748, qword_3FB750, qword_3FB758, (void *)xmmword_3FB760, *((uint64_t *)&xmmword_3FB760 + 1), qword_3FB770, unk_3FB778, qword_3FB780, word_3FB788, SHIBYTE(word_3FB788));
  v0 = sub_A96AC((uint64_t)v6, 1, 4, 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 1, v1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  v4 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  objc_msgSend(v3, "setTextAlignment:", 0);
  return v3;
}

id sub_D2F84()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  _QWORD v6[6];
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF490 != -1)
    swift_once(&qword_3CF490, sub_13FAE0);
  v6[0] = qword_3FB2B0;
  v6[1] = *(_QWORD *)algn_3FB2B8;
  v6[2] = qword_3FB2C0;
  v6[3] = qword_3FB2C8;
  v6[4] = qword_3FB2D0;
  v6[5] = qword_3FB2D8;
  v7 = xmmword_3FB2E0;
  v8 = qword_3FB2F0;
  v9 = unk_3FB2F8;
  v10 = qword_3FB300;
  v11 = word_3FB308;
  sub_DDA0((void *)qword_3FB2B0, *(uint64_t *)algn_3FB2B8, qword_3FB2C0, qword_3FB2C8, qword_3FB2D0, qword_3FB2D8, (void *)xmmword_3FB2E0, *((uint64_t *)&xmmword_3FB2E0 + 1), qword_3FB2F0, unk_3FB2F8, qword_3FB300, word_3FB308, SHIBYTE(word_3FB308));
  v0 = sub_A96AC((uint64_t)v6, 1, 4, 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 1, v1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  v4 = objc_msgSend(v2, "labelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  objc_msgSend(v3, "setTextAlignment:", 0);
  return v3;
}

id sub_D30CC()
{
  void *v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  _QWORD v6[6];
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4C8 != -1)
    swift_once(&qword_3CF4C8, sub_13FD80);
  v6[0] = qword_3FB550;
  v6[1] = *(_QWORD *)algn_3FB558;
  v6[2] = qword_3FB560;
  v6[3] = qword_3FB568;
  v6[4] = qword_3FB570;
  v6[5] = qword_3FB578;
  v7 = xmmword_3FB580;
  v8 = qword_3FB590;
  v9 = unk_3FB598;
  v10 = qword_3FB5A0;
  v11 = word_3FB5A8;
  sub_DDA0((void *)qword_3FB550, *(uint64_t *)algn_3FB558, qword_3FB560, qword_3FB568, qword_3FB570, qword_3FB578, (void *)xmmword_3FB580, *((uint64_t *)&xmmword_3FB580 + 1), qword_3FB590, unk_3FB598, qword_3FB5A0, word_3FB5A8, SHIBYTE(word_3FB5A8));
  v0 = sub_A96AC((uint64_t)v6, 2, 4, 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 1, v1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  v4 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  objc_msgSend(v3, "setTextAlignment:", 0);
  return v3;
}

char *sub_D3214(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  id v46;
  double leading;
  double bottom;
  double trailing;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  Swift::OpaquePointer v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  Swift::OpaquePointer v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  void *v86;
  Class isa;
  uint64_t v89;
  uint64_t v90;
  objc_class *ObjectType;
  uint64_t v92;
  __int128 v93;
  void *v94;
  objc_super v95;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v10);
  v92 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)&v93 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UICellAccessory.DisplayedState(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_hStackView;
  v22 = objc_allocWithZone((Class)UIStackView);
  v23 = v4;
  v24 = objc_msgSend(v22, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v24, "setAxis:", 0);
  objc_msgSend(v24, "setAlignment:", 3);
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v24, "setSpacing:", 10.0);
  *(_QWORD *)&v4[v21] = v24;
  v25 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkView;
  v26 = type metadata accessor for ArtworkView(0);
  v27 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v26)), "init");
  v28 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  v29 = &v27[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v30 = *(void **)&v27[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v29 = v28;
  *(_OWORD *)(v29 + 8) = xmmword_2F4D00;
  *((_QWORD *)v29 + 3) = 0x4000000000000000;
  v31 = v28;

  sub_E9020();
  *(_QWORD *)&v23[v25] = v27;
  v32 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel;
  *(_QWORD *)&v23[v32] = sub_D2D10();
  v33 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titlesVStackView;
  v34 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "setAxis:", 1);
  objc_msgSend(v34, "setAlignment:", 1);
  objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v34, "setBaselineRelativeArrangement:", 1);
  *(_QWORD *)&v23[v33] = v34;
  v35 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel;
  *(_QWORD *)&v23[v35] = sub_D2E3C();
  v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titleLabel;
  *(_QWORD *)&v23[v36] = sub_D2F84();
  v37 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_subtitleLabel;
  *(_QWORD *)&v23[v37] = sub_D30CC();
  *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkDimension] = 0x4056800000000000;
  *(_QWORD *)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph] = 0;

  v95.receiver = v23;
  v95.super_class = ObjectType;
  v38 = objc_msgSendSuper2(&v95, "initWithFrame:", a1, a2, a3, a4);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5480);
  v40 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
  v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72), *(unsigned __int8 *)(v40 + 80) | 7);
  *(_OWORD *)(v41 + 16) = xmmword_2F03C0;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for UICellAccessory.DisplayedState.always(_:), v17);
  v42 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 1, 1, v42);
  v43 = (char *)v38;
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v12, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v20, v16);
  (*(void (**)(char *, _QWORD))(v92 + 8))(v16, v93);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  UICollectionViewListCell.accessories.setter(v41);
  v44 = objc_msgSend(v43, "contentView");
  v45 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_hStackView;
  objc_msgSend(v44, "addSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_hStackView]);

  v46 = objc_msgSend(v43, "contentView");
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v50 = *(id *)&v43[v45];
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v50, 1, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v51 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titlesVStackView;
  v52 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titlesVStackView];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v54 = swift_allocObject(v53, 56, 7);
  v93 = xmmword_2EFC80;
  *(_OWORD *)(v54 + 16) = xmmword_2EFC80;
  v90 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel;
  v55 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel];
  *(_QWORD *)(v54 + 32) = v55;
  ObjectType = (objc_class *)OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titleLabel;
  v56 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titleLabel];
  *(_QWORD *)(v54 + 40) = v56;
  v57 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_subtitleLabel];
  *(_QWORD *)(v54 + 48) = v57;
  v94 = (void *)v54;
  specialized Array._endMutation()(v54);
  v58._rawValue = v94;
  v59 = v52;
  v60 = v55;
  v61 = v56;
  v62 = v57;
  UIStackView.addArrangedSubviews(_:)(v58);

  swift_bridgeObjectRelease(v58._rawValue);
  v63 = *(void **)&v43[v45];
  v64 = swift_allocObject(v53, 56, 7);
  *(_OWORD *)(v64 + 16) = v93;
  v65 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkView;
  v66 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkView];
  *(_QWORD *)(v64 + 32) = v66;
  v92 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel;
  v67 = *(void **)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel];
  *(_QWORD *)(v64 + 40) = v67;
  v68 = *(void **)&v43[v51];
  *(_QWORD *)(v64 + 48) = v68;
  v94 = (void *)v64;
  specialized Array._endMutation()(v64);
  v69._rawValue = v94;
  v70 = v63;
  v71 = v66;
  v72 = v67;
  v73 = v68;
  UIStackView.addArrangedSubviews(_:)(v69);

  swift_bridgeObjectRelease(v69._rawValue);
  v74 = *(void **)&v43[v51];
  objc_msgSend(v74, "setCustomSpacing:afterView:", *(_QWORD *)&v43[v90], 20.0);
  objc_msgSend(v74, "setCustomSpacing:afterView:", *(_QWORD *)((char *)ObjectType + (_QWORD)v43), 20.0);
  v75 = (void *)objc_opt_self(NSLayoutConstraint);
  v76 = swift_allocObject(v53, 56, 7);
  *(_OWORD *)(v76 + 16) = v93;
  v77 = objc_msgSend(*(id *)&v43[v65], "heightAnchor");
  v78 = objc_msgSend(v77, "constraintEqualToConstant:", *(double *)&v43[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkDimension]);

  *(_QWORD *)(v76 + 32) = v78;
  v79 = *(void **)&v43[v65];
  v80 = objc_msgSend(v79, "widthAnchor");
  v81 = objc_msgSend(v79, "heightAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:", v81);

  *(_QWORD *)(v76 + 40) = v82;
  v83 = objc_msgSend(*(id *)&v43[v92], "widthAnchor");
  v84 = objc_msgSend(v83, "constraintGreaterThanOrEqualToConstant:", 36.0);

  *(_QWORD *)(v76 + 48) = v84;
  v94 = (void *)v76;
  specialized Array._endMutation()(v85);
  v86 = v94;
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v75, "activateConstraints:", isa, swift_bridgeObjectRelease(v86).n128_f64[0]);

  return v43;
}

void sub_D39E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  NSString v45;
  id v46;
  void *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  NSString v51;
  void *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[5];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v5);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkRequest(0);
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v57 - v19;
  LegacyLockup.icon.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v21 = sub_44C28((uint64_t)v12);
  }
  else
  {
    sub_2376C((uint64_t)v12, (uint64_t)v20);
    v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph);
    if (v22)
    {
      v23 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkDimension);
      v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkView);
      swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph));
      sub_E7A0((uint64_t)v20, v23, v23);
      v25 = *(_BYTE *)(v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style);
      *(_BYTE *)(v24 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style) = 1;
      LOBYTE(v62[0]) = v25;
      sub_EB33C((unsigned __int8 *)v62);
      sub_27E84((uint64_t)v20, (uint64_t)v16);
      v26 = type metadata accessor for CropCode(0);
      v27 = v59;
      v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v59, 1, 1, v26);
      v29 = static Logger.artwork.getter(v28);
      v30 = static os_log_type_t.info.getter(v29);
      SignpostAndLogTrace(domain:level:)(v62, v4, v30);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v4, v58);
      v31 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v31, "scale");
      v33 = v32;

      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v16, 1, 0, v27, 0, _swiftEmptyArrayStorage, v62, v23, v23, v33);
      v34 = type metadata accessor for ArtworkView(0);
      v35 = sub_239FC((unint64_t *)&qword_3D22B8, 255, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v9, v22, 0, v34, v35);
      v36 = swift_release(v22);
      (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v9, v61, v36);
    }
    v21 = sub_239C0((uint64_t)v20);
  }
  LegacyLockup.ordinal.getter(v21);
  if (v37)
  {
    v38 = v37;
    v39 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel);
    objc_msgSend(v39, "setHidden:", 0);
    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v39, "setText:", v40, swift_bridgeObjectRelease(v38).n128_f64[0]);

  }
  else
  {
    v41 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel), "setHidden:", 1);
  }
  LegacyLockup.eyebrow.getter(v41);
  if (v42)
  {
    v43 = v42;
    v44 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel);
    objc_msgSend(v44, "setHidden:", 0);
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v44, "setText:", v45, swift_bridgeObjectRelease(v43).n128_f64[0]);

  }
  else
  {
    v46 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel), "setHidden:", 1);
  }
  v47 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titleLabel);
  LegacyLockup.title.getter(v46);
  if (v48)
  {
    v50 = v48;
    v51 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v49 = swift_bridgeObjectRelease(v50).n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v47, "setText:", v51, v49, v57, v58);

  v52 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_subtitleLabel);
  LegacyLockup.subtitle.getter();
  if (v53)
  {
    v55 = v53;
    v56 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v55).n128_u64[0];
  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v52, "setText:", v56, v54);

}

uint64_t type metadata accessor for CircleListCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14CircleListCell);
}

void sub_D3F7C()
{
  sub_D39E0();
}

uint64_t sub_D3F84()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph));
}

uint64_t sub_D3F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_D3FC8(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D5518, v3, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4E98);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_D4020()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000000030C020, "ShelfKitCollectionViews/CircleListCell.swift", 44, 2, 110, 0);
  __break(1u);
}

uint64_t sub_D4078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D5518, a2, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4E98);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_D40AC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D54F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4D48);
}

uint64_t sub_D40D8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5500, a2, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4DD0);
}

uint64_t sub_D4104(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5508, a2, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4DA8);
}

uint64_t sub_D4130(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5510, a2, (uint64_t (*)(uint64_t))type metadata accessor for CircleListCell, (uint64_t)&unk_2F4E00);
}

uint64_t sub_D415C()
{
  return sub_239FC(&qword_3D0C68, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
}

void sub_D418C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_hStackView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setAxis:", 0);
  objc_msgSend(v3, "setAlignment:", 3);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setSpacing:", 10.0);
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkView;
  v5 = type metadata accessor for ArtworkView(0);
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  v8 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v9 = *(void **)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_QWORD *)v8 = v7;
  *(_OWORD *)(v8 + 8) = xmmword_2F4D00;
  *((_QWORD *)v8 + 3) = 0x4000000000000000;
  v10 = v7;

  sub_E9020();
  *(_QWORD *)&v1[v4] = v6;
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_ordinalLabel;
  *(_QWORD *)&v1[v11] = sub_D2D10();
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titlesVStackView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setAlignment:", 1);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setBaselineRelativeArrangement:", 1);
  *(_QWORD *)&v1[v12] = v13;
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_eyebrowLabel;
  *(_QWORD *)&v1[v14] = sub_D2E3C();
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_titleLabel;
  *(_QWORD *)&v1[v15] = sub_D2F84();
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_subtitleLabel;
  *(_QWORD *)&v1[v16] = sub_D30CC();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_artworkDimension] = 0x4056800000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14CircleListCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/CircleListCell.swift", 44, 2, 104, 0);
  __break(1u);
}

unint64_t sub_D4404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55B0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_36BA4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D451C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55C8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = *(v6 - 1);
    v9 = v7;
    result = sub_36C08((uint64_t)v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D4624(uint64_t a1)
{
  return sub_D465C(a1, &qword_3D55A0, &qword_3D55A8, sub_36C54);
}

unint64_t sub_D4640(uint64_t a1)
{
  return sub_D465C(a1, &qword_3D5590, &qword_3D5598, sub_36C54);
}

unint64_t sub_D465C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_D184(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_1D65C(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D4784(uint64_t a1)
{
  return sub_D465C(a1, &qword_3D5520, &qword_3D5528, (uint64_t (*)(uint64_t))sub_36C54);
}

unint64_t sub_D47A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5588);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_unknownObjectRetain(v7);
    result = sub_36C54(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D48A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5578);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5580);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_D184(v13, (uint64_t)v5, &qword_3D5578);
    result = sub_36CE4((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for FlowPresentationContext(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_D4A3C(uint64_t a1)
{
  return sub_D465C(a1, &qword_3D5548, &qword_3D5550, sub_36C54);
}

unint64_t sub_D4A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5530);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *(_BYTE *)v6;
    v8 = *(v6 - 1);
    result = sub_36E48((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    *(_BYTE *)(v4[7] + result) = v7;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D4B54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_D184(v7, (uint64_t)&v16, &qword_3D51A8);
    v8 = v16;
    v9 = v17;
    result = sub_36BA4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1D65C(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D4C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D55B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D55C0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_D184(v13, (uint64_t)v5, &qword_3D55B8);
    v15 = *v5;
    v16 = v5[1];
    result = sub_36BA4(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for ShelvesViewProvider.Supplementaries.Header(0);
    result = sub_1B79C(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, type metadata accessor for ShelvesViewProvider.Supplementaries.Header);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_D4E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5538);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5540);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_D184(v13, (uint64_t)v5, &qword_3D5538);
    v15 = *v5;
    result = sub_36FE4(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for UberScrollConfiguration(0);
    result = sub_1B79C(v10, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, type metadata accessor for UberScrollConfiguration);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_D4FC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D62C0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_36BA4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D50D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5558);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 1);
    v8 = *v6;
    sub_3D600(v7);
    v9 = v8;
    result = sub_36F2C(v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v7;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D51DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5560);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *(v6 - 1);
    v7 = *v6;
    sub_3D600(v8);
    sub_3D600(v7);
    result = sub_36F2C(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v14;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_D52E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D5568);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *((_BYTE *)v6 - 8);
    v14 = *(_OWORD *)v6;
    v8 = *v6;
    result = sub_36D7C(v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v7;
    *(_OWORD *)(v4[7] + 16 * result) = v14;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double String.height(for:font:numberOfLines:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, double a5)
{
  uint64_t v5;
  id v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  NSString *v15;
  id v16;
  NSString *v17;
  void *v18;
  id v19;
  unint64_t v20;
  id v21;
  double Height;
  uint64_t v24;
  CGRect v25;

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0.0;
  v11 = objc_msgSend(objc_allocWithZone((Class)NSStringDrawingContext), "init");
  objc_msgSend(v11, "setMaximumNumberOfLines:", a2);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E1ED0);
  inited = swift_initStackObject(v12, &v24);
  *(_OWORD *)(inited + 16) = xmmword_2EFA20;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = NSParagraphStyleAttributeName;
  v14 = qword_3CF0D8;
  v15 = NSFontAttributeName;
  v16 = a1;
  v17 = NSParagraphStyleAttributeName;
  if (v14 != -1)
    swift_once(&qword_3CF0D8, sub_28A30);
  v18 = (void *)qword_3FA958;
  *(_QWORD *)(inited + 56) = qword_3FA958;
  v19 = v18;
  v20 = sub_D47A0(inited);
  v21 = v11;
  v25.origin.x = sub_21A7CC(a3, a4, 1uLL, v20, v11, a5, 1.79769313e308);
  Height = CGRectGetHeight(v25);
  swift_bridgeObjectRelease(v20);

  return Height;
}

uint64_t sub_D556C(uint64_t result, uint64_t a2)
{
  if (a2 < result)
    return a2;
  return result;
}

id ContextMenuPreviewViewController.__allocating_init(preview:asPartOf:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_D9F34(a1, a2);
  swift_release(a2);
  swift_release(a1 & 0x3FFFFFFFFFFFFFFFLL);
  return v6;
}

uint64_t sub_D55D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  double v36;
  double v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  double v43;
  double v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[5];

  v56 = a2;
  v3 = type metadata accessor for Logger(0);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  __chkstk_darwin(v8);
  v53 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if ((_DWORD)v26 == enum case for CropCode.boundingBox(_:))
  {
    v27 = 6;
  }
  else
  {
    v28 = ArtworkCrop.preferredContentMode.getter(v26);
    v27 = ContentMode.viewContentMode.getter(v28);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView;
  v30 = v49;
  v31 = (double *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize);
  v32 = *(double *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize);
  v33 = *(double *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_preferredArtworkSize + 8);
  v34 = *(id *)(v49 + OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
  sub_E7A0((uint64_t)v23, v32, v33);

  objc_msgSend(*(id *)(v30 + v29), "setContentMode:", v27);
  v35 = *(void **)(v30 + v29);
  sub_27E84((uint64_t)v23, (uint64_t)v20);
  v36 = *v31;
  v37 = v31[1];
  v38 = v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v52, 1, 1, v10);
  v39 = v35;
  v40 = static Logger.artwork.getter(v39);
  v41 = static os_log_type_t.info.getter(v40);
  SignpostAndLogTrace(domain:level:)(v57, v5, v41);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v51);
  v42 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v42, "scale");
  v44 = v43;

  v45 = v53;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v20, v27, 0, v38, 0, _swiftEmptyArrayStorage, v57, v36, v37, v44);
  v46 = type metadata accessor for ArtworkView(0);
  v47 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v45, v56, 0, v46, v47);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v55);
  return sub_239C0((uint64_t)v23);
}

uint64_t sub_D59A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  double v40;
  double v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[5];

  v3 = v2;
  v48 = a2;
  v44 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v45 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkRequest(0);
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ArtworkModel(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v44 - v21;
  sub_DA064(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_44C28((uint64_t)v15);
  v24 = sub_2376C((uint64_t)v15, (uint64_t)v22);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style) & 1) != 0)
  {
    v25 = ArtworkCrop.preferredContentMode.getter(v24);
    v26 = ContentMode.viewContentMode.getter(v25);
    v27 = *(id *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback);
    v28 = sub_2C4C40();
    sub_E7A0((uint64_t)v22, v28, v29);

    objc_msgSend(v27, "setContentMode:", v26);
    sub_27E84((uint64_t)v22, (uint64_t)v19);
    v30 = v27;
    v31 = sub_2C4C40();
    v33 = v32;
    v34 = type metadata accessor for CropCode(0);
    v35 = v45;
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v45, 1, 1, v34);
    v37 = static Logger.artwork.getter(v36);
    v38 = static os_log_type_t.info.getter(v37);
    SignpostAndLogTrace(domain:level:)(v49, v7, v38);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v44);
    v39 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v39, "scale");
    v41 = v40;

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v19, v26, 0, v35, 0, _swiftEmptyArrayStorage, v49, v31, v33, v41);
    v42 = type metadata accessor for ArtworkView(0);
    v43 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v12, v48, 0, v42, v43);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
  }
  return sub_239C0((uint64_t)v22);
}

uint64_t sub_D5D10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  double v40;
  double v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];

  v52 = a2;
  v3 = type metadata accessor for Logger(0);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v48 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v49 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)v45 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == enum case for CropCode.boundingBox(_:))
  {
    v26 = 5;
  }
  else
  {
    v27 = ArtworkCrop.preferredContentMode.getter();
    v26 = ContentMode.viewContentMode.getter(v27);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = objc_retain(*(id *)(v45[1]
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkView));
  v29 = sub_139748();
  sub_E7A0((uint64_t)v23, v29, v30);

  objc_msgSend(v28, "setContentMode:", v26);
  sub_27E84((uint64_t)v23, (uint64_t)v20);
  v31 = v28;
  v32 = sub_139748();
  v34 = v33;
  v35 = v48;
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v48, 1, 1, v10);
  v37 = static Logger.artwork.getter(v36);
  v38 = static os_log_type_t.info.getter(v37);
  SignpostAndLogTrace(domain:level:)(v53, v5, v38);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v5, v47);
  v39 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v39, "scale");
  v41 = v40;

  v42 = v49;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v20, v26, 0, v35, 0, _swiftEmptyArrayStorage, v53, v32, v34, v41);
  v43 = type metadata accessor for ArtworkView(0);
  v44 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v42, v52, 0, v43, v44);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v51);
  return sub_239C0((uint64_t)v23);
}

uint64_t sub_D60E4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  id v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  double v67;
  double v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];

  v3 = v2;
  v75 = a2;
  v5 = type metadata accessor for Logger(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkRequest(0);
  v73 = *(_QWORD *)(v11 - 8);
  v74 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v71 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  v26 = ArtworkCrop.preferredContentMode.getter(v25);
  v27 = ContentMode.viewContentMode.getter(v26);
  v28 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView];
  v29 = objc_msgSend(v3, "contentView");
  objc_msgSend(v29, "bounds");
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  objc_msgSend(v29, "layoutMargins");
  v39 = v38;
  v41 = v40;

  UIEdgeInsetsInsetRect(v31, v33, v35, v37, v39, v41);
  sub_E7A0((uint64_t)v23, v42, v43);

  objc_msgSend(v28, "setContentMode:", v27);
  sub_27E84((uint64_t)v23, (uint64_t)v20);
  v44 = v28;
  v45 = objc_msgSend(v3, "contentView");
  objc_msgSend(v45, "bounds");
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  objc_msgSend(v45, "layoutMargins");
  v55 = v54;
  v57 = v56;

  UIEdgeInsetsInsetRect(v47, v49, v51, v53, v55, v57);
  v59 = v58;
  v61 = v60;
  v62 = type metadata accessor for CropCode(0);
  v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v10, 1, 1, v62);
  v64 = static Logger.artwork.getter(v63);
  v65 = static os_log_type_t.info.getter(v64);
  SignpostAndLogTrace(domain:level:)(v76, v7, v65);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v7, v72);
  v66 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v66, "scale");
  v68 = v67;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v20, v27, 0, v10, 0, _swiftEmptyArrayStorage, v76, v59, v61, v68);
  v69 = type metadata accessor for ArtworkView(0);
  v70 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v13, v75, 0, v69, v70);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v13, v74);
  return sub_239C0((uint64_t)v23);
}

void sub_D6530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  id v29;
  char *v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  char *v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  double v48;
  double v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[5];

  v3 = v2;
  v58 = a2;
  v5 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkRequest(0);
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v52 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_44C28((uint64_t)v16);
    return;
  }
  sub_2376C((uint64_t)v16, (uint64_t)v23);
  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView;
  v25 = *(_BYTE **)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (!v25)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((v25[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_style] & 1) == 0)
  {
LABEL_9:
    sub_239C0((uint64_t)v23);
    return;
  }
  v26 = v25;
  v27 = ArtworkCrop.preferredContentMode.getter(v26);
  v53 = ContentMode.viewContentMode.getter(v27);

  v28 = *(char **)(v3 + v24);
  if (!v28)
    goto LABEL_11;
  v29 = *(id *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback];
  v30 = v28;
  v31 = sub_2C4C40();
  v33 = v32;

  sub_E7A0((uint64_t)v23, v31, v33);
  v34 = *(_QWORD *)(v3 + v24);
  if (!v34)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v35 = v53;
  objc_msgSend(*(id *)(v34 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback), "setContentMode:", v53);
  v36 = *(char **)(v3 + v24);
  if (v36)
  {
    v37 = *(void **)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback];
    sub_27E84((uint64_t)v23, (uint64_t)v20);
    v38 = v37;
    v39 = v36;
    v40 = sub_2C4C40();
    v42 = v41;

    v43 = type metadata accessor for CropCode(0);
    v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v10, 1, 1, v43);
    v45 = static Logger.artwork.getter(v44);
    v46 = static os_log_type_t.info.getter(v45);
    SignpostAndLogTrace(domain:level:)(v59, v7, v46);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v55);
    v47 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v47, "scale");
    v49 = v48;

    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v20, v35, 0, v10, 0, _swiftEmptyArrayStorage, v59, v40, v42, v49);
    v50 = type metadata accessor for ArtworkView(0);
    v51 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v13, v58, 0, v50, v51);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v57);
    goto LABEL_9;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_D690C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  void *v34;
  uint64_t v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  double v46;
  double v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[5];

  v3 = v2;
  v59 = a2;
  v5 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkRequest(0);
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  __chkstk_darwin(v10);
  v56 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CropCode(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ArtworkModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v52 = (uint64_t)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v51 - v23;
  sub_DA064(a1, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_44C28((uint64_t)v18);
  v26 = sub_2376C((uint64_t)v18, (uint64_t)v24);
  ArtworkCrop.cropCode.getter(v26);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if ((_DWORD)v27 == enum case for CropCode.boundingBox(_:))
  {
    v28 = 2;
  }
  else
  {
    v29 = ArtworkCrop.preferredContentMode.getter(v27);
    v28 = ContentMode.viewContentMode.getter(v29);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView;
  v31 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView];
  objc_msgSend(v3, "bounds");
  sub_E7A0((uint64_t)v24, v32, v33);

  objc_msgSend(*(id *)&v3[v30], "setContentMode:", v28);
  v34 = *(void **)&v3[v30];
  v35 = v52;
  sub_27E84((uint64_t)v24, v52);
  v36 = v34;
  objc_msgSend(v3, "bounds");
  v38 = v37;
  v40 = v39;
  v41 = v55;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v55, 1, 1, v12);
  v43 = static Logger.artwork.getter(v42);
  v44 = static os_log_type_t.info.getter(v43);
  SignpostAndLogTrace(domain:level:)(v60, v7, v44);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v54);
  v45 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v45, "scale");
  v47 = v46;

  v48 = v56;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, v28, 0, v41, 0, _swiftEmptyArrayStorage, v60, v38, v40, v47);
  v49 = type metadata accessor for ArtworkView(0);
  v50 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v48, v59, 0, v49, v50);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v58);
  return sub_239C0((uint64_t)v24);
}

id sub_D6CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD v56[5];

  v54 = a2;
  v3 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return (id)sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if ((_DWORD)result == enum case for CropCode.boundingBox(_:))
  {
    v26 = 6;
  }
  else
  {
    v27 = ArtworkCrop.preferredContentMode.getter(result);
    v26 = ContentMode.viewContentMode.getter(v27);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = (uint64_t)v55;
  v55 = v20;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView;
  v30 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView);
  if (!v30)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v26;
  v32 = qword_3CF3D8;
  v33 = v30;
  if (v32 != -1)
    swift_once(&qword_3CF3D8, sub_11B828);
  sub_E7A0((uint64_t)v23, *(double *)&xmmword_3D7548, *((double *)&xmmword_3D7548 + 1));

  result = *(id *)(v28 + v29);
  if (!result)
    goto LABEL_13;
  result = objc_msgSend(result, "setContentMode:", v31);
  v34 = *(void **)(v28 + v29);
  if (v34)
  {
    v35 = (uint64_t)v55;
    sub_27E84((uint64_t)v23, (uint64_t)v55);
    v36 = xmmword_3D7548;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v50, 1, 1, v10);
    v38 = v34;
    v39 = static Logger.artwork.getter(v38);
    v40 = static os_log_type_t.info.getter(v39);
    SignpostAndLogTrace(domain:level:)(v56, v5, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
    v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = v51;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, v31, 0, v37, 0, _swiftEmptyArrayStorage, v56, *(double *)&v36, *((double *)&v36 + 1), v43);
    v45 = type metadata accessor for ArtworkView(0);
    v46 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v44, v54, 0, v45, v46);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    return (id)sub_239C0((uint64_t)v23);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_D7100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];

  v3 = v2;
  v43 = a2;
  v5 = type metadata accessor for Logger(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkRequest(0);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v39 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  v26 = ArtworkCrop.preferredContentMode.getter(v25);
  v27 = ContentMode.viewContentMode.getter(v26);
  if (*(_BYTE *)(v3 + qword_3D96D0))
    v28 = 23.0;
  else
    v28 = 57.0;
  v29 = *(id *)(v3 + qword_3D9730);
  sub_E7A0((uint64_t)v23, v28, v28);

  objc_msgSend(v29, "setContentMode:", v27);
  sub_27E84((uint64_t)v23, (uint64_t)v20);
  v30 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 1, 1, v30);
  v31 = v29;
  v32 = static Logger.artwork.getter(v31);
  v33 = static os_log_type_t.info.getter(v32);
  SignpostAndLogTrace(domain:level:)(v44, v7, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
  v34 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v20, v27, 0, v10, 0, _swiftEmptyArrayStorage, v44, v28, v28, v36);
  v37 = type metadata accessor for ArtworkView(0);
  v38 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v13, v43, 0, v37, v38);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
  return sub_239C0((uint64_t)v23);
}

uint64_t sub_D7454(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  id v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  int v41;
  id v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  double v55;
  double v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[6];

  v3 = v2;
  v76 = a2;
  v5 = type metadata accessor for ArtworkAspectRule(0);
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  __chkstk_darwin(v5);
  v77 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v78 = (char *)&v67 - v8;
  v9 = type metadata accessor for Logger(0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v12);
  v72 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkRequest(0);
  v74 = *(_QWORD *)(v14 - 8);
  v75 = v14;
  __chkstk_darwin(v14);
  v73 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ShelfCellHeight(0);
  v16 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ArtworkModel(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v67 - v27;
  sub_DA064(a1, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    return sub_44C28((uint64_t)v21);
  v30 = sub_2376C((uint64_t)v21, (uint64_t)v28);
  v31 = ArtworkCrop.preferredContentMode.getter(v30);
  v69 = ContentMode.viewContentMode.getter(v31);
  v32 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style;
  v33 = v3[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style];
  v34 = *(id *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView];
  v35 = objc_msgSend(v3, "contentView");
  objc_msgSend(v35, "bounds");
  v37 = v36;
  v39 = v38;

  if (v33 != 3)
  {
    v40 = ShelfCellHeight.init(fractionOfWidth:absolute:)(0.5625, 0.0);
    v37 = ShelfCellHeight.widthFor(height:)(v40, v39);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v68);
  }
  sub_E7A0((uint64_t)v28, v37, v39);

  objc_msgSend(v34, "setContentMode:", v69);
  sub_27E84((uint64_t)v28, (uint64_t)v25);
  v41 = v3[v32];
  v42 = v34;
  v43 = objc_msgSend(v3, "contentView");
  objc_msgSend(v43, "bounds");
  v45 = v44;
  v47 = v46;

  if (v41 != 3)
  {
    v48 = ShelfCellHeight.init(fractionOfWidth:absolute:)(0.5625, 0.0);
    v45 = ShelfCellHeight.widthFor(height:)(v48, v47);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v68);
  }
  v49 = type metadata accessor for CropCode(0);
  v50 = v72;
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v72, 1, 1, v49);
  v52 = static Logger.artwork.getter(v51);
  v53 = static os_log_type_t.info.getter(v52);
  SignpostAndLogTrace(domain:level:)(v81, v11, v53);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v71);
  v54 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v54, "scale");
  v56 = v55;

  v57 = v73;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v25, v69, 0, v50, 0, _swiftEmptyArrayStorage, v81, v45, v47, v56);
  v58 = type metadata accessor for ArtworkView(0);
  v59 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v57, v76, 0, v58, v59);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v75);
  v61 = v78;
  v60 = v79;
  v62 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for ArtworkAspectRule.aspectFill(_:), v80);
  v63 = (char *)v42;
  objc_msgSend(v63, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v63, "setContentMode:", 5);
  v64 = v77;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v77, v61, v62);
  v65 = &v63[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v66 = swift_beginAccess(&v63[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v81, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v60 + 40))(v65, v64, v62, v66);
  swift_endAccess(v81);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  return sub_239C0((uint64_t)v28);
}

id sub_D79E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD v56[5];

  v54 = a2;
  v3 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return (id)sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if ((_DWORD)result == enum case for CropCode.boundingBox(_:))
  {
    v26 = 6;
  }
  else
  {
    v27 = ArtworkCrop.preferredContentMode.getter(result);
    v26 = ContentMode.viewContentMode.getter(v27);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = (uint64_t)v55;
  v55 = v20;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback;
  v30 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback);
  if (!v30)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v26;
  v32 = qword_3CFD40;
  v33 = v30;
  if (v32 != -1)
    swift_once(&qword_3CFD40, sub_2AA1A0);
  sub_E7A0((uint64_t)v23, *(double *)&xmmword_3E0750, *((double *)&xmmword_3E0750 + 1));

  result = *(id *)(v28 + v29);
  if (!result)
    goto LABEL_13;
  result = objc_msgSend(result, "setContentMode:", v31);
  v34 = *(void **)(v28 + v29);
  if (v34)
  {
    v35 = (uint64_t)v55;
    sub_27E84((uint64_t)v23, (uint64_t)v55);
    v36 = xmmword_3E0750;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v50, 1, 1, v10);
    v38 = v34;
    v39 = static Logger.artwork.getter(v38);
    v40 = static os_log_type_t.info.getter(v39);
    SignpostAndLogTrace(domain:level:)(v56, v5, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
    v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = v51;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, v31, 0, v37, 0, _swiftEmptyArrayStorage, v56, *(double *)&v36, *((double *)&v36 + 1), v43);
    v45 = type metadata accessor for ArtworkView(0);
    v46 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v44, v54, 0, v45, v46);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    return (id)sub_239C0((uint64_t)v23);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_D7DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];

  v43 = a2;
  v40 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkRequest(0);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkModel(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  sub_DA064(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_44C28((uint64_t)v14);
  v23 = sub_2376C((uint64_t)v14, (uint64_t)v21);
  v24 = ArtworkCrop.preferredContentMode.getter(v23);
  v25 = ContentMode.viewContentMode.getter(v24);
  v26 = qword_3CF340;
  v27 = *(id *)(v39 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView);
  if (v26 != -1)
    swift_once(&qword_3CF340, sub_1013E4);
  sub_E7A0((uint64_t)v21, *(double *)&qword_3D67E8, unk_3D67F0);

  objc_msgSend(v27, "setContentMode:", v25);
  sub_27E84((uint64_t)v21, (uint64_t)v18);
  v28 = *(double *)&qword_3D67E8;
  v29 = unk_3D67F0;
  v30 = type metadata accessor for CropCode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 1, 1, v30);
  v31 = v27;
  v32 = static Logger.artwork.getter(v31);
  v33 = static os_log_type_t.info.getter(v32);
  SignpostAndLogTrace(domain:level:)(v44, v5, v33);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v40);
  v34 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v18, v25, 0, v8, 0, _swiftEmptyArrayStorage, v44, v28, v29, v36);
  v37 = type metadata accessor for ArtworkView(0);
  v38 = sub_54A90();
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v11, v43, 0, v37, v38);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v42);
  return sub_239C0((uint64_t)v21);
}

id sub_D8154(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD v56[5];

  v54 = a2;
  v3 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return (id)sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if ((_DWORD)result == enum case for CropCode.boundingBox(_:))
  {
    v26 = 6;
  }
  else
  {
    v27 = ArtworkCrop.preferredContentMode.getter(result);
    v26 = ContentMode.viewContentMode.getter(v27);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = (uint64_t)v55;
  v55 = v20;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback;
  v30 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback);
  if (!v30)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v26;
  v32 = qword_3CF398;
  v33 = v30;
  if (v32 != -1)
    swift_once(&qword_3CF398, sub_11139C);
  sub_E7A0((uint64_t)v23, *(double *)&xmmword_3D7010, *((double *)&xmmword_3D7010 + 1));

  result = *(id *)(v28 + v29);
  if (!result)
    goto LABEL_13;
  result = objc_msgSend(result, "setContentMode:", v31);
  v34 = *(void **)(v28 + v29);
  if (v34)
  {
    v35 = (uint64_t)v55;
    sub_27E84((uint64_t)v23, (uint64_t)v55);
    v36 = xmmword_3D7010;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v50, 1, 1, v10);
    v38 = v34;
    v39 = static Logger.artwork.getter(v38);
    v40 = static os_log_type_t.info.getter(v39);
    SignpostAndLogTrace(domain:level:)(v56, v5, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
    v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = v51;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, v31, 0, v37, 0, _swiftEmptyArrayStorage, v56, *(double *)&v36, *((double *)&v36 + 1), v43);
    v45 = type metadata accessor for ArtworkView(0);
    v46 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v44, v54, 0, v45, v46);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    return (id)sub_239C0((uint64_t)v23);
  }
LABEL_14:
  __break(1u);
  return result;
}

id sub_D8560(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD v56[5];

  v54 = a2;
  v3 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CropCode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ArtworkModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  sub_DA064(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return (id)sub_44C28((uint64_t)v16);
  v25 = sub_2376C((uint64_t)v16, (uint64_t)v23);
  ArtworkCrop.cropCode.getter(v25);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if ((_DWORD)result == enum case for CropCode.boundingBox(_:))
  {
    v26 = 6;
  }
  else
  {
    v27 = ArtworkCrop.preferredContentMode.getter(result);
    v26 = ContentMode.viewContentMode.getter(v27);
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v28 = (uint64_t)v55;
  v55 = v20;
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView;
  v30 = *(void **)(v28 + OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
  if (!v30)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v26;
  v32 = qword_3CFC18;
  v33 = v30;
  if (v32 != -1)
    swift_once(&qword_3CFC18, sub_22817C);
  sub_E7A0((uint64_t)v23, *(double *)&xmmword_3DD8D8, *((double *)&xmmword_3DD8D8 + 1));

  result = *(id *)(v28 + v29);
  if (!result)
    goto LABEL_13;
  result = objc_msgSend(result, "setContentMode:", v31);
  v34 = *(void **)(v28 + v29);
  if (v34)
  {
    v35 = (uint64_t)v55;
    sub_27E84((uint64_t)v23, (uint64_t)v55);
    v36 = xmmword_3DD8D8;
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v50, 1, 1, v10);
    v38 = v34;
    v39 = static Logger.artwork.getter(v38);
    v40 = static os_log_type_t.info.getter(v39);
    SignpostAndLogTrace(domain:level:)(v56, v5, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
    v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = v51;
    ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, v31, 0, v37, 0, _swiftEmptyArrayStorage, v56, *(double *)&v36, *((double *)&v36 + 1), v43);
    v45 = type metadata accessor for ArtworkView(0);
    v46 = sub_54A90();
    ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v44, v54, 0, v45, v46);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    return (id)sub_239C0((uint64_t)v23);
  }
LABEL_14:
  __break(1u);
  return result;
}

id ContextMenuPreviewViewController.init(preview:asPartOf:)(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = sub_D9F34(a1, a2);
  swift_release(a2);
  swift_release(a1 & 0x3FFFFFFFFFFFFFFFLL);
  return v4;
}

void sub_D89D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  __int16 v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  double v18;
  double *v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v23;
  char v24;
  objc_super v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for ContextMenuPreviewViewController();
  v25.receiver = v0;
  v25.super_class = v5;
  objc_msgSendSuper2(&v25, "loadView");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preview];
  if (v9 >> 62)
  {
    swift_retain(v9 & 0x3FFFFFFFFFFFFFFFLL);
    if (v9 >> 62 == 1)
      v10 = 0;
    else
      v10 = 256;
    sub_D8D60(v10, v9 & 0x3FFFFFFFFFFFFFFFLL);
    *(_QWORD *)&v20 = swift_release(v9 & 0x3FFFFFFFFFFFFFFFLL).n128_u64[0];
  }
  else
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for EpisodeView(0));
    swift_retain(v9);
    v12 = sub_2C5CF8(196609);
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_objectGraph];
    sub_2C3504(v13);
    v24 = 2;
    sub_2C35BC(v9, &v24);
    swift_retain(v9);
    LegacyLockup.artwork.getter(v14);
    v15 = v9 & 0x3FFFFFFFFFFFFFFFLL;
    swift_release(v15);
    sub_D59A4((uint64_t)v4, v13);
    sub_44C28((uint64_t)v4);
    v16 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView] = v12;
    v17 = v12;

    v18 = sub_D91B0(v1, 196609);
    v19 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preferredLockupViewSize];
    *v19 = 0.0;
    v19[1] = v18;
    if (v18 > 0.0)
      v18 = v18
          + *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding]
          + *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding + 16];
    objc_msgSend(v1, "setPreferredContentSize:", 0.0, v18);
    swift_release(v15);

  }
  v21 = objc_msgSend(v1, "view", v20);
  if (!v21)
    goto LABEL_14;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView])
  {
    v22 = v21;
    objc_msgSend(v21, "addSubview:");

    return;
  }
LABEL_15:
  __break(1u);
}

id sub_D8C9C(char a1)
{
  return sub_D8CC0(a1, (SEL *)&selRef_viewWillAppear_);
}

id sub_D8CB4(char a1)
{
  return sub_D8CC0(a1, (SEL *)&selRef_viewWillDisappear_);
}

id sub_D8CC0(char a1, SEL *a2)
{
  void *v2;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ContextMenuPreviewViewController();
  return objc_msgSendSuper2(&v6, *a2, a1 & 1);
}

id sub_D8D14(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ContextMenuPreviewViewController();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

void sub_D8D60(__int16 a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  __int16 v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v28 = type metadata accessor for ShelfCellHeight(0);
  v6 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone((Class)type metadata accessor for LargeLockupView());
  v13 = a1 & 0x101;
  v14 = sub_1A9198(a1 & 0x101);
  v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_objectGraph];
  v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph];
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_objectGraph] = v15;
  swift_release(v16);
  swift_retain(v15);
  v17 = sub_1A8950();
  sub_262730(v15);

  v18 = *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_defaultMaxWidth];
  v19 = sub_1A7EF4(a2, v18);
  LegacyLockup.artwork.getter(v19);
  sub_D55D0((uint64_t)v11, v15);
  sub_44C28((uint64_t)v11);
  v20 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView] = v14;
  v21 = v14;

  v22 = objc_msgSend(v3, "traitCollection");
  sub_1A81C8(v13, v22);

  v23 = ShelfCellHeight.sizeFor(width:)(v18);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  v26 = (double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preferredLockupViewSize];
  *v26 = v23;
  v26[1] = v25;
  if (v23 > 0.0)
    v23 = v23
        + *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding + 8]
        + *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding + 24];
  if (v25 > 0.0)
    v25 = v25
        + *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding]
        + *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding + 16];
  objc_msgSend(v3, "setPreferredContentSize:", v23, v25);

}

void sub_D8FB8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ContextMenuPreviewViewController();
  objc_msgSendSuper2(&v13, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      objc_msgSend(v2, "setFrame:", UIEdgeInsetsInsetRect(v6, v8, v10, v12, *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding], *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding + 8]));
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void ContextMenuPreviewViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.ContextMenuPreviewViewController", 56, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id ContextMenuPreviewViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenuPreviewViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_D91B0(void *a1, int a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  id v50;
  id v51;
  id v52;
  double v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  char **p_name;
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  double v123;
  double v124;
  double v125;
  id v126;
  char v127;
  double v128;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  char v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  void *v160;
  char v161;
  char v162;
  uint64_t v163;
  int v164;
  id v165;
  char v166;
  char v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int16 v173;
  unsigned __int16 v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  id v183;
  id v184;
  uint64_t v186;
  uint64_t v187;
  unsigned __int16 v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  void *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int16 v213;
  _QWORD v214[11];
  char v215;
  char v216;

  if (qword_3CF5B0 != -1)
    swift_once(&qword_3CF5B0, sub_140BEC);
  v3 = (void *)qword_3FC030;
  v2 = *(_QWORD *)algn_3FC038;
  v4 = unk_3FC048;
  v136 = qword_3FC040;
  v5 = qword_3FC050;
  v176 = (void *)qword_3FC060;
  v183 = (id)unk_3FC058;
  v6 = qword_3FC070;
  v169 = qword_3FC068;
  v7 = qword_3FC078;
  v8 = qword_3FC080;
  v146 = qword_3FC070;
  v151 = qword_3FC078;
  v158 = qword_3FC080;
  v9 = byte_3FC088;
  v162 = byte_3FC088;
  v10 = byte_3FC089;
  v166 = byte_3FC089;
  v11 = (void *)objc_opt_self(UIContentSizeCategoryPreference);
  v130 = v9;
  v12 = v3;
  v142 = v3;
  sub_DDA0(v3, v2, v136, v4, v5, (char)v183, v176, v169, v6, v7, v8, v130, v10);
  v196 = v11;
  v13 = objc_msgSend(v11, "system");
  v14 = objc_msgSend(v13, "preferredContentSizeCategory");

  v193 = (id)objc_opt_self(UITraitCollection);
  v15 = objc_msgSend(v193, "traitCollectionWithPreferredContentSizeCategory:", v14);

  v199 = v12;
  v200 = v2;
  v201 = v136;
  v202 = v4;
  v203 = v5;
  v204 = (uint64_t)v183;
  v205 = v176;
  v206 = v169;
  v207 = v146;
  v208 = v151;
  v209 = v158;
  LOBYTE(v210) = v162;
  BYTE1(v210) = v166;
  v16 = sub_1D5728((uint64_t)&v199, v15);
  v189 = (id)objc_opt_self(UIFont);
  v165 = objc_msgSend(v189, "fontWithDescriptor:size:", v16, 0.0);

  sub_DCC8(v142, v2, v136, v4, v5, (char)v183, v176, v169, v146, v151, v158, v162, v166);
  if (qword_3CF5B8 != -1)
    swift_once(&qword_3CF5B8, sub_140C98);
  v17 = qword_3FC090;
  v18 = *(_QWORD *)algn_3FC098;
  v170 = qword_3FC0A0;
  v177 = qword_3FC0A8;
  v19 = qword_3FC0B0;
  v147 = (void *)qword_3FC090;
  v152 = *(_QWORD *)byte_3FC0B8;
  v20 = qword_3FC0C0;
  v163 = qword_3FC0C8;
  v21 = qword_3FC0D0;
  v22 = qword_3FC0D8;
  v23 = qword_3FC0E0;
  v167 = word_3FC0E8;
  v24 = HIBYTE(word_3FC0E8);
  v139 = qword_3FC0B0;
  v143 = (void *)qword_3FC0C0;
  sub_DDA0((void *)qword_3FC090, *(uint64_t *)algn_3FC098, qword_3FC0A0, qword_3FC0A8, qword_3FC0B0, byte_3FC0B8[0], (void *)qword_3FC0C0, qword_3FC0C8, qword_3FC0D0, qword_3FC0D8, qword_3FC0E0, word_3FC0E8, SHIBYTE(word_3FC0E8));
  v25 = objc_msgSend(v196, "system");
  v26 = objc_msgSend(v25, "preferredContentSizeCategory");

  v27 = objc_msgSend(v193, "traitCollectionWithPreferredContentSizeCategory:", v26);
  v199 = (void *)v17;
  v200 = v18;
  v201 = v170;
  v202 = v177;
  v203 = v19;
  v204 = v152;
  v205 = (void *)v20;
  v206 = v163;
  v207 = v21;
  v208 = v22;
  v209 = v23;
  LOBYTE(v210) = v167;
  BYTE1(v210) = v24;
  v28 = sub_1D5728((uint64_t)&v199, v27);
  v184 = objc_msgSend(v189, "fontWithDescriptor:size:", v28, 0.0);

  sub_DCC8(v147, v18, v170, v177, v139, v152, v143, v163, v21, v22, v23, v167, v24);
  v164 = a2 & 0xFF0101;
  sub_2C7BA8(a1, a2 & 0xFF0101, (uint64_t)&v199);
  v29 = v199;
  v30 = v200;
  v137 = v200;
  v140 = v199;
  v32 = v201;
  v31 = v202;
  v133 = v201;
  v33 = v205;
  v171 = v204;
  v178 = v203;
  v35 = v206;
  v34 = v207;
  v36 = v208;
  v153 = v209;
  LOBYTE(v147) = v210;
  LOBYTE(v143) = BYTE1(v210);
  v37 = objc_msgSend(v196, "system");
  v38 = objc_msgSend(v37, "preferredContentSizeCategory");

  v39 = objc_msgSend(v193, "traitCollectionWithPreferredContentSizeCategory:", v38);
  v214[0] = v29;
  v214[1] = v30;
  v214[2] = v32;
  v214[3] = v31;
  v214[4] = v178;
  v214[5] = v171;
  v214[6] = v33;
  v214[7] = v35;
  v214[8] = v34;
  v214[9] = v36;
  v214[10] = v153;
  v215 = (char)v147;
  v216 = (char)v143;
  v40 = sub_1D5728((uint64_t)v214, v39);
  v168 = objc_msgSend(v189, "fontWithDescriptor:size:", v40, 0.0);

  sub_DCC8(v140, v137, v133, v31, v178, v171, v33, v35, v34, v36, v153, (char)v147, (char)v143);
  if (qword_3CF5D0 != -1)
    swift_once(&qword_3CF5D0, sub_140E9C);
  v41 = qword_3FC1B0;
  v42 = *(_QWORD *)algn_3FC1B8;
  v172 = qword_3FC1C0;
  v179 = qword_3FC1C8;
  v43 = qword_3FC1D0;
  v44 = qword_3FC1E0;
  v144 = *(_QWORD *)byte_3FC1D8;
  v148 = qword_3FC1E8;
  v45 = qword_3FC1F0;
  v46 = qword_3FC1F8;
  v47 = qword_3FC200;
  v154 = word_3FC208;
  v48 = HIBYTE(word_3FC208);
  v138 = (void *)qword_3FC1E0;
  v141 = (void *)qword_3FC1B0;
  v134 = qword_3FC1D0;
  sub_DDA0((void *)qword_3FC1B0, *(uint64_t *)algn_3FC1B8, qword_3FC1C0, qword_3FC1C8, qword_3FC1D0, byte_3FC1D8[0], (void *)qword_3FC1E0, qword_3FC1E8, qword_3FC1F0, qword_3FC1F8, qword_3FC200, word_3FC208, SHIBYTE(word_3FC208));
  v49 = objc_msgSend(v196, "system");
  v50 = objc_msgSend(v49, "preferredContentSizeCategory");

  v51 = objc_msgSend(v193, "traitCollectionWithPreferredContentSizeCategory:", v50);
  v199 = (void *)v41;
  v200 = v42;
  v201 = v172;
  v202 = v179;
  v203 = v43;
  v204 = v144;
  v205 = (void *)v44;
  v206 = v148;
  v207 = v45;
  v208 = v46;
  v209 = v47;
  LOBYTE(v210) = v154;
  BYTE1(v210) = v48;
  v52 = sub_1D5728((uint64_t)&v199, v51);
  v197 = objc_msgSend(v189, "fontWithDescriptor:size:", v52, 0.0);

  sub_DCC8(v141, v42, v172, v179, v134, v144, v138, v148, v45, v46, v47, v154, v48);
  v53 = 1.0;
  if (BYTE2(a2) != 1)
  {
    v54 = sub_1FEB8();
    v53 = 2.0;
    if ((static UITraitCollection.interfaceIdiomIsMac.getter(v54) & 1) == 0)
    {
      if (BYTE2(a2) == 2)
        v53 = 1.0;
      else
        v53 = 2.0;
    }
  }
  v55 = sub_1FEB8();
  v56 = static UITraitCollection.interfaceIdiomIsMac.getter(v55);
  if ((v56 & 1) != 0)
  {
    if (BYTE2(a2) != 1 && (a2 & 0x101) != 1)
      goto LABEL_15;
  }
  else if (!BYTE2(a2))
  {
LABEL_15:
    v57 = 1;
    goto LABEL_18;
  }
  v57 = (a2 & 0xFD0000) == 0;
LABEL_18:
  v58 = static UITraitCollection.interfaceIdiomIsMac.getter(v56);
  if (BYTE2(a2) == 1)
  {
    v62 = 2;
  }
  else
  {
    if (BYTE2(a2) == 2)
      v59 = -2;
    else
      v59 = -3;
    if (((BYTE2(a2) == 2) & (v58 ^ 1)) != 0)
      v60 = 3;
    else
      v60 = 4;
    v58 = static UITraitCollection.interfaceIdiomIsMac.getter(v58);
    if ((v58 & 1) != 0)
      v61 = -3;
    else
      v61 = v59;
    v62 = v61 + v60;
  }
  v63 = v197;
  v194 = (id)v57;
  v64 = v62 - v57;
  v65 = static UITraitCollection.interfaceIdiomIsMac.getter(v58);
  p_name = (char **)(&stru_3B7FF8 + 8);
  if (BYTE2(a2) != 2 || (v67 = 0.0, (v65 & 1) != 0))
  {
    v190 = (id)v64;
    objc_msgSend(v165, "lineHeight");
    v69 = v68;
    if (qword_3CFE40 != -1)
      swift_once(&qword_3CFE40, sub_2C5474);
    v70 = v69 + 0.0;
    v155 = *((_QWORD *)&xmmword_3E1288 + 1);
    v159 = (void *)xmmword_3E1288;
    v149 = byte_3E1298;
    v173 = word_3E12F8;
    v180 = qword_3E12F0;
    v186 = qword_3E12E8;
    v71 = qword_3E12E0;
    v72 = qword_3E12A0;
    v73 = qword_3E12A8;
    v74 = qword_3E12B0;
    v75 = qword_3E12B8;
    v76 = qword_3E12C0;
    v77 = *(_QWORD *)byte_3E12C8;
    v78 = (void *)qword_3E12D0;
    v79 = qword_3E12D8;
    sub_1472C((id)qword_3E12A0, qword_3E12A8, qword_3E12B0, qword_3E12B8, qword_3E12C0, byte_3E12C8[0], (void *)qword_3E12D0, qword_3E12D8, qword_3E12E0, qword_3E12E8, qword_3E12F0, word_3E12F8);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v80 = type metadata accessor for FloatingPointRoundingRule(0);
    v131 = __swift_project_value_buffer(v80, (uint64_t)qword_3FCFB0);
    v199 = v159;
    v200 = v155;
    LOBYTE(v201) = v149;
    v145 = (void *)v72;
    v202 = v72;
    v203 = v73;
    v204 = v74;
    v205 = (void *)v75;
    v81 = v76;
    v206 = v76;
    v207 = v77;
    v208 = (uint64_t)v78;
    v209 = v79;
    v210 = v71;
    v211 = v186;
    v212 = v180;
    v213 = v173;
    v82 = objc_msgSend(a1, "traitCollection");
    sub_1DD06C((uint64_t)v82, v131, 0);
    v84 = v83;

    p_name = &stru_3B7FF8.name;
    sub_14788(v145, v73, v74, v75, v81, v77, v78, v79, v71, v186, v180, v173);
    v67 = v70 + v84;
    v63 = v197;
    v64 = (uint64_t)v190;
  }
  objc_msgSend(v184, "lineHeight");
  v86 = v85;
  objc_msgSend(v184, "lineHeight");
  v88 = v87;
  objc_msgSend(v184, "leading");
  v90 = v67 + v86 + v53 * (v88 + v89);
  if (v64 < 1)
  {
    v110 = a1;
    if (!v194)
      goto LABEL_52;
    goto LABEL_47;
  }
  if (qword_3CFE48 != -1)
    swift_once(&qword_3CFE48, sub_2C5530);
  v156 = *((_QWORD *)&xmmword_3E1300 + 1);
  v160 = (void *)xmmword_3E1300;
  v191 = (id)(v64 & ~(v64 >> 63));
  v150 = byte_3E1310;
  v174 = word_3E1370;
  v181 = qword_3E1368;
  v187 = qword_3E1360;
  v91 = qword_3E1358;
  v92 = (void *)qword_3E1318;
  v93 = qword_3E1320;
  v94 = qword_3E1328;
  v95 = qword_3E1330;
  v96 = qword_3E1338;
  v97 = *(_QWORD *)byte_3E1340;
  v98 = (void *)qword_3E1348;
  v99 = qword_3E1350;
  sub_1472C((id)qword_3E1318, qword_3E1320, qword_3E1328, qword_3E1330, qword_3E1338, byte_3E1340[0], (void *)qword_3E1348, qword_3E1350, qword_3E1358, qword_3E1360, qword_3E1368, word_3E1370);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v100 = type metadata accessor for FloatingPointRoundingRule(0);
  v132 = __swift_project_value_buffer(v100, (uint64_t)qword_3FCFB0);
  v199 = v160;
  v200 = v156;
  LOBYTE(v201) = v150;
  v202 = (uint64_t)v92;
  v203 = v93;
  v204 = v94;
  v205 = (void *)v95;
  v101 = v96;
  v206 = v96;
  v207 = v97;
  v208 = (uint64_t)v98;
  v209 = v99;
  v210 = v91;
  v211 = v187;
  v212 = v181;
  v213 = v174;
  v102 = objc_msgSend(a1, "traitCollection");
  sub_1DD06C((uint64_t)v102, v132, 0);
  v104 = v103;

  sub_14788(v92, v93, v94, v95, v101, v97, v98, v99, v91, v187, v181, v174);
  objc_msgSend(v168, "lineHeight");
  v106 = v105;
  if ((unint64_t)v191 >= 2)
  {
    objc_msgSend(v168, "lineHeight");
    v108 = v107;
    objc_msgSend(v168, "leading");
    v106 = v106 + v108 + v109;
  }
  v90 = v90 + v104 + v106;
  v63 = v197;
  v110 = a1;
  p_name = (char **)(&stru_3B7FF8 + 8);
  if (v194)
  {
LABEL_47:
    if (qword_3CFE50 != -1)
      swift_once(&qword_3CFE50, sub_2C55F4);
    v175 = *((_QWORD *)&xmmword_3E1378 + 1);
    v182 = (void *)xmmword_3E1378;
    v161 = byte_3E1388;
    v188 = word_3E13E8;
    v192 = (id)qword_3E13E0;
    v195 = (id)qword_3E13D8;
    v111 = qword_3E13D0;
    v112 = (void *)qword_3E1390;
    v113 = qword_3E1398;
    v114 = qword_3E13A0;
    v115 = qword_3E13A8;
    v116 = qword_3E13B0;
    v117 = *(_QWORD *)byte_3E13B8;
    v118 = (void *)qword_3E13C0;
    v119 = qword_3E13C8;
    sub_1472C((id)qword_3E1390, qword_3E1398, qword_3E13A0, qword_3E13A8, qword_3E13B0, byte_3E13B8[0], (void *)qword_3E13C0, qword_3E13C8, qword_3E13D0, qword_3E13D8, qword_3E13E0, word_3E13E8);
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v120 = type metadata accessor for FloatingPointRoundingRule(0);
    v135 = __swift_project_value_buffer(v120, (uint64_t)qword_3FCFB0);
    v199 = v182;
    v200 = v175;
    LOBYTE(v201) = v161;
    v202 = (uint64_t)v112;
    v203 = v113;
    v157 = v114;
    v204 = v114;
    v205 = (void *)v115;
    v206 = v116;
    v207 = v117;
    v208 = (uint64_t)v118;
    v209 = v119;
    v121 = v111;
    v210 = v111;
    v211 = (uint64_t)v195;
    v212 = (uint64_t)v192;
    v213 = v188;
    v122 = objc_msgSend(a1, p_name[302]);
    sub_1DD06C((uint64_t)v122, v135, 0);
    v124 = v123;

    sub_14788(v112, v113, v157, v115, v116, v117, v118, v119, v121, (uint64_t)v195, (uint64_t)v192, v188);
    v63 = v197;
    objc_msgSend(v197, "lineHeight");
    v110 = a1;
    p_name = &stru_3B7FF8.name;
    v90 = v90 + v124 + v125;
  }
LABEL_52:
  v126 = objc_msgSend(v110, p_name[302]);
  v127 = sub_2C4D34(v126, v164);

  v128 = dbl_2F4F50[v127];
  if (v90 > v128)
    v128 = v90;
  return ceil(v128);
}

id sub_D9F34(uint64_t a1, uint64_t a2)
{
  char *v2;
  double *v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char *v11;
  objc_super v13;

  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_defaultMaxWidth] = 0x4075E00000000000;
  v5 = (double *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding];
  v6 = v2;
  v7 = ContextActionPreviewPaddingInset.getter();
  v8 = ContextActionPreviewPaddingInset.getter();
  v9 = ContextActionPreviewPaddingInset.getter();
  v10 = ContextActionPreviewPaddingInset.getter();
  *v5 = v7;
  v5[1] = v8;
  v5[2] = v9;
  v5[3] = v10;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView] = 0;
  v11 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preferredLockupViewSize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preview] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_objectGraph] = a2;
  swift_retain(a1 & 0x3FFFFFFFFFFFFFFFLL);
  swift_retain(a2);

  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for ContextMenuPreviewViewController();
  return objc_msgSendSuper2(&v13, "initWithNibName:bundle:", 0, 0);
}

uint64_t type metadata accessor for ContextMenuPreviewViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController);
}

uint64_t method lookup function for ContextMenuPreviewViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContextMenuPreviewViewController);
}

uint64_t dispatch thunk of ContextMenuPreviewViewController.__allocating_init(preview:asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_DA064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_DA0AC()
{
  char *v0;
  double *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  char *v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_defaultMaxWidth] = 0x4075E00000000000;
  v1 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_padding];
  v2 = ContextActionPreviewPaddingInset.getter();
  v3 = ContextActionPreviewPaddingInset.getter();
  v4 = ContextActionPreviewPaddingInset.getter();
  v5 = ContextActionPreviewPaddingInset.getter();
  *v1 = v2;
  v1[1] = v3;
  v1[2] = v4;
  v1[3] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_lockupView] = 0;
  v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews32ContextMenuPreviewViewController_preferredLockupViewSize];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ContextMenuPreviewViewController.swift", 62, 2, 34, 0);
  __break(1u);
}

BOOL sub_DA190(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  BOOL v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, __n128);
  _BOOL8 v32;
  uint64_t (*v33)(char *);
  uint64_t v34;

  v4 = v3;
  v32 = a2;
  v33 = a1;
  v34 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v29 = *(_QWORD *)(v6 + 72);
    v30 = v8;
    v31 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v27 = a3;
    v14 = swift_bridgeObjectRetain(a3);
    while (1)
    {
      v15 = v34;
      v31(v11, v13, v34, v14);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v16)(v11, 0, 1, v15);
      v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v15);
      v18 = v17 != 1;
      if (v17 == 1)
      {
        a3 = v27;
        goto LABEL_13;
      }
      v28 = 1;
      v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v20 = v6;
      v21 = v30;
      v19(v30, v11, v15);
      v18 = v32;
      v22 = v33(v21);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
        swift_bridgeObjectRelease(v27);
        return v18;
      }
      v23 = v22;
      v24 = v16;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v15);
      if ((v23 & 1) != 0)
        break;
      v13 += v29;
      --v12;
      v4 = 0;
      v6 = v20;
      if (!v12)
      {
        a3 = v27;
        goto LABEL_9;
      }
    }
    a3 = v27;
    v18 = v28;
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v14 = swift_bridgeObjectRetain(a3);
LABEL_9:
    v24(v11, 1, 1, v34, v14);
    v18 = 0;
  }
LABEL_13:
  swift_bridgeObjectRelease(a3);
  return v18;
}

uint64_t ShelvesDelegate.uberCellPublisher.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t ShelvesDelegate.uberCellPublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*ShelvesDelegate.uberCellPublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ShelvesDelegate.converter.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v3, v15, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  sub_2C690(v4, v5);
  sub_2C690(v6, v7);
  sub_2C690(v8, v9);
  sub_2C690(v10, v11);
  return sub_2C690(v13, v12);
}

uint64_t ShelvesDelegate.converter.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  _BYTE v21[24];

  v2 = *(_QWORD *)a1;
  v20 = *(_OWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 24);
  v18 = *(_OWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 48);
  v16 = *(_OWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 72);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v21, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  *v3 = v2;
  *(_OWORD *)(v3 + 1) = v20;
  v3[3] = v19;
  *((_OWORD *)v3 + 2) = v18;
  v3[6] = v17;
  *(_OWORD *)(v3 + 7) = v16;
  v3[9] = v15;
  sub_1D618(v4, v5);
  sub_1D618(v6, v7);
  sub_1D618(v8, v9);
  sub_1D618(v10, v11);
  return sub_1D618(v12, v13);
}

uint64_t (*ShelvesDelegate.converter.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ShelvesDelegate.collectionView(_:shouldSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  void (*v13)(__int128 *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  Class isa;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t (*v44)(uint64_t *, char *);
  uint64_t v45;
  uint64_t v46;
  char v47;
  __n128 v48;
  uint64_t (*v49)(uint64_t *, char *);
  uint64_t v50;
  uint64_t v51;
  id v52;
  __n128 v53;
  uint64_t *v54;
  __int128 *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t ObjectType;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[2];
  uint64_t v78;
  _QWORD v79[5];
  char v80[24];
  char v81[24];
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModernShelf(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v81, 0, 0);
  v13 = (void (*)(__int128 *__return_ptr, uint64_t))v12[6];
  if (!v13)
  {
    v84 = 0;
    v82 = 0u;
    v83 = 0u;
    goto LABEL_10;
  }
  v71 = (__int128 *)v7;
  v68 = a1;
  v67 = v2;
  v72 = v9;
  v69 = v11;
  v73 = v8;
  v14 = v12[8];
  v15 = v12[9];
  v74 = v12[7];
  v17 = v12[4];
  v16 = v12[5];
  v19 = v12[3];
  v76 = v12[2];
  v18 = v76;
  v20 = *v12;
  v75 = v12[1];
  sub_2C690(v20, v75);
  sub_2C690(v18, v19);
  sub_2C690(v17, v16);
  v21 = v74;
  sub_2C690((uint64_t)v13, v74);
  sub_2C690(v14, v15);
  v70 = a2;
  v13(&v82, a2);
  sub_1D618(v20, v75);
  sub_1D618(v76, v19);
  sub_1D618(v17, v16);
  sub_1D618((uint64_t)v13, v21);
  sub_1D618(v14, v15);
  if (!*((_QWORD *)&v83 + 1))
  {
LABEL_10:
    v54 = &qword_3D1A10;
    v55 = &v82;
LABEL_13:
    sub_D1D4((uint64_t)v55, v54);
    goto LABEL_14;
  }
  sub_1B738(&v82, (uint64_t)&v85);
  v22 = (void (*)(uint64_t))v12[2];
  if (!v22)
  {
    v35 = v71;
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v73);
    goto LABEL_12;
  }
  v24 = v12[9];
  v76 = v12[8];
  v23 = v76;
  v26 = v12[6];
  v25 = v12[7];
  v28 = v12[4];
  v27 = v12[5];
  v29 = v12[3];
  v32 = v12;
  v30 = *v12;
  v31 = v32[1];
  sub_2C690(v30, v31);
  sub_2C690((uint64_t)v22, v29);
  sub_2C690(v28, v27);
  sub_2C690(v26, v25);
  v33 = v23;
  v34 = v24;
  sub_2C690(v33, v24);
  v35 = v71;
  v22(v70);
  sub_1D618(v30, v31);
  sub_1D618((uint64_t)v22, v29);
  sub_1D618(v28, v27);
  sub_1D618(v26, v25);
  sub_1D618(v76, v34);
  v36 = v72;
  v37 = v73;
  if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v72 + 48))(v35, 1, v73) == 1)
  {
LABEL_12:
    __swift_destroy_boxed_opaque_existential_0(&v85);
    v54 = (uint64_t *)&unk_3D3010;
    v55 = v35;
    goto LABEL_13;
  }
  v38 = v69;
  (*(void (**)(char *, __int128 *, uint64_t))(v36 + 32))(v69, v35, v37);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v40 = objc_msgSend(v68, "cellForItemAtIndexPath:", isa);

  if (v40)
  {
    v41 = (_QWORD *)(v67 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension);
    swift_beginAccess(v67 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension, v80, 0, 0);
    v42 = *v41;
    if (*v41)
    {
      v43 = swift_retain(*v41);
      v44 = (uint64_t (*)(uint64_t *, char *))MultiSelectableExtension.isMultiSelectable.getter(v43);
      v46 = v45;
      v47 = v44(&v85, v38);
      v48 = swift_release(v46);
      if ((v47 & 1) != 0)
      {
        v49 = (uint64_t (*)(uint64_t *, char *))MultiSelectableExtension.shouldSelect.getter(v48);
        v51 = v50;
        LOBYTE(v52) = v49(&v85, v38);

        swift_release(v42);
        v53 = swift_release(v51);
LABEL_35:
        (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v38, v37, v53);
        __swift_destroy_boxed_opaque_existential_0(&v85);
        return v52 & 1;
      }
      swift_release(v42);
    }
    sub_1D5D4((uint64_t)&v85, (uint64_t)v79);
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5650);
    if ((swift_dynamicCast(v77, v79, v57, v58, 6) & 1) != 0)
    {
      sub_1B738(v77, (uint64_t)&v82);
      v59 = *((_QWORD *)&v83 + 1);
      v60 = v84;
      __swift_project_boxed_opaque_existential_1(&v82, *((uint64_t *)&v83 + 1));
      dispatch thunk of ClickableModel.clickAction.getter(v79, v59, v60);
      if (v79[3])
      {

        (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
        __swift_destroy_boxed_opaque_existential_0(&v85);
        sub_D1D4((uint64_t)v79, (uint64_t *)&unk_3D30D0);
        v61 = &v82;
LABEL_32:
        __swift_destroy_boxed_opaque_existential_0(v61);
        LOBYTE(v52) = 1;
        return v52 & 1;
      }
      sub_D1D4((uint64_t)v79, (uint64_t *)&unk_3D30D0);
      __swift_destroy_boxed_opaque_existential_0(&v82);
    }
    else
    {
      v78 = 0;
      memset(v77, 0, sizeof(v77));
      sub_D1D4((uint64_t)v77, (uint64_t *)&unk_3D5658);
    }
    ObjectType = swift_getObjectType();
    v63 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
    if (v63)
      v64 = v63;
    else
      v64 = 0;
    if (v63)
      v52 = v40;
    else
      v52 = 0;
    if (!v52)
    {

      goto LABEL_35;
    }
    v65 = swift_getObjectType();
    v66 = v40;
    if ((dispatch thunk of ShelfUIKitCell.isSelectable.getter(v65, v64) & 1) == 0)
    {
      LOBYTE(v52) = ShelfUIKitCell.doesCellOverrideClickAction.getter(v65, v64);

      goto LABEL_35;
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    v61 = (__int128 *)&v85;
    goto LABEL_32;
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
  __swift_destroy_boxed_opaque_existential_0(&v85);
LABEL_14:
  LOBYTE(v52) = 0;
  return v52 & 1;
}

void ShelvesDelegate.collectionView(_:didSelectItemAt:)(void *a1, char *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t *v29;
  void (*v30)(__int128 *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 *v50;
  uint64_t v51;
  __int128 *v52;
  uint64_t v53;
  unsigned int (*v54)(__int128 *, uint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(char *, __int128 *, uint64_t);
  Class isa;
  char *v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t (*v62)(_QWORD *, char *, __n128);
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  int v66;
  uint64_t v67;
  uint64_t *v68;
  __int128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  int v76;
  void (*v77)(__int128 *__return_ptr, char *);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  Class v120;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  char *v178;
  __n128 v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  __n128 v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  __n128 v201;
  uint64_t v202;
  uint64_t v203;
  __n128 v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  void (*v223)(uint64_t, _QWORD, uint64_t, char *);
  char *v224;
  __n128 v225;
  uint64_t v226;
  __n128 v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  __n128 v231;
  __n128 v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  __n128 v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  __n128 v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t *v255;
  __n128 v256;
  uint64_t v257;
  __n128 v258;
  void (*v259)(__int128 *, uint64_t, uint64_t, __n128);
  uint64_t v260;
  uint64_t v261;
  __n128 v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  __n128 v266;
  void (*v267)(uint64_t, uint64_t, __n128);
  void (*v268)(uint64_t, uint64_t, __n128);
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  char *v274;
  uint64_t ObjectType;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  __int128 *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t *v287;
  id v288;
  uint64_t v289;
  void (*v290)(uint64_t, uint64_t, uint64_t);
  char *v291;
  char *v292;
  _BYTE v293[32];
  _QWORD v294[4];
  __int128 v295;
  uint64_t v296;
  __int128 v297;
  __int128 v298;
  uint64_t v299;
  __int128 v300;
  __int128 v301;
  uint64_t v302;
  char v303[24];
  char v304[24];
  __int128 v305;
  __int128 v306;
  uint64_t v307;
  _QWORD v308[6];

  v3 = v2;
  v288 = a1;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5668);
  v6 = __chkstk_darwin(v5);
  v279 = (uint64_t)&v269 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)type metadata accessor for SearchAction(0, v6);
  v280 = *((_QWORD *)v8 - 1);
  v281 = v8;
  v9 = __chkstk_darwin(v8);
  v274 = (char *)&v269 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionPerformer(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v269 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HighlightFeedback(0, v13);
  v277 = *(_QWORD *)(v16 - 8);
  v278 = v16;
  __chkstk_darwin(v16);
  v276 = (char *)&v269 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v18);
  v283 = (__int128 *)((char *)&v269 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v292 = (char *)&v269 - v21;
  v22 = type metadata accessor for ModernShelf(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v282 = (uint64_t)&v269 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v269 - v26;
  v28 = (uint64_t *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter];
  swift_beginAccess(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter], v304, 0, 0);
  v29 = v28;
  v30 = (void (*)(__int128 *__return_ptr, char *))v28[6];
  if (!v30)
  {
    v307 = 0;
    v305 = 0u;
    v306 = 0u;
    goto LABEL_9;
  }
  v269 = v15;
  v270 = v12;
  v271 = v11;
  v272 = v3;
  v286 = v23;
  v287 = v29;
  v273 = v27;
  v284 = v22;
  v31 = v29[8];
  v32 = v29[9];
  v33 = v29[7];
  v34 = v29[4];
  v35 = v29[5];
  v37 = v29[3];
  v291 = (char *)v29[2];
  v36 = (uint64_t)v291;
  v39 = *v29;
  v38 = (void (*)(_QWORD, _QWORD, _QWORD))v29[1];
  v289 = v33;
  v290 = v38;
  sub_2C690(v39, (uint64_t)v38);
  sub_2C690(v36, v37);
  sub_2C690(v34, v35);
  v40 = v289;
  sub_2C690((uint64_t)v30, v289);
  sub_2C690(v31, v32);
  v285 = a2;
  v30(&v305, a2);
  sub_1D618(v39, (uint64_t)v290);
  sub_1D618((uint64_t)v291, v37);
  sub_1D618(v34, v35);
  sub_1D618((uint64_t)v30, v40);
  sub_1D618(v31, v32);
  if (!*((_QWORD *)&v306 + 1))
  {
LABEL_9:
    v68 = &qword_3D1A10;
    v69 = &v305;
LABEL_12:
    sub_D1D4((uint64_t)v69, v68);
    return;
  }
  sub_1B738(&v305, (uint64_t)v308);
  v41 = (void (*)(char *))v287[2];
  if (!v41)
  {
    v52 = (__int128 *)v292;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v286 + 56))(v292, 1, 1, v284);
    goto LABEL_11;
  }
  v42 = v287[8];
  v43 = (char *)v287[9];
  v45 = v287[6];
  v44 = v287[7];
  v47 = v287[4];
  v46 = v287[5];
  v48 = v287[3];
  v49 = (_QWORD *)*v287;
  v290 = (void (*)(uint64_t, uint64_t, uint64_t))v287[1];
  v291 = v43;
  sub_2C690((uint64_t)v49, (uint64_t)v290);
  sub_2C690((uint64_t)v41, v48);
  sub_2C690(v47, v46);
  sub_2C690(v45, v44);
  sub_2C690(v42, (uint64_t)v43);
  v50 = (__int128 *)v292;
  v41(v285);
  sub_1D618((uint64_t)v49, (uint64_t)v290);
  v51 = v48;
  v52 = v50;
  sub_1D618((uint64_t)v41, v51);
  sub_1D618(v47, v46);
  sub_1D618(v45, v44);
  sub_1D618(v42, (uint64_t)v291);
  v53 = v286;
  v54 = *(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v286 + 48);
  v55 = v284;
  if (v54(v52, 1, v284) == 1)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0(v308);
    v68 = (uint64_t *)&unk_3D3010;
    v69 = v52;
    goto LABEL_12;
  }
  v56 = *(void (**)(char *, __int128 *, uint64_t))(v53 + 32);
  v56(v273, v52, v55);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v58 = (char *)objc_msgSend(v288, "cellForItemAtIndexPath:", isa);

  if (!v58)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v273, v55);
LABEL_14:
    __swift_destroy_boxed_opaque_existential_0(v308);
    return;
  }
  v59 = &v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension];
  swift_beginAccess(&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension], v303, 0, 0);
  v60 = *(_QWORD *)v59;
  v291 = v59;
  v292 = v58;
  v290 = (void (*)(uint64_t, uint64_t, uint64_t))v56;
  if (v60)
  {
    v61 = swift_retain(v60);
    v62 = (uint64_t (*)(_QWORD *, char *, __n128))MultiSelectableExtension.isMultiSelectable.getter(v61);
    v64 = v63;
    v65 = swift_release(v60);
    v66 = v62(v308, v273, v65);
    v67 = v64;
    v58 = v292;
    swift_release(v67);
  }
  else
  {
    v66 = 0;
  }
  v70 = swift_getObjectType();
  v71 = swift_conformsToProtocol2(v70, &protocol descriptor for ShelfUIKitCell);
  if (v71)
    v72 = v71;
  else
    v72 = 0;
  if (v71)
    v73 = v58;
  else
    v73 = 0;
  if (v73)
  {
    v74 = swift_getObjectType();
    v75 = v58;
    v76 = dispatch thunk of ShelfUIKitCell.isSelectable.getter(v74, v72);

    if (((v76 | v66) & 1) != 0)
      goto LABEL_24;
LABEL_38:
    v120 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v288, "deselectItemAtIndexPath:animated:", v120, 1);

    sub_1D5D4((uint64_t)v308, (uint64_t)&v300);
    v121 = (void (*)(_QWORD, _QWORD, _QWORD))__swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5650);
    if (!swift_dynamicCast(&v297, &v300, v121, v122, 6))
    {
      v299 = 0;
      v297 = 0u;
      v298 = 0u;

      (*(void (**)(char *, uint64_t))(v53 + 8))(v273, v55);
      __swift_destroy_boxed_opaque_existential_0(v308);
      v68 = (uint64_t *)&unk_3D5658;
      v69 = &v297;
      goto LABEL_12;
    }
    sub_1B738(&v297, (uint64_t)&v305);
    sub_1D5D4((uint64_t)v308, (uint64_t)&v297);
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5670);
    v124 = swift_dynamicCast(&v300, &v297, v121, v123, 6);
    v290 = v121;
    if (v124)
    {
      v125 = *((_QWORD *)&v301 + 1);
      v126 = v302;
      __swift_project_boxed_opaque_existential_1(&v300, *((uint64_t *)&v301 + 1));
      v127 = dispatch thunk of HighlightableModel.highlightModel.getter(v125, v126);
      __swift_destroy_boxed_opaque_existential_0(&v300);
      if (v127)
      {
        v128 = *(_QWORD *)&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_highlightsProvider + 8];
        v129 = swift_getObjectType();
        v131 = v276;
        v130 = v277;
        v132 = v278;
        (*(void (**)(char *, _QWORD, uint64_t))(v277 + 104))(v276, enum case for HighlightFeedback.userInteracted(_:), v278);
        dispatch thunk of HighlightsProviderProtocol.addFeedbackForHighlight(highlight:feedback:)(v127, v131, v129, v128);
        v133 = swift_release(v127);
        v53 = v286;
        (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v131, v132, v133);
      }
    }
    else
    {
      v302 = 0;
      v300 = 0u;
      v301 = 0u;
      sub_D1D4((uint64_t)&v300, (uint64_t *)&unk_3D5678);
    }
    v134 = *((_QWORD *)&v306 + 1);
    v135 = v307;
    __swift_project_boxed_opaque_existential_1(&v305, *((uint64_t *)&v306 + 1));
    dispatch thunk of ClickableModel.clickSender.getter(&v300, v134, v135);
    if (*((_QWORD *)&v301 + 1))
    {
      sub_1D65C(&v300, &v295);
      v136 = v292;
    }
    else
    {
      v296 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
      v136 = v292;
      *(_QWORD *)&v295 = v292;
      v137 = v292;
      sub_D1D4((uint64_t)&v300, &qword_3D1A70);
    }
    v138 = swift_getObjectType();
    v139 = swift_conformsToProtocol2(v138, &protocol descriptor for ShelfUIKitCell);
    if (v139)
      v140 = v139;
    else
      v140 = 0;
    if (v139)
      v141 = v136;
    else
      v141 = 0;
    if (v141)
    {
      v142 = swift_getObjectType();
      v143 = v136;
      dispatch thunk of ShelfUIKitCell.clickActionOverride.getter(&v297, v142, v140);

      if (*((_QWORD *)&v298 + 1))
      {
        sub_1B738(&v297, (uint64_t)&v300);
        v144 = swift_getObjectType();
        v145 = swift_conformsToProtocol2(v144, &protocol descriptor for ShelfUIKitCell);
        if (v145)
          v146 = (uint64_t *)v145;
        else
          v146 = 0;
        if (v145)
          v147 = v292;
        else
          v147 = 0;
        if (v147)
        {
          v148 = v287[9];
          v149 = v287[7];
          v288 = (id)v287[8];
          v289 = v148;
          v150 = v287[5];
          v151 = v287[6];
          v153 = v287[3];
          v152 = v287[4];
          v291 = v143;
          v155 = v287[1];
          v154 = v287[2];
          v156 = *v287;
          v287 = v146;
          v283 = (__int128 *)swift_getObjectType();
          v285 = v291;
          sub_2C690(v156, v155);
          sub_2C690(v154, v153);
          sub_2C690(v152, v150);
          sub_2C690(v151, v149);
          sub_2C690((uint64_t)v288, v289);
          v157 = dispatch thunk of ShelfUIKitCell.objectGraph.getter(v283, v287);

          v158 = v156;
          v55 = v284;
          sub_1D618(v158, v155);
          v159 = v154;
          v143 = v291;
          sub_1D618(v159, v153);
          v53 = v286;
          sub_1D618(v152, v150);
          v160 = v149;
          v161 = v157;
          sub_1D618(v151, v160);
          sub_1D618((uint64_t)v288, v289);
          if (v157)
          {
LABEL_82:
            type metadata accessor for ActionRunnerOptions(0);
            v183 = swift_retain(v161);
            v184 = BaseObjectGraph.__allocating_init(_:)(v183);
            sub_1D66C((uint64_t)&v295, (uint64_t)v294);
            sub_D184((uint64_t)v294, (uint64_t)v293, &qword_3D1A70);
            v185 = v143;
            ActionOrigin.init(sender:view:)(&v297, v293, v292);
            v186 = ActionRunnerOptions.withActionOrigin(_:)(&v297);
            sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D30E0);
            swift_release(v184);
            sub_D1D4((uint64_t)v294, &qword_3D1A70);
            v294[0] = v185;
            v187 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
            v188 = v185;
            v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56B8);
            if (swift_dynamicCast(&v297, v294, v187, v189, 6))
            {
              v190 = *((_QWORD *)&v298 + 1);
              v191 = v299;
              __swift_project_boxed_opaque_existential_1(&v297, *((uint64_t *)&v298 + 1));
              v192 = (void *)dispatch thunk of SourceProvidingShelfCell.sourceView.getter(v190, v191);
              __swift_destroy_boxed_opaque_existential_0(&v297);
              if (v192)
              {
                v193 = type metadata accessor for FlowTransitionSource(0);
                swift_allocObject(v193, *(unsigned int *)(v193 + 48), *(unsigned __int16 *)(v193 + 52));
                v194 = v192;
                v195 = FlowTransitionSource.init(view:)();
                v196 = ActionRunnerOptions.withFlowTransitionSource(_:)();
                swift_release(v186);

                swift_release(v195);
                v186 = v196;
              }
            }
            else
            {
              v299 = 0;
              v297 = 0u;
              v298 = 0u;
              sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D56C0);
            }
            v180 = v292;
            sub_1D5D4((uint64_t)&v300, (uint64_t)&v297);
            v197 = swift_retain(v186);
            v198 = v269;
            v199 = ActionPerformer.init(_:asPartOf:)(&v297, v186, v197);
            v200 = ActionPerformer.callAsFunction()(v199);
            swift_release(v161);
            swift_release(v186);
            v201 = swift_release(v200);
            (*(void (**)(char *, uint64_t, __n128))(v270 + 8))(v198, v271, v201);
LABEL_99:
            __swift_destroy_boxed_opaque_existential_0(&v300);
LABEL_100:
            v236 = type metadata accessor for Podcasts(0, v179);
            *((_QWORD *)&v301 + 1) = v236;
            v302 = sub_89A0(&qword_3D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
            v237 = __swift_allocate_boxed_opaque_existential_0(&v300);
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v236 - 8) + 104))(v237, enum case for Podcasts.recentlySearched(_:), v236);
            LOBYTE(v236) = isFeatureEnabled(_:)(&v300);
            __swift_destroy_boxed_opaque_existential_0(&v300);
            if ((v236 & 1) == 0)
              goto LABEL_109;
            v238 = (uint64_t)&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_presenter];
            sub_D184((uint64_t)&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_presenter], (uint64_t)&v300, (uint64_t *)&unk_3D5690);
            if (*((_QWORD *)&v301 + 1))
            {
              v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EB8);
              v241 = type metadata accessor for SearchPresenter(0, v240);
              if (swift_dynamicCast(&v297, &v300, v239, v241, 6))
              {
LABEL_107:
                swift_release(v297);
                sub_1D5D4((uint64_t)v308, (uint64_t)&v300);
                v244 = type metadata accessor for LegacyLockup(0);
                if ((swift_dynamicCast(&v297, &v300, v290, v244, 6) & 1) != 0)
                {
                  v245 = v297;
                  RecentlySearchedStorage.add(_:)(v297);

                  v246 = swift_release(v245);
LABEL_110:
                  (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v273, v55, v246);
                  __swift_destroy_boxed_opaque_existential_0(v308);
                  __swift_destroy_boxed_opaque_existential_0(&v295);
                  __swift_destroy_boxed_opaque_existential_0(&v305);
                  return;
                }
LABEL_109:

                goto LABEL_110;
              }
            }
            else
            {
              sub_D1D4((uint64_t)&v300, (uint64_t *)&unk_3D5690);
            }
            sub_D184(v238, (uint64_t)&v300, (uint64_t *)&unk_3D5690);
            if (!*((_QWORD *)&v301 + 1))
            {

              sub_D1D4((uint64_t)&v300, (uint64_t *)&unk_3D5690);
              goto LABEL_110;
            }
            v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EB8);
            v243 = type metadata accessor for MacSearchPresenter(0);
            if ((swift_dynamicCast(&v297, &v300, v242, v243, 6) & 1) == 0)
              goto LABEL_109;
            goto LABEL_107;
          }
        }
        else
        {
          v181 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
          v182 = swift_dynamicCastClass(v143, v181);
          if (v182)
          {
            v161 = *(_QWORD *)(v182 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
            swift_retain(v161);
            if (v161)
              goto LABEL_82;
          }
        }
        v161 = *(_QWORD *)&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph];
        swift_retain(v161);
        goto LABEL_82;
      }
    }
    else
    {
      v299 = 0;
      v297 = 0u;
      v298 = 0u;
    }
    sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D30D0);
    v162 = *((_QWORD *)&v306 + 1);
    v163 = v307;
    __swift_project_boxed_opaque_existential_1(&v305, *((uint64_t *)&v306 + 1));
    dispatch thunk of ClickableModel.clickAction.getter(&v297, v162, v163);
    if (!*((_QWORD *)&v298 + 1))
    {
      sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D30D0);
      v180 = v292;
      goto LABEL_100;
    }
    sub_1B738(&v297, (uint64_t)&v300);
    v164 = v292;
    v165 = swift_getObjectType();
    v166 = swift_conformsToProtocol2(v165, &protocol descriptor for ShelfUIKitCell);
    if (v166)
      v167 = (char *)v166;
    else
      v167 = 0;
    if (v166)
      v168 = v164;
    else
      v168 = 0;
    if (v168)
    {
      v169 = v287[9];
      v288 = (id)v287[8];
      v289 = v169;
      v170 = v287[7];
      v282 = v287[6];
      v171 = v282;
      v283 = (__int128 *)v170;
      v173 = v287[4];
      v172 = v287[5];
      v175 = v287[2];
      v174 = v287[3];
      v176 = v287[1];
      v287 = (uint64_t *)*v287;
      v177 = v287;
      v291 = v167;
      v278 = swift_getObjectType();
      v178 = v164;
      sub_2C690((uint64_t)v177, v176);
      sub_2C690(v175, v174);
      sub_2C690(v173, v172);
      sub_2C690(v171, (uint64_t)v283);
      sub_2C690((uint64_t)v288, v289);
      v55 = v284;
      v291 = (char *)dispatch thunk of ShelfUIKitCell.objectGraph.getter(v278, v291);

      v164 = v292;
      sub_1D618((uint64_t)v287, v176);
      v53 = v286;
      sub_1D618(v175, v174);
      sub_1D618(v173, v172);
      sub_1D618(v282, (uint64_t)v283);
      sub_1D618((uint64_t)v288, v289);
    }
    else
    {
      v202 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
      v203 = swift_dynamicCastClass(v164, v202);
      if (!v203)
        goto LABEL_90;
      v291 = *(char **)(v203 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
      swift_retain(v291);
    }
    if (v291)
    {
LABEL_91:
      type metadata accessor for ActionRunnerOptions(0);
      v204 = swift_retain(v291);
      v205 = BaseObjectGraph.__allocating_init(_:)(v204);
      sub_1D66C((uint64_t)&v295, (uint64_t)v294);
      sub_D184((uint64_t)v294, (uint64_t)v293, &qword_3D1A70);
      v206 = v164;
      ActionOrigin.init(sender:view:)(&v297, v293, v164);
      v207 = ActionRunnerOptions.withActionOrigin(_:)(&v297);
      sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D30E0);
      swift_release(v205);
      sub_D1D4((uint64_t)v294, &qword_3D1A70);
      v294[0] = v206;
      v208 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
      v209 = v206;
      v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56B8);
      if (swift_dynamicCast(&v297, v294, v208, v210, 6))
      {
        v211 = *((_QWORD *)&v298 + 1);
        v212 = v299;
        __swift_project_boxed_opaque_existential_1(&v297, *((uint64_t *)&v298 + 1));
        v213 = (void *)dispatch thunk of SourceProvidingShelfCell.sourceView.getter(v211, v212);
        __swift_destroy_boxed_opaque_existential_0(&v297);
        if (v213)
        {
          v214 = type metadata accessor for FlowTransitionSource(0);
          swift_allocObject(v214, *(unsigned int *)(v214 + 48), *(unsigned __int16 *)(v214 + 52));
          v215 = v213;
          v216 = FlowTransitionSource.init(view:)();
          v217 = ActionRunnerOptions.withFlowTransitionSource(_:)();
          swift_release(v207);

          swift_release(v216);
          v207 = v217;
        }
      }
      else
      {
        v299 = 0;
        v297 = 0u;
        v298 = 0u;
        sub_D1D4((uint64_t)&v297, (uint64_t *)&unk_3D56C0);
      }
      v219 = v280;
      v218 = v281;
      v220 = v279;
      sub_1D5D4((uint64_t)&v300, (uint64_t)&v297);
      v221 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v222 = swift_dynamicCast(v220, &v297, v221, v218, 6);
      v223 = *(void (**)(uint64_t, _QWORD, uint64_t, char *))(v219 + 56);
      if (v222)
      {
        v223(v220, 0, 1, v218);
        v224 = v274;
        v225.n128_f64[0] = (*(double (**)(char *, uint64_t, char *))(v219 + 32))(v274, v220, v218);
        v226 = IndexPath.row.getter(v225);
        *((_QWORD *)&v298 + 1) = v218;
        v299 = sub_89A0(&qword_3D56D0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchAction, (uint64_t)&protocol conformance descriptor for SearchAction);
        __swift_allocate_boxed_opaque_existential_0(&v297);
        SearchAction.with(hintIndex:)(v226, 0);
        v227 = swift_retain(v207);
        v228 = v269;
        v229 = ActionPerformer.init(_:asPartOf:)(&v297, v207, v227);
        v230 = ActionPerformer.callAsFunction()(v229);
        swift_release(v291);
        swift_release(v207);
        v231 = swift_release(v230);
        (*(void (**)(char *, uint64_t, __n128))(v270 + 8))(v228, v271, v231);
        (*(void (**)(char *, char *))(v219 + 8))(v224, v218);
      }
      else
      {
        v223(v220, 1, 1, v218);
        sub_D1D4(v220, &qword_3D5668);
        sub_1D5D4((uint64_t)&v300, (uint64_t)&v297);
        v232 = swift_retain(v207);
        v233 = v269;
        v234 = ActionPerformer.init(_:asPartOf:)(&v297, v207, v232);
        v235 = ActionPerformer.callAsFunction()(v234);
        swift_release(v291);
        swift_release(v207);
        swift_release(v235);
        (*(void (**)(char *, uint64_t))(v270 + 8))(v233, v271);
      }
      v180 = v292;
      goto LABEL_99;
    }
LABEL_90:
    v291 = *(char **)&v272[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph];
    swift_retain(v291);
    goto LABEL_91;
  }
  if ((v66 & 1) == 0)
    goto LABEL_38;
LABEL_24:
  v77 = (void (*)(__int128 *__return_ptr, char *))v287[6];
  if (!v77)
  {
    v302 = 0;
    v300 = 0u;
    v301 = 0u;
    v89 = v292;
    goto LABEL_44;
  }
  v79 = v287[8];
  v78 = v287[9];
  v80 = v287[7];
  v82 = v287[4];
  v288 = (id)v287[5];
  v81 = (uint64_t)v288;
  v289 = v78;
  v84 = v287[3];
  v281 = (char *)v287[2];
  v83 = (uint64_t)v281;
  v86 = *v287;
  v85 = v287[1];
  v279 = v80;
  v280 = v85;
  sub_2C690(v86, v85);
  sub_2C690(v83, v84);
  sub_2C690(v82, v81);
  v87 = v279;
  sub_2C690((uint64_t)v77, v279);
  sub_2C690(v79, v78);
  v77(&v300, v285);
  v53 = v286;
  sub_1D618(v86, v280);
  v88 = v84;
  v55 = v284;
  sub_1D618((uint64_t)v281, v88);
  sub_1D618(v82, (uint64_t)v288);
  sub_1D618((uint64_t)v77, v87);
  sub_1D618(v79, v289);
  v89 = v292;
  if (!*((_QWORD *)&v301 + 1))
  {
LABEL_44:

    (*(void (**)(char *, uint64_t))(v53 + 8))(v273, v55);
    __swift_destroy_boxed_opaque_existential_0(v308);
    v68 = &qword_3D1A10;
    v69 = &v300;
    goto LABEL_12;
  }
  sub_1B738(&v300, (uint64_t)&v305);
  v90 = (void (*)(char *))v287[2];
  if (!v90)
  {
    v52 = v283;
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v283, 1, 1, v55);
    goto LABEL_77;
  }
  v92 = v287[8];
  v91 = v287[9];
  v94 = v287[6];
  v288 = (id)v287[7];
  v93 = (uint64_t)v288;
  v289 = v91;
  v95 = v287[4];
  v96 = v287[5];
  v97 = v287[3];
  v98 = (char *)v287[1];
  v280 = *v287;
  v281 = v98;
  sub_2C690(v280, (uint64_t)v98);
  sub_2C690((uint64_t)v90, v97);
  sub_2C690(v95, v96);
  sub_2C690(v94, v93);
  sub_2C690(v92, v91);
  v99 = (uint64_t)v283;
  v90(v285);
  v53 = v286;
  sub_1D618(v280, (uint64_t)v281);
  v100 = v97;
  v52 = (__int128 *)v99;
  sub_1D618((uint64_t)v90, v100);
  v101 = v96;
  v55 = v284;
  sub_1D618(v95, v101);
  v89 = v292;
  sub_1D618(v94, (uint64_t)v288);
  sub_1D618(v92, v289);
  if (v54((__int128 *)v99, 1, v55) == 1)
  {
LABEL_77:

    __swift_destroy_boxed_opaque_existential_0(&v305);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v273, v55);
    goto LABEL_11;
  }
  v290(v282, v99, v55);
  v102 = swift_getObjectType();
  v103 = swift_conformsToProtocol2(v102, &protocol descriptor for ShelfUIKitCell);
  if (v103)
    v104 = (uint64_t *)v103;
  else
    v104 = 0;
  if (v103)
    v105 = v89;
  else
    v105 = 0;
  if (!v105)
  {
    v247 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
    v248 = swift_dynamicCastClass(v89, v247);
    v118 = v272;
    v119 = ObjectType;
    if (v248)
    {
      v116 = *(_QWORD *)(v248 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
      swift_retain(v116);
      if (v116)
        goto LABEL_115;
    }
    goto LABEL_114;
  }
  v106 = (void *)v287[9];
  v290 = (void (*)(uint64_t, uint64_t, uint64_t))v287[8];
  v108 = (char *)v287[6];
  v107 = v287[7];
  v288 = v106;
  v289 = v107;
  v285 = v108;
  v109 = v287[4];
  v283 = (__int128 *)v287[5];
  v110 = (uint64_t)v283;
  v112 = v287[2];
  v111 = v287[3];
  v113 = *v287;
  v114 = v287[1];
  v287 = v104;
  v280 = swift_getObjectType();
  v281 = v89;
  sub_2C690(v113, v114);
  sub_2C690(v112, v111);
  sub_2C690(v109, v110);
  sub_2C690((uint64_t)v108, v289);
  v115 = (uint64_t)v288;
  sub_2C690((uint64_t)v290, (uint64_t)v288);
  v116 = dispatch thunk of ShelfUIKitCell.objectGraph.getter(v280, v287);

  v55 = v284;
  sub_1D618(v113, v114);
  v117 = v112;
  v53 = v286;
  sub_1D618(v117, v111);
  sub_1D618(v109, (uint64_t)v283);
  sub_1D618((uint64_t)v285, v289);
  sub_1D618((uint64_t)v290, v115);
  v118 = v272;
  v119 = ObjectType;
  if (!v116)
  {
LABEL_114:
    v116 = *(_QWORD *)&v118[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph];
    swift_retain(v116);
  }
LABEL_115:
  type metadata accessor for ActionRunnerOptions(0);
  v249 = swift_retain(v116);
  v250 = BaseObjectGraph.__allocating_init(_:)(v249);
  *((_QWORD *)&v298 + 1) = v119;
  *(_QWORD *)&v297 = v118;
  sub_D184((uint64_t)&v297, (uint64_t)&v295, &qword_3D1A70);
  v251 = v292;
  v252 = v292;
  v253 = v118;
  ActionOrigin.init(sender:view:)(&v300, &v295, v251);
  v254 = ActionRunnerOptions.withActionOrigin(_:)(&v300);
  sub_D1D4((uint64_t)&v300, (uint64_t *)&unk_3D30E0);

  swift_release(v250);
  sub_D1D4((uint64_t)&v297, &qword_3D1A70);
  v255 = (uint64_t *)v291;
  v256 = swift_beginAccess(v291, &v300, 32, 0);
  v257 = *v255;
  if (v257)
  {
    swift_endAccess(&v300);
    v258 = swift_retain(v257);
    v259 = (void (*)(__int128 *, uint64_t, uint64_t, __n128))MultiSelectableExtension.didSelect.getter(v258);
    v261 = v260;
    v262 = swift_release(v257);
    v263 = v116;
    v264 = v252;
    v265 = v282;
    v259(&v305, v282, v254, v262);

    swift_release(v263);
    swift_release(v254);
    v266 = swift_release(v261);
    v267 = *(void (**)(uint64_t, uint64_t, __n128))(v53 + 8);
    v267(v265, v55, v266);
    __swift_destroy_boxed_opaque_existential_0(&v305);
    ((void (*)(char *, uint64_t))v267)(v273, v55);
    goto LABEL_14;
  }
  v268 = *(void (**)(uint64_t, uint64_t, __n128))(v53 + 8);
  v268(v282, v55, v256);
  __swift_destroy_boxed_opaque_existential_0(&v305);
  ((void (*)(char *, uint64_t))v268)(v273, v55);
  __swift_destroy_boxed_opaque_existential_0(v308);
  swift_endAccess(&v300);
  swift_release(v254);
  swift_release(v116);

}

void ShelvesDelegate.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_E2D98(a2, a5);
}

void ShelvesDelegate.collectionView(_:willDisplay:forItemAt:)(void (*a1)(char *, char *, uint64_t), char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  __n128 v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char v105[24];
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  _BYTE v109[40];
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118[8];

  v4 = v3;
  v98 = a3;
  v88 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v6);
  v104 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v96 = (uint64_t)&v88 - v9;
  v103 = type metadata accessor for ClickLocationElement(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v100 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v89 = (char *)&v88 - v12;
  v95 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v94 = *(_QWORD *)(v95 - 8);
  v13 = __chkstk_darwin(v95);
  v93 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for HighlightFeedback(0, v13);
  v91 = *(_QWORD *)(v92 - 8);
  v15 = __chkstk_darwin(v92);
  v90 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UITraitOverrides(0, v15);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIView.traitOverrides.getter(v18);
  v21 = sub_E3184();
  dispatch thunk of UIMutableTraits.subscript.setter(1, &type metadata for IsDisplayingCellTrait, &type metadata for IsDisplayingCellTrait, v21, v17, &protocol witness table for UITraitOverrides);
  UIView.traitOverrides.setter(v20);
  ObjectType = swift_getObjectType();
  v23 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for UberCell);
  if (v23)
    v24 = v23;
  else
    v24 = 0;
  if (v23)
    v25 = a2;
  else
    v25 = 0;
  if (v25)
  {
    v26 = (uint64_t *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher);
    swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher, v105, 0, 0);
    v27 = *v26;
    *(_QWORD *)&v110 = v25;
    *((_QWORD *)&v110 + 1) = v24;
    v28 = a2;
    swift_retain(v27);
    CurrentValueSubject.value.setter(&v110);
    swift_release(v27);
  }
  v102 = v4;
  v29 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v118, 0, 0);
  v30 = *v29;
  v31 = v29[1];
  v99 = a2;
  v32 = v29[2];
  v33 = v29[3];
  v35 = v29[4];
  v34 = v29[5];
  v37 = v29[6];
  v36 = v29[7];
  v39 = v29[8];
  v38 = v29[9];
  *(_QWORD *)&v110 = v30;
  *((_QWORD *)&v110 + 1) = v31;
  *(_QWORD *)&v111 = v32;
  *((_QWORD *)&v111 + 1) = v33;
  v112 = v35;
  v113 = v34;
  v114 = v37;
  v115 = v36;
  v116 = v39;
  v117 = v38;
  v97 = v38;
  sub_2C690(v30, v31);
  sub_2C690(v32, v33);
  sub_2C690(v35, v34);
  sub_2C690(v37, v36);
  sub_2C690(v39, v38);
  v40 = CollectionConverter.shelfItem(for:with:in:)(v98, v99, 0);
  sub_1D618(v30, v31);
  v41 = v33;
  v42 = (uint64_t)v40;
  sub_1D618(v32, v41);
  sub_1D618(v35, v34);
  sub_1D618(v37, v36);
  sub_1D618(v39, v97);
  if (v40)
  {
    sub_1D5D4((uint64_t)(v40 + 3), (uint64_t)v109);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
    if ((swift_dynamicCast(&v106, v109, v43, v44, 6) & 1) != 0)
    {
      sub_1B738(&v106, (uint64_t)&v110);
      sub_1D5D4((uint64_t)&v110, (uint64_t)v109);
      *((_QWORD *)&v107 + 1) = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
      *(_QWORD *)&v106 = v99;
      v45 = v102;
      v46 = *(_QWORD *)(v102 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph);
      v47 = v99;
      swift_retain(v46);
      sub_FDB28((uint64_t)v109, (uint64_t)&v106, v46);
      swift_release(v46);
      sub_D1D4((uint64_t)v109, (uint64_t *)&unk_3D5BA0);
      __swift_destroy_boxed_opaque_existential_0(&v110);
      __swift_destroy_boxed_opaque_existential_0(&v106);
    }
    else
    {
      v108 = 0;
      v107 = 0u;
      v106 = 0u;
      sub_D1D4((uint64_t)&v106, (uint64_t *)&unk_3D5BA0);
      v45 = v102;
    }
    sub_1D5D4(v42 + 24, (uint64_t)v109);
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5670);
    if (swift_dynamicCast(&v110, v109, v43, v48, 6))
    {
      v49 = *((_QWORD *)&v111 + 1);
      v50 = v112;
      __swift_project_boxed_opaque_existential_1(&v110, *((uint64_t *)&v111 + 1));
      v51 = dispatch thunk of HighlightableModel.highlightModel.getter(v49, v50);
      __swift_destroy_boxed_opaque_existential_0(&v110);
      if (v51)
      {
        v52 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_highlightsProvider + 8);
        v53 = swift_getObjectType();
        v54 = v91;
        v55 = v90;
        v56 = v92;
        (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, enum case for HighlightFeedback.displayed(_:), v92);
        dispatch thunk of HighlightsProviderProtocol.addFeedbackForHighlight(highlight:feedback:)(v51, v55, v53, v52);
        v57 = swift_release(v51);
        (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v55, v56, v57);
      }
    }
    else
    {
      v112 = 0;
      v110 = 0u;
      v111 = 0u;
      sub_D1D4((uint64_t)&v110, (uint64_t *)&unk_3D5678);
    }
    v58 = *(_QWORD *)(v42 + 64);
    v59 = type metadata accessor for LoadingCell();
    if (!swift_dynamicCastClass(v58, v59))
    {
      v61 = v93;
      v62 = ModernShelf.itemPresentation.getter(v60);
      v63 = ModernShelf.ItemPresentation.orientation.getter(v62);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v95);
      if ((v63 & 1) != 0)
        sub_E0930(v42, v88);
      else
        sub_E31C8(v42);
      sub_E0F08(v42);
      v58 = *(_QWORD *)(v42 + 64);
    }
    if (swift_dynamicCastClass(v58, v59))
    {
      swift_release(v42);
      return;
    }
    sub_E1278();
    v64 = v96;
    CollectionConverter.ShelfItem.clickLocationElement.getter(v96);
    v65 = v45;
    v66 = v101;
    v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
    v68 = v103;
    if (v67(v64, 1, v103) == 1)
    {
      sub_D1D4(v64, &qword_3D56E0);
    }
    else
    {
      v69 = v42;
      v70 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v89, v64, v68);
      v71 = *(_QWORD *)(v65 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker);
      v72 = swift_retain(v71);
      ClickLocationTracker.addElement(_:)(v70, v72);
      v73 = swift_release(v71);
      v74 = v70;
      v42 = v69;
      (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v74, v68, v73);
    }
    v98 = v42;
    v75 = (uint64_t)sub_1FC448();
    v76 = v75;
    if ((unint64_t)v75 >> 62)
    {
      if (v75 >= 0)
        v75 &= 0xFFFFFFFFFFFFFF8uLL;
      v77 = _CocoaArrayWrapper.endIndex.getter(v75);
    }
    else
    {
      v77 = *(_QWORD *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFF8));
    }
    v78 = (uint64_t)v104;
    if (v77)
    {
      if (v77 < 1)
      {
        __break(1u);
        return;
      }
      v79 = 0;
      v99 = (char *)OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker;
      v80 = v103;
      v81 = v101;
      v82 = v100;
      do
      {
        if ((v76 & 0xC000000000000001) != 0)
        {
          v83 = specialized _ArrayBuffer._getElementSlowPath(_:)(v79, v76);
        }
        else
        {
          v83 = *(_QWORD *)(v76 + 8 * v79 + 32);
          swift_retain(v83);
        }
        CollectionConverter.ShelfItem.Button.clickLocationElement.getter(v78);
        v78 = (uint64_t)v104;
        if (v67((uint64_t)v104, 1, v80) == 1)
        {
          swift_release(v83);
          sub_D1D4(v78, &qword_3D56E0);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v82, v78, v80);
          v84 = *(_QWORD *)&v99[v102];
          v85 = swift_retain(v84);
          ClickLocationTracker.addElement(_:)(v82, v85);
          v86 = v84;
          v78 = (uint64_t)v104;
          swift_release(v86);
          v87 = swift_release(v83);
          (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v82, v80, v87);
        }
        ++v79;
      }
      while (v77 != v79);
    }
    swift_release(v98);
    swift_bridgeObjectRelease(v76);
  }
}

void ShelvesDelegate.collectionView(_:didEndDisplaying:forItemAt:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  char v93[16];
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103[40];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v90 = (char *)&v79 - v12;
  __chkstk_darwin(v13);
  v86 = (uint64_t)&v79 - v14;
  v91 = type metadata accessor for ClickLocationElement(0);
  v15 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v87 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v84 = (char *)&v79 - v18;
  v85 = v19;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v79 - v22;
  v24 = type metadata accessor for UITraitOverrides(0, v21);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIView.traitOverrides.getter(v25);
  v28 = sub_E3184();
  dispatch thunk of UIMutableTraits.subscript.setter(0, &type metadata for IsDisplayingCellTrait, &type metadata for IsDisplayingCellTrait, v28, v24, &protocol witness table for UITraitOverrides);
  UIView.traitOverrides.setter(v27);
  v96 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
  v95[0] = a2;
  v29 = a2;
  sub_FDEE4((uint64_t)v95);
  __swift_destroy_boxed_opaque_existential_0(v95);
  v30 = objc_msgSend(a1, "indexPathsForVisibleItems");
  v31 = type metadata accessor for IndexPath(0);
  v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

  v94 = a3;
  LOBYTE(v30) = sub_DA190((uint64_t (*)(char *))sub_E3498, (_BOOL8)v93, v32);
  swift_bridgeObjectRelease(v32);
  if ((v30 & 1) == 0)
  {
    v33 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
    swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v103, 0, 0);
    v34 = v33[1];
    v80 = *v33;
    v89 = v4;
    v35 = v33[2];
    v36 = v33[3];
    v88 = v15;
    v37 = v33[4];
    v38 = v33[5];
    v92 = v29;
    v79 = v23;
    v83 = (_QWORD *)a3;
    v40 = v33[6];
    v39 = v33[7];
    v42 = v33[8];
    v41 = v33[9];
    v95[0] = v80;
    v95[1] = v34;
    v95[2] = v35;
    v96 = v36;
    v97 = v37;
    v98 = v38;
    v81 = v37;
    v99 = v40;
    v100 = v39;
    v43 = v39;
    v82 = v39;
    v101 = v42;
    v102 = v41;
    v44 = v41;
    sub_2C690(v80, v34);
    sub_2C690(v35, v36);
    sub_2C690(v37, v38);
    sub_2C690(v40, v43);
    sub_2C690(v42, v44);
    v45 = CollectionConverter.shelfItem(for:with:in:)((uint64_t)v83, v92, 0);
    sub_1D618(v80, v34);
    v46 = v35;
    v47 = v89;
    sub_1D618(v46, v36);
    v48 = v88;
    sub_1D618(v81, v38);
    sub_1D618(v40, v82);
    sub_1D618(v42, v44);
    if (v45)
    {
      v49 = v79;
      sub_E34B0((uint64_t)v45);
      v50 = v86;
      CollectionConverter.ShelfItem.clickLocationElement.getter(v86);
      v51 = v91;
      v92 = *(void **)(v48 + 48);
      v52 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v92)(v50, 1, v91);
      v83 = v45;
      if (v52 == 1)
      {
        sub_D1D4(v50, &qword_3D56E0);
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v53(v49, v50, v51);
        v54 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker;
        v55 = *(_QWORD *)(v47 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker);
        v56 = swift_retain(v55);
        v57 = (uint64_t)v90;
        ClickLocationTracker.removeElement(_:)(v49, v56);
        swift_release(v55);
        sub_D1D4(v57, &qword_3D56E0);
        v58 = *(_QWORD *)(v47 + v54);
        v59 = v84;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v84, v49, v51);
        v60 = *(unsigned __int8 *)(v48 + 80);
        v61 = v48;
        v62 = (v60 + 16) & ~v60;
        v63 = swift_allocObject(&unk_380970, v62 + v85, v60 | 7);
        v53((char *)(v63 + v62), (uint64_t)v59, v51);
        v64 = swift_retain(v58);
        v65 = ClickLocationTracker.removeElements(where:)(sub_E38D8, v63, v64);
        swift_bridgeObjectRelease(v65);
        swift_release(v58);
        v66 = swift_release(v63);
        (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v49, v51, v66);
      }
      v67 = v51;
      v68 = (uint64_t)sub_1FC448();
      v69 = v68;
      if ((unint64_t)v68 >> 62)
      {
        if (v68 >= 0)
          v68 &= 0xFFFFFFFFFFFFFF8uLL;
        v70 = _CocoaArrayWrapper.endIndex.getter(v68);
        if (v70)
          goto LABEL_8;
      }
      else
      {
        v70 = *(_QWORD *)((char *)&dword_10 + (v68 & 0xFFFFFFFFFFFFF8));
        if (v70)
        {
LABEL_8:
          if (v70 < 1)
          {
            __break(1u);
            return;
          }
          v71 = 0;
          v86 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker;
          v72 = v88;
          v73 = v87;
          do
          {
            if ((v69 & 0xC000000000000001) != 0)
            {
              v74 = specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v69);
            }
            else
            {
              v74 = *(_QWORD *)(v69 + 8 * v71 + 32);
              swift_retain(v74);
            }
            CollectionConverter.ShelfItem.Button.clickLocationElement.getter((uint64_t)v10);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v92)(v10, 1, v67) == 1)
            {
              swift_release(v74);
              sub_D1D4((uint64_t)v10, &qword_3D56E0);
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v73, v10, v67);
              v75 = *(_QWORD *)(v89 + v86);
              v76 = swift_retain(v75);
              v77 = v90;
              ClickLocationTracker.removeElement(_:)(v73, v76);
              swift_release(v75);
              swift_release(v74);
              v78 = (uint64_t)v77;
              v67 = v91;
              sub_D1D4(v78, &qword_3D56E0);
              (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v67);
            }
            ++v71;
          }
          while (v70 != v71);
        }
      }
      swift_release(v83);
      swift_bridgeObjectRelease(v69);
    }
  }
}

uint64_t sub_DD5A0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a6(v15, v16, v14);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

double ShelvesDelegate.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_E3914(a2);
}

uint64_t ShelvesDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)(void *a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t *v26;
  void (*v27)(__int128 *__return_ptr, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  Class isa;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t ObjectType;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char v150[24];
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;

  v149 = a2;
  v145 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (uint64_t)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v9);
  v148 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InteractionContext(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v146 = (uint64_t)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v132 - v15;
  v17 = type metadata accessor for PresentationSource(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  *(_QWORD *)&v22 = __chkstk_darwin(v21).n128_u64[0];
  v147 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = objc_msgSend(a1, "traitCollection", v22);
  v25 = (char *)objc_msgSend(v24, "userInterfaceIdiom");

  if (v25 != (_BYTE *)&dword_4 + 1 && (objc_msgSend(a1, "isEditing") & 1) != 0)
    return 0;
  v142 = a1;
  v26 = (uint64_t *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter];
  swift_beginAccess(&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter], v150, 0, 0);
  v27 = (void (*)(__int128 *__return_ptr, uint64_t))v26[6];
  if (!v27)
  {
    v153 = 0;
    v151 = 0u;
    v152 = 0u;
    goto LABEL_13;
  }
  v138 = v20;
  v134 = v18;
  v135 = v17;
  v139 = v16;
  v141 = v4;
  v140 = v12;
  v136 = v11;
  v28 = v26[8];
  v29 = v26[9];
  v30 = v26[7];
  v31 = v26[4];
  v32 = v26[5];
  v33 = v26[2];
  v34 = v26[3];
  v137 = v26;
  v37 = v26;
  v35 = *v26;
  v36 = v37[1];
  sub_2C690(v35, v36);
  sub_2C690(v33, v34);
  sub_2C690(v31, v32);
  sub_2C690((uint64_t)v27, v30);
  sub_2C690(v28, v29);
  v27(&v151, v149);
  sub_1D618(v35, v36);
  sub_1D618(v33, v34);
  sub_1D618(v31, v32);
  sub_1D618((uint64_t)v27, v30);
  sub_1D618(v28, v29);
  if (!*((_QWORD *)&v152 + 1))
  {
LABEL_13:
    sub_D1D4((uint64_t)&v151, &qword_3D1A10);
    v154 = 0u;
    v155 = 0u;
    v156 = 0;
    goto LABEL_15;
  }
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
  if ((swift_dynamicCast(&v154, &v151, v38, v39, 6) & 1) == 0)
  {
    v156 = 0;
    v154 = 0u;
    v155 = 0u;
    goto LABEL_15;
  }
  if (!*((_QWORD *)&v155 + 1))
  {
LABEL_15:
    sub_D1D4((uint64_t)&v154, (uint64_t *)&unk_3D5BA0);
    return 0;
  }
  v40 = sub_1B738(&v154, (uint64_t)&v157);
  v41 = v142;
  v42 = UIView.mt_viewController.getter(v40);
  if (!v42)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0(&v157);
    return 0;
  }
  v43 = (void *)v42;
  v44 = v149;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v46 = (char *)objc_msgSend(v41, "cellForItemAtIndexPath:", isa);

  if (v46)
  {
    v47 = type metadata accessor for SearchLandingCell();
    if (swift_dynamicCastClass(v46, v47))
    {

      goto LABEL_11;
    }
  }
  v50 = type metadata accessor for IndexPath(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = (uint64_t)v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v147, v44, v50);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
  v53 = v141;
  v54 = (uint64_t)&v141[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath];
  swift_beginAccess(&v141[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath], &v154, 33, 0);
  sub_E3CA4(v52, v54);
  v55 = objc_msgSend(v41, "indexPathsForSelectedItems", swift_endAccess(&v154).n128_f64[0]);
  if (v55)
  {
    v56 = v55;
    v57 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v50);

  }
  else
  {
    v57 = _swiftEmptyArrayStorage;
  }
  v58 = v140;
  __chkstk_darwin(v55);
  v131 = v44;
  if (sub_DA190((uint64_t (*)(char *))sub_E3498, (_BOOL8)(&v132 - 4), (uint64_t)v57))
  {
    v59 = v53;
    v132 = sub_E2520((uint64_t)v57, (uint64_t)v59);
    swift_bridgeObjectRelease(v57);

  }
  else
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5708);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = xmmword_2F03C0;
    v132 = (_QWORD *)v61;
    sub_1D5D4((uint64_t)&v157, v61 + 32);
    swift_bridgeObjectRelease(v57);
  }
  v133 = v43;
  if (v46)
  {
    v62 = v43;
    v63 = v46;
    objc_msgSend(v63, "convertPoint:fromCoordinateSpace:", v41, a3, a4);
    PresentationSource.init(viewController:view:location:)(v62, v46, v64, v65, 0);
    v66 = v63;
    v67 = v146;
    UIView.interactionContext.getter(v66);

    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v139, v67, v136);
  }
  else
  {
    v68 = v43;
    v69 = v41;
    v70 = PresentationSource.init(viewController:view:location:)(v68, v41, *(_QWORD *)&a3, *(_QWORD *)&a4, 0);
    static InteractionContext.none.getter(v70);
  }
  v147 = v46;
  v71 = (void (*)(uint64_t))v137[2];
  if (v71)
  {
    v72 = v137[9];
    v146 = v137[8];
    v73 = v146;
    v75 = v137[6];
    v74 = v137[7];
    v77 = v137[4];
    v76 = v137[5];
    v78 = v137[3];
    v80 = *v137;
    v79 = v137[1];
    sub_2C690(*v137, v79);
    sub_2C690((uint64_t)v71, v78);
    sub_2C690(v77, v76);
    sub_2C690(v75, v74);
    v81 = v73;
    v82 = v72;
    sub_2C690(v81, v72);
    v83 = v148;
    v71(v149);
    sub_1D618(v80, v79);
    sub_1D618((uint64_t)v71, v78);
    v84 = v76;
    v53 = v141;
    sub_1D618(v77, v84);
    sub_1D618(v75, v74);
    v85 = v83;
    sub_1D618(v146, v82);
    v86 = type metadata accessor for ModernShelf(0);
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86) != 1)
    {
      v89 = v143;
      ModernShelf.itemPresentation.getter(v88);
      v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v85, v86);
      sub_EE31C(v90);
      v92 = v91;
      v94 = v93;
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v89, v145);
      LODWORD(v95) = dispatch thunk of static ShelfCell.alwaysUseCellForContextMenuPreview.getter(v92, *(_QWORD *)(v94 + 8));
      goto LABEL_32;
    }
  }
  else
  {
    v96 = type metadata accessor for ModernShelf(0);
    v85 = v148;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v148, 1, 1, v96);
  }
  sub_D1D4(v85, (uint64_t *)&unk_3D3010);
  LODWORD(v95) = 0;
LABEL_32:
  v97 = (uint64_t (*)(uint64_t))*v137;
  if (*v137)
  {
    LODWORD(v146) = v95;
    v98 = v137[1];
    v95 = v137[2];
    v99 = v137[3];
    v100 = v137[4];
    v102 = v137[5];
    v101 = v137[6];
    v104 = v137[7];
    v103 = v137[8];
    v105 = v137[9];
    sub_2C690((uint64_t)v97, v98);
    sub_2C690(v95, v99);
    sub_2C690(v100, v102);
    sub_2C690(v101, v104);
    v148 = v103;
    sub_2C690(v103, v105);
    v106 = v97(v149);
    if (v106)
    {
      v107 = (void *)v106;
      v143 = v98;
      v144 = v104;
      v145 = v101;
      v149 = v105;
      v108 = v148;
      ObjectType = swift_getObjectType();
      v110 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ShelfUIKitCell);
      if (v110)
        v111 = v110;
      else
        v111 = 0;
      if (v110)
        v112 = v107;
      else
        v112 = 0;
      if (v112)
      {
        v113 = swift_getObjectType();
        v114 = dispatch thunk of ShelfUIKitCell.objectGraph.getter(v113, v111);
        v53 = v141;
        goto LABEL_44;
      }
      v115 = type metadata accessor for ShelvesViewSwiftUIHelperCell();
      v116 = swift_dynamicCastClass(v107, v115);
      v53 = v141;
      if (v116)
      {
        v114 = *(_QWORD *)(v116 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph);
        swift_retain(v114);
LABEL_44:

        sub_1D618((uint64_t)v97, v143);
        sub_1D618(v95, v99);
        sub_1D618(v100, v102);
        sub_1D618(v145, v144);
        sub_1D618(v108, v149);
        LOBYTE(v95) = v146;
        if (v114)
          goto LABEL_49;
        goto LABEL_48;
      }

      v105 = v149;
      v101 = v145;
      v104 = v144;
      v98 = v143;
    }
    sub_1D618((uint64_t)v97, v98);
    sub_1D618(v95, v99);
    sub_1D618(v100, v102);
    sub_1D618(v101, v104);
    sub_1D618(v148, v105);
    LOBYTE(v95) = v146;
    v53 = v141;
  }
LABEL_48:
  v114 = *(_QWORD *)&v53[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph];
  swift_retain(v114);
LABEL_49:
  v117 = v134;
  v118 = v138;
  v119 = v147;
  if (v147
    && ((v120 = swift_getObjectType(),
         (v121 = swift_conformsToProtocol2(v120, &protocol descriptor for ShelfUIKitCell)) != 0)
      ? (v122 = v121)
      : (v122 = 0),
        v121 ? (v123 = v119) : (v123 = 0),
        v123))
  {
    v124 = swift_getObjectType();
    v125 = v119;
    v126 = (_QWORD *)dispatch thunk of ShelfUIKitCell.extraContextMenuElements()(v124, v122);

  }
  else
  {
    v126 = _swiftEmptyArrayStorage;
  }
  v127 = *(_QWORD *)&v53[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController + 24];
  v128 = *(_QWORD *)&v53[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController + 32];
  __swift_project_boxed_opaque_existential_1(&v53[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController], v127);
  v131 = v128;
  v129 = v132;
  v130 = v139;
  v48 = dispatch thunk of EpisodeControllerProtocol.contextMenuConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:alwaysUseCellForContextMenuPreview:extraContextMenuElements:)(v114, &v157, v132, v118, v139, v95 & 1, v126, v127, v131);
  swift_bridgeObjectRelease(v126);

  swift_bridgeObjectRelease(v129);
  swift_release(v114);

  (*(void (**)(char *, uint64_t))(v140 + 8))(v130, v136);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v135);
  __swift_destroy_boxed_opaque_existential_0(&v157);
  return v48;
}

id sub_DE350(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  Class isa;
  id v26;
  double v27;
  double x;
  double v29;
  double y;
  double v31;
  double width;
  double v33;
  double height;
  uint64_t *v35;
  void (*v36)(char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double *v72;
  int v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  CGFloat v78;
  CGFloat v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116;
  _OWORD v117[2];
  uint64_t v118;
  char v119[24];
  char v120[8];
  CGRect v121;
  CGRect v122;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5808);
  __chkstk_darwin(v4);
  v112 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for ContextMenuPreviewBackgroundColor(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v110 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5810);
  __chkstk_darwin(v7);
  v111 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for ContextMenuPreviewMargins(0);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v106 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v12);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v15);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath, v120, 0, 0);
  sub_D184(v22, (uint64_t)v17, (uint64_t *)&unk_3D1A00);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v113 = v18;
  if (v23(v17, 1, v18) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v113);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

    if (!v26)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v113);
      return 0;
    }
    objc_msgSend(v26, "bounds");
    x = v27;
    y = v29;
    width = v31;
    height = v33;
    v35 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
    swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v119, 0, 0);
    v36 = (void (*)(char *))v35[2];
    v102 = v19;
    v101 = v21;
    if (v36)
    {
      v96 = v11;
      v37 = v35[8];
      v100 = v35[9];
      v39 = v35[6];
      v38 = v35[7];
      v40 = v35[4];
      v41 = v35[5];
      v99 = v26;
      v42 = v21;
      v43 = v35[3];
      v44 = *v35;
      v98 = v35[1];
      v97 = v44;
      sub_2C690(v44, v98);
      sub_2C690((uint64_t)v36, v43);
      sub_2C690(v40, v41);
      sub_2C690(v39, v38);
      sub_2C690(v37, v100);
      v45 = v42;
      v26 = v99;
      v36(v45);
      sub_1D618(v97, v98);
      sub_1D618((uint64_t)v36, v43);
      sub_1D618(v40, v41);
      sub_1D618(v39, v38);
      sub_1D618(v37, v100);
      v46 = type metadata accessor for ModernShelf(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v14, 1, v46);
      v50 = (uint64_t)v112;
      if (v48 != 1)
      {
        v51 = v96;
        ModernShelf.itemPresentation.getter(v49);
        v52 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v14, v46);
        sub_EE31C(v52);
        v54 = v53;
        v56 = v55;
        (*(void (**)(char *, uint64_t))(v103 + 8))(v51, v104);
        v57 = (void *)dispatch thunk of static ShelfCell.contextMenuPreviewParameters(bounds:)(v54, *(_QWORD *)(v56 + 8), x, y, width, height);
        v58 = (uint64_t)v111;
        if (v57)
        {
          v59 = objc_allocWithZone((Class)UITargetedPreview);
          v60 = v26;
          v24 = objc_msgSend(v59, "initWithView:parameters:", v60, v57);

          (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v113);
          return v24;
        }
LABEL_11:
        v114[0] = v26;
        v62 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
        v63 = v26;
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5818);
        v65 = swift_dynamicCast(v117, v114, v62, v64, 6);
        v66 = v102;
        if ((v65 & 1) == 0)
        {
          v118 = 0;
          memset(v117, 0, sizeof(v117));
        }
        sub_D184((uint64_t)v117, (uint64_t)v114, &qword_3D5718);
        v67 = v115;
        v68 = v110;
        if (v115)
        {
          v69 = v116;
          __swift_project_boxed_opaque_existential_1(v114, v115);
          dispatch thunk of ContextMenuPreviewView.previewMargins.getter(v67, v69);
          v70 = v105;
          v71 = v107;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v58, 0, 1, v107);
          __swift_destroy_boxed_opaque_existential_0(v114);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v58, 1, v71) != 1)
          {
            v72 = (double *)v106;
            (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v106, v58, v71);
            goto LABEL_18;
          }
        }
        else
        {
          sub_D1D4((uint64_t)v114, &qword_3D5718);
          v70 = v105;
          v71 = v107;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v58, 1, 1, v107);
        }
        v72 = (double *)v106;
        (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v106, enum case for ContextMenuPreviewMargins.none(_:), v71);
        sub_D1D4(v58, &qword_3D5810);
LABEL_18:
        v73 = (*(uint64_t (**)(double *, uint64_t))(v70 + 88))(v72, v71);
        if (v73 == enum case for ContextMenuPreviewMargins.provideRemovingOriginals(_:))
        {
          v74 = v66;
          (*(void (**)(double *, uint64_t))(v70 + 96))(v72, v71);
          x = UIEdgeInsetsInsetRect(x, y, width, height, *v72, v72[1]);
          y = v75;
          width = v76;
          height = v77;
LABEL_20:
          v78 = -ContextActionPreviewPaddingInset.getter();
          v79 = -ContextActionPreviewPaddingInset.getter();
          v121.origin.x = x;
          v121.origin.y = y;
          v121.size.width = width;
          v121.size.height = height;
          v122 = CGRectInset(v121, v78, v79);
          x = v122.origin.x;
          y = v122.origin.y;
          width = v122.size.width;
          height = v122.size.height;
          v80 = 13.0;
          goto LABEL_25;
        }
        v80 = 0.0;
        if (v73 == enum case for ContextMenuPreviewMargins.none(_:))
        {
          v74 = v66;
        }
        else
        {
          v74 = v66;
          if (v73 == enum case for ContextMenuPreviewMargins.provide(_:))
            goto LABEL_20;
          (*(void (**)(double *, uint64_t))(v70 + 8))(v72, v71);
        }
LABEL_25:
        v81 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
        sub_D184((uint64_t)v117, (uint64_t)v114, &qword_3D5718);
        v82 = v115;
        if (v115)
        {
          v83 = v116;
          __swift_project_boxed_opaque_existential_1(v114, v115);
          dispatch thunk of ContextMenuPreviewView.previewBackgroundColor.getter(v82, v83);
          v84 = v108;
          v85 = v109;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v50, 0, 1, v109);
          __swift_destroy_boxed_opaque_existential_0(v114);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v50, 1, v85) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v68, v50, v85);
            v86 = enum case for ContextMenuPreviewBackgroundColor.none(_:);
            goto LABEL_30;
          }
        }
        else
        {
          sub_D1D4((uint64_t)v114, &qword_3D5718);
          v84 = v108;
          v85 = v109;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56))(v50, 1, 1, v109);
        }
        v86 = enum case for ContextMenuPreviewBackgroundColor.none(_:);
        (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v68, enum case for ContextMenuPreviewBackgroundColor.none(_:), v85);
        sub_D1D4(v50, &qword_3D5808);
LABEL_30:
        v87 = (*(uint64_t (**)(char *, uint64_t))(v84 + 88))(v68, v85);
        if (v87 == v86)
        {
          v88 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        }
        else
        {
          if (v87 != enum case for ContextMenuPreviewBackgroundColor.provide(_:))
          {
            (*(void (**)(char *, uint64_t))(v84 + 8))(v68, v85);
            goto LABEL_36;
          }
          v88 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
        }
        v89 = v88;
        objc_msgSend(v81, "setBackgroundColor:", v89);

LABEL_36:
        v90 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", x, y, width, height, v80);
        objc_msgSend(v81, "setVisiblePath:", v90);

        v91 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
        objc_msgSend(v81, "setShadowPath:", v91);

        v92 = objc_allocWithZone((Class)UITargetedPreview);
        v93 = v63;
        v24 = objc_msgSend(v92, "initWithView:parameters:", v93, v81);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v101, v113);
        sub_D1D4((uint64_t)v117, &qword_3D5718);
        return v24;
      }
    }
    else
    {
      v61 = type metadata accessor for ModernShelf(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v14, 1, 1, v61);
      v50 = (uint64_t)v112;
    }
    sub_D1D4((uint64_t)v14, (uint64_t *)&unk_3D3010);
    v58 = (uint64_t)v111;
    goto LABEL_11;
  }
  sub_D1D4((uint64_t)v17, (uint64_t *)&unk_3D1A00);
  return 0;
}

uint64_t sub_DEE38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];
  uint64_t v19;
  id v20;
  _BYTE v21[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath;
  swift_beginAccess(v12, v21, 0, 0);
  sub_D184(v12, (uint64_t)v7, (uint64_t *)&unk_3D1A00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    result = sub_D1D4((uint64_t)v7, (uint64_t *)&unk_3D1A00);
LABEL_6:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v15)
    goto LABEL_6;
  v20 = v15;
  v16 = sub_E710(0, &qword_3D19D0, UICollectionViewCell_ptr);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5818);
  if (swift_dynamicCast(v18, &v20, v16, v17, 6))
    return sub_1B738(v18, a2);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  return sub_D1D4((uint64_t)v18, &qword_3D5718);
}

UITargetedPreview_optional __swiftcall ShelvesDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  objc_class *v2;
  Swift::Bool v3;
  UITargetedPreview_optional result;

  v2 = (objc_class *)sub_DF048(_.super.super.super.super.isa, (uint64_t)previewForHighlightingContextMenuWithConfiguration.super.isa, 1);
  result.value.super.isa = v2;
  result.is_nil = v3;
  return result;
}

UITargetedPreview_optional __swiftcall ShelvesDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  objc_class *v2;
  Swift::Bool v3;
  UITargetedPreview_optional result;

  v2 = (objc_class *)sub_DF048(_.super.super.super.super.isa, (uint64_t)previewForDismissingContextMenuWithConfiguration.super.isa, 0);
  result.value.super.isa = v2;
  result.is_nil = v3;
  return result;
}

id sub_DF048(void *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_DEE38(a1, (uint64_t)v8);
  v5 = v9;
  if (v9)
  {
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(a3 & 1, v5, v6);
    __swift_destroy_boxed_opaque_existential_0(v8);
  }
  else
  {
    sub_D1D4((uint64_t)v8, &qword_3D5718);
  }
  return sub_DE350(a1);
}

id sub_DF0E8(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  sub_DEE38(v8, (uint64_t)v15);
  v11 = v16;
  if (v16)
  {
    v12 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    dispatch thunk of ContextMenuPreviewView.setInContextMenu(_:)(a5 & 1, v11, v12);
    __swift_destroy_boxed_opaque_existential_0(v15);
  }
  else
  {
    sub_D1D4((uint64_t)v15, &qword_3D5718);
  }
  v13 = sub_DE350(v8);

  return v13;
}

uint64_t ShelvesDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController + 24);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController), v6);
  return dispatch thunk of EpisodeControllerProtocol.contextMenuWillPerformPreviewAction(configuration:animator:)(a2, a3, v6, v7);
}

id ShelvesDelegate.collectionView(_:willEndContextMenuInteraction:animator:)(void *a1)
{
  return objc_msgSend(a1, "setActivityItemsConfiguration:", 0);
}

uint64_t ShelvesDelegate.collectionView(_:targetIndexPathForMoveFromItemAt:toProposedIndexPath:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = IndexPath.section.getter();
  v7 = IndexPath.section.getter();
  v8 = type metadata accessor for IndexPath(0);
  if (v6 == v7)
    v9 = a2;
  else
    v9 = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a3, v9, v8);
}

Swift::Void __swiftcall ShelvesDelegate.scrollViewDidScroll(_:)(UIScrollView a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(Class, uint64_t, uint64_t);
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*v3);
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(Class, uint64_t, uint64_t))(v8 + 24);
      swift_unknownObjectRetain(v7);
      v10(a1.super.super.super.isa, ObjectType, v8);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
}

Swift::Void __swiftcall ShelvesDelegate.scrollViewWillBeginDecelerating(_:)(UIScrollView a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(Class, uint64_t, uint64_t);
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*v3);
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(Class, uint64_t, uint64_t))(v8 + 8);
      swift_unknownObjectRetain(v7);
      v10(a1.super.super.super.isa, ObjectType, v8);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
}

Swift::Void __swiftcall ShelvesDelegate.scrollViewDidEndDecelerating(_:)(UIScrollView a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(Class, uint64_t, uint64_t);
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(*v3);
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(Class, uint64_t, uint64_t))(v8 + 16);
      swift_unknownObjectRetain(v7);
      v10(a1.super.super.super.isa, ObjectType, v8);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
}

Swift::Void __swiftcall ShelvesDelegate.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView _, Swift::Bool willDecelerate)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(Class, _BOOL8, uint64_t, uint64_t);
  _BYTE v14[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v5, v14, 0, 0);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(*v5);
    v8 = (uint64_t *)(v6 + 40);
    v9 = willDecelerate;
    do
    {
      v10 = *(v8 - 1);
      v11 = *v8;
      ObjectType = swift_getObjectType();
      v13 = *(void (**)(Class, _BOOL8, uint64_t, uint64_t))(v11 + 32);
      swift_unknownObjectRetain(v10);
      v13(_.super.super.super.isa, v9, ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v6);
  }
}

void ShelvesDelegate.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);
  _BYTE v17[24];

  v9 = (_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v9, v17, 0, 0);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain(*v9);
    v12 = (uint64_t *)(v10 + 40);
    do
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      ObjectType = swift_getObjectType();
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v14 + 48);
      swift_unknownObjectRetain(v13);
      v16(a1, a2, ObjectType, v14, a3, a4);
      swift_unknownObjectRelease(v13);
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(v10);
  }
}

Swift::Void __swiftcall ShelvesDelegate.addDefaultScrollCoordinators()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v14;
  _QWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  sub_D184(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_presenter, (uint64_t)v16, (uint64_t *)&unk_3D5690);
  if (v17)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EB8);
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5738);
    if ((swift_dynamicCast(v15, v16, v1, v2, 6) & 1) != 0)
    {
      v3 = v15[0];
      v4 = v15[1];
      v5 = (objc_class *)type metadata accessor for InfiniteScrollCoordinator();
      v6 = objc_allocWithZone(v5);
      *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_distance] = 0x407F400000000000;
      v7 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_paginatedPresenter];
      *((_QWORD *)v7 + 1) = 0;
      v8 = swift_unknownObjectWeakInit(v7, 0);
      v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_isDecelerating] = 0;
      *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_afterDecelerationBlocks] = _swiftEmptyArrayStorage;
      v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_isEnabled] = 1;
      v6[OBJC_IVAR____TtC23ShelfKitCollectionViews25InfiniteScrollCoordinator_shouldPrepareNextPageWithoutContent] = 0;
      *(_QWORD *)(v8 + 8) = v4;
      swift_unknownObjectWeakAssign(v8, v3);
      v14.receiver = v6;
      v14.super_class = v5;
      v9 = objc_msgSendSuper2(&v14, "init");
      sub_E1E14(v9, v0);
      swift_unknownObjectRelease(v3);

    }
  }
  else
  {
    sub_D1D4((uint64_t)v16, (uint64_t *)&unk_3D5690);
  }
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
  v11 = type metadata accessor for ModernImpressionsScrollCoordinator();
  v12 = swift_allocObject(v11, 24, 7);
  *(_QWORD *)(v12 + 16) = v10;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_modernImpressionsScrollCoordinator);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_modernImpressionsScrollCoordinator) = v12;
  swift_retain(v10);
  swift_retain_n(v12, 2);
  swift_release(v13);
  sub_E1F34(v12, v0);
  swift_release_n(v12, 2);
}

double ShelvesDelegate.add(scrollCoordinator:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_E2174(a1, v2, ObjectType, a2);
}

double ShelvesDelegate.remove(scrollCoordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  uint64_t v5;
  unint64_t v6;
  _QWORD *i;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators;
  *(_QWORD *)&result = swift_beginAccess(v3, v10, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5)
  {
    v6 = 0;
    for (i = (_QWORD *)(*(_QWORD *)v3 + 32); *i != a1; i += 2)
    {
      if (v5 == ++v6)
        return result;
    }
    swift_beginAccess(v3, v9, 33, 0);
    v8 = sub_DFE04(v6);
    swift_endAccess(v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_DFD1C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_E1D98(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFFF8));
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFF8)) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_DFE04(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_E1CF4(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_DFEE0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_E1D70(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = sub_E4088(v11, a2);
  v13 = v7 - a1;
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  v14 = v11 + v10;
  if (v10 > 0 || v11 >= v11 + v10 + v10 * v13)
  {
    result = swift_arrayInitWithTakeFrontToBack(v11, v14, v13, v8);
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront(v11, v14);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_E0014(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_E1D98(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

void ShelvesDelegate.remove<A>(type:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[24];

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators);
  swift_beginAccess(v4, v29, 33, 0);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  if (!v6)
  {
    v12 = 0;
LABEL_10:
    sub_E3D60(v12, v6);
    swift_endAccess(v29);
    return;
  }
  swift_bridgeObjectRetain(*v4);
  v7 = 0;
  v8 = -(uint64_t)v6;
  v9 = 32;
  while (1)
  {
    v28 = *(_OWORD *)(v5 + v9);
    v10 = v28;
    swift_unknownObjectRetain(v28);
    v11 = sub_E0364(&v28, a2);
    swift_unknownObjectRelease(v10);
    if ((v11 & 1) != 0)
      break;
    v9 += 16;
    if (v8 == --v7)
    {
      swift_bridgeObjectRelease(v5);
      v12 = *(_QWORD *)(*v4 + 16);
      v6 = v12;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease(v5);
  v12 = -v7;
  v6 = 1 - v7;
  if (!__OFADD__(-v7, 1))
  {
    v13 = *v4;
    v14 = *(_QWORD *)(*v4 + 16);
    if (v6 == v14)
    {
LABEL_9:
      if ((uint64_t)v6 >= v12)
        goto LABEL_10;
    }
    else
    {
      v15 = v9 + 16;
      while (v6 < v14)
      {
        v28 = *(_OWORD *)(v13 + v15);
        v18 = v28;
        swift_unknownObjectRetain(v28);
        v19 = sub_E0364(&v28, a2);
        swift_unknownObjectRelease(v18);
        if ((v19 & 1) == 0)
        {
          if (v6 != v12)
          {
            if (v12 < 0)
              goto LABEL_27;
            v20 = (_QWORD *)*v4;
            v21 = *(_QWORD *)(*v4 + 16);
            if (v12 >= v21)
              goto LABEL_28;
            if (v6 >= v21)
              goto LABEL_29;
            v26 = *(_OWORD *)&v20[2 * v12 + 4];
            v27 = *(_OWORD *)((char *)v20 + v15);
            swift_unknownObjectRetain(v20[2 * v12 + 4]);
            swift_unknownObjectRetain(v27);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
            *v4 = v20;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v20 = sub_E1CF4(v20);
              *v4 = v20;
            }
            v23 = &v20[2 * v12];
            v24 = v23[4];
            *((_OWORD *)v23 + 2) = v27;
            swift_unknownObjectRelease(v24);
            v25 = *v4;
            if (v6 >= *(_QWORD *)(*v4 + 16))
              goto LABEL_30;
            v16 = *(_QWORD *)(v25 + v15);
            *(_OWORD *)(v25 + v15) = v26;
            swift_unknownObjectRelease(v16);
          }
          if (__OFADD__(v12++, 1))
            goto LABEL_26;
        }
        ++v6;
        v13 = *v4;
        v14 = *(_QWORD *)(*v4 + 16);
        v15 += 16;
        if (v6 == v14)
          goto LABEL_9;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  swift_bridgeObjectRelease(v12);
  swift_unknownObjectRelease(v6);
  __break(1u);
}

uint64_t sub_E0364(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;

  v7 = *a1;
  swift_unknownObjectRetain(v7);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5800);
  v4 = swift_dynamicCast(&v6, &v7, v3, a2, 6);
  if ((_DWORD)v4)
    swift_unknownObjectRelease(v6);
  return v4;
}

uint64_t ShelvesDelegate.dependenciesDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph) = a1;
  swift_retain(a1);
  swift_release(v3);
  v4 = type metadata accessor for ClickLocationTracker(0);
  BaseObjectGraph.inject<A>(_:)(&v13, v4, v4);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker) = v13;
  swift_release(v5);
  v6 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(&v13, v6, v6);
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator) = v13;
  result = swift_release(v8);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_modernImpressionsScrollCoordinator);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + v7);
    v12 = *(_QWORD *)(v10 + 16);
    *(_QWORD *)(v10 + 16) = v11;
    swift_retain(v11);
    return swift_release(v12);
  }
  return result;
}

void ShelvesDelegate.updateImpressionsForVisibleItems(_:inSection:contentOffset:layoutEnvironment:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];

  v35 = a1;
  v36 = a3;
  v38 = a2;
  v39 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v4;
  v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v50, 0, 0);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = v9[3];
  v15 = v9[4];
  v14 = v9[5];
  v16 = v9[6];
  v17 = v9[7];
  v18 = v9[8];
  v19 = v9[9];
  v40 = v10;
  v41 = v11;
  v42 = v12;
  v43 = v13;
  v44 = v15;
  v45 = v14;
  v46 = v16;
  v47 = v17;
  v48 = v18;
  v49 = v19;
  sub_2C690(v10, v11);
  sub_2C690(v12, v13);
  sub_2C690(v15, v14);
  sub_2C690(v16, v17);
  sub_2C690(v18, v19);
  IndexPath.init(row:section:)(0, v38);
  v20 = CollectionConverter.shelf(for:)((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
  v21 = v42;
  v22 = v43;
  v23 = v44;
  v24 = v45;
  v25 = v46;
  v26 = v47;
  v27 = v48;
  v28 = v49;
  sub_1D618(v40, v41);
  sub_1D618(v21, v22);
  sub_1D618(v23, v24);
  sub_1D618(v25, v26);
  sub_1D618(v27, v28);
  if (v20)
  {
    v29 = sub_E0680();
    if (v29)
    {
      v31 = v29;
      v32 = v30;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v32 + 56))(v35, v36, ObjectType, v32, a4, 0.0);
      swift_release(v20);
      swift_unknownObjectRelease(v31);
    }
    else
    {
      swift_release(v20);
    }
  }
}

uint64_t sub_E0680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __n128 v26;
  _BYTE v29[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for ImpressionMetrics.ID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v29[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v29[-v13 - 8];
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v4);
  v15 = type metadata accessor for ImpressionMetrics(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15))
  {
    sub_D1D4((uint64_t)v4, &qword_3D0EE0);
    return 0;
  }
  else
  {
    ImpressionMetrics.id.getter();
    sub_D1D4((uint64_t)v4, &qword_3D0EE0);
    v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
    v17(v14, v11, v5);
    v18 = type metadata accessor for CompoundScrollCoordinator();
    v16 = swift_allocObject(v18, 24, 7);
    *(_QWORD *)(v16 + 16) = _swiftEmptyArrayStorage;
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v14, v5);
    v20 = type metadata accessor for ImpressionIdScrollCoordinator(0);
    v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    *(_QWORD *)(v21 + 16) = v19;
    v17((_BYTE *)(v21 + OBJC_IVAR____TtC23ShelfKitCollectionViews29ImpressionIdScrollCoordinator_impressionID), v8, v5);
    swift_beginAccess(v16 + 16, v29, 33, 0);
    v22 = *(_QWORD **)(v16 + 16);
    swift_retain(v19);
    swift_retain(v21);
    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      v22 = sub_20EA84(0, v22[2] + 1, 1, v22);
    v24 = v22[2];
    v23 = v22[3];
    if (v24 >= v23 >> 1)
      v22 = sub_20EA84((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v22[2] = v24 + 1;
    v25 = &v22[2 * v24];
    v25[4] = v21;
    v25[5] = &off_3800B0;
    *(_QWORD *)(v16 + 16) = v22;
    swift_endAccess(v29);
    v26 = swift_release(v21);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v14, v5, v26);
  }
  return v16;
}

uint64_t sub_E0930(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  Swift::Int v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  __n128 v63;
  char *v64;
  __n128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  double v69;
  CGFloat v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  CGFloat v77;
  uint64_t v78;
  char *v79;
  __n128 v80;
  char *v81;
  void (*v82)(char *, uint64_t, __n128);
  __n128 v83;
  char *v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  CGRect v99;
  CGRect v100;
  CGRect v101;

  v98 = a2;
  v3 = type metadata accessor for ImpressionMetrics.ID(0);
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  __chkstk_darwin(v3);
  v90 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5828);
  v6 = __chkstk_darwin(v5);
  v95 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexSet(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  v97 = v9;
  __chkstk_darwin(v8);
  v94 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v84 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v14);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v84 - v18;
  v20 = type metadata accessor for ImpressionMetrics(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v84 - v25;
  v27 = a1;
  v28 = *(_QWORD *)(a1 + 16);
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v19);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v29(v19, 1, v20) == 1)
  {
    v30 = &qword_3D0EE0;
    v31 = (uint64_t)v19;
    return sub_D1D4(v31, v30);
  }
  v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v29;
  v88 = v28;
  v86 = v16;
  v84 = v23;
  v89 = v13;
  v87 = v27;
  v32 = v97;
  v33 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v33(v26, v19, v20);
  v34 = (char *)objc_msgSend(v98, "collectionViewLayout");
  v35 = objc_opt_self(UICollectionViewCompositionalLayout);
  v36 = (void *)swift_dynamicCastObjCClass(v34, v35);
  if (!v36)
  {

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  v37 = v36;
  v38 = objc_msgSend(v36, "_orthogonalScrollingSections");
  if (!v38)
  {
    v43 = v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v95, 1, 1, v96);
    goto LABEL_11;
  }
  v39 = v38;
  v98 = v33;
  v40 = v94;
  static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();

  v41 = v32;
  v42 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v43 = v95;
  v44 = v40;
  v45 = v96;
  v42(v95, v44, v96);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v43, 0, 1, v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v43, 1, v45) == 1)
  {
LABEL_11:

    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    v30 = &qword_3D5828;
    v31 = (uint64_t)v43;
    return sub_D1D4(v31, v30);
  }
  v94 = v34;
  v46 = v89;
  v42(v89, v43, v45);
  v47 = OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index;
  v48 = *(_QWORD *)(v88 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index);
  if (!IndexSet.contains(_:)(v48))
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v46, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  objc_msgSend(v37, "_orthogonalScrollingLayoutRectForSection:", v48);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v57 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator;
  v58 = v93;
  v59 = *(_QWORD *)(v93 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
  swift_retain(v59);
  DynamicImpressionsCalculator.addElement(_:in:at:)(v26, v48, v50, v52, v54, v56);
  swift_release(v59);
  v60 = (uint64_t)v86;
  CollectionConverter.ShelfItem.impressionMetrics.getter((uint64_t)v86);
  if (v85(v60, 1, v20) == 1)
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v89, v96);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    v30 = &qword_3D0EE0;
    v31 = v60;
    return sub_D1D4(v31, v30);
  }
  v98(v84, (char *)v60, v20);
  v62 = *(_QWORD *)(v58 + v57);
  v63 = swift_retain(v62);
  v64 = v90;
  v65.n128_f64[0] = ImpressionMetrics.id.getter(v63);
  v66 = DynamicImpressionsCalculator.childCalculator(for:)(v64, v65);
  v67 = swift_release(v62);
  (*(void (**)(char *, uint64_t, __n128))(v91 + 8))(v64, v92, v67);
  if (v66)
  {
    DynamicImpressionsCalculator.viewBounds.setter(objc_msgSend(v37, "_offsetForOrthogonalScrollingSection:", *(_QWORD *)(v88 + v47)));
    v68 = v87;
    objc_msgSend(*(id *)(v87 + 64), "frame");
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v76 = v75;
    v99.origin.x = v50;
    v99.origin.y = v52;
    v99.size.width = v54;
    v99.size.height = v56;
    v77 = -CGRectGetMinY(v99);
    v100.origin.x = v70;
    v100.origin.y = v72;
    v100.size.width = v74;
    v100.size.height = v76;
    v101 = CGRectOffset(v100, 0.0, v77);
    v78 = *(_QWORD *)(v68 + 72);
    v79 = v84;
    DynamicImpressionsCalculator.addElement(_:in:at:)(v84, v78, v101.origin.x, v101.origin.y, v101.size.width, v101.size.height);

    v80 = swift_release(v66);
    v81 = v26;
    v82 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
    v82(v79, v20, v80);
  }
  else
  {

    v81 = v26;
    v82 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
    v82(v84, v20, v83);
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v89, v96);
  return ((uint64_t (*)(char *, uint64_t))v82)(v81, v20);
}

void sub_E0F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  __n128 v43;
  void (*v44)(char *, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);

  v2 = v1;
  v4 = type metadata accessor for ImpressionMetrics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for ImpressionMetrics.ID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v47 = (char *)&v46 - v18;
  v19 = (uint64_t)sub_1FC448();
  v20 = v19;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 >= 0)
      v19 &= 0xFFFFFFFFFFFFFF8uLL;
    v21 = _CocoaArrayWrapper.endIndex.getter(v19);
  }
  else
  {
    v21 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v20);
  if (v21)
  {
    CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v13);
    v22 = v5;
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v23(v13, 1, v4))
    {
      sub_D1D4((uint64_t)v13, &qword_3D0EE0);
      return;
    }
    v53 = v23;
    v51 = v22;
    ImpressionMetrics.id.getter(v24);
    sub_D1D4((uint64_t)v13, &qword_3D0EE0);
    v26 = v47;
    v25 = v48;
    v27 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v16, v49);
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
    v29 = swift_retain(v28);
    v30 = DynamicImpressionsCalculator.childCalculator(for:)(v26, v29);
    v31 = swift_release(v28);
    v52 = v30;
    if (!v30)
    {
      (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v26, v27, v31);
      return;
    }
    v32 = (uint64_t)sub_1FC448();
    v33 = v32;
    v50 = a1;
    if ((unint64_t)v32 >> 62)
    {
      if (v32 >= 0)
        v32 &= 0xFFFFFFFFFFFFFF8uLL;
      v34 = _CocoaArrayWrapper.endIndex.getter(v32);
      v35 = v53;
      if (v34)
        goto LABEL_9;
    }
    else
    {
      v34 = *(_QWORD *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFF8));
      v35 = v53;
      if (v34)
      {
LABEL_9:
        if (v34 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v34; ++i)
        {
          if ((v33 & 0xC000000000000001) != 0)
          {
            v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
          }
          else
          {
            v37 = *(_QWORD *)(v33 + 8 * i + 32);
            swift_retain(v37);
          }
          CollectionConverter.ShelfItem.Button.impressionMetrics.getter((uint64_t)v10);
          if (v35(v10, 1, v4) == 1)
          {
            swift_release(v37);
            sub_D1D4((uint64_t)v10, &qword_3D0EE0);
          }
          else
          {
            v38 = v51;
            (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v7, v10, v4);
            objc_msgSend(*(id *)(v50 + 64), "frame");
            DynamicImpressionsCalculator.addElement(_:in:at:)(v7, 0, v39, v40, v41, v42);
            v43 = swift_release(v37);
            v44 = *(void (**)(char *, uint64_t, __n128))(v38 + 8);
            v35 = v53;
            v44(v7, v4, v43);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v33);
    v45 = swift_release(v52);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v47, v49, v45);
  }
}

uint64_t sub_E1278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  unsigned int v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D56E0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - v5;
  v7 = type metadata accessor for ClickLocationElement(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - v12;
  CollectionConverter.Shelf.clickLocationElement.getter((uint64_t)v6);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
    return sub_D1D4((uint64_t)v6, &qword_3D56E0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker;
  v30 = v0;
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker);
  v18 = swift_retain(v17);
  v19 = ClickLocationElement._uniqueID.getter(v18);
  v21 = v20;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (!v21)
  {
    v19 = ClickLocationElement.id.getter(v22);
    v21 = v23;
  }
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v10, v7);
  ClickLocationTracker.element(for:)(v19, v21);
  v25 = v14(v3, 1, v7);
  sub_D1D4((uint64_t)v3, &qword_3D56E0);
  swift_release(v17);
  v26 = swift_bridgeObjectRelease(v21);
  if (v25 == 1)
  {
    v27 = *(_QWORD *)(v30 + v16);
    v28 = swift_retain(v27);
    ClickLocationTracker.addElement(_:)(v13, v28);
    v26 = swift_release(v27);
  }
  return ((uint64_t (*)(char *, uint64_t, __n128))v24)(v13, v7, v26);
}

uint64_t sub_E1490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;

  v3 = type metadata accessor for ClickLocationElement(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = ClickLocationElement.parentUniqueID.getter(v5);
  v10 = v9;
  v11 = ClickLocationElement._uniqueID.getter();
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a2, v3);
  if (!v13)
  {
    v11 = ClickLocationElement.id.getter(v14);
    v13 = v15;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (v10)
  {
    if (v8 == v11 && v10 == v13)
      v16 = 1;
    else
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v13, 0);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v16 = 0;
  }
  swift_bridgeObjectRelease(v13);
  return v16 & 1;
}

void ShelvesDelegate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.ShelvesDelegate", 39, "init()", 6, 0);
  __break(1u);
}

double sub_E1774(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *v2;
  ObjectType = swift_getObjectType();
  return sub_E2174(a1, v5, ObjectType, a2);
}

double sub_E17B4(uint64_t a1)
{
  return ShelvesDelegate.remove(scrollCoordinator:)(a1);
}

void sub_E17D4(uint64_t a1, uint64_t a2)
{
  ShelvesDelegate.remove<A>(type:)(a1, a2);
}

void sub_E17F4()
{
  ShelvesDelegate.addDefaultScrollCoordinators()();
}

char *sub_E1814(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_20F828(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy(v16, v9, &type metadata for LockupAndIndex);
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v24 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v24, 1046, 0);
  __break(1u);
  return result;
}

char *sub_E1994(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = (_QWORD *)*v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_20FBCC(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v24 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v24, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_E1B14(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_20FCEC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21, v22, v20, v14);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21, v22);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    sub_E4044(a3, v18);
  return sub_D1D4(a3, (uint64_t *)&unk_3D5830);
}

uint64_t sub_E1CE0(unint64_t a1)
{
  return sub_20EBCC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_E1CF4(_QWORD *a1)
{
  return sub_20EA84(0, a1[2], 0, a1);
}

_QWORD *sub_E1D0C(_QWORD *a1)
{
  return sub_20F184(0, a1[2], 0, a1);
}

_QWORD *sub_E1D20(_QWORD *a1)
{
  return sub_20F39C(0, a1[2], 0, a1);
}

_QWORD *sub_E1D34(_QWORD *a1)
{
  return sub_20F828(0, a1[2], 0, a1);
}

uint64_t sub_E1D48(unint64_t a1)
{
  return sub_20F934(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_E1D5C(uint64_t a1)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_E1D70(unint64_t a1)
{
  return sub_20FCEC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_E1D84(_QWORD *a1)
{
  return sub_20FD00(0, a1[2], 0, a1);
}

uint64_t sub_E1D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_E1E00(unint64_t a1)
{
  return sub_21003C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_E1E14(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;
  _QWORD *v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators;
  swift_beginAccess(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators, v13, 0, 0);
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v4)
  {
    v5 = (void **)(*(_QWORD *)v3 + 32);
    while (*v5 != a1)
    {
      v5 += 2;
      if (!--v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v3, v12, 33, 0);
    v6 = *(_QWORD **)v3;
    v7 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *(_QWORD *)v3 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_20EA84(0, v6[2] + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v10 = v6[2];
    v9 = v6[3];
    if (v10 >= v9 >> 1)
    {
      v6 = sub_20EA84((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v6[2] = v10 + 1;
    v11 = &v6[2 * v10];
    v11[4] = v7;
    v11[5] = &off_38C300;
    swift_endAccess(v12);
  }
}

void sub_E1F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators;
  swift_beginAccess(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators, v12, 0, 0);
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(*(_QWORD *)v3 + 32);
    while (*v5 != a1)
    {
      v5 += 2;
      if (!--v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v3, v11, 33, 0);
    v6 = *(_QWORD **)v3;
    swift_retain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *(_QWORD *)v3 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_20EA84(0, v6[2] + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_20EA84((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_38C2B8;
    swift_endAccess(v11);
  }
}

void sub_E2054(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;
  _QWORD *v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators;
  swift_beginAccess(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators, v13, 0, 0);
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v4)
  {
    v5 = (void **)(*(_QWORD *)v3 + 32);
    while (*v5 != a1)
    {
      v5 += 2;
      if (!--v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v3, v12, 33, 0);
    v6 = *(_QWORD **)v3;
    v7 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *(_QWORD *)v3 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_20EA84(0, v6[2] + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v10 = v6[2];
    v9 = v6[3];
    if (v10 >= v9 >> 1)
    {
      v6 = sub_20EA84((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
      *(_QWORD *)v3 = v6;
    }
    v6[2] = v10 + 1;
    v11 = &v6[2 * v10];
    v11[4] = v7;
    v11[5] = &off_38B088;
    swift_endAccess(v12);
  }
}

double sub_E2174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v6 = a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators;
  *(_QWORD *)&result = swift_beginAccess(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators, v16, 0, 0).n128_u64[0];
  v8 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v8)
  {
    v9 = (_QWORD *)(*(_QWORD *)v6 + 32);
    while (*v9 != a1)
    {
      v9 += 2;
      if (!--v8)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess(v6, v15, 33, 0);
    v10 = *(_QWORD **)v6;
    swift_unknownObjectRetain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    *(_QWORD *)v6 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_20EA84(0, v10[2] + 1, 1, v10);
      *(_QWORD *)v6 = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      v10 = sub_20EA84((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      *(_QWORD *)v6 = v10;
    }
    v10[2] = v13 + 1;
    v14 = &v10[2 * v13];
    v14[4] = a1;
    v14[5] = a4;
    *(_QWORD *)&result = swift_endAccess(v15).n128_u64[0];
  }
  return result;
}

id sub_E2290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_super v24;
  uint64_t v25;
  __int128 v26[3];

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_scrollCoordinators] = _swiftEmptyArrayStorage;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_uberCellPublisher;
  v26[0] = 0uLL;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2EF0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = v3;
  *(_QWORD *)&v3[v8] = CurrentValueSubject.init(_:)(v26);
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_overflowTransitioningDelegate;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ModelViewOverflowTransitioning(0)), "init");
  v12 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension];
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_modernImpressionsScrollCoordinator] = 0;
  v13 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  *((_OWORD *)v13 + 4) = 0u;
  v14 = &v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_currentContextMenuIndexPath];
  v15 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_objectGraph] = a1;
  sub_D184(a2, (uint64_t)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_presenter], (uint64_t *)&unk_3D5690);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v26, v16, v16);
  sub_1B738(v26, (uint64_t)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_episodeController]);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D57F0);
  BaseObjectGraph.inject<A>(_:)(v26, v17, v17);
  *(_OWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_highlightsProvider] = v26[0];
  v18 = type metadata accessor for ClickLocationTracker(0);
  BaseObjectGraph.inject<A>(_:)(v26, v18, v18);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_clickLocationTracker] = *(_QWORD *)&v26[0];
  v19 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.inject<A>(_:)(v26, v19, v19);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator] = *(_QWORD *)&v26[0];
  swift_beginAccess(v12, v26, 1, 0);
  v20 = *(_QWORD *)v12;
  *(_QWORD *)v12 = a3;
  swift_retain(a3);
  swift_release(v20);
  v21 = type metadata accessor for RecentlySearchedStorage(0);
  BaseObjectGraph.inject<A>(_:)(&v25, v21, v21);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_recentlySearchedStore] = v25;

  v24.receiver = v10;
  v24.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v24, "init");
  sub_D1D4(a2, (uint64_t *)&unk_3D5690);
  return v22;
}

_QWORD *sub_E2520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __n128 v15;
  __n128 v16;
  void (*v17)(__int128 *__return_ptr, char *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v48)(char *, uint64_t, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59[32];
  char *v60;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v60 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v41 = v2;
    v12 = a1;
    v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = (uint64_t *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
    v40 = v12;
    swift_bridgeObjectRetain(v12);
    v45 = v14;
    v15 = swift_beginAccess(v14, v59, 0, 0);
    v44 = *(_QWORD *)(v6 + 72);
    v48 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v52 = _swiftEmptyArrayStorage;
    v43 = v5;
    v42 = v6;
    v46 = v10;
    v48(v10, v13, v5, v15);
    while (1)
    {
      v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v47)(v10, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
      {
        a1 = v40;
        goto LABEL_23;
      }
      v51 = v13;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v60, v10, v5);
      v17 = (void (*)(__int128 *__return_ptr, char *))v45[6];
      if (!v17)
        break;
      v18 = v45[8];
      v19 = v45[9];
      v20 = v45[7];
      v50 = v11;
      v21 = v45[4];
      v22 = v45[5];
      v24 = v45[2];
      v23 = v45[3];
      v25 = *v45;
      v49 = v45[1];
      sub_2C690(v25, v49);
      sub_2C690(v24, v23);
      sub_2C690(v21, v22);
      sub_2C690((uint64_t)v17, v20);
      sub_2C690(v18, v19);
      v17(&v56, v60);
      sub_1D618(v25, v49);
      v26 = v24;
      v5 = v43;
      sub_1D618(v26, v23);
      v27 = v21;
      v6 = v42;
      v28 = v22;
      v11 = v50;
      sub_1D618(v27, v28);
      sub_1D618((uint64_t)v17, v20);
      sub_1D618(v18, v19);
      if (!*((_QWORD *)&v57 + 1))
        goto LABEL_13;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D1A38);
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
      v31 = swift_dynamicCast(&v53, &v56, v29, v30, 6);
      v32 = v51;
      if ((v31 & 1) == 0)
      {
        v55 = 0;
        v53 = 0u;
        v54 = 0u;
      }
      v10 = v46;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v60, v5);
      if (*((_QWORD *)&v54 + 1))
      {
        sub_1B738(&v53, (uint64_t)&v56);
        sub_1B738(&v56, (uint64_t)&v53);
        if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
          v52 = sub_20F6D4(0, v52[2] + 1, 1, v52);
        v34 = v52[2];
        v33 = v52[3];
        if (v34 >= v33 >> 1)
          v52 = sub_20F6D4((_QWORD *)(v33 > 1), v34 + 1, 1, v52);
        v35 = v52;
        v52[2] = v34 + 1;
        sub_1B738(&v53, (uint64_t)&v35[5 * v34 + 4]);
      }
      else
      {
        sub_D1D4((uint64_t)&v53, (uint64_t *)&unk_3D5BA0);
      }
      v13 = v32 + v44;
      if (!--v11)
      {
        a1 = v40;
        v47(v10, 1, 1, v5, v16);
        goto LABEL_23;
      }
      v48(v10, v13, v5, v16);
    }
    v58 = 0;
    v56 = 0u;
    v57 = 0u;
LABEL_13:
    sub_D1D4((uint64_t)&v56, &qword_3D1A10);
    v53 = 0u;
    v54 = 0u;
    v55 = 0;
    v10 = v46;
    v32 = v51;
    goto LABEL_14;
  }
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
  v37 = swift_bridgeObjectRetain(a1);
  v52 = _swiftEmptyArrayStorage;
  v36(v10, 1, 1, v5, v37);
LABEL_23:
  swift_bridgeObjectRelease(a1);
  return v52;
}

uint64_t sub_E2964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((char *)&dword_18 + (v5 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_E2C40(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_20F39C(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[8 * a1 + 32];
    v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14])
      result = (char *)memmove(result, v15, 8 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_E2D98(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  __n128 v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE *v46;
  char v47;
  uint64_t v48;
  id v49;
  void *v50;
  char *v51;
  unint64_t v52;
  unsigned __int8 v53;
  _BYTE *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  unsigned __int8 v65;
  char v66[32];
  char v67[24];

  v62 = a1;
  v63 = a2;
  v3 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ModernShelf(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  v15 = swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v67, 0, 0);
  v16 = (void (*)(uint64_t))v14[2];
  if (v16)
  {
    v56 = v6;
    v57 = v4;
    v58 = v3;
    v59 = v13;
    v17 = v14[8];
    v18 = v14[9];
    v19 = v14[6];
    v20 = v14[7];
    v64 = v9;
    v60 = v11;
    v61 = v10;
    v21 = v14[4];
    v22 = v14[5];
    v23 = v14[3];
    v26 = v14;
    v24 = *v14;
    v25 = v26[1];
    sub_2C690(v24, v25);
    sub_2C690((uint64_t)v16, v23);
    sub_2C690(v21, v22);
    sub_2C690(v19, v20);
    sub_2C690(v17, v18);
    v16(v63);
    v27 = v25;
    v28 = v60;
    sub_1D618(v24, v27);
    sub_1D618((uint64_t)v16, v23);
    v29 = v21;
    v30 = v61;
    v31 = v22;
    v9 = v64;
    sub_1D618(v29, v31);
    sub_1D618(v19, v20);
    sub_1D618(v17, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v30) != 1)
    {
      v32 = v59;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v59, v9, v30);
      v33 = type metadata accessor for ShelfBackgroundView();
      v34 = v62;
      v35 = swift_dynamicCastClass(v62, v33);
      if (!v35)
      {
LABEL_16:
        (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v30);
        return;
      }
      v36 = (char *)v35;
      v37 = v34;
      v38 = v56;
      v40 = ModernShelf.itemPresentation.getter(v39);
      v41 = ModernShelf.ItemPresentation.background.getter(v40);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v58);
      if ((v41 & 0x10000000000) != 0
        || (ModernShelf.Background.isHexColorFaded.getter(v41 | ((HIDWORD(v41) & 1) << 32)) & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v30);

        return;
      }
      v42 = BYTE4(v41) & 1;
      v43 = v41 & 0x1FFFFFFFFLL;
      v44 = &v36[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background];
      swift_beginAccess(&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_background], v66, 1, 0);
      v44[4] = v42;
      *(_DWORD *)v44 = v43;
      v44[5] = 0;
      v45 = OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill;
      v46 = *(_BYTE **)&v36[OBJC_IVAR____TtC23ShelfKitCollectionViews19ShelfBackgroundView_backgroundFill];
      if (v46)
      {
        v47 = 0;
      }
      else
      {
        v48 = type metadata accessor for ShelfBackgroundFillView();
        v49 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v48)), "init");
        objc_msgSend(v36, "bounds");
        objc_msgSend(v49, "setFrame:");
        objc_msgSend(v49, "setAutoresizingMask:", 18);
        objc_msgSend(v36, "addSubview:", v49);
        v50 = *(void **)&v36[v45];
        *(_QWORD *)&v36[v45] = v49;

        v46 = *(_BYTE **)&v36[v45];
        if (!v46)
        {
LABEL_15:

          goto LABEL_16;
        }
        v43 = *(unsigned int *)v44 | ((unint64_t)v44[4] << 32);
        v47 = v44[5];
      }
      v51 = &v46[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
      v52 = *(unsigned int *)&v46[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v46[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
      v53 = v46[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
      *(_DWORD *)v51 = v43;
      v51[4] = BYTE4(v43);
      v51[5] = v47;
      v54 = v46;
      v65 = v53;
      sub_CDF48(v52 | ((unint64_t)v53 << 40));

      v37 = v54;
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v9, 1, 1, v10, v15);
  }
  sub_D1D4((uint64_t)v9, (uint64_t *)&unk_3D3010);
}

unint64_t sub_E3184()
{
  unint64_t result;

  result = qword_3D56E8;
  if (!qword_3D56E8)
  {
    result = swift_getWitnessTable(&unk_2F8178, &type metadata for IsDisplayingCellTrait);
    atomic_store(result, (unint64_t *)&qword_3D56E8);
  }
  return result;
}

uint64_t sub_E31C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  __n128 v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void (*v42)(char *, uint64_t, __n128);
  id v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = type metadata accessor for ImpressionMetrics.ID(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v5);
  v49 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - v8;
  v10 = type metadata accessor for ImpressionMetrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  v17 = a1;
  v18 = *(_QWORD *)(a1 + 16);
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v9);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
    v20 = (uint64_t)v9;
    return sub_D1D4(v20, &qword_3D0EE0);
  }
  v45 = v13;
  v46 = v4;
  v21 = v10;
  v44 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v44(v16, v9, v10);
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator;
  v23 = v50;
  v24 = *(_QWORD *)(v50 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
  v25 = v17;
  v26 = *(void **)(v17 + 64);
  *(_QWORD *)&v27 = swift_retain(v24).n128_u64[0];
  v43 = v26;
  objc_msgSend(v26, "frame", v27);
  DynamicImpressionsCalculator.increaseImpressionableFrame(of:by:at:)(v16, *(_QWORD *)(v18 + OBJC_IVAR____TtCV23ShelfKitCollectionViews19CollectionConverter5Shelf_index));
  swift_release(v24);
  v28 = v49;
  CollectionConverter.ShelfItem.impressionMetrics.getter(v49);
  if (v19((char *)v28, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v21);
    v20 = v28;
    return sub_D1D4(v20, &qword_3D0EE0);
  }
  v30 = v45;
  v44(v45, (char *)v28, v21);
  v31 = *(_QWORD *)(v23 + v22);
  v32 = swift_retain(v31);
  v33 = v46;
  v34.n128_f64[0] = ImpressionMetrics.id.getter(v32);
  v35 = DynamicImpressionsCalculator.childCalculator(for:)(v33, v34);
  v36 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v33, v48, v36);
  if (v35)
  {
    objc_msgSend(v43, "frame");
    DynamicImpressionsCalculator.addElement(_:in:at:)(v30, *(_QWORD *)(v25 + 72), v38, v39, v40, v41);
    v37 = swift_release(v35);
  }
  v42 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v42(v30, v21, v37);
  return ((uint64_t (*)(char *, uint64_t))v42)(v16, v21);
}

uint64_t sub_E3498(uint64_t a1)
{
  return sub_E3CEC(a1) & 1;
}

uint64_t sub_E34B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  __n128 v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  void (*v44)(char *, uint64_t, __n128);
  __n128 v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;

  v2 = type metadata accessor for ImpressionMetrics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (char *)&v46 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - v14;
  v52 = type metadata accessor for ImpressionMetrics.ID(0);
  v16 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - v20;
  v22 = a1;
  CollectionConverter.Shelf.impressionMetrics.getter((uint64_t)v15);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v23(v15, 1, v2))
    return sub_D1D4((uint64_t)v15, &qword_3D0EE0);
  v48 = v12;
  v49 = v22;
  v53 = v3;
  v54 = v23;
  ImpressionMetrics.id.getter(v24);
  sub_D1D4((uint64_t)v15, &qword_3D0EE0);
  v26 = v52;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v52);
  v27 = *(_QWORD *)(v55 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_impressionsCalculator);
  v28 = swift_retain(v27);
  v29 = DynamicImpressionsCalculator.childCalculator(for:)(v21, v28);
  v30 = swift_release(v27);
  v55 = v29;
  if (!v29)
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v21, v26, v30);
  v31 = (uint64_t)v48;
  CollectionConverter.ShelfItem.impressionMetrics.getter((uint64_t)v48);
  v32 = v54;
  v33 = v54((char *)v31, 1, v2);
  v46 = v21;
  v47 = v16;
  if (v33 == 1)
  {
    sub_D1D4(v31, &qword_3D0EE0);
  }
  else
  {
    v34 = v31;
    v35 = v53;
    v36 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v50, v34, v2);
    DynamicImpressionsCalculator.removeElement(_:)(v36);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v2);
  }
  v37 = v51;
  result = (uint64_t)sub_1FC448();
  v38 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v39 = result;
    if (!result)
      goto LABEL_22;
  }
  else
  {
    v39 = *(_QWORD *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFF8));
    if (!v39)
      goto LABEL_22;
  }
  if (v39 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v39; ++i)
  {
    if ((v38 & 0xC000000000000001) != 0)
    {
      v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
    }
    else
    {
      v41 = *(_QWORD *)(v38 + 8 * i + 32);
      swift_retain(v41);
    }
    CollectionConverter.ShelfItem.Button.impressionMetrics.getter((uint64_t)v9);
    if (v32(v9, 1, v2) == 1)
    {
      swift_release(v41);
      sub_D1D4((uint64_t)v9, &qword_3D0EE0);
    }
    else
    {
      v42 = v53;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v37, v9, v2);
      DynamicImpressionsCalculator.removeElement(_:)(v37);
      v43 = swift_release(v41);
      v44 = *(void (**)(char *, uint64_t, __n128))(v42 + 8);
      v32 = v54;
      v44(v37, v2, v43);
    }
  }
LABEL_22:
  swift_bridgeObjectRelease(v38);
  v45 = swift_release(v55);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v47 + 8))(v46, v52, v45);
}

uint64_t sub_E3878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ClickLocationElement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E38D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClickLocationElement(0) - 8) + 80);
  return sub_E1490(a1, v1 + ((v3 + 16) & ~v3));
}

double sub_E3914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  void (*v11)(__int128 *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  __n128 v40;
  uint64_t v41;
  __n128 v42;
  void (*v43)(_QWORD *, char *, __n128);
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __n128 v47;
  double result;
  uint64_t *v49;
  __int128 *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _QWORD v64[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D3010);
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ModernShelf(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_converter, v60, 0, 0);
  v11 = (void (*)(__int128 *__return_ptr, uint64_t))v10[6];
  if (!v11)
  {
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    goto LABEL_8;
  }
  v54 = (__int128 *)v5;
  v51 = v1;
  v52 = v9;
  v55 = v7;
  v56 = v6;
  v12 = v10[8];
  v13 = v10[9];
  v14 = v10[7];
  v16 = v10[4];
  v15 = v10[5];
  v18 = v10[3];
  v59 = v10[2];
  v17 = v59;
  v20 = *v10;
  v19 = v10[1];
  v57 = v14;
  v58 = v19;
  sub_2C690(v20, v19);
  sub_2C690(v17, v18);
  sub_2C690(v16, v15);
  v21 = v57;
  sub_2C690((uint64_t)v11, v57);
  sub_2C690(v12, v13);
  v53 = a1;
  v11(&v61, a1);
  sub_1D618(v20, v58);
  sub_1D618(v59, v18);
  sub_1D618(v16, v15);
  sub_1D618((uint64_t)v11, v21);
  sub_1D618(v12, v13);
  if (!*((_QWORD *)&v62 + 1))
  {
LABEL_8:
    v49 = &qword_3D1A10;
    v50 = &v61;
LABEL_11:
    sub_D1D4((uint64_t)v50, v49);
    return result;
  }
  sub_1B738(&v61, (uint64_t)v64);
  v22 = (void (*)(uint64_t))v10[2];
  if (!v22)
  {
    v35 = v54;
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v54, 1, 1, v56);
    goto LABEL_10;
  }
  v23 = v10[9];
  v59 = v10[8];
  v24 = v59;
  v25 = v10[6];
  v26 = v10[7];
  v28 = v10[4];
  v27 = v10[5];
  v29 = v10[3];
  v32 = v10;
  v31 = *v10;
  v30 = v32[1];
  sub_2C690(v31, v30);
  sub_2C690((uint64_t)v22, v29);
  sub_2C690(v28, v27);
  sub_2C690(v25, v26);
  v33 = v24;
  v34 = v23;
  sub_2C690(v33, v23);
  v35 = v54;
  v22(v53);
  sub_1D618(v31, v30);
  sub_1D618((uint64_t)v22, v29);
  sub_1D618(v28, v27);
  sub_1D618(v25, v26);
  sub_1D618(v59, v34);
  v37 = v55;
  v36 = v56;
  if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v55 + 48))(v35, 1, v56) == 1)
  {
LABEL_10:
    __swift_destroy_boxed_opaque_existential_0(v64);
    v49 = (uint64_t *)&unk_3D3010;
    v50 = v35;
    goto LABEL_11;
  }
  v38 = v52;
  (*(void (**)(char *, __int128 *, uint64_t))(v37 + 32))(v52, v35, v36);
  v39 = (uint64_t *)(v51 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension);
  v40 = swift_beginAccess(v51 + OBJC_IVAR____TtC23ShelfKitCollectionViews15ShelvesDelegate_multiSelectableExtension, &v61, 32, 0);
  v41 = *v39;
  if (*v39)
  {
    swift_endAccess(&v61);
    v42 = swift_retain(v41);
    v43 = (void (*)(_QWORD *, char *, __n128))MultiSelectableExtension.didDeselect.getter(v42);
    v45 = v44;
    v46 = swift_release(v41);
    v43(v64, v38, v46);
    v47 = swift_release(v45);
    (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v38, v36, v47);
    __swift_destroy_boxed_opaque_existential_0(v64);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v38, v36, v40);
    __swift_destroy_boxed_opaque_existential_0(v64);
    *(_QWORD *)&result = swift_endAccess(&v61).n128_u64[0];
  }
  return result;
}

uint64_t sub_E3CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_E3CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for IndexPath(0);
  v5 = sub_89A0(&qword_3D5820, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

void *sub_E3D60(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_20EA84(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5800);
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = v4[2];
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v17[16 * v16])
      result = memmove(&v4[2 * a1 + 4], v17, 16 * v16);
    v18 = v4[2];
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      v4[2] = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_E3ED0()
{
  return type metadata accessor for ShelvesDelegate(0);
}

uint64_t type metadata accessor for ShelvesDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_3D57D0;
  if (!qword_3D57D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelvesDelegate);
  return result;
}

void sub_E3F14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_2F4FB8;
  v4[2] = &unk_2F4FD0;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[8] = &unk_2F4FE8;
  v4[9] = &unk_2F5000;
  v4[10] = &unk_2F4FE8;
  v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[12] = &unk_2F5018;
  sub_E3FF0(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

uint64_t method lookup function for ShelvesDelegate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ShelvesDelegate);
}

void sub_E3FF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D57E0)
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D57E0);
  }
}

uint64_t sub_E4044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E4088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategorySelectionGridLayout.SubviewPlacement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_E40CC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  char v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  id v19;
  id v20;
  Class isa;
  id v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSArray v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  double height;
  id v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  objc_super v68;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = type metadata accessor for HeaderButtonItem(0);
  __chkstk_darwin(v7);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_E4A5C(a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10);
    v11 = v3;
    sub_E4820();
    v13 = v12;
    sub_E4AA0((uint64_t)v10);
  }
  else
  {
    v14 = v3;
    v13 = 0;
  }
  *((_BYTE *)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LargeTitleAccessoryView_wantsBaselineAlignment) = v13 & 1;

  v68.receiver = v3;
  v68.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v68, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  swift_retain(a2);
  v16 = (uint64_t)sub_E4ADC(a1, v15, a2);
  swift_bridgeObjectRelease(a1);

  swift_release(a2);
  if (!((unint64_t)v16 >> 62))
  {
    v17 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
    v18 = v17 == 1;
    if (v17 >= 1)
      goto LABEL_6;
LABEL_22:
    swift_bridgeObjectRelease(v16);
    v22 = v15;
    goto LABEL_23;
  }
  if (v16 < 0)
    v65 = v16;
  else
    v65 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v66 = _CocoaArrayWrapper.endIndex.getter(v65);
  swift_bridgeObjectRelease(v16);
  v18 = v66 == 1;
  if (v66 < 1)
    goto LABEL_22;
LABEL_6:
  if (!v18)
  {
    v20 = objc_allocWithZone((Class)UIStackView);
    sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v22 = objc_msgSend(v20, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    objc_msgSend(v22, "setSpacing:", 16.0);
    objc_msgSend(v22, "setAlignment:", 3);
    goto LABEL_12;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    goto LABEL_11;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8)))
  {
    v19 = *(id *)(v16 + 32);
LABEL_11:
    v22 = v19;
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v16).n128_u64[0];
LABEL_12:
    objc_msgSend(v15, "addSubview:", v22, v23);
    if (*((_BYTE *)v15 + OBJC_IVAR____TtC23ShelfKitCollectionViews23LargeTitleAccessoryView_wantsBaselineAlignment) == 1)
    {
      objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v24 = (void *)objc_opt_self(NSLayoutConstraint);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v26 = swift_allocObject(v25, 64, 7);
      *(_OWORD *)(v26 + 16) = xmmword_2F0A20;
      v27 = objc_msgSend(v22, "firstBaselineAnchor");
      v28 = objc_msgSend(v15, "bottomAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      *(_QWORD *)(v26 + 32) = v29;
      v30 = objc_msgSend(v22, "leadingAnchor");
      v31 = objc_msgSend(v15, "leadingAnchor");
      v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

      *(_QWORD *)(v26 + 40) = v32;
      v33 = objc_msgSend(v22, "trailingAnchor");
      v34 = objc_msgSend(v15, "trailingAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

      *(_QWORD *)(v26 + 48) = v35;
      v36 = objc_msgSend(v15, "heightAnchor");
      v37 = objc_msgSend(v22, "heightAnchor");
      v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

      *(_QWORD *)(v26 + 56) = v38;
      v67 = v26;
      specialized Array._endMutation()(v39);
      v40 = v67;
      sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
      v41.super.isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v24, "activateConstraints:", v41.super.isa, swift_bridgeObjectRelease(v40).n128_f64[0]);
    }
    else
    {
      v42 = objc_msgSend(v22, "superview");
      if (!v42)
      {
LABEL_17:
        height = UILayoutFittingCompressedSize.height;
        v62 = v15;
        objc_msgSend(v22, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, height);
        objc_msgSend(v62, "setFrame:", 0.0, 0.0, v63, v64);

LABEL_23:
        swift_release(a2);
        return;
      }
      v43 = v42;
      objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v44 = (void *)objc_opt_self(NSLayoutConstraint);
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v46 = swift_allocObject(v45, 64, 7);
      *(_OWORD *)(v46 + 16) = xmmword_2F0A20;
      v47 = objc_msgSend(v22, "leftAnchor");
      v48 = objc_msgSend(v43, "leftAnchor");
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

      *(_QWORD *)(v46 + 32) = v49;
      v50 = objc_msgSend(v22, "rightAnchor");
      v51 = objc_msgSend(v43, "rightAnchor");
      v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

      *(_QWORD *)(v46 + 40) = v52;
      v53 = objc_msgSend(v22, "topAnchor");
      v54 = objc_msgSend(v43, "topAnchor");
      v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

      *(_QWORD *)(v46 + 48) = v55;
      v56 = objc_msgSend(v22, "bottomAnchor");
      v57 = objc_msgSend(v43, "bottomAnchor");
      v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

      *(_QWORD *)(v46 + 56) = v58;
      v67 = v46;
      specialized Array._endMutation()(v59);
      v60 = v67;
      sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
      v41.super.isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v44, "activateConstraints:", v41.super.isa, swift_bridgeObjectRelease(v60).n128_f64[0]);

    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_E4820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for HeaderButtonItem(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E4A5C(v0, (uint64_t)v5);
  v6 = (char *)sub_E491C + 4 * byte_2F5030[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_E491C()
{
  uint64_t v0;

  sub_E4AA0(v0);
  return 0;
}

uint64_t type metadata accessor for LargeTitleAccessoryView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23LargeTitleAccessoryView);
}

uint64_t sub_E4A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeaderButtonItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E4AA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeaderButtonItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_E4ADC(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id i;
  uint64_t v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  result = _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = *(_QWORD *)(type metadata accessor for HeaderButtonItem(0) - 8);
    v9 = *(_QWORD *)(v8 + 72);
    v10 = a1
        + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + v9 * (v5 - 1);
    v11 = -v9;
    for (i = objc_msgSend(a2, "traitCollection", swift_bridgeObjectRetain(a1).n128_f64[0], a1);
          ;
          i = objc_msgSend(a2, "traitCollection", v14, v21))
    {
      v15 = i;
      v16 = objc_msgSend(v15, "horizontalSizeClass");

      sub_2434D4((uint64_t)v16, a3);
      if (v17)
      {
        v18 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v19 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
        specialized Array._endMutation()(v13);
      }
      v10 += v11;
      if (!--v5)
        break;
    }
    swift_bridgeObjectRelease(v21);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_E4C30(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  double leading;
  double bottom;
  double trailing;
  id v9;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasBanner;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasBanner) = a1;
  if ((a1 & 1) == 0)
  {
LABEL_4:
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView), "removeFromSuperview");
    return;
  }
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView);
  v4 = objc_msgSend(v3, "superview");

  if (v4)
  {
    if ((*(_BYTE *)(v1 + v2) & 1) != 0)
      return;
    goto LABEL_4;
  }
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground), "addSubview:", v3);
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v9 = *(id *)(v1 + v5);
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v3, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

}

void sub_E4D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  Class isa;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasEntitlementBadge;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasEntitlementBadge) != 1)
  {
LABEL_4:
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView), "removeFromSuperview");
    return;
  }
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView;
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView), "superview");

  if (v3)
  {
    if ((*(_BYTE *)(v0 + v1) & 1) != 0)
      return;
    goto LABEL_4;
  }
  objc_msgSend(*(id *)(v0 + v2), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background), "addSubview:", *(_QWORD *)(v0 + v2));
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_E4EB4();
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

void *sub_E4EB4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView____lazy_storage___entitlementBadgeConstraints;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView____lazy_storage___entitlementBadgeConstraints];
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView____lazy_storage___entitlementBadgeConstraints];
  }
  else
  {
    v3 = sub_E522C(v0);
    v4 = *(_QWORD *)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

id sub_E4F18()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  char *v15;
  _BYTE *v16;
  char v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  char *v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  unsigned int v39;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.15);
  v7 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow];
  v8 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow];
  *(_QWORD *)v7 = v6;
  *(_OWORD *)(v7 + 8) = xmmword_2F5080;
  *((_QWORD *)v7 + 3) = 0x4024000000000000;
  v9 = v6;

  sub_E650C();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background;
  v11 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkStyle];
  v12 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize];
  v13 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize];
  v14 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize + 8];
  v15 = (char *)*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background];
  v39 = v11;
  *(double *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius] = ArtworkStyle.iconCornerRadius(for:)(v11, v13, v14);

  v16 = *(_BYTE **)&v1[v10];
  v17 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_cornerStyle];
  v16[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle] = v17;
  v18 = qword_3CF308;
  v19 = v16;
  if (v18 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v20 = (void *)qword_3FAD18;
  v21 = *(void **)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v22 = v20;

  sub_A2A14();
  v23 = *(void **)&v1[v10];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.up(_:), v2);
  v24 = v23;
  v25 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v25, "displayScale");
  v27 = v26;
  if (v26 < COERCE_DOUBLE(1))
  {
    v28 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v28, "scale");
    v27 = v29;

  }
  v30 = CGFloat.rounded(_:toScale:)((uint64_t)v5, v27, 0.5);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(double *)&v24[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = v30;
  sub_A2A14();

  v31 = *v12;
  v32 = v12[1];
  v33 = *(id *)&v1[v10];
  v34 = ArtworkStyle.iconCornerRadius(for:)(v39, v31, v32);
  sub_A2D74(v17, v34);

  v35 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView]
      + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow;
  v36 = *(void **)v35;
  *(_OWORD *)v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;

  sub_E9020();
  return objc_msgSend(v1, "setNeedsLayout");
}

void *sub_E522C(char *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView;
  v3 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView], "bottomAnchor");
  v4 = objc_msgSend(a1, "bottomAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:", v4);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v7 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v5);
  specialized Array._endMutation()(v9);
  v10 = objc_msgSend(*(id *)&a1[v2], "topAnchor");
  v11 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView], "bottomAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v14 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
  specialized Array._endMutation()(v16);
  v17 = objc_msgSend(*(id *)&a1[v2], "leftAnchor");
  v18 = objc_msgSend(a1, "leftAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v21 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
  specialized Array._endMutation()(v23);
  v24 = objc_msgSend(*(id *)&a1[v2], "rightAnchor");
  v25 = objc_msgSend(a1, "rightAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v28 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
  specialized Array._endMutation()(v30);
  v31 = objc_msgSend(*(id *)&a1[v2], "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", 31.0);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  v34 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
  specialized Array._endMutation()(v36);
  return &_swiftEmptyArrayStorage;
}

void sub_E55B8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void *v43;
  double leading;
  double bottom;
  double trailing;
  char *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  id v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  Class isa;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  char *v109;
  uint64_t v110;
  objc_super v111;
  char v112[24];

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v10);
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(&off_3D3FF8, v112, 0, 0);
  v13 = off_3D3FF8;
  if (!off_3D3FF8)
  {
    __break(1u);
    return;
  }
  v14 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView;
  v15 = type metadata accessor for LegacyCachingArtworkView(0);
  v16 = *(_QWORD *)&stru_68.sectname[(_QWORD)v13];
  v17 = *(_QWORD *)&stru_68.segname[(_QWORD)v13 - 8];
  v18 = swift_getObjectType();
  v19 = type metadata accessor for ImageBlur(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = *(_QWORD *)(v17 + 8);
  v21 = v4;
  v22 = swift_unknownObjectRetain_n(v16, 2);
  v23 = sub_1BFD2C(v22, v17, v16, 0, (uint64_t)v12, v15, v18, v20);
  swift_unknownObjectRelease_n(v16, 2, v24);
  *(_QWORD *)&v4[v14] = v23;
  v25 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v26 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground;
  *(_QWORD *)&v21[v26] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background;
  v28 = type metadata accessor for RoundedCornerView();
  *(_QWORD *)&v21[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v28)), "init");
  v29 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView;
  v30 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v21[v29] = sub_17D618(1);
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkStyle] = 0;
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_cornerStyle] = 0;
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasBanner] = 0;
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasEntitlementBadge] = 0;
  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView;
  v32 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  v33 = sub_FD3E8();
  objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v21[v31] = v33;
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView____lazy_storage___entitlementBadgeConstraints] = 0;
  v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_sizeClass] = 8;
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView] = 0;
  v34 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow];
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  *(_QWORD *)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph] = 0;

  v111.receiver = v21;
  v111.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v111, "initWithFrame:", a1, a2, a3, a4);
  v36 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView;
  v37 = *(char **)&v35[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView];
  v38 = &v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v39 = *(void **)&v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  v40 = v35;
  v41 = v37;

  sub_E9020();
  v42 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background;
  objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v40[v42]);
  v43 = *(void **)&v40[v42];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v47 = v40;
  v109 = v47;
  v48 = v43;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v48, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v49 = *(void **)&v35[v36];
  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v40[v42], "addSubview:", v49);
  v50 = objc_msgSend(v49, "leadingAnchor");
  v51 = objc_msgSend(*(id *)&v40[v42], "leadingAnchor");
  v108 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  v52 = objc_msgSend(*(id *)&v35[v36], "trailingAnchor");
  v53 = objc_msgSend(*(id *)&v40[v42], "trailingAnchor");
  v107 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  v54 = *(void **)&v35[v36];
  v55 = objc_msgSend(v54, "heightAnchor");
  v56 = objc_msgSend(v54, "widthAnchor");
  v106 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  v57 = objc_msgSend(*(id *)&v35[v36], "topAnchor");
  v58 = objc_msgSend(*(id *)&v40[v42], "topAnchor");
  v105 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  v59 = objc_msgSend(*(id *)&v35[v36], "bottomAnchor");
  v60 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground;
  v61 = v109;
  v62 = objc_msgSend(*(id *)&v109[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground], "topAnchor");
  v104 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);

  objc_msgSend(*(id *)&v61[v60], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v40[v42], "addSubview:", *(_QWORD *)&v61[v60]);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v64 = swift_allocObject(v63, 56, 7);
  *(_OWORD *)(v64 + 16) = xmmword_2EFC80;
  v65 = objc_msgSend(*(id *)&v61[v60], "leadingAnchor");
  v66 = objc_msgSend(*(id *)&v40[v42], "leadingAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v64 + 32) = v67;
  v68 = objc_msgSend(*(id *)&v61[v60], "trailingAnchor");
  v69 = objc_msgSend(*(id *)&v40[v42], "trailingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

  *(_QWORD *)(v64 + 40) = v70;
  v71 = objc_msgSend(*(id *)&v61[v60], "bottomAnchor");
  v72 = objc_msgSend(*(id *)&v40[v42], "bottomAnchor");
  v73 = (char *)objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v64 + 48) = v73;
  v110 = v64;
  specialized Array._endMutation()(v74);
  v75 = v110;
  if (!((unint64_t)v110 >> 62))
  {
    v76 = *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v110);
    v78 = v76 + 5;
    if (!__OFADD__(v76, 5))
      goto LABEL_4;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v110 < 0)
    v101 = v110;
  else
    v101 = v110 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v110);
  v102 = _CocoaArrayWrapper.endIndex.getter(v101);
  v103 = __OFADD__(v102, 5);
  v78 = v102 + 5;
  if (v103)
    goto LABEL_19;
LABEL_4:
  v79 = sub_215E80(v78, 1);
  specialized Array._endMutation()(v79);
  v71 = v108;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
  v73 = *(char **)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  v77 = *(_QWORD *)((char *)&dword_18 + (v110 & 0xFFFFFFFFFFFFFF8));
  if ((unint64_t)v73 >= v77 >> 1)
LABEL_20:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v73 + 1, 1);
  v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v71);
  specialized Array._endMutation()(v80);
  v81 = v107;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
  v83 = *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  v82 = *(_QWORD *)((char *)&dword_18 + (v110 & 0xFFFFFFFFFFFFFF8));
  if (v83 >= v82 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
  v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
  specialized Array._endMutation()(v84);
  v85 = v106;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
  v87 = *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  v86 = *(_QWORD *)((char *)&dword_18 + (v110 & 0xFFFFFFFFFFFFFF8));
  if (v87 >= v86 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
  v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v85);
  specialized Array._endMutation()(v88);
  v89 = v105;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
  v91 = *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  v90 = *(_QWORD *)((char *)&dword_18 + (v110 & 0xFFFFFFFFFFFFFF8));
  if (v91 >= v90 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
  v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
  specialized Array._endMutation()(v92);
  v93 = v104;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
  v95 = *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFFF8));
  v94 = *(_QWORD *)((char *)&dword_18 + (v110 & 0xFFFFFFFFFFFFFF8));
  if (v95 >= v94 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
  v96 = (void *)objc_opt_self(NSLayoutConstraint);
  v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v93);
  specialized Array._endMutation()(v97);
  v98 = v110;
  swift_bridgeObjectRelease(v75);

  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v96, "activateConstraints:", isa, swift_bridgeObjectRelease(v98).n128_f64[0]);

  v100 = v109;
  sub_E4F18();

}

void sub_E5FC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  double v39;
  double v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  int v54;
  __n128 v55;
  id v56;
  id v57;
  void *v58;
  int v59;
  __n128 v60;
  void *v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[6];

  LODWORD(v72) = a3;
  v71 = a2;
  v5 = type metadata accessor for Logger(0);
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v8);
  v65 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkRequest(0);
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  __chkstk_darwin(v10);
  v66 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v12);
  v70 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v62[0] = (char *)v62 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)v62 - v17;
  v19 = type metadata accessor for ArtworkModel(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)v62 - v24;
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph);
  if (v26)
  {
    swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph));
    v62[1] = a1;
    HeaderModel.PrimaryArtwork.artwork.getter(v27);
    v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v69(v18, 1, v19) == 1)
    {
      v28 = v26;
      sub_44C28((uint64_t)v18);
      v29 = v3;
    }
    else
    {
      sub_2376C((uint64_t)v18, (uint64_t)v25);
      v29 = v3;
      sub_27E84((uint64_t)v25, (uint64_t)v22);
      v30 = *(double *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize);
      v31 = *(double *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize + 8);
      v32 = type metadata accessor for CropCode(0);
      v33 = v65;
      v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v65, 1, 1, v32);
      v35 = static Logger.artwork.getter(v34);
      v36 = static os_log_type_t.info.getter(v35);
      SignpostAndLogTrace(domain:level:)(v73, v7, v36);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v64);
      v37 = v19;
      v38 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v38, "scale");
      v40 = v39;

      v41 = v66;
      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v22, 1, 0, v33, 0, _swiftEmptyArrayStorage, v73, v30, v31, v40);
      v42 = type metadata accessor for LegacyCachingArtworkView(0);
      v43 = sub_E6898();
      v28 = v26;
      v44 = v42;
      v19 = v37;
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v41, v26, 0, v44, v43);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v68);
      sub_239C0((uint64_t)v25);
    }
    v45 = v72;
    v47 = (uint64_t)v70;
    v46 = v71;
    if (v71 && (v72 & 1) == 0)
    {
      swift_retain(v71);
      sub_17C3DC(v48);
      v49 = v62[0];
      HeaderModel.PrimaryArtwork.artwork.getter(v50);
      v51 = v49;
      if (v69((char *)v49, 1, v19) == 1)
      {
        sub_44C28(v49);
        v52 = 0;
      }
      else
      {
        v72 = v19;
        v53 = *(void **)(v49 + 56);
        v54 = *(unsigned __int8 *)(v51 + 64);
        sub_27F6C(*(id *)(v51 + 56), *(_BYTE *)(v51 + 64));
        sub_239C0(v51);
        if (v54 == 255)
        {
          v52 = 0;
        }
        else
        {
          v52 = (void *)Color.color.getter(v53, v55);
          sub_27F94(v53, v54);
        }
        v19 = v72;
      }
      v56 = *(id *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground);
      objc_msgSend(v56, "setBackgroundColor:", v52);
      swift_release(v46);

    }
    v57 = *(id *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView);
    HeaderModel.PrimaryArtwork.artwork.getter(v57);
    if (v69((char *)v47, 1, v19) == 1)
    {
      sub_44C28(v47);
    }
    else
    {
      v58 = *(void **)(v47 + 56);
      v59 = *(unsigned __int8 *)(v47 + 64);
      sub_27F6C(v58, *(_BYTE *)(v47 + 64));
      sub_239C0(v47);
      if (v59 != 255)
      {
        v61 = (void *)Color.color.getter(v58, v60);
        sub_27F94(v58, v59);
LABEL_19:
        objc_msgSend(v57, "setBackgroundColor:", v61);

        *(_BYTE *)(v29 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasEntitlementBadge) = v45 & 1;
        sub_E4D7C();
        sub_E4C30(v46 != 0);
        swift_release(v28);
        return;
      }
    }
    v61 = 0;
    goto LABEL_19;
  }
}

void sub_E650C()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  int v11;
  double v12;
  BOOL v13;
  char **v14;
  char **v15;
  char *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  id v20;

  v1 = (__int128 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow))
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView);
    if (v2)
    {
      v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView);
    }
    else
    {
      v4 = type metadata accessor for ShadowView();
      v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
      v3 = (char *)v5;
      sub_E68E0(v5);

      v2 = 0;
    }
    v6 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize);
    v7 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize + 8);
    v8 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkStyle);
    v9 = v2;
    v10 = ArtworkStyle.iconCornerRadius(for:)(v8, v6, v7);
    v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_cornerStyle);
    *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerRadius] = v10;
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerStyle] = v11;
    if (v10 >= COERCE_DOUBLE(1))
    {
      v12 = v10;
    }
    else
    {
      v11 = 1;
      v12 = 0.0;
    }
    v13 = v11 == 0;
    if (v11)
      v14 = &selRef__setContinuousCornerRadius_;
    else
      v14 = &selRef__setCornerRadius_;
    if (v13)
      v15 = &selRef__setContinuousCornerRadius_;
    else
      v15 = &selRef__setCornerRadius_;
    objc_msgSend(v3, *v14, 0.0);
    objc_msgSend(v3, *v15, v12);
    objc_msgSend(v3, "setNeedsLayout");
    v16 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v17 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v18 = *v1;
    v19 = v1[1];
    *(_OWORD *)v16 = *v1;
    *((_OWORD *)v16 + 1) = v19;
    v20 = (id)v18;

    sub_CC328();
  }
  else
  {
    sub_E68E0(0);
  }
}

void sub_E66BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph) = a1;
  swift_release(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView);
  v5 = *(_QWORD *)(v4 + qword_3D9750);
  *(_QWORD *)(v4 + qword_3D9750) = a1;
  swift_retain(a1);
  swift_release(v5);
  v6 = (uint64_t *)(*(_QWORD *)(v4 + qword_3D96E8)
                 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v6, v12, 1, 0);
  v7 = *v6;
  *v6 = a1;
  swift_retain_n(a1, 2);
  swift_release(v7);
  v8 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v9 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], &v11, 1, 0);
  v10 = *(_QWORD *)v9;
  *(_QWORD *)v9 = a1;
  swift_release(v10);
  swift_retain(a1);

}

uint64_t type metadata accessor for UpsellArtworkView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17UpsellArtworkView);
}

uint64_t sub_E6884()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph));
}

unint64_t sub_E6898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5910;
  if (!qword_3D5910)
  {
    v1 = type metadata accessor for LegacyCachingArtworkView(255);
    result = swift_getWitnessTable(&unk_2F56E0, v1);
    atomic_store(result, (unint64_t *)&qword_3D5910);
  }
  return result;
}

void sub_E68E0(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v8, "setFrame:");
    objc_msgSend(v1, "insertSubview:atIndex:", v8, 0);

  }
}

void sub_E69A0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  char *v24;
  _OWORD *v25;
  _QWORD v26[2];
  unint64_t v27;
  char v28[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(&off_3D3FF8, v28, 0, 0);
  v5 = off_3D3FF8;
  if (!off_3D3FF8)
    __break(1u);
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkView;
  v7 = type metadata accessor for LegacyCachingArtworkView(0);
  v8 = *(_QWORD *)&stru_68.sectname[(_QWORD)v5];
  v9 = *(_QWORD *)&stru_68.segname[(_QWORD)v5 - 8];
  ObjectType = swift_getObjectType();
  v11 = type metadata accessor for ImageBlur(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = *(_QWORD *)(v9 + 8);
  v13 = swift_unknownObjectRetain_n(v8, 2);
  v14 = sub_1BFD2C(v13, v9, v8, 0, (uint64_t)v4, v7, ObjectType, v12);
  swift_unknownObjectRelease_n(v8, 2, v15);
  *(_QWORD *)&v1[v6] = v14;
  v16 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkSize];
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_chinBackground;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_background;
  v19 = type metadata accessor for RoundedCornerView();
  *(_QWORD *)&v1[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_bannerView;
  v21 = objc_allocWithZone((Class)type metadata accessor for UpsellBannerView(0));
  *(_QWORD *)&v1[v20] = sub_17D618(1);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_artworkStyle] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_cornerStyle] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasBanner] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_hasEntitlementBadge] = 0;
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_entitlementBadgeView;
  v23 = objc_allocWithZone((Class)type metadata accessor for EntitlementBadgeView(0));
  v24 = sub_FD3E8();
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v22] = v24;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView____lazy_storage___entitlementBadgeConstraints] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_sizeClass] = 8;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadowView] = 0;
  v25 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_shadow];
  *v25 = 0u;
  v25[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17UpsellArtworkView_objectGraph] = 0;

  v26[1] = 0;
  v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v27);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellArtworkView.swift", 47, 2, 138, 0);
  __break(1u);
}

id sub_E6C48(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  objc_super v29;

  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_usesBoundsForBaselineGuide] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton____lazy_storage___layoutView] = 0;
  v29.receiver = v4;
  v29.super_class = (Class)type metadata accessor for RoundHeaderButton();
  v9 = objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v9, "setContentHorizontalAlignment:", 0);
  v10 = objc_msgSend(v9, "titleLabel");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setLineBreakMode:", 4);

  }
  v12 = objc_msgSend(v9, "titleLabel");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setNumberOfLines:", 1);

  }
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v9;
  v16 = objc_msgSend(v14, "tertiarySystemFillColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = objc_msgSend(v15, "layer");
  objc_msgSend(v17, "setCornerRadius:", 8.0);

  objc_msgSend(v15, "setTintAdjustmentMode:", 1);
  objc_msgSend(v15, "setContentEdgeInsets:", 0.0, 16.0, 0.0, 16.0);
  v18 = qword_3CEFE8;
  v19 = v15;
  if (v18 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v19, "setTitleColor:forState:", qword_3D0890, 0);

  v20 = objc_msgSend(v19, "titleLabel");
  if (v20)
  {
    v21 = v20;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v22 = (void *)static UIFont.bodyEmph.getter();
    v23 = (void *)static UIFont.bodyEmph.getter();
    v24 = (void *)static UIFont.preferredFont(iOS:mac:)(v22, v23);

    objc_msgSend(v21, "setFont:", v24);
  }
  v25 = objc_msgSend(v19, "imageView");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setContentMode:", 4);

  }
  objc_msgSend(v19, "setTintColor:", qword_3D0890);
  v27 = v19;
  UIEdgeInsets.init(top:leading:bottom:trailing:layoutDirection:)(objc_msgSend(v27, "effectiveUserInterfaceLayoutDirection"), 0.0, 0.0, 0.0, 12.0);
  objc_msgSend(v27, "setImageEdgeInsets:");

  return v27;
}

id sub_E6F90()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton____lazy_storage___layoutView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton____lazy_storage___layoutView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton____lazy_storage___layoutView];
  }
  else
  {
    v4 = sub_E6FF0(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_E6FF0(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(a1, "addSubview:", v2);
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F0A20;
    v8 = objc_msgSend(v2, "leftAnchor");
    v9 = objc_msgSend(v4, "leftAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v2, "rightAnchor");
    v12 = objc_msgSend(v4, "rightAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v7 + 40) = v13;
    v14 = objc_msgSend(v2, "topAnchor");
    v15 = objc_msgSend(v4, "topAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v7 + 48) = v16;
    v17 = objc_msgSend(v2, "bottomAnchor");
    v18 = objc_msgSend(v4, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v7 + 56) = v19;
    specialized Array._endMutation()(v20);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  }
  return v2;
}

id sub_E73A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoundHeaderButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RoundHeaderButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17RoundHeaderButton);
}

void *sub_E742C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView);
  v2 = v1;
  return v1;
}

void sub_E7458(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundHeaderButton_progressView) = a1;

}

id sub_E746C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  double v5;

  v3 = objc_msgSend(v1, "titleLabel");
  if (v3)
  {
    v4 = v3;
    v5 = 1.0;
    if ((a1 & 1) != 0)
      v5 = 0.0;
    objc_msgSend(v3, "setAlpha:", v5);

  }
  return objc_msgSend(v1, "setUserInteractionEnabled:", (a1 & 1) == 0);
}

void sub_E74F0(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setAlpha:", 1.0);

  }
  else
  {
    __break(1u);
  }
}

id sub_E75C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardPresentationAnimator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CardPresentationAnimator()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24CardPresentationAnimator);
}

void sub_E7614(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setAlpha:", 0.0);

      v6 = (void *)objc_opt_self(UIView);
      v7 = swift_allocObject(&unk_380A48, 24, 7);
      *(_QWORD *)(v7 + 16) = v3;
      v18 = sub_E77E4;
      v19 = v7;
      v14 = _NSConcreteStackBlock;
      v15 = 1107296256;
      v16 = sub_24360;
      v17 = &block_descriptor_13;
      v8 = _Block_copy(&v14);
      v9 = v19;
      v10 = v3;
      swift_release(v9);
      v11 = swift_allocObject(&unk_380A98, 24, 7);
      *(_QWORD *)(v11 + 16) = a1;
      v18 = sub_E7828;
      v19 = v11;
      v14 = _NSConcreteStackBlock;
      v15 = 1107296256;
      v16 = sub_1E3D64;
      v17 = &block_descriptor_7;
      v12 = _Block_copy(&v14);
      v13 = v19;
      swift_unknownObjectRetain(a1);
      swift_release(v13);
      objc_msgSend(v6, "animateWithDuration:animations:completion:", v8, v12, 0.25);
      _Block_release(v12);
      _Block_release(v8);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_E77C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E77E4()
{
  uint64_t v0;

  sub_E74F0(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_13(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_E7804()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_E7828(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), "completeTransition:", a1 & 1);
}

uint64_t storeEnumTagSinglePayload for Neighbor.BackgroundState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E7894 + 4 * byte_2F51A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E78C8 + 4 * byte_2F51A0[v4]))();
}

uint64_t sub_E78C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E78D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE78D8);
  return result;
}

uint64_t sub_E78E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE78ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E78F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E78F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Neighbor.BackgroundState()
{
  return &type metadata for Neighbor.BackgroundState;
}

uint64_t getEnumTagSinglePayload for ArtworkViewStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Neighbor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_E79F0 + 4 * byte_2F51AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E7A24 + 4 * byte_2F51AA[v4]))();
}

uint64_t sub_E7A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E7A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE7A34);
  return result;
}

uint64_t sub_E7A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE7A48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_E7A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E7A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Neighbor()
{
  return &type metadata for Neighbor;
}

unint64_t sub_E7A74()
{
  unint64_t result;

  result = qword_3D5988;
  if (!qword_3D5988)
  {
    result = swift_getWitnessTable(&unk_2F5274, &type metadata for Neighbor);
    atomic_store(result, (unint64_t *)&qword_3D5988);
  }
  return result;
}

_QWORD *sub_E7AB8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

unint64_t sub_E7ADC()
{
  unint64_t result;

  result = qword_3D5990;
  if (!qword_3D5990)
  {
    result = swift_getWitnessTable(&unk_2F5314, &type metadata for Neighbor.BackgroundState);
    atomic_store(result, (unint64_t *)&qword_3D5990);
  }
  return result;
}

char *sub_E7B24(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  char *v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t countAndFlagsBits;
  char *v35;
  uint64_t v36;
  void *object;
  void *v38;
  id v39;
  id v40;
  objc_super v42;
  Swift::String v43;
  Swift::String v44;

  v13 = (uint64_t *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v15 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v14 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v14 + 1) = v15;
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections;
  *(_QWORD *)&v6[v16] = sub_F39BC((uint64_t)&off_37A138);
  v17 = objc_allocWithZone((Class)UIButton);
  v18 = v6;
  v19 = objc_msgSend(v17, "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_leftButton] = v19;
  v20 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_rightButton] = v20;
  v21 = *v13;
  v22 = v13[1];
  *v13 = a1;
  v13[1] = a2;
  sub_2C690(a1, a2);
  sub_1D618(v21, v22);

  v42.receiver = v18;
  v42.super_class = (Class)type metadata accessor for PageButtonsControl();
  v23 = objc_msgSendSuper2(&v42, "initWithFrame:", a3, a4, a5, a6);
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = (char *)v23;
  v26 = objc_msgSend(v24, "mainBundle");
  v43._object = (void *)0xED00006567617020;
  v27._object = (void *)0x800000000030C760;
  v27._countAndFlagsBits = 0xD000000000000013;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v43._countAndFlagsBits = 0x73756F6976657250;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v43);

  v30 = objc_msgSend(v24, "mainBundle");
  v44._object = (void *)0xE900000000000065;
  v31._object = (void *)0x800000000030C780;
  v31._countAndFlagsBits = 0xD000000000000013;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0x676170207478654ELL;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v44);
  countAndFlagsBits = v33._countAndFlagsBits;

  v35 = (char *)objc_msgSend(v25, "effectiveUserInterfaceLayoutDirection");
  if (v35 == (_BYTE *)&dword_0 + 1)
    v36 = v29._countAndFlagsBits;
  else
    v36 = v33._countAndFlagsBits;
  if (v35 == (_BYTE *)&dword_0 + 1)
    object = v29._object;
  else
    object = v33._object;
  if (v35 == (_BYTE *)&dword_0 + 1)
  {
    v38 = v33._object;
  }
  else
  {
    countAndFlagsBits = v29._countAndFlagsBits;
    v38 = v29._object;
  }
  v39 = *(id *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_leftButton];
  sub_E7FBC(v39, 0xD000000000000013, 0x800000000030C7A0, countAndFlagsBits, (uint64_t)v38, 0x747475427466656CLL, (void *)0xEA00000000006E6FLL);

  swift_bridgeObjectRelease(v38);
  v40 = *(id *)&v25[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_rightButton];
  sub_E7FBC(v40, 0xD000000000000014, 0x800000000030C7C0, v36, (uint64_t)object, 0x7475427468676972, (void *)0xEB000000006E6F74);
  sub_1D618(a1, a2);
  swift_bridgeObjectRelease(object);

  return v25;
}

void sub_E7E68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_leftButton);
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections;
  if ((sub_30E70(0, *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections)) & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  else
  {
    if (qword_3CF030 != -1)
      swift_once(&qword_3CF030, sub_E31C);
    v3 = (id)qword_3FA890;
  }
  v4 = v3;
  objc_msgSend(v1, "setTintColor:", v3);

  v5 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_rightButton);
  if ((sub_30E70(1, *(_QWORD *)(v0 + v2)) & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  else
  {
    if (qword_3CF030 != -1)
      swift_once(&qword_3CF030, sub_E31C);
    v6 = (id)qword_3FA890;
  }
  v7 = v6;
  objc_msgSend(v5, "setTintColor:");

}

id sub_E7FBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v7;
  void *v8;
  NSString v13;
  id v14;
  NSString v15;
  Swift::String v16;
  NSString v17;

  v8 = v7;
  swift_bridgeObjectRetain(a3);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v13);

  objc_msgSend(a1, "setImage:forState:", v14, 0);
  if (qword_3CF030 != -1)
    swift_once(&qword_3CF030, sub_E31C);
  objc_msgSend(a1, "setTintColor:", qword_3FA890);
  objc_msgSend(a1, "addTarget:action:forControlEvents:", v7, "scrollByButton:", 64);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityLabel:", v15);

  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16._countAndFlagsBits = a6;
  v16._object = a7;
  String.append(_:)(v16);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityIdentifier:", v17, swift_bridgeObjectRelease(0x800000000030C7E0).n128_f64[0], 0xD000000000000013);

  return objc_msgSend(v8, "addSubview:", a1);
}

void sub_E81B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  char v6;
  void (*v7)(uint64_t, __n128);
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_leftButton);
  sub_E710(0, (unint64_t *)&qword_3E1860, UIButton_ptr);
  v5 = v4;
  v6 = static NSObject.== infix(_:_:)(v5, a1);

  if ((v6 & 1) != 0)
  {
    if ((sub_30E70(0, *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections)) & 1) != 0)
    {
      v7 = *(void (**)(uint64_t, __n128))(v1
                                                  + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle);
      if (v7)
      {
        v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle + 8);
        v9 = swift_retain(v8);
        v10 = 0;
LABEL_9:
        v7(v10, v9);
        sub_1D618((uint64_t)v7, v8);
      }
    }
  }
  else
  {
    v11 = *(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_rightButton);
    v12 = static NSObject.== infix(_:_:)(v11, a1);

    if ((v12 & 1) != 0
      && (sub_30E70(1, *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections)) & 1) != 0)
    {
      v13 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle;
      v7 = *(void (**)(uint64_t, __n128))(v2
                                                  + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle);
      if (v7)
      {
        v8 = *(_QWORD *)(v13 + 8);
        v9 = swift_retain(v8);
        v10 = 1;
        goto LABEL_9;
      }
    }
  }
}

id sub_E8430()
{
  char *v0;
  double *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  CGFloat v8;
  objc_super v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for PageButtonsControl();
  objc_msgSendSuper2(&v10, "layoutSubviews");
  v1 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v2 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v3 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets + 16];
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_leftButton];
  objc_msgSend(v4, "setContentEdgeInsets:", v2, 0.0, v3, 0.0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_rightButton];
  objc_msgSend(v5, "setContentEdgeInsets:", v2, 0.0, v3, 0.0);
  v6 = v1[1];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:", 0.0, 0.0, v6, CGRectGetHeight(v11));
  v7 = v1[3];
  objc_msgSend(v0, "bounds");
  v8 = CGRectGetWidth(v12) - v7;
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v5, "setFrame:", v8, 0.0, v7, CGRectGetHeight(v13));
}

id sub_E85C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PageButtonsControl();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PageButtonsControl()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews18PageButtonsControl);
}

uint64_t storeEnumTagSinglePayload for HorizontalScrollDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E86BC + 4 * byte_2F5345[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E86F0 + 4 * byte_2F5340[v4]))();
}

uint64_t sub_E86F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E86F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE8700);
  return result;
}

uint64_t sub_E870C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE8714);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E8718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E8720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalScrollDirection()
{
  return &type metadata for HorizontalScrollDirection;
}

unint64_t sub_E8740()
{
  unint64_t result;

  result = qword_3D59E8;
  if (!qword_3D59E8)
  {
    result = swift_getWitnessTable(&unk_2F53EC, &type metadata for HorizontalScrollDirection);
    atomic_store(result, (unint64_t *)&qword_3D59E8);
  }
  return result;
}

void sub_E8784()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_scrollHandle];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v3 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v2 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v2 + 1) = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections;
  *(_QWORD *)&v0[v4] = sub_F39BC((uint64_t)&off_37A160);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/PageButtonsControl.swift", 48, 2, 87, 0);
  __break(1u);
}

void sub_E8850(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  const char *v8;
  id v9;
  void *v10;
  id v11;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType();
  v8 = *a4;
  v9 = v12.receiver;
  objc_msgSendSuper2(&v12, v8, a3);
  v10 = (void *)objc_opt_self(ASKRebootstrapCoordinator);
  v11 = objc_msgSend(v10, "sharedCoordinator", v12.receiver, v12.super_class);
  objc_msgSend(v11, *a5);

}

id sub_E88E0(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSURL *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E8BC0(a1, (uint64_t)v7);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v10);
    v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  v16.receiver = v2;
  v16.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v16, "initWithCompositionURL:", v11);

  v14 = v13;
  sub_E8C08(a1);
  if (v14)

  return v14;
}

uint64_t type metadata accessor for ComposeReviewViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews27ComposeReviewViewController);
}

uint64_t sub_E8BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E8C08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_E8C48(char a1, double a2)
{
  uint64_t v2;
  double v3;
  int v4;
  _BYTE *v5;
  _BYTE *v6;
  void *v7;
  const char *v8;
  const char *v9;
  double v10;
  _BYTE *v11;
  _BOOL4 v12;
  _BYTE *v13;
  void *v14;
  _BOOL4 v15;
  double v16;
  char **v17;
  char **v18;
  _BOOL4 v19;
  void *v20;
  _BOOL8 v21;
  BOOL v22;
  char **v23;
  char **v24;

  v3 = a2;
  v4 = a1 & 1;
  v5 = *(_BYTE **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView);
  if (v5)
  {
    *(double *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerRadius] = a2;
    v5[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerStyle] = v4;
    v6 = v5;
    v7 = v6;
    v8 = "_setCornerRadius:";
    if (v4)
      v8 = "_setContinuousCornerRadius:";
    if (v3 >= COERCE_DOUBLE(1))
      objc_msgSend(v6, v8, 0.0);
    else
      objc_msgSend(v6, "_setContinuousCornerRadius:", 0.0);
    v9 = "_setContinuousCornerRadius:";
    if (v4)
      v9 = "_setCornerRadius:";
    if (v3 >= COERCE_DOUBLE(1))
      v10 = v3;
    else
      v10 = 0.0;
    if (v3 >= COERCE_DOUBLE(1))
      objc_msgSend(v7, v9, v10);
    else
      objc_msgSend(v7, "_setCornerRadius:", v10);
    objc_msgSend(v7, "setNeedsLayout");

  }
  v11 = *(_BYTE **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView);
  if (v11)
  {
    *(double *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerRadius] = v3;
    v12 = v4 == 0;
    v11[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerStyle] = v4;
    v13 = v11;
    v14 = v13;
    v15 = v3 >= COERCE_DOUBLE(1);
    if (v3 < COERCE_DOUBLE(1))
      v16 = 0.0;
    else
      v16 = v3;
    if (v15 && v12)
      v17 = &selRef__setCornerRadius_;
    else
      v17 = &selRef__setContinuousCornerRadius_;
    if (v15 && v12)
      v18 = &selRef__setContinuousCornerRadius_;
    else
      v18 = &selRef__setCornerRadius_;
    objc_msgSend(v13, *v17);
    objc_msgSend(v14, *v18, v16);
    objc_msgSend(v14, "setClipsToBounds:", v3 >= COERCE_DOUBLE(1));

  }
  v19 = v4 == 0;
  *(double *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius) = v3;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle) = v4;
  v20 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView);
  v21 = v3 >= COERCE_DOUBLE(1);
  if (v3 < COERCE_DOUBLE(1))
    v3 = 0.0;
  v22 = !v21 || !v19;
  if (v21 && v19)
    v23 = &selRef__setCornerRadius_;
  else
    v23 = &selRef__setContinuousCornerRadius_;
  if (v22)
    v24 = &selRef__setCornerRadius_;
  else
    v24 = &selRef__setContinuousCornerRadius_;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), *v23);
  objc_msgSend(v20, *v24, v3);
  objc_msgSend(v20, "setClipsToBounds:", v21);
  sub_A2A14();
}

uint64_t sub_E8E5C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners);
}

void sub_E8E70(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners] = a1;
  v2 = sub_13173C(a1);
  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setMaskedCorners:", v2);

  sub_A2A14();
  sub_EABC4();
}

id sub_E8EDC()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView);
}

void sub_E8EEC(unsigned __int8 *a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;

  v3 = type metadata accessor for ArtworkAspectRule(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v5 = *a1;
  objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection", v4);
  __asm { BR              X9 }
}

uint64_t sub_E8F74(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __n128 v24;

  if (a1 == 1)
    v22 = 12;
  else
    v22 = 11;
  objc_msgSend(v17, "setContentMode:", v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v19, v16);
  v23 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v24 = swift_beginAccess(v23, v21 - 72, 33, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 40))(v23, v18, v16, v24);
  return swift_endAccess(v21 - 72);
}

void sub_E9020()
{
  uint64_t v0;
  __int128 *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  double v6;
  int v7;
  id v8;
  int v9;
  BOOL v10;
  char **v11;
  char **v12;
  id v13;
  char *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  id v18;

  v1 = (__int128 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow)
    || *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_internalBackgroundColor))
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView);
    if (v2)
    {
      v3 = *(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView);
    }
    else
    {
      v4 = type metadata accessor for ShadowView();
      v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
      v3 = (char *)v5;
      sub_EBC4C(v5);

    }
    v6 = *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius);
    v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle);
    *(double *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerRadius] = v6;
    v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_cornerStyle] = v7;
    v8 = v2;
    if (v6 < COERCE_DOUBLE(1))
      v9 = 1;
    else
      v9 = v7;
    if (v6 < COERCE_DOUBLE(1))
      v6 = 0.0;
    v10 = v9 == 0;
    if (v9)
      v11 = &selRef__setContinuousCornerRadius_;
    else
      v11 = &selRef__setCornerRadius_;
    if (v10)
      v12 = &selRef__setContinuousCornerRadius_;
    else
      v12 = &selRef__setCornerRadius_;
    objc_msgSend(v3, *v11);
    objc_msgSend(v3, *v12, v6);
    objc_msgSend(v3, "setNeedsLayout");
    v13 = objc_msgSend(v3, "layer");
    objc_msgSend(v13, "setMaskedCorners:", sub_13173C(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners)));

    objc_msgSend(v3, "setBackgroundColor:", *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_internalBackgroundColor));
    v14 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v15 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v16 = *v1;
    v17 = v1[1];
    *(_OWORD *)v14 = *v1;
    *((_OWORD *)v14 + 1) = v17;
    v18 = (id)v16;

    sub_CC328();
  }
  else
  {
    sub_EBC4C(0);
  }
}

void sub_E922C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char *v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char isEscapingClosureAtFileLocation;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  if (v2)
  {
    v4 = *((_QWORD *)v1 + 1);
    v3 = *((_QWORD *)v1 + 2);
    v6 = *((_QWORD *)v1 + 3);
    v5 = *((_QWORD *)v1 + 4);
    v7 = *((_QWORD *)v1 + 5);
    v8 = *((_QWORD *)v1 + 6);
    v9 = (void *)*((_QWORD *)v1 + 7);
    *(_QWORD *)&v34 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
    *((_QWORD *)&v34 + 1) = v4;
    *(_QWORD *)&v35 = v3;
    *((_QWORD *)&v35 + 1) = v6;
    *(_QWORD *)&v36 = v5;
    *((_QWORD *)&v36 + 1) = v7;
    *(_QWORD *)&v37 = v8;
    *((_QWORD *)&v37 + 1) = v9;
    v10 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView];
    if (v10)
    {
      sub_B7A24(v2, v4, v3, v6, v5, v7, v8, v9);
      v11 = v0;
      v12 = v10;
      sub_EAA38(v12, (uint64_t)v11, &v34);

      sub_B7AE8(v2, v4, v3, v6, v5, v7, v8, v9);
    }
    else
    {
      v13 = type metadata accessor for GradientView();
      v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13));
      swift_bridgeObjectRetain(v3);
      v15 = v9;
      v31 = v8;
      swift_bridgeObjectRetain(v2);
      swift_bridgeObjectRetain(v4);
      v27 = objc_msgSend(v14, "init");
      sub_EBEE8(v27);
      v16 = swift_allocObject(&unk_380FB8, 96, 7);
      *(_QWORD *)(v16 + 16) = v27;
      *(_QWORD *)(v16 + 24) = v0;
      v17 = v35;
      *(_OWORD *)(v16 + 32) = v34;
      *(_OWORD *)(v16 + 48) = v17;
      v18 = v37;
      *(_OWORD *)(v16 + 64) = v36;
      *(_OWORD *)(v16 + 80) = v18;
      v29 = (id)objc_opt_self(UIView);
      v19 = swift_allocObject(&unk_380FE0, 32, 7);
      *(_QWORD *)(v19 + 16) = sub_EC53C;
      *(_QWORD *)(v19 + 24) = v16;
      v25 = v7;
      v20 = v19;
      v30 = v19;
      v21 = swift_allocObject(&unk_381008, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_43920;
      *(_QWORD *)(v21 + 24) = v20;
      aBlock[4] = sub_EC6A0;
      v33 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_920D4;
      aBlock[3] = &block_descriptor_25;
      v26 = _Block_copy(aBlock);
      v24 = v33;
      sub_B7A24(v2, v4, v3, v6, v5, v25, v31, v9);
      v28 = v27;
      v22 = v0;
      swift_retain(v16);
      swift_retain(v21);
      objc_msgSend(v29, "performWithoutAnimation:", v26, swift_release(v24).n128_f64[0]);

      sub_B7AE8(v2, v4, v3, v6, v5, v25, v31, v9);
      swift_release(v16);
      _Block_release(v26);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 123, 377, 48, 1);
      swift_release(v30);
      swift_release(v21);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
    }
  }
  else
  {
    sub_EBEE8(0);
  }
}

void (*sub_E9570(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView);
  a1[1] = v1;
  a1[2] = v3;
  *a1 = objc_msgSend(v3, "image");
  return sub_E95C0;
}

void sub_E95C0(uint64_t a1, char a2)
{
  id v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(id *)a1;
  v4 = *(_BYTE **)(a1 + 8);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
  if ((a2 & 1) != 0)
  {
    if ((v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
    {
      v6 = *(void **)(a1 + 16);
      v9 = v3;
      objc_msgSend(v6, "setImage:");
    }
    else
    {
      v9 = *(id *)a1;
      if (v3)
        v7 = objc_msgSend(v3, "imageWithRenderingMode:", v5);
      else
        v7 = 0;
      objc_msgSend(*(id *)(a1 + 16), "setImage:", v7);

    }
    objc_msgSend(v4, "invalidateIntrinsicContentSize");

  }
  else
  {
    v9 = *(id *)a1;
    if ((v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
    {
      objc_msgSend(*(id *)(a1 + 16), "setImage:", v3);
    }
    else
    {
      if (v3)
        v8 = objc_msgSend(v3, "imageWithRenderingMode:", v5);
      else
        v8 = 0;
      objc_msgSend(*(id *)(a1 + 16), "setImage:", v8);

    }
    objc_msgSend(v4, "invalidateIntrinsicContentSize");
  }

}

void sub_E9708(id a1, char a2)
{
  _BYTE *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD aBlock[5];
  uint64_t v16;

  v4 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v5 = objc_msgSend(v4, "layer");
  objc_msgSend(v5, "removeAllAnimations");

  if ((a2 & 1) != 0)
  {
    objc_msgSend(v4, "setAlpha:", 0.0);
    if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
    {
      a1 = a1;
      objc_msgSend(v4, "setImage:");
    }
    else
    {
      if (a1)
        v6 = objc_msgSend(a1, "imageWithRenderingMode:", *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode]);
      else
        v6 = 0;
      objc_msgSend(v4, "setImage:", v6);

    }
    objc_msgSend(v2, "invalidateIntrinsicContentSize");

    v8 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "init");
    v9 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v8, 0.15);

    v10 = swift_allocObject(&unk_380F68, 24, 7);
    *(_QWORD *)(v10 + 16) = v2;
    aBlock[4] = sub_EC4D0;
    v16 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24360;
    aBlock[3] = &block_descriptor_12;
    v11 = _Block_copy(aBlock);
    v12 = v16;
    v13 = v2;
    objc_msgSend(v9, "addAnimations:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
    objc_msgSend(v9, "startAnimation");

  }
  else
  {
    if ((v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
    {
      a1 = a1;
      objc_msgSend(v4, "setImage:");
    }
    else
    {
      if (a1)
        v7 = objc_msgSend(a1, "imageWithRenderingMode:", *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode]);
      else
        v7 = 0;
      objc_msgSend(v4, "setImage:", v7);

    }
    objc_msgSend(v2, "invalidateIntrinsicContentSize");

  }
}

unint64_t sub_E99BC()
{
  unint64_t result;

  result = qword_3D5A18;
  if (!qword_3D5A18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkViewStyle, &type metadata for ArtworkViewStyle);
    atomic_store(result, (unint64_t *)&qword_3D5A18);
  }
  return result;
}

unint64_t sub_E9A04()
{
  unint64_t result;

  result = qword_3D5A20;
  if (!qword_3D5A20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ArtworkAlignment, &type metadata for ArtworkAlignment);
    atomic_store(result, (unint64_t *)&qword_3D5A20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ArtworkViewStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_E9A94 + 4 * byte_2F546B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E9AC8 + 4 * byte_2F5466[v4]))();
}

uint64_t sub_E9AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E9AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE9AD8);
  return result;
}

uint64_t sub_E9AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE9AECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_E9AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E9AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkViewStyle()
{
  return &type metadata for ArtworkViewStyle;
}

uint64_t storeEnumTagSinglePayload for ArtworkAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_E9B60 + 4 * byte_2F5475[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_E9B94 + 4 * byte_2F5470[v4]))();
}

uint64_t sub_E9B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E9B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE9BA4);
  return result;
}

uint64_t sub_E9BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE9BB8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_E9BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E9BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkAlignment()
{
  return &type metadata for ArtworkAlignment;
}

uint64_t sub_E9BE0()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_E9C84;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_EBBFC;
  v4[3] = &block_descriptor_6_1;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  result = swift_release(v5);
  qword_3FAD18 = (uint64_t)v2;
  return result;
}

id sub_E9C84(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (_BYTE *)&dword_0 + 2)
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);
  }
  else
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  v5 = v4;

  return v5;
}

char *sub_E9D28(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  _OWORD *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  double *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  objc_super v37;

  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
  *(_QWORD *)v10 = 1;
  *((_WORD *)v10 + 52) = 0;
  *(_OWORD *)(v10 + 88) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 8) = 0u;
  v11 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v12 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentTransform];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  v12[48] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView] = 0;
  v13 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *v13 = 0u;
  v13[1] = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView] = 0;
  v14 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_internalBackgroundColor] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_isStyleInvalid] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v15 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable] = 0;
  v16 = objc_allocWithZone((Class)UIView);
  v17 = v4;
  v18 = objc_msgSend(v16, "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView] = v18;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView] = v19;
  v20 = (double *)&v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  *v20 = a3;
  v20[1] = a4;
  objc_msgSend(v19, "setContentMode:", 1);
  v21 = &v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v22 = enum case for ArtworkAspectRule.aspectFill(_:);
  v23 = type metadata accessor for ArtworkAspectRule(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);

  v37.receiver = v17;
  v37.super_class = (Class)type metadata accessor for ArtworkView(0);
  v24 = objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v25 = qword_3CF028;
  v26 = (char *)v24;
  if (v25 != -1)
    swift_once(&qword_3CF028, sub_E308);
  objc_msgSend(v26, "setBackgroundColor:", qword_3FA888);
  objc_msgSend(v26, "setClipsToBounds:", 0);
  v27 = OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView;
  v28 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView];
  v29 = (void *)objc_opt_self(UIColor);
  v30 = v28;
  v31 = objc_msgSend(v29, "clearColor");
  objc_msgSend(v30, "setBackgroundColor:", v31);

  v32 = *(void **)&v26[v27];
  objc_msgSend(v32, "setClipsToBounds:", 0);
  objc_msgSend(v26, "addSubview:", v32);
  v33 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  v34 = v32;
  v35 = v33;
  objc_msgSend(v34, "addSubview:", v35);

  return v26;
}

void sub_EA15C(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[13];
  __int16 v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int16 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  __int16 v97;

  v3 = *a1;
  v2 = (uint64_t)a1[1];
  v5 = (uint64_t)a1[2];
  v4 = (uint64_t)a1[3];
  v7 = (uint64_t)a1[4];
  v6 = (uint64_t)a1[5];
  v9 = (uint64_t)a1[6];
  v8 = (uint64_t)a1[7];
  v11 = (uint64_t)a1[8];
  v10 = (uint64_t)a1[9];
  v13 = (uint64_t)a1[10];
  v12 = a1[11];
  v14 = a1[12];
  v15 = *((_WORD *)a1 + 52);
  v16 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle;
  v18 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16);
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80);
  v28 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88);
  v29 = *(_QWORD *)(v16 + 96);
  v30 = *(_WORD *)(v16 + 104);
  if (v3 != (_BYTE *)&dword_0 + 1)
  {
    v70 = v3;
    v71 = v2;
    v72 = v5;
    v73 = v4;
    v74 = v7;
    v75 = v6;
    v76 = v9;
    v77 = v8;
    v78 = v11;
    v79 = v10;
    v80 = v13;
    v81 = v12;
    v82 = v14;
    v83 = v15;
    v66 = v5;
    v67 = v4;
    v65 = v2;
    v62 = v14;
    if (v18 != (_BYTE *)&dword_0 + 1)
    {
      v68[0] = v18;
      v68[1] = v17;
      v68[2] = v19;
      v68[3] = v20;
      v68[4] = v21;
      v68[5] = v22;
      v68[6] = v23;
      v68[7] = v24;
      v68[8] = v25;
      v68[9] = v26;
      v68[10] = v27;
      v68[11] = v28;
      v68[12] = v29;
      v69 = v30 & 0xFF01;
      v33 = v6;
      v34 = v6;
      v42 = v6;
      v35 = v9;
      v36 = v9;
      v41 = v8;
      v37 = v12;
      sub_B79AC(v3, v2, v5, v4, v7, v34, v36, v8, v11, v10, v13, v12);
      sub_B79AC(v3, v65, v66, v67, v7, v33, v35, v41, v11, v10, v13, v37);
      v64 = sub_20B3F4((uint64_t)&v70, (uint64_t)v68);
      v38 = v74;
      v59 = v76;
      v61 = v75;
      v55 = v78;
      v57 = v77;
      v51 = v80;
      v53 = v79;
      v49 = v81;

      sub_B7AE8(v38, v61, v59, v57, v55, v53, v51, v49);
      sub_B7A70(v3, v65, v66, v67, v7, v42, v35, v41, v11, v10, v13, v37);
      if (v64)
        return;
      goto LABEL_8;
    }
    v39 = v11;
    v43 = v28;
    v44 = v27;
    v47 = v17;
    v48 = v19;
    v50 = v20;
    v52 = v21;
    v63 = v11;
    v54 = v22;
    v56 = v23;
    v31 = v8;
    v32 = v12;
    v58 = v24;
    v60 = v15;
    v45 = v26;
    v46 = v25;
    sub_B79AC(v3, v2, v5, v4, v7, v6, v9, v8, v39, v10, v13, v12);
    v40 = v3;
    sub_B7A24(v7, v6, v9, v31, v63, v10, v13, v32);

    sub_B7AE8(v7, v6, v9, v31, v63, v10, v13, v32);
    v27 = v44;
    v26 = v45;
    v25 = v46;
    v17 = v47;
    v19 = v48;
    v20 = v50;
    v21 = v52;
    v22 = v54;
    v23 = v56;
    v24 = v58;
    v15 = v60;
    v12 = v32;
    v14 = v62;
    v11 = v63;
    v2 = v65;
    v5 = v66;
    v4 = v67;
    v8 = v31;
    v28 = v43;
LABEL_6:
    v70 = v3;
    v71 = v2;
    v72 = v5;
    v73 = v4;
    v74 = v7;
    v75 = v6;
    v76 = v9;
    v77 = v8;
    v78 = v11;
    v79 = v10;
    v80 = v13;
    v81 = v12;
    v82 = v14;
    v83 = v15;
    v84 = v18;
    v85 = v17;
    v86 = v19;
    v87 = v20;
    v88 = v21;
    v89 = v22;
    v90 = v23;
    v91 = v24;
    v92 = v25;
    v93 = v26;
    v94 = v27;
    v95 = v28;
    v96 = v29;
    v97 = v30;
    sub_B79AC(v18, v17, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
    sub_EC13C((uint64_t)&v70);
LABEL_8:
    sub_EA4D8();
    return;
  }
  if (v18 != (_BYTE *)&dword_0 + 1)
    goto LABEL_6;
}

void sub_EA4D8()
{
  char *v0;
  char *v1;
  char *v2;
  double d;
  CGFloat ty;
  CGFloat tx;
  CGFloat c;
  CGFloat b;
  double a;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  char *v19;
  unsigned int v20;
  double v21;
  unsigned int v22;
  double v23;
  double *v24;
  void *v25;
  uint64_t v26;
  CGFloat v27;
  void *v28;
  CGFloat v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char **v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  CGFloat *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id (*v77)();
  char v78;
  uint64_t v79;
  char *v80;
  CGAffineTransform aBlock;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
  v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
  d = 1.0;
  ty = 0.0;
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    tx = 0.0;
    c = 0.0;
    b = 0.0;
    a = 1.0;
  }
  else
  {
    v78 = v1[104];
    v9 = *((double *)v1 + 12);
    v11 = *((_QWORD *)v1 + 9);
    v10 = *((_QWORD *)v1 + 10);
    v13 = *((_QWORD *)v1 + 7);
    v12 = *((_QWORD *)v1 + 8);
    v15 = *((_QWORD *)v1 + 5);
    v14 = *((_QWORD *)v1 + 6);
    v66 = v14;
    v69 = (void *)*((_QWORD *)v1 + 11);
    v16 = *((_QWORD *)v1 + 4);
    v74 = *((_QWORD *)v1 + 2);
    v76 = *((_QWORD *)v1 + 3);
    v72 = *((_QWORD *)v1 + 1);
    v17 = v2;
    sub_B7A24(v16, v15, v14, v13, v12, v11, v10, v69);
    v0 = v80;
    sub_B7A70(v2, v72, v74, v76, v16, v15, v66, v13, v12, v11, v10, v69);
    tx = 0.0;
    c = 0.0;
    b = 0.0;
    a = 1.0;
    if ((v78 & 1) == 0)
    {
      objc_msgSend(v80, "bounds");
      CGAffineTransformMakeScale(&aBlock, (v18 + v9) / v18, (v18 + v9) / v18);
      a = aBlock.a;
      b = aBlock.b;
      c = aBlock.c;
      d = aBlock.d;
      tx = aBlock.tx;
      ty = aBlock.ty;
    }
  }
  v19 = *(char **)v1;
  if (*(_QWORD *)v1 != 1)
  {
    v20 = *((unsigned __int16 *)v1 + 52);
    if ((v20 & 1) != 0)
    {
      v21 = 0.5;
      if (v20 >> 8 == 2)
        goto LABEL_18;
    }
    else
    {
      v21 = 0.5;
      if ((v20 & 0x100) == 0)
      {
        v22 = v20 >> 8;
        v23 = 1.0;
        if (*((double *)v1 + 12) <= 0.0)
          v23 = 0.5;
        if (v22 != 2)
          v21 = v23;
      }
    }
    v24 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint];
    if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint + 16] & 1) != 0
      || *v24 != 0.5
      || v24[1] != v21)
    {
      v25 = (void *)objc_opt_self(UIView);
      v26 = swift_allocObject(&unk_380EC8, 40, 7);
      *(_QWORD *)(v26 + 16) = v0;
      *(_QWORD *)(v26 + 24) = 0x3FE0000000000000;
      *(double *)(v26 + 32) = v21;
      v27 = COERCE_DOUBLE(swift_allocObject(&unk_380EF0, 32, 7));
      *(_QWORD *)(*(_QWORD *)&v27 + 16) = sub_EC238;
      *(_QWORD *)(*(_QWORD *)&v27 + 24) = v26;
      *(_QWORD *)&aBlock.tx = sub_101EC;
      aBlock.ty = v27;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_920D4;
      *(_QWORD *)&aBlock.d = &block_descriptor_14;
      v28 = _Block_copy(&aBlock);
      v29 = aBlock.ty;
      v30 = v0;
      swift_retain(*(_QWORD *)&v27);
      objc_msgSend(v25, "performWithoutAnimation:", v28, swift_release(*(_QWORD *)&v29).n128_f64[0]);
      _Block_release(v28);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v27, "", 122, 106, 44, 1);
      swift_release(*(_QWORD *)&v27);
      v79 = v26;
      if ((v28 & 1) != 0)
      {
        __break(1u);
        return;
      }
      v19 = *(char **)v1;
      v77 = sub_EC238;
      if (*(_QWORD *)v1 == 1)
        goto LABEL_21;
LABEL_22:
      v34 = (void *)*((_QWORD *)v1 + 11);
      v35 = *((_QWORD *)v1 + 9);
      v36 = *((_QWORD *)v1 + 10);
      v73 = *((_QWORD *)v1 + 6);
      v75 = *((_QWORD *)v1 + 7);
      v70 = *((_QWORD *)v1 + 5);
      v33 = *((_QWORD *)v1 + 3);
      v65 = *((_QWORD *)v1 + 8);
      v67 = *((_QWORD *)v1 + 4);
      v31 = *((_QWORD *)v1 + 1);
      v32 = *((_QWORD *)v1 + 2);
      sub_B79AC(v19, v31, v32, v33, v67, v70, v73, v75, v65, v35, v36, v34);
      v37 = v19;
      sub_B7A70(v19, v31, v32, v33, v67, v70, v73, v75, v65, v35, v36, v34);
      v0 = v80;
      goto LABEL_23;
    }
LABEL_18:
    v77 = 0;
    v79 = 0;
    goto LABEL_22;
  }
  v77 = 0;
  v79 = 0;
LABEL_21:
  v19 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
LABEL_23:
  v38 = (char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  v39 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *v38 = v19;
  v38[1] = (char *)v31;
  v38[2] = (char *)v32;
  v38[3] = (char *)v33;
  v40 = v19;

  sub_E9020();
  v41 = *(char **)v1;
  if (*(_QWORD *)v1 == 1)
  {
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    v48 = 0;
    v49 = 0;
  }
  else
  {
    v50 = (void *)*((_QWORD *)v1 + 11);
    v47 = *((_QWORD *)v1 + 9);
    v48 = *((_QWORD *)v1 + 10);
    v45 = *((_QWORD *)v1 + 7);
    v46 = *((_QWORD *)v1 + 8);
    v43 = *((_QWORD *)v1 + 5);
    v44 = *((_QWORD *)v1 + 6);
    v51 = *((_QWORD *)v1 + 3);
    v42 = *((_QWORD *)v1 + 4);
    v71 = v51;
    v53 = v1 + 8;
    v52 = *((_QWORD *)v1 + 1);
    v68 = *((_QWORD *)v53 + 1);
    sub_B79AC(v41, v52, v68, v51, v42, v43, v44, v45, v46, v47, v48, v50);
    sub_B7A24(v42, v43, v44, v45, v46, v47, v48, v50);
    sub_B7A70(v41, v52, v68, v71, v42, v43, v44, v45, v46, v47, v48, v50);
    v49 = (uint64_t)v50;
  }
  v54 = (uint64_t *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  v55 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  v56 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 8];
  v57 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 16];
  v58 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 24];
  v59 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 32];
  v60 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 40];
  v61 = *(_QWORD *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 48];
  v62 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 56];
  *v54 = v42;
  v54[1] = v43;
  v54[2] = v44;
  v54[3] = v45;
  v54[4] = v46;
  v54[5] = v47;
  v54[6] = v48;
  v54[7] = v49;
  sub_B7AE8(v55, v56, v57, v58, v59, v60, v61, v62);
  sub_E922C();
  v63 = (CGFloat *)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentTransform];
  *v63 = a;
  v63[1] = b;
  v63[2] = c;
  v63[3] = d;
  v63[4] = tx;
  v63[5] = ty;
  *((_BYTE *)v63 + 48) = 0;
  v64 = *(void **)&v80[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView];
  aBlock.a = a;
  aBlock.b = b;
  aBlock.c = c;
  aBlock.d = d;
  aBlock.tx = tx;
  aBlock.ty = ty;
  objc_msgSend(v64, "setTransform:", &aBlock);
  sub_1D618((uint64_t)v77, v79);
}

uint64_t sub_EAA38(_BYTE *a1, uint64_t a2, __int128 *a3)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  const char *v10;
  const char *v11;
  double v12;
  id v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v17 = a3[1];
  v19 = *a3;
  v15 = a3[2];
  v6 = *(double *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius);
  v8 = *((_QWORD *)a3 + 6);
  v7 = *((_QWORD *)a3 + 7);
  v9 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle);
  *(double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerRadius] = v6;
  a1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerStyle] = v9;
  v10 = "_setCornerRadius:";
  if (v9)
    v10 = "_setContinuousCornerRadius:";
  if (v6 < COERCE_DOUBLE(1))
    objc_msgSend(a1, "_setContinuousCornerRadius:", 0.0, v15, v17, v19);
  else
    objc_msgSend(a1, v10, 0.0, v15, v17, v19);
  v11 = "_setContinuousCornerRadius:";
  if (v9)
    v11 = "_setCornerRadius:";
  if (v6 < COERCE_DOUBLE(1))
    v12 = 0.0;
  else
    v12 = v6;
  if (v6 < COERCE_DOUBLE(1))
    objc_msgSend(a1, "_setCornerRadius:", v12);
  else
    objc_msgSend(a1, v11, v12);
  objc_msgSend(a1, "setClipsToBounds:", v6 >= COERCE_DOUBLE(1));
  v13 = objc_msgSend(a1, "layer");
  objc_msgSend(v13, "setMaskedCorners:", sub_13173C(*(_QWORD *)(a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners)));

  v21[0] = v20;
  v21[1] = v18;
  v21[2] = v16;
  v22 = v8;
  v23 = v7;
  sub_EC57C((uint64_t *)a3);
  return sub_ECA74(v21);
}

void sub_EABC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = sub_13173C(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_roundedCorners));
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView);
  if (v2)
  {
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v3, "setMaskedCorners:", v1);

  }
  v4 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView);
  if (v4)
  {
    v5 = objc_msgSend(v4, "layer");
    objc_msgSend(v5, "setMaskedCorners:", v1);

  }
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "layer"));
  objc_msgSend(v6, "setMaskedCorners:", v1);

  sub_A2A14();
}

id sub_EAD34()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  void *v14;
  double *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  char *v29;
  __n128 v30;
  double v31;
  double v32;
  double v33;
  unint64_t v34;
  double v35;
  unint64_t v36;
  double v37;
  int v38;
  double v39;
  char v40;
  objc_class *v41;
  void *v42;
  void *v43;
  id result;
  uint64_t v45;
  objc_super v46;
  char v47[24];
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v1 = type metadata accessor for ArtworkAspectRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v1).n128_u64[0];
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "bounds", v3);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView];
  objc_msgSend(v14, "setBounds:");
  v15 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint];
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint + 16] & 1) != 0)
  {
    v16 = v14;
    v48.origin.x = v7;
    v48.origin.y = v9;
    v48.size.width = v11;
    v48.size.height = v13;
    v17 = CGRectGetWidth(v48) * 0.5;
    v49.origin.x = v7;
    v49.origin.y = v9;
    v49.size.width = v11;
    v49.size.height = v13;
    v18 = CGRectGetHeight(v49) * 0.5;
  }
  else
  {
    v19 = *v15;
    v20 = v15[1];
    v21 = v14;
    v50.origin.x = v7;
    v50.origin.y = v9;
    v50.size.width = v11;
    v50.size.height = v13;
    v17 = v19 * CGRectGetMaxX(v50);
    v51.origin.x = v7;
    v51.origin.y = v9;
    v51.size.width = v11;
    v51.size.height = v13;
    v18 = v20 * CGRectGetMaxY(v51);
  }
  objc_msgSend(v14, "setCenter:", v17, v18);

  v22 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  v23 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize + 8];
  objc_msgSend(v0, "bounds");
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(v0, "contentMode");
  v29 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
  v30 = swift_beginAccess(&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v47, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v5, v29, v1, v30);
  v31 = CGSize.fitting(_:mode:aspectRule:)(v28, v5, v25, v27, v22, v23);
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v34 = (unint64_t)objc_msgSend(v0, "contentMode");
  v35 = 0.0;
  if (v34 > 0xC)
  {
    objc_msgSend(v0, "contentMode");
  }
  else if (((1 << v34) & 0x7F) != 0)
  {
    v52.origin.x = v7;
    v52.origin.y = v9;
    v52.size.width = v11;
    v52.size.height = v13;
    v35 = CGRectGetMidX(v52) + v31 * -0.5;
  }
  else if (((1 << v34) & 0xA80) == 0)
  {
    v53.origin.x = v7;
    v53.origin.y = v9;
    v53.size.width = v11;
    v53.size.height = v13;
    v35 = CGRectGetMaxX(v53) - v31;
  }
  v36 = (unint64_t)objc_msgSend(v0, "contentMode");
  v37 = 0.0;
  if (v36 > 0xC)
  {
    objc_msgSend(v0, "contentMode");
  }
  else if (((1 << v36) & 0x19F) != 0)
  {
    v54.origin.x = v7;
    v54.origin.y = v9;
    v54.size.width = v11;
    v54.size.height = v13;
    v37 = CGRectGetMidY(v54) + v33 * -0.5;
  }
  else if (((1 << v36) & 0x620) == 0)
  {
    v55.origin.x = v7;
    v55.origin.y = v9;
    v55.size.width = v11;
    v55.size.height = v13;
    v37 = CGRectGetMaxY(v55) - v33;
  }
  if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_isStyleInvalid] == 1)
  {
    v38 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
    if (v38 == 3)
    {
      v39 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerRadius];
      v40 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_cornerStyle];
    }
    else
    {
      v39 = ArtworkStyle.iconCornerRadius(for:)(v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style], v31, v33);
      v40 = v38 == 1;
    }
    sub_E8C48(v40, v39);
  }
  v41 = (objc_class *)type metadata accessor for ArtworkView(0);
  v46.receiver = v0;
  v46.super_class = v41;
  objc_msgSendSuper2(&v46, "layoutSubviews");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setFrame:", v35, v37, v31, v33);
  v42 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderView];
  if (v42)
    objc_msgSend(v42, "setFrame:", v35, v37, v31, v33);
  v43 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView];
  if (v43)
    objc_msgSend(v43, "setFrame:", v35, v37, v31, v33);
  result = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView];
  if (result)
    return objc_msgSend(result, "setFrame:", v35, v37, v31, v33);
  return result;
}

id sub_EB254(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id result;
  char *v15;
  double v16;
  double v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  objc_super v22;

  v9 = (objc_class *)type metadata accessor for ArtworkView(0);
  v22.receiver = v4;
  v22.super_class = v9;
  objc_msgSendSuper2(&v22, "frame");
  v11 = v10;
  v13 = v12;
  v21.receiver = v4;
  v21.super_class = v9;
  result = objc_msgSendSuper2(&v21, "setFrame:", a1, a2, a3, a4);
  v15 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  v16 = *(double *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
  v17 = *(double *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize + 8];
  if (v16 == 0.0 && v17 == 0.0 || (v16 == v11 ? (v18 = v17 == v13) : (v18 = 0), v18))
  {
    objc_msgSend(v4, "frame");
    *(_QWORD *)v15 = v19;
    *((_QWORD *)v15 + 1) = v20;
    return objc_msgSend(v4, "setNeedsLayout");
  }
  return result;
}

id sub_EB33C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  void *v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;

  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = (id)__chkstk_darwin(v3);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  if (v9 == 3)
  {
    if (v8 == 3)
      return result;
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v11 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = v10;
    v12 = v10;

    sub_A2A14();
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0;
    goto LABEL_13;
  }
  if (v8 == 3 || v9 != v8)
  {
    if (qword_3CF308 != -1)
      swift_once(&qword_3CF308, sub_E9BE0);
    v14 = (void *)qword_3FAD18;
    v15 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
    v16 = v14;

    sub_A2A14();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for FloatingPointRoundingRule.up(_:), v3);
    v17 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v17, "displayScale");
    v19 = v18;
    if (v18 < COERCE_DOUBLE(1))
    {
      v20 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v20, "scale");
      v19 = v21;

    }
    v22 = CGFloat.rounded(_:toScale:)((uint64_t)v7, v19, 0.5);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = v22;
LABEL_13:
    sub_A2A14();
    v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_isStyleInvalid] = 1;
    return objc_msgSend(v1, "setNeedsLayout");
  }
  return result;
}

double sub_EB5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule;
  v2 = type metadata accessor for ArtworkAspectRule(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle
                                      + 8));
  sub_B7A70(*(char **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 40), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 48), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 56), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 64), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 72), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 80), *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle + 88));

  sub_B7AE8(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 24), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 32), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 40), *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 48), *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient + 56));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable)).n128_u64[0];
  return result;
}

id sub_EB6C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_EB818()
{
  return type metadata accessor for ArtworkView(0);
}

uint64_t type metadata accessor for ArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D5A88;
  if (!qword_3D5A88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtworkView);
  return result;
}

uint64_t sub_EB85C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for ArtworkAspectRule(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_2F55C8;
    v4[4] = &unk_2F55E0;
    v4[5] = &unk_2F55F8;
    v4[6] = &unk_2F5610;
    v4[7] = &unk_2F5628;
    v4[8] = &unk_2F5640;
    v4[9] = &unk_2F5628;
    v4[10] = &unk_2F5658;
    v4[11] = &unk_2F5628;
    v4[12] = &unk_2F5670;
    v4[13] = &unk_2F5688;
    v4[14] = &unk_2F56A0;
    v4[15] = &unk_2F56B8;
    v4[16] = &unk_2F5628;
    return swift_updateClassMetadata2(a1, 256, 17, v4, a1 + 304);
  }
  return result;
}

unint64_t sub_EB94C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5A98;
  if (!qword_3D5A98)
  {
    v1 = type metadata accessor for ArtworkView(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_3D5A98);
  }
  return result;
}

id sub_EB994()
{
  uint64_t v0;

  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "image"));
}

void sub_EB9C0(void *a1)
{
  sub_EC090(a1);

}

void (*sub_EB9E4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_E9570(v2);
  return sub_91A00;
}

uint64_t sub_EBA28()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_EBA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_EBAC0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_EBB08(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "image"));
  v4 = v3;
  if (v3)

  sub_E9708(a1, v4 == 0);
}

id sub_EBB64(char *a1, double a2, double a3)
{
  double *v6;
  id v7;

  v6 = (double *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint];
  *v6 = a2;
  v6[1] = a3;
  *((_BYTE *)v6 + 16) = 0;
  v7 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView], "layer");
  objc_msgSend(v7, "setAnchorPoint:", a2, a3);

  objc_msgSend(a1, "setNeedsLayout");
  return objc_msgSend(a1, "layoutIfNeeded");
}

id sub_EBBFC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

void sub_EBC4C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView);
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)(v1 + v3);
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(v1 + v3) = a1;
  v6 = a1;

  v7 = *(void **)(v1 + v3);
  if (v7)
  {
    v8 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView);
    v9 = v7;
    objc_msgSend(v8, "frame");
    objc_msgSend(v9, "setFrame:");
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView), "insertSubview:belowSubview:", v9, v8);

  }
}

void sub_EBD20()
{
  uint64_t v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void **aBlock;
  uint64_t v16;
  void *v17;
  void *v18;
  id (*v19)();
  uint64_t v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView);
  if (v1)
  {
    v2 = (void *)objc_opt_self(UIView);
    v14 = v1;
    objc_msgSend(v2, "inheritedAnimationDuration");
    if (v3 == 0.0)
    {
      objc_msgSend(v14, "removeFromSuperview");

    }
    else
    {
      objc_msgSend(v2, "inheritedAnimationDuration");
      v5 = v4;
      v6 = swift_allocObject(&unk_3810D0, 24, 7);
      *(_QWORD *)(v6 + 16) = v14;
      v19 = sub_EC67C;
      v20 = v6;
      aBlock = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_24360;
      v18 = &block_descriptor_41;
      v7 = _Block_copy(&aBlock);
      v8 = v20;
      v9 = v14;
      swift_release(v8);
      v10 = swift_allocObject(&unk_381120, 24, 7);
      *(_QWORD *)(v10 + 16) = v9;
      v19 = sub_EC690;
      v20 = v10;
      aBlock = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_1E3D64;
      v18 = &block_descriptor_47;
      v11 = _Block_copy(&aBlock);
      v12 = v20;
      v13 = v9;
      swift_release(v12);
      objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 4, v7, v11, v5, 0.0);

      _Block_release(v11);
      _Block_release(v7);
    }
  }
}

void sub_EBEE8(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  double v14;
  _QWORD v15[5];
  uint64_t v16;

  sub_EBD20();
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView] = a1;
  v5 = a1;

  v6 = *(void **)&v1[v3];
  if (v6)
  {
    v7 = objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_381058, 32, 7);
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v1;
    v9 = swift_allocObject(&unk_381080, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_EC5F4;
    *(_QWORD *)(v9 + 24) = v8;
    v15[4] = sub_EC6A0;
    v16 = v9;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_920D4;
    v15[3] = &block_descriptor_35_0;
    v10 = _Block_copy(v15);
    v11 = v16;
    v12 = v6;
    v13 = v1;
    swift_retain(v9);
    objc_msgSend((id)v7, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 123, 337, 48, 1);
    *(_QWORD *)&v14 = swift_release(v9).n128_u64[0];
    if ((v7 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView__contentView], "addSubview:", v12, v14);
      objc_msgSend(v12, "setAlpha:", 1.0);
      swift_release(v8);

    }
  }
}

id sub_EC090(id a1)
{
  _BYTE *v1;
  void *v2;
  id v3;

  v2 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView];
  if ((v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode + 8] & 1) != 0)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView], "setImage:", a1);
  }
  else
  {
    if (a1)
      v3 = objc_msgSend(a1, "imageWithRenderingMode:", *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode]);
    else
      v3 = 0;
    objc_msgSend(v2, "setImage:", v3);

  }
  return objc_msgSend(v1, "invalidateIntrinsicContentSize");
}

uint64_t sub_EC13C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  char *v12;

  v2 = *(_QWORD *)(a1 + 120);
  v12 = *(char **)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 168);
  v10 = *(_OWORD *)(a1 + 192);
  v11 = *(_OWORD *)(a1 + 176);
  sub_B7A70(*(char **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(void **)(a1 + 88));
  sub_B7A70(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_EC214()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_EC238()
{
  uint64_t v0;

  return sub_EBB64(*(char **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_EC244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_EC26C()
{
  id v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  double v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = 0x4010000000000000;
  v9 = 0x4014000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v10, &v9, &v8, &type metadata for CGFloat);
  sub_E8C48(1, v10);
  v1 = qword_3CF308;
  v2 = (char *)v0;
  if (v1 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v3 = (void *)qword_3FAD18;
  v4 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v5 = v3;

  sub_A2A14();
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v6 = v2;
  sub_A2A14();

  return v6;
}

void sub_EC380()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  char *v3;
  char *v4;
  _OWORD *v5;
  _OWORD *v6;
  char *v7;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_mt_hoverStyle];
  *(_QWORD *)v2 = 1;
  *((_WORD *)v2 + 52) = 0;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 8) = 0u;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentAnchorPoint];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v4 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_contentTransform];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  v4[48] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadowView] = 0;
  v5 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
  *v5 = 0u;
  v5[1] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradientView] = 0;
  v6 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_gradient];
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_internalBackgroundColor] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_isStyleInvalid] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 3;
  v7 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_renderingMode];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ArtworkView.swift", 41, 2, 194, 0);
  __break(1u);
}

id sub_EC4D0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "setAlpha:", 1.0);
}

uint64_t sub_EC4F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_EC53C()
{
  uint64_t v0;

  return sub_EAA38(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), (__int128 *)(v0 + 32));
}

uint64_t sub_EC548()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_EC56C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_EC57C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = (void *)a1[7];
  swift_bridgeObjectRetain(a1[2]);
  v5 = v4;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_EC5C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_EC5F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v1, "setAlpha:", 0.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageView), "frame");
  return objc_msgSend(v1, "setFrame:");
}

uint64_t sub_EC648()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_EC658()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_EC67C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

id sub_EC690()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeFromSuperview");
}

void sub_EC6E0(uint64_t isa)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t *v19;

  v3 = objc_msgSend(v1, "layer");
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (!isa)
    goto LABEL_19;
  if (!((unint64_t)isa >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (isa & 0xFFFFFFFFFFFFFF8));
    if (v7)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease(isa);
    v9 = (unint64_t *)&_swiftEmptyArrayStorage;
LABEL_18:
    isa = (uint64_t)Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(v9).n128_u64[0];
LABEL_19:
    objc_msgSend(v5, "setColors:", isa, v6);

    return;
  }
  if (isa >= 0)
    v16 = isa & 0xFFFFFFFFFFFFFF8;
  else
    v16 = isa;
  swift_bridgeObjectRetain(isa);
  v7 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(isa);
  if (!v7)
    goto LABEL_17;
LABEL_4:
  v19 = (unint64_t *)&_swiftEmptyArrayStorage;
  sub_F3400(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v9 = v19;
    do
    {
      if ((isa & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, isa);
      else
        v10 = *(id *)(isa + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, "CGColor");
      type metadata accessor for CGColor(0);
      v18 = v13;

      *(_QWORD *)&v17 = v12;
      v19 = v9;
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_F3400(v14 > 1, v15 + 1, 1);
        v9 = v19;
      }
      ++v8;
      v9[2] = v15 + 1;
      sub_1D65C(&v17, &v9[4 * v15 + 4]);
    }
    while (v7 != v8);
    swift_bridgeObjectRelease(isa);
    goto LABEL_18;
  }
  __break(1u);
}

void sub_EC8DC(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;

  v3 = objc_msgSend(v1, "layer");
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (a1)
  {
    v7 = *(_QWORD *)(a1 + 16);
    if (v7)
    {
      specialized ContiguousArray.reserveCapacity(_:)(v7);
      v8 = 0;
      do
      {
        v9 = v8 + 1;
        v10 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", *(double *)(a1 + 8 * v8 + 32));
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v11 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
        specialized ContiguousArray._endMutation()(v12);
        v8 = v9;
      }
      while (v7 != v9);
    }
    swift_bridgeObjectRelease(a1);
    sub_E710(0, (unint64_t *)&qword_3D5AF8, NSNumber_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setLocations:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0], isa);
  }
  else
  {
    objc_msgSend(v5, "setLocations:", 0, v6, 0);
  }

}

uint64_t sub_ECA74(_OWORD *a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 8];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 16];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 24];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 32];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 40];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 48];
  v10 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient + 56];
  v11 = a1[1];
  *(_OWORD *)v2 = *a1;
  *((_OWORD *)v2 + 1) = v11;
  v12 = a1[3];
  *((_OWORD *)v2 + 2) = a1[2];
  *((_OWORD *)v2 + 3) = v12;
  result = sub_B7AE8(v4, v3, v5, v6, v7, v8, v9, v10);
  v14 = *v2;
  if (*v2)
  {
    v16 = v2[1];
    v15 = v2[2];
    v18 = v2[3];
    v17 = v2[4];
    v19 = v2[5];
    v20 = v2[6];
    v21 = (void *)v2[7];
    v22 = *(double *)&v18;
    sub_B7A24(*v2, v16, v15, v18, v17, v19, v20, v21);
    v33 = v18;
    sub_B7A24(v14, v16, v15, v18, v17, v19, v20, v21);
    swift_bridgeObjectRetain(v14);
    v23 = objc_msgSend(v1, "traitCollection");
    v24 = (char *)objc_msgSend(v23, "userInterfaceStyle");

    v25 = v14;
    if (v24 == (_BYTE *)&dword_0 + 2)
    {
      v25 = v14;
      if (v16)
      {
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRelease(v14);
        v25 = v16;
      }
    }
    sub_EC6E0(v25);
    sub_B7AE8(v14, v16, v15, v33, v17, v19, v20, v21);
    v26 = swift_bridgeObjectRetain(v15);
    sub_EC8DC(v26);
    v27 = objc_msgSend(v1, "layer");
    v28 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v27, v28, 0, 0, 0), "setStartPoint:", v22, *(double *)&v17);

    v29 = objc_msgSend(v1, "layer");
    v30 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v29, v30, 0, 0, 0), "setEndPoint:", *(double *)&v19, *(double *)&v20);

    v31 = objc_msgSend(v1, "layer");
    v32 = objc_opt_self(CAGradientLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v31, v32, 0, 0, 0), "setType:", v21);

    return sub_B7AE8(v14, v16, v15, v33, v17, v19, v20, v21);
  }
  return result;
}

uint64_t sub_ECD6C()
{
  return sub_E710(0, &qword_3D5AA0, CAGradientLayer_ptr);
}

id sub_ECD94(uint64_t a1)
{
  char *v1;
  id result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for GradientView();
  result = objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 1);
    v7 = *((_QWORD *)v4 + 3);
    v8 = *((_QWORD *)v4 + 4);
    v9 = *((_QWORD *)v4 + 5);
    v10 = *((_QWORD *)v4 + 6);
    v11 = (void *)*((_QWORD *)v4 + 7);
    v16 = *((_QWORD *)v4 + 2);
    sub_B7A24(*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient], v6, v16, v7, v8, v9, v10, v11);
    v12 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(v5).n128_f64[0]);
    v13 = (char *)objc_msgSend(v12, "userInterfaceStyle");

    v14 = v13 != (_BYTE *)&dword_0 + 2 || v6 == 0;
    v15 = v5;
    if (!v14)
    {
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRelease(v5);
      v15 = v6;
    }
    sub_EC6E0(v15);
    return (id)sub_B7AE8(v5, v6, v16, v7, v8, v9, v10, v11);
  }
  return result;
}

uint64_t type metadata accessor for GradientView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews12GradientView);
}

id GradientView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _OWORD *v9;
  objc_super v11;

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_kind] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerRadius] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerStyle] = 1;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for GradientView();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id GradientView.init(coder:)(void *a1)
{
  _BYTE *v1;
  _OWORD *v3;
  id v4;
  objc_super v6;

  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_kind] = 0;
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_gradient];
  *v3 = 0u;
  v3[1] = 0u;
  v3[2] = 0u;
  v3[3] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerRadius] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews12GradientView_cornerStyle] = 1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for GradientView();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id GradientView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t method lookup function for GradientView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for GradientView);
}

uint64_t storeEnumTagSinglePayload for GradientView.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_ED1DC + 4 * byte_2F5755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_ED210 + 4 * byte_2F5750[v4]))();
}

uint64_t sub_ED210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_ED218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xED220);
  return result;
}

uint64_t sub_ED22C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xED234);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_ED238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_ED240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GradientView.Kind()
{
  return &type metadata for GradientView.Kind;
}

unint64_t sub_ED260()
{
  unint64_t result;

  result = qword_3D5AF0;
  if (!qword_3D5AF0)
  {
    result = swift_getWitnessTable(&unk_2F57E0, &type metadata for GradientView.Kind);
    atomic_store(result, (unint64_t *)&qword_3D5AF0);
  }
  return result;
}

void sub_ED2A4(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char isEscapingClosureAtFileLocation;
  _QWORD v13[5];
  uint64_t v14;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, "applyLayoutAttributes:", a1);
  objc_msgSend(a1, "size");
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_cellSize];
  *(_QWORD *)v3 = v4;
  *((_QWORD *)v3 + 1) = v5;
  v6 = (void *)objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_3812F8, 24, 7);
  *(_QWORD *)(v7 + 16) = v1;
  v8 = swift_allocObject(&unk_381320, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_ED950;
  *(_QWORD *)(v8 + 24) = v7;
  v13[4] = sub_101EC;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_920D4;
  v13[3] = &block_descriptor_15;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v1;
  swift_retain(v8);
  objc_msgSend(v6, "performWithoutAnimation:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 170, 68, 40, 1);
  swift_release(v7);
  swift_release(v8);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_ED50C()
{
  char *v0;
  id v1;
  __int128 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  _QWORD v11[5];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v12, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v1);

  v2 = *(_OWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_cellSize];
  if (qword_3CFBF8 != -1)
  {
    v9 = *(_OWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_cellSize];
    swift_once(&qword_3CFBF8, sub_222294);
    v2 = v9;
  }
  v3 = (void *)qword_3DD570;
  v10 = v2;
  type metadata accessor for CGSize(0);
  v5 = v4;
  v6 = sub_ED8E4();
  v7 = v3;
  AnyHashable.init<A>(_:)(v11, &v10, v5, v6);
  return UICellConfigurationState.subscript.setter(v11, v7);
}

uint64_t sub_ED5F4()
{
  char *v0;
  uint64_t v1;
  uint64_t result;
  char *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "prepareForReuse");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph];
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph] = 0;
  result = swift_release(v1);
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_interactionContextView] = 7;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  return result;
}

id sub_ED748(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_cellSize] = _Q0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_objectGraph] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_interactionContextView] = 7;
  v9 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);

  return v10;
}

uint64_t type metadata accessor for ShelvesViewSwiftUIHelperCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell);
}

uint64_t sub_ED830()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_interactionContextView);
}

uint64_t sub_ED844()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = (uint64_t)*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28ShelvesViewSwiftUIHelperCell_transitionNamespace;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    return 0;
  v3 = *(_QWORD *)v1;
  v4 = objc_msgSend(*v0, "contentView");
  v5 = static SourceProviding.presentationSourceId.getter();
  v7 = v6;
  v9[0] = v5;
  v9[1] = v6;
  v2 = UIView.findMatchedTransitionSource<A>(id:in:)(v9, v3, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v7);

  return v2;
}

unint64_t sub_ED8E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5B48;
  if (!qword_3D5B48)
  {
    type metadata accessor for CGSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CGSize, v1);
    atomic_store(result, (unint64_t *)&qword_3D5B48);
  }
  return result;
}

uint64_t sub_ED92C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_ED950()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setNeedsUpdateConfiguration");
}

uint64_t sub_ED960()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_15(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_ED988(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  id v11;
  char *v12;
  id v13;
  id v14;
  uint64_t ObjectType;
  uint64_t result;
  char *v17;
  uint64_t *v18;
  id v19;
  char *v20;
  objc_super v21;

  sub_1D5D4((uint64_t)a1, (uint64_t)v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model);
  v11 = objc_allocWithZone((Class)UIScrollView);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_scrollView] = v13;
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(a2)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  ObjectType = swift_getObjectType();
  result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for AnyOverflowModelView);
  if (result)
  {
    v17 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_modelView];
    *(_QWORD *)v17 = v14;
    *((_QWORD *)v17 + 1) = result;
    *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_objectGraph] = a3;
    v18 = (uint64_t *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_preflightHandler];
    *v18 = a4;
    v18[1] = a5;
    v19 = v14;
    swift_retain(a3);
    sub_2C690(a4, a5);

    v21.receiver = v12;
    v21.super_class = (Class)type metadata accessor for ModelViewOverflowViewController();
    v20 = (char *)objc_msgSendSuper2(&v21, "initWithNibName:bundle:", 0, 0);
    objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_scrollView], "setContentInsetAdjustmentBehavior:", 2);
    sub_1D618(a4, a5);

    swift_release(a3);
    __swift_destroy_boxed_opaque_existential_0(a1);
    return (uint64_t)v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_EDB60()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  void *v4;
  uint64_t ObjectType;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(void *, __n128);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  id v14;
  _QWORD v15[4];
  _BYTE v16[40];
  objc_super v17;

  v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for ModelViewOverflowViewController();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_modelView];
  ObjectType = swift_getObjectType();
  v6 = objc_msgSend(v4, "backgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v6);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_scrollView];
  objc_msgSend(result, "addSubview:", v8);

  objc_msgSend(v8, "setDelegate:", v1);
  objc_msgSend(v8, "setAlwaysBounceVertical:", 1);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model];
  sub_12582C((uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model], 1, 1, v1);
  v10 = *(void (**)(void *, __n128))&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_preflightHandler];
  if (v10)
  {
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_preflightHandler + 8];
    v12 = swift_retain(v11);
    v10(v4, v12);
    sub_1D618((uint64_t)v10, v11);
  }
  sub_1D5D4(v9, (uint64_t)v16);
  v15[3] = ObjectType;
  v15[0] = v4;
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_objectGraph];
  v14 = v4;
  sub_FDB28((uint64_t)v16, (uint64_t)v15, v13);
  sub_EE2DC((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_0(v15);
  return objc_msgSend(v8, "addSubview:", v14);
}

id sub_EDD74()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double Height;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double MinX;
  void *v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  char v44;
  _QWORD v45[5];
  objc_super v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for ModelViewOverflowViewController();
  objc_msgSendSuper2(&v46, "viewDidLayoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_scrollView];
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = result;
  objc_msgSend(result, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
  v13 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_modelView];
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_modelView + 8];
  ObjectType = swift_getObjectType();
  sub_1D5D4((uint64_t)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model], (uint64_t)v45);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v16 = result;
  objc_msgSend(result, "bounds");
  v18 = v17;
  v20 = v19;

  v44 = 1;
  v21 = (*(double (**)(_QWORD *, char *, _UNKNOWN **, char *, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v14 + 32))(v45, v1, &protocol witness table for UIViewController, &v44, 1, 1, ObjectType, v14, v18, v20);
  v23 = v22;
  __swift_destroy_boxed_opaque_existential_0(v45);
  objc_msgSend(v2, "frame");
  Height = CGRectGetHeight(v47);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v25 = result;
  objc_msgSend(result, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v48.origin.x = v27;
  v48.origin.y = v29;
  v48.size.width = v31;
  v48.size.height = v33;
  MinX = CGRectGetMinX(v48);
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v35 = result;
  if (v23 <= Height)
    v23 = Height;
  objc_msgSend(result, "bounds");
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;

  v49.origin.x = v37;
  v49.origin.y = v39;
  v49.size.width = v41;
  v49.size.height = v43;
  objc_msgSend(v13, "setFrame:", MinX, CGRectGetMinY(v49), v21, v23);
  objc_msgSend(v2, "setContentSize:", v21, v23);
  return objc_msgSend(v1, "setPreferredContentSize:", v21, v23);
}

void sub_EE0D4(void *a1)
{
  void *v1;
  id v3;
  char *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ModelViewOverflowViewController();
  objc_msgSendSuper2(&v5, "traitCollectionDidChange:", a1);
  if (a1 && objc_msgSend(a1, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v3 = objc_msgSend(v1, "traitCollection");
    v4 = (char *)objc_msgSend(v3, "horizontalSizeClass");

    if (v4 == (_BYTE *)&dword_0 + 1)
      objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 0, 0);
  }
}

id sub_EE220()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelViewOverflowViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ModelViewOverflowViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31ModelViewOverflowViewController);
}

uint64_t sub_EE2DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D5BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_EE31C(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_EE348
     + 4 * (unsigned __int16)aLVJnx[ModernShelf.ItemPresentation.itemKind.getter(a1)];
  __asm { BR              X10 }
}

uint64_t sub_EE348()
{
  uint64_t v0;

  v0 = type metadata accessor for CircleLockupView(0);
  sub_89A0(&qword_3D5C20, type metadata accessor for CircleLockupView, (uint64_t)&protocol conformance descriptor for CircleLockupView);
  return v0;
}

unint64_t sub_EEACC()
{
  unint64_t result;

  result = qword_3D5BC8;
  if (!qword_3D5BC8)
  {
    result = swift_getWitnessTable(&unk_2FB258, &type metadata for SearchResultCell);
    atomic_store(result, (unint64_t *)&qword_3D5BC8);
  }
  return result;
}

unint64_t sub_EEB10()
{
  unint64_t result;

  result = qword_3D5BD0;
  if (!qword_3D5BD0)
  {
    result = swift_getWitnessTable(&unk_2FB3A8, &type metadata for TopResultCell);
    atomic_store(result, (unint64_t *)&qword_3D5BD0);
  }
  return result;
}

unint64_t sub_EEB54()
{
  unint64_t result;

  result = qword_3D5CD0;
  if (!qword_3D5CD0)
  {
    result = swift_getWitnessTable(&unk_302BF0, &type metadata for EpisodeHero);
    atomic_store(result, (unint64_t *)&qword_3D5CD0);
  }
  return result;
}

void sub_EEB98(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_EEBCC + 4 * byte_2F59B2[ModernShelf.ItemPresentation.itemKind.getter(a1)];
  __asm { BR              X10 }
}

uint64_t sub_EEBCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = 1;
  v1 = enum case for Grid.staticNumberOfColumns(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for Grid)(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

#error "EECD0: call analysis failed (funcsize=16)"

uint64_t dispatch thunk of UberCell.uberStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of UberCell.interfaceStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UberCell.showcaseView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

void sub_EECF0(_BYTE *a1@<X8>)
{
  sub_EED04(a1);
}

void sub_EED04(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_EED10@<X0>(uint64_t a1@<X8>)
{
  return sub_EED24(a1);
}

uint64_t sub_EED24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkAspectRule(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_EED60(_BYTE *a1@<X8>)
{
  sub_EED74(a1);
}

void sub_EED74(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_EED80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_EED8C(a1, a2, a3, (uint64_t)&off_380660);
}

uint64_t sub_EED8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void *v32;
  double (*v33)(uint64_t, uint64_t);
  double v34;
  double v35;
  char v36;
  _BYTE *v37;
  char v38;
  void *v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  double v51;
  double v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD v83[6];

  v80 = a4;
  v81 = a3;
  v82 = (char *)a1;
  v78 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5D08);
  __chkstk_darwin(v4);
  v79 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for ArtworkAspectRule(0);
  v75 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v74 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkRequest(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v17);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - v25;
  sub_DA064((uint64_t)v82, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    return sub_D1D4((uint64_t)v19, &qword_3D0A58);
  v68 = v23;
  v69 = v9;
  v70 = v12;
  v71 = v16;
  v72 = v14;
  v82 = (char *)v13;
  sub_2376C((uint64_t)v19, (uint64_t)v26);
  v28 = v80;
  v29 = v81;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v80 + 16))(v81, v80) & 1) == 0)
    goto LABEL_7;
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 40))(&v26[*(int *)(v20 + 44)], v29, v28);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 24);
  v32 = (void *)v31(v29, v28);
  v33 = *(double (**)(uint64_t, uint64_t))(v28 + 32);
  v34 = v33(v29, v28);
  sub_E7A0((uint64_t)v26, v34, v35);

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v28 + 64))(v83, v29, v28);
  v36 = v83[0];
  if (LOBYTE(v83[0]) != 3)
  {
    v37 = (_BYTE *)v31(v29, v28);
    v38 = v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
    v37[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = v36;
    LOBYTE(v83[0]) = v38;
    sub_EB33C((unsigned __int8 *)v83);

  }
  v39 = (void *)v31(v29, v28);
  objc_msgSend(v39, "setContentMode:", v30);

  v67 = v31(v29, v28);
  v40 = (uint64_t)v68;
  sub_27E84((uint64_t)v26, (uint64_t)v68);
  v41 = v33(v29, v28);
  v43 = v42;
  v44 = type metadata accessor for CropCode(0);
  v45 = v70;
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v70, 1, 1, v44);
  v47 = v69;
  v48 = static Logger.artwork.getter(v46);
  v49 = static os_log_type_t.info.getter(v48);
  SignpostAndLogTrace(domain:level:)(v83, v47, v49);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v77);
  v50 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v50, "scale");
  v52 = v51;

  v53 = v71;
  ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v40, v30, 0, v45, 0, _swiftEmptyArrayStorage, v83, v41, v43, v52);
  v54 = type metadata accessor for ArtworkView(0);
  v55 = sub_54A90();
  v56 = v54;
  v57 = (void *)v67;
  ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v53, v78, 0, v56, v55);

  (*(void (**)(char *, char *))(v72 + 8))(v53, v82);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v28 + 48))(v83, v29, v28);
  v58 = v83[0];
  v59 = (uint64_t)v79;
  if (LOBYTE(v83[0]) != 6)
  {
    v82 = v26;
    (*(void (**)(uint64_t, uint64_t))(v28 + 56))(v29, v28);
    v61 = v75;
    v62 = v73;
    v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v59, 1, v73);
    v64 = v74;
    if (v63 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v74, enum case for ArtworkAspectRule.aspectFill(_:), v62);
      sub_D1D4(v59, &qword_3D5D08);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v74, v59, v62);
    }
    v65 = (void *)v31(v29, v28);
    LOBYTE(v83[0]) = v58;
    sub_E8EEC((unsigned __int8 *)v83);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
    v60 = (uint64_t)v82;
  }
  else
  {
LABEL_7:
    v60 = (uint64_t)v26;
  }
  return sub_239C0(v60);
}

uint64_t sub_EF358(uint64_t a1)
{
  return sub_EF5E8(a1, (uint64_t)&off_380660);
}

void sub_EF364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14OldEpisodeCell_episodeView);
  if (v2)
  {
    v3 = v0;
    v4 = (uint64_t *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback)
                   + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
    swift_beginAccess(v4, v9, 0, 0);
    v5 = *v4;
    if (v5)
    {
      swift_retain(v5);
      AnyCancellable.cancel()();
      swift_release(v5);
    }
    v6 = *(_QWORD *)(v3 + v1);
    if (v6)
    {
      v7 = (_QWORD *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback)
                    + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle);
      v8 = v7[1];
      *v7 = 0;
      v7[1] = 0;
      swift_bridgeObjectRelease(v8);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_EF424(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[24];

  v2 = v1;
  v3 = *a1;
  v4 = (uint64_t *)(*(_QWORD *)(v1 + *a1) + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
  swift_beginAccess(v4, v9, 0, 0);
  v5 = *v4;
  if (v5)
  {
    swift_retain(v5);
    AnyCancellable.cancel()();
    swift_release(v5);
  }
  v6 = (_QWORD *)(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle);
  v7 = v6[1];
  *v6 = 0;
  v6[1] = 0;
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_EF4B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v2 = *(_QWORD *)(v1 + *a1);
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable, v8, 0, 0);
  v4 = *v3;
  if (*v3)
  {
    swift_retain(*v3);
    AnyCancellable.cancel()();
    swift_release(v4);
  }
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8);
  *v5 = 0;
  v5[1] = 0;
  return swift_bridgeObjectRelease(v6);
}

void sub_EF544(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + *a1);
  if (v3)
  {
    v4 = v1;
    v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable);
    swift_beginAccess(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable, v10, 0, 0);
    v6 = *v5;
    if (v6)
    {
      swift_retain(v6);
      AnyCancellable.cancel()();
      swift_release(v6);
    }
    v7 = *(_QWORD *)(v4 + v2);
    if (v7)
    {
      v8 = (_QWORD *)(v7 + OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle);
      v9 = v8[1];
      *v8 = 0;
      v8[1] = 0;
      swift_bridgeObjectRelease(v9);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_EF5E8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char v12[24];

  v4 = *(uint64_t (**)(void))(a2 + 24);
  v5 = (char *)v4();
  v6 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable];
  swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_requestCancellable], v12, 0, 0);
  v7 = *(_QWORD *)v6;
  swift_retain(v7);

  if (v7)
  {
    AnyCancellable.cancel()();
    swift_release(v7);
  }
  v8 = (char *)((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  v9 = &v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle];
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_accessibilityTitle + 8];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;

  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_EF6B0()
{
  return sub_EF4B8(&OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView);
}

void sub_EF6D0()
{
  sub_EF544(&OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback);
}

void sub_EF6F0()
{
  sub_EF544(&OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView);
}

uint64_t sub_EF710()
{
  return sub_EF4B8(&OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView);
}

uint64_t sub_EF72C()
{
  uint64_t v0;

  v0 = ArtworkCrop.preferredContentMode.getter();
  return ContentMode.viewContentMode.getter(v0);
}

uint64_t sub_EF74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_EED8C(a1, a2, a3, (uint64_t)&off_3841F0);
}

uint64_t sub_EF758(uint64_t a1)
{
  return sub_EF5E8(a1, (uint64_t)&off_3841F0);
}

uint64_t sub_EF768()
{
  return sub_EF424(&OBJC_IVAR____TtC23ShelfKitCollectionViews15PowerSwooshCell_artworkView);
}

uint64_t sub_EF788()
{
  return sub_EF4B8(&OBJC_IVAR____TtC23ShelfKitCollectionViews31EditorialCardCollectionViewCell_artworkView);
}

uint64_t sub_EF7A8()
{
  return sub_EF4B8(&qword_3D9730);
}

uint64_t sub_EF7C8()
{
  return sub_EF424(&OBJC_IVAR____TtC23ShelfKitCollectionViews15LargeLockupView_cachingArtworkView);
}

uint64_t sub_EF7E8()
{
  return sub_EF4B8(&OBJC_IVAR____TtC23ShelfKitCollectionViews23BrickCollectionViewCell_artworkView);
}

void sub_EF808()
{
  sub_EF544(&OBJC_IVAR____TtC23ShelfKitCollectionViews26ShowEpisodeCountHeaderCell_internalArtworkView);
}

uint64_t sub_EF82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_EED8C(a1, a2, a3, (uint64_t)&off_38DF40);
}

uint64_t sub_EF838(uint64_t a1)
{
  return sub_EF5E8(a1, (uint64_t)&off_38DF40);
}

void sub_EF848()
{
  sub_EF544(&OBJC_IVAR____TtC23ShelfKitCollectionViews20SwooshMacEpisodeCell_artworkViewWithPlayback);
}

uint64_t sub_EF868()
{
  return sub_EF4B8(&OBJC_IVAR____TtC23ShelfKitCollectionViews11EpisodeView_artworkViewWithPlayback);
}

uint64_t sub_EF894(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 232);
}

uint64_t sub_EF8D4(_QWORD *a1, uint64_t a2, void *a3)
{
  return sub_EFA80(a1, a2, a3, (uint64_t (*)(_QWORD))sub_EFFD8);
}

void sub_EF8E0()
{
  uint64_t v0;

}

id sub_EF8F0()
{
  return sub_EFAD0((uint64_t (*)(_QWORD, _QWORD))type metadata accessor for VisualEffectContainerView);
}

void sub_EF8FC(uint64_t a1)
{

}

uint64_t type metadata accessor for VisualEffectContainerView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisualEffectContainerView);
}

uint64_t sub_EF918(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 232);
}

uint64_t sub_EF94C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_3D5E18);
}

uint64_t sub_EF964()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_3D5E30);
}

void sub_EF974(void *a1)
{
  char *v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v2 = *(_QWORD *)&v1[qword_3D5E18];
  if (v1[qword_3D5E18 + 8] == 1 && v2)
  {
    v7 = objc_msgSend(v1, "traitCollection");
    if (a1)
      v4 = objc_msgSend(a1, "userInterfaceStyle");
    else
      v4 = 0;
    v5 = objc_msgSend(v7, "userInterfaceStyle");
    if (!a1 || v4 != v5)
    {
      if (objc_msgSend(v7, "userInterfaceStyle") == (char *)&dword_0 + 2)
        v6 = 1;
      else
        v6 = 2;
      objc_msgSend(*(id *)&v1[qword_3D5E20], "setOverrideUserInterfaceStyle:", v6);
    }

  }
  else
  {
    objc_msgSend(*(id *)&v1[qword_3D5E20], "setOverrideUserInterfaceStyle:", v2);
  }
}

uint64_t sub_EFA74(_QWORD *a1, uint64_t a2, void *a3)
{
  return sub_EFA80(a1, a2, a3, (uint64_t (*)(_QWORD))sub_F0030);
}

uint64_t sub_EFA80(_QWORD *a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  id v6;

  v5 = a4(*(uint64_t *)((char *)&stru_B8.size + (swift_isaMask & *a1)));
  v6 = a3;
  return v5;
}

id sub_EFAC4()
{
  return sub_EFAD0((uint64_t (*)(_QWORD, _QWORD))type metadata accessor for MutableVisualEffectContainerView);
}

id sub_EFAD0(uint64_t (*a1)(_QWORD, _QWORD))
{
  _QWORD *v1;
  objc_class *v2;
  objc_super v4;

  v2 = (objc_class *)a1(0, *(uint64_t *)((char *)&stru_B8.size + (swift_isaMask & *v1)));
  v4.receiver = v1;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for MutableVisualEffectContainerView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MutableVisualEffectContainerView);
}

uint64_t sub_EFB2C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "\t";
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_2F5B48;
  v2[4] = &unk_2F5B60;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 88);
}

void sub_EFB94(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_EFB90(a3);

}

void sub_EFBEC()
{
  sub_EF974(0);
}

void sub_EFBF4(void *a1)
{
  id v1;

  v1 = a1;
  sub_EFBEC();

}

double sub_EFC28(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;

  v1 = a1;
  sub_EFC68((uint64_t)v1, v2, v3, v4);
  v6 = v5;

  return v6;
}

void sub_EFC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  objc_class *v11;
  objc_super v12;

  v5 = *(void **)((char *)v4 + qword_3D5E38);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v6, "intrinsicContentSize");
    objc_msgSend(v4, "layoutMargins");
    sub_21A650(v7, v8, v9, v10);

  }
  else
  {
    v11 = (objc_class *)type metadata accessor for VisualEffectContainerBase(0, *(uint64_t *)((char *)&stru_20.filesize + (*v4 & swift_isaMask)), a3, a4);
    v12.receiver = v4;
    v12.super_class = v11;
    objc_msgSendSuper2(&v12, "intrinsicContentSize");
  }
}

id sub_EFD24(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = a1;
  v5 = sub_EFDAC((SEL *)&selRef_viewForFirstBaselineLayout, v2, v3, v4);

  return v5;
}

id sub_EFD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_EFDAC((SEL *)&selRef_viewForFirstBaselineLayout, a2, a3, a4);
}

id sub_EFD68(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = a1;
  v5 = sub_EFDAC((SEL *)&selRef_viewForLastBaselineLayout, v2, v3, v4);

  return v5;
}

id sub_EFDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_EFDAC((SEL *)&selRef_viewForLastBaselineLayout, a2, a3, a4);
}

id sub_EFDAC(SEL *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  void *v6;
  objc_class *v8;
  id v9;
  objc_class *v10;
  objc_super v11;
  objc_super v12;

  v6 = *(void **)((char *)v4 + qword_3D5E38);
  if (v6)
  {
    if (*((_BYTE *)v4 + qword_3D5E30) == 1)
      return v6;
    v10 = (objc_class *)type metadata accessor for VisualEffectContainerBase(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
    v11.receiver = v4;
    v11.super_class = v10;
    v9 = objc_msgSendSuper2(&v11, *a1);
  }
  else
  {
    v8 = (objc_class *)type metadata accessor for VisualEffectContainerBase(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
    v12.receiver = v4;
    v12.super_class = v8;
    v9 = objc_msgSendSuper2(&v12, *a1);
  }
  return v9;
}

void sub_EFE58(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_F0088();
}

void sub_EFE7C()
{
  sub_F0114();
}

id sub_EFE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for VisualEffectContainerBase(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_EFEE4(uint64_t a1)
{

}

uint64_t type metadata accessor for VisualEffectContainerBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisualEffectContainerBase);
}

uint64_t sub_EFF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t getEnumTagSinglePayload for CircularProgressView.ProgressState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.ProgressState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_EFF90(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_EFFAC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t type metadata accessor for VisualEffectContainerBase.InterfaceStyleBehavior(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisualEffectContainerBase.InterfaceStyleBehavior);
}

void sub_EFFD8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/VisualEffectContainerView.swift", 55, 2, 22, 0);
  __break(1u);
}

void sub_F0030()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/VisualEffectContainerView.swift", 55, 2, 42, 0);
  __break(1u);
}

void sub_F0088()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[qword_3D5E18];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v0[qword_3D5E30] = 1;
  *(_QWORD *)&v0[qword_3D5E38] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/VisualEffectContainerView.swift", 55, 2, 152, 0);
  __break(1u);
}

void sub_F0114()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.VisualEffectContainerBase", 49, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_F0140(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_shadowView;
  v4 = type metadata accessor for ShadowView();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow] = 0;
  v7 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___viewToken];
  v8 = type metadata accessor for LoadingAction.ViewToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___HUDView] = 0;
  v9 = &v6[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_config];
  v11 = type metadata accessor for LoadingAction.Configuration(0, v10);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, v11);

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for HUDLoadingController(0);
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v13, "setModalPresentationStyle:", 6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v13;
}

void sub_F02A4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;
  objc_super v26;

  v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for HUDLoadingController(0);
  objc_msgSendSuper2(&v26, "viewDidLoad");
  v2 = objc_msgSend(v0, "presentationController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "_setContainerIgnoresDirectTouchEvents:", 1);

  }
  v4 = objc_msgSend(v1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setUserInteractionEnabled:", 0);

    sub_F0720(v6, v7);
    v8 = LoadingAction.Configuration.dismissAfter.getter();
    if ((v9 & 1) == 0)
    {
      v10 = *(double *)&v8;
      v11 = (void *)objc_opt_self(UIView);
      v12 = swift_allocObject(&unk_3817D8, 24, 7);
      *(_QWORD *)(v12 + 16) = v1;
      v24 = sub_F2544;
      v25 = v12;
      v20 = _NSConcreteStackBlock;
      v21 = 1107296256;
      v22 = sub_24360;
      v23 = &block_descriptor_33;
      v13 = _Block_copy(&v20);
      v14 = v25;
      v15 = v1;
      swift_release(v14);
      v16 = swift_allocObject(&unk_381828, 24, 7);
      *(_QWORD *)(v16 + 16) = v15;
      v24 = sub_F250C;
      v25 = v16;
      v20 = _NSConcreteStackBlock;
      v21 = 1107296256;
      v22 = sub_1E3D64;
      v23 = &block_descriptor_40;
      v17 = _Block_copy(&v20);
      v18 = v25;
      v19 = v15;
      swift_release(v18);
      objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 131074, v13, v17, 0.2, v10);
      _Block_release(v17);
      _Block_release(v13);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_F04D0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5FF0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v14[-v8];
  v10 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___viewToken;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___viewToken, v15, 0, 0);
  sub_F2434(v10, (uint64_t)v9);
  v11 = type metadata accessor for LoadingAction.ViewToken(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_F23F4((uint64_t)v9);
    sub_F247C();
    v13 = swift_unknownObjectRetain(v2);
    LoadingAction.ViewToken.init(for:)(v13);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    swift_beginAccess(v10, v14, 33, 0);
    sub_F24C4((uint64_t)v6, v10);
    swift_endAccess(v14);
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(a1, v9, v11);
  }
}

id sub_F064C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___HUDView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___HUDView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___HUDView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 8);
    v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);

    objc_msgSend(v5, "setClipsToBounds:", 1);
    objc_msgSend(v5, "_setContinuousCornerRadius:", 9.0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_F0720(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, char *, uint64_t, __n128);
  objc_class *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  __int128 v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  CGFloat v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  CGFloat a;
  Class isa;
  CGAffineTransform v89;
  objc_super v90;

  v3 = v2;
  v4 = type metadata accessor for LoadingAction.Configuration(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
  v9(v8, &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_config], v4, v6);
  v10 = (objc_class *)type metadata accessor for HUDLoadingContentView(0);
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_indicator] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_label] = 0;
  ((void (*)(char *, char *, uint64_t))v9)(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_config], v8, v4);
  v90.receiver = v11;
  v90.super_class = v10;
  v12 = objc_msgSendSuper2(&v90, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_F1B40();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView;
  v14 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView] = v12;

  v15 = sub_F064C();
  v16 = objc_msgSend(v15, "contentView");

  if (!*(_QWORD *)&v3[v13])
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v16, "addSubview:");

  v17 = sub_F064C();
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v18 = *(void **)&v3[v13];
  if (!v18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = *(char **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_shadowView];
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_3CFA88 != -1)
    swift_once(&qword_3CFA88, sub_1D65CC);
  v20 = (void *)qword_3FCEF8;
  v21 = qword_3FCF10;
  v22 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v23 = *(void **)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
  v24 = unk_3FCF00;
  *(_QWORD *)v22 = qword_3FCEF8;
  *(_OWORD *)(v22 + 8) = v24;
  *((_QWORD *)v22 + 3) = v21;
  v25 = v20;

  sub_CC328();
  objc_msgSend(v19, "setAlpha:", 0.0);
  v26 = objc_msgSend(v3, "view");
  if (!v26)
    goto LABEL_17;
  v27 = v26;
  objc_msgSend(v26, "addSubview:", v19);

  v28 = objc_msgSend(v3, "view");
  if (!v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v29 = v28;
  objc_msgSend(v28, "sendSubviewToBack:", v19);

  v30 = sub_F064C();
  CGAffineTransformMakeScale(&v89, 0.88, 0.88);
  objc_msgSend(v30, "setTransform:", &v89);

  v31 = sub_F064C();
  objc_msgSend(v31, "setAlpha:", 0.0);

  v32 = objc_msgSend(v3, "view");
  if (!v32)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = v32;
  v34 = sub_F064C();
  objc_msgSend(v33, "addSubview:", v34);

  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v36 = COERCE_DOUBLE(swift_allocObject(v35, 112, 7));
  *(_OWORD *)(*(_QWORD *)&v36 + 16) = xmmword_2F5BD0;
  v37 = sub_F064C();
  v38 = objc_msgSend(v37, "centerXAnchor");

  v39 = objc_msgSend(v3, "view");
  if (!v39)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "centerXAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(*(_QWORD *)&v36 + 32) = v42;
  v43 = sub_F064C();
  v44 = objc_msgSend(v43, "centerYAnchor");

  v45 = objc_msgSend(v3, "view");
  if (!v45)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v46 = v45;
  v47 = objc_msgSend(v45, "centerYAnchor");

  v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);
  *(_QWORD *)(*(_QWORD *)&v36 + 40) = v48;
  v49 = objc_msgSend(v19, "leadingAnchor");
  v50 = sub_F064C();
  v51 = objc_msgSend(v50, "leadingAnchor");

  v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(*(_QWORD *)&v36 + 48) = v52;
  v53 = objc_msgSend(v19, "trailingAnchor");
  v54 = sub_F064C();
  v55 = objc_msgSend(v54, "trailingAnchor");

  v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);
  *(_QWORD *)(*(_QWORD *)&v36 + 56) = v56;
  v57 = objc_msgSend(v19, "topAnchor");
  v58 = sub_F064C();
  v59 = objc_msgSend(v58, "topAnchor");

  v60 = objc_msgSend(v57, "constraintEqualToAnchor:", v59);
  *(_QWORD *)(*(_QWORD *)&v36 + 64) = v60;
  v61 = objc_msgSend(v19, "bottomAnchor");
  v62 = sub_F064C();
  v63 = objc_msgSend(v62, "bottomAnchor");

  v64 = objc_msgSend(v61, "constraintEqualToAnchor:", v63);
  *(_QWORD *)(*(_QWORD *)&v36 + 72) = v64;
  v65 = *(void **)&v3[v13];
  if (!v65)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v66 = objc_msgSend(v65, "leadingAnchor");
  v67 = sub_F064C();
  v68 = objc_msgSend(v67, "leadingAnchor");

  v69 = objc_msgSend(v66, "constraintEqualToAnchor:", v68);
  *(_QWORD *)(*(_QWORD *)&v36 + 80) = v69;
  v70 = *(void **)&v3[v13];
  if (!v70)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v71 = objc_msgSend(v70, "trailingAnchor");
  v72 = sub_F064C();
  v73 = objc_msgSend(v72, "trailingAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
  *(_QWORD *)(*(_QWORD *)&v36 + 88) = v74;
  v75 = *(void **)&v3[v13];
  if (!v75)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v76 = objc_msgSend(v75, "topAnchor");
  v77 = sub_F064C();
  v78 = objc_msgSend(v77, "topAnchor");

  v79 = objc_msgSend(v76, "constraintEqualToAnchor:", v78);
  *(_QWORD *)(*(_QWORD *)&v36 + 96) = v79;
  v80 = *(void **)&v3[v13];
  if (v80)
  {
    v81 = (void *)objc_opt_self(NSLayoutConstraint);
    v82 = objc_msgSend(v80, "bottomAnchor");
    v83 = sub_F064C();
    v84 = objc_msgSend(v83, "bottomAnchor");

    v85 = objc_msgSend(v82, "constraintEqualToAnchor:", v84);
    *(_QWORD *)(*(_QWORD *)&v36 + 104) = v85;
    v89.a = v36;
    specialized Array._endMutation()(v86);
    a = v89.a;
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v81, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&a).n128_f64[0]);

    return;
  }
LABEL_25:
  __break(1u);
}

void sub_F0F8C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = objc_msgSend(objc_allocWithZone((Class)MPModalPresentationWindow), "init");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow) = v1;
  v3 = v1;

  objc_msgSend(v3, "setHidden:", 0);
  objc_msgSend(v3, "setUserInteractionEnabled:", 0);
  v4 = (void *)objc_opt_self(UIApplication);
  v8 = v3;
  v5 = objc_msgSend(v4, "sharedApplication");
  v6 = objc_msgSend(v5, "delegate");

  if (v6)
  {
    if ((objc_msgSend(v6, "respondsToSelector:", "window") & 1) != 0)
    {
      v7 = objc_msgSend(v6, "window");
      v6 = objc_msgSend(v7, "windowScene", swift_unknownObjectRelease(v6).n128_f64[0]);

    }
    else
    {
      swift_unknownObjectRelease(v6);
      v6 = 0;
    }
  }
  objc_msgSend(v8, "setWindowScene:", v6);

  objc_msgSend(v8, "presentViewController:animated:completion:", v0, 1, 0);
}

id sub_F1110(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  CGAffineTransform v10;

  v2 = sub_F064C();
  CGAffineTransformMakeScale(&v10, 1.0, 1.0);
  objc_msgSend(v2, "setTransform:", &v10);

  v3 = sub_F064C();
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = *(void **)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow);
  if (v4)
  {
    v5 = (void *)objc_opt_self(UIColor);
    v6 = v4;
    v7 = objc_msgSend(v5, "blackColor");
    v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.4);

    objc_msgSend(v6, "setBackgroundColor:", v8);
  }
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_shadowView), "setAlpha:", 1.0);
}

void sub_F134C(char *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  CGAffineTransform v13;

  v2 = sub_F064C();
  v3 = objc_msgSend(v2, "contentView");

  v4 = objc_msgSend(v3, "superview");
  if (v4)
  {
    objc_msgSend(v4, "setAlpha:", 0.0);

  }
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_shadowView], "setAlpha:", 0.0);
  v5 = *(void **)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow];
  if (v5)
  {
    v6 = (void *)objc_opt_self(UIColor);
    v7 = v5;
    v8 = objc_msgSend(v6, "clearColor");
    objc_msgSend(v7, "setBackgroundColor:", v8);

  }
  v9 = sub_F064C();
  v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = objc_msgSend(a1, "view");
  if (v11)
  {
    v12 = v11;
    CGAffineTransformMakeScale(&v13, 0.88, 0.88);
    objc_msgSend(v12, "setTransform:", &v13);

  }
  else
  {
    __break(1u);
  }
}

id sub_F1500(int a1, id a2)
{
  id result;
  id v4;
  _QWORD v5[6];

  result = objc_msgSend(a2, "view");
  if (result)
  {
    v4 = result;
    v5[0] = 0x3FF0000000000000;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0x3FF0000000000000;
    v5[4] = 0;
    v5[5] = 0;
    objc_msgSend(result, "setTransform:", v5);

    return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_F1584()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)();
  uint64_t v15;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_3816E8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v14 = sub_F2544;
  v15 = v2;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_24360;
  v13 = &block_descriptor_13_0;
  v3 = _Block_copy(&v10);
  v4 = v15;
  v5 = v0;
  swift_release(v4);
  v6 = swift_allocObject(&unk_381738, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v14 = sub_F250C;
  v15 = v6;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_1E3D64;
  v13 = &block_descriptor_20;
  v7 = _Block_copy(&v10);
  v8 = v15;
  v9 = v5;
  swift_release(v8);
  objc_msgSend(v1, "animateWithDuration:delay:options:animations:completion:", 131074, v3, v7, 0.2, 0.0);
  _Block_release(v7);
  _Block_release(v3);
}

void sub_F16D0()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  char v12;
  double v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void **v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_label];
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v2;
  v5 = v3;
  LoadingAction.Configuration.title.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v9 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_indicator];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v10 = v9;
  objc_msgSend(v10, "setHidden:", (LoadingAction.Configuration.showsLoadingIndicator.getter() & 1) == 0);

  v11 = LoadingAction.Configuration.dismissAfter.getter();
  if ((v12 & 1) == 0)
  {
    v13 = *(double *)&v11;
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_381648, 24, 7);
    *(_QWORD *)(v15 + 16) = v1;
    v27 = sub_F22E8;
    v28 = v15;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_24360;
    v26 = &block_descriptor_16;
    v16 = _Block_copy(&v23);
    v17 = v28;
    v18 = v1;
    swift_release(v17);
    v19 = swift_allocObject(&unk_381698, 24, 7);
    *(_QWORD *)(v19 + 16) = v18;
    v27 = sub_F2308;
    v28 = v19;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_1E3D64;
    v26 = &block_descriptor_6_2;
    v20 = _Block_copy(&v23);
    v21 = v28;
    v22 = v18;
    swift_release(v21);
    objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 131074, v16, v20, 0.2, v13);
    _Block_release(v20);
    _Block_release(v16);
  }
}

id sub_F190C()
{
  return sub_F2198(type metadata accessor for HUDLoadingController);
}

uint64_t sub_F19A8()
{
  return type metadata accessor for HUDLoadingController(0);
}

uint64_t type metadata accessor for HUDLoadingController(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D5F88, (uint64_t)&nominal type descriptor for HUDLoadingController);
}

void sub_F19C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[6];

  v7[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v7[1] = "\b";
  v3 = type metadata accessor for LoadingAction.Configuration(319, a2);
  if (v4 <= 0x3F)
  {
    v7[2] = *(_QWORD *)(v3 - 8) + 64;
    v7[3] = "\b";
    sub_F1A64(319);
    if (v6 <= 0x3F)
    {
      v7[4] = *(_QWORD *)(v5 - 8) + 64;
      v7[5] = "\b";
      swift_updateClassMetadata2(a1, 256, 6, v7, a1 + 80);
    }
  }
}

void sub_F1A64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D5F98)
  {
    v2 = type metadata accessor for LoadingAction.ViewToken(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D5F98);
  }
}

void sub_F1B40()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  Class isa;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  Class v54;
  uint64_t v55;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_indicator;
  v4 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_indicator];
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_indicator] = v2;

  v5 = *(void **)&v0[v3];
  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v0[v3];
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  LODWORD(v6) = 1148846080;
  objc_msgSend(v7, "setContentHuggingPriority:forAxis:", 0, v6);
  v8 = *(void **)&v0[v3];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v8, "startAnimating");
  v9 = *(void **)&v0[v3];
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  objc_msgSend(v10, "setHidden:", (LoadingAction.Configuration.showsLoadingIndicator.getter() & 1) == 0);

  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_label;
  v13 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_label];
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViewsP33_8451DF0E636034E0D31DCAF0635FC0CC21HUDLoadingContentView_label] = v11;

  v14 = *(void **)&v0[v12];
  if (!v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v15 = v14;
  v16 = (void *)static UIFont.preferredFont(forTextStyle:traits:)(UIFontTextStyleBody, 2);
  objc_msgSend(v15, "setFont:", v16);

  v17 = *(void **)&v1[v12];
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = *(void **)&v1[v12];
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  LODWORD(v18) = 1148846080;
  objc_msgSend(v19, "setContentHuggingPriority:forAxis:", 0, v18);
  v20 = *(void **)&v1[v12];
  if (!v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v21 = v20;
  LoadingAction.Configuration.title.getter();
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setText:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v26 = swift_allocObject(v25, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_2EFC90;
  v27 = *(void **)&v1[v3];
  if (!v27)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v26 + 32) = v27;
  v28 = *(void **)&v1[v12];
  if (v28)
  {
    *(_QWORD *)(v26 + 40) = v28;
    v55 = v26;
    specialized Array._endMutation()(v26);
    v29 = objc_allocWithZone((Class)UIStackView);
    sub_E710(0, (unint64_t *)&qword_3D34B0, UIView_ptr);
    v30 = v27;
    v31 = v28;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v33 = objc_msgSend(v29, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v55).n128_f64[0]);

    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v33, "setAxis:", 0);
    objc_msgSend(v33, "setAlignment:", 1);
    objc_msgSend(v33, "setSpacing:", 10.0);
    objc_msgSend(v1, "addSubview:", v33);
    v34 = (void *)objc_opt_self(NSLayoutConstraint);
    v35 = swift_allocObject(v25, 80, 7);
    *(_OWORD *)(v35 + 16) = xmmword_2EFC70;
    v36 = objc_msgSend(v33, "leadingAnchor");
    v37 = objc_msgSend(v1, "leadingAnchor");
    v38 = objc_msgSend(v36, "constraintGreaterThanOrEqualToAnchor:constant:", v37, 16.0);

    *(_QWORD *)(v35 + 32) = v38;
    v39 = objc_msgSend(v33, "trailingAnchor");
    v40 = objc_msgSend(v1, "trailingAnchor");
    v41 = objc_msgSend(v39, "constraintLessThanOrEqualToAnchor:constant:", v40, -16.0);

    *(_QWORD *)(v35 + 40) = v41;
    v42 = objc_msgSend(v33, "centerXAnchor");
    v43 = objc_msgSend(v1, "centerXAnchor");
    v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

    *(_QWORD *)(v35 + 48) = v44;
    v45 = objc_msgSend(v33, "topAnchor");
    v46 = objc_msgSend(v1, "topAnchor");
    v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, 24.0);

    *(_QWORD *)(v35 + 56) = v47;
    v48 = objc_msgSend(v33, "bottomAnchor");
    v49 = objc_msgSend(v1, "bottomAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, -24.0);

    *(_QWORD *)(v35 + 64) = v50;
    v51 = objc_msgSend(v1, "widthAnchor");
    v52 = objc_msgSend(v51, "constraintGreaterThanOrEqualToConstant:", 180.0);

    *(_QWORD *)(v35 + 72) = v52;
    specialized Array._endMutation()(v53);
    sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
    v54 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "activateConstraints:", v54, swift_bridgeObjectRelease(v35).n128_f64[0]);

    return;
  }
LABEL_21:
  __break(1u);
}

id sub_F218C()
{
  return sub_F2198(type metadata accessor for HUDLoadingContentView);
}

id sub_F2198(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_F2230()
{
  return type metadata accessor for HUDLoadingContentView(0);
}

uint64_t type metadata accessor for HUDLoadingContentView(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D5FE0, (uint64_t)&nominal type descriptor for HUDLoadingContentView);
}

uint64_t sub_F224C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for LoadingAction.Configuration(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "\b";
    v5[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_F22C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_F22E8()
{
  uint64_t v0;

  sub_F134C(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_16(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_F2308(int a1)
{
  uint64_t v1;

  return sub_F1500(a1, *(id *)(v1 + 16));
}

id sub_F2310()
{
  uint64_t v0;

  return sub_F1110(*(_QWORD *)(v0 + 16));
}

void sub_F2318()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_shadowView;
  v2 = type metadata accessor for ShadowView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_loadingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController_presentationWindow] = 0;
  v3 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___viewToken];
  v4 = type metadata accessor for LoadingAction.ViewToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews20HUDLoadingController____lazy_storage___HUDView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HUDLoadingController.swift", 50, 2, 28, 0);
  __break(1u);
}

uint64_t sub_F23F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5FF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_F2434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_F247C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D5FF8;
  if (!qword_3D5FF8)
  {
    v1 = type metadata accessor for HUDLoadingController(255);
    result = swift_getWitnessTable(&unk_2F5C48, v1);
    atomic_store(result, (unint64_t *)&qword_3D5FF8);
  }
  return result;
}

uint64_t sub_F24C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_F2560()
{
  qword_3D6000 = 0x402E000000000000;
}

char *sub_F2570(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  objc_class *ObjCClassFromMetadata;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGFloat *v21;
  double left;
  double bottom;
  double right;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground;
  v11 = type metadata accessor for ShelfBackgroundFillView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v11);
  v13 = objc_allocWithZone(ObjCClassFromMetadata);
  v14 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackgroundMask;
  v16 = type metadata accessor for GradientView();
  v17 = (objc_class *)swift_getObjCClassFromMetadata(v16);
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(v17), "init");
  v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackground;
  *(_QWORD *)&v14[v18] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackgroundMask;
  *(_QWORD *)&v14[v19] = objc_msgSend(objc_allocWithZone(v17), "init");
  v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_isHovering] = 0;
  v20 = &v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground];
  *(_DWORD *)v20 = 0;
  *((_WORD *)v20 + 2) = 256;
  v21 = (CGFloat *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_verticalButtonInsets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v21 = UIEdgeInsetsZero.top;
  v21[1] = left;
  v21[2] = bottom;
  v21[3] = right;
  v25 = objc_allocWithZone((Class)type metadata accessor for PageButtonsControl());
  *(_QWORD *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls] = sub_E7B24(0, 0, a1, a2, a3, a4);

  v37.receiver = v14;
  v37.super_class = ObjectType;
  v26 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v27 = *(void **)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground];
  v28 = *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackgroundMask];
  v29 = v26;
  objc_msgSend(v27, "setMaskView:", v28);
  objc_msgSend(v29, "addSubview:", v27);
  v30 = *(void **)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackground];
  objc_msgSend(v30, "setMaskView:", *(_QWORD *)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackgroundMask]);
  objc_msgSend(v29, "addSubview:", v30);
  v31 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls;
  v32 = *(void **)&v29[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls];
  objc_msgSend(v29, "addSubview:", v32);
  v33 = v32;
  objc_msgSend(v29, "bounds");
  objc_msgSend(v33, "setFrame:");

  v34 = *(void **)&v29[v31];
  objc_msgSend(v34, "setAutoresizingMask:", 18);
  objc_msgSend(v29, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v29, "setEdgesPreservingSuperviewLayoutMargins:", 10);
  objc_msgSend(v29, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v35 = v34;
  objc_msgSend(v35, "setAlpha:", 0.0);

  return v29;
}

void sub_F28A8()
{
  uint64_t v0;
  unsigned int *v1;
  int v2;
  unint64_t v3;
  _BYTE *v4;
  unsigned __int8 v5;
  unint64_t v6;
  unsigned int v7;
  char *v8;
  unint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  _BYTE *v12;
  unsigned int *v13;
  unint64_t v14;
  unsigned __int8 v15;
  void *v16;
  id v17;
  id v18;

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground + 5) == 1)
  {
    v2 = 0;
    LODWORD(v3) = 0;
    v4 = *(_BYTE **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground);
  }
  else
  {
    v3 = *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
    v4 = *(_BYTE **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground);
    v2 = *v1;
    if ((v3 & 0x100000000) == 0)
    {
      v5 = 0;
      v6 = 0;
      goto LABEL_6;
    }
  }
  v6 = 0x100000000;
  v5 = 1;
LABEL_6:
  v7 = v6 | v2;
  v8 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
  v9 = *(unsigned int *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background] | ((unint64_t)v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 4] << 32);
  v10 = v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
  *(_DWORD *)v8 = v7;
  v11 = HIDWORD(v6);
  v8[4] = BYTE4(v6);
  v8[5] = 0;
  sub_CDF48(v9 | ((unint64_t)v10 << 40));
  v12 = *(_BYTE **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackground);
  v13 = (unsigned int *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background];
  v14 = *v13 | ((unint64_t)*((unsigned __int8 *)v13 + 4) << 32);
  v15 = v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23ShelfBackgroundFillView_background + 5];
  *v13 = v7;
  *((_WORD *)v13 + 2) = v11;
  sub_CDF48(v14 | ((unint64_t)v15 << 40));
  if ((ModernShelf.Background.isColor.getter(v3 | ((unint64_t)v5 << 32)) & 1) == 0)
  {
    v16 = (void *)objc_opt_self(UIColor);
    v17 = objc_msgSend(v16, "systemBackgroundColor");
    objc_msgSend(v4, "setBackgroundColor:", v17);

    v18 = objc_msgSend(v16, "systemBackgroundColor");
    objc_msgSend(v12, "setBackgroundColor:", v18);

  }
}

id sub_F2A70()
{
  char *v0;
  char *v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id result;
  double v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v1 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls];
  v2 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_verticalButtonInsets];
  v3 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_verticalButtonInsets];
  objc_msgSend(v0, "layoutMargins");
  v5 = v4;
  v6 = v2[2];
  result = objc_msgSend(v0, "layoutMargins");
  v9 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v10 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets];
  v11 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets + 8];
  v12 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets + 16];
  v13 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_buttonInsets + 24];
  *v9 = v3;
  v9[1] = v5;
  v9[2] = v6;
  v9[3] = v8;
  if (v10 != v3 || v11 != v5 || v12 != v6 || v13 != v8)
    return objc_msgSend(v1, "setNeedsLayout");
  return result;
}

id ShelfPageControl.point(inside:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  objc_class *ObjectType;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  objc_super v18;
  CGPoint v19;
  CGRect v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = objc_msgSend(v3, "layoutMarginsGuide");
  objc_msgSend(v8, "layoutFrame");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v20.origin.x = v10;
  v20.origin.y = v12;
  v20.size.width = v14;
  v20.size.height = v16;
  v19.x = a2;
  v19.y = a3;
  if (CGRectContainsPoint(v20, v19))
    return 0;
  v18.receiver = v3;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "pointInside:withEvent:", a1, a2, a3);
}

Swift::Void __swiftcall ShelfPageControl.layoutMarginsDidChange()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;
  objc_super v5;

  v1 = v0;
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "layoutMarginsDidChange");
  sub_F2A70();
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_pageControls];
  v3 = sub_F39C8((uint64_t)&off_37A1B8, &qword_3D1DA0);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PageButtonsControl_availableScrollDirections) = v3;
  swift_bridgeObjectRelease(v4);
  sub_E7E68();
  objc_msgSend(v1, "setNeedsLayout");
}

Swift::Void __swiftcall ShelfPageControl.layoutSubviews()()
{
  char *v0;
  unint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double y;
  double height;
  double Width;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  double v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSString *v30;
  double v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSString *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  CAGradientLayerType v50;
  objc_super v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v51.receiver = v0;
  v51.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v51, "layoutSubviews");
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground + 5] & 1) != 0
    || (v1 = *(unsigned int *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground] | ((unint64_t)(v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground + 4] & 1) << 32),
        LOBYTE(v45) = 1,
        v2 = 8.0,
        (static ModernShelf.Background.== infix(_:_:)(v1, 0x100000003) & 1) == 0))
  {
    v2 = 0.0;
  }
  objc_msgSend(v0, "layoutMargins");
  v4 = v3;
  objc_msgSend(v0, "layoutMargins");
  v6 = v5;
  objc_msgSend(v0, "bounds");
  v53 = CGRectInset(v52, 0.0, -20.0 - v2);
  v54 = CGRectOffset(v53, 0.0, -v2);
  y = v54.origin.y;
  height = v54.size.height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground], "setFrame:", v54.origin.x);
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v55);
  objc_msgSend(v0, "layoutMargins");
  v11 = Width - v10;
  objc_msgSend(v0, "layoutMargins");
  v13 = v12;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackground], "setFrame:", v11, y, v12, height);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackgroundMask], "setFrame:", 0.0, 0.0, v4, height);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackgroundMask], "setFrame:", 0.0, 0.0, v13, height);
  if (qword_3CF310 != -1)
    swift_once(&qword_3CF310, sub_F2560);
  v14 = *(double *)&qword_3D6000;
  if (*(double *)&qword_3D6000 >= v4)
    v15 = v4;
  else
    v15 = *(double *)&qword_3D6000;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v17 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v17 + 16) = xmmword_2EFC80;
  v18 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v17 + 32) = objc_msgSend(v18, "whiteColor");
  *(_QWORD *)(v17 + 40) = objc_msgSend(v18, "whiteColor");
  v19 = objc_msgSend(v18, "clearColor");
  *(_QWORD *)(v17 + 48) = v19;
  specialized Array._endMutation()(v19);
  *(_QWORD *)&v45 = _swiftEmptyArrayStorage;
  sub_F3470(0, 3, 0);
  v20 = _swiftEmptyArrayStorage;
  v22 = _swiftEmptyArrayStorage[2];
  v21 = _swiftEmptyArrayStorage[3];
  v23 = v21 >> 1;
  v24 = v22 + 1;
  if (v21 >> 1 <= v22)
  {
    sub_F3470(v21 > 1, v22 + 1, 1);
    v20 = (_QWORD *)v45;
    v21 = *(_QWORD *)(v45 + 24);
    v23 = v21 >> 1;
  }
  v25 = v4 - v15;
  v20[2] = v24;
  *(double *)&v20[v22 + 4] = 0.0 / v4;
  v26 = v22 + 2;
  if (v23 < v26)
  {
    sub_F3470(v21 > 1, v26, 1);
    v20 = (_QWORD *)v45;
  }
  v20[2] = v26;
  *(double *)&v20[v24 + 4] = v25 / v4;
  v28 = v20[2];
  v27 = v20[3];
  if (v28 >= v27 >> 1)
    sub_F3470(v27 > 1, v28 + 1, 1);
  v29 = v45;
  *(_QWORD *)(v45 + 16) = v28 + 1;
  *(double *)(v29 + 8 * v28 + 32) = v4 / v4;
  v45 = (unint64_t)v17;
  v47 = 0;
  v48 = 0;
  v46 = v29;
  v49 = xmmword_2F4680;
  v50 = kCAGradientLayerAxial;
  v30 = kCAGradientLayerAxial;
  sub_ECA74(&v45);
  if (v14 >= v6)
    v31 = v6;
  else
    v31 = v14;
  v32 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_2EFC80;
  *(_QWORD *)(v32 + 32) = objc_msgSend(v18, "clearColor");
  *(_QWORD *)(v32 + 40) = objc_msgSend(v18, "whiteColor");
  v33 = objc_msgSend(v18, "whiteColor");
  *(_QWORD *)(v32 + 48) = v33;
  *(_QWORD *)&v45 = v32;
  specialized Array._endMutation()(v33);
  v34 = v45;
  *(_QWORD *)&v45 = _swiftEmptyArrayStorage;
  sub_F3470(0, 3, 0);
  v35 = v45;
  v37 = *(_QWORD *)(v45 + 16);
  v36 = *(_QWORD *)(v45 + 24);
  v38 = v36 >> 1;
  v39 = v37 + 1;
  if (v36 >> 1 <= v37)
  {
    sub_F3470(v36 > 1, v37 + 1, 1);
    v35 = v45;
    v36 = *(_QWORD *)(v45 + 24);
    v38 = v36 >> 1;
  }
  *(_QWORD *)(v35 + 16) = v39;
  *(double *)(v35 + 8 * v37 + 32) = 0.0 / v6;
  v40 = v37 + 2;
  if (v38 < v40)
  {
    sub_F3470(v36 > 1, v40, 1);
    v35 = v45;
  }
  *(_QWORD *)(v35 + 16) = v40;
  *(double *)(v35 + 8 * v39 + 32) = v31 / v6;
  v42 = *(_QWORD *)(v35 + 16);
  v41 = *(_QWORD *)(v35 + 24);
  if (v42 >= v41 >> 1)
    sub_F3470(v41 > 1, v42 + 1, 1);
  v43 = v45;
  *(_QWORD *)(v45 + 16) = v42 + 1;
  *(double *)(v43 + 8 * v42 + 32) = v6 / v6;
  v45 = v34;
  v47 = 0;
  v48 = 0;
  v46 = v43;
  v49 = xmmword_2F4680;
  v50 = kCAGradientLayerAxial;
  v44 = v30;
  sub_ECA74(&v45);
}

uint64_t sub_F33E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21B9E4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F3400(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21BCC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F341C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21BFCC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3438(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21BFE0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3454(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21BFF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3470(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C008(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F348C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C164(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F34A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C2EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F34C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C454(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F34E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C5DC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F34FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C764(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3518(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C8EC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3534(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21CA8C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F3550(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21CAA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F356C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21BB58(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F3588(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21CAB4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_F35A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21CAC8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_F35C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21CD8C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

void sub_F35DC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_3D6098);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_89A0(&qword_3D60A0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_89A0(&qword_3D60A8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

Swift::Int sub_F3870(uint64_t a1)
{
  return sub_F39C8(a1, &qword_3D6070);
}

Swift::Int sub_F387C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D6078);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_F39BC(uint64_t a1)
{
  return sub_F39C8(a1, &qword_3D1DA0);
}

Swift::Int sub_F39C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)(v20, *(_QWORD *)(v4 + 40));
      Hasher._combine(_:)(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if ((_DWORD)v8 == *(unsigned __int8 *)(v15 + v11))
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if ((_DWORD)v8 == *(unsigned __int8 *)(v15 + v11))
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for ShelfPageControl()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16ShelfPageControl);
}

void sub_F3B24()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjCClassFromMetadata;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  __int128 v11;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackground;
  v2 = type metadata accessor for ShelfBackgroundFillView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v2);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_leftBackgroundMask;
  v5 = type metadata accessor for GradientView();
  v6 = (objc_class *)swift_getObjCClassFromMetadata(v5);
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v6), "init");
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackground;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_rightBackgroundMask;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(v6), "init");
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_isHovering] = 0;
  v9 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_shelfBackground];
  *(_DWORD *)v9 = 0;
  *((_WORD *)v9 + 2) = 256;
  v10 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ShelfPageControl_verticalButtonInsets];
  v11 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *v10 = *(_OWORD *)&UIEdgeInsetsZero.top;
  v10[1] = v11;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/ShelfPageControl.swift", 46, 2, 60, 0);
  __break(1u);
}

void *sub_F3C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D6080);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_89A0(&qword_3D6088, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_89A0(&qword_3D6090, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

id sub_F3EC0(char *a1, uint64_t *a2, char *a3)
{
  _BYTE *v3;
  char v4;
  uint64_t v5;
  char v6;
  char *v7;
  id v8;
  objc_super v10;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_usesBoundsForBaselineGuide] = 0;
  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_touchInsets];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[32] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton____lazy_storage___layoutView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_progressView] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style] = v4;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill] = v6;
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_glyph] = v5;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MacButton();
  v8 = objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_F4150();

  return v8;
}

id sub_F4034(char *a1, void **a2, char *a3)
{
  _BYTE *v3;
  char v4;
  void *v5;
  char v6;
  void *v7;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style] = v4;
  v7 = *(void **)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_glyph];
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_glyph] = v5;
  sub_F40A8(v5);
  sub_F40B8(v7);
  sub_F4150();
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill] = v6;
  sub_F4150();
  return objc_msgSend(v3, "invalidateIntrinsicContentSize");
}

id sub_F40A8(id result)
{
  if ((unint64_t)result >= 7)
    return result;
  return result;
}

void sub_F40B8(id a1)
{
  if ((unint64_t)a1 >= 7)

}

void sub_F40C8()
{
  void *v0;
  double v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacButton();
  objc_msgSendSuper2(&v2, "tintColorDidChange");
  sub_F46C0(v1);
}

id sub_F4150()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double left;
  double right;
  double bottom;
  double v19;
  uint64_t v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  double top;
  double v30;
  double v31;

  v1 = v0;
  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setCornerCurve:", kCACornerCurveContinuous);

  v3 = objc_msgSend(v1, "layer");
  v4 = v3;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style;
  v6 = 14.5;
  v7 = 6.0;
  switch(v1[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style])
  {
    case 0u:
      break;
    case 1u:
    case 6u:
      v7 = 4.0;
      break;
    case 2u:
      goto LABEL_4;
    case 3u:
      v6 = 14.0;
LABEL_4:
      v7 = v6;
      break;
    default:
      v7 = 0.0;
      break;
  }
  objc_msgSend(v3, "setCornerRadius:", v7, v6);

  v8 = objc_msgSend(v1, "titleLabel");
  if (v8)
  {
    v9 = v8;
    v10 = sub_F51C8();
    objc_msgSend(v9, "setFont:", v10);

  }
  v11 = sub_F4430();
  objc_msgSend(v1, "setImage:forState:", v11, 0);

  objc_msgSend(v1, "setAdjustsImageWhenHighlighted:", 0);
  sub_F46C0(v12);
  sub_F4D80();
  objc_msgSend(v1, "setImageEdgeInsets:");
  objc_msgSend(v1, "imageEdgeInsets");
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  if (v19 == right && v15 == bottom && v14 == left && v13 == UIEdgeInsetsZero.top)
    v23 = 4;
  else
    v23 = 0;
  objc_msgSend(v1, "setContentMode:", v23);
  v24 = objc_msgSend(v1, "imageView");
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setContentMode:", 1);

  }
  v26 = 4.0;
  if (v1[v5] >= 3u)
    v27 = left;
  else
    v27 = 4.0;
  objc_msgSend(v1, "setContentEdgeInsets:", UIEdgeInsetsZero.top, v27, bottom, right);
  if (v1[v5] != 2 || (v28 = sub_F4430(), v28, top = 0.0, v30 = 0.0, v31 = 0.0, !v28))
  {
    top = UIEdgeInsetsZero.top;
    v30 = left;
    v31 = bottom;
    v26 = right;
  }
  return objc_msgSend(v1, "setTitleEdgeInsets:", top, v30, v31, v26);
}

uint64_t type metadata accessor for MacButton()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews9MacButton);
}

id sub_F4430()
{
  id *v0;
  id v1;
  id v2;
  NSString v3;
  id v4;
  NSString v5;

  v1 = 0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      v3 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v3);

      if (!v2)
        goto LABEL_6;
      goto LABEL_4;
    case 5uLL:
      v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithWeight:", 7);
      v5 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v5, v4);

      if (v2)
        goto LABEL_4;
LABEL_6:
      v1 = 0;
      break;
    case 6uLL:
      return v1;
    default:
      v2 = *v0;
LABEL_4:
      v1 = objc_msgSend(v2, "imageWithRenderingMode:", 2);

      break;
  }
  return v1;
}

void sub_F46C0(double a1)
{
  _BYTE *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char **v9;
  id v10;
  id v11;
  void *v12;
  _QWORD v13[5];
  uint64_t v14;

  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill;
  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill])
  {
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill] == 1)
    {
      v3 = objc_allocWithZone((Class)UIColor);
      v13[4] = sub_F5394;
      v14 = 0;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256;
      v13[2] = sub_EBBFC;
      v13[3] = &block_descriptor_3_0;
      v4 = _Block_copy(v13);
      v5 = objc_msgSend(v3, "initWithDynamicProvider:", v4);
      _Block_release(v4);
      *(_QWORD *)&a1 = swift_release(v14).n128_u64[0];
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v5 = (id)qword_3D0890;
  }
  objc_msgSend(v1, "setBackgroundColor:", v5, a1);

  v6 = objc_msgSend(v1, "imageView");
  if (v6)
  {
    v7 = v6;
    if (v1[v2])
    {
      if (v1[v2] == 1)
      {
        v8 = 0;
LABEL_15:
        objc_msgSend(v7, "setTintColor:", v8);

        goto LABEL_16;
      }
      v9 = &selRef_secondaryLabelColor;
    }
    else
    {
      v9 = &selRef_whiteColor;
    }
    v8 = objc_msgSend((id)objc_opt_self(UIColor), *v9);
    goto LABEL_15;
  }
LABEL_16:
  if (!v1[v2])
  {
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    goto LABEL_24;
  }
  if (v1[v2] != 1 && v1[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style] == 4)
  {
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
LABEL_24:
    v11 = v10;
    goto LABEL_25;
  }
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  v11 = (id)qword_3D0890;
LABEL_25:
  v12 = v11;
  objc_msgSend(v1, "setTitleColor:forState:", v11, 0);

}

id sub_F4928()
{
  return sub_F4C4C((SEL *)&selRef_isHighlighted);
}

void sub_F4994(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MacButton();
  objc_msgSendSuper2(&v3, "setHighlighted:", a1 & 1);
  sub_F49D8();
}

void sub_F49D8()
{
  unsigned __int8 *v0;
  unsigned int v1;
  int v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = objc_msgSend(v0, "isHighlighted");
  v2 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill];
  if (v1)
  {
    if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill])
    {
      if (v2 == 1)
      {
        if (qword_3CEFE8 != -1)
          swift_once(&qword_3CEFE8, sub_DF80);
        v3 = objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", 0.1);
        goto LABEL_17;
      }
LABEL_10:
      v3 = 0;
      goto LABEL_17;
    }
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v6 = (void *)qword_3D0890;
    v7 = objc_allocWithZone((Class)UIColor);
    v8 = v6;
    v9 = objc_msgSend(v7, "initWithWhite:alpha:", 0.0, 0.2);
    v3 = objc_msgSend(v8, "_colorBlendedWithColor:", v9);

  }
  else
  {
    if (v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_fill])
    {
      if (v2 == 1)
      {
        v4 = objc_allocWithZone((Class)UIColor);
        v10[4] = sub_F5394;
        v11 = 0;
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 1107296256;
        v10[2] = sub_EBBFC;
        v10[3] = &block_descriptor_17;
        v5 = _Block_copy(v10);
        v3 = objc_msgSend(v4, "initWithDynamicProvider:", v5);
        _Block_release(v5);
        swift_release(v11);
        goto LABEL_17;
      }
      goto LABEL_10;
    }
    if (qword_3CEFE8 != -1)
      swift_once(&qword_3CEFE8, sub_DF80);
    v3 = (id)qword_3D0890;
  }
LABEL_17:
  objc_msgSend(v0, "setBackgroundColor:", v3);

}

id sub_F4C04(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MacButton();
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_F4C40()
{
  return sub_F4C4C((SEL *)&selRef_isEnabled);
}

id sub_F4C4C(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MacButton();
  return objc_msgSendSuper2(&v4, *a1);
}

id sub_F4D10(char a1)
{
  void *v1;
  unsigned int v3;
  double v4;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MacButton();
  objc_msgSendSuper2(&v6, "setEnabled:", a1 & 1);
  v3 = objc_msgSend(v1, "isEnabled");
  v4 = 0.5;
  if (v3)
    v4 = 1.0;
  return objc_msgSend(v1, "setAlpha:", v4);
}

void sub_F4D80()
{
  void *v0;

  objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");

}

id sub_F4E2C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton____lazy_storage___layoutView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton____lazy_storage___layoutView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton____lazy_storage___layoutView];
  }
  else
  {
    v4 = sub_F4E8C(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_F4E8C(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(a1, "addSubview:", v2);
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_2F0A20;
    v8 = objc_msgSend(v2, "leftAnchor");
    v9 = objc_msgSend(v4, "leftAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(v2, "rightAnchor");
    v12 = objc_msgSend(v4, "rightAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v7 + 40) = v13;
    v14 = objc_msgSend(v2, "topAnchor");
    v15 = objc_msgSend(v4, "topAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v7 + 48) = v16;
    v17 = objc_msgSend(v2, "bottomAnchor");
    v18 = objc_msgSend(v4, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v7 + 56) = v19;
    specialized Array._endMutation()(v20);
    sub_12D34();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  }
  return v2;
}

id sub_F519C()
{
  void *v0;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_usesBoundsForBaselineGuide) == 1)
    return sub_F4E2C();
  else
    return v0;
}

id sub_F51C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 8 * *(char *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style);
  return objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", *(double *)((char *)&unk_2F5E90 + v1), **(double **)((char *)&off_381AF0 + v1));
}

double sub_F5248()
{
  return 0.0;
}

double sub_F529C()
{
  void *v0;
  uint64_t v1;
  double result;
  objc_super v3;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style;
  result = 28.0;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_style) != 3)
  {
    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for MacButton();
    objc_msgSendSuper2(&v3, "intrinsicContentSize");
    __asm { BR              X10 }
  }
  return result;
}

id sub_F5378()
{
  void *v0;

  return objc_msgSend(v0, "intrinsicContentSize");
}

id sub_F5394(void *a1)
{
  char *v1;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  return objc_msgSend((id)qword_3D0890, "colorWithAlphaComponent:", dbl_2F5CD0[v1 == (_BYTE *)&dword_0 + 2]);
}

void MacButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.MacButton", 33, "init(frame:)", 12, 0);
  __break(1u);
}

id MacButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MacButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_F54B4()
{
  unint64_t result;

  result = qword_3D60D0;
  if (!qword_3D60D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MacButton.Style, &type metadata for MacButton.Style);
    atomic_store(result, (unint64_t *)&qword_3D60D0);
  }
  return result;
}

unint64_t sub_F54FC()
{
  unint64_t result;

  result = qword_3D60D8;
  if (!qword_3D60D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MacButton.Fill, &type metadata for MacButton.Fill);
    atomic_store(result, (unint64_t *)&qword_3D60D8);
  }
  return result;
}

void *sub_F5588()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_progressView);
  v2 = v1;
  return v1;
}

void sub_F55B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_progressView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews9MacButton_progressView) = a1;

}

uint64_t method lookup function for MacButton(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MacButton);
}

uint64_t dispatch thunk of MacButton.setStyle(style:glyph:fill:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of MacButton.updateAppearance()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

_QWORD *initializeBufferWithCopyOfBuffer for MacButton.Glyph(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for MacButton.Glyph(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for MacButton.Glyph(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for MacButton.Glyph(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for MacButton.Glyph(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 6;
  if (v4 >= 8)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MacButton.Glyph(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t sub_F57E8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_F5800(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MacButton.Glyph()
{
  return &type metadata for MacButton.Glyph;
}

uint64_t getEnumTagSinglePayload for ArtworkContainer.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MacButton.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_F590C + 4 * byte_2F5CEC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_F5940 + 4 * byte_2F5CE7[v4]))();
}

uint64_t sub_F5940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_F5948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xF5950);
  return result;
}

uint64_t sub_F595C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xF5964);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_F5968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F5970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MacButton.Style()
{
  return &type metadata for MacButton.Style;
}

uint64_t storeEnumTagSinglePayload for MacButton.Fill(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_F59D8 + 4 * byte_2F5CF6[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_F5A0C + 4 * byte_2F5CF1[v4]))();
}

uint64_t sub_F5A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_F5A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xF5A1CLL);
  return result;
}

uint64_t sub_F5A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xF5A30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_F5A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F5A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MacButton.Fill()
{
  return &type metadata for MacButton.Fill;
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_17(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_F5A7C(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v2 = v1;
  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, "willMoveToParentViewController:", 0);
    v4 = objc_msgSend(v3, "view");
    if (!v4)
    {
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    v5 = v4;
    objc_msgSend(v4, "removeFromSuperview");

    objc_msgSend(v3, "removeFromParentViewController");
  }
  v6 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController];
  if (v6)
  {
    v7 = v6;
    v8 = (void *)UIView.mt_viewController.getter();
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "addChildViewController:", v7);

    }
    v10 = objc_msgSend(v2, "contentView");
    v11 = objc_msgSend(v7, "view");
    if (v11)
    {
      v12 = v11;
      UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v11, 1, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

      v13 = v7;
      v14 = (id)UIView.mt_viewController.getter();
      objc_msgSend(v13, "didMoveToParentViewController:", v14);

      return;
    }
    goto LABEL_11;
  }
}

void sub_F5BEC(void *a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  int *v16;
  id v17;
  id v18;
  id v19;
  char v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_amsDialogRequest);
  if (!v2)
  {
    v14 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController);
    v26 = v14;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController) = 0;
    sub_F5A7C(v14);
    goto LABEL_24;
  }
  v26 = v2;
  v4 = objc_msgSend(v26, "identifier");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

    if (a1)
      goto LABEL_4;
LABEL_9:
    v11 = 0;
    v13 = v26;
    if (!v8)
      goto LABEL_15;
    goto LABEL_10;
  }
  v6 = 0;
  v8 = 0;
  if (!a1)
    goto LABEL_9;
LABEL_4:
  v9 = objc_msgSend(a1, "identifier");
  if (v9)
  {
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    a1 = v12;

    v13 = v26;
    if (!v8)
    {
LABEL_15:
      if (!a1)
        goto LABEL_28;
      goto LABEL_18;
    }
  }
  else
  {
    v11 = 0;
    a1 = 0;
    v13 = v26;
    if (!v8)
      goto LABEL_15;
  }
LABEL_10:
  if (!a1)
  {
    a1 = v8;
LABEL_18:
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(a1).n128_u64[0];
    goto LABEL_19;
  }
  if (v6 == v11 && v8 == a1)
  {

    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(a1);
    return;
  }
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v11, a1, 0);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if ((v20 & 1) != 0)
    goto LABEL_24;
LABEL_19:
  v16 = (int *)objc_msgSend(v26, "style", v15);
  if (v16 != &dword_4)
  {
    if (v16 == (int *)((char *)&dword_0 + 3))
    {
      v17 = objc_msgSend(objc_allocWithZone((Class)AMSUIBannerMessageViewController), "initWithRequest:", v26);
      v18 = objc_msgSend(objc_allocWithZone((Class)AMSUIBannerAppearance), "init");
      objc_msgSend(v17, "setPreferredAppearance:", v18);

      v19 = objc_msgSend(v17, "preferredAppearance");
      if (v19)
        goto LABEL_26;
      goto LABEL_27;
    }
LABEL_24:

    return;
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)AMSUIBubbleTipViewController), "initWithRequest:", v26);
  v21 = objc_msgSend(objc_allocWithZone((Class)AMSUIBubbleTipAppearance), "init");
  objc_msgSend(v17, "setPreferredAppearance:", v21);

  v19 = objc_msgSend(v17, "preferredAppearance");
  if (v19)
  {
LABEL_26:
    v22 = v19;
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v22, "setImageTintColor:", v23);

  }
LABEL_27:
  objc_msgSend(v17, "setDelegate:", v1);
  v24 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController) = v17;
  v25 = v17;
  sub_F5A7C(v24);

  v13 = v25;
LABEL_28:

}

id sub_F5F24(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recentlyUnfollowedTipProvider] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesTipProvider] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesSearchTipProvider] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_amsDialogRequest] = 0;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
}

id sub_F6008(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recentlyUnfollowedTipProvider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesTipProvider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesSearchTipProvider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_messageViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_amsDialogRequest] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

uint64_t type metadata accessor for AMSBannerCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13AMSBannerCell);
}

uint64_t sub_F6194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph) = a1;
  swift_release(v3);
  v4 = type metadata accessor for MetricsController(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain_n(a1, 2);
  v6 = MetricsController.init(asPartOf:)(v5);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController) = v6;
  swift_release(v7);
  v8 = type metadata accessor for AddFavoriteCategoriesSearchTipProvider(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(a1);
  v10 = AddFavoriteCategoriesSearchTipProvider.init(asPartOf:)(v9);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesSearchTipProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesSearchTipProvider) = v10;
  swift_release(v11);
  v12 = type metadata accessor for AddFavoriteCategoriesTipProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = swift_retain(a1);
  v14 = AddFavoriteCategoriesTipProvider.init(asPartOf:)(v13);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesTipProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesTipProvider) = v14;
  swift_release(v15);
  v16 = type metadata accessor for RecentlyUnfollowedTipProvider(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = swift_retain(a1);
  v18 = RecentlyUnfollowedTipProvider.init(asPartOf:)(v17);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recentlyUnfollowedTipProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recentlyUnfollowedTipProvider) = v18;
  swift_release(v19);
  v20 = type metadata accessor for RecommendationsUpdatedTipProvider(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = swift_retain(a1);
  v22 = RecommendationsUpdatedTipProvider.init(asPartOf:)(v21);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider) = v22;
  return swift_release(v23);
}

void sub_F62FC(void **a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_amsDialogRequest);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_amsDialogRequest) = *a1;
  v4 = v2;
  sub_F5BEC(v3);

}

uint64_t sub_F634C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph));
}

uint64_t sub_F6360(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC((unint64_t *)&unk_3D6220, v3, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F6090);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

void sub_F63B8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000000030C020, "ShelfKitCollectionViews/AMSBannerCell.swift", 43, 2, 78, 0);
  __break(1u);
}

uint64_t sub_F6410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC((unint64_t *)&unk_3D6220, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F6090);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_F6444()
{
  return 0x4024000000000000;
}

uint64_t sub_F6450@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  static ShelfCell.cellShape(presentation:)(v3);
  return sub_D210((uint64_t)v3, a1, &qword_3D0F58);
}

uint64_t sub_F6494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  __chkstk_darwin(v4);
  v6 = (_WORD *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = 0;
  (*(void (**)(_WORD *, _QWORD))(v7 + 104))(v6, enum case for ShelfCellListSeparatorMode.Placement.custom(_:));
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Layout.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v6, v3);
}

void sub_F6580(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  id v53;
  NSString v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSString v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  void (*v69)(_QWORD, _QWORD);
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  NSURL *v83;
  void *v84;
  void *v85;
  char *v86;
  unint64_t v87;
  Class isa;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(void);
  void (*v97)(char *, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t, __n128);
  __n128 v102;
  char v103;
  void (*v104)(char *, char *, uint64_t);
  __n128 v105;
  char *v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  void (*v123)(char *, uint64_t, __n128);
  char v124;
  __n128 v125;
  char *v126;
  uint64_t v127;
  __n128 v128;
  char *v129;
  char *v130;
  char v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __n128 v142;
  char v143;
  __n128 v144;
  char *v145;
  uint64_t v146;
  __n128 v147;
  uint64_t *v148;
  char v149;
  __n128 v150;
  char *v151;
  uint64_t v152;
  __n128 v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __n128 v159;
  char v160;
  __n128 v161;
  uint64_t v162;
  __n128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t);
  char *v170;
  unsigned int (*v171)(char *, uint64_t, uint64_t);
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  id v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  char *v196;
  char *v197;
  void (*v198)(_QWORD, _QWORD);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v188 = a1;
  v195 = (_QWORD *)type metadata accessor for URL(0);
  v3 = *(v195 - 1);
  __chkstk_darwin(v195);
  v187 = (char *)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4E88);
  __chkstk_darwin(v5);
  v182 = (char *)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6250);
  __chkstk_darwin(v7);
  v9 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v164 - v11;
  __chkstk_darwin(v13);
  v178 = (char *)&v164 - v14;
  __chkstk_darwin(v15);
  v185 = (char *)&v164 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v164 - v18;
  v190 = type metadata accessor for TipType(0);
  v194 = *(_QWORD *)(v190 - 8);
  v20 = *(_QWORD *)(v194 + 64);
  __chkstk_darwin(v190);
  v173 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v174 = (char *)&v164 - v22;
  __chkstk_darwin(v23);
  v176 = (char *)&v164 - v24;
  __chkstk_darwin(v25);
  v177 = (char *)&v164 - v26;
  __chkstk_darwin(v27);
  v179 = (char *)&v164 - v28;
  __chkstk_darwin(v29);
  v180 = (char *)&v164 - v30;
  __chkstk_darwin(v31);
  v186 = (char *)&v164 - v32;
  __chkstk_darwin(v33);
  v184 = (char *)&v164 - v34;
  __chkstk_darwin(v35);
  v181 = (char *)&v164 - v36;
  __chkstk_darwin(v37);
  v183 = (char *)&v164 - v38;
  __chkstk_darwin(v39);
  v192 = (char *)&v164 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v41);
  v191 = (uint64_t)&v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v45 = (char *)&v164 - v44;
  *(_QWORD *)&v47 = __chkstk_darwin(v46).n128_u64[0];
  v197 = (char *)&v164 - v48;
  v49 = objc_msgSend(a2, "originalRequest", v47);
  v50 = objc_msgSend(v49, "identifier");

  v172 = v9;
  v175 = v12;
  v51 = v3;
  if (v50)
  {
    v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v198 = v52;

  }
  else
  {
    v193 = 0;
    v198 = 0;
  }
  v53 = objc_msgSend(a2, "originalRequest");
  v54 = objc_msgSend(a2, "selectedActionIdentifier");
  if (!v54)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v57 = v56;
    v54 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v57).n128_u64[0];
  }
  v196 = (char *)objc_msgSend(v53, "locateActionWithIdentifier:", v54, v55);

  v58 = objc_msgSend(a2, "originalRequest");
  v59 = objc_msgSend(a2, "selectedActionIdentifier");
  if (!v59)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v62 = v61;
    v59 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v60 = swift_bridgeObjectRelease(v62).n128_u64[0];
  }
  v63 = objc_msgSend(v58, "locateActionWithIdentifier:", v59, v60);

  v64 = (uint64_t)v197;
  if (v63)
  {
    v65 = objc_msgSend(v63, "deepLink");

    v67 = v3;
    v68 = v196;
    v69 = v198;
    if (v65)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v65, v66);

      v70 = 0;
    }
    else
    {
      v70 = 1;
    }
    v71 = v195;
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v51 + 56))(v45, v70, 1, v195);
    sub_D210((uint64_t)v45, v64, (uint64_t *)&unk_3D2D70);
    v72 = v194;
    if (!v69)
      goto LABEL_21;
  }
  else
  {
    v67 = v3;
    v71 = v195;
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v3 + 56))(v197, 1, 1, v195);
    v68 = v196;
    v69 = v198;
    v72 = v194;
    if (!v198)
    {
LABEL_21:
      v80 = v191;
      sub_D184(v64, v191, (uint64_t *)&unk_3D2D70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v67 + 48))(v80, 1, v71) == 1)
      {
        sub_D1D4(v64, (uint64_t *)&unk_3D2D70);

        v64 = v80;
      }
      else
      {
        v81 = v187;
        (*(void (**)(char *, uint64_t, _QWORD *))(v67 + 32))(v187, v80, v71);
        v82 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        URL._bridgeToObjectiveC()(v83);
        v85 = v84;
        v86 = v68;
        v87 = sub_D4A3C((uint64_t)_swiftEmptyArrayStorage);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_239FC(&qword_3D0410, 255, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2EF6A0);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v82, "openURL:options:completionHandler:", v85, isa, 0, swift_bridgeObjectRelease(v87).n128_f64[0]);

        (*(void (**)(char *, _QWORD *))(v67 + 8))(v81, v71);
      }
      goto LABEL_66;
    }
  }
  if (!v68)
  {
    swift_bridgeObjectRelease(v69);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain(v69);
  v73 = v68;
  TipType.init(rawValue:)(v193, v69);
  v74 = v190;
  v171 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v72 + 48);
  if (v171(v19, 1, v190) == 1)
  {

    sub_D1D4((uint64_t)v19, &qword_3D6250);
    v75 = v74;
    goto LABEL_18;
  }
  v170 = v73;
  v164 = v67;
  v89 = v192;
  v169 = *(void (**)(_QWORD, _QWORD, _QWORD))(v72 + 32);
  v169(v192, v19, v74);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6260);
  v91 = *(_QWORD *)(v72 + 72);
  v92 = *(unsigned __int8 *)(v72 + 80);
  v93 = (v92 + 32) & ~v92;
  v167 = v92 | 7;
  v94 = swift_allocObject(v90, v93 + 3 * v91, v92 | 7);
  *(_OWORD *)(v94 + 16) = xmmword_2F5ED0;
  v168 = v93;
  v95 = v94 + v93;
  v96 = *(void (**)(void))(v72 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v96)(v95, enum case for TipType.removeOlderDownloads(_:), v74);
  v166 = v95 + v91;
  v96();
  v165 = v95 + 2 * v91;
  v96();
  v97 = *(void (**)(_QWORD, _QWORD, _QWORD))(v72 + 16);
  v98 = v183;
  v97(v183, v95, v74);
  v99 = sub_239FC(&qword_3D6268, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TipType, (uint64_t)&protocol conformance descriptor for TipType);
  v100 = dispatch thunk of static Equatable.== infix(_:_:)(v98, v89, v74, v99);
  v101 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
  v102 = swift_bridgeObjectRetain(v94);
  v101(v98, v74, v102);
  if ((v100 & 1) != 0
    || (v97(v98, v166, v74),
        v103 = dispatch thunk of static Equatable.== infix(_:_:)(v98, v192, v74, v99),
        ((void (*)(char *, uint64_t))v101)(v98, v74),
        (v103 & 1) != 0))
  {
    v104 = v97;
    v105 = swift_bridgeObjectRelease(v94);
    v75 = v74;
    v106 = v192;
LABEL_27:
    swift_setDeallocating(v94, v105);
    swift_arrayDestroy(v95, *(_QWORD *)(v94 + 16), v75);
    swift_deallocClassInstance(v94, 32, 7);
    v107 = swift_bridgeObjectRelease(v198);
    v198 = (void (*)(_QWORD, _QWORD))v101;
    v108 = (uint64_t)v182;
    static TaskPriority.userInitiated.getter(v107);
    v109 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 0, 1, v109);
    v110 = v181;
    v104(v181, v106, v75);
    type metadata accessor for MainActor(0);
    v111 = v170;
    v196 = v189;
    v195 = v188;
    v112 = static MainActor.shared.getter();
    v113 = v168;
    v114 = (v20 + v168 + 7) & 0xFFFFFFFFFFFFFFF8;
    v115 = (v114 + 15) & 0xFFFFFFFFFFFFFFF8;
    v116 = (v115 + 15) & 0xFFFFFFFFFFFFFFF8;
    v117 = swift_allocObject(&unk_381B80, v116 + 8, v167);
    *(_QWORD *)(v117 + 16) = v112;
    *(_QWORD *)(v117 + 24) = &protocol witness table for MainActor;
    v169(v117 + v113, v110, v75);
    *(_QWORD *)(v117 + v114) = v196;
    *(_QWORD *)(v117 + v115) = v111;
    v64 = (uint64_t)v197;
    *(_QWORD *)(v117 + v116) = v195;
    v118 = sub_2B765C(v108, (uint64_t)&unk_3D6278, v117);

    swift_release(v118);
    v198(v192, v75);
LABEL_66:
    sub_D1D4(v64, (uint64_t *)&unk_3D2D70);
    return;
  }
  v104 = v97;
  v97(v98, v165, v74);
  v130 = v192;
  v131 = dispatch thunk of static Equatable.== infix(_:_:)(v98, v192, v74, v99);
  ((void (*)(char *, uint64_t))v101)(v98, v74);
  v105 = swift_bridgeObjectRelease(v94);
  v75 = v74;
  v106 = v130;
  if ((v131 & 1) != 0)
    goto LABEL_27;
  swift_setDeallocating(v94, v105);
  swift_arrayDestroy(v95, *(_QWORD *)(v94 + 16), v75);
  swift_deallocClassInstance(v94, 32, 7);
  ((void (*)(char *, uint64_t))v101)(v130, v75);
  v73 = v170;

  v72 = v194;
  v71 = v195;
  v67 = v164;
  v64 = (uint64_t)v197;
  v69 = v198;
LABEL_18:
  swift_bridgeObjectRetain(v69);
  v76 = v73;
  v77 = (uint64_t)v185;
  TipType.init(rawValue:)(v193, v69);
  v78 = v171;
  if (v171(v77, 1, v75) == 1)
  {

    sub_D1D4(v77, &qword_3D6250);
    v79 = (uint64_t)v178;
    goto LABEL_37;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v184, v77, v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v186, enum case for TipType.recentlyUnfollowed(_:), v75);
  v119 = sub_239FC(&qword_3D6258, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TipType, (uint64_t)&protocol conformance descriptor for TipType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v75, v119);
  dispatch thunk of RawRepresentable.rawValue.getter(&v199, v75, v119);
  v120 = v202;
  v121 = v200;
  if (v201 == v199 && v202 == v200)
  {
    v122 = swift_bridgeObjectRelease_n(v202, 2);
    v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
    v123(v186, v75, v122);
LABEL_32:
    v126 = v189;
    swift_bridgeObjectRelease(v198);
    v127 = *(_QWORD *)&v126[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recentlyUnfollowedTipProvider];
    if (v127)
    {
      v128 = swift_retain(v127);
      RecentlyUnfollowedTipProvider.handle(tipAction:from:)(v76, v188, v128);
      swift_release(v127);

      v129 = v184;
LABEL_65:
      ((void (*)(char *, uint64_t))v123)(v129, v75);
      goto LABEL_66;
    }
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v124 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, v199, v200, 0);
  swift_bridgeObjectRelease(v120);
  v125 = swift_bridgeObjectRelease(v121);
  v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
  v123(v186, v75, v125);
  if ((v124 & 1) != 0)
    goto LABEL_32;
  ((void (*)(char *, uint64_t))v123)(v184, v75);

  v69 = v198;
  v79 = (uint64_t)v178;
  v78 = v171;
LABEL_37:
  swift_bridgeObjectRetain(v69);
  v132 = v76;
  TipType.init(rawValue:)(v193, v69);
  if (v78(v79, 1, v75) == 1)
  {

    sub_D1D4(v79, &qword_3D6250);
    goto LABEL_39;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v180, v79, v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v179, enum case for TipType.addFavoriteCategories(_:), v75);
  v135 = sub_239FC(&qword_3D6258, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TipType, (uint64_t)&protocol conformance descriptor for TipType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v75, v135);
  dispatch thunk of RawRepresentable.rawValue.getter(&v199, v75, v135);
  v136 = v202;
  v137 = v200;
  if (v201 == v199 && v202 == v200)
  {
    v138 = swift_bridgeObjectRelease_n(v202, 2);
    v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
    v123(v179, v75, v138);
    goto LABEL_48;
  }
  v143 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, v199, v200, 0);
  swift_bridgeObjectRelease(v136);
  v144 = swift_bridgeObjectRelease(v137);
  v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
  v123(v179, v75, v144);
  if ((v143 & 1) != 0)
  {
LABEL_48:
    v145 = v189;
    swift_bridgeObjectRelease(v198);
    v146 = *(_QWORD *)&v145[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesTipProvider];
    if (v146)
    {
      v147 = swift_retain(v146);
      AddFavoriteCategoriesTipProvider.handle(tipAction:from:)(v132, v188, v147);
      swift_release(v146);

      v148 = &v205;
LABEL_64:
      v129 = (char *)*(v148 - 32);
      goto LABEL_65;
    }
    goto LABEL_69;
  }
  ((void (*)(char *, uint64_t))v123)(v180, v75);

  v69 = v198;
  v78 = v171;
LABEL_39:
  swift_bridgeObjectRetain(v69);
  v133 = v132;
  v134 = (uint64_t)v175;
  TipType.init(rawValue:)(v193, v69);
  if (v78(v134, 1, v75) == 1)
  {

    sub_D1D4(v134, &qword_3D6250);
    goto LABEL_55;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v177, v134, v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v176, enum case for TipType.addFavoriteCategoriesSearch(_:), v75);
  v139 = sub_239FC(&qword_3D6258, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TipType, (uint64_t)&protocol conformance descriptor for TipType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v75, v139);
  dispatch thunk of RawRepresentable.rawValue.getter(&v199, v75, v139);
  v140 = v202;
  v141 = v200;
  if (v201 == v199 && v202 == v200)
  {
    v142 = swift_bridgeObjectRelease_n(v202, 2);
    v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
    v123(v176, v75, v142);
    goto LABEL_51;
  }
  v149 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, v199, v200, 0);
  swift_bridgeObjectRelease(v140);
  v150 = swift_bridgeObjectRelease(v141);
  v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
  v123(v176, v75, v150);
  if ((v149 & 1) != 0)
  {
LABEL_51:
    v151 = v189;
    swift_bridgeObjectRelease(v198);
    v152 = *(_QWORD *)&v151[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_addFavoriteCategoriesSearchTipProvider];
    if (v152)
    {
      v153 = swift_retain(v152);
      AddFavoriteCategoriesSearchTipProvider.handle(tipAction:from:)(v133, v188, v153);
      swift_release(v152);

      v148 = &v204;
      goto LABEL_64;
    }
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  ((void (*)(char *, uint64_t))v123)(v177, v75);

  v69 = v198;
  v78 = v171;
LABEL_55:
  v154 = v133;
  v155 = (uint64_t)v172;
  TipType.init(rawValue:)(v193, v69);
  if (v78(v155, 1, v75) == 1)
  {

    sub_D1D4(v155, &qword_3D6250);
LABEL_57:
    v68 = v196;
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v174, v155, v75);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v173, enum case for TipType.recommendationsUpdated(_:), v75);
  v156 = sub_239FC(&qword_3D6258, 255, (uint64_t (*)(uint64_t))&type metadata accessor for TipType, (uint64_t)&protocol conformance descriptor for TipType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v75, v156);
  dispatch thunk of RawRepresentable.rawValue.getter(&v199, v75, v156);
  v157 = v202;
  v158 = v200;
  if (v201 == v199 && v202 == v200)
  {
    v159 = swift_bridgeObjectRelease_n(v202, 2);
    v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
    v123(v173, v75, v159);
  }
  else
  {
    v160 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v202, v199, v200, 0);
    swift_bridgeObjectRelease(v157);
    v161 = swift_bridgeObjectRelease(v158);
    v123 = *(void (**)(_QWORD, _QWORD, __n128))(v72 + 8);
    v123(v173, v75, v161);
    if ((v160 & 1) == 0)
    {
      ((void (*)(char *, uint64_t))v123)(v174, v75);

      goto LABEL_57;
    }
  }
  v162 = *(_QWORD *)&v189[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider];
  if (v162)
  {
    v163 = swift_retain(*(_QWORD *)&v189[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_recommendationsUpdatedTipProvider]);
    RecommendationsUpdatedTipProvider.handle(tipAction:from:)(v154, v188, v163);
    swift_release(v162);

    v148 = &v203;
    goto LABEL_64;
  }
LABEL_71:
  __break(1u);
}

uint64_t sub_F7788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v8 = type metadata accessor for TipType(0);
  v7[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[11] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[12] = swift_task_alloc(v10, v11);
  v7[13] = swift_task_alloc(v10, v12);
  v13 = type metadata accessor for Logger(0);
  v7[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[15] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v15, v16);
  v7[17] = swift_task_alloc(v15, v17);
  v18 = type metadata accessor for MainActor(0);
  v7[18] = static MainActor.shared.getter();
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor, v19);
  v7[19] = v20;
  v7[20] = v21;
  return swift_task_switch(sub_F7868, v20, v21);
}

uint64_t sub_F7868(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  void (*v17)(uint64_t, uint64_t, __n128);
  double (*v18)(uint64_t, uint64_t);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1[6];
  v3 = v1[13];
  v4 = v1[10];
  v5 = v1[11];
  static Logger.downloads.getter(a1);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v1[21] = v6;
  v7 = v6(v3, v2, v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v1[13];
    v28 = v1[14];
    v29 = v1[17];
    v25 = v1[11];
    v26 = v1[10];
    v27 = v1[15];
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v30 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = TipType.rawValue.getter();
    v15 = v14;
    v1[5] = sub_37E78(v13, v14, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 5, v1 + 6);
    v16 = swift_bridgeObjectRelease(v15);
    v17 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
    v17(v10, v26, v16);
    _os_log_impl(&dword_0, v8, v9, "Handling tip response: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    v18 = *(double (**)(uint64_t, uint64_t))(v27 + 8);
    v19.n128_f64[0] = v18(v29, v28);
  }
  else
  {
    v20 = v1[17];
    v21 = v1[14];
    v22 = v1[15];
    v17 = *(void (**)(uint64_t, uint64_t, __n128))(v1[11] + 8);
    ((void (*)(_QWORD, _QWORD))v17)(v1[13], v1[10]);

    v18 = *(double (**)(uint64_t, uint64_t))(v22 + 8);
    v19.n128_f64[0] = v18(v20, v21);
  }
  v1[22] = v18;
  v1[23] = v17;
  v23 = (_QWORD *)swift_task_alloc(dword_3D6284, v19);
  v1[24] = v23;
  *v23 = v1;
  v23[1] = sub_F7A70;
  return sub_F7DD8(v1[8], v1[9]);
}

uint64_t sub_F7A70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_F7B2C;
  else
    v4 = sub_F7AD0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 160));
}

uint64_t sub_F7AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F7B2C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 168);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = swift_release(*(_QWORD *)(v0 + 144));
  static Logger.downloads.getter(v6);
  v2(v3, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 128);
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v34 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 184);
    v35 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 80);
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v38 = v13;
    *(_DWORD *)v12 = 136315394;
    v14 = TipType.rawValue.getter();
    v16 = v15;
    *(_QWORD *)(v0 + 16) = sub_37E78(v14, v15, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    v17 = swift_bridgeObjectRelease(v16);
    v34(v11, v33, v17);
    *(_WORD *)(v12 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v10;
    swift_errorRetain(v10);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    v19 = String.init<A>(describing:)(v0 + 24, v18);
    v21 = v20;
    *(_QWORD *)(v0 + 32) = sub_37E78(v19, v20, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v21);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl(&dword_0, v8, v9, "Failed to handle tip response for %s: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v10);
    v37(v36, v35);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 200);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 80);
    swift_errorRelease(v22);
    v23(v27, v28);
    swift_errorRelease(v22);
    swift_errorRelease(v22);

    v24(v25, v26);
  }
  v29 = *(_QWORD *)(v0 + 128);
  v31 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F7DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v3[31] = a2;
  v3[32] = v2;
  v3[30] = a1;
  v4 = type metadata accessor for Logger(0);
  v3[33] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[34] = v5;
  v3[35] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v6);
  v7 = type metadata accessor for ActionMetricsBehavior(0);
  v3[36] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[37] = v8;
  v3[38] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v9);
  v10 = type metadata accessor for ActionOutcome(0);
  v3[39] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[40] = v11;
  v3[41] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6290);
  v3[42] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[43] = v14;
  v3[44] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0, v15);
  v16 = type metadata accessor for MainActor(0);
  v3[45] = static MainActor.shared.getter();
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor, v17);
  v3[46] = v18;
  v3[47] = v19;
  return swift_task_switch(sub_F7EEC, v18, v19);
}

uint64_t sub_F7EEC()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;
  __n128 v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = (_OWORD *)(v0 + 56);
  v2 = (_OWORD *)(v0 + 136);
  v3 = objc_msgSend(*(id *)(v0 + 240), "parameters");
  if (v3)
  {
    v4 = v3;
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    *(_QWORD *)(v0 + 200) = static AMSDialogRequestKeys.recommendationActionKey.getter();
    *(_QWORD *)(v0 + 208) = v6;
    AnyHashable.init<A>(_:)((_QWORD *)(v0 + 96), v0 + 200, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v5 + 16) && (v7 = sub_36FB4(v0 + 96), (v8 & 1) != 0))
    {
      sub_1D66C(*(_QWORD *)(v5 + 56) + 32 * v7, v0 + 136);
    }
    else
    {
      *v2 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
    }
    sub_3D5CC(v0 + 96);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    *v2 = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
  }
  sub_D184(v0 + 136, v0 + 168, &qword_3D1A70);
  if (!*(_QWORD *)(v0 + 192))
  {
    sub_D1D4(v0 + 168, &qword_3D1A70);
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
    goto LABEL_15;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
  if ((swift_dynamicCast(v0 + 56, v0 + 168, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_15;
  }
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_15:
    v44 = v0 + 136;
    swift_release(*(_QWORD *)(v0 + 360));
    sub_D1D4(v0 + 56, (uint64_t *)&unk_3D30D0);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 256);
  sub_1B738((__int128 *)(v0 + 56), v0 + 16);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph);
  *(_QWORD *)(v0 + 384) = v11;
  if (v11)
  {
    v12 = async function pointer to BaseObjectGraph.inject<A>(_:)[1];
    v13 = swift_retain(v11);
    v14 = (_QWORD *)swift_task_alloc(v12, v13);
    *(_QWORD *)(v0 + 392) = v14;
    *v14 = v0;
    v14[1] = sub_F8394;
    return BaseObjectGraph.inject<A>(_:)(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 336));
  }
  v44 = v0 + 136;
  v39 = *(_QWORD *)(v0 + 360);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  v16 = swift_release(v39);
LABEL_16:
  v17 = *(void **)(v0 + 256);
  v18 = *(void **)(v0 + 240);
  static Logger.downloads.getter(v16);
  v19 = v17;
  v20 = v18;
  v21 = v19;
  v22 = Logger.logObject.getter(v20);
  v23 = static os_log_type_t.error.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v26 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 280);
  v28 = *(char **)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 264);
  v29 = *(void **)(v0 + 240);
  if (v24)
  {
    v41 = (_QWORD *)(v0 + 224);
    v30 = swift_slowAlloc(22, -1);
    v40 = (_QWORD *)swift_slowAlloc(8, -1);
    v42 = swift_slowAlloc(32, -1);
    *(_DWORD *)v30 = 136315394;
    v31 = *(_QWORD *)&v28[OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_objectGraph];
    v45 = v42;
    if (v31)
      v32 = 5457241;
    else
      v32 = 20302;
    v43 = v27;
    if (v31)
      v33 = 0xE300000000000000;
    else
      v33 = 0xE200000000000000;
    *(_QWORD *)(v0 + 232) = sub_37E78(v32, v33, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240);
    swift_bridgeObjectRelease(v33);

    *(_WORD *)(v30 + 12) = 2112;
    *v41 = v29;
    v34 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v41, v0 + 232);
    *v40 = v29;

    _os_log_impl(&dword_0, v22, v23, "Cannot handle tip request; non-action based result (hasObjectGraph = %s): %@",
      (uint8_t *)v30,
      0x16u);
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2F50);
    swift_arrayDestroy(v40, 1, v35);
    swift_slowDealloc(v40, -1, -1);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v30, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v43);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  sub_D1D4(v44, &qword_3D1A70);
  v36 = *(_QWORD *)(v0 + 328);
  v37 = *(_QWORD *)(v0 + 304);
  v38 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F8394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 392);
  *(_QWORD *)(*v1 + 400) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_F8804;
  else
    v4 = sub_F83F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 368), *(_QWORD *)(v2 + 376));
}

uint64_t sub_F83F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = v0[37];
  v1 = v0[38];
  v3 = v0[36];
  v4 = (void *)v0[31];
  v5 = sub_E710(0, (unint64_t *)&qword_3D2B40, UIViewController_ptr);
  v0[27] = v4;
  v6 = v4;
  v0[51] = BaseObjectGraph.satisfying<A>(_:with:)(v5, v0 + 27, v5);

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for ActionMetricsBehavior.notProcessed(_:), v3);
  return swift_task_switch(sub_F84B0, 0, 0);
}

uint64_t sub_F84B0()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  __n128 v3;
  _QWORD *v4;

  v0[52] = ActionDispatcher.dispatch(_:withMetrics:asPartOf:)(v0 + 2, v0[38], v0[51], v0[42]);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D62B0);
  v2 = sub_F9AA4();
  v4 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of Future.then() + 1), v3);
  v0[53] = v4;
  *v4 = v0;
  v4[1] = sub_F8548;
  return dispatch thunk of Future.then()(v0[41], v1, v2);
}

uint64_t sub_F8548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_F86E4;
  else
    v3 = sub_F85AC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_F85AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v2 = v0[40];
  v1 = v0[41];
  v4 = v0[38];
  v3 = v0[39];
  v5 = v0[36];
  v6 = v0[37];
  v7 = swift_release(v0[52]);
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v4, v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_F8620, v0[46], v0[47]);
}

uint64_t sub_F8620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  swift_release(*(_QWORD *)(v0 + 360));
  swift_release(v1);
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v6);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  sub_D1D4(v0 + 136, &qword_3D1A70);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F86E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v2 = v0[37];
  v1 = v0[38];
  v3 = v0[36];
  v4 = swift_release(v0[52]);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v4);
  return swift_task_switch(sub_F873C, v0[46], v0[47]);
}

uint64_t sub_F873C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  swift_release(*(_QWORD *)(v0 + 360));
  swift_release(v1);
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 352);
  v8 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 280);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  sub_D1D4(v0 + 136, &qword_3D1A70);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_F8804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release(*(_QWORD *)(v0 + 360));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 280);
  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 16));
  sub_D1D4(v0 + 136, &qword_3D1A70);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_F8918(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D5570);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v13 >= v25)
      {
LABEL_33:
        sub_F9918(a1);
        return;
      }
      v14 = *(_QWORD *)(v26 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v26 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v25)
            goto LABEL_33;
          v14 = *(_QWORD *)(v26 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v25)
              goto LABEL_33;
            v14 = *(_QWORD *)(v26 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v25)
                goto LABEL_33;
              v14 = *(_QWORD *)(v26 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_37;
                  if (v12 >= v25)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v26 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_3D590(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v37);
    sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_3D590((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_D1D4((uint64_t)v34, (uint64_t *)&unk_3D6240);
      swift_bridgeObjectRelease(v28);
      sub_F9918(a1);
      swift_release(v3);
      return;
    }
    v16 = v27;
    v17 = v28;
    sub_1D66C((uint64_t)v35 + 8, (uint64_t)v29);
    sub_D1D4((uint64_t)v34, (uint64_t *)&unk_3D6240);
    sub_1D65C(v29, v30);
    *(_QWORD *)&v31 = v16;
    *((_QWORD *)&v31 + 1) = v17;
    sub_1D65C(v30, v32);
    v18 = v31;
    sub_1D65C(v32, v33);
    sub_1D65C(v33, &v31);
    v19 = sub_36BA4(v18, *((uint64_t *)&v18 + 1));
    v20 = v19;
    if ((v21 & 1) != 0)
    {
      v8 = v3[6] + 16 * v19;
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      *(_OWORD *)v8 = v18;
      v9 = (_QWORD *)(v3[7] + 32 * v20);
      __swift_destroy_boxed_opaque_existential_0(v9);
      sub_1D65C(&v31, v9);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v19;
    *(_OWORD *)(v3[6] + 16 * v19) = v18;
    sub_1D65C(&v31, (_OWORD *)(v3[7] + 32 * v19));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_35;
    v3[2] = v24;
LABEL_8:
    v7 = v12;
    v6 = v10;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_F8CE8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v30[32];
  _QWORD v31[2];
  _BYTE v32[32];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_3D62C0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v27 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = (v6 - 1) & v6;
      v10 = __clz(__rbit64(v6)) | (v7 << 6);
      v11 = v7;
    }
    else
    {
      v12 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v12 >= v26)
      {
LABEL_33:
        sub_F9918(a1);
        return;
      }
      v13 = *(_QWORD *)(v27 + 8 * v12);
      v11 = v7 + 1;
      if (!v13)
      {
        v11 = v7 + 2;
        if (v7 + 2 >= v26)
          goto LABEL_33;
        v13 = *(_QWORD *)(v27 + 8 * v11);
        if (!v13)
        {
          v11 = v7 + 3;
          if (v7 + 3 >= v26)
            goto LABEL_33;
          v13 = *(_QWORD *)(v27 + 8 * v11);
          if (!v13)
          {
            v11 = v7 + 4;
            if (v7 + 4 >= v26)
              goto LABEL_33;
            v13 = *(_QWORD *)(v27 + 8 * v11);
            if (!v13)
            {
              v14 = v7 + 5;
              if (v7 + 5 >= v26)
                goto LABEL_33;
              v13 = *(_QWORD *)(v27 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v11 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_37;
                  if (v11 >= v26)
                    goto LABEL_33;
                  v13 = *(_QWORD *)(v27 + 8 * v11);
                  ++v14;
                  if (v13)
                    goto LABEL_26;
                }
              }
              v11 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v9 = (v13 - 1) & v13;
      v10 = __clz(__rbit64(v13)) + (v11 << 6);
    }
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v32);
    v31[0] = v17;
    v31[1] = v16;
    sub_1D66C((uint64_t)v32, (uint64_t)v30);
    swift_bridgeObjectRetain_n(v16, 2);
    sub_D1D4((uint64_t)v31, &qword_3D62C8);
    if (!swift_dynamicCast(&v28, v30, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))
    {
      v28 = 0;
      v29 = 1;
      swift_bridgeObjectRelease(v16);
      sub_F9918(a1);
      swift_release(v3);
      return;
    }
    v18 = v28;
    v19 = sub_36BA4(v17, v16);
    v20 = v19;
    if ((v21 & 1) != 0)
    {
      v8 = (uint64_t *)(v3[6] + 16 * v19);
      swift_bridgeObjectRelease(v8[1]);
      *v8 = v17;
      v8[1] = v16;
      *(_QWORD *)(v3[7] + 8 * v20) = v18;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v19;
    v22 = (uint64_t *)(v3[6] + 16 * v19);
    *v22 = v17;
    v22[1] = v16;
    *(_QWORD *)(v3[7] + 8 * v19) = v18;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_35;
    v3[2] = v25;
LABEL_8:
    v7 = v11;
    v6 = v9;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_F9024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE v35[32];

  v3 = type metadata accessor for MetricsData(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController);
  if (v8)
  {
    v32 = v5;
    v9 = *(_QWORD *)(a1 + 16);
    swift_retain(v8);
    if (v9
      && (v10 = sub_36BA4(0x7954746567726174, 0xEA00000000006570), (v11 & 1) != 0)
      && (sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v35),
          swift_dynamicCast(&v33, v35, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
    {
      v30 = v33;
      v31 = v34;
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_11;
    }
    else
    {
      v30 = 0x72656E6E6162;
      v31 = 0xE600000000000000;
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_11;
    }
    v12 = sub_36BA4(0x6449746567726174, 0xE800000000000000);
    if ((v13 & 1) != 0)
    {
      sub_1D66C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v35);
      if (swift_dynamicCast(&v33, v35, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v15 = v33;
        v14 = v34;
LABEL_12:
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6230);
        v17 = type metadata accessor for MetricsFieldInclusionRequest(0);
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(_QWORD *)(v18 + 72);
        v20 = *(unsigned __int8 *)(v18 + 80);
        v21 = (v20 + 32) & ~v20;
        v22 = swift_allocObject(v16, v21 + v19, v20 | 7);
        *(_OWORD *)(v22 + 16) = xmmword_2F03C0;
        static MetricsFieldInclusionRequest.pageFields.getter();
        v23 = sub_F3C58(v22);
        swift_setDeallocating(v22, v24);
        swift_arrayDestroy(v22 + v21, 1, v17);
        swift_deallocClassInstance(v22, 32, 7);
        v25 = type metadata accessor for ClickMetricsEvent(0);
        swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
        v26 = swift_bridgeObjectRetain(a1);
        v27 = ClickMetricsEvent.init(actionResult:eligibilityType:isFamily:isStudent:targetTypeRaw:targetId:including:eventFields:)(0, 0, 0, 0, 2, 2, v30, v31, v26, v15, v14, v23, a1);
        dispatch thunk of MetricsEvent.metricsData.getter(v27);
        MetricsController.process(_:)(v7);
        swift_release(v8);
        v28 = swift_release(v27);
        (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v7, v32, v28);
        return;
      }
    }
LABEL_11:
    v15 = 0;
    v14 = 0xE000000000000000;
    goto LABEL_12;
  }
}

uint64_t sub_F9384(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D61E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F5F10);
}

uint64_t sub_F93B0(uint64_t a1, uint64_t a2)
{
  return sub_239FC((unint64_t *)&unk_3D61F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F5F68);
}

uint64_t sub_F93DC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5BF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F5FF0);
}

uint64_t sub_F9408(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D6200, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F5FC8);
}

uint64_t sub_F9434(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D6208, a2, (uint64_t (*)(uint64_t))type metadata accessor for AMSBannerCell, (uint64_t)&unk_2F6020);
}

unint64_t sub_F9464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6210;
  if (!qword_3D6210)
  {
    v1 = sub_E710(255, &qword_3D6218, AMSDialogRequest_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for AMSDialogRequest, v1);
    atomic_store(result, (unint64_t *)&qword_3D6210);
  }
  return result;
}

double sub_F94BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  void *v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[32];

  v4 = v3;
  v8 = type metadata accessor for MetricsEventType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MetricsData(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F8918(a1);
  if (v16)
  {
    v18 = v16;
    if (a3)
    {
      v51 = a2;
      v52 = a3;
    }
    else
    {
      v51 = static MetricsData.defaultEventTopic.getter();
      v52 = v19;
    }
    v20 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRetain(a3);
    if (v20)
    {
      v21 = sub_36BA4(0x707954746E657665, 0xE900000000000065);
      if ((v22 & 1) != 0)
      {
        sub_1D66C(*(_QWORD *)(v18 + 56) + 32 * v21, (uint64_t)v55);
        if ((swift_dynamicCast(&v53, v55, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v23 = v54;
          if (v53 == 0x6973736572706D69 && v54 == 0xEB00000000736E6FLL)
          {
            v24 = swift_bridgeObjectRelease(0xEB00000000736E6FLL);
            goto LABEL_12;
          }
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, 0x6973736572706D69, 0xEB00000000736E6FLL, 0);
          v24 = swift_bridgeObjectRelease(v23);
          if ((v25 & 1) != 0)
          {
LABEL_12:
            v26 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController);
            if (v26)
            {
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v9 + 104))(v11, enum case for MetricsEventType.impressions(_:), v8, v24);
              swift_retain(v26);
              v27 = swift_bridgeObjectRetain(v18);
              v28 = MetricsEventType.includingFields.getter(v27);
              (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
              v29 = v52;
              v30 = swift_bridgeObjectRetain(v52);
              MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)(v51, v29, 0, v18, v28, &_swiftEmptySetSingleton, v30);
              MetricsController.process(_:)(v15);
              v31 = v26;
LABEL_25:
              v49 = swift_release(v31);
              (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v49);
              v50 = v29;
LABEL_27:
              swift_bridgeObjectRelease(v50);
              goto LABEL_28;
            }
            goto LABEL_26;
          }
        }
      }
    }
    if (*(_QWORD *)(v18 + 16))
    {
      v32 = sub_36BA4(0x707954746E657665, 0xE900000000000065);
      if ((v33 & 1) != 0)
      {
        sub_1D66C(*(_QWORD *)(v18 + 56) + 32 * v32, (uint64_t)v55);
        if ((swift_dynamicCast(&v53, v55, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v34 = v54;
          if (v53 == 0x6B63696C63 && v54 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease(v52);
            v35 = 0xE500000000000000;
LABEL_22:
            swift_bridgeObjectRelease(v35);
            sub_F9024(v18);
LABEL_28:
            *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
            return result;
          }
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, 0x6B63696C63, 0xE500000000000000, 0);
          swift_bridgeObjectRelease(v34);
          if ((v36 & 1) != 0)
          {
            v35 = v52;
            goto LABEL_22;
          }
        }
      }
    }
    v37 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23ShelfKitCollectionViews13AMSBannerCell_metricsController);
    if (v37)
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6230);
      v39 = type metadata accessor for MetricsFieldInclusionRequest(0);
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(_QWORD *)(v40 + 72);
      v42 = *(unsigned __int8 *)(v40 + 80);
      v43 = (v42 + 32) & ~v42;
      v44 = swift_allocObject(v38, v43 + v41, v42 | 7);
      *(_OWORD *)(v44 + 16) = xmmword_2F03C0;
      swift_bridgeObjectRetain(v18);
      v45 = swift_retain(v37);
      static MetricsFieldInclusionRequest.pageFields.getter(v45);
      v46 = sub_F3C58(v44);
      swift_setDeallocating(v44, v47);
      swift_arrayDestroy(v44 + v43, 1, v39);
      swift_deallocClassInstance(v44, 32, 7);
      v29 = v52;
      v48 = swift_bridgeObjectRetain(v52);
      MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)(v51, v29, 0, v18, v46, &_swiftEmptySetSingleton, v48);
      MetricsController.process(_:)(v15);
      v31 = v37;
      goto LABEL_25;
    }
LABEL_26:
    v50 = v52;
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_F9918(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_F9920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;

  v1 = type metadata accessor for TipType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v9);

  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_F99D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for TipType(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_3D6274, v14);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C9738;
  return sub_F7788(a1, v8, v9, v10, v11, v12, v13);
}

unint64_t sub_F9AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D62B8;
  if (!qword_3D62B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D62B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Promise<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D62B8);
  }
  return result;
}

void sub_F9AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter);
    swift_retain(v5);

    if (v5)
    {
      dispatch thunk of DownloadButtonPresenter.performPrimaryAction()();
      swift_release(v5);
    }
  }
}

char *sub_F9B60(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  void *v28;
  id v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a2;
  v50 = a4;
  v47 = a1;
  v5 = a3 & 1;
  v48 = type metadata accessor for DownloadButtonPresenter.Data(0);
  v6 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Glyph(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DownloadButton.Style(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_FB13C(a1, (uint64_t)v18);
  v19 = objc_allocWithZone((Class)type metadata accessor for DownloadButton(0));
  v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_episodeCellState] = 3;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView] = 0;
  v20 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState];
  *(_QWORD *)v20 = 0;
  *((_WORD *)v20 + 4) = 256;
  v21 = &v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle];
  sub_FB13C((uint64_t)v18, (uint64_t)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle]);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v21, v12);
  v22 = type metadata accessor for Glyph.Color(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v15, (uint64_t)v11, 0, 0, v5, 0.0, 0.0, 0.0, 0.0);
  v24 = v23;
  sub_43740();
  v25 = swift_allocObject(&unk_381CC0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v24);
  v26 = v24;
  v28 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v27, 0, 0, 0, sub_FB1A4, v25);
  objc_msgSend(v26, "addAction:forControlEvents:", v28, 0x2000);

  v29 = v26;
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setAccessibilityIdentifier:", v30);

  sub_FB1AC((uint64_t)v18);
  v32 = v48;
  v31 = v49;
  v33.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v49, v48);
  v34 = type metadata accessor for DownloadButtonPresenter(0, v33);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = v29;
  v36 = v50;
  v37 = swift_retain(v50);
  v38 = v8;
  v39 = v36;
  v40 = DownloadButtonPresenter.init(data:graph:)(v38, v36, v37);
  v41 = sub_FB0F4();
  v42 = (char *)v35;
  dispatch thunk of DownloadButtonPresenter.view.setter(v24, v41, v43);
  v44 = swift_release(v39);
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v31, v32, v44);
  sub_FB1AC(v47);
  v45 = *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter];
  *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter] = v40;

  swift_release(v45);
  return v42;
}

void sub_F9FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  id *v4;
  double v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  __int128 *v13;
  char v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void *v25;
  char *v26;
  id *v27;
  double v28;
  id v29;
  char *v30;
  id v31;
  char v32[24];
  __int128 v33;
  char v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState + 9) & 1) != 0)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView) = 0;

    v4 = (id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
    *(_QWORD *)&v5 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, &v33, 1, 0).n128_u64[0];
    if (*v4)
    {
      objc_msgSend(*v4, "removeFromSuperview", v5);
      v6 = *v4;
    }
    else
    {
      v6 = 0;
    }
    *v4 = 0;

    sub_1E47E0();
  }
  else
  {
    v7 = *v2;
    v8 = *((_BYTE *)v2 + 8);
    v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView;
    v10 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView);
    if (v10)
    {
      v11 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView);
    }
    else
    {
      v12 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle;
      v13 = (__int128 *)(v12 + *(int *)(type metadata accessor for DownloadButton.Style(0) + 20));
      v14 = *((_BYTE *)v13 + 16);
      v15 = *((_BYTE *)v13 + 56);
      v16 = *((_QWORD *)v13 + 8);
      v17 = (void *)*((_QWORD *)v13 + 9);
      v18 = (void *)*((_QWORD *)v13 + 10);
      v19 = (void *)*((_QWORD *)v13 + 11);
      v33 = *v13;
      v34 = v14;
      v35 = *(__int128 *)((char *)v13 + 24);
      v36 = *(__int128 *)((char *)v13 + 40);
      v37 = v15;
      v38 = v16;
      v39 = v17;
      v40 = v18;
      v41 = v19;
      v20 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
      v21 = v19;
      v22 = v17;
      v23 = v18;
      v24 = CircularProgressView.init(style:)((uint64_t *)&v33);
      objc_msgSend(v24, "setUserInteractionEnabled:", 0);
      v25 = *(void **)(v1 + v9);
      *(_QWORD *)(v1 + v9) = v24;
      v26 = v24;

      v27 = (id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay);
      *(_QWORD *)&v28 = swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_customOverlay, &v33, 1, 0).n128_u64[0];
      if (*v27)
      {
        objc_msgSend(*v27, "removeFromSuperview", v28);
        v29 = *v27;
      }
      else
      {
        v29 = 0;
      }
      *v27 = v24;
      v11 = v26;

      sub_1E47E0();
      v10 = 0;
    }
    v30 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState];
    swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_progressState], v32, 1, 0);
    *(_QWORD *)v30 = v7;
    v30[8] = v8 & 1;
    v31 = v10;
    sub_153CC8();

  }
}

void sub_FA1D8(_BYTE *a1)
{
  char *v1;
  int v2;
  id v3;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  char v8[24];

  v2 = *a1;
  if (!*a1)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
LABEL_5:
    v4 = v3;
    objc_msgSend(v1, "setTintColor:", v4);

    goto LABEL_9;
  }
  if (qword_3CEFE8 != -1)
    swift_once(&qword_3CEFE8, sub_DF80);
  objc_msgSend(v1, "setTintColor:", qword_3D0890);
LABEL_9:
  v5 = *(char **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressView];
  if (v5)
  {
    v6 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState];
    swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews20CircularProgressView_episodeCellState], v8, 1, 0);
    *v6 = v2;
    v7 = v5;
    sub_15370C();

  }
}

void sub_FA2F8()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.DownloadButton", 38, "init(frame:glyph:color:style:layout:autolayoutMode:)", 52, 0);
  __break(1u);
}

void sub_FA324()
{
  uint64_t v0;

  sub_FB1AC(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter));

}

id sub_FA360()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_FA3DC()
{
  return type metadata accessor for DownloadButton(0);
}

uint64_t type metadata accessor for DownloadButton(uint64_t a1)
{
  return sub_AE00(a1, (uint64_t *)&unk_3D6308, (uint64_t)&nominal type descriptor for DownloadButton);
}

uint64_t sub_FA3F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for DownloadButton.Style(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2F60F8;
    v4[2] = &unk_2F6110;
    v4[3] = &unk_2F6110;
    v4[4] = &unk_2F6128;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 880);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DownloadButton.Style(uint64_t a1)
{
  return sub_AE00(a1, qword_3D6370, (uint64_t)&nominal type descriptor for DownloadButton.Style);
}

void sub_FA498(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[24];

  v5 = type metadata accessor for Glyph(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        a1 = 0;
        v11 = 0;
        v12 = 0;
        v10 = 1;
        goto LABEL_9;
      }
      v13 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle;
      v14 = type metadata accessor for DownloadButton.Style(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v9, v13 + *(int *)(v14 + 24), v5);
      sub_1E2B60(v9);
      a1 = 0;
      v10 = 0;
      v12 = *(_BYTE *)(v13 + *(int *)(v14 + 28));
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_downloadButtonStyle, v5, v7);
      sub_1E2B60(v9);
      v10 = 0;
      v12 = 0;
    }
    v11 = 1;
    goto LABEL_9;
  }
  v10 = 0;
  v11 = 0;
  v12 = 0;
LABEL_9:
  v15 = (_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active);
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_active, v18, 1, 0);
  *v15 = v12;
  sub_1E2494();
  v16 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_progressState;
  *(_QWORD *)v16 = a1;
  *(_BYTE *)(v16 + 8) = v10;
  *(_BYTE *)(v16 + 9) = v11;
  sub_F9FAC();
}

void sub_FA608(uint64_t a1, char a2)
{
  sub_FA498(a1, a2 & 1);
}

uint64_t sub_FA61C()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char v4;
  char v5;
  id v6;
  unint64_t v7;
  const char *v8;
  id v9;
  uint64_t countAndFlagsBits;
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v16;
  objc_super v17;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter];
  if (v1)
  {
    v2 = swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter]);
    v3 = dispatch thunk of DownloadButtonPresenter.currentState.getter(v2);
    v5 = v4;
    swift_release(v1);
    if ((v5 & 1) == 0)
      goto LABEL_5;
    if (!v3)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v16 = 0xE000000000000000;
      v12 = 0x800000000030D400;
      v7 = 0xD000000000000012;
LABEL_12:
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      v14 = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v6, v13, *(Swift::String *)(&v16 - 1))._countAndFlagsBits;
      goto LABEL_13;
    }
    if (v3 != 1)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0xD000000000000014;
      v16 = 0xE000000000000000;
      v8 = "AX_DOWNLOADED_BUTTON";
    }
    else
    {
LABEL_5:
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0xD000000000000015;
      v16 = 0xE000000000000000;
      v8 = "AX_DOWNLOADING_BUTTON";
    }
    v12 = (unint64_t)(v8 - 32) | 0x8000000000000000;
    goto LABEL_12;
  }
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for DownloadButton(0);
  v9 = objc_msgSendSuper2(&v17, "accessibilityLabel");
  if (v9)
  {
    v6 = v9;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
LABEL_13:
    v11 = countAndFlagsBits;

    return v11;
  }
  return 0;
}

id sub_FA7E0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_FA848()
{
  char *v0;
  void *v1;
  uint64_t v2;
  __n128 v3;
  double v4;
  char v5;
  char v6;
  float v7;
  id v8;
  uint64_t v9;
  void *v10;
  objc_super v12;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter];
  if (!v2
    || (v3 = swift_retain(v2),
        v4 = COERCE_DOUBLE(dispatch thunk of DownloadButtonPresenter.currentState.getter(v3)),
        v6 = v5,
        swift_release(v2),
        (v6 & 1) != 0))
  {
    v12.receiver = v1;
    v12.super_class = (Class)type metadata accessor for DownloadButton(0);
    v8 = objc_msgSendSuper2(&v12, "accessibilityValue");
    if (!v8)
      return 0;
LABEL_6:
    v10 = v8;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

    return v9;
  }
  v7 = v4;
  v8 = (id)UIAXFormatFloatWithPercentage(0, v7);
  if (v8)
    goto LABEL_6;
  return 0;
}

void sub_FA91C(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  objc_super v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = a1;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = a1;
    v9 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for DownloadButton(0);
  objc_msgSendSuper2(&v11, *a4, v9);

}

char *sub_FA9AC(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for Glyph(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    *(_OWORD *)(v11 + 24) = *(_OWORD *)(v12 + 24);
    *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
    v11[56] = v12[56];
    v13 = (void *)*((_QWORD *)v12 + 9);
    *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
    *((_QWORD *)v11 + 9) = v13;
    v14 = (void *)*((_QWORD *)v12 + 10);
    v15 = (void *)*((_QWORD *)v12 + 11);
    *((_QWORD *)v11 + 10) = v14;
    *((_QWORD *)v11 + 11) = v15;
    v16 = &a1[v10];
    v17 = &a2[v10];
    v18 = v13;
    v19 = v14;
    v20 = v15;
    v8(v16, v17, v7);
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t sub_FAAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = (id *)(a1 + *(int *)(a2 + 20));

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_FAB40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  *(_BYTE *)(v10 + 56) = *(_BYTE *)(v11 + 56);
  v12 = *(void **)(v11 + 72);
  *(_QWORD *)(v10 + 64) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v10 + 72) = v12;
  v13 = *(void **)(v11 + 80);
  v14 = *(void **)(v11 + 88);
  *(_QWORD *)(v10 + 80) = v13;
  *(_QWORD *)(v10 + 88) = v14;
  v15 = a1 + v9;
  v16 = a2 + v9;
  v17 = v12;
  v18 = v13;
  v19 = v14;
  v7(v15, v16, v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_FAC20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(a2 + v8 + 16);
  *(_OWORD *)v9 = v11;
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(a2 + v8 + 24);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(a2 + v8 + 32);
  v12 = *(_OWORD *)(a2 + v8 + 40);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(a2 + v8 + 56);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a2 + v8 + 64);
  v13 = *(void **)(a1 + v8 + 72);
  v14 = *(void **)(a2 + v8 + 72);
  *(_QWORD *)(v9 + 72) = v14;
  v15 = v14;

  v16 = *(void **)(v9 + 80);
  v17 = *(void **)(v10 + 80);
  *(_QWORD *)(v9 + 80) = v17;
  v18 = v17;

  v19 = *(void **)(v9 + 88);
  v20 = *(void **)(v10 + 88);
  *(_QWORD *)(v9 + 88) = v20;
  v21 = v20;

  v7(a1 + a3[6], a2 + a3[6], v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_FAD24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[3];
  v10[2] = v11[2];
  v10[3] = v12;
  v13 = v11[5];
  v10[4] = v11[4];
  v10[5] = v13;
  v14 = v11[1];
  *v10 = *v11;
  v10[1] = v14;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_FADC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  void *v13;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = (_QWORD *)(a2 + v8);
  *(_OWORD *)v9 = *(_OWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(a2 + v8 + 16);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(a2 + v8 + 40);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(a2 + v8 + 56);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a2 + v8 + 64);
  v11 = *(void **)(a1 + v8 + 72);
  *(_QWORD *)(v9 + 72) = v10[9];

  v12 = *(void **)(v9 + 80);
  *(_QWORD *)(v9 + 80) = v10[10];

  v13 = *(void **)(v9 + 88);
  *(_QWORD *)(v9 + 88) = v10[11];

  v7(a1 + a3[6], a2 + a3[6], v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_FAEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FAEBC);
}

uint64_t sub_FAEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Glyph(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 72);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_FAF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FAF54);
}

uint64_t sub_FAF54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Glyph(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 72) = a2;
  return result;
}

uint64_t sub_FAFD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Glyph(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[2] = v4[0];
    v4[3] = &unk_2F6160;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

double sub_FB04C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  __n128 v11;

  v2 = v1;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews14DownloadButton_presenter];
  if (v5)
  {
    v6 = swift_retain(v5);
    dispatch thunk of DownloadButtonPresenter.view.setter(0, 0, v6);
    swift_release(v5);
    v5 = *(_QWORD *)&v2[v4];
  }
  *(_QWORD *)&v2[v4] = a1;
  swift_retain(a1);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  v8 = *(_QWORD *)&v2[v4];
  if (v8)
  {
    v9 = sub_FB0F4();
    swift_retain(v8);
    v10 = v2;
    dispatch thunk of DownloadButtonPresenter.view.setter(v2, v9, v11);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

unint64_t sub_FB0F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D63B0;
  if (!qword_3D63B0)
  {
    v1 = type metadata accessor for DownloadButton(255);
    result = swift_getWitnessTable(&unk_2F6178, v1);
    atomic_store(result, (unint64_t *)&qword_3D63B0);
  }
  return result;
}

uint64_t sub_FB13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DownloadButton.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FB180()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_FB1A4(uint64_t a1)
{
  uint64_t v1;

  sub_F9AF0(a1, v1);
}

uint64_t sub_FB1AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadButton.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_FB1E8(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  double v21;
  char v22;
  id v23;
  double MaxY;
  double v25;
  double v26;
  _BYTE v28[11];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[21];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  CGRect v44;

  v11 = *(void **)v5;
  v40 = *(_OWORD *)(v5 + 72);
  v41 = *(_OWORD *)(v5 + 88);
  v42 = *(_OWORD *)(v5 + 104);
  v43 = *(_QWORD *)(v5 + 120);
  v36 = *(_OWORD *)(v5 + 8);
  v37 = *(_OWORD *)(v5 + 24);
  v38 = *(_OWORD *)(v5 + 40);
  v39 = *(_OWORD *)(v5 + 56);
  *(_QWORD *)&v35[13] = *(_QWORD *)(v5 + 245);
  v34 = *(_OWORD *)(v5 + 216);
  *(_OWORD *)v35 = *(_OWORD *)(v5 + 232);
  v32 = *(_OWORD *)(v5 + 184);
  v33 = *(_OWORD *)(v5 + 200);
  v30 = *(_OWORD *)(v5 + 152);
  v31 = *(_OWORD *)(v5 + 168);
  v29 = *(_OWORD *)(v5 + 136);
  v12 = *(id *)(v5 + 128);
  v13 = objc_msgSend(v12, "text");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

    swift_bridgeObjectRelease(v17);
    v18 = HIBYTE(v17) & 0xF;
    if ((v17 & 0x2000000000000000) == 0)
      v18 = v15 & 0xFFFFFFFFFFFFLL;
    if (!v18)
      goto LABEL_7;
  }
  v19 = objc_msgSend(v12, "text");
  if (v19)
  {

    v20 = 0;
  }
  else
  {
LABEL_7:
    v20 = 1;
  }
  v21 = sub_FB520(a1);
  v22 = sub_FB9F4(a1, v20, a2, a3, a4, a5, v21);
  *(_QWORD *)v28 = *(_QWORD *)&v35[13];
  v23 = v11;
  objc_msgSend(v23, "frame", v11, v36, v37, v38, v39, v40, v41, v42, v43, v12, v29, v30, v31, v32, v33, v34, *(_QWORD *)v35,
    *(_QWORD *)&v35[8],
    *(_QWORD *)&v28[3]);
  MaxY = CGRectGetMaxY(v44);
  objc_msgSend(v23, "lastBaselineFromBottom");
  v26 = sub_FC440(a1, v22 & 1, a2, a3, a4, a5, MaxY - v25, v21);

  return v26;
}

double sub_FB520(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  id v27;
  double v28;
  double v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (**v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;

  v61 = a1;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v65 = *(void (***)(_QWORD, _QWORD, _QWORD))(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *(void **)v1;
  v57 = *(_QWORD *)(v1 + 136);
  v56 = *(_QWORD *)(v1 + 144);
  LODWORD(v55) = *(unsigned __int8 *)(v1 + 152);
  v6 = *(void **)(v1 + 160);
  v5 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  v9 = *(_QWORD *)(v1 + 192);
  v10 = *(_QWORD *)(v1 + 200);
  v11 = *(void **)(v1 + 208);
  v12 = *(_QWORD *)(v1 + 216);
  v13 = *(_QWORD *)(v1 + 224);
  v14 = *(_QWORD *)(v1 + 232);
  v15 = *(_QWORD *)(v1 + 240);
  v16 = *(unsigned __int16 *)(v1 + 248);
  v58 = *(unsigned __int8 *)(v1 + 252);
  v17 = v6;
  LODWORD(v59) = v16;
  v62 = v15;
  v63 = v14;
  v64 = v13;
  v18 = v5;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v23 = v11;
  v24 = v12;
  sub_1472C(v6, v5, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v25 = __swift_project_value_buffer(v2, (uint64_t)qword_3FCFB0);
  v53 = v2;
  ((void (**)(char *, uint64_t, uint64_t))v65)[2](v4, v25, v2);
  v66 = v57;
  v67 = v56;
  LOBYTE(v68) = v55;
  v69 = (uint64_t)v17;
  v70 = v18;
  v71 = v19;
  *(_QWORD *)&v72 = v20;
  *((_QWORD *)&v72 + 1) = v21;
  v73 = v22;
  v52 = v22;
  v74 = (uint64_t)v23;
  v75 = v24;
  v54 = v24;
  v76 = v64;
  v77 = v63;
  v78 = v62;
  v26 = v59;
  v79 = v59;
  v27 = objc_msgSend(v61, "traitCollection");
  sub_1DD06C((uint64_t)v27, (uint64_t)v4, v58);
  v29 = v28;

  ((void (*)(char *, uint64_t))v65[1])(v4, v53);
  sub_14788(v17, v18, v19, v20, v21, v52, v23, v54, v64, v63, v62, v26);
  v30 = objc_msgSend(v60, "font");
  if (!v30)
  {
    v31 = v61;
    if (qword_3CF4A0 != -1)
      swift_once(&qword_3CF4A0, sub_13FBA0);
    v33 = qword_3FB370;
    v32 = *(_QWORD *)algn_3FB378;
    v35 = qword_3FB380;
    v34 = qword_3FB388;
    v37 = qword_3FB390;
    v36 = qword_3FB398;
    v38 = xmmword_3FB3A0;
    v39 = qword_3FB3B0;
    v55 = unk_3FB3B8;
    v56 = qword_3FB3C0;
    LODWORD(v57) = byte_3FB3C8;
    v58 = byte_3FB3C9;
    v64 = *(_QWORD *)algn_3FB378;
    v65 = (void (**)(_QWORD, _QWORD, _QWORD))qword_3FB370;
    v63 = qword_3FB380;
    v62 = qword_3FB398;
    v59 = *((_QWORD *)&xmmword_3FB3A0 + 1);
    v60 = (void *)xmmword_3FB3A0;
    sub_DDA0((void *)qword_3FB370, *(uint64_t *)algn_3FB378, qword_3FB380, qword_3FB388, qword_3FB390, qword_3FB398, (void *)xmmword_3FB3A0, *((uint64_t *)&xmmword_3FB3A0 + 1), qword_3FB3B0, unk_3FB3B8, qword_3FB3C0, byte_3FB3C8, byte_3FB3C9);
    v40 = objc_msgSend(v31, "traitCollection");
    v66 = v33;
    v67 = v32;
    v68 = v35;
    v69 = v34;
    v41 = v34;
    v70 = v37;
    v71 = v36;
    v72 = v38;
    v42 = v55;
    v73 = v39;
    v74 = v55;
    v43 = v56;
    v75 = v56;
    v44 = v57;
    LOBYTE(v76) = v57;
    v45 = v58;
    BYTE1(v76) = v58;
    v46 = sub_1D5728((uint64_t)&v66, v40);
    v30 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v46, 0.0);

    sub_DCC8(v65, v64, v63, v41, v37, v62, v60, v59, v39, v42, v43, v44, v45);
  }
  objc_msgSend(v30, "lineHeight");
  v48 = v47;
  objc_msgSend(v30, "leading");
  v50 = v49;

  return v29 - v48 - v50;
}

uint64_t sub_FB9F4(void *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  __int128 *v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  unsigned __int16 v42;
  id v43;
  id v44;
  double v45;
  double v46;
  void (*v47)(uint64_t, uint64_t);
  unsigned __int16 v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  double v58;
  double v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  id v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  char **v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int16 v85;
  id v86;
  double v87;
  id v88;
  double v89;
  double v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  double v97;
  double v98;
  double v99;
  double MinX;
  double v101;
  unsigned __int16 v103;
  uint64_t v104;
  id v105;
  double v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void *v124;
  id v125;
  void (*v126)(uint64_t, uint64_t);
  int v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  unsigned __int16 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[3];
  CGRect v155;
  CGRect v156;
  CGRect v157;

  v15 = type metadata accessor for FloatingPointRoundingRule(0);
  v126 = *(void (**)(uint64_t, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v7[12];
  v19 = v7[14];
  v153 = v7[13];
  v154[0] = v19;
  *(_OWORD *)((char *)v154 + 12) = *(__int128 *)((char *)v7 + 236);
  v20 = v7[8];
  v21 = v7[10];
  v22 = v7[11];
  v149 = v7[9];
  v150 = v21;
  v151 = v22;
  v152 = v18;
  v23 = v7[4];
  v24 = v7[6];
  v25 = v7[7];
  v145 = v7[5];
  v146 = v24;
  v147 = v25;
  v148 = v20;
  v26 = v7[1];
  v140 = *v7;
  v27 = v7[2];
  v28 = v7[3];
  v141 = v26;
  v142 = v27;
  v143 = v28;
  v144 = v23;
  v127 = *((unsigned __int8 *)v7 + 252);
  sub_FC818((uint64_t)&v140);
  sub_147CC((uint64_t)&v148);
  v29 = (id)v140;
  v30 = v29;
  v125 = v29;
  v128 = a1;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v29, "setNumberOfLines:", 2);
    objc_msgSend(v30, "sizeThatFits:", a5, a6);
    v106 = v31;
    v33 = v32;
    objc_msgSend(v30, "lastBaselineFromBottom");
    v35 = v33 - v34;
    v115 = *((_QWORD *)&v140 + 1);
    v116 = v141;
    LODWORD(v117) = BYTE8(v141);
    v36 = v142;
    v37 = v144;
    v38 = v145;
    v107 = WORD4(v147);
    v113 = v147;
    v114 = (id)*((_QWORD *)&v146 + 1);
    v119 = v146;
    v121 = *((_QWORD *)&v143 + 1);
    v39 = v143;
    sub_1472C((id)v142, *((uint64_t *)&v142 + 1), v143, *((uint64_t *)&v143 + 1), v144, SBYTE8(v144), (void *)v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147, WORD4(v147));
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v40 = __swift_project_value_buffer(v15, (uint64_t)qword_3FCFB0);
    v41 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v126 + 2);
    v109 = v40;
    v110 = v41;
    ((void (*)(char *))v41)(v17);
    v129 = v115;
    v130 = v116;
    v131 = v117;
    v132 = v36;
    v108 = v39;
    *(_QWORD *)&v133 = v39;
    *((_QWORD *)&v133 + 1) = v121;
    v134 = v37;
    v135 = v38;
    v136 = v119;
    v137 = v114;
    v138 = v113;
    v42 = v107;
    v139 = v107;
    v43 = objc_msgSend(v128, "traitCollection");
    v122 = (void *)*((_QWORD *)&v36 + 1);
    v123 = v15;
    v44 = v43;
    v120 = (void *)*((_QWORD *)&v38 + 1);
    v124 = (void *)v38;
    sub_1DD06C((uint64_t)v43, (uint64_t)v17, v127);
    v46 = v45;

    v47 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v126 + 1);
    v112 = v17;
    v126 = v47;
    v47((uint64_t)v17, v123);
    v48 = v42;
    v103 = v42;
    v49 = v113;
    v50 = v114;
    v51 = v119;
    v52 = v121;
    v53 = v108;
    v118 = *((_QWORD *)&v37 + 1);
    v111 = v37;
    sub_14788((id)v36, (uint64_t)v122, v108, v121, v37, SBYTE8(v37), v124, (uint64_t)v120, v119, (uint64_t)v114, v113, v103);
    if (v46 < v35)
    {
      v110(v112, v109, v123);
      v129 = v115;
      v130 = v116;
      v131 = v117;
      *(_QWORD *)&v132 = v36;
      *((_QWORD *)&v132 + 1) = v122;
      *(_QWORD *)&v133 = v53;
      *((_QWORD *)&v133 + 1) = v52;
      *(_QWORD *)&v134 = v111;
      *((_QWORD *)&v134 + 1) = v118;
      *(_QWORD *)&v135 = v124;
      *((_QWORD *)&v135 + 1) = v120;
      v136 = v51;
      v137 = v50;
      v138 = v49;
      v139 = v48;
      sub_1472C((id)v36, (uint64_t)v122, v53, v52, v111, v118, v124, (uint64_t)v120, v51, (uint64_t)v50, v49, v48);
      v54 = objc_msgSend(v128, "traitCollection");
      v55 = v123;
      v56 = v54;
      v57 = (uint64_t)v112;
      sub_1DD06C((uint64_t)v54, (uint64_t)v112, v127);
      v59 = v58;

      v126(v57, v55);
      sub_14788((id)v36, (uint64_t)v122, v108, v121, v111, v118, v124, (uint64_t)v120, v51, (uint64_t)v50, v49, v48);
      v116 = v149;
      v117 = *((_QWORD *)&v148 + 1);
      LODWORD(v115) = BYTE8(v149);
      v60 = v150;
      v61 = v151;
      v62 = v152;
      v63 = v153;
      v124 = *(void **)&v154[0];
      v121 = *(_QWORD *)&v154[1];
      v122 = (void *)*((_QWORD *)&v154[0] + 1);
      LODWORD(v120) = WORD4(v154[1]);
      v110((char *)v57, v109, v55);
      v129 = v117;
      v130 = v116;
      v131 = v115;
      v132 = v60;
      v118 = *((_QWORD *)&v63 + 1);
      v119 = *((_QWORD *)&v60 + 1);
      v133 = v61;
      v134 = v62;
      v135 = v63;
      v136 = (uint64_t)v124;
      v137 = v122;
      v138 = v121;
      v139 = (unsigned __int16)v120;
      sub_1472C((id)v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62, SBYTE8(v62), (void *)v63, *((uint64_t *)&v63 + 1), (uint64_t)v124, (uint64_t)v122, v121, (unsigned __int16)v120);
      v64 = objc_msgSend(v128, "traitCollection");
      v65 = (uint64_t)v112;
      sub_1DD06C((uint64_t)v64, (uint64_t)v112, v127);
      v67 = v66;

      v126(v65, v123);
      sub_14788((id)v60, v119, v61, *((uint64_t *)&v61 + 1), v62, SBYTE8(v62), (void *)v63, v118, (uint64_t)v124, (uint64_t)v122, v121, (unsigned __int16)v120);
      v68 = v59 + v67;
      if ((BYTE10(v147) & 1) != 0)
      {
        v69 = 1;
        v70 = &selRef_accessibilityContextButton;
        if (v106 >= COERCE_DOUBLE(1))
          goto LABEL_7;
LABEL_17:
        v71 = v125;
        goto LABEL_22;
      }
      v69 = 1;
      goto LABEL_20;
    }
    v88 = v125;
    objc_msgSend(v125, "setNumberOfLines:", 1);
    objc_msgSend(v88, "sizeThatFits:", a5, a6);
    v90 = v89;
    v33 = v91;
    v92 = (uint64_t)v112;
    v93 = v123;
    v110(v112, v109, v123);
    v129 = v115;
    v130 = v116;
    v131 = v117;
    v105 = (id)v36;
    *(_QWORD *)&v132 = v36;
    *((_QWORD *)&v132 + 1) = v122;
    *(_QWORD *)&v133 = v53;
    *((_QWORD *)&v133 + 1) = v52;
    *(_QWORD *)&v134 = v111;
    *((_QWORD *)&v134 + 1) = v118;
    v94 = (uint64_t)v120;
    *(_QWORD *)&v135 = v124;
    *((_QWORD *)&v135 + 1) = v120;
    v136 = v51;
    v137 = v50;
    v138 = v49;
    v139 = v48;
    sub_1472C((id)v36, (uint64_t)v122, v53, v52, v111, v118, v124, (uint64_t)v120, v51, (uint64_t)v50, v49, v48);
    v95 = v93;
    v96 = objc_msgSend(v128, "traitCollection");
    sub_1DD06C((uint64_t)v96, v92, v127);
    v68 = v97;

    v126(v92, v95);
    sub_14788(v105, (uint64_t)v122, v53, v121, v111, v118, v124, v94, v119, (uint64_t)v50, v49, v48);
    a7 = 0.0;
    if (BYTE10(v147) == 1)
    {
      v69 = 0;
      v70 = &selRef_accessibilityContextButton;
      if (v90 >= COERCE_DOUBLE(1))
      {
LABEL_7:
        v71 = v125;
        if (v33 < COERCE_DOUBLE(1))
          goto LABEL_22;
        goto LABEL_21;
      }
      goto LABEL_17;
    }
LABEL_18:
    v69 = 0;
LABEL_20:
    v71 = v125;
    v70 = &selRef_accessibilityContextButton;
LABEL_21:
    objc_msgSend(v71, v70[132]);
    v99 = v98 - a7;
    v155.origin.x = a3;
    v155.origin.y = a4;
    v155.size.width = a5;
    v155.size.height = a6;
    MinX = CGRectGetMinX(v155);
    v156.origin.x = a3;
    v156.origin.y = a4;
    v156.size.width = a5;
    v156.size.height = a6;
    v101 = v68 + CGRectGetMinY(v156) - (v33 - v99);
    v157.origin.x = a3;
    v157.origin.y = a4;
    v157.size.width = a5;
    v157.size.height = a6;
    objc_msgSend(v71, "setFrame:", MinX, v101, CGRectGetWidth(v157), v33);
    goto LABEL_22;
  }
  v72 = (uint64_t)v17;
  v73 = v15;
  objc_msgSend(v29, "setNumberOfLines:", 1);
  objc_msgSend(v30, "sizeThatFits:", a5, a6);
  v75 = v74;
  v33 = v76;
  v116 = v141;
  v117 = *((_QWORD *)&v140 + 1);
  LODWORD(v115) = BYTE8(v141);
  LODWORD(v118) = WORD4(v147);
  v119 = v147;
  v120 = (void *)*((_QWORD *)&v146 + 1);
  v121 = v146;
  v77 = v142;
  v78 = v143;
  v79 = v144;
  v122 = (void *)*((_QWORD *)&v145 + 1);
  v124 = (void *)v145;
  sub_1472C((id)v142, *((uint64_t *)&v142 + 1), v143, *((uint64_t *)&v143 + 1), v144, SBYTE8(v144), (void *)v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147, WORD4(v147));
  if (qword_3CFAB0 != -1)
    swift_once(&qword_3CFAB0, sub_1DD388);
  v80 = __swift_project_value_buffer(v15, (uint64_t)qword_3FCFB0);
  v81 = v126;
  (*((void (**)(char *, uint64_t, uint64_t))v126 + 2))(v17, v80, v73);
  v129 = v117;
  v130 = v116;
  v131 = v115;
  v113 = *((_QWORD *)&v77 + 1);
  v114 = (id)v77;
  v132 = v77;
  v110 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)&v78 + 1);
  v111 = v78;
  v133 = v78;
  v108 = *((_QWORD *)&v79 + 1);
  v109 = v79;
  v134 = v79;
  v82 = v121;
  *(_QWORD *)&v135 = v124;
  *((_QWORD *)&v135 + 1) = v122;
  v84 = v119;
  v83 = (uint64_t)v120;
  v136 = v121;
  v137 = v120;
  v138 = v119;
  v85 = v118;
  v139 = v118;
  v86 = objc_msgSend(v128, "traitCollection");
  sub_1DD06C((uint64_t)v86, v72, v127);
  v68 = v87;

  (*((void (**)(uint64_t, uint64_t))v81 + 1))(v72, v73);
  sub_14788(v114, v113, v111, (uint64_t)v110, v109, v108, v124, (uint64_t)v122, v82, v83, v84, v85);
  a7 = 0.0;
  if (BYTE10(v147) != 1)
    goto LABEL_18;
  v69 = 0;
  v71 = v125;
  v70 = &selRef_accessibilityContextButton;
  if (v75 >= COERCE_DOUBLE(1) && v33 >= COERCE_DOUBLE(1))
    goto LABEL_21;
LABEL_22:
  sub_147CC((uint64_t)&v140);

  return v69;
}

double sub_FC440(void *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int v32;
  id v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int16 v47;
  id v48;
  double v49;
  double v50;
  double MinX;
  CGFloat v52;
  double Width;
  id v54;
  double MaxY;
  double v56;
  double v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  int v73;
  id v74;
  id v75;
  uint64_t v76;
  __int128 *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  _OWORD v92[8];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[3];
  CGRect v100;
  CGRect v101;
  CGRect v102;

  v17 = type metadata accessor for FloatingPointRoundingRule(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_OWORD *)(v8 + 192);
  v22 = *(_OWORD *)(v8 + 224);
  v98 = *(_OWORD *)(v8 + 208);
  v99[0] = v22;
  *(_OWORD *)((char *)v99 + 12) = *(_OWORD *)(v8 + 236);
  v23 = *(_OWORD *)(v8 + 128);
  v24 = *(_OWORD *)(v8 + 160);
  v25 = *(_OWORD *)(v8 + 176);
  v94 = *(_OWORD *)(v8 + 144);
  v95 = v24;
  v96 = v25;
  v97 = v21;
  v26 = *(_OWORD *)(v8 + 64);
  v27 = *(_OWORD *)(v8 + 96);
  v28 = *(_OWORD *)(v8 + 112);
  v92[5] = *(_OWORD *)(v8 + 80);
  v92[6] = v27;
  v92[7] = v28;
  v93 = v23;
  v29 = *(_OWORD *)(v8 + 16);
  v92[0] = *(_OWORD *)v8;
  v30 = *(_OWORD *)(v8 + 32);
  v31 = *(_OWORD *)(v8 + 48);
  v92[1] = v29;
  v92[2] = v30;
  v92[3] = v31;
  v92[4] = v26;
  v32 = *(unsigned __int8 *)(v8 + 252);
  sub_FC818((uint64_t)v92);
  sub_147CC((uint64_t)v92);
  v33 = (id)v93;
  objc_msgSend(v33, "sizeThatFits:", a5, a6);
  v36 = v35;
  if (((BYTE10(v99[1]) & 1) != 0 || (a2 & 1) != 0) && (v34 < COERCE_DOUBLE(1) || v35 < COERCE_DOUBLE(1)))
  {
    sub_147CC((uint64_t)&v93);

  }
  else
  {
    v73 = v32;
    v75 = a1;
    v76 = v18;
    v37 = (uint64_t)v20;
    v77 = &v93;
    objc_msgSend(v33, "lastBaselineFromBottom");
    v72 = v38 - a8;
    v74 = v33;
    v66 = v94;
    v67 = *((_QWORD *)&v93 + 1);
    v65 = BYTE8(v94);
    v68 = WORD4(v99[1]);
    v69 = *(_QWORD *)&v99[1];
    v70 = *((_QWORD *)&v99[0] + 1);
    v71 = *(_QWORD *)&v99[0];
    v39 = v95;
    v40 = v96;
    v41 = v97;
    v78 = *((_QWORD *)&v98 + 1);
    v79 = (void *)v98;
    sub_1472C((id)v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97, SBYTE8(v97), (void *)v98, *((uint64_t *)&v98 + 1), *(uint64_t *)&v99[0], *((uint64_t *)&v99[0] + 1), *(uint64_t *)&v99[1], WORD4(v99[1]));
    if (qword_3CFAB0 != -1)
      swift_once(&qword_3CFAB0, sub_1DD388);
    v42 = __swift_project_value_buffer(v17, (uint64_t)qword_3FCFB0);
    v43 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v37, v42, v17);
    v80 = v67;
    v81 = v66;
    v82 = v65;
    v63 = *((_QWORD *)&v39 + 1);
    v64 = (id)v39;
    v83 = v39;
    v61 = *((_QWORD *)&v40 + 1);
    v62 = v40;
    v84 = v40;
    v59 = *((_QWORD *)&v41 + 1);
    v60 = v41;
    v85 = v41;
    v86 = v79;
    v87 = v78;
    v45 = v70;
    v44 = v71;
    v88 = v71;
    v89 = v70;
    v46 = v69;
    v90 = v69;
    v47 = v68;
    v91 = v68;
    v48 = objc_msgSend(v75, "traitCollection");
    sub_1DD06C((uint64_t)v48, v37, v73);
    v50 = v49;

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v37, v17);
    sub_14788(v64, v63, v62, v61, v60, v59, v79, v78, v44, v45, v46, v47);
    v100.origin.x = a3;
    v100.origin.y = a4;
    v100.size.width = a5;
    v100.size.height = a6;
    MinX = CGRectGetMinX(v100);
    v52 = v50 - (v36 - v72) + a7;
    v101.origin.x = a3;
    v101.origin.y = a4;
    v101.size.width = a5;
    v101.size.height = a6;
    Width = CGRectGetWidth(v101);
    v54 = v74;
    objc_msgSend(v74, "setFrame:", MinX, v52, Width, v36);
    v102.origin.x = MinX;
    v102.origin.y = v52;
    v102.size.width = Width;
    v102.size.height = v36;
    MaxY = CGRectGetMaxY(v102);
    objc_msgSend(v54, "lastBaselineFromBottom");
    v57 = v56;

    sub_147CC((uint64_t)v77);
    return MaxY - v57;
  }
  return a7;
}

uint64_t sub_FC818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  unsigned __int16 v10;
  id v11;
  id v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(void **)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v14 = *(_OWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_WORD *)(a1 + 120);
  v19 = *(void **)(a1 + 128);
  v26 = *(_QWORD *)(a1 + 168);
  v27 = *(void **)(a1 + 160);
  v24 = *(_QWORD *)(a1 + 184);
  v25 = *(_QWORD *)(a1 + 176);
  v22 = *(_QWORD *)(a1 + 200);
  v23 = *(_QWORD *)(a1 + 192);
  v20 = *(_QWORD *)(a1 + 216);
  v21 = *(void **)(a1 + 208);
  v15 = *(_OWORD *)(a1 + 224);
  v9 = *(_QWORD *)(a1 + 240);
  v10 = *(_WORD *)(a1 + 248);
  v11 = *(id *)a1;
  sub_1472C(v18, v17, v16, v2, v3, v4, v5, v6, v14, *((uint64_t *)&v14 + 1), v7, v8);
  v12 = v19;
  sub_1472C(v27, v26, v25, v24, v23, v22, v21, v20, v15, *((uint64_t *)&v15 + 1), v9, v10);
  return a1;
}

uint64_t TransitioningDelegateProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t TransitioningDelegateProvider.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

unint64_t sub_FC968()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  objc_class *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  objc_super v27;
  objc_super v28;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6478);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5578);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(_QWORD *)(v5 + 72);
    v7 = *(unsigned __int8 *)(v5 + 80);
    v8 = (v7 + 32) & ~v7;
    v26 = 2 * v6;
    v9 = swift_allocObject(v3, v8 + 3 * v6, v7 | 7);
    *(_OWORD *)(v9 + 16) = xmmword_2F5ED0;
    v10 = v9 + v8;
    v11 = *(int *)(v4 + 48);
    v12 = enum case for FlowPresentationContext.presentModalCard(_:);
    v13 = type metadata accessor for FlowPresentationContext(0);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104);
    v14(v10, v12, v13);
    v15 = (objc_class *)type metadata accessor for CardTransitioningDelegate();
    v16 = (char *)objc_allocWithZone(v15);
    v17 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration];
    *(_OWORD *)v17 = 0u;
    *((_OWORD *)v17 + 1) = 0u;
    *((_WORD *)v17 + 16) = 257;
    *((_QWORD *)v17 + 5) = 0;
    *((_QWORD *)v17 + 6) = 0;
    *(_OWORD *)(v17 + 56) = xmmword_2F61B0;
    v17[72] = 0;
    *((_QWORD *)v17 + 10) = 15;
    v28.receiver = v16;
    v28.super_class = v15;
    *(_QWORD *)(v10 + v11) = objc_msgSendSuper2(&v28, "init");
    v18 = v10 + v6;
    v19 = *(int *)(v4 + 48);
    v14(v18, enum case for FlowPresentationContext.presentCard(_:), v13);
    *(_QWORD *)(v18 + v19) = objc_msgSend(objc_allocWithZone(v15), "init");
    v20 = v10 + v26;
    v21 = *(int *)(v4 + 48);
    v14(v20, enum case for FlowPresentationContext.presentSheet(_:), v13);
    v22 = (char *)objc_allocWithZone(v15);
    v23 = &v22[OBJC_IVAR____TtC23ShelfKitCollectionViews25CardTransitioningDelegate_configuration];
    *(_OWORD *)v23 = 0u;
    *((_OWORD *)v23 + 1) = 0u;
    *((_WORD *)v23 + 16) = 257;
    *((_QWORD *)v23 + 5) = 0;
    *((_QWORD *)v23 + 6) = 0;
    *(_OWORD *)(v23 + 56) = xmmword_2F61C0;
    v23[72] = 1;
    *((_QWORD *)v23 + 10) = 12;
    v27.receiver = v22;
    v27.super_class = v15;
    *(_QWORD *)(v20 + v21) = objc_msgSendSuper2(&v27, "init");
    v2 = sub_D48A8(v9);
    v24 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v24);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

void *sub_FCB94(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  id v6;

  v2 = sub_FC968();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_36CE4(a1), (v4 & 1) != 0))
  {
    v5 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v3);
    v6 = v5;
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRelease(v2);
  return v5;
}

uint64_t TransitioningDelegateProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t TransitioningDelegateProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TransitioningDelegateProvider()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29TransitioningDelegateProvider);
}

uint64_t method lookup function for TransitioningDelegateProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TransitioningDelegateProvider);
}

uint64_t dispatch thunk of TransitioningDelegateProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of TransitioningDelegateProvider.delegateForContext(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void sub_FCD54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  id v27;
  char *v28;
  void *v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_highlightView;
  v3 = (void *)Highlight.sLHighlight.getter(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_highlightView], "removeFromSuperview"));
  v4 = objc_msgSend(objc_allocWithZone((Class)SLAttributionView), "initWithHighlight:", v3);

  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v1, "contentView");
  objc_msgSend(v5, "addSubview:", v4);

  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_2F0A20;
  v9 = objc_msgSend(v4, "topAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "topAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v8 + 32) = v12;
  v13 = objc_msgSend(v4, "bottomAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "bottomAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v8 + 40) = v16;
  v17 = objc_msgSend(v4, "leadingAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "leadingAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
  *(_QWORD *)(v8 + 48) = v20;
  v21 = objc_msgSend(v4, "trailingAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "trailingAnchor");

  v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v23);
  *(_QWORD *)(v8 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_12D34();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v27 = objc_msgSend(v1, "traitCollection");
  v28 = (char *)objc_msgSend(v27, "horizontalSizeClass");

  objc_msgSend(v4, "updateAlignment:", v28 == (_BYTE *)&dword_0 + 1);
  v29 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = v4;

}

uint64_t type metadata accessor for HighlightCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews13HighlightCell);
}

void sub_FD120()
{
  sub_FCD54();
}

uint64_t sub_FD128()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_objectGraph));
}

uint64_t sub_FD138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_objectGraph) = a1;
  swift_release(v3);
  return swift_retain(a1);
}

uint64_t sub_FD16C(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D64D8, v3, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F63B0);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_FD1C4()
{
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, 24.0);
}

uint64_t sub_FD1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D64D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F63B0);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_FD204()
{
  if ((ShelfCellEnvironment.isHorizontallyCompact.getter() & 1) != 0)
    return 0x4030000000000000;
  else
    return 0x4038000000000000;
}

uint64_t sub_FD238(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D64B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F6288);
}

uint64_t sub_FD264(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F6310);
}

uint64_t sub_FD290(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D64C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F62E8);
}

uint64_t sub_FD2BC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D64C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HighlightCell, (uint64_t)&unk_2F6340);
}

uint64_t sub_FD2E8()
{
  return sub_239FC(&qword_3D64D0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Highlight, (uint64_t)&protocol conformance descriptor for Highlight);
}

void sub_FD318()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_highlightView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)SLAttributionView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews13HighlightCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HighlightCell.swift", 43, 2, 33, 0);
  __break(1u);
}

void sub_FD3C8()
{
  qword_3FAD98 = 0x403F000000000000;
}

void sub_FD3D8()
{
  qword_3FADA0 = 0x4026000000000000;
}

char *sub_FD3E8()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  void *v4;
  char *result;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  id v31;
  Swift::String v32;

  v1 = objc_allocWithZone((Class)UIFontMetrics);
  v2 = v0;
  v3 = objc_msgSend(v1, "initForTextStyle:", UIFontTextStyleBody);
  v4 = (void *)objc_opt_self(UIFont);
  if (qword_3CF320 != -1)
    swift_once(&qword_3CF320, sub_FD3D8);
  result = (char *)objc_msgSend(v4, "systemFontOfSize:weight:design:", UIFontSystemFontDesignCompact, *(double *)&qword_3FADA0, UIFontWeightSemibold);
  if (result)
  {
    v6 = result;
    v7 = qword_3D64E0;
    v8 = objc_msgSend(v3, "scaledFontForFont:", result);

    *(_QWORD *)&v2[v7] = v8;
    v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v10 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 13);
    v11 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v10, 1);
    v12 = sub_243A4((uint64_t)v10, (uint64_t)v11);
    v14 = v13;

    *(_QWORD *)&v2[qword_3D5D10] = v9;
    v15 = v9;
    v16 = sub_1DF75C(v9, v12, v14);
    v17 = qword_3D5D10;
    v18 = *(void **)&v16[qword_3D5D10];
    v19 = v16;
    objc_msgSend(v18, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v18, "setFont:", *(_QWORD *)&v19[qword_3D64E0]);
    v20 = (void *)objc_opt_self(NSBundle);
    v21 = v18;
    v22 = objc_msgSend(v20, "mainBundle");
    v32._object = (void *)0xE000000000000000;
    v23._object = (void *)0x800000000030D5B0;
    v23._countAndFlagsBits = 0xD000000000000018;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v32)._object;

    v26 = sub_D254();
    StringProtocol.localizedUppercase.getter(&type metadata for String, v26);
    v28 = v27;
    swift_bridgeObjectRelease(object);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "setText:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

    objc_msgSend(*(id *)&v16[v17], "setTextAlignment:", 1);
    v30 = objc_msgSend(v19, "heightAnchor");
    if (qword_3CF318 != -1)
      swift_once(&qword_3CF318, sub_FD3C8);
    v31 = objc_msgSend(v30, "constraintEqualToConstant:", *(double *)&qword_3FAD98);

    objc_msgSend(v31, "setActive:", 1);
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_FD790()
{
  char v0;
  uint64_t v1;
  id v2;
  id v3;
  _QWORD v5[5];
  _BYTE v6[16];
  double v7;
  char v8;

  UIColor.hsbaComponents.getter(v5);
  sub_FD94C((uint64_t)v5, (uint64_t)v6);
  v0 = v8 | (v7 < 0.25);
  if (v8 & 1 | (v7 < 0.25))
    v1 = 11;
  else
    v1 = 13;
  v2 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v1);
  v3 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v2, (v0 & 1) == 0);
  return v2;
}

void sub_FD84C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_FD994();
}

void sub_FD870()
{
  uint64_t v0;

}

id sub_FD880()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntitlementBadgeView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_FD8B4(uint64_t a1)
{

}

uint64_t type metadata accessor for EntitlementBadgeView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D6510;
  if (!qword_3D6510)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EntitlementBadgeView);
  return result;
}

uint64_t sub_FD900(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 248);
}

uint64_t sub_FD944()
{
  return type metadata accessor for EntitlementBadgeView(0);
}

uint64_t sub_FD94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D3708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_FD994()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  v2 = (void *)objc_opt_self(UIFont);
  if (qword_3CF320 != -1)
    goto LABEL_4;
  while (1)
  {
    v3 = objc_msgSend(v2, "systemFontOfSize:weight:design:", UIFontSystemFontDesignCompact, *(double *)&qword_3FADA0, UIFontWeightSemibold);
    if (v3)
      break;
    __break(1u);
LABEL_4:
    swift_once(&qword_3CF320, sub_FD3D8);
  }
  v4 = v3;
  v5 = qword_3D64E0;
  v6 = objc_msgSend(v1, "scaledFontForFont:", v3);

  *(_QWORD *)&v0[v5] = v6;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/EntitlementBadgeView.swift", 50, 2, 49, 0);
  __break(1u);
}

uint64_t sub_FDAD8@<X0>(uint64_t a1@<X8>)
{
  return sub_FDAEC(a1);
}

uint64_t sub_FDAEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for ArtworkModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_FDB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  __int128 v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v6 = type metadata accessor for ArtworkModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v35 - v20;
  sub_1D66C(a2, (uint64_t)v43);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6680);
  result = swift_dynamicCast(&v40, v43, (char *)&type metadata for Any + 8, v22, 6);
  if ((result & 1) != 0)
  {
    v35 = v12;
    v37 = a3;
    v24 = v40;
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v25(v21, 1, 1, v6);
    v36 = a1;
    sub_D184(a1, (uint64_t)&v40, (uint64_t *)&unk_3D5BA0);
    if (*((_QWORD *)&v41 + 1))
    {
      sub_1B738(&v40, (uint64_t)v43);
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD *, uint64_t, _QWORD))(*((_QWORD *)&v24 + 1) + 24))(v43, ObjectType, *((_QWORD *)&v24 + 1));
      __swift_destroy_boxed_opaque_existential_0(v43);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) == 1)
      {
        sub_D1D4((uint64_t)v18, &qword_3D0A58);
      }
      else
      {
        sub_D1D4((uint64_t)v21, &qword_3D0A58);
        sub_2376C((uint64_t)v18, (uint64_t)v9);
        sub_2376C((uint64_t)v9, (uint64_t)v21);
        v25(v21, 0, 1, v6);
      }
    }
    else
    {
      sub_D1D4((uint64_t)&v40, (uint64_t *)&unk_3D5BA0);
    }
    v27 = v37;
    sub_D184((uint64_t)v21, (uint64_t)v15, &qword_3D0A58);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6);
    sub_D1D4((uint64_t)v15, &qword_3D0A58);
    if (v28 != 1)
      goto LABEL_15;
    sub_D184(v36, (uint64_t)v38, (uint64_t *)&unk_3D5BA0);
    if (v39)
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6690);
      if ((swift_dynamicCast(&v40, v38, v29, v30, 6) & 1) != 0)
      {
        if (*((_QWORD *)&v41 + 1))
        {
          sub_1B738(&v40, (uint64_t)v43);
          v31 = v44;
          v32 = v45;
          __swift_project_boxed_opaque_existential_1(v43, v44);
          v33 = (uint64_t)v35;
          dispatch thunk of ArtworkModelProtocol.artwork.getter(v31, v32);
          sub_D1D4((uint64_t)v21, &qword_3D0A58);
          sub_FE044(v33, (uint64_t)v21);
          __swift_destroy_boxed_opaque_existential_0(v43);
LABEL_15:
          v34 = swift_getObjectType();
          (*(void (**)(char *, uint64_t, uint64_t, _QWORD))(*((_QWORD *)&v24 + 1) + 8))(v21, v27, v34, *((_QWORD *)&v24 + 1));
          swift_unknownObjectRelease(v24);
          return sub_D1D4((uint64_t)v21, &qword_3D0A58);
        }
      }
      else
      {
        v42 = 0;
        v40 = 0u;
        v41 = 0u;
      }
    }
    else
    {
      sub_D1D4((uint64_t)v38, (uint64_t *)&unk_3D5BA0);
      v40 = 0u;
      v41 = 0u;
      v42 = 0;
    }
    sub_D1D4((uint64_t)&v40, &qword_3D6688);
    goto LABEL_15;
  }
  return result;
}

double sub_FDEE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D66C(a1, (uint64_t)&v16);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6678);
  if ((swift_dynamicCast(&v14, &v16, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = v14;
    v4 = v15;
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4) & 1) != 0)
    {
      v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
      swift_unknownObjectRelease(v3);
      v7 = type metadata accessor for LegacyCachingArtworkView(0);
      v8 = (_QWORD *)swift_dynamicCastClass(v6, v7);
      if (v8)
      {
        (*(void (**)(uint64_t *__return_ptr))&stru_388.segname[swift_isaMask & *v8])(&v16);

        if (v17)
        {
          *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
          return result;
        }
      }
      else
      {

      }
    }
    else
    {
      swift_unknownObjectRelease(v3);
    }
  }
  sub_1D66C(a1, (uint64_t)&v16);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6680);
  if ((swift_dynamicCast(&v14, &v16, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
  {
    v12 = v14;
    v11 = v15;
    v13 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v13, v11);
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_FE044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_FE08C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for GeometryProxy(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = v10;
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain(v10);
    swift_retain(v13);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_FE148(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t sub_FE1AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain(v9);
  swift_retain(v12);
  swift_retain(v16);
  return a1;
}

uint64_t sub_FE240(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v18 = v16[1];
  v19 = v17[1];
  v16[1] = v19;
  swift_retain(v19);
  swift_release(v18);
  return a1;
}

uint64_t sub_FE2FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_FE36C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v12[1];
  v12[1] = v13[1];
  swift_release(v14);
  return a1;
}

uint64_t sub_FE40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_FE418);
}

uint64_t sub_FE418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_FE494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_FE4A0);
}

uint64_t sub_FE4A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for GeometryProxy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for MultipleSubscriptionScrollableContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D66F0;
  if (!qword_3D66F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MultipleSubscriptionScrollableContentView);
  return result;
}

uint64_t sub_FE554(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for GeometryProxy(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = &unk_2F64C0;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_FE5E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32CC88, 1);
}

uint64_t sub_FE5F0@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  double v45;
  double v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __n128 v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, __n128);
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  _OWORD v88[7];

  v2 = v1;
  v84 = a1;
  v3 = type metadata accessor for GeometryProxy(0);
  v4 = *(_QWORD *)(v3 - 8);
  v85 = v3;
  v86 = v4;
  __chkstk_darwin(v3);
  v75 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  __chkstk_darwin(v77);
  v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6730);
  __chkstk_darwin(v80);
  v83 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v81 = (uint64_t)&v71 - v9;
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v71 - v11;
  v73 = type metadata accessor for MultipleSubscriptionScrollableContentView(0);
  v12 = *(_QWORD *)(v73 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v73);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for MultipleSubscriptionTextView(0);
  __chkstk_darwin(v79);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6738);
  v18 = *(_QWORD **)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v71 - v23;
  v72 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v86 + 16);
  v72(v16, v2, v85, v22);
  sub_19C4C(v2, (uint64_t)v14, type metadata accessor for MultipleSubscriptionScrollableContentView);
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = swift_allocObject(&unk_381E20, v26 + v13, v25 | 7);
  sub_FECD0((uint64_t)v14, v27 + v26);
  v28 = sub_FED58();
  v29 = (uint64_t)v74;
  View.withSizing(callback:)(sub_FED14, v27, v79, v28);
  swift_release(v27);
  sub_FA4C((uint64_t)v16, type metadata accessor for MultipleSubscriptionTextView);
  v30 = (void (*)(char *, char *, uint64_t))v18[4];
  v79 = (uint64_t)v24;
  v76 = v20;
  v78 = v17;
  v30(v24, v20, v17);
  v31 = v75;
  v32 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v75, v2, v85);
  v33 = v73;
  v34 = *(int *)(v73 + 24);
  v35 = *(_QWORD *)(v2 + *(int *)(v73 + 20));
  v36 = v2;
  v38 = *(_QWORD *)(v2 + v34);
  v37 = *(_QWORD *)(v2 + v34 + 8);
  *(_QWORD *)v29 = swift_getKeyPath(&unk_2F6528);
  *(_BYTE *)(v29 + 8) = 0;
  v39 = (int *)v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v29 + *(int *)(v77 + 20), v31, v32);
  *(_QWORD *)(v29 + v39[6]) = v35;
  v40 = (_QWORD *)(v29 + v39[7]);
  *v40 = v38;
  v40[1] = v37;
  v41 = v29 + v39[8];
  v42 = enum case for Grid.c(_:);
  v43 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  swift_bridgeObjectRetain(v35);
  v44 = swift_retain(v37);
  GeometryProxy.size.getter(v44);
  v46 = v45;
  v47 = (uint64_t *)(v36 + *(int *)(v33 + 28));
  v48 = *v47;
  v49 = v47[1];
  *(_QWORD *)&v88[0] = v48;
  *((_QWORD *)&v88[0] + 1) = v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  v51 = State.wrappedValue.getter(&v87, v50);
  v52.n128_f64[0] = v87;
  v53 = v46 - v87;
  v54 = static Alignment.center.getter(v51, v52);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v88, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v53, 0, 0, 1, 0, 1, v54, v55);
  v56 = v81;
  sub_19C4C(v29, v81, type metadata accessor for MultipleSubscriptionChannelLockupView);
  v57 = (_OWORD *)(v56 + *(int *)(v80 + 36));
  v58 = v88[5];
  v57[4] = v88[4];
  v57[5] = v58;
  v57[6] = v88[6];
  v59 = v88[1];
  *v57 = v88[0];
  v57[1] = v59;
  v60 = v88[3];
  v57[2] = v88[2];
  v57[3] = v60;
  sub_FA4C(v29, type metadata accessor for MultipleSubscriptionChannelLockupView);
  v61 = v82;
  sub_FEDA8(v56, v82);
  v62 = (void (*)(char *, uint64_t, uint64_t))v18[2];
  v63 = v76;
  v64 = v79;
  v65 = v78;
  v62(v76, v79, v78);
  v66 = v83;
  sub_FEDF0(v61, v83);
  v67 = v84;
  v62(v84, (uint64_t)v63, v65);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6750);
  sub_FEDF0(v66, (uint64_t)&v67[*(int *)(v68 + 48)]);
  sub_FEE38(v61);
  v69 = (void (*)(uint64_t, uint64_t))v18[1];
  v69(v64, v65);
  sub_FEE38(v66);
  return ((uint64_t (*)(char *, uint64_t))v69)(v63, v65);
}

uint64_t sub_FEBB8(uint64_t a1, double a2, double a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for MultipleSubscriptionScrollableContentView(0) + 28));
  v5 = *v4;
  v6 = v4[1];
  *(double *)v9 = a3;
  v9[1] = v5;
  v9[2] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t sub_FEC28()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for MultipleSubscriptionScrollableContentView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6] + 8));
  swift_release(*(_QWORD *)(v7 + v1[7] + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_FECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MultipleSubscriptionScrollableContentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_FED14(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MultipleSubscriptionScrollableContentView(0) - 8)
                          + 80);
  return sub_FEBB8(v2 + ((v5 + 16) & ~v5), a1, a2);
}

unint64_t sub_FED58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6740;
  if (!qword_3D6740)
  {
    v1 = type metadata accessor for MultipleSubscriptionTextView(255);
    result = swift_getWitnessTable(&unk_3048B0, v1);
    atomic_store(result, (unint64_t *)&qword_3D6740);
  }
  return result;
}

uint64_t sub_FEDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_FEDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_FEE38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_FEE7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6758;
  if (!qword_3D6758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6760);
    result = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D6758);
  }
  return result;
}

double sub_FEEC8()
{
  double result;

  result = 140.0;
  xmmword_3D6768 = xmmword_2F6560;
  return result;
}

void sub_FEEE0()
{
  qword_3D6778 = 0x4018000000000000;
}

id sub_FEEF0()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setDistribution:", 0);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setAllowsGroupBlending:", 0);

  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAlignment:", 1);
  if (qword_3CF330 != -1)
    swift_once(&qword_3CF330, sub_FEEE0);
  objc_msgSend(v0, "setSpacing:", *(double *)&qword_3D6778);
  return v0;
}

char *sub_FEFF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___wordmarkArtworkView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___wordmarkArtworkView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___wordmarkArtworkView);
  }
  else
  {
    v4 = sub_FF054();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_FF054()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  char *v8;
  double v9;

  v0 = type metadata accessor for ArtworkView(0);
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = (char *)v1;
  v5 = objc_msgSend(v2, "clearColor");
  v6 = *(void **)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = v5;
  v7 = v5;

  sub_A2A14();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0;
  v8 = v4;
  sub_A2A14();

  LODWORD(v9) = 1148846080;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v9);
  return v8;
}

id SubscriptionNameAreaView.titleLabel.getter()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_FF188);
}

void SubscriptionNameAreaView.titleLabel.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel) = a1;

}

void *sub_FF188()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  double v8;
  double v9;
  _QWORD v11[6];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;

  type metadata accessor for DynamicTypeLabel();
  if (qword_3CF4D8 != -1)
    swift_once(&qword_3CF4D8, sub_13FE40);
  v11[0] = qword_3FB610;
  v11[1] = qword_3FB618;
  v11[2] = qword_3FB620;
  v11[3] = qword_3FB628;
  v11[4] = qword_3FB630;
  v11[5] = qword_3FB638;
  v12 = xmmword_3FB640;
  v13 = qword_3FB650;
  v14 = qword_3FB658;
  v15 = qword_3FB660;
  v16 = word_3FB668;
  sub_DDA0((void *)qword_3FB610, qword_3FB618, qword_3FB620, qword_3FB628, qword_3FB630, qword_3FB638, (void *)xmmword_3FB640, *((uint64_t *)&xmmword_3FB640 + 1), qword_3FB650, qword_3FB658, qword_3FB660, word_3FB668, SHIBYTE(word_3FB668));
  v0 = sub_A96AC((uint64_t)v11, 2, 0, 1);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v1 = (void *)static UIFont.footnoteEmph.getter();
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setAlpha:", 0.5);
  v2 = objc_msgSend(v0, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v4 = v3;
  v5 = objc_allocWithZone((Class)CAFilter);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithType:", v6, swift_bridgeObjectRelease(v4).n128_f64[0]);

  objc_msgSend(v2, "setCompositingFilter:", v7);
  objc_msgSend(v0, "setAdjustsFontSizeToFitWidth:", 1);
  LODWORD(v8) = 1132068864;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v8);
  LODWORD(v9) = 1132068864;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v9);
  objc_msgSend(v0, "setNumberOfLines:", 1);
  objc_msgSend(v0, "setLineBreakMode:", 4);
  return v0;
}

void (*SubscriptionNameAreaView.titleLabel.modify(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = SubscriptionNameAreaView.titleLabel.getter();
  return sub_FF3F8;
}

void sub_FF3F8(uint64_t *a1, uint64_t a2)
{
  sub_FF708(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel);
}

id SubscriptionNameAreaView.channelLinkButton.getter()
{
  return sub_24DBC(&OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton, (uint64_t (*)(void))sub_FF42C);
}

void SubscriptionNameAreaView.channelLinkButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton) = a1;

}

char *sub_FF42C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  id v9;
  __int16 v10;
  char *v11;
  char *v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  double v20;
  double v21;
  id v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  _QWORD v30[6];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;

  if (qword_3CF4D0 != -1)
    swift_once(&qword_3CF4D0, sub_13FDE0);
  v0 = (void *)qword_3FB5B0;
  v26 = qword_3FB5C0;
  v27 = *(_QWORD *)algn_3FB5B8;
  v1 = qword_3FB5D0;
  v25 = qword_3FB5C8;
  v2 = qword_3FB5D8;
  v4 = xmmword_3FB5E0;
  v3 = qword_3FB5F0;
  v5 = qword_3FB5F8;
  v6 = qword_3FB600;
  v29 = qword_3FB600;
  v7 = word_3FB608;
  v28 = word_3FB608;
  v8 = HIBYTE(word_3FB608);
  v24 = HIBYTE(word_3FB608);
  v23 = objc_allocWithZone((Class)type metadata accessor for ChevronButton());
  sub_DDA0(v0, v27, v26, v25, v1, v2, (void *)v4, *((uint64_t *)&v4 + 1), v3, v5, v6, v7, v8);
  v9 = objc_msgSend(v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v30[0] = v0;
  v30[1] = v27;
  if (v24)
    v10 = 256;
  else
    v10 = 0;
  v30[2] = v26;
  v30[3] = v25;
  v30[4] = v1;
  v30[5] = v2;
  v31 = v4;
  v32 = v3;
  v33 = v5;
  v34 = v29;
  v35 = v10 | v28;
  v11 = (char *)v9;
  sub_22158C((uint64_t)v30);

  v12 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth];
  *(_QWORD *)&v13 = swift_beginAccess(&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_adjustsFontSizeToFitWidth], v30, 1, 0).n128_u64[0];
  *v12 = 1;
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel], "setAdjustsFontSizeToFitWidth:", 1, v13);
  ChevronButton.useTopBottomMargin.setter(0);
  objc_msgSend(v11, "setAlpha:", 0.5);
  v14 = objc_msgSend(v11, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v16 = v15;
  v17 = objc_allocWithZone((Class)CAFilter);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "initWithType:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

  objc_msgSend(v14, "setCompositingFilter:", v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 0, v20);
  LODWORD(v21) = 1148846080;
  objc_msgSend(v11, "setContentHuggingPriority:forAxis:", 0, v21);
  return v11;
}

void (*SubscriptionNameAreaView.channelLinkButton.modify(id *a1))(uint64_t *a1, uint64_t a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = SubscriptionNameAreaView.channelLinkButton.getter();
  return sub_FF6FC;
}

void sub_FF6FC(uint64_t *a1, uint64_t a2)
{
  sub_FF708(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton);
}

void sub_FF708(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = *(void **)(v3 + *a3);
  *(_QWORD *)(v3 + *a3) = v4;

}

char *sub_FF77C(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  Swift::OpaquePointer v16;
  char *v17;
  id v18;
  id v19;
  double v20;
  void *v21;
  double leading;
  double bottom;
  double trailing;
  char *v25;
  id v26;
  void *v27;
  uint64_t v28;
  char *v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_model] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_hStackView;
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_FEEF0();
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___wordmarkArtworkView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph] = 0;

  v39.receiver = v11;
  v39.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_hStackView;
  v14 = *(void **)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_hStackView];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v16._rawValue = (void *)swift_allocObject(v15, 64, 7);
  *((_OWORD *)v16._rawValue + 1) = xmmword_2F0A20;
  v17 = v12;
  v18 = v14;
  *((_QWORD *)v16._rawValue + 4) = SubscriptionNameAreaView.titleLabel.getter();
  *((_QWORD *)v16._rawValue + 5) = sub_FEFF8();
  *((_QWORD *)v16._rawValue + 6) = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = SubscriptionNameAreaView.channelLinkButton.getter();
  *((_QWORD *)v16._rawValue + 7) = v19;
  specialized Array._endMutation()(v19);
  UIStackView.addArrangedSubviews(_:)(v16);

  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v16._rawValue).n128_u64[0];
  v21 = *(void **)&v12[v13];
  objc_msgSend(v17, "addSubview:", v21, v20);
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v25 = v17;
  v26 = v21;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v26, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_2EFC90;
  v29 = sub_FEFF8();
  v30 = objc_msgSend(v29, "widthAnchor");

  if (qword_3CF328 != -1)
    swift_once(&qword_3CF328, sub_FEEC8);
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", *(double *)&xmmword_3D6768);

  *(_QWORD *)(v28 + 32) = v31;
  v32 = sub_FEFF8();
  v33 = objc_msgSend(v32, "heightAnchor");

  v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(v33, "constraintEqualToConstant:", *((double *)&xmmword_3D6768
                                                                                           + 1)));

  *(_QWORD *)(v28 + 40) = v34;
  specialized Array._endMutation()(v35);
  v36 = v28;
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  return v25;
}

char *_s23ShelfKitCollectionViews24SubscriptionNameAreaViewC22forFirstBaselineLayoutSo6UIViewCvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_model);
  if (v4)
  {
    v5 = swift_retain(v4);
    UpsellBanner.wordmarkArtwork.getter(v5);
    swift_release(v4);
    v6 = type metadata accessor for ArtworkModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1)
    {
      sub_44C28((uint64_t)v3);
      return sub_FEFF8();
    }
  }
  else
  {
    v8 = type metadata accessor for ArtworkModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  }
  sub_44C28((uint64_t)v3);
  return (char *)SubscriptionNameAreaView.titleLabel.getter();
}

void SubscriptionNameAreaView.applyModel(model:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  int v29;
  char **p_name;
  char *v31;
  id v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  char *v44;
  id v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  double v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  double v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __n128 v69;
  id v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __n128 v75;
  void *v76;
  uint64_t v77;
  void *object;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  NSString v83;
  id v84;
  id v85;
  Swift::String v86;
  Swift::String v87;
  id v88;
  NSString v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[5];
  char v103[32];
  Swift::String v104;

  v2 = v1;
  v4 = type metadata accessor for ArtworkAspectRule(0);
  v99 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  __chkstk_darwin(v4);
  v97 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v98 = (char *)&v91 - v7;
  v93 = type metadata accessor for Logger(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v10);
  v94 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ArtworkRequest(0);
  v95 = *(_QWORD *)(v12 - 8);
  v96 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ArtworkModel(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v91 - v23;
  v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v25, v103, 0, 0);
  v26 = *v25;
  if (*v25)
  {
    v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_model);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_model) = a1;
    v101 = v26;
    swift_retain(v26);
    swift_release(v27);
    v28 = swift_retain(a1);
    UpsellBanner.wordmarkArtwork.getter(v28);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
    p_name = &stru_3B7FF8.name;
    if (v29 == 1)
    {
      sub_44C28((uint64_t)v17);
      v31 = sub_FEFF8();
      objc_msgSend(v31, "setHidden:", 1);

      v32 = SubscriptionNameAreaView.titleLabel.getter();
      objc_msgSend(v32, "setHidden:", 0);

      v33 = SubscriptionNameAreaView.titleLabel.getter();
      v35 = UpsellBanner.subscriptionTitle.getter(v34);
      if (v36)
      {
        v38 = v36;
        v102[0] = v35;
        v102[1] = v36;
        v39 = sub_D254();
        StringProtocol.localizedUppercase.getter(&type metadata for String, v39);
        v41 = v40;
        swift_bridgeObjectRelease(v38);
        v42 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v37 = swift_bridgeObjectRelease(v41).n128_u64[0];
      }
      else
      {
        v42 = 0;
      }
      objc_msgSend(v33, "setText:", v42, v37);

    }
    else
    {
      v43 = (uint64_t)v24;
      sub_2376C((uint64_t)v17, (uint64_t)v24);
      v44 = sub_FEFF8();
      objc_msgSend(v44, "setHidden:", 0);

      v45 = SubscriptionNameAreaView.titleLabel.getter();
      objc_msgSend(v45, "setHidden:", 1);

      v46 = sub_FEFF8();
      sub_27E84((uint64_t)v24, (uint64_t)v21);
      if (qword_3CF328 != -1)
        swift_once(&qword_3CF328, sub_FEEC8);
      v47 = xmmword_3D6768;
      v48 = type metadata accessor for CropCode(0);
      v49 = v94;
      v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v94, 1, 1, v48);
      v51 = static Logger.artwork.getter(v50);
      v52 = static os_log_type_t.info.getter(v51);
      SignpostAndLogTrace(domain:level:)(v102, v9, v52);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v9, v93);
      v53 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v53, "scale");
      v55 = v54;

      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v21, 1, 0, v49, 0, _swiftEmptyArrayStorage, v102, *(double *)&v47, *((double *)&v47 + 1), v55);
      v56 = type metadata accessor for ArtworkView(0);
      v57 = sub_54A90();
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v14, v101, 0, v56, v57);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v14, v96);
      v58 = sub_FEFF8();
      v59 = ArtworkModel.size.getter(v58);
      v60 = &v58[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_imageSize];
      *(double *)v60 = v59;
      *((_QWORD *)v60 + 1) = v61;
      objc_msgSend(v58, "setNeedsLayout");

      v62 = sub_FEFF8();
      v64 = v98;
      v63 = v99;
      v65 = v100;
      (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, enum case for ArtworkAspectRule.aspectFit(_:), v100);
      if (objc_msgSend(v62, "effectiveUserInterfaceLayoutDirection") == (char *)&dword_0 + 1)
        v66 = 12;
      else
        v66 = 11;
      objc_msgSend(v62, "setContentMode:", v66);
      v67 = v97;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v97, v64, v65);
      v68 = &v62[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule];
      v69 = swift_beginAccess(&v62[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_aspectRule], v102, 33, 0);
      (*(void (**)(char *, char *, uint64_t, __n128))(v63 + 40))(v68, v67, v65, v69);
      swift_endAccess(v102);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
      sub_239C0(v43);
      p_name = (char **)(&stru_3B7FF8 + 8);
    }
    v70 = SubscriptionNameAreaView.channelLinkButton.getter();
    objc_msgSend(v70, "setHidden:", 0);

    v72 = UpsellBanner.channelLinkAction.getter(v71);
    if (v72)
    {
      v73 = v72;
      v74 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
      v77 = Action.title.getter(v75);
      if (v76)
      {
        object = v76;
      }
      else
      {
        v85 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v104._object = (void *)0xE000000000000000;
        v86._countAndFlagsBits = 0x4148435F57454956;
        v86._object = (void *)0xEC0000004C454E4ELL;
        v87._countAndFlagsBits = 0;
        v87._object = (void *)0xE000000000000000;
        v104._countAndFlagsBits = 0;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)(unint64_t)v77, (NSBundle)v85, v87, v104)._object;

      }
      v88 = *(id *)&v74[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
      v89 = String._bridgeToObjectiveC()();
      objc_msgSend(v88, p_name[286], v89, swift_bridgeObjectRelease(object).n128_f64[0]);

      v90 = SubscriptionNameAreaView.channelLinkButton.getter();
      ChevronButton.setAction(_:)(v73);

      v84 = SubscriptionNameAreaView.channelLinkButton.getter();
      objc_msgSend(v84, "setEnabled:", 1);
      swift_release(v73);
    }
    else
    {
      UpsellBanner.channelLinkTitle.getter();
      if (v79)
      {
        v80 = v79;
        v81 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
        v82 = *(id *)&v81[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_titleLabel];
        v83 = String._bridgeToObjectiveC()();
        objc_msgSend(v82, p_name[286], v83, swift_bridgeObjectRelease(v80).n128_f64[0]);

        v84 = SubscriptionNameAreaView.channelLinkButton.getter();
        objc_msgSend(v84, "setEnabled:", 0);
      }
      else
      {
        v84 = SubscriptionNameAreaView.channelLinkButton.getter();
        objc_msgSend(v84, "setHidden:", 1);
      }
    }

    swift_release(v101);
  }
}

uint64_t SubscriptionNameAreaView.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

void SubscriptionNameAreaView.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph, v9, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  swift_retain(a1);
  v5 = (char *)SubscriptionNameAreaView.channelLinkButton.getter();
  v6 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph];
  swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews13ChevronButton_objectGraph], &v8, 1, 0);
  v7 = *(_QWORD *)v6;
  *(_QWORD *)v6 = a1;
  swift_release(v7);
  swift_retain(a1);

}

id sub_100560@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = SubscriptionNameAreaView.titleLabel.getter();
  *a1 = result;
  return result;
}

void sub_100588(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel);
}

id sub_100594@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = SubscriptionNameAreaView.channelLinkButton.getter();
  *a1 = result;
  return result;
}

void sub_1005BC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton);
}

void keypath_setTm(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  id v6;
  id v7;

  v5 = *a1;
  v7 = *(id *)(*a2 + *a5);
  *(_QWORD *)(*a2 + *a5) = *a1;
  v6 = v5;

}

uint64_t type metadata accessor for SubscriptionNameAreaView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews24SubscriptionNameAreaView);
}

void sub_100620()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_model] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_hStackView;
  *(_QWORD *)&v0[v1] = sub_FEEF0();
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___wordmarkArtworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView____lazy_storage___channelLinkButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews24SubscriptionNameAreaView_objectGraph] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SubscriptionNameAreaView.swift", 54, 2, 99, 0);
  __break(1u);
}

uint64_t getEnumTagSinglePayload for FollowButtonState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
    else
      v7 = -2;
    if (v7 < 0)
      v7 = -1;
    v8 = v7 + 1;
    v9 = v7 - 2;
    if (v8 >= 4)
      return v9;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100720 + 4 * byte_2F6600[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FollowButtonState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1007E8 + 4 * byte_2F660A[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10081C + 4 * byte_2F6605[v5]))();
}

uint64_t sub_10081C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10082CLL);
  return result;
}

uint64_t sub_100838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100840);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10084C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100858(unsigned __int8 *a1)
{
  unsigned int v1;
  int v2;

  v1 = *a1;
  if (v1 >= 2)
    v2 = ((v1 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v2 = -2;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_BYTE *sub_100888(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for FollowButtonState()
{
  return &type metadata for FollowButtonState;
}

uint64_t sub_1008B0(char a1)
{
  uint64_t countAndFlagsBits;
  id v2;
  unint64_t v3;
  const char *v4;
  unint64_t v5;
  Swift::String v6;
  uint64_t v7;
  unint64_t v9;

  countAndFlagsBits = 0;
  switch(a1)
  {
    case 2:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = 0xD000000000000012;
      v9 = 0xE000000000000000;
      v4 = "AX_DOWNLOAD_BUTTON";
      goto LABEL_6;
    case 3:
      return countAndFlagsBits;
    case 4:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = 0xD00000000000001BLL;
      v9 = 0xE000000000000000;
      v4 = "PRODUCT_FOLLOW_BUTTON_TITLE";
      goto LABEL_6;
    case 5:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = 0xD00000000000001ELL;
      v9 = 0xE000000000000000;
      v4 = "PRODUCT_FOLLOWING_INTERMEDIATE";
LABEL_6:
      v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v9 = 0xE000000000000000;
      v5 = 0x800000000030D800;
      v3 = 0xD000000000000011;
      break;
  }
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v2, v6, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100A64@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  switch(a1)
  {
    case 2:
      goto LABEL_6;
    case 3:
    case 5:
      v3 = type metadata accessor for Glyph(0);
      v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
      v5 = a2;
      v6 = 1;
      return v4(v5, v6, 1, v3);
    case 4:
      static Glyph.HeaderButtons.follow.getter();
      goto LABEL_7;
    default:
      if ((a1 & 1) != 0)
LABEL_6:
        static Glyph.HeaderButtons.download.getter();
      else
        static Glyph.HeaderButtons.followed.getter();
LABEL_7:
      v3 = type metadata accessor for Glyph(0);
      v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
      v5 = a2;
      v6 = 0;
      return v4(v5, v6, 1, v3);
  }
}

BOOL sub_100B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v5;
  BOOL v6;
  char v7;

  v2 = *a1;
  if (v2 == 3 || v2 == 5)
    return 0;
  v5 = *a2;
  if (v2 == 4)
    return v5 == 4;
  if ((v5 - 3) < 3)
    return 0;
  v6 = v2 == 2;
  if (v5 != 2)
    v6 = 0;
  if (v2 == 2)
    return v6;
  v7 = ((v2 & 1) == 0) ^ v5;
  if (v5 != 2)
    return v7;
  return v6;
}

uint64_t sub_100B84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t sub_100BBC(char a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  if (a1 == 2)
    return 4;
  if (a1 == 3)
    return 5;
  v6 = MTPodcastEpisodeLimit.allowsAutomaticDownloads.getter(a2);
  v7 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(a3);
  v8 = DeviceCapacityMonitor.CapacityLevel.rawValue.getter(0);
  v9 = a1 & 1;
  if (v7 != v8)
    v9 = 1;
  if ((v6 & 1) != 0)
    return v9;
  else
    return 2;
}

uint64_t getEnumTagSinglePayload for FollowButtonState.AutoDownloadState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100C90 + 4 * byte_2F6613[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FollowButtonState.AutoDownloadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100D48 + 4 * byte_2F661D[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100D7C + 4 * byte_2F6618[v5]))();
}

uint64_t sub_100D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D8CLL);
  return result;
}

uint64_t sub_100D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100DA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100DB8(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_100DD4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FollowButtonState.AutoDownloadState()
{
  return &type metadata for FollowButtonState.AutoDownloadState;
}

void sub_100DFC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  CGFloat Height;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double a;
  uint64_t v17;
  uint64_t i;
  void *v19;
  uint64_t v20;
  CGAffineTransform ty;
  double v22;
  double v23;
  uint64_t v24;
  CGRect v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (!v8)
      goto LABEL_13;
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (!v8)
      goto LABEL_13;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v9 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
    else
      v10 = *(id *)(a1 + 8 * v9 + 32);
    v11 = v10;
    ++v9;
    objc_msgSend(v10, "frame");
    Height = CGRectGetHeight(v25);
    v24 = 0;
    v22 = a3;
    v23 = Height * a4;
    v13 = sub_101014();
    static InterpolateFloats.byEasingInOutQuadradtic<A>(_:_:_:)(&ty, &v24, &v23, &v22, &type metadata for CGFloat, v13);
    CGAffineTransformMakeTranslation(&ty, 0.0, ty.a);
    objc_msgSend(v11, "setTransform:", &ty);

  }
  while (v8 != v9);
LABEL_13:
  swift_bridgeObjectRelease(a1);
  v23 = 0.0;
  v24 = 0x3FF0000000000000;
  v22 = a3;
  v15 = sub_101014();
  static InterpolateFloats.byEasingInOutQuadradtic<A>(_:_:_:)(&ty, &v24, &v23, &v22, &type metadata for CGFloat, v15);
  a = ty.a;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v20 = a2;
    else
      v20 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v17 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v17)
      goto LABEL_18;
  }
  else
  {
    v17 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a2);
    if (!v17)
    {
LABEL_18:
      swift_bridgeObjectRelease(a2);
      return;
    }
  }
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      v19 = *(void **)(a2 + 8 * i + 32);
      objc_msgSend(v19, "setAlpha:", a);
    }
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_101014()
{
  unint64_t result;

  result = qword_3D67D8;
  if (!qword_3D67D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3D67D8);
  }
  return result;
}

uint64_t sub_101058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  uint64_t v13;
  _QWORD v14[6];

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v9);
    v4 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(a1);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  v6 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    else
      v7 = *(id *)(a1 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    v14[1] = 0;
    v14[2] = 0;
    v14[0] = 0x3FF0000000000000;
    v14[3] = 0x3FF0000000000000;
    v14[4] = 0;
    v14[5] = 0;
    objc_msgSend(v7, "setTransform:", v14);

  }
  while (v4 != v6);
LABEL_13:
  swift_bridgeObjectRelease(a1);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    result = _CocoaArrayWrapper.endIndex.getter(v13);
    v10 = result;
    if (!result)
      return swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(a2);
    if (!v10)
      return swift_bridgeObjectRelease(a2);
  }
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      v12 = *(void **)(a2 + 8 * i + 32);
      objc_msgSend(v12, "setAlpha:", 1.0);
    }
    return swift_bridgeObjectRelease(a2);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t destroy for PullDownInteractiveDismissal(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s23ShelfKitCollectionViews28PullDownInteractiveDismissalVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for PullDownInteractiveDismissal(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for PullDownInteractiveDismissal(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PullDownInteractiveDismissal(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PullDownInteractiveDismissal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PullDownInteractiveDismissal()
{
  return &type metadata for PullDownInteractiveDismissal;
}

_QWORD *sub_1013A0()
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x4050800000000000;
  v2 = 0x4050000000000000;
  return static Platform.preferred<A>(iOS:mac:)(&qword_3D67E0, &v2, &v1, &type metadata for CGFloat);
}

_QWORD *sub_1013E4()
{
  uint64_t v0;
  int64x2_t v2;
  int64x2_t v3;

  v2 = vdupq_n_s64(0x4041000000000000uLL);
  v3 = vdupq_n_s64(0x4046000000000000uLL);
  type metadata accessor for CGSize(0);
  return static Platform.preferred<A>(iOS:mac:)(&qword_3D67E8, &v3, &v2, v0);
}

void sub_101430(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  char v12;
  id v13;
  double leading;
  double bottom;
  double trailing;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;

  v2 = v1;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph];
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph] = a1;
  swift_release(v4);
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_episodeUpsellBannerView;
  v6 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_episodeUpsellBannerView];
  swift_retain(a1);
  v7 = v6;
  dispatch thunk of EpisodeUpsellBannerView.bind(to:)(a1);

  v8 = objc_msgSend(v2, "contentView");
  v9 = *(void **)&v2[v5];
  v10 = sub_FA88();
  v11 = v9;
  v12 = ((uint64_t (*)(void))UIFocusEnvironment.contains(_:))();

  if ((v12 & 1) == 0)
  {
    v13 = objc_msgSend(v2, "contentView");
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
    v17 = *(id *)&v2[v5];
    UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v17, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  }
  v18 = *(id *)&v2[v5];
  v19 = (void *)EpisodeUpsellBannerView.artworkContainerView.getter();

  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView];
  LOBYTE(v18) = UIFocusEnvironment.contains(_:)(v20, v10);

  if ((v18 & 1) == 0)
  {
    v21 = *(id *)&v2[v5];
    v22 = (id)EpisodeUpsellBannerView.artworkContainerView.getter();

    UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v20, 0, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  }
}

id sub_1015F8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  unsigned __int8 v18;
  _BYTE *v19;
  int v20;
  unsigned int *v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  objc_super v26;
  unsigned __int8 v27;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for EpisodeUpsellBannerView.EpisodeUpsellBannerType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView;
  v16 = v4;
  sub_1BFEF4();
  v18 = v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  v27 = v18;
  v19 = v17;
  sub_EB33C(&v27);

  *(_QWORD *)&v5[v15] = v19;
  v20 = isMac();
  v21 = (unsigned int *)&enum case for EpisodeUpsellBannerView.EpisodeUpsellBannerType.macOS(_:);
  if (!v20)
    v21 = (unsigned int *)&enum case for EpisodeUpsellBannerView.EpisodeUpsellBannerType.iOSEpisodeDetail(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *v21, v11);
  v22 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_episodeUpsellBannerView;
  v23 = objc_allocWithZone((Class)type metadata accessor for EpisodeUpsellBannerView(0));
  *(_QWORD *)&v16[v22] = EpisodeUpsellBannerView.init(frame:bannerType:)(v14, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph] = 0;

  v26.receiver = v16;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "initWithFrame:", a1, a2, a3, a4);
}

id sub_101794(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  unsigned __int8 v12;
  _BYTE *v13;
  int v14;
  unsigned int *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v20;
  objc_super v21;
  unsigned __int8 v22;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for EpisodeUpsellBannerView.EpisodeUpsellBannerType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView;
  v10 = v1;
  sub_1BFEF4();
  v12 = v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
  v11[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
  v22 = v12;
  v13 = v11;
  sub_EB33C(&v22);

  *(_QWORD *)&v2[v9] = v13;
  v14 = isMac();
  v15 = (unsigned int *)&enum case for EpisodeUpsellBannerView.EpisodeUpsellBannerType.macOS(_:);
  if (!v14)
    v15 = (unsigned int *)&enum case for EpisodeUpsellBannerView.EpisodeUpsellBannerType.iOSEpisodeDetail(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v15, v5);
  v16 = OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_episodeUpsellBannerView;
  v17 = objc_allocWithZone((Class)type metadata accessor for EpisodeUpsellBannerView(0));
  *(_QWORD *)&v10[v16] = EpisodeUpsellBannerView.init(frame:bannerType:)(v8, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph] = 0;

  v21.receiver = v10;
  v21.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v21, "initWithCoder:", a1);

  return v18;
}

uint64_t type metadata accessor for EpisodeUpsellBannerCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell);
}

uint64_t sub_101988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  double v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  double v46;
  double v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[5];
  _OWORD v61[5];

  v2 = v1;
  v55 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v6);
  v56 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ArtworkRequest(0);
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  __chkstk_darwin(v8);
  v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ArtworkModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v53 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  v16 = type metadata accessor for ArtworkCrop(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v53 - v23;
  v25 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_episodeUpsellBannerView));
  EpisodeUpsellBannerView.apply(model:)(a1);

  v26 = EpisodeUpsellBannerModel.artworkURL.getter();
  if (v27)
  {
    v28 = v26;
    v29 = v27;
    v30 = kMTMaximumArtworkSize;
    v61[0] = xmmword_2F6750;
    memset(&v61[1], 0, 41);
    v31 = static ArtworkCrop.boundingBox.getter();
    BYTE2(v52) = 0;
    LOWORD(v52) = static ArtworkFormat.preferredFormat.getter(v31);
    ArtworkModel.init(template:width:height:libraryEntity:backgroundColor:textColors:style:crop:accessibilityTitle:format:isCustomSymbol:isMulticolorSymbol:imageStoreIdentifier:)(v28, v29, 0, 0, 255, 0, 255, v61, v30, v30, 3, v18, 0, 0, v52, 0, 0);
    v32 = 0;
  }
  else
  {
    v32 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v24, v32, 1, v10);
  sub_DA064((uint64_t)v24, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, v10) == 1)
  {
    sub_44C28((uint64_t)v24);
    v24 = v21;
  }
  else
  {
    sub_2376C((uint64_t)v21, (uint64_t)v15);
    v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph);
    if (v33)
    {
      v34 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView);
      v35 = v53;
      sub_27E84((uint64_t)v15, v53);
      v36 = qword_3CF340;
      swift_retain(v33);
      v37 = v34;
      if (v36 != -1)
        swift_once(&qword_3CF340, sub_1013E4);
      v38 = *(double *)&qword_3D67E8;
      v39 = unk_3D67F0;
      v40 = type metadata accessor for CropCode(0);
      v41 = v56;
      v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v56, 1, 1, v40);
      v43 = static Logger.artwork.getter(v42);
      v44 = static os_log_type_t.info.getter(v43);
      SignpostAndLogTrace(domain:level:)(v60, v5, v44);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v55);
      v45 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v45, "scale");
      v47 = v46;

      v48 = v57;
      ArtworkRequest.init(model:targetSize:contentMode:displayScale:retainAspectRatio:cropCodeOverride:destination:effects:trace:)(v35, 1, 0, v41, 0, _swiftEmptyArrayStorage, v60, v38, v39, v47);
      v49 = type metadata accessor for ArtworkView(0);
      v50 = sub_239FC((unint64_t *)&qword_3D22B8, 255, type metadata accessor for ArtworkView, (uint64_t)&unk_2F56E0);
      ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(v48, v33, 0, v49, v50);
      swift_release(v33);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v59);
    }
    sub_239C0((uint64_t)v15);
  }
  return sub_44C28((uint64_t)v24);
}

uint64_t sub_101E5C(uint64_t *a1)
{
  return sub_101988(*a1);
}

uint64_t sub_101E64()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_objectGraph));
}

uint64_t sub_101E78(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D6858, v3, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F68E0);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_101ED0()
{
  if (qword_3CF338 != -1)
    swift_once(&qword_3CF338, sub_1013A0);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, *(double *)&qword_3D67E0);
}

uint64_t sub_101F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D6858, a2, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F68E0);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

id sub_101F58()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23EpisodeUpsellBannerCell_cachingArtworkView);
}

double sub_101F68()
{
  if (qword_3CF340 != -1)
    swift_once(&qword_3CF340, sub_1013E4);
  return *(double *)&qword_3D67E8;
}

uint64_t sub_101FAC(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D6838, a2, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F67B8);
}

uint64_t sub_101FD8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C00, a2, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F6840);
}

uint64_t sub_102004(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D6840, a2, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F6818);
}

uint64_t sub_102030(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D6848, a2, (uint64_t (*)(uint64_t))type metadata accessor for EpisodeUpsellBannerCell, (uint64_t)&unk_2F6870);
}

uint64_t sub_10205C()
{
  return sub_239FC(&qword_3D6850, 255, (uint64_t (*)(uint64_t))&type metadata accessor for EpisodeUpsellBannerModel, (uint64_t)&protocol conformance descriptor for EpisodeUpsellBannerModel);
}

_QWORD *sub_10208C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v25);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for GeometryProxy(0);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain(v7);
    v13(v10, v11, v12);
    v14 = a3[6];
    v15 = a3[7];
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v16;
    v17 = (_QWORD *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = type metadata accessor for Grid(0);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain(v16);
    swift_retain(v19);
    v24(v21, v22, v23);
  }
  return v4;
}

uint64_t sub_10219C(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6]));
  swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8));
  v6 = (char *)a1 + a2[8];
  v7 = type metadata accessor for Grid(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_10222C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for GeometryProxy(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain(v6);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(uint64_t *)((char *)a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = (_QWORD *)(a1 + v14);
  v17 = (uint64_t *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = type metadata accessor for Grid(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain(v15);
  swift_retain(v18);
  v23(v20, v21, v22);
  return a1;
}

uint64_t *sub_102310(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = a3[5];
  v10 = (uint64_t)a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = *(uint64_t *)((char *)a2 + v13);
  v15 = *(uint64_t *)((char *)a1 + v13);
  *(uint64_t *)((char *)a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a3[7];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = v18[1];
  v20 = v17[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  v21 = a3[8];
  v22 = (uint64_t)a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t sub_102400(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t *sub_1024B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_release(v7);
  v8 = a3[5];
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
  swift_bridgeObjectRelease(v13);
  v14 = a3[7];
  v15 = *(uint64_t *)((char *)a1 + v14 + 8);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  swift_release(v15);
  v16 = a3[8];
  v17 = (uint64_t)a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_102588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_102594);
}

uint64_t sub_102594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for Grid(0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_102638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_102644);
}

uint64_t sub_102644(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = type metadata accessor for GeometryProxy(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for Grid(0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[8];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for MultipleSubscriptionChannelLockupView(uint64_t a1)
{
  return sub_AE00(a1, qword_3D68B8, (uint64_t)&nominal type descriptor for MultipleSubscriptionChannelLockupView);
}

uint64_t sub_1026F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = "\t";
  result = type metadata accessor for GeometryProxy(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[3] = (char *)&value witness table for () + 64;
    result = type metadata accessor for Grid(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1027A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32CE10, 1);
}

uint64_t sub_1027B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int64x2_t *v16;
  uint64_t v17;
  __n128 v18;
  __int8 *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[9];
  uint64_t v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  __chkstk_darwin(v11);
  v13 = &v25[-v12 - 1];
  v14 = type metadata accessor for ImpressMetricsModifier(0);
  __chkstk_darwin(v14);
  v16 = (int64x2_t *)&v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v17 = type metadata accessor for ImpressionMetrics(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  v16->i64[0] = 0;
  v16->i64[1] = 0;
  v16[1] = vdupq_n_s64(0x4049000000000000uLL);
  v16[2].i64[0] = a1;
  v16[2].i64[1] = a2;
  v16[3].i64[0] = a3;
  sub_D184((uint64_t)v13, (uint64_t)v10, &qword_3D0EE0);
  swift_retain(a3);
  v18 = swift_retain(a1);
  State.init(wrappedValue:)(v10, v8, v18);
  sub_D1D4((uint64_t)v13, &qword_3D0EE0);
  v19 = &v16->i8[*(int *)(v14 + 36)];
  v25[0] = 0;
  State.init(wrappedValue:)(v25, &type metadata for Bool, v20);
  v21 = v26;
  *v19 = v25[1];
  *((_QWORD *)v19 + 1) = v21;
  sub_D184(v24, a4, &qword_3D6990);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6978);
  return sub_1B79C((uint64_t)v16, a4 + *(int *)(v22 + 36), type metadata accessor for ImpressMetricsModifier);
}

uint64_t sub_102984()
{
  return LegacyLockup.id.getter();
}

uint64_t ModernTitleHeaderView.Style.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1029DC(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for LockupRow(0);
  v47 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - v8;
  __chkstk_darwin(v10);
  v53 = (uint64_t)&v40 - v11;
  v43 = v1;
  sub_102E84(v1, a1);
  if (v12 < 0)
    goto LABEL_52;
  v41 = v6;
  if (!v12)
  {
    v2 = _swiftEmptyArrayStorage;
LABEL_35:
    if (a1 < 3)
      return;
    v31 = v2[2];
    if (v31 < 2)
      return;
    v32 = (uint64_t)v2
        + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
        + *(_QWORD *)(v47 + 72) * (v31 - 1);
    v33 = *(_QWORD *)(v32 + *(int *)(v4 + 20));
    v20 = (uint64_t)v41;
    sub_19C4C(v32, (uint64_t)v41, type metadata accessor for LockupRow);
    if (v33 < 1)
    {
LABEL_46:
      sub_FA4C(v20, type metadata accessor for LockupRow);
      return;
    }
    v34 = *(_QWORD *)(*(_QWORD *)(v20 + *(int *)(v4 + 24)) + 16);
    sub_FA4C(v20, type metadata accessor for LockupRow);
    if (v34 != 1)
      return;
    v1 = v2[2];
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      goto LABEL_54;
    if (v1 >= 2)
      goto LABEL_41;
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (a1 < 0)
    goto LABEL_53;
  v13 = 0;
  v2 = _swiftEmptyArrayStorage;
  v50 = a1;
  v45 = v9;
  v46 = v4;
  v44 = v12;
  while (1)
  {
    if (v13 == v12)
      goto LABEL_50;
    v48 = v2;
    v14 = v53;
    UUID.init()(v12);
    v15 = *(int *)(v4 + 20);
    v49 = v13;
    *(_QWORD *)(v14 + v15) = v13;
    v52 = *(int *)(v4 + 24);
    *(_QWORD *)(v14 + v52) = _swiftEmptyArrayStorage;
    if (a1)
      break;
LABEL_24:
    v26 = (uint64_t)v45;
    sub_19C4C(v53, (uint64_t)v45, type metadata accessor for LockupRow);
    v2 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
      v2 = (_QWORD *)sub_20F934(0, v2[2] + 1, 1, (unint64_t)v2);
    v1 = v2[2];
    v27 = v2[3];
    v28 = v49;
    if (v1 >= v27 >> 1)
      v2 = (_QWORD *)sub_20F934(v27 > 1, v1 + 1, 1, (unint64_t)v2);
    v4 = v46;
    v29 = v47;
    v13 = v28 + 1;
    v2[2] = v1 + 1;
    sub_1B79C(v26, (uint64_t)v2+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v1, type metadata accessor for LockupRow);
    sub_FA4C(v53, type metadata accessor for LockupRow);
    v12 = v44;
    if (v13 == v44)
      goto LABEL_35;
  }
  v16 = v49 * a1;
  if ((unsigned __int128)(v49 * (__int128)a1) >> 64 != (v49 * a1) >> 63)
    goto LABEL_51;
  v17 = *(_QWORD *)(v43 + *(int *)(type metadata accessor for MultipleSubscriptionChannelLockupView(0) + 24));
  if ((unint64_t)v17 >> 62)
  {
    v51 = v17 & 0xFFFFFFFFFFFFFF8;
    if (v17 < 0)
      v30 = v17;
    else
      v30 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v1 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v51 = v17 & 0xFFFFFFFFFFFFFF8;
    v1 = *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
  }
  v18 = _swiftEmptyArrayStorage;
  v2 = 0;
  v19 = v17 & 0xC000000000000001;
  v42 = v17;
  v20 = v17 + 32;
  while (1)
  {
    v22 = (int64_t)v2 + v16;
    if (__OFADD__(v16, v2))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v22 < (uint64_t)v1)
      break;
LABEL_12:
    v2 = (_QWORD *)((char *)v2 + 1);
    if ((_QWORD *)a1 == v2)
      goto LABEL_24;
  }
  if (v19)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)((char *)v2 + v16, v42);
LABEL_19:
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
      v18 = sub_20F828(0, v18[2] + 1, 1, v18);
    v25 = v18[2];
    v24 = v18[3];
    if (v25 >= v24 >> 1)
      v18 = sub_20F828((_QWORD *)(v24 > 1), v25 + 1, 1, v18);
    v18[2] = v25 + 1;
    v21 = &v18[2 * v25];
    v21[4] = v22;
    v21[5] = v23;
    *(_QWORD *)(v53 + v52) = v18;
    a1 = v50;
    goto LABEL_12;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    if ((unint64_t)v22 >= *(_QWORD *)(v51 + 16))
      goto LABEL_49;
    v23 = *(_QWORD *)(v20 + 8 * v22);
    swift_retain(v23);
    goto LABEL_19;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v2 = (_QWORD *)sub_E1D48((unint64_t)v2);
  if (v1 < 2)
    goto LABEL_55;
LABEL_41:
  if (v1 - 2 >= v2[2])
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v35 = sub_8F55C();
  if (v36)
  {
    v37 = v35;
    v38 = v36;
    v39 = v2[2];
    swift_retain(v36);
    if (v39)
    {
      sub_E1814(0, 0, v37, v38);
      swift_release(v38);
      return;
    }
LABEL_57:
    __break(1u);
  }
}

void sub_102E84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for MultipleSubscriptionChannelLockupView(0) + 24));
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v6 = v3;
    else
      v6 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  }
  v5 = ceil((double)v4 / (double)a2);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 >= 9.22337204e18)
LABEL_13:
    __break(1u);
}

void sub_102F4C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char v33;
  __n128 v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  id v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  __n128 v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v104 = a1;
  v2 = type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v97 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v98 = v3;
  v96 = (uint64_t)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6900);
  __chkstk_darwin(v4);
  v6 = (double *)((char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6908);
  __chkstk_darwin(v7);
  v103 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6910);
  __chkstk_darwin(v100);
  v102 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v101 = (uint64_t)&v92 - v11;
  v94 = type metadata accessor for ShelfCellHeight(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v107 = *(_QWORD *)(v99 - 8);
  v14 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v99);
  v95 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v108 = (uint64_t)&v92 - v17;
  v18 = type metadata accessor for ColumnSpan(0, v16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v1 + *(int *)(v2 + 20);
  v23 = GeometryProxy.size.getter(v20);
  v24 = SizeClass.init(width:)(v23);
  v25 = SizeClass.rawValue.getter(v24);
  v26 = SizeClass.rawValue.getter(0);
  v106 = v24;
  if (v25 == v26)
  {
    v27 = 2;
  }
  else
  {
    v28 = Grid.grid23Columns(for:horizontal:)(v24, 0);
    v27 = ColumnSpan.columns.getter(v28);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
  v110 = 1;
  ModernShelf.ItemPresentation.init(itemKind:orientation:background:horizontalRows:)(43, 0, 0x10000000000, 1);
  v92 = v1;
  sub_1029DC(v27);
  v30 = v29;
  v31 = (void *)objc_opt_self(UITraitCollection);
  v32 = objc_msgSend(v31, "currentTraitCollection");
  v33 = UITraitCollection.interfaceIdiomIsMac.getter();

  if ((v33 & 1) != 0)
    v35 = 8.0;
  else
    v35 = 10.0;
  v36 = v27 - 1;
  if (__OFSUB__(v27, 1))
  {
    __break(1u);
  }
  else
  {
    v34.n128_f64[0] = (double)v36;
    v37 = v35 * (double)v36;
    v38 = GeometryProxy.size.getter(v34);
    v39 = v106;
    if ((SizeClass.isIpadWide.getter(v106) & 1) != 0)
    {
      v40 = 80.0;
    }
    else
    {
      v41 = SizeClass.margins(width:)(v39, v23);
      v40 = v41 + v41;
    }
    v42 = v99;
    v43 = (v38 - v37 - v40) / (double)v27;
    v44 = objc_msgSend(v31, "currentTraitCollection");
    v45 = v108;
    static CircleLockupView.heightFor(presentation:traitCollection:)(v108, (uint64_t)v44, (uint64_t)v13);

    v46 = ShelfCellHeight.heightFor(width:)(v43);
    v47 = (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v13, v94);
    v48 = (uint64_t)v6;
    *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v47);
    v6[1] = v35;
    *((_BYTE *)v6 + 16) = 0;
    v99 = (uint64_t)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D6918) + 44);
    v109 = v30;
    v49 = v96;
    sub_19C4C(v92, v96, type metadata accessor for MultipleSubscriptionChannelLockupView);
    v50 = v107;
    v51 = v95;
    v52 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v95, v45, v42);
    v53 = *(unsigned __int8 *)(v97 + 80);
    v54 = (v53 + 24) & ~v53;
    v55 = *(unsigned __int8 *)(v50 + 80);
    v56 = (v98 + v55 + v54) & ~v55;
    v57 = (v14 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    v59 = swift_allocObject(&unk_382210, v58 + 8, v53 | v55 | 7);
    *(double *)(v59 + 16) = v35;
    sub_1B79C(v49, v59 + v54, type metadata accessor for MultipleSubscriptionChannelLockupView);
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v59 + v56, v51, v52);
    *(double *)(v59 + v57) = v43;
    *(double *)(v59 + v58) = v46;
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6920);
    v61 = type metadata accessor for UUID(0);
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6928);
    v63 = sub_10EDC(&qword_3D6930, &qword_3D6920, (uint64_t)&protocol conformance descriptor for [A]);
    v64 = sub_10EDC(&qword_3D6938, &qword_3D6928, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v65 = sub_89A0(&qword_3D6940, type metadata accessor for LockupRow, (uint64_t)"\u0378\b");
    ForEach<>.init(_:content:)(&v109, sub_103FC8, v59, v60, v61, v62, v63, v64, v65);
    v67.n128_f64[0] = GeometryProxy.size.getter(v66);
    v68 = v67.n128_f64[0];
    v70 = static Alignment.center.getter(v69, v67);
    v71 = v103;
    sub_1A1824(0, 1, 0.0, 1, v68, 0, 0, 1, v103, v73, 0.0, 1, 0.0, 1, v70, v72);
    v74 = sub_D1D4(v48, &qword_3D6900);
    v75 = static Edge.Set.leading.getter(v74);
    v76 = static Edge.Set.trailing.getter();
    v77 = Edge.Set.init(rawValue:)(0);
    v78 = Edge.Set.init(rawValue:)(v77);
    if (Edge.Set.init(rawValue:)(v78 & v75) != v75)
      v77 = Edge.Set.init(rawValue:)(v77 | v75);
    v79 = Edge.Set.init(rawValue:)(v77);
    if (Edge.Set.init(rawValue:)(v79 & v76) != v76)
      LOBYTE(v77) = Edge.Set.init(rawValue:)(v77 | v76);
    v80 = v106;
    if ((SizeClass.isIpadWide.getter(v106) & 1) != 0)
      v81 = 40.0;
    else
      v81 = SizeClass.margins(width:)(v80, v23);
    v82 = EdgeInsets.init(_all:)(v81);
    v84 = v83;
    v86 = v85;
    v88 = v87;
    v89 = v102;
    sub_D184(v71, v102, &qword_3D6908);
    v90 = v89 + *(int *)(v100 + 36);
    *(_BYTE *)v90 = v77;
    *(double *)(v90 + 8) = v82;
    *(_QWORD *)(v90 + 16) = v84;
    *(_QWORD *)(v90 + 24) = v86;
    *(_QWORD *)(v90 + 32) = v88;
    *(_BYTE *)(v90 + 40) = 0;
    sub_D1D4(v71, &qword_3D6908);
    v91 = v101;
    sub_104078(v89, v101);
    sub_104078(v91, v104);
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v108, v52);
  }
}

uint64_t sub_103670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  _QWORD v42[4];
  uint64_t v43;

  v39 = a3;
  v13 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a4 = static VerticalAlignment.center.getter(v21);
  *(double *)(a4 + 8) = a5;
  *(_BYTE *)(a4 + 16) = 0;
  v41 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D6948) + 44);
  v22 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for LockupRow(0) + 24));
  v43 = v22;
  KeyPath = swift_getKeyPath(&unk_2F69D0);
  sub_19C4C(a2, (uint64_t)v20, type metadata accessor for MultipleSubscriptionChannelLockupView);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v39, v13);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = *(unsigned __int8 *)(v14 + 80);
  v26 = (v19 + v25 + v24) & ~v25;
  v27 = (v15 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_382238, v28 + 8, v23 | v25 | 7);
  sub_1B79C((uint64_t)v20, v29 + v24, type metadata accessor for MultipleSubscriptionChannelLockupView);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v29 + v26, v16, v13);
  *(double *)(v29 + v27) = a6;
  *(double *)(v29 + v28) = a7;
  swift_bridgeObjectRetain(v22);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6950);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6958);
  v32 = sub_10EDC(&qword_3D6960, &qword_3D6950, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6968);
  v34 = type metadata accessor for PlainButtonStyle(255);
  v35 = sub_10EDC(&qword_3D6970, &qword_3D6968, (uint64_t)&protocol conformance descriptor for Button<A>);
  v36 = sub_89A0(&qword_3D1058, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v42[0] = v33;
  v42[1] = v34;
  v42[2] = v35;
  v42[3] = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v42, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v43, KeyPath, sub_104210, v29, v30, v31, v32, &protocol witness table for String, OpaqueTypeConformance2);
}

uint64_t sub_10392C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;

  v36 = a3;
  v40 = a4;
  v10 = type metadata accessor for PlainButtonStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  v39 = v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6968);
  v37 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v22 = a1[1];
  sub_19C4C(a2, (uint64_t)v17, type metadata accessor for MultipleSubscriptionChannelLockupView);
  v23 = *(unsigned __int8 *)(v15 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = (v16 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_382260, v25 + 16, v23 | 7);
  sub_1B79C((uint64_t)v17, v26 + v24, type metadata accessor for MultipleSubscriptionChannelLockupView);
  v27 = (_QWORD *)(v26 + v25);
  *v27 = v21;
  v27[1] = v22;
  v42 = v36;
  v43 = v21;
  v44 = v22;
  v45 = a5;
  v46 = a6;
  v47 = a2;
  swift_retain(v22);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6978);
  v29 = sub_104408();
  v30 = Button.init(action:label:)(sub_104394, v26, sub_1043F4, v41, v28, v29);
  PlainButtonStyle.init()(v30);
  v31 = sub_10EDC(&qword_3D6970, &qword_3D6968, (uint64_t)&protocol conformance descriptor for Button<A>);
  v32 = sub_89A0(&qword_3D1058, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v33 = v38;
  View.buttonStyle<A>(_:)(v13, v18, v38, v31, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v18);
}

uint64_t sub_103B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t KeyPath;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];

  v46 = a3;
  v47 = a4;
  v48 = a5;
  v49 = a2;
  v45 = a1;
  v9 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CircleLockupView(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D69B0);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D69A0);
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6990);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v45, v9, v23);
  v26 = v46;
  swift_retain(v46);
  CircleLockupView.init(presentation:model:)((uint64_t)v12, v26, (uint64_t)v15);
  KeyPath = swift_getKeyPath(&unk_2F69F8);
  sub_19C4C((uint64_t)v15, (uint64_t)v18, type metadata accessor for CircleLockupView);
  v28 = &v18[*(int *)(v16 + 36)];
  *(_QWORD *)v28 = KeyPath;
  *((double *)v28 + 1) = a6;
  *((double *)v28 + 2) = a7;
  v29 = sub_FA4C((uint64_t)v15, type metadata accessor for CircleLockupView);
  v31 = static Alignment.center.getter(v29, v30);
  _FrameLayout.init(width:height:alignment:)(v51, *(_QWORD *)&a6, 0, *(_QWORD *)&a7, 0, v31, v32);
  sub_D184((uint64_t)v18, (uint64_t)v21, &qword_3D69B0);
  v33 = &v21[*(int *)(v19 + 36)];
  v34 = v51[1];
  *(_OWORD *)v33 = v51[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v51[2];
  sub_D1D4((uint64_t)v18, &qword_3D69B0);
  v36 = static Color.primary.getter(v35);
  v37 = swift_getKeyPath(&unk_2F6A20);
  sub_D184((uint64_t)v21, (uint64_t)v25, &qword_3D69A0);
  v38 = (uint64_t *)&v25[*(int *)(v22 + 36)];
  *v38 = v37;
  v38[1] = v36;
  sub_D1D4((uint64_t)v21, &qword_3D69A0);
  v39 = *v47;
  LOBYTE(v37) = *((_BYTE *)v47 + 8);
  swift_retain(*v47);
  v41 = sub_14A78(v40, v37);
  swift_release(v39);
  v42 = type metadata accessor for DynamicImpressionsCalculator(0);
  BaseObjectGraph.injectIfAvailable<A>(_:)(&v50, v42, v42);
  swift_release(v41);
  v43 = v50;
  sub_1027B4(v26, v49, v50, v48);
  swift_release(v43);
  return sub_D1D4((uint64_t)v25, &qword_3D6990);
}

uint64_t sub_103EA0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = ((((*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v13 = v0 + v4 + v1[5];
  v14 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + v1[6]));
  swift_release(*(_QWORD *)(v12 + v1[7] + 8));
  v15 = v12 + v1[8];
  v16 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

uint64_t sub_103FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(type metadata accessor for MultipleSubscriptionChannelLockupView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for ModernShelf.ItemPresentation(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_103670(a1, v2 + v6, v2 + v9, a2, *(double *)(v2 + 16), *(double *)(v2 + v10), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for LockupRow(uint64_t a1)
{
  return sub_AE00(a1, qword_3D6A10, (uint64_t)&nominal type descriptor for LockupRow);
}

uint64_t sub_104078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1040C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LegacyLockup.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1040E8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = ((((*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v13 = v0 + v4 + v1[5];
  v14 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + v1[6]));
  swift_release(*(_QWORD *)(v12 + v1[7] + 8));
  v15 = v12 + v1[8];
  v16 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

uint64_t sub_104210@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(type metadata accessor for MultipleSubscriptionChannelLockupView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for ModernShelf.ItemPresentation(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10392C(a1, v2 + v6, v2 + v9, a2, *(double *)(v2 + v10), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1042A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v8 = v7 + v1[5];
  v9 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[6]));
  swift_release(*(_QWORD *)(v7 + v1[7] + 8));
  v10 = v7 + v1[8];
  v11 = type metadata accessor for Grid(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_104394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = type metadata accessor for MultipleSubscriptionChannelLockupView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return (*(uint64_t (**)(_QWORD))(v0 + *(int *)(v1 + 28) + v3))(*(_QWORD *)(v0
                                                                                     + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)
                                                                                     + 8));
}

uint64_t sub_1043F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_103B88(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 56), a1, *(double *)(v1 + 40), *(double *)(v1 + 48));
}

unint64_t sub_104408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6980;
  if (!qword_3D6980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6978);
    sub_10448C();
    sub_89A0(&qword_3D1FA0, type metadata accessor for ImpressMetricsModifier, (uint64_t)&protocol conformance descriptor for ImpressMetricsModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D6980);
  }
  return result;
}

unint64_t sub_10448C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6988;
  if (!qword_3D6988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6990);
    sub_104B60(&qword_3D6998, &qword_3D69A0, (void (*)(void))sub_104530);
    sub_10EDC(&qword_3D10C0, &qword_3D10C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D6988);
  }
  return result;
}

unint64_t sub_104530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D69A8;
  if (!qword_3D69A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D69B0);
    sub_89A0(&qword_3D0C60, type metadata accessor for CircleLockupView, (uint64_t)&protocol conformance descriptor for CircleLockupView);
    sub_10EDC(&qword_3D1DF8, &qword_3D1DB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D69A8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WaveformIndicatorView.WrapperView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for WaveformIndicatorView.WrapperView(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for WaveformIndicatorView.WrapperView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

_QWORD *assignWithTake for WaveformIndicatorView.WrapperView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformIndicatorView.WrapperView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformIndicatorView.WrapperView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LockupAndIndex()
{
  return &type metadata for LockupAndIndex;
}

uint64_t *sub_104714(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

uint64_t sub_1047A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_1047EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_104854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_1048CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_104930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_10499C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1049A8);
}

uint64_t sub_1049A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_104A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_104A30);
}

uint64_t sub_104A30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_104AA8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_104B2C()
{
  return sub_104B60(&qword_3D6A50, &qword_3D6910, (void (*)(void))sub_104BC8);
}

uint64_t sub_104B60(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_104BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6A58;
  if (!qword_3D6A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6908);
    sub_10EDC(&qword_3D6A60, &qword_3D6900, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D6A58);
  }
  return result;
}

uint64_t sub_104C4C()
{
  return sub_89A0(&qword_3D6A68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

id HUDViewController.__allocating_init(type:)(__int128 *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return HUDViewController.init(type:)(a1);
}

id HUDViewController.init(type:)(__int128 *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  __int128 v17;
  __int128 v18;
  objc_super v19;

  v17 = a1[1];
  v18 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration];
  *(_OWORD *)v3 = xmmword_2F6AB0;
  *((_OWORD *)v3 + 1) = xmmword_2F6AC0;
  *((_OWORD *)v3 + 2) = xmmword_2F6AD0;
  *((_OWORD *)v3 + 3) = xmmword_2F6AE0;
  __asm { FMOV            V1.2D, #25.0 }
  *((_OWORD *)v3 + 4) = xmmword_2F6AF0;
  *((_OWORD *)v3 + 5) = _Q1;
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v1;
  *(_QWORD *)&v1[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_presentationWindow] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController____lazy_storage___HUDView] = 0;
  v14 = &v11[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type];
  *(_OWORD *)v14 = v18;
  *((_OWORD *)v14 + 1) = v17;
  *((_QWORD *)v14 + 4) = v2;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for HUDViewController();
  v15 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v15, "setModalPresentationStyle:", 6);
  return v15;
}

uint64_t type metadata accessor for HUDViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17HUDViewController);
}

void sub_104EE8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  CGAffineTransform v51;
  objc_super v52;

  v1 = v0;
  v52.receiver = v0;
  v52.super_class = (Class)type metadata accessor for HUDViewController();
  objc_msgSendSuper2(&v52, "viewDidLoad");
  v2 = objc_msgSend(v0, "presentationController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "_setContainerIgnoresDirectTouchEvents:", 1);

  }
  v4 = objc_msgSend(v1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setUserInteractionEnabled:", 0);

    v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView;
    v7 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView];
    v8 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 8];
    v10 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 16];
    v9 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 24];
    v11 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 32];
    v51.a = *(CGFloat *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type];
    v51.b = v8;
    v51.c = v10;
    v51.d = v9;
    v51.tx = v11;
    v12 = v7;
    v13 = sub_1054B4();
    objc_msgSend(v12, "setImage:", v13);

    objc_msgSend(*(id *)&v1[v6], "setAlpha:", 0.64);
    v50 = v6;
    v14 = *(void **)&v1[v6];
    v15 = (void *)objc_opt_self(UIColor);
    v16 = v14;
    v17 = objc_msgSend(v15, "labelColor");
    objc_msgSend(v16, "setTintColor:", v17);

    v18 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel;
    v19 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel];
    v51.b = v8;
    v51.c = v10;
    v51.d = v9;
    v51.tx = v11;
    v20 = v19;
    sub_105680();
    v22 = v21;
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

    objc_msgSend(*(id *)&v1[v18], "setTextAlignment:", 1);
    objc_msgSend(*(id *)&v1[v18], "setNumberOfLines:", 2);
    v24 = *(id *)&v1[v18];
    v25 = objc_msgSend(v15, "labelColor");
    v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.64);

    objc_msgSend(v24, "setTextColor:", v26);
    objc_msgSend(*(id *)&v1[v18], "setLineBreakMode:", 4);
    v27 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
    v51.b = v8;
    v51.c = v10;
    v51.d = v9;
    v51.tx = v11;
    sub_1059B0();
    if (v28)
    {
      v29 = v28;
      v30 = objc_allocWithZone((Class)NSMutableAttributedString);
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v30, "initWithString:", v31, swift_bridgeObjectRelease(v29).n128_f64[0]);

      v27 = v32;
    }
    v33 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    objc_msgSend(v33, "setLineSpacing:", 2.0);
    v34 = v33;
    objc_msgSend(v27, "addAttribute:value:range:", NSParagraphStyleAttributeName, v34, 0, objc_msgSend(v27, "length"));

    v35 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel], "setAttributedText:", v27);
    objc_msgSend(*(id *)&v1[v35], "setTextAlignment:", 1);
    objc_msgSend(*(id *)&v1[v35], "setNumberOfLines:", 4);
    v36 = *(id *)&v1[v35];
    v37 = objc_msgSend(v15, "labelColor");
    v38 = objc_msgSend(v37, "colorWithAlphaComponent:", 0.64);

    objc_msgSend(v36, "setTextColor:", v38);
    objc_msgSend(*(id *)&v1[v35], "setLineBreakMode:", 4);
    v39 = sub_10716C();
    v40 = objc_msgSend(v39, "contentView");

    objc_msgSend(v40, "addSubview:", *(_QWORD *)&v1[v50]);
    v41 = sub_10716C();
    v42 = objc_msgSend(v41, "contentView");

    objc_msgSend(v42, "addSubview:", *(_QWORD *)&v1[v18]);
    v43 = sub_10716C();
    v44 = objc_msgSend(v43, "contentView");

    objc_msgSend(v44, "addSubview:", *(_QWORD *)&v1[v35]);
    v45 = sub_10716C();
    CGAffineTransformMakeScale(&v51, 0.88, 0.88);
    objc_msgSend(v45, "setTransform:", &v51);

    v46 = sub_10716C();
    objc_msgSend(v46, "setAlpha:", 0.0);

    v47 = objc_msgSend(v1, "view");
    if (v47)
    {
      v48 = v47;
      v49 = sub_10716C();
      objc_msgSend(v48, "addSubview:", v49);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1054B4()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  id v4;

  v1 = 0;
  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 3:
    case 4:
      v2 = String._bridgeToObjectiveC()();
      v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);
      goto LABEL_5;
    case 2:
      return v1;
    case 5:
      v2 = String._bridgeToObjectiveC()();
      v3 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v2);
LABEL_5:
      v1 = v3;

      break;
    default:
      v1 = *(id *)(v0 + 32);
      v4 = v1;
      break;
  }
  return v1;
}

uint64_t sub_105680()
{
  unint64_t *v0;
  unint64_t v1;
  objc_class *v2;
  unint64_t v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t countAndFlagsBits;
  unint64_t v12;

  v1 = v0[1];
  switch(v1)
  {
    case 0uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xEE00657565755120;
      v3 = 0x4F545F4445444441;
      v4 = 0xEE0045554555515FLL;
      v5.super.isa = v2;
      v6 = 0;
      v7 = 0xE000000000000000;
      v8 = 0x6F74206465646441;
      goto LABEL_11;
    case 1uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xEC0000007478654ELL;
      v3 = 0x5F474E4959414C50;
      v4 = 0xEC0000005458454ELL;
      v5.super.isa = v2;
      v6 = 0;
      v7 = 0xE000000000000000;
      v8 = 0x20676E6979616C50;
      goto LABEL_11;
    case 2uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xE000000000000000;
      v3 = 0x6E69776F6C6C6F46;
      v4 = 0xE900000000000067;
      goto LABEL_10;
    case 3uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xED00006465766153;
      v3 = 0x5F45444F53495045;
      v4 = 0xED00004445564153;
      goto LABEL_8;
    case 4uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xEF64657661736E55;
      v3 = 0x5F45444F53495045;
      v4 = 0xEF44455641534E55;
LABEL_8:
      v5.super.isa = v2;
      v6 = 0;
      v7 = 0xE000000000000000;
      v8 = 0x2065646F73697045;
      goto LABEL_11;
    case 5uLL:
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xE000000000000000;
      v4 = 0x800000000030DA10;
      v3 = 0xD000000000000012;
      goto LABEL_10;
    default:
      v9 = *v0;
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = 0xE000000000000000;
      v3 = v9;
      v4 = v1;
LABEL_10:
      v5.super.isa = v2;
      v6 = 0;
      v7 = 0xE000000000000000;
      v8 = 0;
LABEL_11:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

uint64_t sub_1059B0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t countAndFlagsBits;
  id v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  unint64_t v10;

  v1 = v0[1];
  if (v1 >= 5)
  {
    if (v1 == 5)
    {
      v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v10 = 0xE000000000000000;
      v4 = 0x800000000030D9F0;
      v5 = 0xD000000000000018;
    }
    else
    {
      countAndFlagsBits = v0[2];
      v6 = v0[3];
      if (!v6)
        return countAndFlagsBits;
      v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v10 = 0xE000000000000000;
      v5 = countAndFlagsBits;
      v4 = v6;
    }
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v8 = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, (NSBundle)v3, v7, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return 0;
}

void sub_105ADC(char a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for HUDViewController();
  objc_msgSendSuper2(&v18, "viewDidAppear:", a1 & 1);
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_382368, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v16 = sub_1075B8;
  v17 = v4;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_24360;
  v15 = &block_descriptor_18;
  v5 = _Block_copy(&v12);
  v6 = v17;
  v7 = v1;
  swift_release(v6);
  v8 = swift_allocObject(&unk_3823B8, 24, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v16 = sub_1075D8;
  v17 = v8;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1E3D64;
  v15 = &block_descriptor_6_3;
  v9 = _Block_copy(&v12);
  v10 = v17;
  v11 = v7;
  swift_release(v10);
  objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 131074, v5, v9, 0.2, 0.0);
  _Block_release(v9);
  _Block_release(v5);
}

void sub_105C48()
{
  id v0;
  id v1;
  CGAffineTransform v2;

  v0 = sub_10716C();
  CGAffineTransformMakeScale(&v2, 1.0, 1.0);
  objc_msgSend(v0, "setTransform:", &v2);

  v1 = sub_10716C();
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_105CC8(uint64_t a1, char *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  if (*(_QWORD *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 8] == 2)
    sub_106C14();
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_382600, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v16 = sub_107D80;
  v17 = v4;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_24360;
  v15 = &block_descriptor_21_0;
  v5 = _Block_copy(&v12);
  v6 = v17;
  v7 = a2;
  swift_release(v6);
  v8 = swift_allocObject(&unk_382650, 24, 7);
  *(_QWORD *)(v8 + 16) = v7;
  v16 = sub_107D88;
  v17 = v8;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1E3D64;
  v15 = &block_descriptor_27_0;
  v9 = _Block_copy(&v12);
  v10 = v17;
  v11 = v7;
  swift_release(v10);
  objc_msgSend(v3, "animateWithDuration:delay:options:animations:completion:", 131074, v5, v9, 0.2, 1.5);
  _Block_release(v9);
  _Block_release(v5);
}

void sub_105E78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  double *v21;
  double v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  uint64_t v69;
  id v70;
  void *v71;
  double v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  double v89;
  id v90;
  uint64_t v91;
  __n128 v92;
  double v93;
  id v94;
  __n128 v95;
  void *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  id v102;
  id v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  id v112;
  double v113;
  double v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  double v118;
  double v119;
  double *v120;
  double v121;
  double v122;
  double v123;
  char *v124;
  double v125;
  double v126;
  double v127;
  double v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  _QWORD v133[3];
  objc_super v134;

  v1 = v0;
  v2 = type metadata accessor for CGRect.LayoutAxis(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v115 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v115 - v10;
  v12 = (objc_class *)type metadata accessor for HUDViewController();
  v134.receiver = v0;
  v134.super_class = v12;
  objc_msgSendSuper2(&v134, "viewDidLayoutSubviews");
  v13 = objc_msgSend(v0, "view");
  if (v13)
  {
    v14 = v13;
    v124 = v8;
    v129 = v5;
    objc_msgSend(v13, "bounds");
    v127 = v16;
    v128 = v15;
    v125 = v18;
    v126 = v17;

    v19 = objc_msgSend(v1, "traitCollection");
    v123 = UITraitCollection.safeDisplayScale.getter(v19);

    v20 = sub_10716C();
    v21 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration];
    v22 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration + 24];
    v122 = *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration + 16];
    objc_msgSend(v20, "setFrame:", 0.0, 0.0, v22);

    v23 = swift_allocObject(&unk_382408, 48, 7);
    v24 = sub_10716C();
    objc_msgSend(v24, "bounds");
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    v33 = v21[8];
    v34 = v21[9];
    v121 = v21[10];
    v36 = UIEdgeInsetsInsetRect(v26, v28, v30, v32, v33, v34);
    v118 = v37;
    *(double *)(v23 + 16) = v36;
    *(_QWORD *)(v23 + 32) = v38;
    v117 = *(id *)v21;
    v120 = v21;
    v131 = *((char **)v21 + 1);
    v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_type + 8];
    if (v39 >= 2)
      v40 = 19.0;
    else
      v40 = 0.0;
    v119 = v35;
    v41 = v35 + v40;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6AA8);
    v43 = *(_QWORD *)(v3 + 72);
    v130 = v3;
    v44 = swift_allocObject(v42, ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v43, *(unsigned __int8 *)(v3 + 80) | 7);
    *(_OWORD *)(v44 + 16) = xmmword_2F03C0;
    static CGRect.LayoutAxis.horizontal.getter();
    v133[0] = v44;
    v45 = sub_107D40(&qword_3D6AB0, (uint64_t)&protocol conformance descriptor for CGRect.LayoutAxis);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6AB8);
    v47 = sub_1075F0();
    v132 = v2;
    dispatch thunk of SetAlgebra.init<A>(_:)(v133, v46, v47, v2, v45);
    v48 = sub_10716C();
    objc_msgSend(v48, "bounds");
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v55;

    v57 = objc_msgSend(v1, "traitCollection");
    v58 = UITraitCollection.safeDisplayScale.getter(v57);

    v114 = *(double *)&v131;
    v131 = v11;
    v59 = CGRect.centeringAlong(axes:bounds:scale:)(v11, v50, v52, v54, v56, v58, v36, v41, *(double *)&v117, v114);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    if (v39 <= 1)
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView], "setContentMode:", 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView], "setFrame:", v59, v61, v63, v65);
    *(double *)(v23 + 24) = v119 + v40 + v65;
    *(double *)(v23 + 40) = v118 - (v40 + v65);
    v66 = swift_allocObject(&unk_382430, 24, 7);
    v116 = v66;
    v67 = v23;
    *(_QWORD *)(v66 + 16) = 0;
    v68 = (double *)(v66 + 16);
    *(double *)&v69 = COERCE_DOUBLE(swift_allocObject(&unk_382458, 32, 7));
    *(_QWORD *)(v69 + 16) = 0;
    *(_BYTE *)(v69 + 24) = 1;
    v70 = objc_msgSend(v1, "traitCollection");
    v71 = (void *)objc_opt_self(MTMPUFontDescriptor);
    v72 = COERCE_DOUBLE(objc_msgSend(v71, "fontDescriptorWithSystemFontSize:weight:", 3, 22.0));

    v73 = objc_msgSend(v1, "traitCollection");
    v74 = objc_msgSend(v71, "fontDescriptorWithSystemFontSize:weight:", 5, 16.0);

    v75 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel;
    v76 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel];
    v119 = v72;
    v77 = objc_msgSend(*(id *)&v72, "preferredFont");
    objc_msgSend(v76, "setFont:", v77);

    v78 = *(id *)&v1[v75];
    objc_msgSend(*(id *)&v72, "scaledValueForValue:", 18.0);
    v79 = v67;
    v80 = v67;
    v81 = v123;
    v82 = v69;
    v118 = *(double *)&v69;
    v83 = v116;
    sub_10765C(v78, v80, v69, v116, v84, v123);

    v85 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel;
    v86 = *(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel];
    v117 = v74;
    v87 = objc_msgSend(v74, "preferredFont");
    objc_msgSend(v86, "setFont:", v87);

    v88 = *(id *)&v1[v85];
    objc_msgSend(v74, "scaledValueForValue:", 25.0);
    sub_10765C(v88, v79, v82, v83, v89, v81);

    v90 = sub_10716C();
    swift_beginAccess(v68, v133, 0, 0);
    if (v122 >= v121 + *v68)
      v93 = v121 + *v68;
    else
      v93 = v122;
    v92.n128_f64[0] = v93;
    CGFloat.ceilingValue(scale:)(v91, v81, v92);
    objc_msgSend(v90, "bounds");
    objc_msgSend(v90, "setBounds:");

    v94 = sub_10716C();
    v96 = v94;
    if (v93 > v120[4])
      v95.n128_f64[0] = v93;
    else
      v95.n128_f64[0] = v120[4];
    CGFloat.ceilingValue(scale:)(v94, v81, v95);
    objc_msgSend(v96, "bounds");
    objc_msgSend(v96, "setBounds:");

    v97 = (uint64_t)v129;
    static CGRect.LayoutAxis.vertical.getter();
    v98 = v124;
    v99 = v131;
    sub_106668(v124, v97);
    v100 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
    v101 = v132;
    v100(v97, v132);
    v100((uint64_t)v98, v101);
    v102 = sub_10716C();
    v103 = sub_10716C();
    objc_msgSend(v103, "frame");
    v105 = v104;
    v107 = v106;
    v109 = v108;
    v111 = v110;

    v112 = objc_msgSend(v1, "traitCollection");
    v113 = UITraitCollection.safeDisplayScale.getter(v112);

    objc_msgSend(v102, "setFrame:", CGRect.centeringAlong(axes:bounds:scale:)(v99, v128, v127, v126, v125, v113, v105, v107, v109, v111));
    v100((uint64_t)v99, v101);
    swift_release(v79);
    swift_release(v83);
    swift_release(*(_QWORD *)&v118);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_106668(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;

  v31 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6AF0);
  __chkstk_darwin(v4);
  v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  v9 = type metadata accessor for CGRect.LayoutAxis(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v28 = v2;
  v17(v12, v2, v9, v14);
  v18 = sub_107D40(&qword_3D6AB0, (uint64_t)&protocol conformance descriptor for CGRect.LayoutAxis);
  dispatch thunk of SetAlgebra.intersection(_:)(a2, v9, v18);
  v19 = sub_107D40(&qword_3D6AF8, (uint64_t)&protocol conformance descriptor for CGRect.LayoutAxis);
  v27 = a2;
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v16, a2, v9, v19) ^ 1;
  v30 = v4;
  v21 = &v8[*(int *)(v4 + 48)];
  *v8 = v20 & 1;
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v23 = v27;
    ((void (*)(char *, uint64_t, uint64_t))v17)(v21, v27, v9);
    ((void (*)(char *, uint64_t, uint64_t))v17)(v12, v23, v9);
    dispatch thunk of SetAlgebra.formUnion(_:)(v12, v9, v18);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v21, v16, v9);
  }
  v24 = &v29[*(int *)(v30 + 48)];
  v22(v24, v21, v9);
  v22(v31, v24, v9);
  return v20 & 1;
}

void sub_1068BC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = objc_msgSend(objc_allocWithZone((Class)MPModalPresentationWindow), "init");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_presentationWindow);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_presentationWindow) = v1;
  v3 = v1;

  objc_msgSend(v3, "setHidden:", 0);
  objc_msgSend(v3, "setUserInteractionEnabled:", 0);
  v4 = (void *)objc_opt_self(UIApplication);
  v8 = v3;
  v5 = objc_msgSend(v4, "sharedApplication");
  v6 = objc_msgSend(v5, "delegate");

  if (v6)
  {
    if ((objc_msgSend(v6, "respondsToSelector:", "window") & 1) != 0)
    {
      v7 = objc_msgSend(v6, "window");
      v6 = objc_msgSend(v7, "windowScene", swift_unknownObjectRelease(v6).n128_f64[0]);

    }
    else
    {
      swift_unknownObjectRelease(v6);
      v6 = 0;
    }
  }
  objc_msgSend(v8, "setWindowScene:", v6);

  objc_msgSend(v8, "presentViewController:animated:completion:", v0, 1, 0);
}

void sub_106A40(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  CGAffineTransform v9;

  v2 = sub_10716C();
  v3 = objc_msgSend(v2, "contentView");

  v4 = objc_msgSend(v3, "superview");
  if (v4)
  {
    objc_msgSend(v4, "setAlpha:", 0.0);

  }
  v5 = sub_10716C();
  v6 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = objc_msgSend(a1, "view");
  if (v7)
  {
    v8 = v7;
    CGAffineTransformMakeScale(&v9, 0.88, 0.88);
    objc_msgSend(v8, "setTransform:", &v9);

  }
  else
  {
    __break(1u);
  }
}

id sub_106B7C(int a1, id a2)
{
  id result;
  void *v4;
  CGAffineTransform v5;

  result = objc_msgSend(a2, "view");
  if (result)
  {
    v4 = result;
    CGAffineTransformMakeScale(&v5, 1.0, 1.0);
    objc_msgSend(v4, "setTransform:", &v5);

    return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_106C14()
{
  char *v0;
  id v1;
  id v2;
  double *v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  CGFloat v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  Class isa;
  Class v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  NSString v31;
  CATransform3D v32;

  v1 = sub_10716C();
  v2 = objc_msgSend(v1, "contentView");

  v3 = (double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration];
  v4 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration + 40];
  v5 = *(double *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration + 48];
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v6, "moveToPoint:", v4 + 42.5, v5 + 76.5);
  objc_msgSend(v6, "addLineToPoint:", v4 + 74.0, v5 + 104.5);
  objc_msgSend(v6, "addLineToPoint:", v4 + 131.5, v5 + 48.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  objc_msgSend(v2, "bounds");
  objc_msgSend(v7, "setFrame:");

  v8 = objc_msgSend(v6, "CGPath");
  objc_msgSend(v7, "setPath:", v8);

  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "clearColor");
  v11 = objc_msgSend(v10, "cgColor");
  v12 = v10;
  if (v11)
  {
    v13 = v11;
    objc_msgSend(v7, "setFillColor:", v13);

    v14 = objc_msgSend(v0, "traitCollection");
    LODWORD(v13) = objc_msgSend(v14, "userInterfaceStyle") == (char *)&dword_0 + 2;

    v15 = objc_msgSend(v9, "labelColor");
    v16 = objc_msgSend(v15, "colorWithAlphaComponent:", dbl_2F6B00[v13]);

    v17 = objc_retainAutorelease(v16);
    v18 = objc_msgSend(v17, "cgColor");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v7, "setStrokeColor:", v19);

      objc_msgSend(v7, "setLineWidth:", 9.0);
      objc_msgSend(v7, "setStrokeStart:", 0.0);
      objc_msgSend(v7, "setStrokeEnd:", 0.0);
      objc_msgSend(v7, "setLineCap:", kCALineCapRound);
      objc_msgSend(v7, "setLineJoin:", kCALineJoinRound);
      v20 = v3[7];
      v21 = v7;
      CATransform3DMakeScale(&v32, v20, v20, v20);
      objc_msgSend(v21, "setTransform:", &v32);

      v22 = objc_msgSend(v2, "layer");
      objc_msgSend(v22, "addSublayer:", v21);

      objc_msgSend(v21, "setStrokeEnd:", 1.0);
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v23);

      objc_msgSend(v24, "setDuration:", 0.26);
      objc_msgSend(v24, "setFillMode:", kCAFillModeBoth);
      isa = Double._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v24, "setFromValue:", isa);

      v26 = Double._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v24, "setToValue:", v26);

      objc_msgSend(v24, "setRemovedOnCompletion:", 0);
      v27 = (void *)objc_opt_self(CAMediaTimingFunction);
      v28 = v24;
      v29 = objc_msgSend(v27, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
      objc_msgSend(v28, "setTimingFunction:", v29);

      LODWORD(v30) = 1.0;
      objc_msgSend(v28, "setRepeatCount:", v30);
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "addAnimation:forKey:", v28, v31);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10716C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController____lazy_storage___HUDView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController____lazy_storage___HUDView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController____lazy_storage___HUDView];
  }
  else
  {
    v4 = objc_msgSend(v0, "traitCollection");
    v5 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1200);

    v6 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v5);
    objc_msgSend(v6, "setClipsToBounds:", 1);
    objc_msgSend(v6, "_setContinuousCornerRadius:", 9.0);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_107258(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for HUDViewController();
  objc_msgSendSuper2(&v6, "traitCollectionDidChange:", a1);
  v3 = sub_10716C();
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1200);

  objc_msgSend(v3, "setEffect:", v5);
}

void HUDViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.HUDViewController", 41, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id HUDViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HUDViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void _s23ShelfKitCollectionViews17HUDViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_configuration];
  *(_OWORD *)v1 = xmmword_2F6AB0;
  *((_OWORD *)v1 + 1) = xmmword_2F6AC0;
  *((_OWORD *)v1 + 2) = xmmword_2F6AD0;
  *((_OWORD *)v1 + 3) = xmmword_2F6AE0;
  __asm { FMOV            V1.2D, #25.0 }
  *((_OWORD *)v1 + 4) = xmmword_2F6AF0;
  *((_OWORD *)v1 + 5) = _Q1;
  v7 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_primaryLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_secondaryLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_imageView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController_presentationWindow] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17HUDViewController____lazy_storage___HUDView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/HUDViewController.swift", 47, 2, 33, 0);
  __break(1u);
}

uint64_t sub_107594()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1075B8()
{
  sub_105C48();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1075D8(uint64_t a1)
{
  uint64_t v1;

  sub_105CC8(a1, *(char **)(v1 + 16));
}

uint64_t sub_1075E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1075F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6AC0;
  if (!qword_3D6AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6AB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3D6AC0);
  }
  return result;
}

uint64_t sub_10763C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10764C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10765C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11;
  double *v12;
  id v13;
  double v14;
  double v15;
  id v16;
  __n128 v17;
  double v18;
  double MinX;
  double v20;
  double v21;
  id v22;
  double v23;
  __n128 v24;
  double Height;
  CGFloat v26;
  double v27;
  double v28;
  double MaxY;
  double v30;
  double v31;
  CGFloat v32;
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v11 = a2 + 16;
  v12 = (double *)(a3 + 16);
  v13 = a1;
  objc_msgSend(v13, "frame");
  swift_beginAccess(v11, v41, 0, 0);
  v14 = *(double *)(a2 + 32);
  v15 = *(double *)(a2 + 40);
  v16 = objc_msgSend(v13, "sizeThatFits:", v14, v15);
  if (v15 < v17.n128_f64[0])
    v17.n128_f64[0] = v15;
  v18 = CGFloat.ceilingValue(scale:)(v16, a6, v17);
  swift_beginAccess(v11, v40, 0, 0);
  MinX = CGRectGetMinX(*(CGRect *)(a2 + 16));
  swift_beginAccess(v12, v39, 0, 0);
  if ((*(_BYTE *)(a3 + 24) & 1) != 0)
  {
    swift_beginAccess(v11, v38, 0, 0);
    v20 = CGRectGetMinY(*(CGRect *)(a2 + 16)) + a5;
  }
  else
  {
    v21 = *v12 + a5;
    v22 = objc_msgSend(v13, "_firstBaselineOffsetFromTop");
    v24.n128_f64[0] = v21 - v23;
    v20 = CGFloat.ceilingValue(scale:)(v22, a6, v24);
  }
  objc_msgSend(v13, "setFrame:", MinX, v20, v14, v18);
  v42.origin.x = MinX;
  v42.origin.y = v20;
  v42.size.width = v14;
  v42.size.height = v18;
  Height = CGRectGetHeight(v42);
  swift_beginAccess(v11, v37, 1, 0);
  v26 = *(double *)(a2 + 40) - Height;
  *(CGFloat *)(a2 + 40) = v26;
  swift_beginAccess(v11, v36, 0, 0);
  v43.origin.x = *(CGFloat *)(a2 + 16);
  v43.origin.y = *(CGFloat *)(a2 + 24);
  v43.size.width = *(CGFloat *)(a2 + 32);
  v43.size.height = v26;
  v27 = CGRectGetHeight(v43);
  if (v27 > 0.0)
    v28 = v27;
  else
    v28 = 0.0;
  swift_beginAccess(v11, v35, 1, 0);
  *(double *)(a2 + 40) = v28;
  v44.origin.x = MinX;
  v44.origin.y = v20;
  v44.size.width = v14;
  v44.size.height = v18;
  MaxY = CGRectGetMaxY(v44);
  objc_msgSend(v13, "_baselineOffsetFromBottom");
  v31 = MaxY - v30;
  swift_beginAccess(v12, v34, 1, 0);
  *(double *)(a3 + 16) = v31;
  *(_BYTE *)(a3 + 24) = 0;
  v45.origin.x = MinX;
  v45.origin.y = v20;
  v45.size.width = v14;
  v45.size.height = v18;
  v32 = CGRectGetMaxY(v45);

  swift_beginAccess(a4 + 16, v33, 1, 0);
  *(CGFloat *)(a4 + 16) = v32;
}

uint64_t method lookup function for HUDViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for HUDViewController);
}

uint64_t dispatch thunk of SidebarMenuController.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of EpisodePlayProgressView.progressColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

void destroy for HUDViewController.HUDType(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  }
}

uint64_t initializeWithCopy for HUDViewController.HUDType(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v5;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v4);
    v6 = v5;
  }
  return a1;
}

uint64_t assignWithCopy for HUDViewController.HUDType(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *a2;
      v12 = a2[1];
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = a2[2];
      v13 = a2[3];
      *(_QWORD *)(a1 + 24) = v13;
      v14 = (void *)a2[4];
      *(_QWORD *)(a1 + 32) = v14;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v15 = v14;
      return a1;
    }
LABEL_7:
    v16 = *(_OWORD *)a2;
    v17 = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)a1 = v16;
    *(_OWORD *)(a1 + 16) = v17;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

    goto LABEL_7;
  }
  *(_QWORD *)a1 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = a2[2];
  v7 = a2[3];
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 32);
  v10 = (void *)a2[4];
  *(_QWORD *)(a1 + 32) = v10;
  v11 = v10;

  return a1;
}

uint64_t assignWithTake for HUDViewController.HUDType(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  __int128 v7;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for HUDViewController.HUDType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HUDViewController.HUDType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 5;
  }
  return result;
}

uint64_t sub_107C14(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_107C2C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HUDViewController.HUDType()
{
  return &type metadata for HUDViewController.HUDType;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for DefaultHUDConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DefaultHUDConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DefaultHUDConfiguration()
{
  return &type metadata for DefaultHUDConfiguration;
}

void sub_107CF8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 >= 6)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);

  }
}

uint64_t sub_107D40(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CGRect.LayoutAxis(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_107D80()
{
  uint64_t v0;

  sub_106A40(*(void **)(v0 + 16));
}

id sub_107D88(int a1)
{
  uint64_t v1;

  return sub_106B7C(a1, *(id *)(v1 + 16));
}

_QWORD *sub_107DB4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  int v23;
  id v24;
  id *v25;
  int v26;
  id v27;
  id *v28;
  int v29;
  id v30;
  id *v31;
  int v32;
  id v33;
  id *v34;
  int v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for ArtworkModel(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *, __n128))(v13 + 48);
    v15 = swift_retain(v7);
    if (v14(v11, 1, v12, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v11[1];
      *v10 = *v11;
      v10[1] = v18;
      v19 = *((unsigned __int8 *)v11 + 32);
      swift_bridgeObjectRetain(v18);
      if (v19 == 255)
      {
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        *((_BYTE *)v10 + 32) = *((_BYTE *)v11 + 32);
      }
      else
      {
        v20 = v11[2];
        v21 = v11[3];
        sub_108110(v20, v21, v19);
        v10[2] = v20;
        v10[3] = v21;
        *((_BYTE *)v10 + 32) = v19;
      }
      *(_OWORD *)(v10 + 5) = *(_OWORD *)(v11 + 5);
      v22 = (id *)(v11 + 7);
      v23 = *((unsigned __int8 *)v11 + 64);
      if (v23 == 255)
      {
        v10[7] = *v22;
        *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      }
      else
      {
        v24 = *v22;
        sub_27F80(*v22, *((_BYTE *)v11 + 64));
        v10[7] = v24;
        *((_BYTE *)v10 + 64) = v23;
      }
      v25 = (id *)(v11 + 9);
      v26 = *((unsigned __int8 *)v11 + 80);
      if (v26 == 255)
      {
        v10[9] = *v25;
        *((_BYTE *)v10 + 80) = *((_BYTE *)v11 + 80);
      }
      else
      {
        v27 = *v25;
        sub_27F80(*v25, *((_BYTE *)v11 + 80));
        v10[9] = v27;
        *((_BYTE *)v10 + 80) = v26;
      }
      v28 = (id *)(v11 + 11);
      v29 = *((unsigned __int8 *)v11 + 96);
      if (v29 == 255)
      {
        v10[11] = *v28;
        *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      }
      else
      {
        v30 = *v28;
        sub_27F80(*v28, *((_BYTE *)v11 + 96));
        v10[11] = v30;
        *((_BYTE *)v10 + 96) = v29;
      }
      v31 = (id *)(v11 + 13);
      v32 = *((unsigned __int8 *)v11 + 112);
      if (v32 == 255)
      {
        v10[13] = *v31;
        *((_BYTE *)v10 + 112) = *((_BYTE *)v11 + 112);
      }
      else
      {
        v33 = *v31;
        sub_27F80(*v31, *((_BYTE *)v11 + 112));
        v10[13] = v33;
        *((_BYTE *)v10 + 112) = v32;
      }
      v34 = (id *)(v11 + 15);
      v35 = *((unsigned __int8 *)v11 + 128);
      if (v35 == 255)
      {
        v10[15] = *v34;
        *((_BYTE *)v10 + 128) = *((_BYTE *)v11 + 128);
      }
      else
      {
        v36 = *v34;
        sub_27F80(*v34, *((_BYTE *)v11 + 128));
        v10[15] = v36;
        *((_BYTE *)v10 + 128) = v35;
      }
      *((_BYTE *)v10 + 129) = *((_BYTE *)v11 + 129);
      v37 = v12[11];
      v38 = (char *)v10 + v37;
      v39 = (char *)v11 + v37;
      v40 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v41 = v12[12];
      v42 = (_QWORD *)((char *)v10 + v41);
      v43 = (_QWORD *)((char *)v11 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *((_BYTE *)v10 + v12[13]) = *((_BYTE *)v11 + v12[13]);
      *((_BYTE *)v10 + v12[14]) = *((_BYTE *)v11 + v12[14]);
      *((_BYTE *)v10 + v12[15]) = *((_BYTE *)v11 + v12[15]);
      v45 = v12[16];
      v46 = (_QWORD *)((char *)v10 + v45);
      v47 = (_QWORD *)((char *)v11 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v13 + 56);
      swift_bridgeObjectRetain(v44);
      v50 = swift_bridgeObjectRetain(v48);
      v49(v10, 0, 1, v12, v50);
    }
    v51 = a3[6];
    v52 = a3[7];
    v53 = (_QWORD *)((char *)v4 + v51);
    v54 = (uint64_t *)((char *)a2 + v51);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = (_QWORD *)((char *)v4 + v52);
    v57 = (uint64_t *)((char *)a2 + v52);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v58);
  }
  return v4;
}

uint64_t sub_108110(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

double sub_108128(_QWORD *a1, int *a2)
{
  char *v4;
  int *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char *v12;
  uint64_t v13;
  double result;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = (int *)type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease(*((_QWORD *)v4 + 1));
    v6 = v4[32];
    if (v6 != 255)
      sub_108270(*((_QWORD *)v4 + 2), *((_QWORD *)v4 + 3), v6);
    v7 = v4[64];
    if (v7 != 255)
      sub_27FA8(*((id *)v4 + 7), v7);
    v8 = v4[80];
    if (v8 != 255)
      sub_27FA8(*((id *)v4 + 9), v8);
    v9 = v4[96];
    if (v9 != 255)
      sub_27FA8(*((id *)v4 + 11), v9);
    v10 = v4[112];
    if (v10 != 255)
      sub_27FA8(*((id *)v4 + 13), v10);
    v11 = v4[128];
    if (v11 != 255)
      sub_27FA8(*((id *)v4 + 15), v11);
    v12 = &v4[v5[11]];
    v13 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[12] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[16] + 8]);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_108270(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_108288(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  int v21;
  id v22;
  id *v23;
  int v24;
  id v25;
  id *v26;
  int v27;
  id v28;
  id *v29;
  int v30;
  id v31;
  id *v32;
  int v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *, __n128))(v12 + 48);
  v14 = swift_retain(v6);
  if (v13(v10, 1, v11, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v10[1];
    *v9 = *v10;
    v9[1] = v16;
    v17 = *((unsigned __int8 *)v10 + 32);
    swift_bridgeObjectRetain(v16);
    if (v17 == 255)
    {
      *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
      *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
    }
    else
    {
      v18 = v10[2];
      v19 = v10[3];
      sub_108110(v18, v19, v17);
      v9[2] = v18;
      v9[3] = v19;
      *((_BYTE *)v9 + 32) = v17;
    }
    *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
    v20 = (id *)(v10 + 7);
    v21 = *((unsigned __int8 *)v10 + 64);
    if (v21 == 255)
    {
      v9[7] = *v20;
      *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    }
    else
    {
      v22 = *v20;
      sub_27F80(*v20, *((_BYTE *)v10 + 64));
      v9[7] = v22;
      *((_BYTE *)v9 + 64) = v21;
    }
    v23 = (id *)(v10 + 9);
    v24 = *((unsigned __int8 *)v10 + 80);
    if (v24 == 255)
    {
      v9[9] = *v23;
      *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
    }
    else
    {
      v25 = *v23;
      sub_27F80(*v23, *((_BYTE *)v10 + 80));
      v9[9] = v25;
      *((_BYTE *)v9 + 80) = v24;
    }
    v26 = (id *)(v10 + 11);
    v27 = *((unsigned __int8 *)v10 + 96);
    if (v27 == 255)
    {
      v9[11] = *v26;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    }
    else
    {
      v28 = *v26;
      sub_27F80(*v26, *((_BYTE *)v10 + 96));
      v9[11] = v28;
      *((_BYTE *)v9 + 96) = v27;
    }
    v29 = (id *)(v10 + 13);
    v30 = *((unsigned __int8 *)v10 + 112);
    if (v30 == 255)
    {
      v9[13] = *v29;
      *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
    }
    else
    {
      v31 = *v29;
      sub_27F80(*v29, *((_BYTE *)v10 + 112));
      v9[13] = v31;
      *((_BYTE *)v9 + 112) = v30;
    }
    v32 = (id *)(v10 + 15);
    v33 = *((unsigned __int8 *)v10 + 128);
    if (v33 == 255)
    {
      v9[15] = *v32;
      *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
    }
    else
    {
      v34 = *v32;
      sub_27F80(*v32, *((_BYTE *)v10 + 128));
      v9[15] = v34;
      *((_BYTE *)v9 + 128) = v33;
    }
    *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
    v35 = v11[11];
    v36 = (char *)v9 + v35;
    v37 = (char *)v10 + v35;
    v38 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v11[12];
    v40 = (_QWORD *)((char *)v9 + v39);
    v41 = (_QWORD *)((char *)v10 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
    *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
    *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
    v43 = v11[16];
    v44 = (_QWORD *)((char *)v9 + v43);
    v45 = (_QWORD *)((char *)v10 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v12 + 56);
    swift_bridgeObjectRetain(v42);
    v48 = swift_bridgeObjectRetain(v46);
    v47(v9, 0, 1, v11, v48);
  }
  v49 = a3[6];
  v50 = a3[7];
  v51 = (_QWORD *)(a1 + v49);
  v52 = (uint64_t *)((char *)a2 + v49);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = (_QWORD *)(a1 + v50);
  v55 = (uint64_t *)((char *)a2 + v50);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v56);
  return a1;
}

uint64_t *sub_1085B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  __int128 v32;
  id *v33;
  int v34;
  id v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  id *v49;
  int v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void (*v65)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  id *v71;
  id *v72;
  int v73;
  id v74;
  void *v75;
  char v76;
  id v77;
  char v78;
  id v79;
  id *v80;
  id *v81;
  int v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  char v87;
  id v88;
  id *v89;
  id *v90;
  int v91;
  id v92;
  void *v93;
  char v94;
  id v95;
  char v96;
  id v97;
  id *v98;
  id *v99;
  int v100;
  id v101;
  void *v102;
  char v103;
  id v104;
  char v105;
  id v106;
  id *v107;
  id *v108;
  int v109;
  id v110;
  void *v111;
  char v112;
  id v113;
  char v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v7;
  swift_retain(v6);
  swift_release(v8);
  v9 = a3[5];
  v10 = (uint64_t)a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = (int *)type metadata accessor for ArtworkModel(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v17 = *(_QWORD *)(v11 + 8);
      *(_QWORD *)(v10 + 8) = v17;
      v18 = *(unsigned __int8 *)(v11 + 32);
      swift_bridgeObjectRetain(v17);
      if (v18 == 255)
      {
        v32 = *(_OWORD *)(v11 + 16);
        *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
        *(_OWORD *)(v10 + 16) = v32;
      }
      else
      {
        v19 = *(_QWORD *)(v11 + 16);
        v20 = *(_QWORD *)(v11 + 24);
        sub_108110(v19, v20, v18);
        *(_QWORD *)(v10 + 16) = v19;
        *(_QWORD *)(v10 + 24) = v20;
        *(_BYTE *)(v10 + 32) = v18;
      }
      *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
      *(_QWORD *)(v10 + 48) = *(_QWORD *)(v11 + 48);
      v33 = (id *)(v11 + 56);
      v34 = *(unsigned __int8 *)(v11 + 64);
      if (v34 == 255)
      {
        v36 = *v33;
        *(_BYTE *)(v10 + 64) = *(_BYTE *)(v11 + 64);
        *(_QWORD *)(v10 + 56) = v36;
      }
      else
      {
        v35 = *v33;
        sub_27F80(*v33, *(_BYTE *)(v11 + 64));
        *(_QWORD *)(v10 + 56) = v35;
        *(_BYTE *)(v10 + 64) = v34;
      }
      v37 = (id *)(v11 + 72);
      v38 = *(unsigned __int8 *)(v11 + 80);
      if (v38 == 255)
      {
        v40 = *v37;
        *(_BYTE *)(v10 + 80) = *(_BYTE *)(v11 + 80);
        *(_QWORD *)(v10 + 72) = v40;
      }
      else
      {
        v39 = *v37;
        sub_27F80(*v37, *(_BYTE *)(v11 + 80));
        *(_QWORD *)(v10 + 72) = v39;
        *(_BYTE *)(v10 + 80) = v38;
      }
      v41 = (id *)(v11 + 88);
      v42 = *(unsigned __int8 *)(v11 + 96);
      if (v42 == 255)
      {
        v44 = *v41;
        *(_BYTE *)(v10 + 96) = *(_BYTE *)(v11 + 96);
        *(_QWORD *)(v10 + 88) = v44;
      }
      else
      {
        v43 = *v41;
        sub_27F80(*v41, *(_BYTE *)(v11 + 96));
        *(_QWORD *)(v10 + 88) = v43;
        *(_BYTE *)(v10 + 96) = v42;
      }
      v45 = (id *)(v11 + 104);
      v46 = *(unsigned __int8 *)(v11 + 112);
      if (v46 == 255)
      {
        v48 = *v45;
        *(_BYTE *)(v10 + 112) = *(_BYTE *)(v11 + 112);
        *(_QWORD *)(v10 + 104) = v48;
      }
      else
      {
        v47 = *v45;
        sub_27F80(*v45, *(_BYTE *)(v11 + 112));
        *(_QWORD *)(v10 + 104) = v47;
        *(_BYTE *)(v10 + 112) = v46;
      }
      v49 = (id *)(v11 + 120);
      v50 = *(unsigned __int8 *)(v11 + 128);
      if (v50 == 255)
      {
        v52 = *v49;
        *(_BYTE *)(v10 + 128) = *(_BYTE *)(v11 + 128);
        *(_QWORD *)(v10 + 120) = v52;
      }
      else
      {
        v51 = *v49;
        sub_27F80(*v49, *(_BYTE *)(v11 + 128));
        *(_QWORD *)(v10 + 120) = v51;
        *(_BYTE *)(v10 + 128) = v50;
      }
      *(_BYTE *)(v10 + 129) = *(_BYTE *)(v11 + 129);
      v53 = v12[11];
      v54 = v10 + v53;
      v55 = v11 + v53;
      v56 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
      v57 = v12[12];
      v58 = (_QWORD *)(v10 + v57);
      v59 = (_QWORD *)(v11 + v57);
      *v58 = *v59;
      v60 = v59[1];
      v58[1] = v60;
      *(_BYTE *)(v10 + v12[13]) = *(_BYTE *)(v11 + v12[13]);
      *(_BYTE *)(v10 + v12[14]) = *(_BYTE *)(v11 + v12[14]);
      *(_BYTE *)(v10 + v12[15]) = *(_BYTE *)(v11 + v12[15]);
      v61 = v12[16];
      v62 = (_QWORD *)(v10 + v61);
      v63 = (_QWORD *)(v11 + v61);
      *v62 = *v63;
      v64 = v63[1];
      v62[1] = v64;
      v65 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v13 + 56);
      swift_bridgeObjectRetain(v60);
      v66 = swift_bridgeObjectRetain(v64);
      v65(v10, 0, 1, v12, v66);
      goto LABEL_68;
    }
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_68;
  }
  if (v16)
  {
    sub_239C0(v10);
    goto LABEL_7;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v22 = *(_QWORD *)(v11 + 8);
  v23 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v10 + 8) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = (__int128 *)(v10 + 16);
  v25 = (__int128 *)(v11 + 16);
  v26 = *(unsigned __int8 *)(v11 + 32);
  if (*(unsigned __int8 *)(v10 + 32) == 255)
  {
    if (v26 == 255)
    {
      v70 = *v25;
      *(_BYTE *)(v10 + 32) = *(_BYTE *)(v11 + 32);
      *v24 = v70;
    }
    else
    {
      v67 = *(_QWORD *)(v11 + 16);
      v68 = *(_QWORD *)(v11 + 24);
      sub_108110(v67, v68, *(_BYTE *)(v11 + 32));
      *(_QWORD *)(v10 + 16) = v67;
      *(_QWORD *)(v10 + 24) = v68;
      *(_BYTE *)(v10 + 32) = v26;
    }
  }
  else if (v26 == 255)
  {
    sub_108DD8(v10 + 16);
    v69 = *(_BYTE *)(v11 + 32);
    *v24 = *v25;
    *(_BYTE *)(v10 + 32) = v69;
  }
  else
  {
    v27 = *(_QWORD *)(v11 + 16);
    v28 = *(_QWORD *)(v11 + 24);
    sub_108110(v27, v28, *(_BYTE *)(v11 + 32));
    v29 = *(_QWORD *)(v10 + 16);
    v30 = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 + 16) = v27;
    *(_QWORD *)(v10 + 24) = v28;
    v31 = *(_BYTE *)(v10 + 32);
    *(_BYTE *)(v10 + 32) = v26;
    sub_108270(v29, v30, v31);
  }
  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
  *(_QWORD *)(v10 + 48) = *(_QWORD *)(v11 + 48);
  v71 = (id *)(v10 + 56);
  v72 = (id *)(v11 + 56);
  v73 = *(unsigned __int8 *)(v11 + 64);
  if (*(unsigned __int8 *)(v10 + 64) == 255)
  {
    if (v73 == 255)
    {
      v79 = *v72;
      *(_BYTE *)(v10 + 64) = *(_BYTE *)(v11 + 64);
      *v71 = v79;
    }
    else
    {
      v77 = *v72;
      sub_27F80(*v72, *(_BYTE *)(v11 + 64));
      *(_QWORD *)(v10 + 56) = v77;
      *(_BYTE *)(v10 + 64) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_108E0C(v10 + 56);
    v78 = *(_BYTE *)(v11 + 64);
    *v71 = *v72;
    *(_BYTE *)(v10 + 64) = v78;
  }
  else
  {
    v74 = *v72;
    sub_27F80(*v72, *(_BYTE *)(v11 + 64));
    v75 = *(void **)(v10 + 56);
    *(_QWORD *)(v10 + 56) = v74;
    v76 = *(_BYTE *)(v10 + 64);
    *(_BYTE *)(v10 + 64) = v73;
    sub_27FA8(v75, v76);
  }
  v80 = (id *)(v10 + 72);
  v81 = (id *)(v11 + 72);
  v82 = *(unsigned __int8 *)(v11 + 80);
  if (*(unsigned __int8 *)(v10 + 80) == 255)
  {
    if (v82 == 255)
    {
      v88 = *v81;
      *(_BYTE *)(v10 + 80) = *(_BYTE *)(v11 + 80);
      *v80 = v88;
    }
    else
    {
      v86 = *v81;
      sub_27F80(*v81, *(_BYTE *)(v11 + 80));
      *(_QWORD *)(v10 + 72) = v86;
      *(_BYTE *)(v10 + 80) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_108E0C(v10 + 72);
    v87 = *(_BYTE *)(v11 + 80);
    *v80 = *v81;
    *(_BYTE *)(v10 + 80) = v87;
  }
  else
  {
    v83 = *v81;
    sub_27F80(*v81, *(_BYTE *)(v11 + 80));
    v84 = *(void **)(v10 + 72);
    *(_QWORD *)(v10 + 72) = v83;
    v85 = *(_BYTE *)(v10 + 80);
    *(_BYTE *)(v10 + 80) = v82;
    sub_27FA8(v84, v85);
  }
  v89 = (id *)(v10 + 88);
  v90 = (id *)(v11 + 88);
  v91 = *(unsigned __int8 *)(v11 + 96);
  if (*(unsigned __int8 *)(v10 + 96) == 255)
  {
    if (v91 == 255)
    {
      v97 = *v90;
      *(_BYTE *)(v10 + 96) = *(_BYTE *)(v11 + 96);
      *v89 = v97;
    }
    else
    {
      v95 = *v90;
      sub_27F80(*v90, *(_BYTE *)(v11 + 96));
      *(_QWORD *)(v10 + 88) = v95;
      *(_BYTE *)(v10 + 96) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_108E0C(v10 + 88);
    v96 = *(_BYTE *)(v11 + 96);
    *v89 = *v90;
    *(_BYTE *)(v10 + 96) = v96;
  }
  else
  {
    v92 = *v90;
    sub_27F80(*v90, *(_BYTE *)(v11 + 96));
    v93 = *(void **)(v10 + 88);
    *(_QWORD *)(v10 + 88) = v92;
    v94 = *(_BYTE *)(v10 + 96);
    *(_BYTE *)(v10 + 96) = v91;
    sub_27FA8(v93, v94);
  }
  v98 = (id *)(v10 + 104);
  v99 = (id *)(v11 + 104);
  v100 = *(unsigned __int8 *)(v11 + 112);
  if (*(unsigned __int8 *)(v10 + 112) == 255)
  {
    if (v100 == 255)
    {
      v106 = *v99;
      *(_BYTE *)(v10 + 112) = *(_BYTE *)(v11 + 112);
      *v98 = v106;
    }
    else
    {
      v104 = *v99;
      sub_27F80(*v99, *(_BYTE *)(v11 + 112));
      *(_QWORD *)(v10 + 104) = v104;
      *(_BYTE *)(v10 + 112) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_108E0C(v10 + 104);
    v105 = *(_BYTE *)(v11 + 112);
    *v98 = *v99;
    *(_BYTE *)(v10 + 112) = v105;
  }
  else
  {
    v101 = *v99;
    sub_27F80(*v99, *(_BYTE *)(v11 + 112));
    v102 = *(void **)(v10 + 104);
    *(_QWORD *)(v10 + 104) = v101;
    v103 = *(_BYTE *)(v10 + 112);
    *(_BYTE *)(v10 + 112) = v100;
    sub_27FA8(v102, v103);
  }
  v107 = (id *)(v10 + 120);
  v108 = (id *)(v11 + 120);
  v109 = *(unsigned __int8 *)(v11 + 128);
  if (*(unsigned __int8 *)(v10 + 128) == 255)
  {
    if (v109 == 255)
    {
      v115 = *v108;
      *(_BYTE *)(v10 + 128) = *(_BYTE *)(v11 + 128);
      *v107 = v115;
    }
    else
    {
      v113 = *v108;
      sub_27F80(*v108, *(_BYTE *)(v11 + 128));
      *(_QWORD *)(v10 + 120) = v113;
      *(_BYTE *)(v10 + 128) = v109;
    }
  }
  else if (v109 == 255)
  {
    sub_108E0C(v10 + 120);
    v114 = *(_BYTE *)(v11 + 128);
    *v107 = *v108;
    *(_BYTE *)(v10 + 128) = v114;
  }
  else
  {
    v110 = *v108;
    sub_27F80(*v108, *(_BYTE *)(v11 + 128));
    v111 = *(void **)(v10 + 120);
    *(_QWORD *)(v10 + 120) = v110;
    v112 = *(_BYTE *)(v10 + 128);
    *(_BYTE *)(v10 + 128) = v109;
    sub_27FA8(v111, v112);
  }
  *(_BYTE *)(v10 + 129) = *(_BYTE *)(v11 + 129);
  v116 = v12[11];
  v117 = v10 + v116;
  v118 = v11 + v116;
  v119 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 24))(v117, v118, v119);
  v120 = v12[12];
  v121 = (_QWORD *)(v10 + v120);
  v122 = (_QWORD *)(v11 + v120);
  *v121 = *v122;
  v123 = v122[1];
  v124 = v121[1];
  v121[1] = v123;
  swift_bridgeObjectRetain(v123);
  swift_bridgeObjectRelease(v124);
  *(_BYTE *)(v10 + v12[13]) = *(_BYTE *)(v11 + v12[13]);
  *(_BYTE *)(v10 + v12[14]) = *(_BYTE *)(v11 + v12[14]);
  *(_BYTE *)(v10 + v12[15]) = *(_BYTE *)(v11 + v12[15]);
  v125 = v12[16];
  v126 = (_QWORD *)(v10 + v125);
  v127 = (_QWORD *)(v11 + v125);
  *v126 = *v127;
  v128 = v127[1];
  v129 = v126[1];
  v126[1] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
LABEL_68:
  v130 = a3[6];
  v131 = (uint64_t *)((char *)a1 + v130);
  v132 = (uint64_t *)((char *)a2 + v130);
  *v131 = *v132;
  v133 = v132[1];
  v134 = v131[1];
  v131[1] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v135 = a3[7];
  v136 = (uint64_t *)((char *)a1 + v135);
  v137 = (uint64_t *)((char *)a2 + v135);
  *v136 = *v137;
  v138 = v137[1];
  v139 = v136[1];
  v136[1] = v138;
  swift_bridgeObjectRetain(v138);
  swift_bridgeObjectRelease(v139);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_108DD8(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for LibraryEntity - 1) + 8))();
  return a1;
}

uint64_t sub_108E0C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Color - 1) + 8))();
  return a1;
}

uint64_t sub_108E40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    *((_BYTE *)v7 + 64) = *((_BYTE *)v8 + 64);
    *(_OWORD *)((char *)v7 + 113) = *(_OWORD *)((char *)v8 + 113);
    *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
    *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
    *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
    *((_BYTE *)v7 + 129) = *((_BYTE *)v8 + 129);
    v13 = v9[11];
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
    *((_BYTE *)v7 + v9[13]) = *((_BYTE *)v8 + v9[13]);
    *((_BYTE *)v7 + v9[14]) = *((_BYTE *)v8 + v9[14]);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    *(_OWORD *)((char *)v7 + v9[16]) = *(_OWORD *)((char *)v8 + v9[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t *sub_108FE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  int v44;
  void *v45;
  _QWORD *v46;
  int v47;
  int v48;
  void *v49;
  _QWORD *v50;
  int v51;
  int v52;
  void *v53;
  _QWORD *v54;
  int v55;
  int v56;
  void *v57;
  _QWORD *v58;
  int v59;
  int v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v6 = *((_BYTE *)a2 + 8);
  v7 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v6;
  swift_release(v7);
  v8 = a3[5];
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = (int *)type metadata accessor for ArtworkModel(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_239C0(v9);
      goto LABEL_6;
    }
    v35 = *(_QWORD *)(v10 + 8);
    v36 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v35;
    swift_bridgeObjectRelease(v36);
    v37 = (_OWORD *)(v10 + 16);
    v38 = *(unsigned __int8 *)(v9 + 32);
    if (v38 != 255)
    {
      v39 = *(unsigned __int8 *)(v10 + 32);
      if (v39 != 255)
      {
        v40 = *(_QWORD *)(v9 + 16);
        v41 = *(_QWORD *)(v9 + 24);
        *(_OWORD *)(v9 + 16) = *v37;
        *(_BYTE *)(v9 + 32) = v39;
        sub_108270(v40, v41, v38);
        goto LABEL_13;
      }
      sub_108DD8(v9 + 16);
    }
    *(_OWORD *)(v9 + 16) = *v37;
    *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
LABEL_13:
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    v42 = (_QWORD *)(v10 + 56);
    v43 = *(unsigned __int8 *)(v9 + 64);
    if (v43 != 255)
    {
      v44 = *(unsigned __int8 *)(v10 + 64);
      if (v44 != 255)
      {
        v45 = *(void **)(v9 + 56);
        *(_QWORD *)(v9 + 56) = *v42;
        *(_BYTE *)(v9 + 64) = v44;
        sub_27FA8(v45, v43);
        goto LABEL_18;
      }
      sub_108E0C(v9 + 56);
    }
    *(_QWORD *)(v9 + 56) = *v42;
    *(_BYTE *)(v9 + 64) = *(_BYTE *)(v10 + 64);
LABEL_18:
    v46 = (_QWORD *)(v10 + 72);
    v47 = *(unsigned __int8 *)(v9 + 80);
    if (v47 != 255)
    {
      v48 = *(unsigned __int8 *)(v10 + 80);
      if (v48 != 255)
      {
        v49 = *(void **)(v9 + 72);
        *(_QWORD *)(v9 + 72) = *v46;
        *(_BYTE *)(v9 + 80) = v48;
        sub_27FA8(v49, v47);
        goto LABEL_23;
      }
      sub_108E0C(v9 + 72);
    }
    *(_QWORD *)(v9 + 72) = *v46;
    *(_BYTE *)(v9 + 80) = *(_BYTE *)(v10 + 80);
LABEL_23:
    v50 = (_QWORD *)(v10 + 88);
    v51 = *(unsigned __int8 *)(v9 + 96);
    if (v51 != 255)
    {
      v52 = *(unsigned __int8 *)(v10 + 96);
      if (v52 != 255)
      {
        v53 = *(void **)(v9 + 88);
        *(_QWORD *)(v9 + 88) = *v50;
        *(_BYTE *)(v9 + 96) = v52;
        sub_27FA8(v53, v51);
        goto LABEL_28;
      }
      sub_108E0C(v9 + 88);
    }
    *(_QWORD *)(v9 + 88) = *v50;
    *(_BYTE *)(v9 + 96) = *(_BYTE *)(v10 + 96);
LABEL_28:
    v54 = (_QWORD *)(v10 + 104);
    v55 = *(unsigned __int8 *)(v9 + 112);
    if (v55 != 255)
    {
      v56 = *(unsigned __int8 *)(v10 + 112);
      if (v56 != 255)
      {
        v57 = *(void **)(v9 + 104);
        *(_QWORD *)(v9 + 104) = *v54;
        *(_BYTE *)(v9 + 112) = v56;
        sub_27FA8(v57, v55);
        goto LABEL_33;
      }
      sub_108E0C(v9 + 104);
    }
    *(_QWORD *)(v9 + 104) = *v54;
    *(_BYTE *)(v9 + 112) = *(_BYTE *)(v10 + 112);
LABEL_33:
    v58 = (_QWORD *)(v10 + 120);
    v59 = *(unsigned __int8 *)(v9 + 128);
    if (v59 != 255)
    {
      v60 = *(unsigned __int8 *)(v10 + 128);
      if (v60 != 255)
      {
        v61 = *(void **)(v9 + 120);
        *(_QWORD *)(v9 + 120) = *v58;
        *(_BYTE *)(v9 + 128) = v60;
        sub_27FA8(v61, v59);
LABEL_38:
        *(_BYTE *)(v9 + 129) = *(_BYTE *)(v10 + 129);
        v62 = v11[11];
        v63 = v9 + v62;
        v64 = v10 + v62;
        v65 = type metadata accessor for ArtworkCrop(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 40))(v63, v64, v65);
        v66 = v11[12];
        v67 = (_QWORD *)(v9 + v66);
        v68 = (uint64_t *)(v10 + v66);
        v70 = *v68;
        v69 = v68[1];
        v71 = v67[1];
        *v67 = v70;
        v67[1] = v69;
        swift_bridgeObjectRelease(v71);
        *(_BYTE *)(v9 + v11[13]) = *(_BYTE *)(v10 + v11[13]);
        *(_BYTE *)(v9 + v11[14]) = *(_BYTE *)(v10 + v11[14]);
        *(_BYTE *)(v9 + v11[15]) = *(_BYTE *)(v10 + v11[15]);
        v72 = v11[16];
        v73 = (_QWORD *)(v9 + v72);
        v74 = (uint64_t *)(v10 + v72);
        v76 = *v74;
        v75 = v74[1];
        v77 = v73[1];
        *v73 = v76;
        v73[1] = v75;
        swift_bridgeObjectRelease(v77);
        goto LABEL_7;
      }
      sub_108E0C(v9 + 120);
    }
    *(_QWORD *)(v9 + 120) = *v58;
    *(_BYTE *)(v9 + 128) = *(_BYTE *)(v10 + 128);
    goto LABEL_38;
  }
  if (v15)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v16 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_BYTE *)(v9 + 64) = *(_BYTE *)(v10 + 64);
  *(_OWORD *)(v9 + 113) = *(_OWORD *)(v10 + 113);
  *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  *(_BYTE *)(v9 + 129) = *(_BYTE *)(v10 + 129);
  v17 = v11[11];
  v18 = v9 + v17;
  v19 = v10 + v17;
  v20 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_OWORD *)(v9 + v11[12]) = *(_OWORD *)(v10 + v11[12]);
  *(_BYTE *)(v9 + v11[13]) = *(_BYTE *)(v10 + v11[13]);
  *(_BYTE *)(v9 + v11[14]) = *(_BYTE *)(v10 + v11[14]);
  *(_BYTE *)(v9 + v11[15]) = *(_BYTE *)(v10 + v11[15]);
  *(_OWORD *)(v9 + v11[16]) = *(_OWORD *)(v10 + v11[16]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v22 = a3[6];
  v23 = (uint64_t *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v23[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease(v27);
  v28 = a3[7];
  v29 = (uint64_t *)((char *)a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  v33 = v29[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease(v33);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10945C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_109468);
}

uint64_t sub_109468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1094F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1094FC);
}

uint64_t sub_1094FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for StandardSearchResultView(uint64_t a1)
{
  uint64_t result;

  result = qword_3D6B58;
  if (!qword_3D6B58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StandardSearchResultView);
  return result;
}

void sub_1095BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\t";
  sub_27C58(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_2F6C38;
    v4[3] = &unk_2F6C38;
    v4[4] = &unk_2F6C50;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_109644(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32CFFC, 1);
}

uint64_t sub_109654()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  _DWORD v30[3];
  uint64_t v31;

  v1 = *v0;
  v2 = *((_BYTE *)v0 + 8);
  swift_retain(v1);
  v4 = sub_14A78(v3, v2);
  swift_release(v1);
  v5 = type metadata accessor for ExplicitContentPresenter(0);
  BaseObjectGraph.inject<A>(_:)(&v31, v5, v5);
  v6 = swift_release(v4);
  v7 = v31;
  v8 = ExplicitContentPresenter.symbolName.getter(v6);
  v10 = Image.init(systemName:)(v8, v9);
  v11 = Text.init(_:)(v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Font.caption2.getter();
  v20 = Text.font(_:)(v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_release(v18);
  sub_D170(v11, v13, v17);
  v27 = swift_bridgeObjectRelease(v15);
  v30[0] = static HierarchicalShapeStyle.secondary.getter(v27);
  v28 = Text.foregroundStyle<A>(_:)(v30, v20, v22, v24 & 1, v26, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  sub_D170(v20, v22, v24 & 1);
  swift_release(v7);
  swift_bridgeObjectRelease(v26);
  return v28;
}

uint64_t sub_1097B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = type metadata accessor for StandardSearchResultView(0);
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 24));
  v3 = v2[1];
  if (*(_BYTE *)(v0 + *(int *)(v1 + 32)) == 1)
  {
    v68 = *v2;
    v69 = v3;
    v4 = sub_D254();
    swift_bridgeObjectRetain(v3);
    v5 = Text.init<A>(_:)(&v68, &type metadata for String, v4);
    v7 = v6;
    v9 = v8;
    v11 = v10 & 1;
    v12 = static Font.subheadline.getter(v5);
    v14 = Text.font(_:)(v13);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_release(v12);
    sub_D170(v5, v7, v11);
    v21 = swift_bridgeObjectRelease(v9);
    LODWORD(v68) = static HierarchicalShapeStyle.primary.getter(v21);
    v22 = v20;
    v23 = Text.foregroundStyle<A>(_:)(&v68, v14, v16, v18 & 1, v20, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v25 = v24;
    v27 = v26;
    v29 = v28 & 1;
    sub_D170(v14, v16, v18 & 1);
    v30 = swift_bridgeObjectRelease(v22);
    v67 = static Text.+ infix(_:_:)(v23, v25, v29, v27, 32, 0xE100000000000000, 0, _swiftEmptyArrayStorage, v30);
    v65 = v31;
    v33 = v32;
    v35 = v34 & 1;
    v66 = v34 & 1;
    sub_D170(v23, v25, v29);
    swift_bridgeObjectRelease(v27);
    v36 = sub_109654();
    v38 = v37;
    v40 = v39;
    v42 = v41 & 1;
    v44 = static Text.+ infix(_:_:)(v67, v65, v35, v33, v36, v37, v42, v39, v43);
    sub_D170(v36, v38, v42);
    swift_bridgeObjectRelease(v40);
    sub_D170(v67, v65, v66);
    v45 = v33;
  }
  else
  {
    v68 = *v2;
    v69 = v3;
    v46 = sub_D254();
    swift_bridgeObjectRetain(v3);
    v47 = Text.init<A>(_:)(&v68, &type metadata for String, v46);
    v49 = v48;
    v51 = v50;
    v53 = v52 & 1;
    v54 = static Font.subheadline.getter(v47);
    v56 = Text.font(_:)(v55);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    swift_release(v54);
    sub_D170(v47, v49, v53);
    v63 = swift_bridgeObjectRelease(v51);
    LODWORD(v68) = static HierarchicalShapeStyle.primary.getter(v63);
    v44 = Text.foregroundStyle<A>(_:)(&v68, v56, v58, v60 & 1, v62, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    sub_D170(v56, v58, v60 & 1);
    v45 = v62;
  }
  swift_bridgeObjectRelease(v45);
  return v44;
}

uint64_t sub_109AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BA8);
  __chkstk_darwin(v3);
  v40 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v8 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v8);
  v10 = (_OWORD *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BB0);
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - v21;
  v23 = *(int *)(type metadata accessor for StandardSearchResultView(0) + 20);
  v41 = a1;
  sub_D184(a1 + v23, (uint64_t)v16, &qword_3D0A58);
  sub_D184((uint64_t)v16, (uint64_t)v13, &qword_3D0A58);
  if (qword_3CFCB0 != -1)
    swift_once(&qword_3CFCB0, sub_28E658);
  v24 = xmmword_3DF9D0;
  v25 = (char *)v10 + *(int *)(v8 + 20);
  v26 = enum case for RoundedCornerStyle.continuous(_:);
  v27 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  __asm { FMOV            V0.2D, #5.0 }
  *v10 = _Q0;
  sub_D1D4((uint64_t)v16, &qword_3D0A58);
  sub_D210((uint64_t)v13, (uint64_t)v22, &qword_3D0A58);
  *(_OWORD *)&v22[*(int *)(v17 + 36)] = v24;
  v33 = sub_10A2EC((uint64_t)v10, (uint64_t)&v22[*(int *)(v17 + 40)]);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v33);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BB8);
  sub_109DF4(v41, (uint64_t)&v7[*(int *)(v34 + 44)]);
  sub_D184((uint64_t)v22, (uint64_t)v19, &qword_3D6BB0);
  v35 = v40;
  sub_D184((uint64_t)v7, v40, &qword_3D6BA8);
  v36 = v42;
  sub_D184((uint64_t)v19, v42, &qword_3D6BB0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BC0);
  sub_D184(v35, v36 + *(int *)(v37 + 48), &qword_3D6BA8);
  sub_D1D4((uint64_t)v7, &qword_3D6BA8);
  sub_D1D4((uint64_t)v22, &qword_3D6BB0);
  sub_D1D4(v35, &qword_3D6BA8);
  return sub_D1D4((uint64_t)v19, &qword_3D6BB0);
}

uint64_t sub_109DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];

  v64 = a1;
  v68 = a2;
  v2 = type metadata accessor for PUITextStyle(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2);
  v65 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v61);
  v5 = (uint64_t *)((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BC8);
  __chkstk_darwin(v60);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BD0);
  __chkstk_darwin(v63);
  v69 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v62 = (uint64_t)&v58 - v14;
  v15 = sub_1097B4();
  v17 = v16;
  v59 = v18;
  v20 = v19 & 1;
  KeyPath = swift_getKeyPath(&unk_2F6CB8);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.small(_:), v6);
  v22 = swift_getKeyPath(&unk_2F6CE8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v61 + 28), v9, v6);
  *v5 = v22;
  sub_D184((uint64_t)v5, (uint64_t)&v11[*(int *)(v60 + 36)], &qword_3D2620);
  *(_QWORD *)v11 = v15;
  *((_QWORD *)v11 + 1) = v17;
  v11[16] = v20;
  v23 = v59;
  *((_QWORD *)v11 + 3) = v59;
  *((_QWORD *)v11 + 4) = KeyPath;
  *((_QWORD *)v11 + 5) = 2;
  v11[48] = 0;
  sub_D130(v15, v17, v20);
  swift_bridgeObjectRetain(v23);
  swift_retain(KeyPath);
  sub_D1D4((uint64_t)v5, &qword_3D2620);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_D170(v15, v17, v20);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v23);
  v24 = v69;
  sub_D184((uint64_t)v11, v69, &qword_3D6BC8);
  *(_WORD *)(v24 + *(int *)(v63 + 36)) = 256;
  sub_D1D4((uint64_t)v11, &qword_3D6BC8);
  v25 = v62;
  sub_D210(v24, v62, &qword_3D6BD0);
  v26 = (_QWORD *)(v64 + *(int *)(type metadata accessor for StandardSearchResultView(0) + 28));
  v27 = v26[1];
  v70[0] = *v26;
  v70[1] = v27;
  v28 = sub_D254();
  swift_bridgeObjectRetain(v27);
  v29 = Text.init<A>(_:)(v70, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v36 = v65;
  static PUITextStyle.subhead.getter(v29);
  v37 = Text.puiFont(_:)(v36, v29, v31, v35, v33);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  sub_D170(v29, v31, v35);
  v44 = swift_bridgeObjectRelease(v33);
  v45.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v66 + 8))(v36, v67, v44);
  v46 = static Color.secondary.getter(v45);
  v47 = Text.foregroundColor(_:)(v46, v37, v39, v43, v41);
  v49 = v48;
  LOBYTE(v36) = v50;
  v52 = v51;
  swift_release(v46);
  LOBYTE(v46) = v36 & 1;
  sub_D170(v37, v39, v43);
  swift_bridgeObjectRelease(v41);
  v53 = swift_getKeyPath(&unk_2F6CB8);
  v54 = v69;
  sub_D184(v25, v69, &qword_3D6BD0);
  v55 = v68;
  sub_D184(v54, v68, &qword_3D6BD0);
  v56 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D6BD8) + 48);
  *(_QWORD *)v56 = v47;
  *(_QWORD *)(v56 + 8) = v49;
  *(_BYTE *)(v56 + 16) = v46;
  *(_QWORD *)(v56 + 24) = v52;
  *(_QWORD *)(v56 + 32) = v53;
  *(_QWORD *)(v56 + 40) = 1;
  *(_BYTE *)(v56 + 48) = 0;
  sub_D130(v47, v49, v46);
  swift_bridgeObjectRetain(v52);
  swift_retain(v53);
  sub_D1D4(v25, &qword_3D6BD0);
  sub_D170(v47, v49, v46);
  swift_release(v53);
  swift_bridgeObjectRelease(v52);
  return sub_D1D4(v54, &qword_3D6BD0);
}

uint64_t sub_10A2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4024000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6BA0);
  return sub_109AC0(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10A2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10A344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6BE0;
  if (!qword_3D6BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D6BE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3D6BE0);
  }
  return result;
}

id sub_10A440(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  Class isa;
  id v13;

  v2 = IndexPath.section.getter(a1);
  v3 = AccountPresenter.accountSection(for:)(v2);
  if (v4 == 2 && v3 == 0)
  {
    v6 = type metadata accessor for TextInputCollectionViewCell();
  }
  else
  {
    sub_10A8B0(v3, v4);
    v6 = type metadata accessor for AccountDetailCollectionViewCell();
  }
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v6);
  v8 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v11, isa);

  return v13;
}

uint64_t type metadata accessor for AccountCollectionViewDataSource()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews31AccountCollectionViewDataSource);
}

id sub_10A72C(void *a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  NSString v18;
  uint64_t v19;
  objc_class *ObjCClassFromMetadata;
  NSString *v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  Class isa;
  id v26;

  IndexPath.safeSection.getter();
  if ((v6 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewTableHeaderFooterView), "init");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v7 == a2 && v8 == a3)
    goto LABEL_13;
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a2, a3, 0);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
    goto LABEL_14;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v12 == a2 && v13 == a3)
  {
LABEL_13:
    swift_bridgeObjectRelease(a3);
    goto LABEL_14;
  }
  v15 = v13;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a2, a3, 0);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionViewTableHeaderFooterView), "init");
LABEL_14:
  v18 = String._bridgeToObjectiveC()();
  v19 = type metadata accessor for AccountSectionSupplementaryView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v19);
  v21 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v26 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v18, v24, isa);

  return v26;
}

uint64_t sub_10A8B0(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t static UITableViewCell.defaultReuseIdentifier.getter()
{
  uint64_t v0;
  objc_class *ObjCClassFromMetadata;
  NSString *v2;
  uint64_t v3;

  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v0);
  v2 = NSStringFromClass(ObjCClassFromMetadata);
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t PPTViewControllerProxy.init(tabBarController:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];

  *a2 = a1;
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FlowTabBarControllerProtocol);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = a1;
  else
    v7 = 0;
  if (v7)
  {
    v8 = swift_getObjectType();
    v9 = *(_QWORD *)(v6 + 8);
    v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 16);
    v11 = a1;
    v10(&v13, v8, v9);
    if (v14)
    {

      sub_1B738(&v13, (uint64_t)v15);
      return sub_1B738(v15, (uint64_t)(a2 + 1));
    }
    sub_D1D4((uint64_t)&v13, &qword_3D31A0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x800000000030DBD0, "ShelfKitCollectionViews/PPTViewControllerProxy.swift", 52, 2, 38, 0);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000000030DBA0, "ShelfKitCollectionViews/PPTViewControllerProxy.swift", 52, 2, 34, 0);
  }
  __break(1u);
  return result;
}

void PPTViewControllerProxy.prepareForTesting(testCase:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t (*v48)(uint64_t, uint64_t);
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  Class isa;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[3];
  uint64_t v100;
  uint64_t v101;

  v3 = v2;
  v97 = a1;
  v5 = type metadata accessor for Date(0);
  v93 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v91 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v92 = (char *)&v83 - v8;
  v88 = type metadata accessor for FlowPresentationHints(0);
  __chkstk_darwin(v88);
  v89 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowDestination(0);
  v11 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  v96 = v11;
  __chkstk_darwin(v10);
  v90 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PerformanceTestCase(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  __chkstk_darwin(v16);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v83 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v83 - v23;
  v25 = (_QWORD *)(v2 + 8);
  sub_1D5D4(v2 + 8, (uint64_t)v99);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6C80);
  v27 = type metadata accessor for ParentFlowController(0);
  if (!swift_dynamicCast(&v98, v99, v26, v27, 6))
    goto LABEL_15;
  v85 = v5;
  v94 = v98;
  v28 = objc_msgSend(*(id *)v3, "traitCollection");
  v29 = UITraitCollection.interfaceMode.getter();

  if ((v29 & 1) != 0)
  {
    v86 = a2;
    v87 = v3;
    v30 = v97;
    sub_10B15C(v97 + *(int *)(v13 + 36), (uint64_t)v24);
    v33 = v95;
    v32 = v96;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v24, 1, v95) == 1)
    {
      sub_D1D4((uint64_t)v24, &qword_3D2B30);
      sub_10B1A4(v30, (uint64_t)v15);
    }
    else
    {
      v34 = sub_19E57C();
      v35 = v24;
      v31 = v34;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
      sub_10B1A4(v30, (uint64_t)v15);
      if (v31 != 18)
      {
LABEL_8:
        sub_FA4C((uint64_t)v15, type metadata accessor for PerformanceTestCase);
        a2 = v86;
        v3 = v87;
        goto LABEL_9;
      }
    }
    v31 = *((_QWORD *)v15 + 8);
    sub_3D600(v31);
    goto LABEL_8;
  }
  v30 = v97;
  v31 = *(_QWORD *)(v97 + 64);
  sub_3D600(v31);
LABEL_9:
  v36 = *(_QWORD *)(v3 + 32);
  v37 = *(_QWORD *)(v3 + 40);
  __swift_project_boxed_opaque_existential_1(v25, v36);
  v38 = *(unsigned __int8 *)(v30 + 72);
  v87 = v31;
  FlowController.change(tab:popToRoot:preserveTransientView:userInitiated:)(v31, v38, 0, 1, v36, v37);
  v39 = v94;
  v40 = *(_QWORD *)(v94 + OBJC_IVAR____TtC23ShelfKitCollectionViews20ParentFlowController_tabManager);
  v41 = *(_QWORD *)(v40 + 16);
  if (!*(_QWORD *)(v41 + 16))
    goto LABEL_14;
  v42 = sub_36D7C(*(_BYTE *)(v40 + 56));
  if ((v43 & 1) == 0)
    goto LABEL_14;
  v44 = *(_QWORD *)(v41 + 56) + 16 * v42;
  v45 = *(void **)v44;
  v46 = *(_QWORD *)(v44 + 8);
  ObjectType = swift_getObjectType();
  v48 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 24);
  v49 = v45;
  v50 = ObjectType;
  v51 = v97;
  v52 = (void *)v48(v50, v46);

  if (!v52)
  {
LABEL_14:
    sub_7C28(v87);
    swift_release(v39);
LABEL_15:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v53 = a2;
  v84 = v52;
  v83 = objc_msgSend(v52, "visibleViewController");
  objc_msgSend(v83, "loadViewIfNeeded");
  v54 = v51 + *(int *)(v13 + 36);
  sub_10B15C(v54, (uint64_t)v21);
  v56 = v95;
  v55 = v96;
  v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
  if (v57(v21, 1, v95) == 1)
  {
    sub_D1D4((uint64_t)v21, &qword_3D2B30);
  }
  else
  {
    v58 = sub_19E57C();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
    if (v58 != 18)
    {
      sub_91F0C(v58);
      goto LABEL_22;
    }
  }
  sub_10B15C(v54, (uint64_t)v18);
  if (v57(v18, 1, v56) == 1)
  {
    sub_D1D4((uint64_t)v18, &qword_3D2B30);
LABEL_22:
    v79 = v84;
    goto LABEL_23;
  }
  v86 = v53;
  v59 = v90;
  (*(void (**)(void))(v96 + 32))();
  v60 = v84;
  UIResponder.nearestFlowController.getter((uint64_t)v99);

  v61 = v100;
  if (v100)
  {
    v62 = v101;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    v63 = v97 + *(int *)(v13 + 40);
    v64 = type metadata accessor for FlowPresentationContext(0);
    v65 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v89, v63, v64);
    v66 = (int *)v88;
    v67 = (_OWORD *)(v65 + *(int *)(v88 + 36));
    *v67 = 0u;
    v67[1] = 0u;
    v68 = v65 + v66[7];
    v69 = enum case for FlowDestinationPageHeader.standard(_:);
    v70 = type metadata accessor for FlowDestinationPageHeader(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v68, v69, v70);
    *(_BYTE *)(v65 + v66[5]) = 0;
    v71 = v65 + v66[6];
    *(_QWORD *)(v71 + 32) = 0;
    *(_OWORD *)v71 = 0u;
    *(_OWORD *)(v71 + 16) = 0u;
    *(_BYTE *)(v71 + 40) = -1;
    *(_QWORD *)(v65 + v66[8]) = 0;
    (*(void (**)(char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v62 + 32))(v59, v65, 0, 0, v61, v62);
    sub_FA4C(v65, type metadata accessor for FlowPresentationHints);
    __swift_destroy_boxed_opaque_existential_0(v99);
    v72 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v73 = v91;
    v74 = Date.init()();
    v75 = v92;
    Date.addingTimeInterval(_:)(v74, 3.0);
    v76 = *(void (**)(char *, uint64_t))(v93 + 8);
    v77 = v85;
    v76(v73, v85);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v76(v75, v77);
    objc_msgSend(v72, "runUntilDate:", isa);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v59, v56);
    v79 = v84;
    v53 = v86;
LABEL_23:
    v80 = *(id *)v3;
    v81 = v83;
    v82 = v83;
    sub_2A5900(v80, v81, v53);
    sub_7C28(v87);
    swift_release(v94);

    return;
  }
  sub_7C28(v87);
  __break(1u);
}

uint64_t sub_10B15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PerformanceTestCase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for PPTViewControllerProxy(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return __swift_destroy_boxed_opaque_existential_0(v1);
}

uint64_t initializeWithCopy for PPTViewControllerProxy(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for PPTViewControllerProxy(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t assignWithTake for PPTViewControllerProxy(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for PPTViewControllerProxy()
{
  return &type metadata for PPTViewControllerProxy;
}

void PlayControlsStackView.bind(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph, v15, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_release(v4);
  v5 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton);
  if (v5)
  {
    v6 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph];
    swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews10PlayButton_objectGraph], &v14, 1, 0);
    v7 = *(_QWORD *)v6;
    *(_QWORD *)v6 = a1;
    swift_retain_n(a1, 2);
    v8 = v5;
    swift_release(v7);

  }
  else
  {
    swift_retain(a1);
  }
  v9 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls);
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph];
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_objectGraph] = a1;
  v11 = v9;
  swift_release(v10);
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC23ShelfKitCollectionViews29EpisodeStateControlsStackView_moreButton];
  v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph) = a1;
  swift_retain_n(a1, 2);
  swift_release(v13);

}

CGFloat PlayControlsStackView.intrinsicContentSize.getter()
{
  if (qword_3CF348 != -1)
    swift_once(&qword_3CF348, sub_10BB04);
  return UIViewNoIntrinsicMetric;
}

uint64_t PlayControlsStackView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double PlayControlsStackView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  double result;
  _BYTE v8[24];

  v5 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
  v6 = swift_beginAccess(v5, v8, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1, v6);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*PlayControlsStackView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2, __n128 a3)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10B5DC;
}

void sub_10B5DC(uint64_t a1, char a2, __n128 a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v7 + 8) = v6;
  swift_unknownObjectWeakAssign(v7, v5, a3);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v4[3]);
    swift_endAccess(v4);
  }
  else
  {
    swift_endAccess(v4);
    swift_unknownObjectRelease(v5);
  }
  free(v4);
}

id sub_10B650(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  objc_class *ObjectType;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  double *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v30;
  char v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playPauseAction];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_QWORD *)v15 + 4) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_oldPlayPauseButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_infoLabel] = 0;
  v16 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16, 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_accessibilityPlayButtonState] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playControlsPresenter] = a1;
  v17 = (double *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_expandedTapAreaInsets];
  *v17 = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  v18 = *(_QWORD *)(a1 + 48);
  sub_19C4C(a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_iconsSet, (uint64_t)v14, type metadata accessor for PlayControlsIconsSet);
  objc_allocWithZone((Class)type metadata accessor for EpisodeStateControlsStackView(0));
  v19 = v5;
  swift_retain(a1);
  swift_retain(v18);
  v21 = sub_2B6CBC(v20, (uint64_t)v14, a2, 0.0, a4, a5);
  swift_release(v18);
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls] = v21;

  v32.receiver = v19;
  v32.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v32, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)(a1 + 24) = &off_382758;
  v23 = swift_unknownObjectWeakAssign(a1 + 16, v22);
  Strong = swift_unknownObjectWeakLoadStrong(v23);
  if (Strong)
  {
    v25 = Strong;
    v31 = *(_BYTE *)(a1 + 96);
    v26 = v22;
    sub_10BDB4((uint64_t)&v31);

    swift_unknownObjectRelease(v25);
  }
  else
  {
    v27 = v22;
  }
  v28 = v22;
  objc_msgSend(v28, "setHitTestDirectionalInsets:", a2, a3, a4, a5);

  swift_release(a1);
  return v28;
}

void PlayControlsStackView.init(frame:)()
{
  sub_10D670(0x800000000030B270, 94);
}

Swift::Void __swiftcall PlayControlsStackView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  objc_super v15;

  isa = a1.value.super.isa;
  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, "traitCollectionDidChange:", isa);
  if (isa)
  {
    v3 = isa;
    v4 = -[objc_class preferredContentSizeCategory](v3, "preferredContentSizeCategory");
    v5 = objc_msgSend(v1, "traitCollection");
    v6 = objc_msgSend(v5, "preferredContentSizeCategory");

    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    if (v7 == v10 && v9 == v11)
    {

      swift_bridgeObjectRelease_n(v9, 2);
    }
    else
    {
      v13 = v11;
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) == 0)
      {
        objc_msgSend(v1, "invalidateIntrinsicContentSize");
        objc_msgSend(v1, "setNeedsUpdateConstraints");
      }
    }

  }
}

void sub_10BB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for Glyph(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Glyph.PlayControls.play.getter(v2);
  v6 = (void *)Glyph.image.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v6, "size");
  v8 = v7;

  qword_3D6C90 = v8;
}

uint64_t PlayControlsStackView.objectGraph.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph);
  swift_beginAccess(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph, v3, 0, 0);
  return swift_retain(*v1);
}

void sub_10BDB4(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_10BDEC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  sub_10BF00();
  v1 = v0;
  sub_10C278(&v1);
}

void sub_10BF00()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  Swift::OpaquePointer v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unsigned __int8 v14;

  v1 = v0;
  v14 = 0;
  v2 = objc_allocWithZone((Class)type metadata accessor for PlayButton(0));
  sub_938F4(&v14, 0);
  v4 = v3;
  objc_msgSend(v3, "setHitTestDirectionalInsets:", *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_expandedTapAreaInsets), *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_expandedTapAreaInsets + 8), *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_expandedTapAreaInsets + 16), 0.0);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton) = v4;
  v6 = v4;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v8._rawValue = (void *)swift_allocObject(v7, 56, 7);
  *((_OWORD *)v8._rawValue + 1) = xmmword_2EFC80;
  *((_QWORD *)v8._rawValue + 4) = v6;
  v9 = objc_allocWithZone((Class)UIView);
  v13 = v6;
  v10 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls);
  *((_QWORD *)v8._rawValue + 5) = v10;
  *((_QWORD *)v8._rawValue + 6) = v11;
  specialized Array._endMutation()(v10);
  v12 = v11;
  UIStackView.addArrangedSubviews(_:)(v8);
  swift_bridgeObjectRelease(v8._rawValue);

}

void sub_10C030()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  Swift::OpaquePointer v21;

  v1 = v0;
  v2 = (void *)sub_10D280();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView) = v2;
  v4 = v2;

  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_2F0A20;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v4;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls);
  *(_QWORD *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v9;
  v21._rawValue = (void *)v8;
  specialized Array._endMutation()(v8);
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v9;
  UIStackView.addArrangedSubviews(_:)(v21);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease(v21._rawValue).n128_f64[0]);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(NSLayoutConstraint);
  v15 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v15 + 16) = xmmword_2F11D0;
  v16 = objc_msgSend(v11, "widthAnchor");
  v17 = objc_msgSend(v12, "widthAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v15 + 32) = v18;
  specialized Array._endMutation()(v19);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

}

void sub_10C278(unsigned __int8 *a1)
{
  char *v1;
  int v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v2 = *a1;
  objc_msgSend(v1, "setAxis:", 0);
  objc_msgSend(v1, "setAlignment:", 3);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v1, "setContentCompressionResistancePriority:forAxis:", 1, v3);
  if (v2)
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "performPlayPauseAction");
    objc_msgSend(v4, "setDelegate:", v1);
    objc_msgSend(v1, "addGestureRecognizer:", v4);

  }
  v5 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_oldPlayPauseButton];
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v1, "setCustomSpacing:afterView:", v6, 6.0);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = objc_msgSend(v6, "imageView");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setContentMode:", 1);

    }
    objc_msgSend(v6, "setContentMode:", 1);

  }
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView])
    objc_msgSend(v1, "setCustomSpacing:afterView:", 5.0);
}

void sub_10C3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  _BYTE v33[24];
  char v34[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D6D90);
  __chkstk_darwin(v4);
  v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlayState(0);
  v8 = __chkstk_darwin(v7);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v13 = &v33[-v12];
  v14 = *(char **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView);
  if (v14)
  {
    swift_storeEnumTagMultiPayload(&v33[-v12], v11, 2);
    v15 = (uint64_t)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState];
    swift_beginAccess(&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_playState], v34, 0, 0);
    sub_19C4C(v15, (uint64_t)v10, type metadata accessor for PlayState);
    swift_beginAccess(v15, v33, 33, 0);
    v16 = v14;
    sub_10DB48((uint64_t)v13, v15);
    swift_endAccess(v33);
    sub_27AA00((uint64_t)v10);
    sub_10DB8C((uint64_t)v13);
    v17 = sub_10DB8C((uint64_t)v10);
    v18 = LegacyEpisodeLockup.duration.getter(v17);
    v19 = &v16[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_itemDuration];
    *(_QWORD *)v19 = v18;
    v19[8] = v20 & 1;
    v22 = type metadata accessor for LibraryEpisodeLockup(0, v21);
    if (swift_dynamicCastClass(a1, v22))
    {
      v24 = swift_retain(a1);
      v25 = LibraryEpisodeLockup.uuid.getter(v24);
      v27 = v26;
      sub_27F110(v25, v26);
      swift_release(a1);
      v28.n128_u64[0] = swift_bridgeObjectRelease(v27).n128_u64[0];
    }
    else
    {
      v29 = LegacyLockup.adamId.getter(v23);
      if ((AdamID.isEmpty.getter(v29) & 1) == 0)
      {
        v30 = LegacyLockup.adamId.getter(v28);
        sub_27F2E4(v30);
      }
    }
    objc_msgSend(v16, "setNeedsLayout", v28.n128_f64[0]);

  }
  v31 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton);
  if (v31)
  {
    swift_retain(a1);
    v32 = v31;
    PlayButtonPresenter.Data.init(lockup:)(a1);
    PlayButton.data.setter((uint64_t)v6);

  }
}

uint64_t sub_10C63C(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void (*v29)(uint64_t *, _QWORD, uint64_t);
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Glyph(0);
  v44 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Glyph.Color(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_oldPlayPauseButton];
  if (v15)
  {
    v42 = v2;
    v43 = v7;
    if ((a2 & 1) != 0)
    {
      v16 = (void *)objc_opt_self(UIColor);
      v17 = v15;
      v18 = objc_msgSend(v16, "whiteColor");
      if (qword_3CEFE8 != -1)
        swift_once(&qword_3CEFE8, sub_DF80);
      v19 = (id)qword_3D0890;
    }
    else
    {
      v20 = qword_3CEFE8;
      v21 = v15;
      if (v20 != -1)
        swift_once(&qword_3CEFE8, sub_DF80);
      v22 = (void *)qword_3D0890;
      v23 = (void *)objc_opt_self(UIColor);
      v18 = v22;
      v19 = objc_msgSend(v23, "systemFillColor");
    }
    v24 = v19;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
    v26 = swift_allocObject(v25, 48, 7);
    *(_OWORD *)(v26 + 16) = xmmword_2EFC90;
    v27 = v18;
    *(_QWORD *)(v26 + 32) = v18;
    *(_QWORD *)(v26 + 40) = v24;
    v28 = v24;
    v46 = v26;
    specialized Array._endMutation()(v26);
    *v14 = v46;
    v29 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104);
    v29(v14, enum case for Glyph.Color.palette(_:), v10);
    v41 = v28;
    if (v45 == 2)
    {
      v31 = v27;
      static Glyph.PlayControls.externalMedia.getter(v28);
      *v6 = (uint64_t)v31;
      v29(v6, enum case for Glyph.Color.monochrome(_:), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      v32 = v31;
    }
    else
    {
      if (v45 != 1)
      {
        v33 = v43;
        if (v45)
        {
          v46 = v45;
          v39 = v27;
          v40 = v28;
          result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for PlayButtonState, &v46, &type metadata for PlayButtonState, &type metadata for Int);
          __break(1u);
          return result;
        }
        v34 = v27;
        static Glyph.PlayControls.play.getter(v28);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v6, v14, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
        goto LABEL_16;
      }
      v30 = v27;
      static Glyph.PlayControls.pause.getter(v28);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v6, v14, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v33 = v43;
LABEL_16:
    v35 = (void *)Glyph.image(color:)(v6);
    sub_D1D4((uint64_t)v6, (uint64_t *)&unk_3D4C90);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v33);
    objc_msgSend(v15, "setImage:forState:", v35, 0);

    v36 = v42;
    v37 = *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_accessibilityPlayButtonState];
    v38 = v45;
    *(_QWORD *)&v42[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_accessibilityPlayButtonState] = v45;
    PlayButtonState.rawValue.getter(v38);
    PlayButtonState.rawValue.getter(v37);
    objc_msgSend(v36, "accessibilityUpdatePlayButtonState");
    objc_msgSend(v15, "setHidden:", 0);
    objc_msgSend(v15, "setAlpha:", 1.0);
    objc_msgSend(v36, "setNeedsLayout");

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v14, v10);
  }
  return result;
}

Swift::Void __swiftcall PlayControlsStackView.performPlayPauseAction()()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14[24];
  _QWORD v15[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = (uint64_t)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playPauseAction;
  swift_beginAccess(v3, v14, 0, 0);
  sub_10D5C4(v3, (uint64_t)&v12);
  if (v13)
  {
    sub_1B738(&v12, (uint64_t)v15);
    v13 = ObjectType;
    *(_QWORD *)&v12 = v1;
    v4 = sub_10D60C();
    v5 = v1;
    v6 = DependencyBindableView.perform(_:from:in:)(v15, &v12, v1, ObjectType, v4);
    swift_release(v6);
    sub_D1D4((uint64_t)&v12, &qword_3D1A70);
    v7 = &v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate];
    swift_beginAccess(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate], &v12, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v9 = Strong;
      v10 = *((_QWORD *)v7 + 1);
      v11 = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 8))(v5, v11, v10);
      swift_unknownObjectRelease(v9);
    }
    __swift_destroy_boxed_opaque_existential_0(v15);
  }
  else
  {
    sub_D1D4((uint64_t)&v12, (uint64_t *)&unk_3D30D0);
  }
}

void sub_10CBD8(_BYTE *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  __int128 *v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25[8];
  uint64_t v26;
  _OWORD v27[8];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[8];
  uint64_t v39;

  if (*a1 == 1)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView);
    if (!v3)
      return;
    v4 = qword_3CFCA8;
    v5 = v3;
    if (v4 != -1)
      swift_once(&qword_3CFCA8, sub_27A7F0);
    v6 = &xmmword_3FD798;
    goto LABEL_11;
  }
  if (*a2 - 1 <= 2)
  {
    v7 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView);
    if (v7)
    {
      v8 = qword_3CFCA0;
      v5 = v7;
      if (v8 != -1)
        swift_once(&qword_3CFCA0, sub_27A5E8);
      v6 = &xmmword_3FD710;
LABEL_11:
      v9 = v6[3];
      v27[2] = v6[2];
      v27[3] = v9;
      v28 = *((_QWORD *)v6 + 16);
      v10 = v6[7];
      v27[6] = v6[6];
      v27[7] = v10;
      v11 = v6[5];
      v27[4] = v6[4];
      v27[5] = v11;
      v12 = v6[1];
      v27[0] = *v6;
      v27[1] = v12;
      v29 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
      v13 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64];
      v15 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16];
      v14 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32];
      v32 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48];
      v33 = v13;
      v30 = v15;
      v31 = v14;
      v17 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96];
      v16 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112];
      v18 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80];
      v37 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128];
      v35 = v17;
      v36 = v16;
      v34 = v18;
      v19 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80];
      v20 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96];
      v21 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112];
      v39 = *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128];
      v38[6] = v20;
      v38[7] = v21;
      v38[5] = v19;
      v22 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16];
      v23 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32];
      v24 = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64];
      v38[3] = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48];
      v38[4] = v24;
      v38[1] = v22;
      v38[2] = v23;
      v38[0] = *(_OWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme];
      memmove(&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme], v6, 0x88uLL);
      sub_10D99C((uint64_t)v27);
      sub_10D99C((uint64_t)&v29);
      sub_10DA74((uint64_t)v38);
      v25[6] = v35;
      v25[7] = v36;
      v26 = v37;
      v25[2] = v31;
      v25[3] = v32;
      v25[4] = v33;
      v25[5] = v34;
      v25[0] = v29;
      v25[1] = v30;
      sub_27A1CC(v25);
      sub_10DA74((uint64_t)&v29);

    }
  }
}

void sub_10CDA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v11;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_infoLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_infoLabel);
  if (v2)
  {
    objc_msgSend(v2, "setHidden:", 0);
    v3 = *(void **)(v0 + v1);
    if (v3)
    {
      v4 = (void *)objc_opt_self(NSBundle);
      v5 = v3;
      v6 = objc_msgSend(v4, "mainBundle");
      v11._object = (void *)0xED0000746E656D75;
      v7._object = (void *)0x800000000030DEA0;
      v7._countAndFlagsBits = 0xD000000000000015;
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      v11._countAndFlagsBits = 0x636F44206E65704FLL;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v11)._object;

      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      objc_msgSend(v5, "setText:", v10);

    }
  }
}

Swift::Bool __swiftcall PlayControlsStackView.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  uint64_t v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGPoint v18;
  CGRect v19;

  -[objc_class locationInView:](a1.super.isa, "locationInView:", v1);
  v3 = v2;
  v5 = v4;
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_episodeStateControls), "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  objc_msgSend(*(id *)(v1 + v6), "hitTestInsets");
  v19.origin.x = UIEdgeInsetsInsetRect(v8, v10, v12, v14, v15, v16);
  v18.x = v3;
  v18.y = v5;
  return !CGRectContainsPoint(v19, v18);
}

void PlayControlsStackView.pointerInteraction(_:willEnter:animator:)()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playControlsPresenter);
  v1[57] = 1;
  sub_2B3510(v1[73], v1[72], 1);
}

void PlayControlsStackView.pointerInteraction(_:willExit:animator:)()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playControlsPresenter);
  v1[57] = 0;
  sub_2B3510(v1[73], v1[72], 0);
}

uint64_t sub_10D280()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v18[8];
  uint64_t v19;
  _OWORD v20[8];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[8];
  uint64_t v32;

  v0 = objc_allocWithZone((Class)type metadata accessor for PlaybackStatusView(0));
  sub_27BA38(1309);
  v2 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle) = 4;
  v3 = 4 * (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) & 1);
  v4 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = v3;
  sub_279A50(v4);
  if (qword_3CFCA0 != -1)
    swift_once(&qword_3CFCA0, sub_27A5E8);
  v20[2] = xmmword_3FD730;
  v20[3] = *(_OWORD *)&qword_3FD740;
  v21 = qword_3FD790;
  v20[6] = xmmword_3FD770;
  v20[7] = *(_OWORD *)&byte_3FD780;
  v20[4] = xmmword_3FD750;
  v20[5] = *(_OWORD *)&qword_3FD760;
  v20[0] = xmmword_3FD710;
  v20[1] = *(_OWORD *)&qword_3FD720;
  v22 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme);
  v5 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64);
  v7 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16);
  v6 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32);
  v25 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48);
  v26 = v5;
  v23 = v7;
  v24 = v6;
  v9 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96);
  v8 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112);
  v10 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80);
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128);
  v28 = v9;
  v29 = v8;
  v27 = v10;
  v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80);
  v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96);
  v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128);
  v31[6] = v12;
  v31[7] = v13;
  v31[5] = v11;
  v14 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16);
  v15 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32);
  v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64);
  v31[3] = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48);
  v31[4] = v16;
  v31[1] = v14;
  v31[2] = v15;
  v31[0] = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme);
  memmove((void *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme), &xmmword_3FD710, 0x88uLL);
  sub_10D99C((uint64_t)v20);
  sub_10D99C((uint64_t)&v22);
  sub_10DA74((uint64_t)v31);
  v18[6] = v28;
  v18[7] = v29;
  v19 = v30;
  v18[2] = v24;
  v18[3] = v25;
  v18[4] = v26;
  v18[5] = v27;
  v18[0] = v22;
  v18[1] = v23;
  sub_27A1CC(v18);
  sub_10DA74((uint64_t)&v22);
  return v2;
}

uint64_t sub_10D420()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v18[8];
  uint64_t v19;
  _OWORD v20[8];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[8];
  uint64_t v32;

  v0 = objc_allocWithZone((Class)type metadata accessor for PlaybackStatusView(0));
  sub_27BA38(1181);
  v2 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_preferredBarStyle) = 3;
  if ((*(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_style) & 1) != 0)
    v3 = 3;
  else
    v3 = 0;
  v4 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_effectiveBarStyle) = v3;
  sub_279A50(v4);
  if (qword_3CFCA0 != -1)
    swift_once(&qword_3CFCA0, sub_27A5E8);
  v20[2] = xmmword_3FD730;
  v20[3] = *(_OWORD *)&qword_3FD740;
  v21 = qword_3FD790;
  v20[6] = xmmword_3FD770;
  v20[7] = *(_OWORD *)&byte_3FD780;
  v20[4] = xmmword_3FD750;
  v20[5] = *(_OWORD *)&qword_3FD760;
  v20[0] = xmmword_3FD710;
  v20[1] = *(_OWORD *)&qword_3FD720;
  v22 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme);
  v5 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64);
  v7 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16);
  v6 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32);
  v25 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48);
  v26 = v5;
  v23 = v7;
  v24 = v6;
  v9 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96);
  v8 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112);
  v10 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80);
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128);
  v28 = v9;
  v29 = v8;
  v27 = v10;
  v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 80);
  v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 96);
  v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 112);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 128);
  v31[6] = v12;
  v31[7] = v13;
  v31[5] = v11;
  v14 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 16);
  v15 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 32);
  v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 64);
  v31[3] = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme + 48);
  v31[4] = v16;
  v31[1] = v14;
  v31[2] = v15;
  v31[0] = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme);
  memmove((void *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews18PlaybackStatusView_theme), &xmmword_3FD710, 0x88uLL);
  sub_10D99C((uint64_t)v20);
  sub_10D99C((uint64_t)&v22);
  sub_10DA74((uint64_t)v31);
  v18[6] = v28;
  v18[7] = v29;
  v19 = v30;
  v18[2] = v24;
  v18[3] = v25;
  v18[4] = v26;
  v18[5] = v27;
  v18[0] = v22;
  v18[1] = v23;
  sub_27A1CC(v18);
  sub_10DA74((uint64_t)&v22);
  return v2;
}

uint64_t sub_10D5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D30D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10D60C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D6CC8;
  if (!qword_3D6CC8)
  {
    v1 = type metadata accessor for PlayControlsStackView();
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayControlsStackView, v1);
    atomic_store(result, (unint64_t *)&qword_3D6CC8);
  }
  return result;
}

uint64_t type metadata accessor for PlayControlsStackView()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews21PlayControlsStackView);
}

void sub_10D670(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  char *v6;

  v5 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playPauseAction];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_oldPlayPauseButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_playbackStatusView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_infoLabel] = 0;
  v6 = &v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_accessibilityPlayButtonState] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, a1, "ShelfKitCollectionViews/PlayControlsStackView.swift", 51, 2, a2, 0);
  __break(1u);
}

uint64_t _s23ShelfKitCollectionViews21PlayControlsStackViewC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0mJ0C_So0M6RegionCtF_0(void *a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6DA0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIPointerEffect(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = objc_msgSend(a1, "view", v8);
  if (!v11)
    return 0;
  v12 = v11;
  v13 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v11);
  sub_E710(0, &qword_3D6DA8, UIPointerStyle_ptr);
  *v10 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for UIPointerEffect.lift(_:), v6);
  v14 = type metadata accessor for UIPointerShape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = v13;
  v16 = UIPointerStyle.init(effect:shape:)(v10, v5);

  return v16;
}

uint64_t sub_10D8D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6[24];

  v3 = *a1 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_10D930(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
  v5 = swift_beginAccess(v4, v7, 1, 0);
  *(_QWORD *)(v4 + 8) = v3;
  return swift_unknownObjectWeakAssign(v4, v2, v5);
}

uint64_t method lookup function for PlayControlsStackView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlayControlsStackView);
}

uint64_t sub_10D99C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(void **)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(void **)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v17 = *(_OWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_BYTE *)(a1 + 112);
  v10 = *(_BYTE *)(a1 + 113);
  v22 = *(void **)(a1 + 120);
  v23 = *(void **)(a1 + 128);
  v11 = *(id *)a1;
  v12 = v2;
  v13 = v3;
  sub_DDA0(v21, v20, v19, v18, v4, v5, v6, v7, v17, *((uint64_t *)&v17 + 1), v8, v9, v10);
  v14 = v22;
  v15 = v23;
  return a1;
}

uint64_t sub_10DA74(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  void *v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v3 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(void **)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v12 = *(_OWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_BYTE *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 113);
  v10 = *(void **)(a1 + 128);
  v18 = *(void **)(a1 + 120);

  sub_DCC8(v17, v16, v15, v14, v13, v4, v5, v6, v12, *((uint64_t *)&v12 + 1), v7, v8, v9);
  return a1;
}

uint64_t sub_10DB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10DB8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlayState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10DBC8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

id sub_10DBEC(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_prefersLargeTitle] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_navigationAccessories] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  v4 = objc_msgSendSuper2(&v6, "initWithCollectionViewLayout:", a1);
  objc_msgSend(v4, "useDefaultRestorationIdentifier");

  return v4;
}

void sub_10DD10()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  uint64_t v3;
  int *v4;
  uint64_t ObjectType;
  void *v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  objc_super v24;

  v1 = v0;
  if (qword_3CFCF0 != -1)
    swift_once(&qword_3CFCF0, sub_2A27F8);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_3E03A0);
  if (!Strong
    || (v3 = Strong,
        v4 = off_3E03A8[0],
        ObjectType = swift_getObjectType(),
        v6 = (void *)(*(uint64_t (**)(uint64_t, int *))((char *)&dword_8 + (_QWORD)v4))(ObjectType, v4),
        *(_QWORD *)&v7 = swift_unknownObjectRelease(v3).n128_u64[0],
        !v6))
  {
    v24.receiver = v1;
    v24.super_class = (Class)type metadata accessor for StoreCollectionViewController();
    objc_msgSendSuper2(&v24, "loadView");
    return;
  }
  v8 = objc_msgSend(v6, "view", v7);

  if (v8)
  {
    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v10, v12, v14, v16);
    objc_msgSend(v1, "setView:", v17);

    v18 = objc_msgSend(v1, "view");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, "setAutoresizingMask:", 18);

      v20 = objc_msgSend(v1, "collectionViewLayout");
      v23 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v20, v10, v12, v14, v16);

      objc_msgSend(v23, "setAutoresizingMask:", 18);
      objc_msgSend(v23, "setDelegate:", *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate]);
      objc_msgSend(v23, "setDataSource:", *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource]);
      v21 = objc_msgSend(v1, "view");
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, "addSubview:", v23);

        objc_msgSend(v1, "setCollectionView:", v23);
        return;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_10DFC4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  _QWORD v19[4];
  char v20;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v18, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v1, "_setSupportsTwoLineLargeTitles:", 1);

  sub_10EB40();
  v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_statusBarBackgroundView];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, "view");
    if (!v4)
    {
      __break(1u);
      goto LABEL_9;
    }
    v5 = v4;
    objc_msgSend(v4, "addSubview:", v3);

  }
  v6 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
  if (!v6)
    return;
  v7 = v6;
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v19[0] = v11;
  v19[1] = v13;
  v19[2] = v15;
  v19[3] = v17;
  v20 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v6, v0, v19);

}

uint64_t sub_10E150(char a1)
{
  return sub_10E624(a1, (SEL *)&selRef_viewWillAppear_, 0);
}

void sub_10E1AC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v17, "viewDidAppear:", a1 & 1);
  sub_10ED24((uint64_t)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver, (uint64_t)v15);
  if (v16)
  {
    sub_1D5D4((uint64_t)v15, (uint64_t)v12);
    sub_10ED6C((uint64_t)v15);
    v4 = v13;
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(1, v4, v5);
    __swift_destroy_boxed_opaque_existential_0(v12);
  }
  else
  {
    sub_10ED6C((uint64_t)v15);
  }
  v6 = OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_registeredForApplicationDidBecomeActive;
  if (*((_BYTE *)v2
       + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_registeredForApplicationDidBecomeActive) == 1)
  {
    v7 = MTApplicationDidBecomeActiveNotification;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v7 = MTApplicationDidBecomeActiveNotification;
    objc_msgSend(v8, "addObserver:selector:name:object:", v2, "applicationDidBecomeActive:", MTApplicationDidBecomeActiveNotification, 0);

    *((_BYTE *)v2 + v6) = 1;
  }
  v9 = (void *)objc_opt_self(NSNotificationCenter);
  v10 = objc_msgSend(v9, "defaultCenter");
  objc_msgSend(v10, "addObserver:selector:name:object:", v2, "appEnteredWhileAppeared", v7, 0);

  v11 = objc_msgSend(v9, "defaultCenter");
  objc_msgSend(v11, "addObserver:selector:name:object:", v2, "appExitedWhileAppeared", MTApplicationDidEnterBackgroundNotification, 0);

}

void sub_10E3B0(char a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;
  objc_super v22;

  v2 = v1;
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v22, "viewWillDisappear:", a1 & 1);
  v4 = objc_msgSend(v2, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "viewControllers");
    v7 = sub_10EDAC();
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    sub_8FCCC((uint64_t)v2, v8);
    LOBYTE(v6) = v9;
    swift_bridgeObjectRelease(v8);
    if ((v6 & 1) != 0)
    {
      sub_10ED24((uint64_t)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver, (uint64_t)v20);
      if (v21)
      {
        sub_1D5D4((uint64_t)v20, (uint64_t)v17);
        sub_10ED6C((uint64_t)v20);
        v10 = v18;
        v11 = v19;
        __swift_project_boxed_opaque_existential_1(v17, v18);
        dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(6, v10, v11);

        __swift_destroy_boxed_opaque_existential_0(v17);
      }
      else
      {

        sub_10ED6C((uint64_t)v20);
      }
    }
    else
    {

    }
  }
  sub_10ED24((uint64_t)v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver, (uint64_t)v20);
  if (v21)
  {
    sub_1D5D4((uint64_t)v20, (uint64_t)v17);
    sub_10ED6C((uint64_t)v20);
    v12 = v18;
    v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(2, v12, v13);
    __swift_destroy_boxed_opaque_existential_0(v17);
  }
  else
  {
    sub_10ED6C((uint64_t)v20);
  }
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  objc_msgSend(v15, "removeObserver:name:object:", v2, MTApplicationDidBecomeActiveNotification, 0);

  v16 = objc_msgSend(v14, "defaultCenter");
  objc_msgSend(v16, "removeObserver:name:object:", v2, MTApplicationDidEnterBackgroundNotification, 0);

}

uint64_t sub_10E614(char a1)
{
  return sub_10E624(a1, (SEL *)&selRef_viewDidDisappear_, 3);
}

uint64_t sub_10E624(char a1, SEL *a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v15, *a2, a1 & 1);
  sub_10ED24((uint64_t)v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver, (uint64_t)v13);
  if (!v14)
    return sub_10ED6C((uint64_t)v13);
  sub_1D5D4((uint64_t)v13, (uint64_t)v10);
  sub_10ED6C((uint64_t)v13);
  v7 = v11;
  v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_0(v10);
}

void sub_10E724()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double MinY;
  id v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  objc_super v38;
  CGRect v39;
  CGRect v40;

  v38.receiver = v0;
  v38.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  objc_msgSendSuper2(&v38, "viewWillLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_statusBarBackgroundView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "safeAreaLayoutGuide");

      objc_msgSend(v5, "layoutFrame");
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      v39.origin.x = v7;
      v39.origin.y = v9;
      v39.size.width = v11;
      v39.size.height = v13;
      MinY = CGRectGetMinY(v39);
      v15 = objc_msgSend(v0, "view");
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, "frame");
        v18 = v17;
        v20 = v19;
        v22 = v21;
        v24 = v23;

        v40.origin.x = v18;
        v40.origin.y = v20;
        v40.size.width = v22;
        v40.size.height = v24;
        objc_msgSend(v2, "setFrame:", 0.0, 0.0, CGRectGetWidth(v40), MinY);

        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_5:
  v25 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController];
  if (!v25)
    return;
  v26 = objc_msgSend(v25, "view");
  if (!v26)
    goto LABEL_12;
  v27 = v26;
  v28 = objc_msgSend(v0, "view");
  if (!v28)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v29 = v28;
  objc_msgSend(v28, "bounds");
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;

  objc_msgSend(v27, "setFrame:", v31, v33, v35, v37);
}

uint64_t sub_10E9B8()
{
  return sub_10E9FC(5);
}

uint64_t sub_10E9F4()
{
  return sub_10E9FC(4);
}

uint64_t sub_10E9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;

  sub_10ED24(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver, (uint64_t)v9);
  if (!v10)
    return sub_10ED6C((uint64_t)v9);
  sub_1D5D4((uint64_t)v9, (uint64_t)v6);
  sub_10ED6C((uint64_t)v9);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0(v6);
}

void sub_10EB40()
{
  unsigned __int8 *v0;
  int v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;

  v1 = v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_prefersLargeTitle];
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = v2;
  if (v1)
    v4 = 1;
  else
    v4 = 2;
  objc_msgSend(v2, "setLargeTitleDisplayMode:", v4);

  v5 = objc_msgSend(v0, "navigationItem");
  v6 = objc_msgSend(v5, "navigationBar");

  if (v6)
  {
    v7 = objc_msgSend(v6, "superview");

    objc_msgSend(v7, "setNeedsLayout");
  }
}

id sub_10EC5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StoreCollectionViewController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews29StoreCollectionViewController);
}

uint64_t sub_10ED24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10ED6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6E18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10EDAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D2B40;
  if (!qword_3D2B40)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3D2B40);
  }
  return result;
}

void sub_10EDE8()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_overlayViewController] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_prefersLargeTitle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_navigationAccessories] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews29StoreCollectionViewController_collectionViewDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/StoreCollectionViewController.swift", 59, 2, 45, 0);
  __break(1u);
}

uint64_t ModernPageViewController.perform(testCase:runner:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  _QWORD *v49;
  __int128 v50[3];

  v38 = a2;
  v39 = a1;
  v41 = swift_isaMask & *v2;
  v44 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PerformanceTestCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = type metadata accessor for DispatchTime(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - v17;
  sub_1E2A0();
  v40 = static OS_dispatch_queue.main.getter(v19);
  static DispatchTime.now()(v20);
  + infix(_:_:)(v15, 3.0);
  v43 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21 = v15;
  v22 = v12;
  v43(v21, v12);
  sub_1D5D4(v38, (uint64_t)v50);
  sub_10B1A4(v39, (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(unsigned __int8 *)(v9 + 80);
  v24 = (v23 + 80) & ~v23;
  v25 = (_QWORD *)swift_allocObject(&unk_3827E0, v24 + v10, v23 | 7);
  v26 = v41;
  v27 = v42;
  v25[2] = *(_QWORD *)(v41 + 80);
  v25[3] = *(_QWORD *)(v26 + 88);
  v25[4] = v27;
  sub_1B738(v50, (uint64_t)(v25 + 5));
  sub_10F388((uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v25 + v24);
  aBlock[4] = sub_10F3CC;
  v49 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24360;
  aBlock[3] = &block_descriptor_19;
  v28 = _Block_copy(aBlock);
  v29 = v49;
  v30 = v27;
  v31 = swift_release(v29);
  static DispatchQoS.unspecified.getter(v31);
  aBlock[0] = _swiftEmptyArrayStorage;
  v32 = sub_CF9B0();
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4DA0);
  v34 = sub_CF9F8();
  v35 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v44, v32);
  v36 = (void *)v40;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v7, v4, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v35);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
  return ((uint64_t (*)(char *, uint64_t))v43)(v18, v22);
}

void sub_10F1C0(void *a1, _QWORD *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = objc_msgSend(a1, "collectionView");
  if (v5)
  {
    v8 = v5;
    UIScrollView.perform(testCase:runner:)(a3, a2);

  }
  else
  {
    v6 = a2[3];
    v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(a3, 0xD000000000000017, 0x800000000030E0D0, v6, v7);
  }
}

uint64_t sub_10F278()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for PerformanceTestCase(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  __swift_destroy_boxed_opaque_existential_0((_QWORD *)(v0 + 40));
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  v7 = *(_QWORD *)(v0 + v4 + 64);
  if ((unint64_t)(v7 - 1) >= 0x11)
    swift_release(v7);
  v8 = v6 + v1[9];
  v9 = type metadata accessor for FlowDestination(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v3 | 7;
  v12 = v6 + v1[10];
  v13 = type metadata accessor for FlowPresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[11] + 8));
  return swift_deallocObject(v0, v4 + v5, v11);
}

uint64_t sub_10F388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PerformanceTestCase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10F3CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PerformanceTestCase(0) - 8) + 80);
  sub_10F1C0(*(void **)(v0 + 32), (_QWORD *)(v0 + 40), v0 + ((v1 + 80) & ~v1));
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_19(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10F418(uint64_t a1, uint64_t a2)
{
  return ModernPageViewController.perform(testCase:runner:)(a1, a2);
}

uint64_t sub_10F438(uint64_t a1)
{
  _QWORD v2[11];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = &unk_2F6F28;
  v2[4] = &unk_2F6F40;
  v2[5] = &unk_2F6F58;
  v2[6] = &unk_2F6F70;
  v2[7] = &unk_2F6F70;
  v2[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[9] = &unk_2F6F28;
  v2[10] = &unk_2F6F88;
  return swift_initClassMetadata2(a1, 0, 11, v2, a1 + 96);
}

void sub_10F4C0()
{
  qword_3D6E20 = 0x4062C00000000000;
}

void sub_10F4D4()
{
  qword_3D6E28 = 0x4049000000000000;
}

void sub_10F4E4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  char v16;

  sub_11045C(a2, (uint64_t)v15);
  if (v16 == 1)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0;
    a5 = 0;
LABEL_3:
    a3 = 0;
LABEL_10:
    a4 = 0;
LABEL_11:
    a6 = 0;
LABEL_12:
    v13 = 0uLL;
    v14 = 0uLL;
    goto LABEL_13;
  }
  if (!a3)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0;
    a5 = 0;
    goto LABEL_10;
  }
  if (!a4)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0;
    a5 = 0;
    a3 = 0;
    goto LABEL_11;
  }
  if (!a5)
  {

    swift_unknownObjectRelease(a6);
    a1 = 0;
    goto LABEL_3;
  }
  if (!a6)
  {

    a1 = 0;
    a5 = 0;
    a3 = 0;
    a4 = 0;
    goto LABEL_12;
  }
  v13 = v15[0];
  v14 = v15[1];
LABEL_13:
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a5;
  *(_OWORD *)(a7 + 16) = v13;
  *(_OWORD *)(a7 + 32) = v14;
  *(_QWORD *)(a7 + 48) = a3;
  *(_QWORD *)(a7 + 56) = a4;
  *(_QWORD *)(a7 + 64) = a6;
}

uint64_t sub_10F628()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_3D6E30);
}

uint64_t sub_10F638()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_3D6E38);
}

uint64_t sub_10F648()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + qword_3D6E40);
}

uint64_t sub_10F658()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_3D6E48);
}

uint64_t sub_10F668(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_3D6E48) = result & 1;
  return result;
}

uint64_t sub_10F67C()
{
  uint64_t v0;

  return swift_unknownObjectUnownedLoadStrong(v0 + qword_3D6E50);
}

__n128 sub_10F68C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + qword_3D6E58 + 32);
  result = *(__n128 *)(v1 + qword_3D6E58);
  v4 = *(_OWORD *)(v1 + qword_3D6E58 + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

double sub_10F6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + qword_3D6E68);
  *(_QWORD *)(v1 + qword_3D6E68) = a1;
  *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_10F6C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  void *Strong;
  char v5;
  __int128 v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v17[2];
  char v18;
  _BYTE v19[72];

  v3 = swift_isaMask & *v1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong((char *)v1 + qword_3D6E50);
  v5 = *((_BYTE *)v1 + qword_3D6E58 + 32);
  v6 = *(_OWORD *)((char *)v1 + qword_3D6E58 + 16);
  v17[0] = *(_OWORD *)((char *)v1 + qword_3D6E58);
  v17[1] = v6;
  v18 = v5;
  v7 = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + qword_3D6E30);
  v8 = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + qword_3D6E38);
  v9 = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + qword_3D6E40);
  v10 = *(_QWORD *)((char *)v1 + qword_3D6E68);
  v11 = *(_QWORD *)(v3 + 80);
  v12 = *(_QWORD *)(v3 + 88);
  swift_unknownObjectRetain(v10);
  sub_10F4E4(Strong, (uint64_t)v17, v7, v8, v9, v10, (uint64_t)v19);
  v14 = type metadata accessor for FullScreenTransitionContext(255, v11, v12, v13);
  v15 = type metadata accessor for Optional(0, v14);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, v19, v15);
}

_QWORD *sub_10F7EC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = a1;
  v12 = sub_110328(v8, (uint64_t)v9);

  return v12;
}

id sub_10F864()
{
  uint64_t v0;
  id v1;

  v0 = sub_1103C0();
  swift_unknownObjectRetain(v0);
  return v1;
}

id sub_10F888()
{
  uint64_t v0;
  id v1;

  v0 = Theme.deinit();
  swift_unknownObjectRetain(v0);
  return v1;
}

double sub_10F8AC()
{
  return sub_1103D4();
}

uint64_t sub_10F8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v2 = *v1;
  v3 = swift_isaMask;
  v4 = *(_QWORD *)((char *)v1 + qword_3D6E68);
  *(_QWORD *)((char *)v1 + qword_3D6E68) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v4);
  if ((*((_BYTE *)v1 + qword_3D6E78) & 1) != 0)
  {
    sub_10F6C4((uint64_t)v7);
  }
  else
  {
    sub_10F6C4((uint64_t)v7);
    sub_1103E4((uint64_t)v7, *(uint64_t *)((char *)&stru_20.filesize + (v3 & v2)), *(_QWORD *)((char *)&stru_20.maxprot + (v3 & v2)), v5);
  }
  return sub_110228((uint64_t)v7);
}

void sub_10F968(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;

  swift_unknownObjectRetain(a3);
  v5 = a1;
  sub_10F8D0(a3);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_10F9BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_3D6E78);
}

uint64_t sub_10F9CC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_3D6E78) = result;
  return result;
}

uint64_t sub_10F9DC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_3D6E80);
}

uint64_t sub_10F9F4(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + qword_3D6E80;
  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  return result;
}

void sub_10FA10(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double *v10;
  void *Strong;
  void *v12;
  double *v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  char *v32;
  void *v33;
  uint64_t v34;
  id v35;
  double v36;
  long double v37;
  double v38;
  long double v39;
  long double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  double v60;
  double v61;
  _QWORD aBlock[5];
  uint64_t v63;
  _BYTE v64[72];
  CGRect v65;
  CGRect v66;

  v3 = *v1;
  v4 = swift_isaMask;
  v5 = objc_msgSend(a1, "view");
  objc_msgSend(a1, "translationInView:", v5);
  v7 = v6;
  v9 = v8;

  if (objc_msgSend(a1, "state") == (char *)&dword_0 + 1)
  {
    v10 = (double *)((char *)v1 + qword_3D6E80);
    *v10 = v7;
    v10[1] = v9;
    *((_BYTE *)v10 + 16) = 0;
    *((_BYTE *)v1 + qword_3D6E78) = 1;
    Strong = (void *)swift_unknownObjectWeakLoadStrong((char *)v1 + qword_3D6E38);
    if (Strong)
    {
      v12 = Strong;
      objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  v13 = (double *)((char *)v1 + qword_3D6E80);
  if ((*((_BYTE *)v1 + qword_3D6E80 + 16) & 1) == 0)
  {
    v14 = *(_QWORD *)((char *)v1 + qword_3D6E68);
    if (v14)
    {
      v60 = v13[1];
      v61 = *v13;
      *(_QWORD *)&v15 = swift_unknownObjectRetain(v14).n128_u64[0];
      v17 = objc_msgSend(v16, "containerView", v15);
      objc_msgSend(v17, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;

      v65.origin.x = v19;
      v65.origin.y = v21;
      v65.size.width = v23;
      v65.size.height = v25;
      v26 = CGRectGetWidth(v65) * 0.5;
      v66.origin.x = v19;
      v66.origin.y = v21;
      v66.size.width = v23;
      v66.size.height = v25;
      v27 = CGRectGetHeight(v66) * 0.5;
      v28 = v7 - v61;
      v29 = v9 - v60;
      if (qword_3CF350 != -1)
        swift_once(&qword_3CF350, sub_10F4C0);
      v30 = v28 + v26;
      v31 = v29 + v27;
      sub_10F6C4((uint64_t)v64);
      v32 = (char *)objc_msgSend(a1, "state");
      if (v32 == (_BYTE *)&dword_0 + 3)
      {
        v34 = v4 & v3;
        v35 = objc_msgSend(a1, "view");
        objc_msgSend(a1, "velocityInView:", v35);
        v37 = v36;
        v39 = v38;

        v40 = hypot(v37, v39) / 500.0;
        v41 = fabs(v37);
        v42 = v41 * v40;
        v43 = fabs(v39);
        v44 = v43 * v40;
        if (v42 > v44)
          v45 = v42;
        else
          v45 = v44;
        if (qword_3CF358 != -1)
          swift_once(&qword_3CF358, sub_10F4D4);
        if (*(double *)&qword_3D6E28 >= v45)
          v46 = v45;
        else
          v46 = *(double *)&qword_3D6E28;
        if (v37 != 0.0 || (v47 = 0.0, v39 != 0.0))
        {
          if (v43 >= v41)
            v48 = v41;
          else
            v48 = v43;
          if (v41 > v43)
            v49 = v41;
          else
            v49 = v43;
          v47 = v48 / v49;
        }
        v50 = v46 * v47;
        if (v43 >= v41)
          v51 = v46;
        else
          v51 = v50;
        if (v43 >= v41)
          v46 = v50;
        if (v46 > v51)
          v52 = v46;
        else
          v52 = v51;
        v53 = v52 / *(double *)&qword_3D6E28 * 0.2;
        v54 = v30 + v46;
        v55 = v31 + v51;
        v56 = (void *)objc_opt_self(UIView);
        v57 = swift_allocObject(&unk_382990, 24, 7);
        swift_unknownObjectWeakInit(v57 + 16, v1);
        v58 = swift_allocObject(&unk_3829B8, 56, 7);
        *(_QWORD *)(v58 + 16) = *(_QWORD *)(v34 + 80);
        *(_QWORD *)(v58 + 24) = *(_QWORD *)(v34 + 88);
        *(_QWORD *)(v58 + 32) = v57;
        *(double *)(v58 + 40) = v54;
        *(double *)(v58 + 48) = v55;
        aBlock[4] = sub_110300;
        v63 = v58;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24360;
        aBlock[3] = &block_descriptor_20;
        v59 = _Block_copy(aBlock);
        swift_release(v63);
        objc_msgSend(v56, "animateWithDuration:delay:options:animations:completion:", 0x20000, v59, 0, v53, 0.0);
        swift_unknownObjectRelease(v14);
        _Block_release(v59);
        goto LABEL_37;
      }
      if (v32 == (_BYTE *)&dword_0 + 2)
      {
        v33 = (void *)swift_unknownObjectUnownedLoadStrong((char *)v1 + qword_3D6E50);
        objc_msgSend(v33, "setCenter:", v30, v29 + v27);

        swift_unknownObjectRelease(v14);
LABEL_37:
        sub_110228((uint64_t)v64);
        return;
      }
      sub_110228((uint64_t)v64);
      swift_unknownObjectRelease(v14);
    }
  }
}

void sub_10FE5C(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (void *)swift_unknownObjectUnownedLoadStrong(Strong + qword_3D6E50);

    objc_msgSend(v8, "setCenter:", a2, a3);
  }
}

void sub_10FEE8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10FA10(v4);

}

void sub_10FF3C()
{
  sub_1104A4();
}

id sub_10FF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for FullScreenTransitionManager(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v4)), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

double sub_10FFA4(uint64_t a1)
{
  double result;

  swift_unknownObjectWeakDestroy(a1 + qword_3D6E30);
  swift_unknownObjectWeakDestroy(a1 + qword_3D6E38);
  swift_unknownObjectWeakDestroy(a1 + qword_3D6E40);
  swift_unknownObjectUnownedDestroy(a1 + qword_3D6E50);

  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_3D6E68)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for FullScreenTransitionManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullScreenTransitionManager);
}

uint64_t storeEnumTagSinglePayload for FullScreenTransitionDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_110074 + 4 * byte_2F6EC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1100A8 + 4 * byte_2F6EC0[v4]))();
}

uint64_t sub_1100A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1100B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1100B8);
  return result;
}

uint64_t sub_1100C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1100CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1100D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1100D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullScreenTransitionDirection()
{
  return &type metadata for FullScreenTransitionDirection;
}

unint64_t sub_1100F8()
{
  unint64_t result;

  result = qword_3D6F68;
  if (!qword_3D6F68)
  {
    result = swift_getWitnessTable(&unk_2F7030, &type metadata for FullScreenTransitionDirection);
    atomic_store(result, (unint64_t *)&qword_3D6F68);
  }
  return result;
}

void sub_11013C(SEL *a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + qword_3D6E38);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "view");

    if (v5)
    {
      if (*(_QWORD *)(v1 + qword_3D6E60))
      {
        objc_msgSend(v5, *a1);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1101E0(uint64_t a1)
{
  uint64_t v1;

  sub_11013C((SEL *)&selRef_removeGestureRecognizer_);
  swift_unknownObjectWeakAssign(v1 + qword_3D6E38, a1);
  sub_11013C((SEL *)&selRef_addGestureRecognizer_);
}

uint64_t sub_110228(uint64_t a1)
{
  sub_11026C(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  return a1;
}

double sub_11026C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  double result;

  if (a1)
  {

    *(_QWORD *)&result = swift_unknownObjectRelease(a9).n128_u64[0];
  }
  return result;
}

uint64_t sub_1102B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1102DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

void sub_110300()
{
  uint64_t v0;

  sub_10FE5C(*(_QWORD *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_110328(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v5 = swift_dynamicCastUnknownClass(a1, *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v2)));
  if (!v5)
    return 0;
  v6 = v5;
  swift_unknownObjectWeakAssign((char *)v2 + qword_3D6E30, a2);
  v7 = a1;
  sub_1101E0(v6);

  *((_BYTE *)v2 + qword_3D6E48) = 1;
  swift_unknownObjectRetain(v2);
  return v2;
}

uint64_t sub_1103C0()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + qword_3D6E48) = 0;
  return result;
}

double sub_1103D4()
{
  uint64_t v0;

  return *(double *)(v0 + qword_3D6E70);
}

id sub_1103E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  id result;
  _QWORD v8[9];

  v5 = type metadata accessor for FullScreenTransitionContext(255, a2, a3, a4);
  v6 = type metadata accessor for Optional(0, v5);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v8, a1, v6);
  if (v8[0])
    return objc_msgSend((id)v8[8], "completeTransition:", 0);
  return result;
}

uint64_t type metadata accessor for FullScreenTransitionContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullScreenTransitionContext);
}

uint64_t sub_11045C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D4CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1104A4()
{
  _swift_stdlib_reportUnimplementedInitializer("ShelfKitCollectionViews.FullScreenTransitionManager", 51, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1104D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

double sub_1104D8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t sub_110518(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  v12 = v7;
  swift_unknownObjectRetain(v8);
  return a1;
}

uint64_t sub_110580(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(void **)(a2 + 48);
  v11 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 56);
  v14 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  v15 = v13;

  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v16;
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRelease(v17);
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_110658(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;

  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_unknownObjectRelease(v7);
  return a1;
}

uint64_t sub_1106C4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_11070C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

double sub_110760()
{
  double result;

  result = -1.79769313e308;
  xmmword_3FADB0 = xmmword_2F70B0;
  return result;
}

double sub_110774()
{
  double result;

  result = 375.0;
  xmmword_3FADC0 = xmmword_2F70C0;
  return result;
}

double sub_110788()
{
  double result;

  result = 461.0;
  xmmword_3FADD0 = xmmword_2F70D0;
  return result;
}

double sub_11079C()
{
  double result;

  result = 737.0;
  xmmword_3FADE0 = xmmword_2F70E0;
  return result;
}

double sub_1107B0()
{
  double result;

  result = 835.0;
  xmmword_3FADF0 = xmmword_2F70F0;
  return result;
}

double sub_1107C4()
{
  double result;

  result = 1025.0;
  xmmword_3FAE00 = xmmword_2F7100;
  return result;
}

uint64_t StandardGridSpec.basePageMargin(for:)(double a1)
{
  double v4;
  double v5;
  uint64_t result;
  double v7;
  double v8;

  if (qword_3CF360 != -1)
    result = swift_once(&qword_3CF360, sub_110760);
  if (*(double *)&xmmword_3FADB0 > *((double *)&xmmword_3FADB0 + 1))
  {
    __break(1u);
LABEL_29:
    result = swift_once(&qword_3CF368, sub_110774);
    goto LABEL_10;
  }
  if (*(double *)&xmmword_3FADB0 <= a1 && *((double *)&xmmword_3FADB0 + 1) > a1)
    return result;
  if (qword_3CF368 != -1)
    goto LABEL_29;
LABEL_10:
  if (*(double *)&xmmword_3FADC0 > *((double *)&xmmword_3FADC0 + 1))
  {
    __break(1u);
LABEL_31:
    result = swift_once(&qword_3CF370, sub_110788);
    goto LABEL_17;
  }
  if (*(double *)&xmmword_3FADC0 <= a1 && *((double *)&xmmword_3FADC0 + 1) > a1)
    return result;
  if (qword_3CF370 != -1)
    goto LABEL_31;
LABEL_17:
  v4 = *(double *)&xmmword_3FADD0;
  if (qword_3CF378 != -1)
  {
    v7 = *(double *)&xmmword_3FADD0;
    result = swift_once(&qword_3CF378, sub_11079C);
    v4 = v7;
  }
  if (v4 > *((double *)&xmmword_3FADE0 + 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 <= a1 && *((double *)&xmmword_3FADE0 + 1) > a1)
      return result;
    if (qword_3CF380 == -1)
      goto LABEL_23;
  }
  result = swift_once(&qword_3CF380, sub_1107B0);
LABEL_23:
  v5 = *(double *)&xmmword_3FADF0;
  if (qword_3CF388 != -1)
  {
    v8 = *(double *)&xmmword_3FADF0;
    result = swift_once(&qword_3CF388, sub_1107C4);
    v5 = v8;
  }
  if (v5 > *((double *)&xmmword_3FAE00 + 1))
    __break(1u);
  return result;
}

char *StandardGridSpec.pageColumnMargin(for:traitCollection:axis:gridType:)(void *a1)
{
  return sub_1109D0(a1);
}

char *sub_1109D0(void *a1)
{
  char *result;

  result = (char *)objc_msgSend(a1, "userInterfaceIdiom");
  if (result == (_BYTE *)&dword_0 + 1)
    return (char *)objc_msgSend(a1, "horizontalSizeClass");
  return result;
}

uint64_t sub_110AC0(double a1)
{
  return StandardGridSpec.basePageMargin(for:)(a1);
}

ValueMetadata *type metadata accessor for StandardGridSpec()
{
  return &type metadata for StandardGridSpec;
}

uint64_t static UIContentUnavailableConfiguration.episodeDetailTranscriptUnavailableConfig(error:isOffline:isMac:retryCallback:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  v12 = type metadata accessor for UIButton.Configuration(0);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    static UIButton.Configuration.bordered()(v15);
  else
    static UIButton.Configuration.plain()(v14);
  sub_110DF0(a1, a2 & 1, (uint64_t)v17, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
}

uint64_t static UIContentUnavailableConfiguration.playerTranscriptUnavailableConfig(error:isOffline:retryCallback:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  id v17;
  void (*v18)(_BYTE *, _QWORD);
  void (*v19)(_BYTE *, _QWORD);
  double v20;
  double v21;
  double v22;
  double v23;
  void (*v24)(_BYTE *, uint64_t);
  uint64_t v25;
  void (*v26)(_BYTE *, _QWORD);
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[32];

  v30 = a3;
  v31 = a4;
  v29 = a2;
  v7 = type metadata accessor for UIButton.Configuration(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v11);
  v14 = &v28[-v13];
  static UIButton.Configuration.filled()(v12);
  v15 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v15, "quaternarySystemFillColor"));
  v16 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  v17 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", v16);

  v18 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v32);
  UIBackgroundConfiguration.visualEffect.setter(v17);
  v18(v32, 0);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v15, "whiteColor"));
  v19 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v32);
  UIBackgroundConfiguration.cornerRadius.setter(v19, 10.0);
  v19(v32, 0);
  v20 = NSDirectionalEdgeInsets.init(topBottom:sides:)(8.0, 16.0);
  UIButton.Configuration.contentInsets.setter(v20, v21, v22, v23);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v14, v7);
  sub_110DF0(a1, v29, (uint64_t)v10, v30, v31, a5);
  v24 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v24(v10, v7);
  sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
  v25 = static UIFont.calloutEmph.getter();
  v26 = (void (*)(_BYTE *, _QWORD))UIContentUnavailableConfiguration.textProperties.modify(v32);
  UIContentUnavailableConfiguration.TextProperties.font.setter(v25);
  v26(v32, 0);
  return ((uint64_t (*)(_BYTE *, uint64_t))v24)(v14, v7);
}

uint64_t sub_110DF0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  void (*v60)(_QWORD *, _QWORD);
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  void (*v64)(_QWORD *, _QWORD);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[4];
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;

  v67 = a3;
  v68 = a4;
  v66 = type metadata accessor for UIButton.Configuration(0);
  v10 = *(_QWORD *)(v66 - 8);
  v11 = __chkstk_darwin(v66);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIContentUnavailableConfiguration(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7000);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v69[0] = a1;
    swift_errorRetain(a1);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6288);
    v24 = type metadata accessor for TTMLParserError(0, v23);
    v65 = v13;
    v25 = v17;
    v26 = v10;
    v27 = a2;
    v28 = a5;
    v29 = v15;
    v30 = v14;
    v31 = a6;
    v32 = v24;
    v33 = swift_dynamicCast(v21, v69, v22, v24, 6);
    v34 = *(_QWORD *)(v32 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v21, v33 ^ 1u, 1, v32);
    v35 = v32;
    a6 = v31;
    v14 = v30;
    v15 = v29;
    a5 = v28;
    a2 = v27;
    v10 = v26;
    v17 = v25;
    v13 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v21, 1, v35) != 1)
    {
      v36 = sub_111328((uint64_t)v21);
      static UIContentUnavailableConfiguration.empty()(v36);
      v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v38._countAndFlagsBits = 0xD000000000000015;
      v70._object = (void *)0xE000000000000000;
      v38._object = (void *)0x800000000030E2F0;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v70._countAndFlagsBits = 0;
      v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v70);

      return UIContentUnavailableConfiguration.secondaryText.setter(v40._countAndFlagsBits, v40._object);
    }
  }
  else
  {
    v42 = type metadata accessor for TTMLParserError(0, v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v21, 1, 1, v42);
  }
  v43 = sub_111328((uint64_t)v21);
  static UIContentUnavailableConfiguration.empty()(v43);
  if ((a2 & 1) != 0)
  {
    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v45._countAndFlagsBits = 0xD000000000000014;
    v71._object = (void *)0xE000000000000000;
    v45._object = (void *)0x800000000030E2B0;
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    v71._countAndFlagsBits = 0;
    v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v71);

    UIContentUnavailableConfiguration.text.setter(v47._countAndFlagsBits, v47._object);
    v48._countAndFlagsBits = 0xD000000000000013;
    v48._object = (void *)0x800000000030E2D0;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v50 = localizedStringReferencingWiFi(_:comment:)(v48, v49);
    return UIContentUnavailableConfiguration.secondaryText.setter(v50._countAndFlagsBits, v50._object);
  }
  else
  {
    v51 = (void *)objc_opt_self(NSBundle);
    v52 = objc_msgSend(v51, "mainBundle");
    v53._countAndFlagsBits = 0xD00000000000001FLL;
    v72._object = (void *)0xE000000000000000;
    v53._object = (void *)0x800000000030E270;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v72._countAndFlagsBits = 0;
    v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v72);
    v65 = a6;

    UIContentUnavailableConfiguration.secondaryText.setter(v55._countAndFlagsBits, v55._object);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v67, v66);
    UIContentUnavailableConfiguration.button.setter(v13);
    v56 = objc_msgSend(v51, "mainBundle");
    v73._object = (void *)0xE000000000000000;
    v57._object = (void *)0x800000000030E290;
    v57._countAndFlagsBits = 0xD000000000000010;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    v73._countAndFlagsBits = 0;
    v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v73);

    v60 = (void (*)(_QWORD *, _QWORD))UIContentUnavailableConfiguration.button.modify(v69);
    UIButton.Configuration.title.setter(v59._countAndFlagsBits, v59._object);
    v60(v69, 0);
    sub_E710(0, (unint64_t *)&qword_3D8FA0, UIAction_ptr);
    v61 = swift_allocObject(&unk_382AD8, 32, 7);
    *(_QWORD *)(v61 + 16) = v68;
    *(_QWORD *)(v61 + 24) = a5;
    v62 = swift_retain(a5);
    v63 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v62, 0, 0, 0, sub_43920, v61);
    v64 = (void (*)(_QWORD *, _QWORD))UIContentUnavailableConfiguration.buttonProperties.modify(v69);
    UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter(v63);
    v64(v69, 0);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v65, v17, v14);
  }
}

uint64_t sub_111328(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_111368()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_11138C()
{
  qword_3D7008 = 0x4024000000000000;
}

int64x2_t sub_11139C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4057800000000000uLL);
  xmmword_3D7010 = (__int128)result;
  return result;
}

void sub_1113B8()
{
  qword_3D7020 = 0x4030000000000000;
}

void sub_1113C8()
{
  qword_3D7028 = 0x4014000000000000;
}

uint64_t sub_1113D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for PlayControlsIconsSet(0);
  __swift_allocate_value_buffer(v0, qword_3D7030);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_3D7030);
  if (qword_3CFDE0 != -1)
    swift_once(&qword_3CFDE0, sub_2B3230);
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_3FD8A0);
  return sub_113AC0(v2, v1);
}

void sub_111458(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  double v6;

  v2 = v1;
  v3 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering;
  v4 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering] = a1;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter];
  if (v5)
  {
    *(_BYTE *)(v5 + 56) = a1 & 1;
    swift_retain(v5);
    sub_2B33B8();
    *(_QWORD *)&v6 = swift_release(v5).n128_u64[0];
    if (v4 != v2[v3])
      objc_msgSend(v2, "setNeedsUpdateConfiguration", v6);
  }
  else
  {
    __break(1u);
  }
}

void sub_111560(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  double v6;
  void *v7;
  _BYTE *v8;
  char v9;
  objc_super v10;
  objc_super v11;
  objc_super v12;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v12.receiver = v2;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "setSelected:", a1 & 1);
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter];
  if (v5)
  {
    v10.receiver = v2;
    v10.super_class = ObjectType;
    *(_QWORD *)&v6 = swift_retain(v5).n128_u64[0];
    *(_BYTE *)(v5 + 58) = objc_msgSendSuper2(&v10, "isSelected", v6);
    sub_2B3668();
    swift_release(v5);
  }
  v7 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView];
  if (v7)
  {
    v11.receiver = v2;
    v11.super_class = ObjectType;
    v8 = v7;
    v9 = objc_msgSendSuper2(&v11, "isSelected");
    v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isSuperviewSelected] = v9;
    sub_1B7F78(v9);

  }
}

id sub_111640()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EpisodeCellDoubleClickGestureRecognizer()), "init");
    v6 = swift_allocObject(&unk_382BF0, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v4);
    swift_retain(v6);
    v7 = sub_B081C((uint64_t)sub_113C5C, v6);
    swift_release(v7);
    swift_release_n(v6, 2);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_111704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v13[3];
  uint64_t v14;
  _QWORD v15[5];
  _BYTE v16[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter];
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsPresenter_playPauseAction);
      if (v7)
      {
        v15[3] = type metadata accessor for Action(0);
        v15[4] = sub_239FC((unint64_t *)&qword_3D9C10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
        v15[0] = v7;
        v14 = type metadata accessor for MultiShowMacEpisodeCell();
        v13[0] = v5;
        v9 = sub_239FC(&qword_3D70E8, v8, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F7320);
        swift_retain_n(v7, 3);
        v10 = v5;
        v11 = ShelfUIKitCell.perform(_:from:in:)(v15, v13, v5, v14, v9);
        swift_release(v11);
        sub_1FE78((uint64_t)v13);
        sub_11323C(v12);
        __swift_destroy_boxed_opaque_existential_0(v15);
        swift_release_n(v7, 2);

      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_111844(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsView] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkPlusInfoContainer;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer] = 0;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture] = 0;
  v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isPresentedInSearch] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_recentlySearchedStorage] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_model] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_objectGraph] = 0;

  v17.receiver = v12;
  v17.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_B10E0();
  v14 = v13;
  v15 = sub_111640();
  objc_msgSend(v14, "addGestureRecognizer:", v15);

  return v14;
}

void sub_111A10(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  _BYTE *v17;
  char v18;
  _BYTE *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  __int128 v27;
  id v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  double leading;
  double bottom;
  double trailing;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  Swift::Int v66;
  id v67;
  id v68;
  uint64_t v69;
  void *v70;
  void *v71;
  _BYTE *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  Swift::String v80;
  Swift::String v81;
  unint64_t v82;
  NSString v83;
  void *v84;
  id v85;
  Swift::String v86;
  Swift::String v87;
  unint64_t v88;
  NSString v89;
  void *v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  void *v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  void *v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  void *v156;
  id v157;
  id v158;
  id v159;
  void *v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  void *v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  void *v174;
  void *v175;
  id v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  Class isa;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  objc_class *v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  unint64_t v190;
  char v191[24];
  objc_super v192;
  objc_super v193;
  _OWORD v194[2];
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  __int16 v202;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for PlayControlsIconsSet(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5918);
  __chkstk_darwin(v8);
  v10 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsView;
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsView]
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView]
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback]
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer])
  {
    type metadata accessor for LegacyArtworkWithPlaybackStatusView(0);
    v12 = type metadata accessor for ImageBlur(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
    swift_retain(a1);
    v14 = sub_224850(v13, (uint64_t)v10);
    swift_release(a1);
    v15 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback;
    v16 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback];
    *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback] = v14;

    v17 = *(_BYTE **)&v2[v15];
    if (v17)
    {
      v18 = v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v17[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      LOBYTE(v194[0]) = v18;
      v19 = v17;
      sub_EB33C((unsigned __int8 *)v194);

      v20 = *(void **)&v2[v15];
      if (v20)
      {
        v21 = qword_3CFA90;
        v22 = v20;
        if (v21 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v23 = (void *)qword_3FCF18;
        v24 = qword_3FCF30;
        v25 = &v22[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v26 = *(void **)&v22[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v27 = unk_3FCF20;
        *(_QWORD *)v25 = qword_3FCF18;
        *(_OWORD *)(v25 + 8) = v27;
        *((_QWORD *)v25 + 3) = v24;
        v28 = v23;

        sub_E9020();
        v29 = *(void **)&v2[v15];
        if (v29)
        {
          v181 = v5;
          v182 = v7;
          v183 = a1;
          v184 = (objc_class *)ObjectType;
          v187 = v11;
          v30 = qword_3CFB40;
          v31 = v29;
          if (v30 != -1)
            swift_once(&qword_3CFB40, sub_20B358);
          v32 = qword_3FD248;
          v33 = unk_3FD250;
          v34 = xmmword_3FD258;
          v35 = qword_3FD268;
          v36 = unk_3FD270;
          v37 = qword_3FD278;
          v186 = xmmword_3FD228;
          v194[0] = xmmword_3FD228;
          v194[1] = unk_3FD238;
          v195 = qword_3FD248;
          v196 = unk_3FD250;
          v197 = xmmword_3FD258;
          v198 = qword_3FD268;
          v199 = unk_3FD270;
          v200 = qword_3FD278;
          v185 = unk_3FD280;
          v201 = unk_3FD280;
          v202 = word_3FD290 | (HIBYTE(word_3FD290) << 8);
          v38 = objc_allocWithZone((Class)type metadata accessor for ArtworkContainer(0));
          v39 = (id)v186;
          sub_B7A24(v32, v33, v34, *((uint64_t *)&v34 + 1), v35, v36, v37, (void *)v185);
          v40 = sub_2633EC(2, v31, (uint64_t *)v194);
          v41 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer;
          v42 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer];
          *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer] = v40;

          v43 = *(_QWORD *)&v2[v41];
          if (v43)
          {
            v44 = v43 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ArtworkContainer_delegate;
            *(_QWORD *)(v44 + 8) = &off_382AF0;
            swift_unknownObjectWeakAssign(v44, v2);
            LOBYTE(v194[0]) = 1;
            v45 = v187;
            v46 = v184;
            v47 = v181;
            if (qword_3CF3B0 != -1)
              swift_once(&qword_3CF3B0, sub_1113D8);
            v48 = __swift_project_value_buffer(v47, (uint64_t)qword_3D7030);
            v49 = (uint64_t)v182;
            sub_113AC0(v48, (uint64_t)v182);
            v50 = type metadata accessor for PlayControlsPresenter(0);
            swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
            v51 = v183;
            swift_retain(v183);
            v52 = sub_2B4D24((unsigned __int8 *)v194, v49, v51);
            swift_release(v51);
            v53 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter;
            v54 = *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter];
            *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter] = v52;
            swift_release(v54);
            v55 = *(_QWORD *)&v2[v53];
            if (v55)
            {
              v193.receiver = v2;
              v193.super_class = v46;
              *(_QWORD *)&v56 = swift_retain(v55).n128_u64[0];
              *(_BYTE *)(v55 + 58) = objc_msgSendSuper2(&v193, "isSelected", v56);
              sub_2B3668();
              swift_release(v55);
              v57 = *(_QWORD *)&v2[v53];
              if (v57)
              {
                leading = NSDirectionalEdgeInsetsZero.leading;
                bottom = NSDirectionalEdgeInsetsZero.bottom;
                trailing = NSDirectionalEdgeInsetsZero.trailing;
                objc_allocWithZone((Class)type metadata accessor for PlayControlsStackView());
                swift_retain(v57);
                v62 = sub_10B650(v61, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
                v63 = *(void **)&v2[v45];
                *(_QWORD *)&v2[v45] = v62;

                v64 = *(_QWORD *)&v2[v45];
                if (v64)
                {
                  v65 = v64 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate;
                  swift_beginAccess(v64 + OBJC_IVAR____TtC23ShelfKitCollectionViews21PlayControlsStackView_delegate, v194, 1, 0);
                  *(_QWORD *)(v65 + 8) = &off_382B00;
                  swift_unknownObjectWeakAssign(v65, v2);
                  v191[0] = 5;
                  v66 = sub_F3870((uint64_t)&off_379D08);
                  v67 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
                  v68 = sub_1B80D8(v191, v66);
                  v69 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView;
                  v70 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView];
                  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView] = v68;

                  v71 = *(void **)&v2[v69];
                  if (v71)
                  {
                    v192.receiver = v2;
                    v192.super_class = v46;
                    v72 = v71;
                    v73 = objc_msgSendSuper2(&v192, "isSelected");
                    v72[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_isSuperviewSelected] = v73;
                    sub_1B7F78(v73);

                    v74 = *(_QWORD *)&v2[v69];
                    if (v74)
                    {
                      v75 = v74 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate;
                      swift_beginAccess(v74 + OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_delegate, v191, 1, 0);
                      *(_QWORD *)(v75 + 8) = &off_382B10;
                      swift_unknownObjectWeakAssign(v75, v2);
                      v76 = objc_msgSend(v2, "contentView");
                      objc_msgSend(v76, "directionalLayoutMargins");
                      objc_msgSend(v76, "setDirectionalLayoutMargins:", 0.0);

                      v77 = objc_msgSend(v2, "contentView");
                      objc_msgSend(v77, "directionalLayoutMargins");
                      objc_msgSend(v77, "setDirectionalLayoutMargins:");

                      v78 = *(void **)&v2[v45];
                      if (v78)
                      {
                        v189 = 0;
                        v190 = 0xE000000000000000;
                        v79 = v78;
                        v80._countAndFlagsBits = 0xD00000000000001ELL;
                        v80._object = (void *)0x80000000003078F0;
                        String.append(_:)(v80);
                        v81._countAndFlagsBits = 46;
                        v81._object = (void *)0xE100000000000000;
                        String.append(_:)(v81);
                        v188 = 1;
                        _print_unlocked<A, B>(_:_:)(&v188, &v189, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                        v82 = v190;
                        v83 = String._bridgeToObjectiveC()();
                        objc_msgSend(v79, "setAccessibilityIdentifier:", v83, swift_bridgeObjectRelease(v82).n128_f64[0]);

                        v84 = *(void **)&v2[v69];
                        if (v84)
                        {
                          v189 = 0;
                          v190 = 0xE000000000000000;
                          v85 = v84;
                          v86._countAndFlagsBits = 0xD00000000000001ELL;
                          v86._object = (void *)0x80000000003078F0;
                          String.append(_:)(v86);
                          v87._countAndFlagsBits = 46;
                          v87._object = (void *)0xE100000000000000;
                          String.append(_:)(v87);
                          v188 = 2;
                          _print_unlocked<A, B>(_:_:)(&v188, &v189, &type metadata for ShelfItemSubcomponentID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
                          v88 = v190;
                          v89 = String._bridgeToObjectiveC()();
                          objc_msgSend(v85, "setAccessibilityIdentifier:", v89, swift_bridgeObjectRelease(v88).n128_f64[0]);

                          if (*(_QWORD *)&v2[v41])
                          {
                            v90 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkPlusInfoContainer];
                            objc_msgSend(v90, "addSubview:");
                            v91 = v187;
                            if (*(_QWORD *)&v2[v69])
                            {
                              objc_msgSend(v90, "addSubview:");
                              v92 = objc_msgSend(v2, "contentView");
                              objc_msgSend(v92, "addSubview:", v90);

                              v93 = objc_msgSend(v2, "contentView");
                              if (*(_QWORD *)&v2[v91])
                              {
                                v94 = v93;
                                objc_msgSend(v93, "addSubview:");

                                objc_msgSend(v90, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                v95 = *(void **)&v2[v41];
                                if (v95)
                                {
                                  objc_msgSend(v95, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                  v96 = *(void **)&v2[v69];
                                  if (v96)
                                  {
                                    objc_msgSend(v96, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                    v97 = *(void **)&v2[v91];
                                    if (v97)
                                    {
                                      objc_msgSend(v97, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                                      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                                      v99 = swift_allocObject(v98, 168, 7);
                                      *(_OWORD *)(v99 + 16) = xmmword_2F7160;
                                      v100 = *(void **)&v2[v41];
                                      if (v100)
                                      {
                                        v101 = objc_msgSend(v100, "leadingAnchor");
                                        v102 = objc_msgSend(v90, "leadingAnchor");
                                        v103 = objc_msgSend(v101, "constraintEqualToAnchor:", v102);

                                        *(_QWORD *)(v99 + 32) = v103;
                                        v104 = *(void **)&v2[v41];
                                        if (v104)
                                        {
                                          v105 = objc_msgSend(v104, "topAnchor");
                                          v106 = objc_msgSend(v90, "topAnchor");
                                          v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

                                          *(_QWORD *)(v99 + 40) = v107;
                                          v108 = objc_msgSend(v90, "bottomAnchor");
                                          v109 = *(void **)&v2[v41];
                                          if (v109)
                                          {
                                            v110 = objc_msgSend(v109, "bottomAnchor");
                                            v111 = objc_msgSend(v108, "constraintGreaterThanOrEqualToAnchor:", v110);

                                            *(_QWORD *)(v99 + 48) = v111;
                                            v112 = *(void **)&v2[v41];
                                            if (v112)
                                            {
                                              v113 = objc_msgSend(v112, "heightAnchor");
                                              if (qword_3CF398 != -1)
                                                swift_once(&qword_3CF398, sub_11139C);
                                              v114 = objc_msgSend(v113, "constraintEqualToConstant:", *((double *)&xmmword_3D7010 + 1));

                                              *(_QWORD *)(v99 + 56) = v114;
                                              v115 = *(void **)&v2[v41];
                                              if (v115)
                                              {
                                                v116 = objc_msgSend(v115, "widthAnchor");
                                                v117 = objc_msgSend(v116, "constraintEqualToConstant:", *(double *)&xmmword_3D7010);

                                                *(_QWORD *)(v99 + 64) = v117;
                                                v118 = *(void **)&v2[v69];
                                                if (v118)
                                                {
                                                  v119 = objc_msgSend(v118, "leadingAnchor");
                                                  v120 = *(void **)&v2[v41];
                                                  if (v120)
                                                  {
                                                    v121 = objc_msgSend(v120, "trailingAnchor");
                                                    if (qword_3CF390 != -1)
                                                      swift_once(&qword_3CF390, sub_11138C);
                                                    v122 = objc_msgSend(v119, "constraintEqualToAnchor:constant:", v121, *(double *)&qword_3D7008);

                                                    *(_QWORD *)(v99 + 72) = v122;
                                                    v123 = *(void **)&v2[v69];
                                                    if (v123)
                                                    {
                                                      v124 = objc_msgSend(v123, "topAnchor");
                                                      v125 = objc_msgSend(v90, "topAnchor");
                                                      v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

                                                      *(_QWORD *)(v99 + 80) = v126;
                                                      v127 = *(void **)&v2[v69];
                                                      if (v127)
                                                      {
                                                        v128 = objc_msgSend(v127, "trailingAnchor");
                                                        v129 = objc_msgSend(v90, "trailingAnchor");
                                                        v130 = objc_msgSend(v128, "constraintEqualToAnchor:", v129);

                                                        *(_QWORD *)(v99 + 88) = v130;
                                                        v131 = objc_msgSend(v90, "bottomAnchor");
                                                        *(_QWORD *)&v186 = v69;
                                                        v132 = *(void **)&v2[v69];
                                                        if (v132)
                                                        {
                                                          v133 = objc_msgSend(v132, "bottomAnchor");
                                                          v134 = objc_msgSend(v131, "constraintGreaterThanOrEqualToAnchor:", v133);

                                                          *(_QWORD *)(v99 + 96) = v134;
                                                          v135 = objc_msgSend(v90, "leadingAnchor");
                                                          v136 = objc_msgSend(v2, "contentView");
                                                          v137 = objc_msgSend(v136, "layoutMarginsGuide");

                                                          v138 = objc_msgSend(v137, "leadingAnchor");
                                                          v139 = objc_msgSend(v135, "constraintEqualToAnchor:", v138);

                                                          *(_QWORD *)(v99 + 104) = v139;
                                                          v140 = objc_msgSend(v90, "topAnchor");
                                                          v141 = objc_msgSend(v2, "contentView");
                                                          v142 = objc_msgSend(v141, "layoutMarginsGuide");

                                                          v143 = objc_msgSend(v142, "topAnchor");
                                                          if (qword_3CF3A0 != -1)
                                                            swift_once(&qword_3CF3A0, sub_1113B8);
                                                          v144 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v143, *(double *)&qword_3D7020);

                                                          *(_QWORD *)(v99 + 112) = v144;
                                                          v145 = objc_msgSend(v2, "contentView");
                                                          v146 = objc_msgSend(v145, "layoutMarginsGuide");

                                                          v147 = objc_msgSend(v146, "bottomAnchor");
                                                          v148 = objc_msgSend(v90, "topAnchor");
                                                          v149 = objc_msgSend(v147, "constraintGreaterThanOrEqualToAnchor:constant:", v148, *(double *)&qword_3D7020);

                                                          *(_QWORD *)(v99 + 120) = v149;
                                                          v150 = objc_msgSend(v90, "widthAnchor");
                                                          v151 = objc_msgSend(v2, "contentView");
                                                          v152 = objc_msgSend(v151, "layoutMarginsGuide");

                                                          v153 = objc_msgSend(v152, "widthAnchor");
                                                          v154 = objc_msgSend(v150, "constraintEqualToAnchor:multiplier:", v153, 0.6);

                                                          *(_QWORD *)(v99 + 128) = v154;
                                                          v155 = v187;
                                                          v156 = *(void **)&v2[v187];
                                                          if (v156)
                                                          {
                                                            v157 = objc_msgSend(v156, "leadingAnchor");
                                                            v158 = objc_msgSend(v90, "trailingAnchor");
                                                            if (qword_3CF3A8 != -1)
                                                              swift_once(&qword_3CF3A8, sub_1113C8);
                                                            v159 = objc_msgSend(v157, "constraintEqualToAnchor:constant:", v158, *(double *)&qword_3D7028);

                                                            *(_QWORD *)(v99 + 136) = v159;
                                                            v160 = *(void **)&v2[v155];
                                                            if (v160)
                                                            {
                                                              v161 = objc_msgSend(v160, "trailingAnchor");
                                                              v162 = objc_msgSend(v2, "contentView");
                                                              v163 = objc_msgSend(v162, "layoutMarginsGuide");

                                                              v164 = objc_msgSend(v163, "trailingAnchor");
                                                              v165 = objc_msgSend(v161, "constraintEqualToAnchor:", v164);

                                                              *(_QWORD *)(v99 + 144) = v165;
                                                              v166 = *(void **)&v2[v155];
                                                              if (v166)
                                                              {
                                                                v167 = objc_msgSend(v166, "centerYAnchor");
                                                                v168 = objc_msgSend(v2, "contentView");
                                                                v169 = objc_msgSend(v168, "layoutMarginsGuide");

                                                                v170 = objc_msgSend(v169, "centerYAnchor");
                                                                v171 = objc_msgSend(v167, "constraintEqualToAnchor:", v170);

                                                                *(_QWORD *)(v99 + 152) = v171;
                                                                v172 = objc_msgSend(v2, "separatorLayoutGuide");
                                                                v173 = objc_msgSend(v172, "leadingAnchor");

                                                                v174 = *(void **)&v2[v186];
                                                                if (v174)
                                                                {
                                                                  v175 = (void *)objc_opt_self(NSLayoutConstraint);
                                                                  v176 = objc_msgSend(v174, "leadingAnchor");
                                                                  v177 = objc_msgSend(v173, "constraintEqualToAnchor:", v176);

                                                                  *(_QWORD *)(v99 + 160) = v177;
                                                                  v189 = v99;
                                                                  specialized Array._endMutation()(v178);
                                                                  v179 = v189;
                                                                  sub_12D34();
                                                                  isa = Array._bridgeToObjectiveC()().super.isa;
                                                                  objc_msgSend(v175, "activateConstraints:", isa, swift_bridgeObjectRelease(v179).n128_f64[0]);

                                                                  return;
                                                                }
LABEL_82:
                                                                __break(1u);
                                                                return;
                                                              }
LABEL_81:
                                                              __break(1u);
                                                              goto LABEL_82;
                                                            }
LABEL_80:
                                                            __break(1u);
                                                            goto LABEL_81;
                                                          }
LABEL_79:
                                                          __break(1u);
                                                          goto LABEL_80;
                                                        }
LABEL_78:
                                                        __break(1u);
                                                        goto LABEL_79;
                                                      }
LABEL_77:
                                                      __break(1u);
                                                      goto LABEL_78;
                                                    }
LABEL_76:
                                                    __break(1u);
                                                    goto LABEL_77;
                                                  }
LABEL_75:
                                                  __break(1u);
                                                  goto LABEL_76;
                                                }
LABEL_74:
                                                __break(1u);
                                                goto LABEL_75;
                                              }
LABEL_73:
                                              __break(1u);
                                              goto LABEL_74;
                                            }
LABEL_72:
                                            __break(1u);
                                            goto LABEL_73;
                                          }
LABEL_71:
                                          __break(1u);
                                          goto LABEL_72;
                                        }
LABEL_70:
                                        __break(1u);
                                        goto LABEL_71;
                                      }
LABEL_69:
                                      __break(1u);
                                      goto LABEL_70;
                                    }
LABEL_68:
                                    __break(1u);
                                    goto LABEL_69;
                                  }
LABEL_67:
                                  __break(1u);
                                  goto LABEL_68;
                                }
LABEL_66:
                                __break(1u);
                                goto LABEL_67;
                              }
LABEL_65:
                              __break(1u);
                              goto LABEL_66;
                            }
LABEL_64:
                            __break(1u);
                            goto LABEL_65;
                          }
LABEL_63:
                          __break(1u);
                          goto LABEL_64;
                        }
LABEL_62:
                        __break(1u);
                        goto LABEL_63;
                      }
LABEL_61:
                      __break(1u);
                      goto LABEL_62;
                    }
LABEL_60:
                    __break(1u);
                    goto LABEL_61;
                  }
LABEL_59:
                  __break(1u);
                  goto LABEL_60;
                }
LABEL_58:
                __break(1u);
                goto LABEL_59;
              }
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
}

void sub_112C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD v27[3];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_objectGraph) = a1;
  swift_release(v4);
  v5 = type metadata accessor for RecentlySearchedStorage(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v27, v5, v5);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_recentlySearchedStorage);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_recentlySearchedStorage) = v27[0];
  swift_release(v6);
  v8 = ModernShelf.ItemPresentation.itemKind.getter(v7);
  v9 = ModernShelf.ItemKind.rawValue.getter(v8);
  v11 = v10;
  v13 = ModernShelf.ItemKind.rawValue.getter(61);
  v14 = v12;
  if (v9 == v13 && v11 == v12)
  {
    v15 = 1;
    v14 = v11;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v12, 0);
  }
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isPresentedInSearch) = v15 & 1;
  sub_111A10(a1);
  v16 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView);
  if (!v16)
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = (uint64_t *)&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
  swift_beginAccess(&v16[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v27, 1, 0);
  v18 = *v17;
  *v17 = a1;
  v19 = v16;
  swift_release(v18);
  v20 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(&v26, v20, v20);
  v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
  *(_QWORD *)&v19[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v26;

  swift_release(v21);
  v22 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer);
  if (!v22)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v23 = v22;
  sub_262730(a1);

  v24 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsView);
  if (v24)
  {
    v25 = v24;
    PlayControlsStackView.bind(to:)(a1);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_112E60(uint64_t a1)
{
  char *v1;
  id v3;
  double Width;
  id v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  id v14;
  objc_super v15;
  CGRect v16;

  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v15, "preferredLayoutAttributesFittingAttributes:", a1);
  objc_msgSend(v3, "bounds");
  Width = CGRectGetWidth(v16);
  v5 = objc_msgSend(v1, "contentView");
  objc_msgSend(v5, "directionalLayoutMargins");
  v7 = v6;

  v8 = objc_msgSend(v1, "contentView");
  objc_msgSend(v8, "directionalLayoutMargins");
  v10 = v9;

  if (qword_3CF398 != -1)
    swift_once(&qword_3CF398, sub_11139C);
  v11 = *(double *)&xmmword_3D7010;
  if (qword_3CF390 != -1)
    swift_once(&qword_3CF390, sub_11138C);
  v12 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView];
  if (v12)
  {
    v13 = (Width - v7 - v10) * 0.6 - v11 - *(double *)&qword_3D7008;
    v14 = v12;
    EpisodeInfoView.prepareForLayout(fitting:)(v13);

    if (qword_3CF3A0 != -1)
      swift_once(&qword_3CF3A0, sub_1113B8);
    objc_msgSend(v3, "size");
    objc_msgSend(v3, "setSize:");
  }
  else
  {
    __break(1u);
  }
}

char *sub_1130AC()
{
  char *v0;
  char *result;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  result = (char *)objc_msgSendSuper2(&v12, "prepareForReuse");
  v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView];
  if (!v2)
    goto LABEL_16;
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v11, 1, 0);
  v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v4 < 0)
      v8 = *v3;
    else
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v3, 2);
    v9 = v2;
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v8);
    v5 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v4, 2);
    v10 = *v3;
    *v3 = (uint64_t)&_swiftEmptyArrayStorage;

    return (char *)swift_bridgeObjectRelease(v10);
  }
  v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(*v3, 2);
  result = v2;
  if (!v5)
    goto LABEL_14;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      }
      else
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_11323C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v5;
  _QWORD v6[5];

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isPresentedInSearch) == 1)
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_model);
    if (v2)
    {
      v3 = type metadata accessor for Podcasts(0, a1);
      v6[3] = v3;
      v6[4] = sub_239FC(&qword_3D2F80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Podcasts, (uint64_t)&protocol conformance descriptor for Podcasts);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(boxed_opaque_existential_0, enum case for Podcasts.recentlySearched(_:), v3);
      swift_retain(v2);
      LOBYTE(v3) = isFeatureEnabled(_:)(v6);
      __swift_destroy_boxed_opaque_existential_0(v6);
      if ((v3 & 1) != 0)
      {
        v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_recentlySearchedStorage);
        if (!v5)
        {
          __break(1u);
          return;
        }
        swift_retain(v5);
        RecentlySearchedStorage.add(_:)(v2);
        swift_release(v2);
        v2 = v5;
      }
      swift_release(v2);
    }
  }
}

uint64_t type metadata accessor for MultiShowMacEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell);
}

void sub_113428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_model);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_model) = a1;
  swift_release(v4);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView);
  if (!v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_retain(a1);
  v6 = v5;
  sub_1BA170(a1, 0);
  sub_1BA4B4();
  sub_1BA5E4();
  sub_1BA9D4(a1);
  v8 = type metadata accessor for LibraryEpisodeLockup(0, v7);
  if (swift_dynamicCastClass(a1, v8))
  {
    swift_retain(a1);
    sub_1BADF4();
    swift_release(a1);
  }
  else
  {
    v10 = LegacyLockup.adamId.getter(v9);
    if ((AdamID.isEmpty.getter(v10) & 1) == 0)
    {
      v12 = LegacyLockup.adamId.getter(v11);
      sub_1BAFF4(v12);
    }
  }
  EpisodeInfoView.beginUpdates()();

  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter);
  if (!v13)
    goto LABEL_11;
  swift_retain(*(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter));
  sub_2B2D0C(a1);
  swift_release(v13);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback);
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = v14;
  sub_22400C(a1);

  v16 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer);
  if (v16)
  {
    v17 = v16;
    sub_262C1C(a1);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1135A4(uint64_t *a1)
{
  sub_113428(*a1);
}

uint64_t sub_1135AC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_objectGraph));
}

uint64_t sub_1135C0(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D70F0, v3, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F7390);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_113618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D70F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F7390);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t sub_1136E8()
{
  void *v0;
  id v1;
  char v2;
  id v3;
  char v5;
  _QWORD v6[5];
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v7, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v1);

  v2 = *((_BYTE *)v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering);
  if (qword_3CFDF8 != -1)
    swift_once(&qword_3CFDF8, sub_2B75E8);
  v5 = v2;
  v3 = (id)qword_3FD8E0;
  AnyHashable.init<A>(_:)(v6, &v5, &type metadata for Bool, &protocol witness table for Bool);
  return UICellConfigurationState.subscript.setter(v6, v3);
}

uint64_t sub_1137BC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "contentView", v4);
  objc_msgSend(v7, "directionalLayoutMargins");
  v9 = v8;

  v10 = objc_msgSend(v1, "contentView");
  objc_msgSend(v10, "directionalLayoutMargins");
  v12 = v11;

  sub_2B73EC(a1, 0.0, v9 + -20.0, 0.0, v12 + -20.0);
  v13 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  return UICollectionViewCell.backgroundConfiguration.setter(v6);
}

id sub_113978(uint64_t a1, uint64_t a2)
{
  return sub_1139D4(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback);
}

double sub_113984()
{
  if (qword_3CF398 != -1)
    swift_once(&qword_3CF398, sub_11139C);
  return *(double *)&xmmword_3D7010;
}

id sub_1139C8(uint64_t a1, uint64_t a2)
{
  return sub_1139D4(a1, a2, &OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer);
}

id sub_1139D4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  id result;

  result = *(id *)(v3 + *a3);
  if (result)
    return result;
  __break(1u);
  return result;
}

uint64_t sub_1139E8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering);
}

void sub_1139FC(__n128 a1)
{
  sub_11323C(a1);
}

uint64_t sub_113A10(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D70D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F7268);
}

uint64_t sub_113A3C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D70D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F72F0);
}

uint64_t sub_113A68(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D70E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F72C8);
}

uint64_t sub_113A94(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D70E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MultiShowMacEpisodeCell, (uint64_t)&unk_2F7320);
}

uint64_t sub_113AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlayControlsIconsSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_113B04()
{
  _BYTE *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsPresenter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_playControlsView] = 0;
  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkPlusInfoContainer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_artworkViewWithPlayback] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_internalArtworkContainer] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isHovering] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell____lazy_storage___doubleClickToPlayGesture] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_isPresentedInSearch] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_recentlySearchedStorage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_model] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews23MultiShowMacEpisodeCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/MultiShowMacEpisodeCell.swift", 53, 2, 104, 0);
  __break(1u);
}

uint64_t sub_113C38()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_113C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_111704(a1, a2, v2);
}

int64x2_t sub_113C64()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_3D70F8 = (__int128)result;
  return result;
}

void sub_113C7C()
{
  qword_3D7108 = 0x4010000000000000;
}

uint64_t sub_113C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v21[4];
  char v22;
  _OWORD v23[2];
  char v24;

  v1 = type metadata accessor for AccessibilityChildBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7130);
  __chkstk_darwin(v5);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7138);
  v10 = sub_113E1C(v0, &v7[*(int *)(v9 + 44)]);
  v11 = static Edge.Set.horizontal.getter(v10);
  memset(v23, 0, sizeof(v23));
  v24 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_3D7140);
  v12 = SafeAreaPaddingModifier.init(edges:insets:)(v11, v23);
  v13 = static Edge.Set.vertical.getter(v12);
  v21[0] = EdgeInsets.init(_all:)(8.0);
  v21[1] = v14;
  v21[2] = v15;
  v21[3] = v16;
  v22 = 0;
  v17 = SafeAreaPaddingModifier.init(edges:insets:)(v13, v21);
  static AccessibilityChildBehavior.combine.getter(v17);
  v18 = sub_1156FC();
  View.accessibilityElement(children:)(v4, v5, v18);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_D1D4((uint64_t)v7, &qword_3D7130);
}

uint64_t sub_113E1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  __n128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66;
  unint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t OpaqueTypeConformance2;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  void (**v112)(char *, char *, uint64_t);
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;
  unsigned __int8 v132;
  char *v133;
  unsigned __int8 v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  int *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  int *v169;
  char *v170;
  uint64_t v171;
  char v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  char *v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  _QWORD *v204;
  char *v205;
  uint64_t v206;
  int *v207;
  void (**v208)(char *, char *, uint64_t);
  uint64_t *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  int v220;
  uint64_t KeyPath;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char v232;
  _DWORD v233[2];
  _DWORD v234[2];
  _DWORD v235[2];
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  char v244;
  char *v245;
  uint64_t v246;
  unint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char v261;
  char v262;
  char v263;
  char v264;
  _BYTE v265[7];
  _BYTE v266[7];
  _BYTE v267[7];
  char *v268;
  char v269;
  unint64_t v270;
  char v271;
  char *v272;
  uint64_t v273;
  int *v274;
  unsigned __int8 v275;
  char *v276;
  unsigned __int8 v277;
  __int128 v278;

  v204 = a2;
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2620);
  __chkstk_darwin(v186);
  v191 = (uint64_t *)((char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Image.Scale(0);
  v189 = *(_QWORD *)(v8 - 8);
  v190 = v8;
  __chkstk_darwin(v8);
  v187 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7170);
  __chkstk_darwin(v206);
  v188 = (char *)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v192 = (uint64_t)&v186 - v12;
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7178);
  __chkstk_darwin(v201);
  v202 = (uint64_t *)((char *)&v186 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7180);
  __chkstk_darwin(v14);
  v203 = (uint64_t)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v228 = (uint64_t)&v186 - v18;
  v227 = type metadata accessor for HSpacer(0, v17);
  v225 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v226 = (char *)&v186 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v231 = (char *)&v186 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC8);
  __chkstk_darwin(v22);
  v196 = (char *)&v186 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = type metadata accessor for Artwork(0);
  v200 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v211 = (char *)&v186 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7188);
  v208 = *(void (***)(char *, char *, uint64_t))(v219 - 8);
  __chkstk_darwin(v219);
  v199 = (char *)&v186 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v205 = (char *)&v186 - v27;
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7190);
  __chkstk_darwin(v214);
  v218 = (char *)&v186 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EC0);
  __chkstk_darwin(v29);
  v213 = (char *)&v186 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for RoundedCornerStyle(0);
  v31 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v33 = (char *)&v186 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v215);
  v209 = (uint64_t *)((char *)&v186 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = type metadata accessor for Color.RGBColorSpace(0);
  v193 = *(_QWORD *)(v35 - 8);
  v194 = v35;
  __chkstk_darwin(v35);
  v37 = (char *)&v186 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7198);
  v198 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v195 = (char *)&v186 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v197 = (char *)&v186 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
  __chkstk_darwin(v41);
  v43 = (char *)&v186 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v186 - v45;
  v47 = type metadata accessor for ArtworkModel(0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v210 = (uint64_t)&v186 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71A0);
  __chkstk_darwin(v50);
  v224 = (uint64_t)&v186 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v230 = (uint64_t)&v186 - v53;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0E88);
  __chkstk_darwin(v54);
  v56 = (char *)&v186 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = a1;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v223 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v57 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
    v58 = static Font.system(size:weight:design:)(0, 1, v56, 8.0);
    sub_D1D4((uint64_t)v56, &qword_3D0E88);
    v222 = Font.bold()(v58);
    swift_release(v58);
    KeyPath = swift_getKeyPath(&unk_2F7558);
    v220 = static HierarchicalShapeStyle.secondary.getter(v59);
  }
  else
  {
    v222 = 0;
    v223 = 0;
    KeyPath = 0;
    v220 = 0;
  }
  v207 = (int *)type metadata accessor for CategoryListItem(0);
  sub_D184(v229 + v207[6], (uint64_t)v46, &qword_3D0A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    v60 = sub_D1D4((uint64_t)v46, &qword_3D0A58);
    if (qword_3CF3B8 != -1)
      v60 = swift_once(&qword_3CF3B8, sub_113C64);
    v62 = xmmword_3D70F8;
    v63 = static Alignment.center.getter(v60, v61);
    _FrameLayout.init(width:height:alignment:)(&v268, v62, 0, *((_QWORD *)&v62 + 1), 0, v63, v64);
    v65 = v268;
    v66 = v269;
    v67 = v270;
    v68 = v271;
    v69 = v272;
    v70 = v273;
    v71 = (_BYTE *)(v229 + v207[7]);
    LOBYTE(v2) = *v71;
    LOBYTE(v3) = v71[1];
    LOBYTE(v4) = v71[2];
    LOBYTE(v5) = v71[3];
    (*(void (**)(char *, _QWORD, uint64_t))(v193 + 104))(v37, enum case for Color.RGBColorSpace.sRGB(_:), v194);
    v72 = Color.init(_:red:green:blue:opacity:)(v37, (double)v2 / 255.0, (double)v3 / 255.0, (double)v4 / 255.0, (double)v5 / 255.0);
    v245 = v65;
    LOBYTE(v246) = v66;
    v247 = v67;
    LOBYTE(v248) = v68;
    v249 = v69;
    v250 = v70;
    v251 = v72;
    if (qword_3CF3C0 != -1)
      swift_once(&qword_3CF3C0, sub_113C7C);
    v73 = qword_3D7108;
    v74 = v212;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, enum case for RoundedCornerStyle.continuous(_:), v212);
    v75 = v215;
    v76 = v209;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v209 + *(int *)(v215 + 20), v33, v74);
    *v76 = v73;
    v76[1] = v73;
    v77 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v74);
    v78 = (uint64_t)v213;
    static ArtworkShadow.default.getter(v77);
    v79 = type metadata accessor for ArtworkShadow(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 0, 1, v79);
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71A8);
    v211 = (char *)v80;
    v81 = sub_11581C();
    v212 = v81;
    v82 = sub_89A0(&qword_3D71D0, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v83 = v195;
    View.artworkStyle<A>(shape:shadow:)(v76, v78, v80, v75, v81, v82);
    sub_D1D4(v78, &qword_3D0EC0);
    sub_FA4C((uint64_t)v76, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v84 = swift_release(v251);
    v85 = v197;
    v86 = v198;
    v87 = v216;
    (*(void (**)(char *, char *, uint64_t, __n128))(v198 + 32))(v197, v83, v216, v84);
    v88 = v218;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v218, v85, v87);
    swift_storeEnumTagMultiPayload(v88, v214, 1);
    v89 = sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v245 = (char *)v217;
    v246 = v75;
    v247 = v89;
    v248 = (char *)v82;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v245 = v211;
    v246 = v75;
    v247 = v212;
    v248 = (char *)v82;
    v91 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    _ConditionalContent<>.init(storage:)(v88, v219, v87, OpaqueTypeConformance2, v91);
    v92 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  }
  else
  {
    v93 = v210;
    sub_1B79C((uint64_t)v46, v210, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    sub_27E84(v93, (uint64_t)v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v47);
    if (qword_3CF3B8 != -1)
      swift_once(&qword_3CF3B8, sub_113C64);
    v94 = xmmword_3D70F8;
    v95 = type metadata accessor for CropCode(0);
    v96 = v196;
    v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v196, 1, 1, v95);
    v98 = static Alignment.top.getter(v97);
    Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:)(v43, 0, v98, v99, v96, 1, *(double *)&v94, *((double *)&v94 + 1));
    if (qword_3CF3C0 != -1)
      swift_once(&qword_3CF3C0, sub_113C7C);
    v100 = qword_3D7108;
    v101 = v212;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, enum case for RoundedCornerStyle.continuous(_:), v212);
    v102 = v215;
    v103 = v209;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v209 + *(int *)(v215 + 20), v33, v101);
    *v103 = v100;
    v103[1] = v100;
    v104 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v101);
    v105 = (uint64_t)v213;
    static ArtworkShadow.default.getter(v104);
    v106 = type metadata accessor for ArtworkShadow(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
    v107 = sub_89A0(&qword_3D0E68, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v108 = sub_89A0(&qword_3D71D0, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v109 = v199;
    v110 = v217;
    v111 = v211;
    View.artworkStyle<A>(shape:shadow:)(v103, v105, v217, v102, v107, v108);
    sub_D1D4(v105, &qword_3D0EC0);
    sub_FA4C((uint64_t)v103, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v111, v110);
    v112 = v208;
    v113 = v205;
    v114 = v219;
    v208[4](v205, v109, v219);
    v115 = v218;
    v112[2](v218, v113, v114);
    swift_storeEnumTagMultiPayload(v115, v214, 0);
    v245 = (char *)v110;
    v246 = v102;
    v247 = v107;
    v248 = (char *)v108;
    v116 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    v117 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D71A8);
    v118 = sub_11581C();
    v245 = (char *)v117;
    v246 = v102;
    v247 = v118;
    v248 = (char *)v108;
    v119 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.artworkStyle<A>(shape:shadow:)>>, 1);
    _ConditionalContent<>.init(storage:)(v115, v114, v216, v116, v119);
    ((void (*)(char *, uint64_t))v112[1])(v113, v114);
    v92 = sub_FA4C(v210, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
  }
  v120 = v228;
  v121 = HSpacer.init(_:)(v92, 12.0);
  v211 = (char *)static HorizontalAlignment.leading.getter(v121);
  v122 = v229;
  sub_115224(v229, (uint64_t)&v245);
  v208 = (void (**)(char *, char *, uint64_t))v246;
  v209 = (uint64_t *)v245;
  v213 = v249;
  v214 = (uint64_t)v248;
  v212 = v250;
  LODWORD(v123) = v251;
  v218 = v253;
  v219 = (uint64_t)v252;
  v200 = v254;
  v216 = (uint64_t)v256;
  v217 = v255;
  v215 = v257;
  LODWORD(v199) = v258;
  v264 = 1;
  LODWORD(v210) = v247;
  v263 = v247;
  v124 = v122 + v207[11];
  v262 = v251;
  sub_D184(v124, (uint64_t)&v245, (uint64_t *)&unk_3D30D0);
  v125 = v248;
  v126 = sub_D1D4((uint64_t)&v245, (uint64_t *)&unk_3D30D0);
  LODWORD(v205) = v123;
  if (v125)
  {
    v127 = static Color.gray.getter(v126);
    v129 = static Alignment.center.getter(v127, v128);
    _FrameLayout.init(width:height:alignment:)(&v274, 0x4039000000000000, 0, 0x4039000000000000, 0, v129, v130);
    v131 = v274;
    v132 = v275;
    v133 = v276;
    v134 = v277;
    v135 = v201;
    v136 = v202;
    *v202 = v127;
    *((_WORD *)v136 + 4) = 256;
    v136[2] = (uint64_t)v131;
    *((_BYTE *)v136 + 24) = v132;
    v136[4] = (uint64_t)v133;
    *((_BYTE *)v136 + 40) = v134;
    *((_OWORD *)v136 + 3) = v278;
    swift_storeEnumTagMultiPayload(v136, v135, 0);
    v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71D8);
    v138 = sub_115AB0();
    v139 = sub_115B34();
    _ConditionalContent<>.init(storage:)(v136, v137, v206, v138, v139);
  }
  else
  {
    v229 = Image.init(systemName:)(0x2E6E6F7276656863, 0xED00007468676972);
    v141 = static Alignment.center.getter(v229, v140);
    v143 = _FrameLayout.init(width:height:alignment:)(&v274, 0x403C000000000000, 0, 0x403C000000000000, 0, v141, v142);
    v207 = v274;
    LODWORD(v198) = v275;
    v197 = v276;
    LODWORD(v196) = v277;
    v194 = *((_QWORD *)&v278 + 1);
    v195 = (char *)v278;
    v144 = static Font.body.getter(v143);
    v145 = Font.bold()(v144);
    swift_release(v144);
    v146 = swift_getKeyPath(&unk_2F7558);
    v147 = static HierarchicalShapeStyle.tertiary.getter();
    v149 = v189;
    v148 = v190;
    v150 = v187;
    (*(void (**)(char *, _QWORD, uint64_t))(v189 + 104))(v187, enum case for Image.Scale.small(_:), v190);
    v151 = swift_getKeyPath(&unk_2F7588);
    v152 = v191;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))((char *)v191 + *(int *)(v186 + 28), v150, v148);
    *v152 = v151;
    v153 = (uint64_t)v188;
    sub_D184((uint64_t)v152, (uint64_t)&v188[*(int *)(v206 + 36)], &qword_3D2620);
    v154 = v229;
    v155 = v207;
    *(_QWORD *)v153 = v229;
    *(_QWORD *)(v153 + 8) = v155;
    *(_BYTE *)(v153 + 16) = v198;
    *(_QWORD *)(v153 + 24) = v197;
    *(_BYTE *)(v153 + 32) = (_BYTE)v196;
    v156 = v194;
    *(_QWORD *)(v153 + 40) = v195;
    *(_QWORD *)(v153 + 48) = v156;
    *(_QWORD *)(v153 + 56) = v146;
    *(_QWORD *)(v153 + 64) = v145;
    *(_DWORD *)(v153 + 72) = v147;
    v120 = v228;
    swift_retain(v154);
    swift_retain(v146);
    swift_retain(v145);
    sub_D1D4((uint64_t)v152, &qword_3D2620);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v150, v148);
    swift_release(v145);
    swift_release(v146);
    swift_release(v154);
    v123 = v192;
    sub_D210(v153, v192, &qword_3D7170);
    v157 = v202;
    sub_D184(v123, (uint64_t)v202, &qword_3D7170);
    swift_storeEnumTagMultiPayload(v157, v201, 1);
    v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D71D8);
    v159 = sub_115AB0();
    v160 = sub_115B34();
    _ConditionalContent<>.init(storage:)(v157, v158, v206, v159, v160);
    v161 = v123;
    LOBYTE(v123) = (_BYTE)v205;
    sub_D1D4(v161, &qword_3D7170);
  }
  v162 = v224;
  sub_D184(v230, v224, &qword_3D71A0);
  v163 = v226;
  v164 = *(void (**)(char *, char *, uint64_t))(v225 + 16);
  v165 = v227;
  v164(v226, v231, v227);
  v235[0] = *(_DWORD *)v267;
  *(_DWORD *)((char *)v235 + 3) = *(_DWORD *)&v267[3];
  v234[0] = *(_DWORD *)v266;
  *(_DWORD *)((char *)v234 + 3) = *(_DWORD *)&v266[3];
  v233[0] = *(_DWORD *)v265;
  *(_DWORD *)((char *)v233 + 3) = *(_DWORD *)&v265[3];
  v232 = 1;
  v166 = v203;
  sub_D184(v120, v203, &qword_3D7180);
  v167 = v204;
  v168 = KeyPath;
  *v204 = v223;
  v167[1] = v168;
  v167[2] = v222;
  *((_DWORD *)v167 + 6) = v220;
  v169 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_3D7240);
  sub_D184(v162, (uint64_t)v167 + v169[12], &qword_3D71A0);
  v164((char *)v167 + v169[16], v163, v165);
  v170 = (char *)v167 + v169[20];
  v236 = (unint64_t)v211;
  LOBYTE(v237) = 1;
  *(_DWORD *)((char *)&v237 + 1) = v235[0];
  DWORD1(v237) = *(_DWORD *)((char *)v235 + 3);
  *((_QWORD *)&v237 + 1) = v209;
  *(_QWORD *)&v238 = v208;
  BYTE8(v238) = v210;
  *(_DWORD *)((char *)&v238 + 9) = v234[0];
  HIDWORD(v238) = *(_DWORD *)((char *)v234 + 3);
  *(_QWORD *)&v239 = v214;
  *((_QWORD *)&v239 + 1) = v213;
  *(_QWORD *)&v240 = v212;
  BYTE8(v240) = v123;
  *(_DWORD *)((char *)&v240 + 9) = v233[0];
  HIDWORD(v240) = *(_DWORD *)((char *)v233 + 3);
  *(_QWORD *)&v241 = v219;
  *((_QWORD *)&v241 + 1) = v218;
  v171 = v200;
  *(_QWORD *)&v242 = v200;
  *((_QWORD *)&v242 + 1) = v217;
  *(_QWORD *)&v243 = v216;
  *((_QWORD *)&v243 + 1) = v215;
  v172 = (char)v199;
  v244 = (char)v199;
  v170[128] = (char)v199;
  v173 = v243;
  *((_OWORD *)v170 + 6) = v242;
  *((_OWORD *)v170 + 7) = v173;
  v174 = v236;
  v175 = v237;
  v176 = v241;
  *((_OWORD *)v170 + 4) = v240;
  *((_OWORD *)v170 + 5) = v176;
  v177 = v239;
  *((_OWORD *)v170 + 2) = v238;
  *((_OWORD *)v170 + 3) = v177;
  *(_OWORD *)v170 = v174;
  *((_OWORD *)v170 + 1) = v175;
  v178 = (char *)v167 + v169[24];
  v179 = v232;
  *(_QWORD *)v178 = 0;
  v178[8] = v179;
  sub_D184(v166, (uint64_t)v167 + v169[28], &qword_3D7180);
  v180 = v222;
  v181 = v223;
  v182 = KeyPath;
  sub_115D24(v223, KeyPath, v222);
  sub_115D60((uint64_t)&v236);
  sub_D1D4(v228, &qword_3D7180);
  v183 = *(void (**)(char *, uint64_t))(v225 + 8);
  v184 = v227;
  v183(v231, v227);
  sub_D1D4(v230, &qword_3D71A0);
  sub_D1D4(v166, &qword_3D7180);
  v245 = v211;
  v246 = 0;
  LOBYTE(v247) = 1;
  *(_DWORD *)((char *)&v247 + 1) = v235[0];
  HIDWORD(v247) = *(_DWORD *)((char *)v235 + 3);
  v248 = (char *)v209;
  v249 = (char *)v208;
  LOBYTE(v250) = v210;
  *(_DWORD *)((char *)&v250 + 1) = v234[0];
  HIDWORD(v250) = *(_DWORD *)((char *)v234 + 3);
  v251 = v214;
  v252 = v213;
  v253 = (char *)v212;
  LOBYTE(v254) = (_BYTE)v205;
  *(_DWORD *)((char *)&v254 + 1) = v233[0];
  HIDWORD(v254) = *(_DWORD *)((char *)v233 + 3);
  v255 = v219;
  v256 = v218;
  v257 = v171;
  v258 = v217;
  v259 = v216;
  v260 = v215;
  v261 = v172;
  sub_115DF4((uint64_t)&v245);
  v183(v226, v184);
  sub_D1D4(v224, &qword_3D71A0);
  return sub_115E88(v181, v182, v180);
}

double sub_115224@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double result;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t KeyPath;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v61 = type metadata accessor for CategoryListItem(0);
  v4 = (uint64_t *)(a1 + *(int *)(v61 + 32));
  v5 = v4[1];
  v68 = *v4;
  v69 = v5;
  v6 = sub_D254();
  swift_bridgeObjectRetain(v5);
  v59 = v6;
  v7 = Text.init<A>(_:)(&v68, &type metadata for String, v6);
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  v14 = static Font.callout.getter();
  v16 = Text.font(_:)(v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_release(v14);
  sub_D170(v7, v9, v13);
  v23 = swift_bridgeObjectRelease(v11);
  LODWORD(v68) = static HierarchicalShapeStyle.primary.getter(v23);
  v24 = Text.foregroundStyle<A>(_:)(&v68, v16, v18, v20 & 1, v22, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v66 = v25;
  v67 = v26;
  v28 = v27;
  sub_D170(v16, v18, v20 & 1);
  swift_bridgeObjectRelease(v22);
  KeyPath = swift_getKeyPath(&unk_2F75B8);
  v29 = (uint64_t *)(a1 + *(int *)(v61 + 36));
  v30 = v29[1];
  if (v30)
  {
    v68 = *v29;
    v69 = v30;
    swift_bridgeObjectRetain(v30);
    v31 = Text.init<A>(_:)(&v68, &type metadata for String, v59);
    v33 = v32;
    v35 = v34;
    v37 = v36 & 1;
    v38 = static Font.subheadline.getter(v31);
    v58 = v28;
    v40 = Text.font(_:)(v39);
    v42 = v41;
    v44 = v43;
    v57 = v45;
    swift_release(v38);
    sub_D170(v31, v33, v37);
    v46 = swift_bridgeObjectRelease(v35);
    LODWORD(v68) = static HierarchicalShapeStyle.secondary.getter(v46);
    v47 = Text.foregroundStyle<A>(_:)(&v68, v40, v42, v44 & 1, v57, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v62 = v48;
    v64 = v47;
    v60 = v49;
    v51 = v50 & 1;
    v52 = v40;
    v28 = v58;
    sub_D170(v52, v42, v44 & 1);
    swift_bridgeObjectRelease(v57);
    v53 = swift_getKeyPath(&unk_2F75B8);
    v54 = 1;
  }
  else
  {
    v62 = 0;
    v64 = 0;
    v51 = 0;
    v60 = 0;
    v53 = 0;
    v54 = 0;
  }
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v66;
  *(_BYTE *)(a2 + 16) = v28 & 1;
  *(_QWORD *)(a2 + 24) = v67;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v64;
  *(_QWORD *)(a2 + 64) = v62;
  *(_QWORD *)(a2 + 72) = v51;
  *(_QWORD *)(a2 + 80) = v60;
  *(_QWORD *)(a2 + 88) = v53;
  *(_QWORD *)(a2 + 96) = v54;
  *(_BYTE *)(a2 + 104) = 0;
  v55 = v53;
  sub_D130(v24, v66, v28 & 1);
  swift_bridgeObjectRetain(v67);
  swift_retain(KeyPath);
  sub_19F2C(v64, v62, v51, v60, v55);
  sub_1A100(v64, v62, v51, v60, v55);
  sub_D170(v24, v66, v28 & 1);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v67).n128_u64[0];
  return result;
}

uint64_t sub_115564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = type metadata accessor for ModernShelf.ItemPresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return sub_1B79C(a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CategoryListItem);
}

uint64_t sub_1155C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_89A0(&qword_3D7248, type metadata accessor for CategoryListCell, (uint64_t)&unk_2F74B8);
  return static ShelfSwiftUICell.modelType.getter(a1, v2);
}

uint64_t sub_115600()
{
  return sub_89A0(&qword_3D7110, type metadata accessor for CategoryListCell, (uint64_t)&unk_2F73D0);
}

uint64_t type metadata accessor for CategoryListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D72A8;
  if (!qword_3D72A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CategoryListCell);
  return result;
}

uint64_t sub_115668()
{
  return sub_89A0(&qword_3D7118, type metadata accessor for CategoryListCell, (uint64_t)&unk_2F7458);
}

uint64_t sub_115694()
{
  return sub_89A0(&qword_3D7120, type metadata accessor for CategoryListCell, (uint64_t)&unk_2F7508);
}

uint64_t sub_1156C0()
{
  return sub_89A0(&qword_3D7128, (uint64_t (*)(uint64_t))&type metadata accessor for CategoryListItem, (uint64_t)&protocol conformance descriptor for CategoryListItem);
}

uint64_t sub_1156EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32D4AC, 1);
}

unint64_t sub_1156FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7148;
  if (!qword_3D7148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7130);
    sub_115780();
    sub_89A0(&qword_3D7168, (uint64_t (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier, (uint64_t)&protocol conformance descriptor for SafeAreaPaddingModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7148);
  }
  return result;
}

unint64_t sub_115780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7150;
  if (!qword_3D7150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7140);
    sub_10EDC(&qword_3D7158, &qword_3D7160, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_89A0(&qword_3D7168, (uint64_t (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier, (uint64_t)&protocol conformance descriptor for SafeAreaPaddingModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7150);
  }
  return result;
}

unint64_t sub_11581C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D71B0;
  if (!qword_3D71B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D71A8);
    sub_1158A0();
    sub_10EDC(&qword_3D25D0, &qword_3D25D8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D71B0);
  }
  return result;
}

unint64_t sub_1158A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D71B8;
  if (!qword_3D71B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D71C0);
    sub_11590C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D71B8);
  }
  return result;
}

unint64_t sub_11590C()
{
  unint64_t result;

  result = qword_3D71C8;
  if (!qword_3D71C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Rectangle, &type metadata for Rectangle);
    atomic_store(result, (unint64_t *)&qword_3D71C8);
  }
  return result;
}

uint64_t sub_115950@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_115978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1159A0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1159C8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1159F0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_115A10()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_115A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Image.Scale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.imageScale.setter(v4);
}

unint64_t sub_115AB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D71E0;
  if (!qword_3D71E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D71D8);
    sub_10EDC(&qword_3D71E8, &qword_3D71F0, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D71E0);
  }
  return result;
}

unint64_t sub_115B34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D71F8;
  if (!qword_3D71F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7170);
    sub_115BB8();
    sub_10EDC(&qword_3D2630, &qword_3D2620, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D71F8);
  }
  return result;
}

unint64_t sub_115BB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7200;
  if (!qword_3D7200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7208);
    sub_115C3C();
    sub_10EDC(&qword_3D7230, &qword_3D7238, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7200);
  }
  return result;
}

unint64_t sub_115C3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7210;
  if (!qword_3D7210)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7218);
    sub_115CC0();
    sub_10EDC(&qword_3D10B0, &qword_3D10B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7210);
  }
  return result;
}

unint64_t sub_115CC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7220;
  if (!qword_3D7220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7228);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7220);
  }
  return result;
}

uint64_t sub_115D24(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (result)
  {
    v4 = result;
    swift_retain(a3);
    swift_retain(v4);
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_115D60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  sub_D130(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  sub_19F2C(v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_115DF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  sub_D170(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_1A100(v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_115E88(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    return swift_release(a3);
  }
  return result;
}

uint64_t sub_115EC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, int *, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v4 = type metadata accessor for CategoryListItem(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(v4 + 24);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ArtworkModel(0);
    v12 = *((_QWORD *)v11 - 1);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, int *, __n128))(v12 + 48);
    v14 = swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v10[1];
      *v9 = *v10;
      v9[1] = v17;
      v18 = *((unsigned __int8 *)v10 + 32);
      swift_bridgeObjectRetain(v17);
      if (v18 == 255)
      {
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((_BYTE *)v9 + 32) = *((_BYTE *)v10 + 32);
      }
      else
      {
        v19 = v10[2];
        v20 = v10[3];
        sub_108110(v19, v20, v18);
        v9[2] = v19;
        v9[3] = v20;
        *((_BYTE *)v9 + 32) = v18;
      }
      *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
      v21 = (id *)(v10 + 7);
      v22 = *((unsigned __int8 *)v10 + 64);
      if (v22 == 255)
      {
        v9[7] = *v21;
        *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
      }
      else
      {
        v23 = *v21;
        sub_27F80(*v21, *((_BYTE *)v10 + 64));
        v9[7] = v23;
        *((_BYTE *)v9 + 64) = v22;
      }
      v24 = (id *)(v10 + 9);
      v25 = *((unsigned __int8 *)v10 + 80);
      if (v25 == 255)
      {
        v9[9] = *v24;
        *((_BYTE *)v9 + 80) = *((_BYTE *)v10 + 80);
      }
      else
      {
        v26 = *v24;
        sub_27F80(*v24, *((_BYTE *)v10 + 80));
        v9[9] = v26;
        *((_BYTE *)v9 + 80) = v25;
      }
      v27 = (id *)(v10 + 11);
      v28 = *((unsigned __int8 *)v10 + 96);
      if (v28 == 255)
      {
        v9[11] = *v27;
        *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
      }
      else
      {
        v29 = *v27;
        sub_27F80(*v27, *((_BYTE *)v10 + 96));
        v9[11] = v29;
        *((_BYTE *)v9 + 96) = v28;
      }
      v30 = (id *)(v10 + 13);
      v31 = *((unsigned __int8 *)v10 + 112);
      if (v31 == 255)
      {
        v9[13] = *v30;
        *((_BYTE *)v9 + 112) = *((_BYTE *)v10 + 112);
      }
      else
      {
        v32 = *v30;
        sub_27F80(*v30, *((_BYTE *)v10 + 112));
        v9[13] = v32;
        *((_BYTE *)v9 + 112) = v31;
      }
      v33 = (id *)(v10 + 15);
      v34 = *((unsigned __int8 *)v10 + 128);
      if (v34 == 255)
      {
        v9[15] = *v33;
        *((_BYTE *)v9 + 128) = *((_BYTE *)v10 + 128);
      }
      else
      {
        v35 = *v33;
        sub_27F80(*v33, *((_BYTE *)v10 + 128));
        v9[15] = v35;
        *((_BYTE *)v9 + 128) = v34;
      }
      *((_BYTE *)v9 + 129) = *((_BYTE *)v10 + 129);
      v36 = v11[11];
      v37 = (char *)v9 + v36;
      v38 = (char *)v10 + v36;
      v39 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v11[12];
      v41 = (_QWORD *)((char *)v9 + v40);
      v42 = (_QWORD *)((char *)v10 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      *((_BYTE *)v9 + v11[13]) = *((_BYTE *)v10 + v11[13]);
      *((_BYTE *)v9 + v11[14]) = *((_BYTE *)v10 + v11[14]);
      *((_BYTE *)v9 + v11[15]) = *((_BYTE *)v10 + v11[15]);
      v44 = v11[16];
      v45 = (_QWORD *)((char *)v9 + v44);
      v46 = (_QWORD *)((char *)v10 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v12 + 56);
      swift_bridgeObjectRetain(v43);
      v49 = swift_bridgeObjectRetain(v47);
      v48(v9, 0, 1, v11, v49);
    }
    *(_DWORD *)(a1 + v6[7]) = *(_DWORD *)((char *)a2 + v6[7]);
    v50 = v6[8];
    v51 = (_QWORD *)(a1 + v50);
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v6[9];
    v55 = (_QWORD *)(a1 + v54);
    v56 = (uint64_t *)((char *)a2 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    v58 = v6[10];
    v59 = (void *)(a1 + v58);
    v60 = (char *)a2 + v58;
    v61 = type metadata accessor for URL(0);
    v62 = *(_QWORD *)(v61 - 8);
    v63 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v62 + 48);
    swift_bridgeObjectRetain(v53);
    v64 = swift_bridgeObjectRetain(v57);
    if (v63(v60, 1, v61, v64))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
    v66 = v6[11];
    v67 = a1 + v66;
    v68 = (uint64_t)a2 + v66;
    v69 = *(uint64_t *)((char *)a2 + v66 + 24);
    if (v69)
    {
      v70 = *(_QWORD *)(v68 + 32);
      *(_QWORD *)(v67 + 24) = v69;
      *(_QWORD *)(v67 + 32) = v70;
      (**(void (***)(void))(v69 - 8))();
    }
    else
    {
      v71 = *(_OWORD *)(v68 + 16);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *(_OWORD *)(v67 + 16) = v71;
      *(_QWORD *)(v67 + 32) = *(_QWORD *)(v68 + 32);
    }
    v72 = v6[12];
    v73 = (void *)(a1 + v72);
    v74 = (char *)a2 + v72;
    v75 = type metadata accessor for ImpressionMetrics(0);
    v76 = *(_QWORD *)(v75 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
  }
  return a1;
}

uint64_t sub_116378(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  int *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v2 = (int *)type metadata accessor for CategoryListItem(0);
  v3 = a1 + v2[6];
  v4 = (int *)type metadata accessor for ArtworkModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + 8));
    v5 = *(unsigned __int8 *)(v3 + 32);
    if (v5 != 255)
      sub_108270(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v5);
    v6 = *(unsigned __int8 *)(v3 + 64);
    if (v6 != 255)
      sub_27FA8(*(id *)(v3 + 56), v6);
    v7 = *(unsigned __int8 *)(v3 + 80);
    if (v7 != 255)
      sub_27FA8(*(id *)(v3 + 72), v7);
    v8 = *(unsigned __int8 *)(v3 + 96);
    if (v8 != 255)
      sub_27FA8(*(id *)(v3 + 88), v8);
    v9 = *(unsigned __int8 *)(v3 + 112);
    if (v9 != 255)
      sub_27FA8(*(id *)(v3 + 104), v9);
    v10 = *(unsigned __int8 *)(v3 + 128);
    if (v10 != 255)
      sub_27FA8(*(id *)(v3 + 120), v10);
    v11 = v3 + v4[11];
    v12 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + v4[12] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + v4[16] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v2[9] + 8));
  v13 = a1 + v2[10];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = (_QWORD *)(a1 + v2[11]);
  if (v16[3])
    __swift_destroy_boxed_opaque_existential_0(v16);
  v17 = a1 + v2[12];
  v18 = type metadata accessor for ImpressionMetrics(0);
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  return result;
}

uint64_t sub_116570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, int *, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  int v19;
  id v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, int *, __n128);
  __n128 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(const void *, uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (int *)type metadata accessor for CategoryListItem(0);
  v6 = v5[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ArtworkModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, int *, __n128))(v10 + 48);
  v12 = swift_bridgeObjectRetain(v4);
  if (v11(v8, 1, v9, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v8[1];
    *v7 = *v8;
    v7[1] = v14;
    v15 = *((unsigned __int8 *)v8 + 32);
    swift_bridgeObjectRetain(v14);
    if (v15 == 255)
    {
      *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
      *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
    }
    else
    {
      v16 = v8[2];
      v17 = v8[3];
      sub_108110(v16, v17, v15);
      v7[2] = v16;
      v7[3] = v17;
      *((_BYTE *)v7 + 32) = v15;
    }
    *(_OWORD *)(v7 + 5) = *(_OWORD *)(v8 + 5);
    v18 = (id *)(v8 + 7);
    v19 = *((unsigned __int8 *)v8 + 64);
    if (v19 == 255)
    {
      v7[7] = *v18;
      *((_BYTE *)v7 + 64) = *((_BYTE *)v8 + 64);
    }
    else
    {
      v20 = *v18;
      sub_27F80(*v18, *((_BYTE *)v8 + 64));
      v7[7] = v20;
      *((_BYTE *)v7 + 64) = v19;
    }
    v21 = (id *)(v8 + 9);
    v22 = *((unsigned __int8 *)v8 + 80);
    if (v22 == 255)
    {
      v7[9] = *v21;
      *((_BYTE *)v7 + 80) = *((_BYTE *)v8 + 80);
    }
    else
    {
      v23 = *v21;
      sub_27F80(*v21, *((_BYTE *)v8 + 80));
      v7[9] = v23;
      *((_BYTE *)v7 + 80) = v22;
    }
    v24 = (id *)(v8 + 11);
    v25 = *((unsigned __int8 *)v8 + 96);
    if (v25 == 255)
    {
      v7[11] = *v24;
      *((_BYTE *)v7 + 96) = *((_BYTE *)v8 + 96);
    }
    else
    {
      v26 = *v24;
      sub_27F80(*v24, *((_BYTE *)v8 + 96));
      v7[11] = v26;
      *((_BYTE *)v7 + 96) = v25;
    }
    v27 = (id *)(v8 + 13);
    v28 = *((unsigned __int8 *)v8 + 112);
    if (v28 == 255)
    {
      v7[13] = *v27;
      *((_BYTE *)v7 + 112) = *((_BYTE *)v8 + 112);
    }
    else
    {
      v29 = *v27;
      sub_27F80(*v27, *((_BYTE *)v8 + 112));
      v7[13] = v29;
      *((_BYTE *)v7 + 112) = v28;
    }
    v30 = (id *)(v8 + 15);
    v31 = *((unsigned __int8 *)v8 + 128);
    if (v31 == 255)
    {
      v7[15] = *v30;
      *((_BYTE *)v7 + 128) = *((_BYTE *)v8 + 128);
    }
    else
    {
      v32 = *v30;
      sub_27F80(*v30, *((_BYTE *)v8 + 128));
      v7[15] = v32;
      *((_BYTE *)v7 + 128) = v31;
    }
    *((_BYTE *)v7 + 129) = *((_BYTE *)v8 + 129);
    v33 = v9[11];
    v34 = (char *)v7 + v33;
    v35 = (char *)v8 + v33;
    v36 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    v37 = v9[12];
    v38 = (_QWORD *)((char *)v7 + v37);
    v39 = (_QWORD *)((char *)v8 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *((_BYTE *)v7 + v9[13]) = *((_BYTE *)v8 + v9[13]);
    *((_BYTE *)v7 + v9[14]) = *((_BYTE *)v8 + v9[14]);
    *((_BYTE *)v7 + v9[15]) = *((_BYTE *)v8 + v9[15]);
    v41 = v9[16];
    v42 = (_QWORD *)((char *)v7 + v41);
    v43 = (_QWORD *)((char *)v8 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *, __n128))(v10 + 56);
    swift_bridgeObjectRetain(v40);
    v46 = swift_bridgeObjectRetain(v44);
    v45(v7, 0, 1, v9, v46);
  }
  *(_DWORD *)(a1 + v5[7]) = *(_DWORD *)(a2 + v5[7]);
  v47 = v5[8];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v5[9];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = v5[10];
  v56 = (void *)(a1 + v55);
  v57 = (const void *)(a2 + v55);
  v58 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v59 + 48);
  swift_bridgeObjectRetain(v50);
  v61 = swift_bridgeObjectRetain(v54);
  if (v60(v57, 1, v58, v61))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(v56, v57, v58);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  v63 = v5[11];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)(a2 + v63 + 24);
  if (v66)
  {
    v67 = *(_QWORD *)(v65 + 32);
    *(_QWORD *)(v64 + 24) = v66;
    *(_QWORD *)(v64 + 32) = v67;
    (**(void (***)(void))(v66 - 8))();
  }
  else
  {
    v68 = *(_OWORD *)(v65 + 16);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_OWORD *)(v64 + 16) = v68;
    *(_QWORD *)(v64 + 32) = *(_QWORD *)(v65 + 32);
  }
  v69 = v5[12];
  v70 = (void *)(a1 + v69);
  v71 = (const void *)(a2 + v69);
  v72 = type metadata accessor for ImpressionMetrics(0);
  v73 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(v70, v71, v72);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  return a1;
}

uint64_t sub_1169F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;
  id *v31;
  int v32;
  id v33;
  id v34;
  id *v35;
  int v36;
  id v37;
  id v38;
  id *v39;
  int v40;
  id v41;
  id v42;
  id *v43;
  int v44;
  id v45;
  id v46;
  id *v47;
  int v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t, int *, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  id *v69;
  id *v70;
  int v71;
  id v72;
  void *v73;
  char v74;
  id v75;
  char v76;
  id v77;
  id *v78;
  id *v79;
  int v80;
  id v81;
  void *v82;
  char v83;
  id v84;
  char v85;
  id v86;
  id *v87;
  id *v88;
  int v89;
  id v90;
  void *v91;
  char v92;
  id v93;
  char v94;
  id v95;
  id *v96;
  id *v97;
  int v98;
  id v99;
  void *v100;
  char v101;
  id v102;
  char v103;
  id v104;
  id *v105;
  id *v106;
  int v107;
  id v108;
  void *v109;
  char v110;
  id v111;
  char v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(void *, uint64_t, uint64_t);
  int v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 *v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t (*v161)(void *, uint64_t, uint64_t);
  int v162;
  int v163;
  uint64_t v164;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for CategoryListItem(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      v15 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 8) = v15;
      v16 = *(unsigned __int8 *)(v9 + 32);
      swift_bridgeObjectRetain(v15);
      if (v16 == 255)
      {
        v30 = *(_OWORD *)(v9 + 16);
        *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
        *(_OWORD *)(v8 + 16) = v30;
      }
      else
      {
        v17 = *(_QWORD *)(v9 + 16);
        v18 = *(_QWORD *)(v9 + 24);
        sub_108110(v17, v18, v16);
        *(_QWORD *)(v8 + 16) = v17;
        *(_QWORD *)(v8 + 24) = v18;
        *(_BYTE *)(v8 + 32) = v16;
      }
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      v31 = (id *)(v9 + 56);
      v32 = *(unsigned __int8 *)(v9 + 64);
      if (v32 == 255)
      {
        v34 = *v31;
        *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
        *(_QWORD *)(v8 + 56) = v34;
      }
      else
      {
        v33 = *v31;
        sub_27F80(*v31, *(_BYTE *)(v9 + 64));
        *(_QWORD *)(v8 + 56) = v33;
        *(_BYTE *)(v8 + 64) = v32;
      }
      v35 = (id *)(v9 + 72);
      v36 = *(unsigned __int8 *)(v9 + 80);
      if (v36 == 255)
      {
        v38 = *v35;
        *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
        *(_QWORD *)(v8 + 72) = v38;
      }
      else
      {
        v37 = *v35;
        sub_27F80(*v35, *(_BYTE *)(v9 + 80));
        *(_QWORD *)(v8 + 72) = v37;
        *(_BYTE *)(v8 + 80) = v36;
      }
      v39 = (id *)(v9 + 88);
      v40 = *(unsigned __int8 *)(v9 + 96);
      if (v40 == 255)
      {
        v42 = *v39;
        *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
        *(_QWORD *)(v8 + 88) = v42;
      }
      else
      {
        v41 = *v39;
        sub_27F80(*v39, *(_BYTE *)(v9 + 96));
        *(_QWORD *)(v8 + 88) = v41;
        *(_BYTE *)(v8 + 96) = v40;
      }
      v43 = (id *)(v9 + 104);
      v44 = *(unsigned __int8 *)(v9 + 112);
      if (v44 == 255)
      {
        v46 = *v43;
        *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
        *(_QWORD *)(v8 + 104) = v46;
      }
      else
      {
        v45 = *v43;
        sub_27F80(*v43, *(_BYTE *)(v9 + 112));
        *(_QWORD *)(v8 + 104) = v45;
        *(_BYTE *)(v8 + 112) = v44;
      }
      v47 = (id *)(v9 + 120);
      v48 = *(unsigned __int8 *)(v9 + 128);
      if (v48 == 255)
      {
        v50 = *v47;
        *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
        *(_QWORD *)(v8 + 120) = v50;
      }
      else
      {
        v49 = *v47;
        sub_27F80(*v47, *(_BYTE *)(v9 + 128));
        *(_QWORD *)(v8 + 120) = v49;
        *(_BYTE *)(v8 + 128) = v48;
      }
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      v51 = v10[11];
      v52 = v8 + v51;
      v53 = v9 + v51;
      v54 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
      v55 = v10[12];
      v56 = (_QWORD *)(v8 + v55);
      v57 = (_QWORD *)(v9 + v55);
      *v56 = *v57;
      v58 = v57[1];
      v56[1] = v58;
      *(_BYTE *)(v8 + v10[13]) = *(_BYTE *)(v9 + v10[13]);
      *(_BYTE *)(v8 + v10[14]) = *(_BYTE *)(v9 + v10[14]);
      *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
      v59 = v10[16];
      v60 = (_QWORD *)(v8 + v59);
      v61 = (_QWORD *)(v9 + v59);
      *v60 = *v61;
      v62 = v61[1];
      v60[1] = v62;
      v63 = *(void (**)(uint64_t, _QWORD, uint64_t, int *, __n128))(v11 + 56);
      swift_bridgeObjectRetain(v58);
      v64 = swift_bridgeObjectRetain(v62);
      v63(v8, 0, 1, v10, v64);
      goto LABEL_68;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_68;
  }
  if (v14)
  {
    sub_FA4C(v8, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v20 = *(_QWORD *)(v9 + 8);
  v21 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v8 + 8) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = (__int128 *)(v8 + 16);
  v23 = (__int128 *)(v9 + 16);
  v24 = *(unsigned __int8 *)(v9 + 32);
  if (*(unsigned __int8 *)(v8 + 32) == 255)
  {
    if (v24 == 255)
    {
      v68 = *v23;
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *v22 = v68;
    }
    else
    {
      v65 = *(_QWORD *)(v9 + 16);
      v66 = *(_QWORD *)(v9 + 24);
      sub_108110(v65, v66, *(_BYTE *)(v9 + 32));
      *(_QWORD *)(v8 + 16) = v65;
      *(_QWORD *)(v8 + 24) = v66;
      *(_BYTE *)(v8 + 32) = v24;
    }
  }
  else if (v24 == 255)
  {
    sub_108DD8(v8 + 16);
    v67 = *(_BYTE *)(v9 + 32);
    *v22 = *v23;
    *(_BYTE *)(v8 + 32) = v67;
  }
  else
  {
    v25 = *(_QWORD *)(v9 + 16);
    v26 = *(_QWORD *)(v9 + 24);
    sub_108110(v25, v26, *(_BYTE *)(v9 + 32));
    v27 = *(_QWORD *)(v8 + 16);
    v28 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v25;
    *(_QWORD *)(v8 + 24) = v26;
    v29 = *(_BYTE *)(v8 + 32);
    *(_BYTE *)(v8 + 32) = v24;
    sub_108270(v27, v28, v29);
  }
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  v69 = (id *)(v8 + 56);
  v70 = (id *)(v9 + 56);
  v71 = *(unsigned __int8 *)(v9 + 64);
  if (*(unsigned __int8 *)(v8 + 64) == 255)
  {
    if (v71 == 255)
    {
      v77 = *v70;
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *v69 = v77;
    }
    else
    {
      v75 = *v70;
      sub_27F80(*v70, *(_BYTE *)(v9 + 64));
      *(_QWORD *)(v8 + 56) = v75;
      *(_BYTE *)(v8 + 64) = v71;
    }
  }
  else if (v71 == 255)
  {
    sub_108E0C(v8 + 56);
    v76 = *(_BYTE *)(v9 + 64);
    *v69 = *v70;
    *(_BYTE *)(v8 + 64) = v76;
  }
  else
  {
    v72 = *v70;
    sub_27F80(*v70, *(_BYTE *)(v9 + 64));
    v73 = *(void **)(v8 + 56);
    *(_QWORD *)(v8 + 56) = v72;
    v74 = *(_BYTE *)(v8 + 64);
    *(_BYTE *)(v8 + 64) = v71;
    sub_27FA8(v73, v74);
  }
  v78 = (id *)(v8 + 72);
  v79 = (id *)(v9 + 72);
  v80 = *(unsigned __int8 *)(v9 + 80);
  if (*(unsigned __int8 *)(v8 + 80) == 255)
  {
    if (v80 == 255)
    {
      v86 = *v79;
      *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
      *v78 = v86;
    }
    else
    {
      v84 = *v79;
      sub_27F80(*v79, *(_BYTE *)(v9 + 80));
      *(_QWORD *)(v8 + 72) = v84;
      *(_BYTE *)(v8 + 80) = v80;
    }
  }
  else if (v80 == 255)
  {
    sub_108E0C(v8 + 72);
    v85 = *(_BYTE *)(v9 + 80);
    *v78 = *v79;
    *(_BYTE *)(v8 + 80) = v85;
  }
  else
  {
    v81 = *v79;
    sub_27F80(*v79, *(_BYTE *)(v9 + 80));
    v82 = *(void **)(v8 + 72);
    *(_QWORD *)(v8 + 72) = v81;
    v83 = *(_BYTE *)(v8 + 80);
    *(_BYTE *)(v8 + 80) = v80;
    sub_27FA8(v82, v83);
  }
  v87 = (id *)(v8 + 88);
  v88 = (id *)(v9 + 88);
  v89 = *(unsigned __int8 *)(v9 + 96);
  if (*(unsigned __int8 *)(v8 + 96) == 255)
  {
    if (v89 == 255)
    {
      v95 = *v88;
      *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
      *v87 = v95;
    }
    else
    {
      v93 = *v88;
      sub_27F80(*v88, *(_BYTE *)(v9 + 96));
      *(_QWORD *)(v8 + 88) = v93;
      *(_BYTE *)(v8 + 96) = v89;
    }
  }
  else if (v89 == 255)
  {
    sub_108E0C(v8 + 88);
    v94 = *(_BYTE *)(v9 + 96);
    *v87 = *v88;
    *(_BYTE *)(v8 + 96) = v94;
  }
  else
  {
    v90 = *v88;
    sub_27F80(*v88, *(_BYTE *)(v9 + 96));
    v91 = *(void **)(v8 + 88);
    *(_QWORD *)(v8 + 88) = v90;
    v92 = *(_BYTE *)(v8 + 96);
    *(_BYTE *)(v8 + 96) = v89;
    sub_27FA8(v91, v92);
  }
  v96 = (id *)(v8 + 104);
  v97 = (id *)(v9 + 104);
  v98 = *(unsigned __int8 *)(v9 + 112);
  if (*(unsigned __int8 *)(v8 + 112) == 255)
  {
    if (v98 == 255)
    {
      v104 = *v97;
      *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
      *v96 = v104;
    }
    else
    {
      v102 = *v97;
      sub_27F80(*v97, *(_BYTE *)(v9 + 112));
      *(_QWORD *)(v8 + 104) = v102;
      *(_BYTE *)(v8 + 112) = v98;
    }
  }
  else if (v98 == 255)
  {
    sub_108E0C(v8 + 104);
    v103 = *(_BYTE *)(v9 + 112);
    *v96 = *v97;
    *(_BYTE *)(v8 + 112) = v103;
  }
  else
  {
    v99 = *v97;
    sub_27F80(*v97, *(_BYTE *)(v9 + 112));
    v100 = *(void **)(v8 + 104);
    *(_QWORD *)(v8 + 104) = v99;
    v101 = *(_BYTE *)(v8 + 112);
    *(_BYTE *)(v8 + 112) = v98;
    sub_27FA8(v100, v101);
  }
  v105 = (id *)(v8 + 120);
  v106 = (id *)(v9 + 120);
  v107 = *(unsigned __int8 *)(v9 + 128);
  if (*(unsigned __int8 *)(v8 + 128) == 255)
  {
    if (v107 == 255)
    {
      v113 = *v106;
      *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
      *v105 = v113;
    }
    else
    {
      v111 = *v106;
      sub_27F80(*v106, *(_BYTE *)(v9 + 128));
      *(_QWORD *)(v8 + 120) = v111;
      *(_BYTE *)(v8 + 128) = v107;
    }
  }
  else if (v107 == 255)
  {
    sub_108E0C(v8 + 120);
    v112 = *(_BYTE *)(v9 + 128);
    *v105 = *v106;
    *(_BYTE *)(v8 + 128) = v112;
  }
  else
  {
    v108 = *v106;
    sub_27F80(*v106, *(_BYTE *)(v9 + 128));
    v109 = *(void **)(v8 + 120);
    *(_QWORD *)(v8 + 120) = v108;
    v110 = *(_BYTE *)(v8 + 128);
    *(_BYTE *)(v8 + 128) = v107;
    sub_27FA8(v109, v110);
  }
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v114 = v10[11];
  v115 = v8 + v114;
  v116 = v9 + v114;
  v117 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 24))(v115, v116, v117);
  v118 = v10[12];
  v119 = (_QWORD *)(v8 + v118);
  v120 = (_QWORD *)(v9 + v118);
  *v119 = *v120;
  v121 = v120[1];
  v122 = v119[1];
  v119[1] = v121;
  swift_bridgeObjectRetain(v121);
  swift_bridgeObjectRelease(v122);
  *(_BYTE *)(v8 + v10[13]) = *(_BYTE *)(v9 + v10[13]);
  *(_BYTE *)(v8 + v10[14]) = *(_BYTE *)(v9 + v10[14]);
  *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
  v123 = v10[16];
  v124 = (_QWORD *)(v8 + v123);
  v125 = (_QWORD *)(v9 + v123);
  *v124 = *v125;
  v126 = v125[1];
  v127 = v124[1];
  v124[1] = v126;
  swift_bridgeObjectRetain(v126);
  swift_bridgeObjectRelease(v127);
LABEL_68:
  v128 = v6[7];
  v129 = (_BYTE *)(a1 + v128);
  v130 = (_BYTE *)(a2 + v128);
  *v129 = *v130;
  v129[1] = v130[1];
  v129[2] = v130[2];
  v129[3] = v130[3];
  v131 = v6[8];
  v132 = (_QWORD *)(a1 + v131);
  v133 = (_QWORD *)(a2 + v131);
  *v132 = *v133;
  v134 = v133[1];
  v135 = v132[1];
  v132[1] = v134;
  swift_bridgeObjectRetain(v134);
  swift_bridgeObjectRelease(v135);
  v136 = v6[9];
  v137 = (_QWORD *)(a1 + v136);
  v138 = (_QWORD *)(a2 + v136);
  *v137 = *v138;
  v139 = v138[1];
  v140 = v137[1];
  v137[1] = v139;
  swift_bridgeObjectRetain(v139);
  swift_bridgeObjectRelease(v140);
  v141 = v6[10];
  v142 = (void *)(a1 + v141);
  v143 = (void *)(a2 + v141);
  v144 = type metadata accessor for URL(0);
  v145 = *(_QWORD *)(v144 - 8);
  v146 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v145 + 48);
  v147 = v146(v142, 1, v144);
  v148 = v146(v143, 1, v144);
  if (v147)
  {
    if (!v148)
    {
      (*(void (**)(void *, void *, uint64_t))(v145 + 16))(v142, v143, v144);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v148)
  {
    (*(void (**)(void *, uint64_t))(v145 + 8))(v142, v144);
LABEL_73:
    v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, void *, uint64_t))(v145 + 24))(v142, v143, v144);
LABEL_74:
  v150 = v6[11];
  v151 = a1 + v150;
  v152 = (__int128 *)(a2 + v150);
  v153 = *(_QWORD *)(a2 + v150 + 24);
  if (*(_QWORD *)(a1 + v150 + 24))
  {
    if (v153)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)v151, v152);
      goto LABEL_81;
    }
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)v151);
  }
  else if (v153)
  {
    *(_QWORD *)(v151 + 24) = v153;
    *(_QWORD *)(v151 + 32) = *((_QWORD *)v152 + 4);
    (**(void (***)(uint64_t, __int128 *))(v153 - 8))(v151, v152);
    goto LABEL_81;
  }
  v154 = *v152;
  v155 = v152[1];
  *(_QWORD *)(v151 + 32) = *((_QWORD *)v152 + 4);
  *(_OWORD *)v151 = v154;
  *(_OWORD *)(v151 + 16) = v155;
LABEL_81:
  v156 = v6[12];
  v157 = (void *)(a1 + v156);
  v158 = (void *)(a2 + v156);
  v159 = type metadata accessor for ImpressionMetrics(0);
  v160 = *(_QWORD *)(v159 - 8);
  v161 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v160 + 48);
  v162 = v161(v157, 1, v159);
  v163 = v161(v158, 1, v159);
  if (!v162)
  {
    if (!v163)
    {
      (*(void (**)(void *, void *, uint64_t))(v160 + 24))(v157, v158, v159);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v160 + 8))(v157, v159);
    goto LABEL_86;
  }
  if (v163)
  {
LABEL_86:
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v160 + 16))(v157, v158, v159);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
  return a1;
}

uint64_t sub_117448(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (int *)type metadata accessor for CategoryListItem(0);
  v5 = v4[6];
  v6 = (_OWORD *)(a1 + v5);
  v7 = (_OWORD *)(a2 + v5);
  v8 = (int *)type metadata accessor for ArtworkModel(0);
  v9 = *((_QWORD *)v8 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *v6 = *v7;
    v6[1] = v11;
    *((_BYTE *)v6 + 32) = *((_BYTE *)v7 + 32);
    *(_OWORD *)((char *)v6 + 40) = *(_OWORD *)((char *)v7 + 40);
    *((_QWORD *)v6 + 7) = *((_QWORD *)v7 + 7);
    *((_BYTE *)v6 + 64) = *((_BYTE *)v7 + 64);
    *(_OWORD *)((char *)v6 + 113) = *(_OWORD *)((char *)v7 + 113);
    *(_OWORD *)((char *)v6 + 104) = *(_OWORD *)((char *)v7 + 104);
    *(_OWORD *)((char *)v6 + 88) = *(_OWORD *)((char *)v7 + 88);
    *(_OWORD *)((char *)v6 + 72) = *(_OWORD *)((char *)v7 + 72);
    *((_BYTE *)v6 + 129) = *((_BYTE *)v7 + 129);
    v12 = v8[11];
    v13 = (char *)v6 + v12;
    v14 = (char *)v7 + v12;
    v15 = type metadata accessor for ArtworkCrop(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    *(_OWORD *)((char *)v6 + v8[12]) = *(_OWORD *)((char *)v7 + v8[12]);
    *((_BYTE *)v6 + v8[13]) = *((_BYTE *)v7 + v8[13]);
    *((_BYTE *)v6 + v8[14]) = *((_BYTE *)v7 + v8[14]);
    *((_BYTE *)v6 + v8[15]) = *((_BYTE *)v7 + v8[15]);
    *(_OWORD *)((char *)v6 + v8[16]) = *(_OWORD *)((char *)v7 + v8[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_DWORD *)(a1 + v4[7]) = *(_DWORD *)(a2 + v4[7]);
  *(_OWORD *)(a1 + v4[8]) = *(_OWORD *)(a2 + v4[8]);
  *(_OWORD *)(a1 + v4[9]) = *(_OWORD *)(a2 + v4[9]);
  v16 = v4[10];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v4[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  v26 = v4[12];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = type metadata accessor for ImpressionMetrics(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_117718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  int v64;
  int v65;
  void *v66;
  _QWORD *v67;
  int v68;
  int v69;
  void *v70;
  _QWORD *v71;
  int v72;
  int v73;
  void *v74;
  _QWORD *v75;
  int v76;
  int v77;
  void *v78;
  _QWORD *v79;
  int v80;
  int v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for CategoryListItem(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = (int *)type metadata accessor for ArtworkModel(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v15;
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_OWORD *)(v8 + 113) = *(_OWORD *)(v9 + 113);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
      v16 = v10[11];
      v17 = v8 + v16;
      v18 = v9 + v16;
      v19 = type metadata accessor for ArtworkCrop(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)(v8 + v10[12]) = *(_OWORD *)(v9 + v10[12]);
      *(_BYTE *)(v8 + v10[13]) = *(_BYTE *)(v9 + v10[13]);
      *(_BYTE *)(v8 + v10[14]) = *(_BYTE *)(v9 + v10[14]);
      *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
      *(_OWORD *)(v8 + v10[16]) = *(_OWORD *)(v9 + v10[16]);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_FA4C(v8, (uint64_t (*)(_QWORD))&type metadata accessor for ArtworkModel);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0A58);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v56 = *(_QWORD *)(v9 + 8);
  v57 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v56;
  swift_bridgeObjectRelease(v57);
  v58 = (_OWORD *)(v9 + 16);
  v59 = *(unsigned __int8 *)(v8 + 32);
  if (v59 != 255)
  {
    v60 = *(unsigned __int8 *)(v9 + 32);
    if (v60 != 255)
    {
      v61 = *(_QWORD *)(v8 + 16);
      v62 = *(_QWORD *)(v8 + 24);
      *(_OWORD *)(v8 + 16) = *v58;
      *(_BYTE *)(v8 + 32) = v60;
      sub_108270(v61, v62, v59);
      goto LABEL_29;
    }
    sub_108DD8(v8 + 16);
  }
  *(_OWORD *)(v8 + 16) = *v58;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
LABEL_29:
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  v63 = (_QWORD *)(v9 + 56);
  v64 = *(unsigned __int8 *)(v8 + 64);
  if (v64 != 255)
  {
    v65 = *(unsigned __int8 *)(v9 + 64);
    if (v65 != 255)
    {
      v66 = *(void **)(v8 + 56);
      *(_QWORD *)(v8 + 56) = *v63;
      *(_BYTE *)(v8 + 64) = v65;
      sub_27FA8(v66, v64);
      goto LABEL_34;
    }
    sub_108E0C(v8 + 56);
  }
  *(_QWORD *)(v8 + 56) = *v63;
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
LABEL_34:
  v67 = (_QWORD *)(v9 + 72);
  v68 = *(unsigned __int8 *)(v8 + 80);
  if (v68 != 255)
  {
    v69 = *(unsigned __int8 *)(v9 + 80);
    if (v69 != 255)
    {
      v70 = *(void **)(v8 + 72);
      *(_QWORD *)(v8 + 72) = *v67;
      *(_BYTE *)(v8 + 80) = v69;
      sub_27FA8(v70, v68);
      goto LABEL_39;
    }
    sub_108E0C(v8 + 72);
  }
  *(_QWORD *)(v8 + 72) = *v67;
  *(_BYTE *)(v8 + 80) = *(_BYTE *)(v9 + 80);
LABEL_39:
  v71 = (_QWORD *)(v9 + 88);
  v72 = *(unsigned __int8 *)(v8 + 96);
  if (v72 != 255)
  {
    v73 = *(unsigned __int8 *)(v9 + 96);
    if (v73 != 255)
    {
      v74 = *(void **)(v8 + 88);
      *(_QWORD *)(v8 + 88) = *v71;
      *(_BYTE *)(v8 + 96) = v73;
      sub_27FA8(v74, v72);
      goto LABEL_44;
    }
    sub_108E0C(v8 + 88);
  }
  *(_QWORD *)(v8 + 88) = *v71;
  *(_BYTE *)(v8 + 96) = *(_BYTE *)(v9 + 96);
LABEL_44:
  v75 = (_QWORD *)(v9 + 104);
  v76 = *(unsigned __int8 *)(v8 + 112);
  if (v76 != 255)
  {
    v77 = *(unsigned __int8 *)(v9 + 112);
    if (v77 != 255)
    {
      v78 = *(void **)(v8 + 104);
      *(_QWORD *)(v8 + 104) = *v75;
      *(_BYTE *)(v8 + 112) = v77;
      sub_27FA8(v78, v76);
      goto LABEL_49;
    }
    sub_108E0C(v8 + 104);
  }
  *(_QWORD *)(v8 + 104) = *v75;
  *(_BYTE *)(v8 + 112) = *(_BYTE *)(v9 + 112);
LABEL_49:
  v79 = (_QWORD *)(v9 + 120);
  v80 = *(unsigned __int8 *)(v8 + 128);
  if (v80 == 255)
  {
LABEL_53:
    *(_QWORD *)(v8 + 120) = *v79;
    *(_BYTE *)(v8 + 128) = *(_BYTE *)(v9 + 128);
    goto LABEL_54;
  }
  v81 = *(unsigned __int8 *)(v9 + 128);
  if (v81 == 255)
  {
    sub_108E0C(v8 + 120);
    goto LABEL_53;
  }
  v82 = *(void **)(v8 + 120);
  *(_QWORD *)(v8 + 120) = *v79;
  *(_BYTE *)(v8 + 128) = v81;
  sub_27FA8(v82, v80);
LABEL_54:
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v9 + 129);
  v83 = v10[11];
  v84 = v8 + v83;
  v85 = v9 + v83;
  v86 = type metadata accessor for ArtworkCrop(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v84, v85, v86);
  v87 = v10[12];
  v88 = (_QWORD *)(v8 + v87);
  v89 = (uint64_t *)(v9 + v87);
  v91 = *v89;
  v90 = v89[1];
  v92 = v88[1];
  *v88 = v91;
  v88[1] = v90;
  swift_bridgeObjectRelease(v92);
  *(_BYTE *)(v8 + v10[13]) = *(_BYTE *)(v9 + v10[13]);
  *(_BYTE *)(v8 + v10[14]) = *(_BYTE *)(v9 + v10[14]);
  *(_BYTE *)(v8 + v10[15]) = *(_BYTE *)(v9 + v10[15]);
  v93 = v10[16];
  v94 = (_QWORD *)(v8 + v93);
  v95 = (uint64_t *)(v9 + v93);
  v97 = *v95;
  v96 = v95[1];
  v98 = v94[1];
  *v94 = v97;
  v94[1] = v96;
  swift_bridgeObjectRelease(v98);
LABEL_7:
  *(_DWORD *)(a1 + v6[7]) = *(_DWORD *)(a2 + v6[7]);
  v21 = v6[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = v22[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease(v26);
  v27 = v6[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  v32 = v28[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease(v32);
  v33 = v6[10];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  v36 = type metadata accessor for URL(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 40))(v34, v35, v36);
LABEL_13:
  v42 = v6[11];
  v43 = a1 + v42;
  v44 = a2 + v42;
  if (*(_QWORD *)(a1 + v42 + 24))
    __swift_destroy_boxed_opaque_existential_0((_QWORD *)v43);
  v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  v46 = v6[12];
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  v49 = type metadata accessor for ImpressionMetrics(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 40))(v47, v48, v49);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
    goto LABEL_20;
  }
  if (v53)
  {
LABEL_20:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D0EE0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 32))(v47, v48, v49);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  return a1;
}

uint64_t sub_117D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_117D6C);
}

uint64_t sub_117D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategoryListItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_117DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_117DB4);
}

uint64_t sub_117DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CategoryListItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_117DF4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CategoryListItem(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_117E5C()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7130);
  v1[1] = sub_1156FC();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

uint64_t EnvironmentValues.metricsController.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_117EE0();
  EnvironmentValues.subscript.getter(&v2, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v0);
  return v2;
}

unint64_t sub_117EE0()
{
  unint64_t result;

  result = qword_3D72E0;
  if (!qword_3D72E0)
  {
    result = swift_getWitnessTable(&unk_2F7670, &type metadata for MetricsControllerEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D72E0);
  }
  return result;
}

uint64_t EnvironmentValues.metricsController.setter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_117EE0();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v1);
}

uint64_t (*EnvironmentValues.metricsController.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  unint64_t v3;

  a1[2] = v1;
  v3 = sub_117EE0();
  a1[3] = v3;
  EnvironmentValues.subscript.getter(a1, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v3);
  return sub_117FA8;
}

uint64_t sub_117FA8(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  a1[1] = v3;
  v4 = a1[3];
  if ((a2 & 1) == 0)
    return EnvironmentValues.subscript.setter(a1 + 1, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, a1[3]);
  swift_retain(v3);
  EnvironmentValues.subscript.setter(a1 + 1, &type metadata for MetricsControllerEnvironmentKey, &type metadata for MetricsControllerEnvironmentKey, v4);
  return swift_release(*a1);
}

ValueMetadata *type metadata accessor for MetricsControllerEnvironmentKey()
{
  return &type metadata for MetricsControllerEnvironmentKey;
}

ValueMetadata *type metadata accessor for Dependencies()
{
  return &type metadata for Dependencies;
}

_QWORD *initializeBufferWithCopyOfBuffer for CachingImageSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for CachingImageSource(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for CachingImageSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for CachingImageSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for ScrollConfigurationView()
{
  return &type metadata for ScrollConfigurationView;
}

uint64_t sub_118108(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32D54C, 1);
}

unint64_t sub_118118()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (!v2
    || (v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v2, sub_F8CE8(v3), v5 = v4, swift_bridgeObjectRelease(v3), !v5))
  {
    v5 = sub_D4FC4((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(0);
  }
  return v5;
}

uint64_t sub_1181F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  __int128 v37;
  uint64_t v38;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7320);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7328);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7330);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7338);
  sub_1184B4(v1, (uint64_t *)&v6[*(int *)(v14 + 44)]);
  v16 = static Edge.Set.bottom.getter(v15);
  v17 = EdgeInsets.init(_all:)(20.0);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_D184((uint64_t)v6, (uint64_t)v9, &qword_3D7320);
  v24 = &v9[*(int *)(v7 + 36)];
  *v24 = v16;
  *((double *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_D1D4((uint64_t)v6, &qword_3D7320);
  v37 = *(_OWORD *)(v1 + 48);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  State.wrappedValue.getter(&v38, v25);
  v26 = v38;
  v27 = (_OWORD *)swift_allocObject(&unk_3830F8, 96, 7);
  v28 = *(_OWORD *)(v2 + 48);
  v27[3] = *(_OWORD *)(v2 + 32);
  v27[4] = v28;
  v27[5] = *(_OWORD *)(v2 + 64);
  v29 = *(_OWORD *)(v2 + 16);
  v27[1] = *(_OWORD *)v2;
  v27[2] = v29;
  sub_D184((uint64_t)v9, (uint64_t)v12, &qword_3D7328);
  v30 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v30 = v26;
  *((_QWORD *)v30 + 1) = sub_119D2C;
  *((_QWORD *)v30 + 2) = v27;
  sub_119D34((_QWORD *)v2);
  sub_D1D4((uint64_t)v9, &qword_3D7328);
  v37 = *(_OWORD *)(v2 + 64);
  State.wrappedValue.getter(&v38, v25);
  v31 = v38;
  v32 = (_OWORD *)swift_allocObject(&unk_383120, 96, 7);
  v33 = *(_OWORD *)(v2 + 48);
  v32[3] = *(_OWORD *)(v2 + 32);
  v32[4] = v33;
  v32[5] = *(_OWORD *)(v2 + 64);
  v34 = *(_OWORD *)(v2 + 16);
  v32[1] = *(_OWORD *)v2;
  v32[2] = v34;
  sub_D184((uint64_t)v12, a1, &qword_3D7330);
  v35 = (_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D7340) + 36));
  *v35 = v31;
  v35[1] = sub_119DE4;
  v35[2] = v32;
  sub_119D34((_QWORD *)v2);
  return sub_D1D4((uint64_t)v12, &qword_3D7330);
}

double sub_1184B4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  Swift::String v18;
  void *object;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  Swift::String v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  double result;
  uint64_t v71;
  char *v72;
  int v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  __int128 v88;
  double v89[2];
  __int128 v90;
  __int128 v91;

  v79 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7348);
  __chkstk_darwin(v3);
  v80 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - v6;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7350);
  v83 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - v14;
  v86 = 0x203A7472617453;
  v87 = 0xE700000000000000;
  v90 = *(_OWORD *)(a1 + 48);
  v91 = v90;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  v17 = State.wrappedValue.getter(v89, v16);
  v18._countAndFlagsBits = Double.description.getter(v17, v89[0]);
  object = v18._object;
  String.append(_:)(v18);
  v20 = swift_bridgeObjectRelease(object);
  v21 = v87;
  v22 = static Font.footnote.getter(v20);
  v77 = Text.font(_:)(v23);
  v76 = v24;
  LODWORD(v26) = v25;
  v78 = v27;
  swift_bridgeObjectRelease(v21);
  swift_release(v22);
  v91 = v90;
  State.projectedValue.getter(&v86, v16);
  v75 = xmmword_2F4670;
  v91 = xmmword_2F4670;
  v89[0] = 0.05;
  v28 = sub_187D0();
  v82 = v15;
  Slider<>.init<A>(value:in:step:onEditingChanged:)(&v86, &v91, v89, UINavigationBar.overrideBackButtonStyle.setter, 0, &type metadata for CGFloat, v28, v28);
  sub_D210(a1 + 16, (uint64_t)v89, (uint64_t *)&unk_3DBE40);
  sub_D210((uint64_t)v89, (uint64_t)&v91, (uint64_t *)&unk_3DBE40);
  if (*((_QWORD *)&v91 + 1))
  {
    v86 = 0x203A646E45;
    v87 = 0xE500000000000000;
    v88 = *(_OWORD *)(a1 + 64);
    v84 = *(_OWORD *)(a1 + 64);
    v29 = State.wrappedValue.getter(&v85, v16);
    v30._countAndFlagsBits = Double.description.getter(v29, v85);
    v31 = v30._object;
    String.append(_:)(v30);
    v32 = swift_bridgeObjectRelease(v31);
    v73 = v26;
    v26 = v81;
    v72 = v9;
    v33 = v80;
    v34 = v12;
    v35 = v87;
    v36 = v16;
    v37 = static Font.footnote.getter(v32);
    v39 = Text.font(_:)(v38);
    v74 = v7;
    v41 = v40;
    v43 = v42;
    v71 = v44;
    swift_bridgeObjectRelease(v35);
    swift_release(v37);
    LOBYTE(v35) = v43 & 1;
    v84 = v88;
    State.projectedValue.getter(&v86, v36);
    v84 = v75;
    v85 = 0.05;
    Slider<>.init<A>(value:in:step:onEditingChanged:)(&v86, &v84, &v85, UINavigationBar.overrideBackButtonStyle.setter, 0, &type metadata for CGFloat, v28, v28);
    v45 = v83;
    v46 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v47 = v72;
    v46(v72, v34, v26);
    *(_QWORD *)v33 = v39;
    *(_QWORD *)(v33 + 8) = v41;
    *(_BYTE *)(v33 + 16) = v35;
    v48 = v71;
    *(_QWORD *)(v33 + 24) = v71;
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7368);
    v46((char *)(v33 + *(int *)(v49 + 48)), v47, v26);
    sub_D130(v39, v41, v35);
    v50 = *(void (**)(char *, uint64_t, __n128))(v45 + 8);
    v51 = swift_bridgeObjectRetain(v48);
    v50(v34, v26, v51);
    v52 = v26;
    LOBYTE(v26) = v73;
    ((void (*)(char *, uint64_t))v50)(v47, v52);
    v53 = (uint64_t)v74;
    v54 = v35;
    v12 = v34;
    sub_D170(v39, v41, v54);
    swift_bridgeObjectRelease(v48);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7358);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v33, 0, 1, v55);
    v7 = (char *)v53;
    sub_D210(v33, v53, &qword_3D7348);
  }
  else
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7358);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v7, 1, 1, v56);
    v46 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  }
  v57 = v26 & 1;
  LOBYTE(v86) = v26 & 1;
  v58 = v12;
  v59 = v81;
  v46(v12, v82, v81);
  v60 = (uint64_t)v7;
  v61 = v80;
  sub_D184((uint64_t)v7, v80, &qword_3D7348);
  v62 = v79;
  v63 = v77;
  v64 = v76;
  *v79 = v77;
  v62[1] = v64;
  *((_BYTE *)v62 + 16) = v57;
  v65 = v78;
  v62[3] = v78;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7360);
  v67 = v46;
  v68 = v66;
  v67((char *)v62 + *(int *)(v66 + 48), v58, v59);
  sub_D184(v61, (uint64_t)v62 + *(int *)(v68 + 64), &qword_3D7348);
  sub_D130(v63, v64, v57);
  swift_bridgeObjectRetain(v65);
  sub_D130(v63, v64, v57);
  swift_bridgeObjectRetain(v65);
  sub_D1D4(v60, &qword_3D7348);
  v69 = *(void (**)(char *, uint64_t))(v83 + 8);
  v69(v82, v59);
  sub_D170(v63, v64, v57);
  swift_bridgeObjectRelease(v65);
  sub_D1D4(v61, &qword_3D7348);
  v69(v58, v59);
  sub_D170(v63, v64, v86);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v65).n128_u64[0];
  return result;
}

void sub_118AE4(double *a1, uint64_t *a2)
{
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  id v13;
  Class isa;
  NSString v15;
  double v16;

  v3 = *a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  State.wrappedValue.getter(&v16, v4);
  v5 = v16;
  State.wrappedValue.getter(&v16, v4);
  v6 = v16;
  if (v5 > v16)
    v6 = v5;
  v16 = v6;
  State.wrappedValue.setter(&v16, v4);
  State.wrappedValue.getter(&v16, v4);
  v7 = v16;
  State.wrappedValue.getter(&v16, v4);
  v8 = v16;
  if (v16 >= v7)
    v8 = v7;
  v16 = v8;
  State.wrappedValue.setter(&v16, v4);
  v9 = sub_118118();
  v10 = *a2;
  v11 = a2[1];
  swift_bridgeObjectRetain(v11);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
  sub_15F1CC(v10, v11, isUniquelyReferenced_nonNull_native, v3);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(0x8000000000000000);
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setValue:forKey:", isa, v15);

}

void sub_118CB0(double *a1, uint64_t a2)
{
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  id v13;
  Class isa;
  NSString v15;
  double v16;

  v3 = *a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D6748);
  State.wrappedValue.getter(&v16, v4);
  v5 = v16;
  State.wrappedValue.getter(&v16, v4);
  v6 = v16;
  if (v5 > v16)
    v6 = v5;
  v16 = v6;
  State.wrappedValue.setter(&v16, v4);
  State.wrappedValue.getter(&v16, v4);
  v7 = v16;
  State.wrappedValue.getter(&v16, v4);
  v8 = v16;
  if (v16 >= v7)
    v8 = v7;
  v16 = v8;
  State.wrappedValue.setter(&v16, v4);
  v9 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 24));
    v11 = sub_118118();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    sub_15F1CC(v10, v9, isUniquelyReferenced_nonNull_native, v3);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(0x8000000000000000);
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setValue:forKey:", isa, v15);

  }
}

uint64_t sub_118E80@<X0>(uint64_t a1@<X8>)
{
  return sub_1181F4(a1);
}

__n128 sub_118EC0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  Swift::String v8;
  __int128 v9;
  Swift::String v10;
  uint64_t v11;
  __n128 v12;
  __int128 v13;
  __n128 result;
  _OWORD v15[5];

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)&v15[0] = v4;
  *((_QWORD *)&v15[0] + 1) = v3;
  swift_bridgeObjectRetain(v3);
  v8._countAndFlagsBits = 0x7472617453;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  v9 = v15[0];
  if ((v7 & 1) != 0)
  {
    v11 = 0;
    v3 = 0;
  }
  else
  {
    *(_QWORD *)&v15[0] = v4;
    *((_QWORD *)&v15[0] + 1) = v3;
    swift_bridgeObjectRetain(v3);
    v10._countAndFlagsBits = 6581829;
    v10._object = (void *)0xE300000000000000;
    String.append(_:)(v10);
    v11 = v4;
  }
  v12 = swift_bridgeObjectRetain(v6);
  sub_119530(v9, *((uint64_t *)&v9 + 1), v11, v3, v5, v6, (uint64_t)v15, v12);
  v13 = v15[3];
  *(_OWORD *)(a2 + 32) = v15[2];
  *(_OWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 64) = v15[4];
  result = (__n128)v15[1];
  *(_OWORD *)a2 = v15[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_118FAC()
{
  uint64_t v0;
  __int128 v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[4];
  __int128 v9;
  char v10;
  uint64_t v11;
  _OWORD v12[3];
  char v13;

  v1 = *(_OWORD *)(v0 + 16);
  v12[0] = *(_OWORD *)v0;
  v12[1] = v1;
  v12[2] = *(_OWORD *)(v0 + 32);
  v13 = *(_BYTE *)(v0 + 48);
  v9 = v12[0];
  v2 = sub_D254();
  swift_bridgeObjectRetain(*((_QWORD *)&v12[0] + 1));
  *(_QWORD *)&v9 = Text.init<A>(_:)(&v9, &type metadata for String, v2);
  *((_QWORD *)&v9 + 1) = v3;
  v10 = v4 & 1;
  v11 = v5;
  v8[2] = v12;
  v6 = sub_1194EC();
  return Section<>.init(header:content:)(&v9, sub_1194E4, v8, &type metadata for Text, &type metadata for SliderView, &protocol witness table for Text, v6);
}

double sub_11906C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  double result;
  uint64_t v27;

  v5 = static Font.footnote.getter(a4);
  v7 = Text.font(_:)(v6);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = swift_release(v5);
  v15 = v11 & 1;
  v16 = static Color.secondary.getter(v14);
  v17 = Text.foregroundColor(_:)(v16, v7, v9, v15, v13);
  v27 = v18;
  v20 = v19;
  v22 = v21;
  v23 = v18;
  swift_release(v16);
  sub_D170(v7, v9, v15);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v20;
  *(_BYTE *)(a3 + 16) = v22 & 1;
  *(_QWORD *)(a3 + 24) = v23;
  *(_QWORD *)(a3 + 32) = 0xD000000000000018;
  *(_QWORD *)(a3 + 40) = 0x800000000030E520;
  *(_QWORD *)(a3 + 48) = 0xD000000000000016;
  *(_QWORD *)(a3 + 56) = 0x800000000030E540;
  *(_QWORD *)(a3 + 64) = a1;
  *(_QWORD *)(a3 + 72) = a2;
  *(_BYTE *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0xD00000000000001DLL;
  *(_QWORD *)(a3 + 96) = 0x800000000030E560;
  *(_QWORD *)(a3 + 104) = 0xD00000000000001ELL;
  *(_QWORD *)(a3 + 112) = 0x800000000030E580;
  *(_QWORD *)(a3 + 120) = a1;
  *(_QWORD *)(a3 + 128) = a2;
  *(_BYTE *)(a3 + 136) = 0;
  *(_QWORD *)(a3 + 144) = 0xD000000000000012;
  *(_QWORD *)(a3 + 152) = 0x800000000030E5A0;
  *(_QWORD *)(a3 + 160) = 0xD000000000000011;
  *(_QWORD *)(a3 + 168) = 0x800000000030E5C0;
  *(_QWORD *)(a3 + 176) = a1;
  *(_QWORD *)(a3 + 184) = a2;
  *(_BYTE *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = 0xD000000000000018;
  *(_QWORD *)(a3 + 208) = 0x800000000030E5E0;
  *(_QWORD *)(a3 + 216) = 0x6F6C6F43746E6974;
  *(_QWORD *)(a3 + 224) = 0xE900000000000072;
  *(_QWORD *)(a3 + 232) = a1;
  *(_QWORD *)(a3 + 240) = a2;
  *(_BYTE *)(a3 + 248) = 0;
  *(_QWORD *)(a3 + 256) = 0xD000000000000019;
  *(_QWORD *)(a3 + 264) = 0x800000000030E600;
  *(_QWORD *)(a3 + 272) = 0xD000000000000016;
  *(_QWORD *)(a3 + 280) = 0x800000000030E620;
  *(_QWORD *)(a3 + 288) = a1;
  *(_QWORD *)(a3 + 296) = a2;
  *(_BYTE *)(a3 + 304) = 1;
  *(_QWORD *)(a3 + 312) = 0xD000000000000015;
  *(_QWORD *)(a3 + 320) = 0x800000000030E640;
  *(_QWORD *)(a3 + 328) = 0xD000000000000013;
  *(_QWORD *)(a3 + 336) = 0x800000000030E660;
  *(_QWORD *)(a3 + 344) = a1;
  *(_QWORD *)(a3 + 352) = a2;
  *(_BYTE *)(a3 + 360) = 1;
  swift_bridgeObjectRetain_n(a2, 6);
  sub_D130(v17, v20, v22 & 1);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(0x800000000030E520);
  swift_bridgeObjectRetain(0x800000000030E540);
  swift_bridgeObjectRetain_n(a2, 4);
  swift_bridgeObjectRetain(0x800000000030E560);
  swift_bridgeObjectRetain(0x800000000030E580);
  swift_bridgeObjectRetain(0x800000000030E5A0);
  swift_bridgeObjectRetain(0x800000000030E5C0);
  swift_bridgeObjectRetain(0x800000000030E5E0);
  swift_bridgeObjectRetain(0xE900000000000072);
  swift_bridgeObjectRetain(0x800000000030E600);
  swift_bridgeObjectRetain(0x800000000030E620);
  swift_bridgeObjectRelease(0x800000000030E540);
  swift_bridgeObjectRelease(0x800000000030E520);
  swift_bridgeObjectRelease(0x800000000030E580);
  swift_bridgeObjectRelease(0x800000000030E560);
  swift_bridgeObjectRelease(0x800000000030E5C0);
  swift_bridgeObjectRelease(0x800000000030E5A0);
  swift_bridgeObjectRelease_n(a2, 4);
  swift_bridgeObjectRelease(0xE900000000000072);
  swift_bridgeObjectRelease(0x800000000030E5E0);
  swift_bridgeObjectRelease(0x800000000030E620);
  swift_bridgeObjectRelease(0x800000000030E600);
  sub_D170(v17, v20, v22 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v27).n128_u64[0];
  return result;
}

uint64_t sub_1193E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v1 = v0[1];
  v5[2] = *v0;
  v5[3] = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D72E8);
  v3 = sub_10EDC(&qword_3D72F0, &qword_3D72E8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return Form.init(content:)(sub_11945C, v5, v2, v3);
}

double sub_11945C@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_11906C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for SliderViewSection()
{
  return &type metadata for SliderViewSection;
}

uint64_t sub_1194A8()
{
  return sub_10EDC(&qword_3D72F8, &qword_3D7300, (uint64_t)&protocol conformance descriptor for Form<A>);
}

uint64_t sub_1194D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32D5AC, 1);
}

double sub_1194E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_118EC0(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1194EC()
{
  unint64_t result;

  result = qword_3D7308;
  if (!qword_3D7308)
  {
    result = swift_getWitnessTable(&unk_2F77F8, &type metadata for SliderView);
    atomic_store(result, (unint64_t *)&qword_3D7308);
  }
  return result;
}

void sub_119530(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, __n128 a8@<Q0>)
{
  double v15;
  uint64_t v16;
  __n128 v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  double v36;
  uint64_t v37;

  v27 = 0;
  State.init(wrappedValue:)(&v27, &type metadata for CGFloat, a8);
  v15 = v28;
  v16 = v29;
  v27 = 0x3FF0000000000000;
  v17 = swift_retain(v29);
  State.init(wrappedValue:)(&v27, &type metadata for CGFloat, v17);
  v18 = v28;
  v19 = v29;
  v28 = *(double *)&a1;
  v29 = a2;
  v30 = a3;
  v31 = a4;
  v32 = a5;
  v33 = a6;
  v34 = v15;
  v35 = v16;
  v36 = v18;
  v37 = v19;
  swift_bridgeObjectRetain_n(a4, 2);
  swift_bridgeObjectRetain_n(a6, 2);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_retain(v16);
  swift_retain_n(v19, 2);
  v20 = sub_118118();
  swift_release(v19);
  swift_release(v16);
  swift_bridgeObjectRelease(a6);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a2);
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain(a2);
    v21 = sub_36BA4(a1, a2);
    v22 = 0.0;
    if ((v23 & 1) != 0)
      v22 = *(double *)(*(_QWORD *)(v20 + 56) + 8 * v21);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v22 = 0.0;
  }
  swift_bridgeObjectRelease(v20);
  if (a4)
  {
    swift_bridgeObjectRetain_n(a4, 2);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a6);
    v24 = sub_118118();
    swift_release(v19);
    swift_release(v16);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a2);
    v18 = 0.0;
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = sub_36BA4(a3, a4);
      if ((v26 & 1) != 0)
        v18 = *(double *)(*(_QWORD *)(v24 + 56) + 8 * v25);
    }
    swift_release(v16);
    swift_release(v19);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(v24);
    v19 = 0;
    if (v18 <= v22)
      v18 = v22;
    if (v22 >= v18)
      v22 = v18;
  }
  else
  {
    swift_release_n(v16, 2);
    swift_release(v19);
  }
  swift_bridgeObjectRelease(a6);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a2);
  *(double *)a7 = *(double *)&a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(double *)(a7 + 48) = v22;
  *(_QWORD *)(a7 + 56) = 0;
  *(double *)(a7 + 64) = v18;
  *(_QWORD *)(a7 + 72) = v19;
}

uint64_t destroy for SliderView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_release(a1[7]);
  return swift_release(a1[9]);
}

_QWORD *initializeWithCopy for SliderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

_QWORD *assignWithCopy for SliderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a1[7];
  v11 = a2[7];
  a1[7] = v11;
  swift_retain(v11);
  swift_release(v10);
  a1[8] = a2[8];
  v12 = a1[9];
  v13 = a2[9];
  a1[9] = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for SliderView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a1[7];
  a1[7] = a2[7];
  swift_release(v10);
  a1[8] = a2[8];
  v11 = a1[9];
  a1[9] = a2[9];
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SliderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SliderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SliderView()
{
  return &type metadata for SliderView;
}

uint64_t _s23ShelfKitCollectionViews20ConfigurablePropertyVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

uint64_t _s23ShelfKitCollectionViews20ConfigurablePropertyVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t _s23ShelfKitCollectionViews20ConfigurablePropertyVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s23ShelfKitCollectionViews20ConfigurablePropertyVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s23ShelfKitCollectionViews20ConfigurablePropertyVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_119C3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigurableProperty()
{
  return &type metadata for ConfigurableProperty;
}

unint64_t sub_119CA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7310;
  if (!qword_3D7310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7318);
    sub_1194EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7310);
  }
  return result;
}

uint64_t sub_119D18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_32D5D4, 1);
}

void sub_119D2C(double *a1)
{
  uint64_t v1;

  sub_118AE4(a1, (uint64_t *)(v1 + 16));
}

_QWORD *sub_119D34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  swift_retain(a1[9]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t objectdestroyTm_1()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

void sub_119DE4(double *a1)
{
  uint64_t v1;

  sub_118CB0(a1, v1 + 16);
}

uint64_t sub_119DEC()
{
  return sub_119E34(&qword_3D7370, &qword_3D7340, (void (*)(void))sub_119E18);
}

uint64_t sub_119E18()
{
  return sub_119E34(&qword_3D7378, &qword_3D7330, (void (*)(void))sub_119EB8);
}

uint64_t sub_119E34(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_10EDC(&qword_3D7390, &qword_3D7398, (uint64_t)&protocol conformance descriptor for _ValueActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_119EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7380;
  if (!qword_3D7380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_3D7328);
    sub_10EDC(&qword_3D7388, &qword_3D7320, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3D7380);
  }
  return result;
}

void sub_119F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (!*(_QWORD *)(v2 + 16))
    return;
  v3 = sub_36D7C(*(_BYTE *)(v1 + 56));
  if ((v4 & 1) == 0)
    return;
  v5 = *(_QWORD *)(v2 + 56) + 16 * v3;
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  v10 = v6;
  v11 = (void *)v9(ObjectType, v7);

  if (!v11)
    return;
  v12 = objc_msgSend(v11, "viewControllers");
  v13 = sub_10EDAC();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v22 = v14;
    else
      v22 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v14);
    if (v23)
      goto LABEL_6;
LABEL_22:

    swift_bridgeObjectRelease(v14);
    return;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_22;
LABEL_6:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v15 = *(id *)(v14 + 32);
  }
  v16 = v15;
  swift_bridgeObjectRelease(v14);
  v17 = swift_getObjectType();
  v18 = swift_conformsToProtocol2(v17, &protocol descriptor for NavigationTabIdentifiable);
  if (v18)
    v19 = v18;
  else
    v19 = 0;
  if (v18)
    v20 = v16;
  else
    v20 = 0;
  if (v20)
  {
    v21 = swift_getObjectType();
    dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(v21, v19);

  }
  else
  {

  }
}

char *sub_11A0D8()
{
  uint64_t v0;
  void *v1;
  char *v2;
  char *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(char **)(v0 + 72);
  }
  else
  {
    v3 = sub_11A130(v0);
    v4 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

char *sub_11A130(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];
  _QWORD v12[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FlowNavigationController()), "init");
  v3 = *(_QWORD *)(a1 + 40);
  v4 = type metadata accessor for NavigationFlowController(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_BYTE *)(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_pushDisabledForTests) = 0;
  swift_unknownObjectUnownedInit(v5 + OBJC_IVAR____TtC23ShelfKitCollectionViews24NavigationFlowController_navigationController, v2, v6);
  v7 = (char *)v2;
  swift_retain(v3);
  v8 = sub_8CBF0((uint64_t)v7, v3);

  swift_release(v3);
  v12[3] = v4;
  v12[4] = &protocol witness table for BaseFlowController;
  v12[0] = v8;
  v9 = (uint64_t)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController];
  swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews24FlowNavigationController_flowController], v11, 33, 0);
  sub_91F74((uint64_t)v12, v9);
  swift_endAccess(v11);
  return v7;
}

void sub_11A244(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Class isa;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  Class v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v3 = v2;
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0xA)
  {
    sub_119F40();
    if (v6 == 18)
      v7 = 8;
    else
      v7 = v6;
  }
  else
  {
    sub_3D600(a1);
    v7 = a1;
  }
  if ((static NavigationTab.== infix(_:_:)(a1, 13) & 1) != 0)
  {
    v8 = sub_11A0D8();

    sub_10EDAC();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setViewControllers:", isa);

    v10 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = sub_36D7C(*(_BYTE *)(v3 + 56));
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v10 + 56) + 16 * v11;
        v14 = *(void **)v13;
        v15 = *(_QWORD *)(v13 + 8);
        ObjectType = swift_getObjectType();
        v17 = v14;
        v50 = sub_11A0D8();
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 80))(v50, ObjectType, v15);

        sub_7C28(v7);
        return;
      }
    }
  }
  else
  {
    v18 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v18 + 16))
    {
      v19 = sub_36D7C(*(_BYTE *)(v2 + 56));
      if ((v20 & 1) != 0)
      {
        v21 = *(_QWORD *)(v18 + 56) + 16 * v19;
        v22 = *(void **)v21;
        v23 = *(_QWORD *)(v21 + 8);
        v24 = swift_getObjectType();
        v25 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 8);
        v26 = v22;
        v25(v7, a2 & 1, v24, v23);

      }
      if (*(_QWORD *)(v18 + 16))
      {
        v27 = sub_36D7C(*(_BYTE *)(v3 + 56));
        if ((v28 & 1) != 0)
        {
          v29 = *(_QWORD *)(v18 + 56) + 16 * v27;
          v30 = *(void **)v29;
          v31 = *(_QWORD *)(v29 + 8);
          v32 = swift_getObjectType();
          v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
          v34 = v30;
          v35 = (Class)v33(v32, v31);

          if (v35)
          {
            v36 = -[objc_class viewControllers](v35, "viewControllers");
            v37 = sub_10EDAC();
            v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

            if ((unint64_t)v38 >> 62)
            {
              if (v38 < 0)
                v49 = v38;
              else
                v49 = v38 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v38);
              v39 = _CocoaArrayWrapper.endIndex.getter(v49);
              swift_bridgeObjectRelease(v38);
            }
            else
            {
              v39 = *(_QWORD *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8));
            }
            swift_bridgeObjectRelease(v38);
            if (!v39)
            {
              v40 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 24);
              if (v40)
              {
                v41 = *(_QWORD *)(v3 + 32);
                v42 = *(unsigned __int8 *)(v3 + 56);
                v43 = swift_retain(v41);
                v44 = (void *)v40(v7, v42, v43);
                sub_1D618((uint64_t)v40, v41);
                if (v44)
                {
                  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                  v46 = swift_allocObject(v45, 40, 7);
                  *(_OWORD *)(v46 + 16) = xmmword_2F11D0;
                  *(_QWORD *)(v46 + 32) = v44;
                  v51 = v46;
                  specialized Array._endMutation()(v46);
                  v47 = v35;
                  v48 = v44;
                  v35 = Array._bridgeToObjectiveC()().super.isa;
                  -[objc_class setViewControllers:](v47, "setViewControllers:", v35, swift_bridgeObjectRelease(v51).n128_f64[0]);

                }
              }
            }

          }
        }
      }
    }
    sub_11A5A8(v7);
  }
  sub_7C28(v7);
}

uint64_t sub_11A5A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  if (result != 6)
  {
    v2 = result;
    if (result != 12)
    {
      v3 = v1;
      v4 = InterfaceMode.rawValue.getter(*(unsigned __int8 *)(v1 + 56));
      v6 = v5;
      v7 = InterfaceMode.rawValue.getter(1);
      if (v4 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n(v6, 2);
      }
      else
      {
        v10 = v8;
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
        swift_bridgeObjectRelease(v6);
        v12 = swift_bridgeObjectRelease(v10);
        if ((v11 & 1) == 0)
        {
          if ((unint64_t)(v2 - 8) >= 7 && v2 != 5)
          {
            if (v2 == 7)
            {
              v13 = 17;
              goto LABEL_18;
            }
            if ((static Podcasts.isUIPSidebarEnabled.getter(v12) & 1) != 0)
            {
LABEL_17:
              v13 = 7;
              goto LABEL_18;
            }
          }
          sub_3D600(v2);
          v13 = v2;
LABEL_18:
          swift_beginAccess(v3 + 48, v17, 33, 0);
          sub_3D600(v2);
          sub_3D600(v13);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v3 + 48));
          v16 = *(_QWORD *)(v3 + 48);
          *(_QWORD *)(v3 + 48) = 0x8000000000000000;
          sub_15F470(v2, v13, isUniquelyReferenced_nonNull_native);
          v15 = *(_QWORD *)(v3 + 48);
          *(_QWORD *)(v3 + 48) = v16;
          swift_bridgeObjectRelease(v15);
          sub_7C28(v13);
          swift_endAccess(v17);
          return sub_7C28(v13);
        }
      }
      if ((unint64_t)(v2 - 5) >= 0xA)
        goto LABEL_17;
      v13 = qword_2F78B8[v2 - 5];
      goto LABEL_18;
    }
  }
  return result;
}

void sub_11A728(char a1, char a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(_QWORD, uint64_t *, uint64_t, uint64_t);
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  id v53;
  void *v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  id v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  Class isa;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t (*v86)(char *, unint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  __n128 v94;
  int v95;
  id v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  uint64_t v103;
  id v104;
  id v105;
  char *v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  char *v110;
  unsigned int v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  char v123[2];
  char v124[10];

  v3 = a1 & 1;
  v4 = a2 & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E0000);
  __chkstk_darwin(v5);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TabMenu.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v110 = (char *)&v104 - v13;
  v105 = (id)sub_11AFC8(v3);
  v124[0] = v3;
  v116 = v4;
  v124[1] = v4;
  v14 = sub_11B04C(v124);
  swift_bridgeObjectRetain(v14);
  v16 = sub_15B5FC(v15);
  swift_bridgeObjectRelease(v14);
  v117 = v2;
  v17 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v17 + 16) || (v18 = sub_36D7C(v3), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease(v14);
    swift_release(v16);
LABEL_58:

    return;
  }
  v111 = v3;
  v109 = v14;
  v120 = v9;
  v20 = *(_QWORD *)(v17 + 56) + 16 * v18;
  v21 = *(void **)v20;
  v22 = *(_QWORD *)(v20 + 8);
  ObjectType = swift_getObjectType();
  v24 = *(void (**)(_QWORD, uint64_t *, uint64_t, uint64_t))(v22 + 64);
  v104 = v21;
  v24(v116, v16, ObjectType, v22);
  swift_release(v16);
  if (v105)
  {
    v25 = v105;
    v26 = objc_msgSend(v25, "viewControllers");
    v27 = sub_10EDAC();
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    sub_1EFD0C(v28);
    v30 = v29;
    v121 = v111;
    v122 = v116;
    v31 = sub_1F0024(v29);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v30);
    if (v31 != 18)
    {
      sub_11A244(v31, 0);
      sub_91F0C(v31);
    }

  }
  v32 = v109;
  if (!*(_QWORD *)(v17 + 16) || (v33 = sub_36D7C(v116), (v34 & 1) == 0))
  {
    swift_bridgeObjectRelease(v32);

    goto LABEL_58;
  }
  v35 = *(_QWORD *)(v17 + 56) + 16 * v33;
  v36 = *(void **)v35;
  v112 = *(_QWORD *)(v35 + 8);
  v37 = *(_QWORD *)(v32 + 64);
  v107 = v32 + 64;
  v38 = 1 << *(_BYTE *)(v32 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v108 = (unint64_t)(v38 + 63) >> 6;
  v113 = v36;
  v41 = 0;
  v106 = v7;
  while (1)
  {
    if (v40)
    {
      v118 = (v40 - 1) & v40;
      v119 = v41;
      v42 = __clz(__rbit64(v40)) | (v41 << 6);
      goto LABEL_30;
    }
    v43 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v43 >= v108)
      goto LABEL_59;
    v44 = *(_QWORD *)(v107 + 8 * v43);
    v45 = v41 + 1;
    if (!v44)
    {
      v45 = v41 + 2;
      if (v41 + 2 >= v108)
        goto LABEL_59;
      v44 = *(_QWORD *)(v107 + 8 * v45);
      if (!v44)
      {
        v45 = v41 + 3;
        if (v41 + 3 >= v108)
          goto LABEL_59;
        v44 = *(_QWORD *)(v107 + 8 * v45);
        if (!v44)
          break;
      }
    }
LABEL_29:
    v118 = (v44 - 1) & v44;
    v119 = v45;
    v42 = __clz(__rbit64(v44)) + (v45 << 6);
LABEL_30:
    v47 = 8 * v42;
    v48 = *(_QWORD *)(*(_QWORD *)(v32 + 48) + v47);
    v49 = *(void **)(*(_QWORD *)(v32 + 56) + v47);
    v50 = swift_getObjectType();
    v51 = v112;
    v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 72);
    sub_3D600(v48);
    v53 = v49;
    v54 = (void *)v52(v48, v50, v51);
    v55 = objc_msgSend(v53, "viewControllers");
    v56 = sub_10EDAC();
    v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

    if ((unint64_t)v57 >> 62)
    {
      if (v57 < 0)
        v103 = v57;
      else
        v103 = v57 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v57);
      v58 = _CocoaArrayWrapper.endIndex.getter(v103);
      swift_bridgeObjectRelease(v57);
    }
    else
    {
      v58 = *(_QWORD *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFF8));
    }
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    if (v58)
    {
      v114 = v53;
      v60 = objc_msgSend(v53, "viewControllers", v59);
      v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v56);

      v62 = objc_msgSend(v54, "viewControllers");
      v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v56);

      swift_retain(v117);
      v64 = InterfaceMode.rawValue.getter(v116);
      v66 = v65;
      v68 = InterfaceMode.rawValue.getter(v111);
      v69 = v67;
      if (v64 == v68 && v66 == v67)
      {
        swift_release(v117);
        swift_bridgeObjectRelease(v63);
        swift_bridgeObjectRelease_n(v66, 2);
      }
      else
      {
        v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v68, v67, 0);
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v69);
        if ((v70 & 1) != 0)
        {
          swift_release(v117);
          swift_bridgeObjectRelease(v63);
        }
        else
        {
          sub_1EFD0C(v61);
          v72 = v71;
          v123[0] = v111;
          v123[1] = v116;
          v73 = v117;
          swift_retain(v117);
          sub_1F08E0(v72, v61, v63, v123, v73);
          v75 = v74;
          swift_bridgeObjectRelease(v61);
          swift_bridgeObjectRelease(v63);
          swift_bridgeObjectRelease(v72);
          swift_release_n(v73, 2);
          v61 = v75;
        }
      }
      v76 = v54;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v76, "setViewControllers:", isa, swift_bridgeObjectRelease(v61).n128_f64[0]);
      v115 = v76;

      v78 = TabMenu.Group.items(for:)(v116, 0);
      v80 = v78;
      v81 = *(_QWORD *)(v78 + 16);
      if (v81)
      {
        v82 = v120;
        v83 = v78 + ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80));
        v84 = swift_bridgeObjectRetain(v78);
        v85 = *(_QWORD *)(v82 + 72);
        v86 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v82 + 16);
        while (1)
        {
          v87 = v86(v11, v83, v8, v84);
          v88 = TabMenu.Item.navigationTab.getter(v87);
          v89 = static NavigationTab.== infix(_:_:)(v88, v48);
          sub_7C28(v88);
          if ((v89 & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v120 + 8))(v11, v8);
          v83 += v85;
          if (!--v81)
          {
            v79 = swift_bridgeObjectRelease(v80);
            goto LABEL_44;
          }
        }
        v93 = swift_bridgeObjectRelease(v80);
        v92 = v120;
        v91 = (uint64_t)v106;
        (*(void (**)(char *, char *, uint64_t, __n128))(v120 + 32))(v106, v11, v8, v93);
        v90 = 0;
      }
      else
      {
LABEL_44:
        v90 = 1;
        v91 = (uint64_t)v106;
        v92 = v120;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v92 + 56))(v91, v90, 1, v8, v79);
      v94 = swift_bridgeObjectRelease(v80);
      v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v92 + 48))(v91, 1, v8, v94);
      v96 = v115;
      if (v95 == 1)
      {

        sub_7C28(v48);
        sub_11B6A4(v91);
        v32 = v109;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v110, v91, v8);
        v97 = (void *)TabMenu.Item.tabImage(for:)(*(unsigned __int8 *)(v117 + 56));
        v98 = objc_msgSend(v96, "tabBarItem");
        v32 = v109;
        if (!v98)
          goto LABEL_62;
        v99 = v98;
        objc_msgSend(v98, "setImage:", v97);

        v100 = objc_msgSend(v96, "_uip_tabElement");
        if (v100)
        {
          v101 = v100;
          v102 = v97;
          objc_msgSend(v101, "setImage:", v102);
          sub_7C28(v48);

          (*(void (**)(char *, uint64_t))(v92 + 8))(v110, v8);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v92 + 8))(v110, v8);

          sub_7C28(v48);
        }
      }
    }
    else
    {

      sub_7C28(v48);
    }
    v40 = v118;
    v41 = v119;
  }
  v46 = v41 + 4;
  if (v41 + 4 >= v108)
  {
LABEL_59:
    swift_release(v32);

    return;
  }
  v44 = *(_QWORD *)(v107 + 8 * v46);
  if (v44)
  {
    v45 = v41 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    v45 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v45 >= v108)
      goto LABEL_59;
    v44 = *(_QWORD *)(v107 + 8 * v45);
    ++v46;
    if (v44)
      goto LABEL_29;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_11AFC8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  v3 = sub_36D7C(a1 & 1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(v2 + 56) + 16 * v3;
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  v10 = v6;
  v11 = v9(ObjectType, v7);

  return v11;
}

uint64_t sub_11B04C(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  char v36;
  id v37;
  char v38;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  id v61;
  char v62;
  uint64_t result;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72[24];

  v2 = v1;
  v3 = *((_QWORD *)v1 + 2);
  if (!*(_QWORD *)(v3 + 16))
    return sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  v70 = a1[1];
  v4 = sub_36D7C(*a1);
  if ((v5 & 1) == 0)
    return sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  v6 = *(_QWORD *)(v3 + 56) + 16 * v4;
  v7 = *(void **)v6;
  v8 = *(_QWORD *)(v6 + 8);
  ObjectType = swift_getObjectType();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 48);
  v67 = v8;
  v68 = v7;
  v66 = ObjectType;
  v11 = v10(ObjectType, v8);
  v12 = (_QWORD *)sub_D50D4((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)v11 >> 62)
    goto LABEL_54;
  v13 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
  if (v13)
  {
    while (2)
    {
      if (v13 >= 1)
      {
        v71 = v11 & 0xC000000000000001;
        v65 = v2 + 48;
        swift_beginAccess(v2 + 48, v72, 0, 0);
        v14 = 0;
        v69 = v11;
        while (1)
        {
          v15 = v71
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11)
              : *(id *)(v11 + 8 * v14 + 32);
          v16 = v15;
          v17 = objc_msgSend(v15, "viewControllers");
          v18 = sub_10EDAC();
          v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

          sub_1EFD0C(v19);
          v21 = v20;
          swift_bridgeObjectRelease(v19);
          v22 = sub_1F00D0(v21);
          v23 = v22;
          v24 = v22[2];
          if (v24)
            break;
          swift_bridgeObjectRelease(v21);

          swift_bridgeObjectRelease(v23);
LABEL_8:
          if (v13 == ++v14)
            goto LABEL_58;
        }
        v11 = v13;
        v25 = v22[v24 + 3];
        sub_3D600(v25);
        v26 = swift_bridgeObjectRelease(v23);
        if ((v70 & 1) != 0)
        {
          v27 = v25 - 5;
          if ((unint64_t)(v25 - 5) < 0xA)
          {
            v28 = &unk_2F7990;
LABEL_18:
            v25 = v28[v27];
LABEL_21:
            if (!v12[2] || (sub_3D600(v25), sub_36F2C(v25), v30 = v29, sub_7C28(v25), (v30 & 1) == 0))
            {
              swift_bridgeObjectRelease(v21);
              sub_3D600(v25);
              v2 = v16;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
              v41 = sub_36F2C(v25);
              v42 = v12[2];
              v43 = (v40 & 1) == 0;
              v44 = v42 + v43;
              if (__OFADD__(v42, v43))
              {
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                if (v11 < 0)
                  v64 = v11;
                else
                  v64 = v11 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v11);
                v13 = _CocoaArrayWrapper.endIndex.getter(v64);
                swift_bridgeObjectRelease(v11);
                if (!v13)
                  goto LABEL_58;
                continue;
              }
              v45 = v40;
              if (v12[3] >= v44)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  sub_1610F4();
              }
              else
              {
                sub_15D02C(v44, isUniquelyReferenced_nonNull_native);
                v46 = sub_36F2C(v25);
                if ((v45 & 1) != (v47 & 1))
                  goto LABEL_60;
                v41 = v46;
              }
              if ((v45 & 1) != 0)
              {
                v48 = v12[7];

                *(_QWORD *)(v48 + 8 * v41) = v2;
              }
              else
              {
                v12[(v41 >> 6) + 8] |= 1 << v41;
                *(_QWORD *)(v12[6] + 8 * v41) = v25;
                *(_QWORD *)(v12[7] + 8 * v41) = v2;
                v49 = v12[2];
                v50 = __OFADD__(v49, 1);
                v51 = v49 + 1;
                if (v50)
                  goto LABEL_53;
                v12[2] = v51;
                sub_3D600(v25);
              }
              swift_bridgeObjectRelease(0x8000000000000000);
              sub_7C28(v25);

              goto LABEL_37;
            }
            v31 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 16);
            v32 = v16;
            v33 = v31(v66, v67);
            if (v33)
            {
              v34 = (void *)v33;
              v35 = v32;
              v36 = static NSObject.== infix(_:_:)(v35, v34);

              if ((v36 & 1) != 0)
              {
                swift_bridgeObjectRelease(v21);
                sub_3D600(v25);
                v37 = v35;
                v38 = swift_isUniquelyReferenced_nonNull_native(v12);
                sub_15F320((uint64_t)v37, v25, v38);
                swift_bridgeObjectRelease(0x8000000000000000);
                sub_7C28(v25);

LABEL_37:
                v52 = v25;
LABEL_38:
                sub_7C28(v52);
LABEL_39:
                v13 = v11;
                v11 = v69;
                goto LABEL_8;
              }
            }
            else
            {

            }
            v53 = *(_QWORD *)v65;
            if (*(_QWORD *)(*(_QWORD *)v65 + 16))
            {
              sub_3D600(v25);
              swift_bridgeObjectRetain(v53);
              v54 = sub_36F2C(v25);
              if ((v55 & 1) != 0)
              {
                v56 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v54);
                sub_3D600(v56);
                swift_bridgeObjectRelease(v53);
                sub_7C28(v25);
                sub_3D600(v56);
                v57 = sub_1F00D0(v21);
                swift_bridgeObjectRelease(v21);
                v58 = v57[2];
                if (v58)
                {
                  v59 = v57[v58 + 3];
                  sub_3D600(v59);
                  swift_bridgeObjectRelease(v57);
                  sub_3D600(v56);
                  v60 = static NavigationTab.== infix(_:_:)(v56, v59);
                  sub_7C28(v59);
                  sub_7C28(v56);
                  sub_7C28(v56);
                  if ((v60 & 1) != 0)
                  {
                    sub_3D600(v25);
                    v61 = v32;
                    v62 = swift_isUniquelyReferenced_nonNull_native(v12);
                    sub_15F320((uint64_t)v61, v25, v62);
                    swift_bridgeObjectRelease(0x8000000000000000);
                    sub_7C28(v25);

LABEL_50:
                    sub_7C28(v25);
                    v52 = v56;
                    goto LABEL_38;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease(v57);
                  sub_7C28(v56);
                }

                goto LABEL_50;
              }
              swift_bridgeObjectRelease(v53);
              sub_7C28(v25);
            }

            sub_7C28(v25);
            swift_bridgeObjectRelease(v21);
            goto LABEL_39;
          }
          if ((static Podcasts.isUIPSidebarEnabled.getter(v26) & 1) == 0)
            goto LABEL_21;
        }
        else
        {
          v27 = v25 - 1;
          if ((unint64_t)(v25 - 1) < 0x11)
          {
            v28 = &unk_2F7908;
            goto LABEL_18;
          }
        }
        sub_7C28(v25);
        v25 = 7;
        goto LABEL_21;
      }
      break;
    }
    __break(1u);
LABEL_60:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NavigationTab);
    __break(1u);
  }
  else
  {
LABEL_58:

    swift_bridgeObjectRelease(v11);
    return (uint64_t)v12;
  }
  return result;
}

uint64_t sub_11B638()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1D618(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for TabManager()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews10TabManager);
}

uint64_t sub_11B6A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3E0000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_11B6E4(void *a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  id v14;

  v9 = objc_msgSend(v4, "layer");
  v10 = objc_msgSend(a1, "CGColor");
  objc_msgSend(v9, "setShadowColor:", v10);

  v11 = objc_msgSend(v4, "layer");
  objc_msgSend(v11, "setShadowRadius:", a2);

  v12 = objc_msgSend(v4, "layer");
  objc_msgSend(v12, "setShadowOffset:", a3, a4);

  v14 = objc_msgSend(v4, "layer");
  LODWORD(v13) = 1.0;
  objc_msgSend(v14, "setShadowOpacity:", v13);

}

void sub_11B808()
{
  qword_3D7538 = 0x4020000000000000;
}

void sub_11B818()
{
  qword_3D7540 = 0x4024000000000000;
}

int64x2_t sub_11B828()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404F000000000000uLL);
  xmmword_3D7548 = (__int128)result;
  return result;
}

void sub_11B8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[3];
  _QWORD v19[5];

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_objectGraph) = a1;
  swift_release(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2D90);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v19, v5, v5);
  v6 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeController;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeController, v18, 33, 0);
  sub_11C994((uint64_t)v19, v6);
  swift_endAccess(v18);
  sub_11C9DC();
  v7 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView);
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = (uint64_t *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph];
  swift_beginAccess(&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_objectGraph], v19, 1, 0);
  v9 = *v8;
  *v8 = a1;
  v10 = v7;
  swift_release(v9);
  v11 = type metadata accessor for ExplicitContentPresenter(0);
  swift_retain(a1);
  BaseObjectGraph.inject<A>(_:)(v18, v11, v11);
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter];
  *(_QWORD *)&v10[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_explicitContentPresenter] = v18[0];

  swift_release(v12);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView);
  if (!v13)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14 = v13;
  sub_1D6A8(a1);

  v15 = *(char **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton);
  if (v15)
  {
    v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph];
    *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_objectGraph] = a1;
    v17 = v15;
    swift_release(v16);
    swift_retain(a1);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_11BAB0(uint64_t a1)
{
  char *v1;
  id result;
  void *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  id v27;
  objc_super v28;

  v28.receiver = v1;
  v28.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v28, "preferredLayoutAttributesFittingAttributes:", a1);
  v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton];
  if (!v4)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  v5 = result;
  v6 = v4;
  objc_msgSend(v5, "size");
  objc_msgSend(v6, "sizeThatFits:");
  v8 = v7;

  v9 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabel];
  objc_msgSend(v9, "intrinsicContentSize");
  v11 = v10;
  v12 = objc_msgSend(v9, "text");
  if (v12)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v16 = v15;

    v17 = (double)String.count.getter(v14, v16);
    if (qword_3CF3E8 != -1)
      swift_once(&qword_3CF3E8, sub_11C984);
    v18 = *(double *)&qword_3D7560 * v17;
    if (qword_3CF3E0 != -1)
      swift_once(&qword_3CF3E0, sub_11C974);
    v19 = *(double *)&qword_3D7558;
    swift_bridgeObjectRelease(v16);
    if (v18 > v19)
      v20 = v18;
    else
      v20 = v19;
  }
  else
  {
    v20 = 0.0;
  }
  if (v11 > v20)
    v21 = v11;
  else
    v21 = v20;
  result = objc_msgSend(v5, "size");
  v23 = v22;
  if (qword_3CF3D8 != -1)
    result = (id)swift_once(&qword_3CF3D8, sub_11B828);
  v24 = *(double *)&xmmword_3D7548;
  if (qword_3CF3D0 != -1)
    result = (id)swift_once(&qword_3CF3D0, sub_11B818);
  v25 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView];
  if (!v25)
    goto LABEL_23;
  v26 = v23
      - v24
      - *(double *)&qword_3D7540
      - v21
      - *(double *)&qword_3D7540
      - *(double *)&qword_3D7540
      - v8
      - *(double *)&qword_3D7540;
  v27 = v25;
  EpisodeInfoView.prepareForLayout(fitting:)(v26);

  if (qword_3CF3C8 != -1)
    swift_once(&qword_3CF3C8, sub_11B808);
  objc_msgSend(v5, "size");
  objc_msgSend(v5, "setSize:");
  return v5;
}

char *sub_11BDB8()
{
  char *v0;
  char *result;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  result = (char *)objc_msgSendSuper2(&v12, "prepareForReuse");
  v2 = *(char **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView];
  if (!v2)
    goto LABEL_16;
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews15EpisodeInfoView_eyebrowBuilderCancellables], v11, 1, 0);
  v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v4 < 0)
      v8 = *v3;
    else
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v3, 2);
    v9 = v2;
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v8);
    v5 = (uint64_t)result;
    if (result)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v4, 2);
    v10 = *v3;
    *v3 = (uint64_t)&_swiftEmptyArrayStorage;

    return (char *)swift_bridgeObjectRelease(v10);
  }
  v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(*v3, 2);
  result = v2;
  if (!v5)
    goto LABEL_14;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      }
      else
      {
        v7 = *(_QWORD *)(v4 + 8 * i + 32);
        swift_retain(v7);
      }
      AnyCancellable.cancel()();
      swift_release(v7);
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

id sub_11BF78(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabel;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton] = 0;
  v13 = &v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeController];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episode] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_displayScale] = 0x3FF0000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_objectGraph] = 0;

  v15.receiver = v12;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_11C0CC(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView] = 0;
  v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabel;
  v6 = objc_allocWithZone((Class)UILabel);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton] = 0;
  v8 = &v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeController];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episode] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_displayScale] = 0x3FF0000000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_objectGraph] = 0;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

uint64_t type metadata accessor for ChartEpisodeCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews16ChartEpisodeCell);
}

void sub_11C2C8(uint64_t *a1)
{
  sub_11C2D0(*a1);
}

void sub_11C2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episode);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episode) = a1;
  swift_release(v3);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView);
  if (v4)
  {
    swift_retain(a1);
    v5 = v4;
    sub_1BA170(a1, 0);
    sub_1BA4B4();
    sub_1BA5E4();
    sub_1BA9D4(a1);
    v7 = type metadata accessor for LibraryEpisodeLockup(0, v6);
    if (swift_dynamicCastClass(a1, v7))
    {
      swift_retain(a1);
      sub_1BADF4();
      swift_release(a1);
    }
    else
    {
      v9 = LegacyLockup.adamId.getter(v8);
      if ((AdamID.isEmpty.getter(v9) & 1) == 0)
      {
        v11 = LegacyLockup.adamId.getter(v10);
        sub_1BAFF4(v11);
      }
    }
    EpisodeInfoView.beginUpdates()();

    v13 = LegacyLockup.ordinal.getter(v12);
    v15 = v14;
    sub_11C5C4(v13, v14);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_11C3D8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_objectGraph));
}

uint64_t sub_11C3EC(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC(&qword_3D75F0, v3, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7BCC);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_11C444()
{
  double v0;
  double v1;
  double v2;
  char v4;

  v4 = 2;
  v0 = _s23ShelfKitCollectionViews15EpisodeInfoViewC15estimatedHeight3for05traitC012CoreGraphics7CGFloatVAA0efG5StyleO_So07UITraitC0CtFZ_0(&v4);
  if (qword_3CF3D8 != -1)
    swift_once(&qword_3CF3D8, sub_11B828);
  v1 = *((double *)&xmmword_3D7548 + 1);
  if (qword_3CF3C8 != -1)
    swift_once(&qword_3CF3C8, sub_11B808);
  if (v0 > v1)
    v2 = v0;
  else
    v2 = v1;
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.0, v2 + *(double *)&qword_3D7538 + *(double *)&qword_3D7538);
}

void *sub_11C4FC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView);
  v2 = v1;
  return v1;
}

uint64_t sub_11C52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC(&qword_3D75F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7BCC);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

void sub_11C560(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_3CF3C8 != -1)
    swift_once(&qword_3CF3C8, sub_11B808);
  *(double *)a1 = UIEdgeInsets.init(topBottom:sides:)(*(double *)&qword_3D7538, 0.0);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = 1;
}

void sub_11C5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  NSString v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  id v14;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabel);
  if (a2)
    v6 = String._bridgeToObjectiveC()();
  else
    v6 = 0;
  objc_msgSend(v5, "setText:", v6);

  v7 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth);
  if (v7)
  {
    v14 = *(id *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth);
    if (a2)
    {
      v8 = v7;
      v9 = (double)String.count.getter(a1, a2);
      if (qword_3CF3E8 != -1)
        swift_once(&qword_3CF3E8, sub_11C984);
      v10 = *(double *)&qword_3D7560 * v9;
      if (qword_3CF3E0 != -1)
        swift_once(&qword_3CF3E0, sub_11C974);
      v11 = *(double *)&qword_3D7558;
      if (v10 > *(double *)&qword_3D7558)
        v11 = v10;
      v12 = v14;
    }
    else
    {
      v13 = v14;
      v12 = v14;
      v11 = 0.0;
    }
    objc_msgSend(v12, "setConstant:", v11);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_11C708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return static ShelfCellGridCustomizations.rowSpacing(presentation:environment:)(a1, a2, v2);
}

id sub_11C724()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView);
  if (result)
    return result;
  __break(1u);
  return result;
}

double sub_11C73C()
{
  if (qword_3CF3D8 != -1)
    swift_once(&qword_3CF3D8, sub_11B828);
  return *(double *)&xmmword_3D7548;
}

uint64_t sub_11C780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episode);
  if (!v4)
    return 0;
  v8 = v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeController;
  swift_beginAccess(v8, v16, 0, 0);
  sub_11D718(v8, (uint64_t)&v13);
  if (!v14)
  {
    sub_11D760((uint64_t)&v13);
    return 0;
  }
  sub_1B738(&v13, (uint64_t)v17);
  v9 = v18;
  v10 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v14 = type metadata accessor for LegacyEpisodeLockup(0);
  v15 = sub_239FC((unint64_t *)&qword_3D7600, 255, (uint64_t (*)(uint64_t))&type metadata accessor for LegacyEpisodeLockup, (uint64_t)&protocol conformance descriptor for LegacyLockup);
  *(_QWORD *)&v13 = v4;
  swift_retain_n(v4, 2);
  v11 = EpisodeControllerProtocol.contextMenuConfiguration(asPartOf:for:selectedModels:presentationSource:interactionContext:)(a1, &v13, _swiftEmptyArrayStorage, a2, a3, v9, v10);
  swift_release(v4);
  __swift_destroy_boxed_opaque_existential_0(&v13);
  __swift_destroy_boxed_opaque_existential_0(v17);
  return v11;
}

uint64_t sub_11C8C4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D75D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7AA4);
}

uint64_t sub_11C8F0(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5CE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7B2C);
}

uint64_t sub_11C91C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D75E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7B04);
}

uint64_t sub_11C948(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D75E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ChartEpisodeCell, (uint64_t)&unk_2F7B5C);
}

void sub_11C974()
{
  qword_3D7558 = 0x4038000000000000;
}

void sub_11C984()
{
  qword_3D7560 = 0x4028000000000000;
}

uint64_t sub_11C994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D75F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_11C9DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  _BYTE *v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __int128 v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  Class isa;
  double v117;
  double v118;
  double v119;
  void *v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  char v125;
  unsigned __int8 v126;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_internalArtworkView]
    || !*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView]
    || !*(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton])
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CachingArtworkView(0)), "init");
    v4 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v3;

    v5 = *(_BYTE **)&v0[v2];
    if (v5)
    {
      v126 = v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style];
      v5[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_style] = 0;
      v6 = v5;
      sub_EB33C(&v126);

      v7 = *(void **)&v1[v2];
      if (v7)
      {
        v8 = qword_3CFA90;
        v9 = v7;
        if (v8 != -1)
          swift_once(&qword_3CFA90, sub_1D6620);
        v10 = (void *)qword_3FCF18;
        v11 = qword_3FCF30;
        v12 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v13 = *(void **)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews11ArtworkView_shadow];
        v14 = unk_3FCF20;
        *(_QWORD *)v12 = qword_3FCF18;
        *(_OWORD *)(v12 + 8) = v14;
        *((_QWORD *)v12 + 3) = v11;
        v15 = v10;

        sub_E9020();
        v16 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabel];
        sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
        v17 = (void *)static UIFont.bodyEmph.getter();
        objc_msgSend(v16, "setFont:", v17);

        objc_msgSend(v16, "setAdjustsFontForContentSizeCategory:", 1);
        v125 = 2;
        v18 = objc_allocWithZone((Class)type metadata accessor for EpisodeInfoView());
        v19 = sub_1B80D8(&v125, (uint64_t)&_swiftEmptySetSingleton);
        v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView;
        v21 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView];
        *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_episodeInfoView] = v19;

        v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DynamicContextMenuButton(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v23 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton;
        v24 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton];
        *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_moreButton] = v22;

        v25 = *(_QWORD *)&v1[v23];
        if (v25)
        {
          v26 = v25 + OBJC_IVAR____TtC23ShelfKitCollectionViews24DynamicContextMenuButton_configProvider;
          *(_QWORD *)(v26 + 8) = &off_383170;
          swift_unknownObjectWeakAssign(v26, v1);
          v27 = objc_msgSend(v1, "contentView");
          objc_msgSend(v27, "setEdgesPreservingSuperviewLayoutMargins:", 0);

          v28 = objc_msgSend(v1, "contentView");
          objc_msgSend(v28, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

          v29 = objc_msgSend(v1, "contentView");
          if (*(_QWORD *)&v1[v2])
          {
            v30 = v29;
            objc_msgSend(v29, "addSubview:");

            v31 = objc_msgSend(v1, "contentView");
            objc_msgSend(v31, "addSubview:", v16);

            v32 = objc_msgSend(v1, "contentView");
            if (*(_QWORD *)&v1[v20])
            {
              v33 = v32;
              objc_msgSend(v32, "addSubview:");

              v34 = objc_msgSend(v1, "contentView");
              if (*(_QWORD *)&v1[v23])
              {
                v35 = v34;
                objc_msgSend(v34, "addSubview:");

                v36 = *(void **)&v1[v2];
                if (v36)
                {
                  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                  v37 = *(void **)&v1[v20];
                  if (v37)
                  {
                    objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                    v38 = *(void **)&v1[v23];
                    if (v38)
                    {
                      v123 = v23;
                      objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                      v39 = objc_msgSend(v16, "widthAnchor");
                      v40 = objc_msgSend(v39, "constraintGreaterThanOrEqualToConstant:", 0.0);

                      v41 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth];
                      v122 = OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth;
                      *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews16ChartEpisodeCell_ordinalLabelMinWidth] = v40;

                      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
                      v43 = swift_allocObject(v42, 160, 7);
                      *(_OWORD *)(v43 + 16) = xmmword_2F15A0;
                      v44 = *(void **)&v1[v2];
                      if (v44)
                      {
                        v45 = objc_msgSend(v44, "leadingAnchor");
                        v46 = objc_msgSend(v1, "contentView");
                        v47 = objc_msgSend(v46, "leadingAnchor");

                        v48 = objc_msgSend(v45, "constraintEqualToAnchor:", v47);
                        *(_QWORD *)(v43 + 32) = v48;
                        v49 = *(void **)&v1[v2];
                        if (v49)
                        {
                          v50 = objc_msgSend(v49, "centerYAnchor");
                          v51 = objc_msgSend(v1, "contentView");
                          v52 = objc_msgSend(v51, "centerYAnchor");

                          v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
                          *(_QWORD *)(v43 + 40) = v53;
                          v54 = *(void **)&v1[v2];
                          if (v54)
                          {
                            v55 = objc_msgSend(v54, "topAnchor");
                            v56 = objc_msgSend(v1, "contentView");
                            v57 = objc_msgSend(v56, "topAnchor");

                            if (qword_3CF3C8 != -1)
                              swift_once(&qword_3CF3C8, sub_11B808);
                            v58 = objc_msgSend(v55, "constraintGreaterThanOrEqualToAnchor:constant:", v57, *(double *)&qword_3D7538);

                            *(_QWORD *)(v43 + 48) = v58;
                            v59 = objc_msgSend(v1, "contentView");
                            v60 = objc_msgSend(v59, "bottomAnchor");

                            v61 = *(void **)&v1[v2];
                            if (v61)
                            {
                              v62 = objc_msgSend(v61, "bottomAnchor");
                              v63 = objc_msgSend(v60, "constraintGreaterThanOrEqualToAnchor:constant:", v62, *(double *)&qword_3D7538);

                              *(_QWORD *)(v43 + 56) = v63;
                              v64 = *(void **)&v1[v2];
                              if (v64)
                              {
                                v65 = objc_msgSend(v64, "heightAnchor");
                                if (qword_3CF3D8 != -1)
                                  swift_once(&qword_3CF3D8, sub_11B828);
                                v66 = objc_msgSend(v65, "constraintEqualToConstant:", *((double *)&xmmword_3D7548 + 1));

                                *(_QWORD *)(v43 + 64) = v66;
                                v67 = *(void **)&v1[v2];
                                if (v67)
                                {
                                  v68 = objc_msgSend(v67, "widthAnchor");
                                  v69 = objc_msgSend(v68, "constraintEqualToConstant:", *(double *)&xmmword_3D7548);

                                  *(_QWORD *)(v43 + 72) = v69;
                                  v70 = objc_msgSend(v16, "leadingAnchor");
                                  v71 = *(void **)&v1[v2];
                                  if (v71)
                                  {
                                    v72 = objc_msgSend(v71, "trailingAnchor");
                                    if (qword_3CF3D0 != -1)
                                      swift_once(&qword_3CF3D0, sub_11B818);
                                    v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, *(double *)&qword_3D7540);

                                    *(_QWORD *)(v43 + 80) = v73;
                                    v74 = objc_msgSend(v16, "trailingAnchor");
                                    v75 = *(void **)&v1[v20];
                                    if (v75)
                                    {
                                      v76 = objc_msgSend(v75, "leadingAnchor");
                                      v77 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v76, -*(double *)&qword_3D7540);

                                      *(_QWORD *)(v43 + 88) = v77;
                                      v78 = objc_msgSend(v16, "centerYAnchor");
                                      v79 = objc_msgSend(v1, "contentView");
                                      v80 = objc_msgSend(v79, "centerYAnchor");

                                      v81 = objc_msgSend(v78, "constraintEqualToAnchor:", v80);
                                      *(_QWORD *)(v43 + 96) = v81;
                                      v82 = *(void **)&v1[v122];
                                      if (v82)
                                      {
                                        *(_QWORD *)(v43 + 104) = v82;
                                        v83 = *(void **)&v1[v20];
                                        if (v83)
                                        {
                                          v84 = v82;
                                          v85 = objc_msgSend(v83, "topAnchor");
                                          v86 = objc_msgSend(v1, "contentView");
                                          v87 = objc_msgSend(v86, "topAnchor");

                                          v88 = objc_msgSend(v85, "constraintGreaterThanOrEqualToAnchor:constant:", v87, *(double *)&qword_3D7538);
                                          *(_QWORD *)(v43 + 112) = v88;
                                          v89 = objc_msgSend(v1, "contentView");
                                          v90 = objc_msgSend(v89, "bottomAnchor");

                                          v91 = *(void **)&v1[v20];
                                          if (v91)
                                          {
                                            v92 = objc_msgSend(v91, "bottomAnchor");
                                            v93 = objc_msgSend(v90, "constraintGreaterThanOrEqualToAnchor:constant:", v92, *(double *)&qword_3D7538);

                                            *(_QWORD *)(v43 + 120) = v93;
                                            v94 = *(void **)&v1[v20];
                                            if (v94)
                                            {
                                              v95 = objc_msgSend(v94, "centerYAnchor");
                                              v96 = objc_msgSend(v1, "contentView");
                                              v97 = objc_msgSend(v96, "centerYAnchor");

                                              v98 = objc_msgSend(v95, "constraintEqualToAnchor:", v97);
                                              *(_QWORD *)(v43 + 128) = v98;
                                              v99 = *(void **)&v1[v123];
                                              if (v99)
                                              {
                                                v100 = objc_msgSend(v99, "leadingAnchor");
                                                v101 = *(void **)&v1[v20];
                                                if (v101)
                                                {
                                                  v102 = objc_msgSend(v101, "trailingAnchor");
                                                  v103 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v102, *(double *)&qword_3D7540);

                                                  *(_QWORD *)(v43 + 136) = v103;
                                                  v104 = *(void **)&v1[v123];
                                                  if (v104)
                                                  {
                                                    v105 = objc_msgSend(v104, "trailingAnchor");
                                                    v106 = objc_msgSend(v1, "contentView");
                                                    v107 = objc_msgSend(v106, "trailingAnchor");

                                                    v108 = objc_msgSend(v105, "constraintEqualToAnchor:constant:", v107, -*(double *)&qword_3D7540);
                                                    *(_QWORD *)(v43 + 144) = v108;
                                                    v109 = *(void **)&v1[v123];
                                                    if (v109)
                                                    {
                                                      v110 = (void *)objc_opt_self(NSLayoutConstraint);
                                                      v111 = objc_msgSend(v109, "centerYAnchor");
                                                      v112 = objc_msgSend(v1, "contentView");
                                                      v113 = objc_msgSend(v112, "centerYAnchor");

                                                      v114 = objc_msgSend(v111, "constraintEqualToAnchor:", v113);
                                                      *(_QWORD *)(v43 + 152) = v114;
                                                      specialized Array._endMutation()(v115);
                                                      sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
                                                      isa = Array._bridgeToObjectiveC()().super.isa;
                                                      objc_msgSend(v110, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

                                                      LODWORD(v117) = 1148846080;
                                                      objc_msgSend(v16, "setContentHuggingPriority:forAxis:", 0, v117);
                                                      LODWORD(v118) = 1148846080;
                                                      objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 0, v118);
                                                      objc_msgSend(v16, "setTextAlignment:", 1);
                                                      v120 = *(void **)&v1[v123];
                                                      if (v120)
                                                      {
                                                        LODWORD(v119) = 1148846080;
                                                        objc_msgSend(v120, "setContentCompressionResistancePriority:forAxis:", 0, v119);
                                                        v124 = objc_msgSend(v1, "contentView");
                                                        LODWORD(v121) = 1148846080;
                                                        objc_msgSend(v124, "setContentHuggingPriority:forAxis:", 1, v121);

                                                        return;
                                                      }
                                                      goto LABEL_64;
                                                    }
LABEL_63:
                                                    __break(1u);
LABEL_64:
                                                    __break(1u);
                                                    return;
                                                  }
LABEL_62:
                                                  __break(1u);
                                                  goto LABEL_63;
                                                }
LABEL_61:
                                                __break(1u);
                                                goto LABEL_62;
                                              }
LABEL_60:
                                              __break(1u);
                                              goto LABEL_61;
                                            }
LABEL_59:
                                            __break(1u);
                                            goto LABEL_60;
                                          }
LABEL_58:
                                          __break(1u);
                                          goto LABEL_59;
                                        }
LABEL_57:
                                        __break(1u);
                                        goto LABEL_58;
                                      }
LABEL_56:
                                      __break(1u);
                                      goto LABEL_57;
                                    }
LABEL_55:
                                    __break(1u);
                                    goto LABEL_56;
                                  }
LABEL_54:
                                  __break(1u);
                                  goto LABEL_55;
                                }
LABEL_53:
                                __break(1u);
                                goto LABEL_54;
                              }
LABEL_52:
                              __break(1u);
                              goto LABEL_53;
                            }
LABEL_51:
                            __break(1u);
                            goto LABEL_52;
                          }
LABEL_50:
                          __break(1u);
                          goto LABEL_51;
                        }
LABEL_49:
                        __break(1u);
                        goto LABEL_50;
                      }
LABEL_48:
                      __break(1u);
                      goto LABEL_49;
                    }
LABEL_47:
                    __break(1u);
                    goto LABEL_48;
                  }
LABEL_46:
                  __break(1u);
                  goto LABEL_47;
                }
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
}

uint64_t sub_11D718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D75F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_11D760(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D75F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_11D7A0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 16))();
  v4 = v3;
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);

  return v6;
}

void sub_11D7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  id v9;

  v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v7 = v6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, ObjectType, v7);

}

void sub_11D860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;

  v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v5 = v4;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(a1, ObjectType, v5);

}

void sub_11D8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;

  v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v5 = v4;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 136))(a1, ObjectType, v5);

}

uint64_t sub_11D928(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void sub_11D944(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  _OWORD v14[5];
  uint64_t v15;
  __int16 v16;

  v11 = a1[1];
  v12 = *a1;
  v9 = a1[3];
  v10 = a1[2];
  v8 = a1[4];
  v3 = *((_QWORD *)a1 + 10);
  v4 = *((_WORD *)a1 + 44);
  v13 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v6 = v5;
  ObjectType = swift_getObjectType();
  v14[0] = v12;
  v14[1] = v11;
  v14[2] = v10;
  v14[3] = v9;
  v14[4] = v8;
  v15 = v3;
  v16 = v4;
  (*(void (**)(_OWORD *, uint64_t, uint64_t))(v6 + 24))(v14, ObjectType, v6);

}

id sub_11D9FC(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "setNumberOfLines:", a1);
}

id sub_11DA10(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "setLineBreakMode:", a1);
}

void sub_11DA24(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setTextColor:", a1);

}

uint64_t sub_11DA58()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "text");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void sub_11DABC(uint64_t a1, uint64_t a2)
{
  void *v2;
  NSString v4;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v2, "setText:", v4);

}

void sub_11DB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_11DB60(a1, a2, a3, (SEL *)&selRef_setMaximumNumberOfLines_);
}

void sub_11DB20(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setAttributedText:", a1);

}

void sub_11DB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_11DB60(a1, a2, a3, (SEL *)&selRef_setLineBreakMode_);
}

void sub_11DB60(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  id v7;

  v7 = objc_msgSend(v4, "textContainer");
  objc_msgSend(v7, *a4, a1);

}

uint64_t dispatch thunk of SearchSuggestionsController.storeDataProvider.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FadableNavigationBar.navBarTintColor.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of TabbedInterfaceController.reusableNavigationController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FadableNavigationBar.titleAndView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_11DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of TabbedInterfaceController.rootViewControllers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FadableNavigationBar.barButtonItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FadableNavigationBar.barButtonItems.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of FadableNavigationBar.barButtonItems.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of FadableNavigationBar.accessoryViews.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FadableNavigationBar.accessoryViews.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of FadableNavigationBar.accessoryViews.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t sub_11DC1C(uint64_t a1)
{
  return sub_11D928(a1, (uint64_t)&off_38E7C8);
}

void sub_11DC28(__int128 *a1, uint64_t a2)
{
  sub_11D944(a1, a2, (uint64_t)&off_38E7C8);
}

uint64_t sub_11DC34(uint64_t a1)
{
  return sub_11D7A0(a1, (uint64_t)&off_38E7B0);
}

void sub_11DC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_11D7F4(a1, a2, a3, (uint64_t)&off_38E7B0);
}

void sub_11DC4C(uint64_t a1, uint64_t a2)
{
  sub_11D860(a1, a2, (uint64_t)&off_38E7B0);
}

void sub_11DC58(uint64_t a1, uint64_t a2)
{
  sub_11D8C4(a1, a2, (uint64_t)&off_38E7B0);
}

void sub_11DC6C(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  id v14;

  v2 = v1;
  v3 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style];
  if (a1 == 3)
  {
    if (v3 == 3)
      return;
    goto LABEL_3;
  }
  if (v3 != 3 && v3 != a1)
  {
LABEL_3:
    v4 = *(void **)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label];
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v5 = v4;
    if (v3 >= 2)
      v6 = static UIFont.title1Emph.getter();
    else
      v6 = static UIFont.headline.getter();
    v8 = (void *)v6;
    objc_msgSend(v5, "setFont:", v6);

    if (v3 >= 2)
      v9 = static UIFont.title1Emph.getter();
    else
      v9 = static UIFont.headline.getter();
    v10 = (void *)v9;
    v11 = (void *)UIFont.metrics.getter();

    objc_msgSend(v11, "scaledValueForValue:", 13.0);
    v13 = v12;

    v14 = objc_msgSend(v2, "contentView");
    objc_msgSend(v14, "setLayoutMargins:", v13, 10.0, v13, 10.0);

  }
}

char *sub_11DDD0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  Class isa;
  objc_super v67;

  ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style] = 3;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView;
  v11 = objc_allocWithZone((Class)type metadata accessor for ArtworkView(0));
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E8C48(1, 8.0);
  v14 = qword_3CF308;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v16 = (void *)qword_3FAD18;
  v17 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v18 = v16;

  sub_A2A14();
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v19 = v15;
  sub_A2A14();

  *(_QWORD *)&v12[v10] = v19;
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label;
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v21, "setTextAlignment:", 0);
  objc_msgSend(v21, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v21, "setNumberOfLines:", 2);
  v22 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v21, "setTextColor:", v22);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v12[v20] = v21;
  *(_QWORD *)&v12[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_objectGraph] = 0;

  v67.receiver = v12;
  v67.super_class = ObjectType;
  v23 = (char *)objc_msgSendSuper2(&v67, "initWithFrame:", a1, a2, a3, a4);
  v24 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView;
  v25 = *(void **)&v23[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView];
  v26 = v23;
  v27 = v25;
  v28 = objc_msgSend(v26, "contentView");
  objc_msgSend(v28, "bounds");
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  objc_msgSend(v27, "setFrame:", v30, v32, v34, v36);
  v37 = *(void **)&v23[v24];
  objc_msgSend(v37, "setAutoresizingMask:", 18);
  v38 = objc_msgSend(v26, "contentView");
  objc_msgSend(v38, "addSubview:", v37);

  v39 = objc_msgSend(v26, "contentView");
  v40 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label;
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v26[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label]);

  v41 = (void *)objc_opt_self(NSLayoutConstraint);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v43 = swift_allocObject(v42, 64, 7);
  *(_OWORD *)(v43 + 16) = xmmword_2F0A20;
  v44 = objc_msgSend(v26, "contentView");
  v45 = objc_msgSend(v44, "layoutMarginsGuide");

  v46 = objc_msgSend(v45, "leadingAnchor");
  v47 = objc_msgSend(*(id *)&v26[v40], "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v43 + 32) = v48;
  v49 = objc_msgSend(v26, "contentView");
  v50 = objc_msgSend(v49, "layoutMarginsGuide");

  v51 = objc_msgSend(v50, "topAnchor");
  v52 = objc_msgSend(*(id *)&v26[v40], "topAnchor");
  v53 = objc_msgSend(v51, "constraintLessThanOrEqualToAnchor:", v52);

  *(_QWORD *)(v43 + 40) = v53;
  v54 = objc_msgSend(v26, "contentView");
  v55 = objc_msgSend(v54, "layoutMarginsGuide");

  v56 = objc_msgSend(v55, "trailingAnchor");
  v57 = objc_msgSend(*(id *)&v26[v40], "trailingAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v43 + 48) = v58;
  v59 = objc_msgSend(v26, "contentView");
  v60 = objc_msgSend(v59, "layoutMarginsGuide");

  v61 = objc_msgSend(v60, "bottomAnchor");
  v62 = objc_msgSend(*(id *)&v26[v40], "lastBaselineAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v43 + 56) = v63;
  specialized Array._endMutation()(v64);
  sub_E710(0, (unint64_t *)&qword_3D2FA0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v41, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

  objc_msgSend(v26, "setAccessibilityIgnoresInvertColors:", 1);
  return v26;
}

void sub_11E43C(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  id v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "traitCollectionDidChange:", a1);
  v4 = v2[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style];
  if (v4 >= 2)
  {
    if (v4 != 2)
      return;
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v5 = static UIFont.title1Emph.getter();
  }
  else
  {
    sub_E710(0, (unint64_t *)&qword_3D2F70, UIFont_ptr);
    v5 = static UIFont.headline.getter();
  }
  v6 = (void *)v5;
  v7 = (void *)UIFont.metrics.getter();

  objc_msgSend(v7, "scaledValueForValue:", 13.0);
  v9 = v8;

  v10 = objc_msgSend(v2, "contentView");
  objc_msgSend(v10, "layoutMargins");
  objc_msgSend(v10, "setLayoutMargins:", v9);

  v11 = objc_msgSend(v2, "contentView");
  objc_msgSend(v11, "layoutMargins");
  objc_msgSend(v11, "setLayoutMargins:");

}

uint64_t type metadata accessor for SearchLandingCell()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews17SearchLandingCell);
}

double sub_11E820()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for ShelfCellHeight(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style];
  v7 = objc_msgSend(v1, "contentView");
  objc_msgSend(v7, "bounds");
  v9 = v8;
  v11 = v10;

  if (v6 != 3)
  {
    v12 = ShelfCellHeight.init(fractionOfWidth:absolute:)(0.5625, 0.0);
    v9 = ShelfCellHeight.widthFor(height:)(v12, v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

id sub_11E90C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView);
}

uint64_t sub_11E920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = enum case for ArtworkAspectRule.aspectFill(_:);
  v3 = type metadata accessor for ArtworkAspectRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

void sub_11E988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  unsigned __int8 v15;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_objectGraph) = a1;
  swift_release(v4);
  swift_retain(a1);
  v6 = ModernShelf.ItemPresentation.itemKind.getter(v5);
  v7 = ModernShelf.ItemKind.rawValue.getter(v6);
  v9 = v8;
  v11 = ModernShelf.ItemKind.rawValue.getter(23);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    v13 = 0;
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    v13 = (v14 & 1) == 0;
  }
  v15 = *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style) = v13;
  sub_11DC6C(v15);
}

void sub_11EA54()
{
  uint64_t v0;
  id v1;
  NSString v2;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

}

uint64_t sub_11EAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.rawValue.getter(v0);
  v2 = v1;
  ModernShelf.ItemKind.rawValue.getter(23);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return 1;
}

uint64_t sub_11EB0C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_objectGraph));
}

uint64_t sub_11EB20(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v4 = sub_239FC((unint64_t *)&unk_3D7670, v3, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7F10);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v4);
}

uint64_t sub_11EB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = ModernShelf.ItemPresentation.itemKind.getter();
  ModernShelf.ItemKind.rawValue.getter(v0);
  v2 = v1;
  ModernShelf.ItemKind.rawValue.getter(23);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return ShelfCellHeight.init(fractionOfWidth:absolute:)(0.5625, 0.0);
}

id sub_11EBD4()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t sub_11EBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_239FC((unint64_t *)&unk_3D7670, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7F10);
  return static TypedShelfUIKitCell.modelType.getter(v2, v3);
}

uint64_t storeEnumTagSinglePayload for SearchLandingCell.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_11EC88 + 4 * byte_2F7D05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_11ECBC + 4 * byte_2F7D00[v4]))();
}

uint64_t sub_11ECBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_11ECC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x11ECCCLL);
  return result;
}

uint64_t sub_11ECD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x11ECE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_11ECE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_11ECEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingCell.Style()
{
  return &type metadata for SearchLandingCell.Style;
}

unint64_t sub_11ED0C()
{
  unint64_t result;

  result = qword_3D7650;
  if (!qword_3D7650)
  {
    result = swift_getWitnessTable(&unk_2F7D88, &type metadata for SearchLandingCell.Style);
    atomic_store(result, (unint64_t *)&qword_3D7650);
  }
  return result;
}

uint64_t sub_11ED50(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7658, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7DB0);
}

uint64_t sub_11ED7C(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D5C88, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7E38);
}

uint64_t sub_11EDA8(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7660, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7E10);
}

uint64_t sub_11EDD4(uint64_t a1, uint64_t a2)
{
  return sub_239FC(&qword_3D7668, a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingCell, (uint64_t)&unk_2F7E68);
}

void sub_11EE00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;

  v1 = v0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_style] = 3;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_artworkView;
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_E8C48(1, 8.0);
  v4 = qword_3CF308;
  v5 = (char *)v3;
  if (v4 != -1)
    swift_once(&qword_3CF308, sub_E9BE0);
  v6 = (void *)qword_3FAD18;
  v7 = *(void **)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor];
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderColor] = qword_3FAD18;
  v8 = v6;

  sub_A2A14();
  *(_QWORD *)&v5[OBJC_IVAR____TtC23ShelfKitCollectionViews17RoundedCornerView_borderWidth] = 0x3FE0000000000000;
  v9 = v5;
  sub_A2A14();

  *(_QWORD *)&v1[v2] = v9;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_label;
  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v11, "setTextAlignment:", 0);
  objc_msgSend(v11, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v11, "setNumberOfLines:", 2);
  v12 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v11, "setTextColor:", v12);

  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v10] = v11;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews17SearchLandingCell_objectGraph] = 0;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/SearchLandingCell.swift", 47, 2, 127, 0);
  __break(1u);
}

void sub_11F090(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD **v31;
  _QWORD *v32;
  id v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  _QWORD *v49;
  id v50;
  id v51;
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  id (*v56)();
  uint64_t v57;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v3)
    return;
  v51 = v3;
  v4 = objc_opt_self(UITabBarController);
  v5 = (void *)swift_dynamicCastObjCClass(v51, v4);
  if (!v5)
  {
    v48 = v51;
LABEL_12:

    return;
  }
  v6 = v5;
  v50 = objc_msgSend(v5, "tabBar");
  v7 = objc_msgSend(v50, "snapshotViewAfterScreenUpdates:", 0);
  if (!v7)
  {

    v48 = v50;
    goto LABEL_12;
  }
  v8 = v7;
  v9 = objc_msgSend(a1, "containerView");
  v10 = objc_msgSend(v6, "tabBar");
  objc_msgSend(v10, "frame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = objc_msgSend(v6, "view");
  objc_msgSend(v9, "convertRect:fromView:", v19, v12, v14, v16, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  objc_msgSend(v8, "setFrame:", v21, v23, v25, v27);
  v28 = objc_msgSend(a1, "containerView");
  objc_msgSend(v28, "addSubview:", v8);

  v29 = objc_msgSend(v6, "tabBar");
  objc_msgSend(v29, "setAlpha:", 0.0);

  v30 = swift_allocObject(&unk_3837A0, 24, 7);
  *(_QWORD *)(v30 + 16) = v6;
  v31 = (_QWORD **)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks);
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews27AnimatedTransitionWithTasks_tasks, &aBlock, 33, 0);
  v32 = *v31;
  v33 = v51;
  swift_retain(v30);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
  *v31 = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v32 = sub_20F5B4(0, v32[2] + 1, 1, v32);
    *v31 = v32;
  }
  v36 = v32[2];
  v35 = v32[3];
  v37 = v36 + 1;
  if (v36 >= v35 >> 1)
  {
    v49 = sub_20F5B4((_QWORD *)(v35 > 1), v36 + 1, 1, v32);
    v37 = v36 + 1;
    v32 = v49;
    *v31 = v49;
  }
  v32[2] = v37;
  v38 = &v32[3 * v36];
  v38[4] = sub_11FB78;
  v38[5] = v30;
  *((_BYTE *)v38 + 48) = 2;
  swift_endAccess(&aBlock);
  swift_release(v30);
  v39 = (void *)objc_opt_self(UIView);
  v40 = swift_allocObject(&unk_3837C8, 24, 7);
  *(_QWORD *)(v40 + 16) = v8;
  v56 = sub_11FBE4;
  v57 = v40;
  aBlock = _NSConcreteStackBlock;
  v53 = 1107296256;
  v54 = sub_24360;
  v55 = &block_descriptor_15_0;
  v41 = _Block_copy(&aBlock);
  v42 = v57;
  v43 = v8;
  swift_release(v42);
  v44 = swift_allocObject(&unk_383818, 24, 7);
  *(_QWORD *)(v44 + 16) = v43;
  v56 = sub_EC690;
  v57 = v44;
  aBlock = _NSConcreteStackBlock;
  v53 = 1107296256;
  v54 = sub_1E3D64;
  v55 = &block_descriptor_21_1;
  v45 = _Block_copy(&aBlock);
  v46 = v57;
  v47 = v43;
  swift_release(v46);
  objc_msgSend(v39, "animateWithDuration:delay:options:animations:completion:", 0x10000, v41, v45, 0.233333333, 0.0);

  _Block_release(v45);
  _Block_release(v41);
}

id sub_11F4D8(void *a1)
{
  CGRect v3;

  objc_msgSend(a1, "bounds");
  CGRectGetHeight(v3);
  objc_msgSend(a1, "center");
  return objc_msgSend(a1, "setCenter:");
}

void sub_11F530(void *a1)
{
  char *v1;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double *v13;
  int v14;
  CGFloat v15;
  CGFloat v16;
  double x;
  double y;
  double width;
  double height;
  id v21;
  int v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  CGFloat *v33;
  void *v34;
  CGFloat *v35;
  id v36;
  char *v37;
  uint64_t v38;
  void *v39;
  CGFloat *v40;
  char *v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double v46;
  double MidY;
  double v48;
  double MidX;
  void **aBlock;
  uint64_t v51;
  void *v52;
  void *v53;
  id (*v54)();
  CGFloat *v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey, sub_2A2608(0));
  if (v3)
  {
    v4 = v3;
    objc_msgSend(a1, "finalFrameForViewController:", v3);
  }
  else
  {
    v4 = objc_msgSend(a1, "containerView");
    objc_msgSend(v4, "bounds");
  }
  v9 = v5;
  v10 = v6;
  v11 = v7;
  v12 = v8;

  v13 = (double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23BouncyFromRectAnimation_fromRect];
  v14 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews23BouncyFromRectAnimation_fromRect + 32];
  if ((v14 & 1) != 0)
  {
    v56.origin.x = v9;
    v56.origin.y = v10;
    v56.size.width = v11;
    v56.size.height = v12;
    v15 = CGRectGetWidth(v56) * 0.2;
    v57.origin.x = v9;
    v57.origin.y = v10;
    v57.size.width = v11;
    v57.size.height = v12;
    v16 = CGRectGetHeight(v57) * 0.2;
    v58.origin.x = v9;
    v58.origin.y = v10;
    v58.size.width = v11;
    v58.size.height = v12;
    v59 = CGRectInset(v58, v15, v16);
    x = v59.origin.x;
    y = v59.origin.y;
    width = v59.size.width;
    height = v59.size.height;
  }
  else
  {
    width = v13[2];
    height = v13[3];
    x = *v13;
    y = v13[1];
  }
  v60.origin.x = x;
  v60.origin.y = y;
  v60.size.width = width;
  v60.size.height = height;
  v45 = CGRectGetWidth(v60);
  v61.origin.x = v9;
  v61.origin.y = v10;
  v61.size.width = v11;
  v61.size.height = v12;
  v44 = CGRectGetWidth(v61);
  v62.origin.x = x;
  v62.origin.y = y;
  v62.size.width = width;
  v62.size.height = height;
  v43 = CGRectGetHeight(v62);
  v63.origin.x = v9;
  v63.origin.y = v10;
  v63.size.width = v11;
  v63.size.height = v12;
  v42 = CGRectGetHeight(v63);
  v64.origin.x = x;
  v64.origin.y = y;
  v64.size.width = width;
  v64.size.height = height;
  MidX = CGRectGetMidX(v64);
  v65.origin.x = v9;
  v65.origin.y = v10;
  v65.size.width = v11;
  v65.size.height = v12;
  v48 = CGRectGetMidX(v65);
  v66.origin.x = x;
  v66.origin.y = y;
  v66.size.width = width;
  v66.size.height = height;
  MidY = CGRectGetMidY(v66);
  v67.origin.x = v9;
  v67.origin.y = v10;
  v67.size.width = v11;
  v67.size.height = v12;
  v46 = CGRectGetMidY(v67);
  v21 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  objc_msgSend(v21, "setFrame:", x, y, width, height);
  if (v21)
    v22 = v14;
  else
    v22 = 0;
  if (v22 == 1)
  {
    objc_msgSend(v21, "setAlpha:", 0.0);
    objc_msgSend(v21, "layoutIfNeeded");
    v24 = v44;
    v23 = v45;
    v26 = v42;
    v25 = v43;
  }
  else
  {
    objc_msgSend(v21, "layoutIfNeeded");
    v24 = v44;
    v23 = v45;
    v26 = v42;
    v25 = v43;
    if (!v21)
      goto LABEL_14;
  }
  v27 = v21;
  v28 = objc_msgSend(a1, "containerView");
  objc_msgSend(v28, "addSubview:", v27);

LABEL_14:
  v29 = sqrt((MidX - v48) * (MidX - v48) + (MidY - v46) * (MidY - v46));
  v30 = sqrt((v23 - v24) * (v23 - v24) + (v25 - v26) * (v25 - v26));
  if (v29 < v30)
    v29 = v30;
  v31 = v29 / 0.7 / v29;
  v32 = (void *)objc_opt_self(UIView);
  v33 = (CGFloat *)swift_allocObject(&unk_383700, 64, 7);
  *((_QWORD *)v33 + 2) = v1;
  *((_QWORD *)v33 + 3) = v21;
  v33[4] = v9;
  v33[5] = v10;
  v33[6] = v11;
  v33[7] = v12;
  v54 = sub_11FAEC;
  v55 = v33;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_24360;
  v53 = &block_descriptor_21;
  v34 = _Block_copy(&aBlock);
  v35 = v55;
  v36 = v21;
  v37 = v1;
  swift_release(v35);
  v38 = swift_allocObject(&unk_383750, 32, 7);
  *(_QWORD *)(v38 + 16) = v37;
  *(_QWORD *)(v38 + 24) = a1;
  v54 = sub_11FB40;
  v55 = (CGFloat *)v38;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_1E3D64;
  v53 = &block_descriptor_6_4;
  v39 = _Block_copy(&aBlock);
  v40 = v55;
  v41 = v37;
  swift_unknownObjectRetain(a1);
  swift_release(v40);
  objc_msgSend(v32, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 129, v34, v39, 0.7, 0.0, 0.75, v31);

  _Block_release(v39);
  _Block_release(v34);
}

id sub_11F9B4(double a1, double a2, double a3, double a4, uint64_t a5, void *a6)
{
  id result;

  sub_2A2608(1);
  result = objc_msgSend(a6, "setFrame:", a1, a2, a3, a4);
  if (a6)
    return objc_msgSend(a6, "setAlpha:", 1.0);
  return result;
}

id sub_11FA70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BouncyFromRectAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BouncyFromRectAnimation()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews23BouncyFromRectAnimation);
}

uint64_t sub_11FAC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_11FAEC()
{
  uint64_t v0;

  return sub_11F9B4(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_21(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_11FB14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_11FB40()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), "completeTransition:", 1, sub_2A2608(2));
}

void sub_11FB78()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), "tabBar");
  objc_msgSend(v1, "setAlpha:", 1.0);

}

uint64_t sub_11FBC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_11FBE4()
{
  uint64_t v0;

  return sub_11F4D8(*(void **)(v0 + 16));
}

void sub_11FC0C()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  char *v4;
  double v5;
  double v6;
  id v8;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_0 + 1
    && (v3 = objc_msgSend(v0, "traitCollection"),
        v4 = (char *)objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (_BYTE *)&dword_0 + 2))
  {
    objc_msgSend(v0, "pageContainerSize");
    if (v6 < v5 || v5 > 768.0)
      objc_msgSend(v0, "pageMarginInsets", 30.0);
  }
  else
  {
    objc_msgSend(v0, "pageContainerSize");
    v8 = objc_msgSend(v0, "traitCollection");
    sub_1109D0(v8);

  }
}

void PageTraitEnvironment.todayPageColumnMargin.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  char *v6;
  id v7;
  char *v8;
  double v9;
  __n128 v10;
  double v11;
  char v13;

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "userInterfaceIdiom");

  if (v6 == (_BYTE *)&dword_0 + 1
    && (v7 = objc_msgSend(v2, "traitCollection"),
        v8 = (char *)objc_msgSend(v7, "horizontalSizeClass"),
        v7,
        v8 == (_BYTE *)&dword_0 + 2))
  {
    v9 = (*(double (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
    v10.n128_u64[0] = 30.0;
    if (v11 < v9 || v9 > 768.0)
      (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v10);
  }
  else
  {
    v13 = 1;
    (*(void (**)(char *))(a2 + 24))(&v13);
  }
}

double PageTraitEnvironment.todayPageRowMargin.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  char *v6;
  id v7;
  char *v8;
  double result;

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = (char *)objc_msgSend(v5, "userInterfaceIdiom");

  if (v6 != (_BYTE *)&dword_0 + 1)
    return 30.0;
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = (char *)objc_msgSend(v7, "horizontalSizeClass");

  if (v8 != (_BYTE *)&dword_0 + 2)
    return 30.0;
  PageTraitEnvironment.todayPageColumnMargin.getter(a1, a2);
  return result;
}

double PageTraitEnvironment.todayPageCardLayoutMargins.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  id v4;

  v3 = (*(double (**)(void))(a2 + 16))();
  v4 = objc_msgSend(v2, "traitCollection");
  objc_msgSend(v4, "userInterfaceIdiom");

  return v3;
}

id sub_11FF90(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  char *v9;
  double *v10;
  char *v11;
  id v12;
  id v13;
  __int128 v15;
  objc_super v16;
  _QWORD v17[5];

  v15 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets + 16);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets + 24);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_traitCollection);
  sub_1D5D4(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec, (uint64_t)v17);
  v8 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (double *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize];
  *v10 = a1;
  v10[1] = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_traitCollection] = v7;
  sub_1D5D4((uint64_t)v17, (uint64_t)&v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec]);
  v11 = &v9[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets];
  *(_OWORD *)v11 = v15;
  *((_QWORD *)v11 + 2) = v5;
  *((_QWORD *)v11 + 3) = v6;
  v16.receiver = v9;
  v16.super_class = v8;
  v12 = v7;
  v13 = objc_msgSendSuper2(&v16, "init");
  __swift_destroy_boxed_opaque_existential_0(v17);
  return v13;
}

id sub_1200BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SnapshotPageTraitEnvironment();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_120124()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize);
}

double sub_120138()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets);
}

uint64_t sub_120150(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  char v8;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec), *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec + 24));
  v4 = *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize);
  v5 = *(double *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize + 8);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_traitCollection);
  v8 = v2;
  return (*(uint64_t (**)(uint64_t, char *, double, double))(v3 + 16))(v6, &v8, v4, v5);
}

double sub_1201D0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_unknownObjectRetain(v0).n128_u64[0];
  return result;
}

id sub_1201F8(double a1, double a2)
{
  return sub_11FF90(a1, a2);
}

uint64_t sub_120214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D5D4(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec, a1);
}

void UIViewController.pageContainerSize.getter()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

  }
  else
  {
    __break(1u);
  }
}

double UIViewController.pageMarginInsets.getter()
{
  void *v0;
  double v1;

  objc_msgSend(v0, "pageContainerSize");
  StandardGridSpec.basePageMargin(for:)(v1);
  return 0.0;
}

void UIViewController.gridSpec.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for StandardGridSpec;
  *(_QWORD *)(a1 + 32) = &protocol witness table for StandardGridSpec;
}

id UIViewController.snapshotPageTraitEnvironment.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v20;
  _QWORD v21[5];

  objc_msgSend(v0, "pageContainerSize");
  v2 = v1;
  v4 = v3;
  objc_msgSend(v0, "pageMarginInsets");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v0, "traitCollection");
  v14 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v15 = (char *)objc_allocWithZone(v14);
  v21[3] = &type metadata for StandardGridSpec;
  v21[4] = &protocol witness table for StandardGridSpec;
  v16 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize];
  *(_QWORD *)v16 = v2;
  *((_QWORD *)v16 + 1) = v4;
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_traitCollection] = v13;
  sub_1D5D4((uint64_t)v21, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec]);
  v17 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets];
  *(_QWORD *)v17 = v6;
  *((_QWORD *)v17 + 1) = v8;
  *((_QWORD *)v17 + 2) = v10;
  *((_QWORD *)v17 + 3) = v12;
  v20.receiver = v15;
  v20.super_class = v14;
  v18 = objc_msgSendSuper2(&v20, "init");
  __swift_destroy_boxed_opaque_existential_0(v21);
  return v18;
}

id UIViewController.transitionPageTraitEnvironment(newSize:)(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_class *v14;
  char *v15;
  double *v16;
  char *v17;
  id v18;
  objc_super v20;
  _QWORD v21[5];

  objc_msgSend(v2, "pageMarginInsets");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = objc_msgSend(v2, "traitCollection");
  v14 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v15 = (char *)objc_allocWithZone(v14);
  v21[3] = &type metadata for StandardGridSpec;
  v21[4] = &protocol witness table for StandardGridSpec;
  v16 = (double *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_containerSize];
  *v16 = a1;
  v16[1] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_traitCollection] = v13;
  sub_1D5D4((uint64_t)v21, (uint64_t)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_gridSpec]);
  v17 = &v15[OBJC_IVAR____TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment_pageMarginInsets];
  *(_QWORD *)v17 = v6;
  *((_QWORD *)v17 + 1) = v8;
  *((_QWORD *)v17 + 2) = v10;
  *((_QWORD *)v17 + 3) = v12;
  v20.receiver = v15;
  v20.super_class = v14;
  v18 = objc_msgSendSuper2(&v20, "init");
  __swift_destroy_boxed_opaque_existential_0(v21);
  return v18;
}

double UIViewController.pageColumnMargin(for:gridType:)()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  objc_msgSend(v0, "pageContainerSize");
  v1 = objc_msgSend(v0, "traitCollection");
  sub_1109D0(v1);
  v3 = v2;

  return v3;
}

id sub_120640()
{
  void *v0;

  return objc_msgSend(v0, "pageContainerSize");
}

id sub_120650()
{
  void *v0;

  return objc_msgSend(v0, "pageMarginInsets");
}

id sub_120660()
{
  return UIViewController.snapshotPageTraitEnvironment.getter();
}

id sub_12067C(double a1, double a2)
{
  return UIViewController.transitionPageTraitEnvironment(newSize:)(a1, a2);
}

double UIViewController.presentedArticleWidth.getter()
{
  void *v0;
  void *v1;
  id v2;
  char *v3;
  unint64_t v4;
  id v5;
  char *v6;
  id v7;
  double result;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGRect v25;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = (char *)objc_msgSend(v2, "userInterfaceIdiom");

  if ((v3 == (_BYTE *)&dword_0 + 1
     || (v4 = sub_1FEB8(), (static UITraitCollection.interfaceIdiomIsMac.getter(v4) & 1) != 0))
    && (v5 = objc_msgSend(v1, "traitCollection"),
        v6 = (char *)objc_msgSend(v5, "horizontalSizeClass"),
        v5,
        v6 == (_BYTE *)&dword_0 + 2))
  {
    v7 = objc_msgSend(v1, "view");
    if (v7)
    {
      v9 = v7;
      v10 = objc_msgSend(v7, "_screen");

      if (v10)
      {
        objc_msgSend(v10, "_referenceBounds");
        v12 = v11;
        v14 = v13;

        return sub_120828(2, v14, v12);
      }
      goto LABEL_11;
    }
  }
  else
  {
    v15 = objc_msgSend(v1, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "bounds");
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      v25.origin.x = v18;
      v25.origin.y = v20;
      v25.size.width = v22;
      v25.size.height = v24;
      return CGRectGetWidth(v25);
    }
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double sub_120828(char a1, double a2, double a3)
{
  void *v3;
  void *v4;
  id v8;
  char *v9;
  id v10;
  char v11;
  id v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v23;

  v4 = v3;
  v8 = objc_msgSend(v3, "traitCollection");
  v9 = (char *)objc_msgSend(v8, "userInterfaceIdiom");

  if ((v9 == (_BYTE *)&dword_0 + 1
     || (v10 = objc_msgSend(v4, "traitCollection"),
         v11 = UITraitCollection.interfaceIdiomIsMac.getter(),
         v10,
         (v11 & 1) != 0))
    && (v12 = objc_msgSend(v4, "traitCollection"),
        v13 = (char *)objc_msgSend(v12, "horizontalSizeClass"),
        v12,
        v13 == (_BYTE *)&dword_0 + 2))
  {
    objc_msgSend(v4, "pageMarginInsets");
    v15 = v14;
    v17 = v16;
    sub_11FC0C();
    if (a3 >= a2)
    {
      v21 = 335.0;
      if (a2 > 768.0 && a1)
        return a2 - v15 - v17 + -335.0 - v18;
    }
    else
    {
      if (a2 < 1366.0)
      {
        if (!a1)
          return 335.0;
        return a2 - v15 - v17 + -335.0 - v18;
      }
      if (!a1)
        return 335.0;
      v23 = a2 - v15 - v17;
      if (a1 == 1)
        return v23 + -670.0 - (v18 + v18);
      else
        return (v23 - v18) * 0.5;
    }
  }
  else
  {
    objc_msgSend(v4, "pageMarginInsets");
    return a2 - v19 - v20;
  }
  return v21;
}

uint64_t type metadata accessor for SnapshotPageTraitEnvironment()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews28SnapshotPageTraitEnvironment);
}

uint64_t dispatch thunk of LibraryViewControllerProviderProtocol.notificationSettings(podcastUuidToEmphasize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_120A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

uint64_t sub_120A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 56))();
}

uint64_t sub_120A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

double sub_120A54(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, int a5, int a6, uint64_t a7, double a8, double a9, uint64_t a10, uint64_t a11)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  int v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  double v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[40];

  v36 = a3;
  v33 = a5;
  v34 = a6;
  v35 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a11);
  v17 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v32 - v19;
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v32 - v23;
  v25 = *a4;
  sub_1D5D4(a1, (uint64_t)v38);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
  v27 = swift_dynamicCast(v20, v38, v26, AssociatedTypeWitness, 6);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v27)
  {
    v28(v20, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v20, AssociatedTypeWitness);
    v38[0] = v25;
    v29 = (*(double (**)(char *, uint64_t, uint64_t, _BYTE *, _QWORD, _QWORD, uint64_t, uint64_t, double, double))(a11 + 48))(v24, v35, v36, v38, v33 & 1, v34 & 1, a7, a11, a8, a9);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, AssociatedTypeWitness);
  }
  else
  {
    v28(v20, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a11, a7, AssociatedTypeWitness, &unk_32DA40, &unk_32DA48);
    sub_1B4990(a1, AssociatedTypeWitness, AssociatedConformanceWitness, v37);
    return 0.0;
  }
  return v29;
}

void sub_120C68(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, int a5, int a6, uint64_t a7, double a8, double a9)
{
  uint64_t WitnessTable;
  uint64_t v19;

  WitnessTable = swift_getWitnessTable(&unk_2FD780, a7);
  sub_120A54(a1, a2, a3, a4, a5, a6, a7, a8, a9, v19, WitnessTable);
}

uint64_t sub_120D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E3184();
  return dispatch thunk of UIMutableTraits.subscript.setter(a1, &type metadata for IsDisplayingCellTrait, &type metadata for IsDisplayingCellTrait, v6, a2, a3);
}

void sub_120D54(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_120D5C()
{
  uint64_t v0;

  v0 = qword_3D7760;
  swift_bridgeObjectRetain(off_3D7768);
  return v0;
}

uint64_t sub_120DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t EnvironmentValues.isDisplayingCell.getter()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_120DE4();
  EnvironmentValues.subscript.getter(&var1, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v0);
  return var1;
}

unint64_t sub_120DE4()
{
  unint64_t result;

  result = qword_3D7770;
  if (!qword_3D7770)
  {
    result = swift_getWitnessTable(&unk_2F8140, &type metadata for IsDisplayingCellEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D7770);
  }
  return result;
}

uint64_t EnvironmentValues.isDisplayingCell.setter(char a1)
{
  unint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_120DE4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v1);
}

uint64_t (*EnvironmentValues.isDisplayingCell.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = (_QWORD *)(a1 + 17);
  *(_QWORD *)a1 = v1;
  v4 = sub_120DE4();
  *(_QWORD *)(a1 + 8) = v4;
  EnvironmentValues.subscript.getter(v3, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_120EC0;
}

uint64_t sub_120EC0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return EnvironmentValues.subscript.setter(a1 + 17, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v1);
}

_QWORD *sub_120EF4@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_120DE4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_120F40(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_120DE4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for IsDisplayingCellEnvironmentKey, &type metadata for IsDisplayingCellEnvironmentKey, v1);
}

ValueMetadata *type metadata accessor for IsDisplayingCellEnvironmentKey()
{
  return &type metadata for IsDisplayingCellEnvironmentKey;
}

ValueMetadata *type metadata accessor for IsDisplayingCellTrait()
{
  return &type metadata for IsDisplayingCellTrait;
}

unint64_t sub_120FAC()
{
  unint64_t result;

  result = qword_3D7778;
  if (!qword_3D7778)
  {
    result = swift_getWitnessTable(&unk_2F8108, &type metadata for IsDisplayingCellEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_3D7778);
  }
  return result;
}

uint64_t sub_120FF0@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;

  v2 = sub_E3184();
  result = UITraitCollection.subscript.getter(&type metadata for IsDisplayingCellTrait, &type metadata for IsDisplayingCellTrait, v2);
  *a1 = result & 1;
  return result;
}

uint64_t sub_121030(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a2;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  return sub_120D08(v2, v3, v4);
}

uint64_t sub_121078()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void (*v31)(_QWORD *, _QWORD);
  id v32;
  uint64_t (*v33)(_QWORD *, _QWORD);
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t (*v37)(_QWORD *, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void (*v45)(_QWORD *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  double (*v53)(_QWORD *, _QWORD);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  void (*v59)(_QWORD *, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *boxed_opaque_existential_0;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  id v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[3];
  uint64_t v93;
  void *v94;
  char v95[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D9EF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIBackgroundConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v87 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v88 = (char *)&v82 - v9;
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v89 = *(_QWORD *)(v10 - 8);
  v90 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7810);
  __chkstk_darwin(v13);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Information(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info];
  swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info], v95, 0, 0);
  v21 = (uint64_t)v20;
  v22 = v17;
  v23 = v16;
  sub_122CE4(v21, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v16) == 1)
    return sub_D1D4((uint64_t)v15, &qword_3D7810);
  v85 = v5;
  v86 = v6;
  v83 = v22;
  v84 = v4;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v15, v16);
  sub_121750();
  v25 = sub_A1E18();
  v26 = (void *)static UIFont.subhead.getter(v25);
  v27 = (void *)static UIFont.title3.getter(v26);
  v28 = (void *)static UIFont.preferredFont(iOS:mac:)(v26, v27);

  UICollectionViewListCell.defaultContentConfiguration()();
  UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter(1);
  v29 = (void *)objc_opt_self(UIColor);
  v30 = objc_msgSend(v29, "secondaryLabelColor");
  v31 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v92);
  UIListContentConfiguration.TextProperties.color.setter(v30);
  v31(v92, 0);
  v32 = v28;
  v33 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v92);
  UIListContentConfiguration.TextProperties.font.setter(v32);
  v34 = v33(v92, 0);
  v35 = Information.title.getter(v34);
  UIListContentConfiguration.text.setter(v35);
  v36 = v32;
  v37 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v92);
  v82 = v36;
  UIListContentConfiguration.TextProperties.font.setter(v36);
  v38 = v37(v92, 0);
  v39 = Information.description.getter(v38);
  v41 = v88;
  if (v40)
  {
    v42 = v39;
    v43 = v40;
    v44 = objc_msgSend(v29, "labelColor");
    v45 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v92);
    UIListContentConfiguration.TextProperties.color.setter(v44);
    v45(v92, 0);
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron] == 1)
    {
      swift_bridgeObjectRelease(v43);
      v42 = Information.subtitle.getter(v46);
      v43 = v47;
    }
    v39 = UIListContentConfiguration.secondaryText.setter(v42, v43);
  }
  Information.clickAction.getter(v92, v39);
  if (v93)
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
    v49 = type metadata accessor for Action(0);
    v50 = swift_dynamicCast(&v91, v92, v48, v49, 6);
    if ((v50 & 1) != 0)
    {
      v51 = v91;
      if (qword_3CEFE8 != -1)
        swift_once(&qword_3CEFE8, sub_DF80);
      v52 = (id)qword_3D0890;
      v53 = (double (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v92);
      UIListContentConfiguration.TextProperties.color.setter(v52);
      v54.n128_f64[0] = v53(v92, 0);
      v55 = Action.title.getter(v54);
      UIListContentConfiguration.secondaryText.setter(v55, v56);
      objc_msgSend(v1, "setAccessibilityTraits:", UIAccessibilityTraitButton);
      swift_release(v51);
    }
  }
  else
  {
    v50 = sub_D1D4((uint64_t)v92, (uint64_t *)&unk_3D30D0);
  }
  v57 = v85;
  v58 = (Information.expanded.getter(v50) & 1) == 0;
  v59 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v92);
  UIListContentConfiguration.TextProperties.numberOfLines.setter(v58);
  v59(v92, 0);
  v60 = OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_kind;
  if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_kind] == 14)
    v61 = 1;
  else
    v61 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron];
  UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter(v61);
  if ((v1[v60] & 0xFE) != 0xE)
  {
    UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(0);
    UIListContentConfiguration.directionalLayoutMargins.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  }
  v62 = v90;
  v93 = v90;
  v94 = &protocol witness table for UIListContentConfiguration;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v92);
  (*(void (**)(_QWORD *, char *, uint64_t))(v89 + 16))(boxed_opaque_existential_0, v12, v62);
  v64 = UICollectionViewCell.contentConfiguration.setter(v92);
  v65 = static UIBackgroundConfiguration.listPlainCell()(v64);
  Information.clickAction.getter(v92, v65);
  v66 = v93;
  v67 = sub_D1D4((uint64_t)v92, (uint64_t *)&unk_3D30D0);
  if (!v66)
  {
    v68 = v87;
    static UIBackgroundConfiguration.clear()(v67);
    v69 = v86;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v41, v57);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v41, v68, v57);
  }
  v70 = ModernShelf.ItemKind.rawValue.getter(v1[v60]);
  v72 = v71;
  v74 = ModernShelf.ItemKind.rawValue.getter(13);
  v75 = v73;
  if (v70 == v74 && v72 == v73)
  {
    swift_bridgeObjectRelease_n(v72, 2);
LABEL_24:
    UIBackgroundConfiguration.cornerRadius.setter(v76, 7.0);
    UIBackgroundConfiguration.backgroundInsets.setter(v79, -8.0, -8.0, -8.0, -8.0);
    goto LABEL_25;
  }
  v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v72, v74, v73, 0);
  swift_bridgeObjectRelease(v72);
  v78 = swift_bridgeObjectRelease(v75);
  if ((v77 & 1) != 0)
    goto LABEL_24;
LABEL_25:
  v80 = v86;
  v81 = v84;
  (*(void (**)(char *, char *, uint64_t, __n128))(v86 + 16))(v84, v41, v57, v78);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v81, 0, 1, v57);
  UICollectionViewCell.backgroundConfiguration.setter(v81);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v41, v57);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v12, v90);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v19, v23);
}

uint64_t sub_121750()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t result;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v30[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7810);
  __chkstk_darwin(v2);
  v4 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Information(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v30[-v10 - 8];
  v12 = sub_121E60(v0);
  sub_121A04(v12);
  v13 = (uint64_t)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info];
  swift_beginAccess(v13, v30, 0, 0);
  sub_122CE4(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    result = sub_D1D4((uint64_t)v4, &qword_3D7810);
    v15 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron];
    v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron] = 0;
    if ((v15 & 1) == 0)
      return result;
    goto LABEL_9;
  }
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  Information.subtitle.getter(v16);
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v17);
  v20 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v8, v11, v5, v19);
  if (v18)
    LOBYTE(v18) = Information.expanded.getter(v20) ^ 1;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  result = ((uint64_t (*)(char *, uint64_t))v21)(v11, v5);
  v22 = v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron];
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron] = v18 & 1;
  if ((v18 & 1) != v22)
  {
    if ((v18 & 1) != 0)
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5480);
      v24 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v25 = *(_QWORD *)(v24 + 72);
      v26 = *(unsigned __int8 *)(v24 + 80);
      v27 = (v26 + 32) & ~v26;
      v28 = (_QWORD *)swift_allocObject(v23, v27 + v25, v26 | 7);
      *((_OWORD *)v28 + 1) = xmmword_2F03C0;
      sub_121BF4((uint64_t)v28 + v27);
      return UICollectionViewListCell.accessories.setter(v28);
    }
LABEL_9:
    v28 = _swiftEmptyArrayStorage;
    return UICollectionViewListCell.accessories.setter(v28);
  }
  return result;
}

void (*sub_12198C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info, a1, 33, 0);
  return sub_1219D4;
}

void sub_1219D4(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_121078();
}

void sub_121A04(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = a1 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.DisplayedState(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowChevron);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowChevron) = a1;
  if (v17 != v3)
  {
    if ((a1 & 1) != 0)
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5480);
      v19 = type metadata accessor for UICellAccessory(0);
      v20 = (_QWORD *)swift_allocObject(v18, ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) | 7);
      *((_OWORD *)v20 + 1) = xmmword_2F03C0;
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for UICellAccessory.DisplayedState.always(_:), v13);
      v21 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
      UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v7, 0);
      static UICellAccessory.disclosureIndicator(displayed:options:)(v16, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      v20 = _swiftEmptyArrayStorage;
    }
    UICollectionViewListCell.accessories.setter(v20);
  }
}

uint64_t sub_121BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  uint64_t (**v17)();
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD v24[2];

  v24[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D5468);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellAccessory.Placement(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v7);
  v10 = *(_QWORD *)(v24[0] - 8);
  __chkstk_darwin(v24[0]);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v14);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v15, "setTintColor:", v16);

  v17 = (uint64_t (**)())&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_3D7818) + 48)];
  v18 = enum case for UICellAccessory.DisplayedState.always(_:);
  v20 = type metadata accessor for UICellAccessory.DisplayedState(0, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v9, v18, v20);
  *v17 = static CalculatorConstructionSet.sharedIfLoaded.getter;
  v17[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for UICellAccessory.Placement.trailing(_:), v5);
  v21 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  v22 = v15;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)(v12);

  return (*(uint64_t (**)(char *, _QWORD))(v10 + 8))(v12, v24[0]);
}

BOOL sub_121E60(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  _BOOL8 result;
  char *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int8 v23;
  int v24;
  uint64_t v25;
  unsigned __int8 v26;
  int v27;
  id v28;
  char *v29;
  uint64_t v30;
  char v31[24];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v2 = type metadata accessor for Information(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = ModernShelf.ItemKind.rawValue.getter(a1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_kind]);
  v8 = v7;
  v9 = ModernShelf.ItemKind.rawValue.getter(15);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
  v15 = (char *)&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info];
  v16 = swift_beginAccess(&a1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info], v31, 0, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v15, 1, v2, v16))
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  else
  {
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v5, v15, v2);
    Information.clickAction.getter(&v32, v17);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (*((_QWORD *)&v33 + 1))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D62A0);
      v19 = type metadata accessor for Action(0);
      if ((swift_dynamicCast(&v30, &v32, v18, v19, 6) & 1) != 0)
      {
        v20 = v30;
        v21 = Action.presentationStyle.getter();
        v22 = static Link.Presentation.hasDisclosureIndicator.getter();
        v23 = v22;
        v24 = Link.Presentation.init(rawValue:)(v22);
        if (Link.Presentation.init(rawValue:)(v24 & v21) == v23)
        {
          swift_release(v20);
          return 1;
        }
        v25 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
        v26 = v25;
        v27 = Link.Presentation.init(rawValue:)(v25);
        if (Link.Presentation.init(rawValue:)(v27 & v21) == v26)
        {
          v28 = objc_msgSend(a1, "traitCollection");
          v29 = (char *)objc_msgSend(v28, "horizontalSizeClass");

          swift_release(v20);
          return v29 == (_BYTE *)&dword_0 + 1;
        }
        swift_release(v20);
      }
      return 0;
    }
  }
  sub_D1D4((uint64_t)&v32, (uint64_t *)&unk_3D30D0);
  return 0;
}

uint64_t sub_122120@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _BYTE v24[24];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28[2];

  v2 = v1;
  v4 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Information(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info;
  v12 = swift_beginAccess(v2 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info, v24, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v11, 1, v7, v12))
  {
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
  }
  else
  {
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
    Information.clickAction.getter(&v25, v22);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((_QWORD *)&v26 + 1))
    {
      sub_1B738(&v25, (uint64_t)v28);
      return sub_1B738(v28, (uint64_t)a1);
    }
  }
  sub_D1D4((uint64_t)&v25, (uint64_t *)&unk_3D30D0);
  v13 = swift_allocObject(&unk_3839C8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = swift_retain(v13);
  v15 = static Link.Presentation.textFollowsTintColor.getter(v14);
  v16 = Link.Presentation.init(rawValue:)(0);
  v17 = Link.Presentation.init(rawValue:)(v16);
  v18 = Link.Presentation.init(rawValue:)(v17 & v15);
  if (v18 != v15)
  {
    v18 = Link.Presentation.init(rawValue:)(v16 | v15);
    v16 = v18;
  }
  static ActionMetrics.notInstrumented.getter(v18);
  v19 = type metadata accessor for ClosureAction(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = ClosureAction.init(title:presentationStyle:actionMetrics:closure:)(0, 0, v16, v6, sub_122D50, v13);
  swift_release(v13);
  a1[3] = v19;
  result = sub_89A0((unint64_t *)&qword_3D3DB0, (uint64_t (*)(uint64_t))&type metadata accessor for ClosureAction, (uint64_t)&protocol conformance descriptor for Action);
  a1[4] = result;
  *a1 = v20;
  return result;
}

void sub_122354(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void (*v4)(uint64_t, char);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(void);
  uint64_t v11;
  _BYTE v12[32];
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_12198C((uint64_t)v12);
    v6 = v5;
    v7 = type metadata accessor for Information(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      Information.expanded.setter(1);
    v4((uint64_t)v12, 0);

  }
  swift_beginAccess(v1, v12, 0, 0);
  v8 = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (v8)
  {
    v9 = v8;
    v10 = *(void (**)(void))&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload];
    if (v10)
    {
      v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload + 8];
      sub_2C690(*(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload], v11);

      v10();
      sub_1D618((uint64_t)v10, v11);
    }
    else
    {

    }
  }
}

id sub_122544(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_kind] = 13;
  v4 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info];
  v5 = type metadata accessor for Information(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowChevron] = 0;
  v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_shouldShowDownwardChevron] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_objectGraph] = 0;
  v6 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload];
  *v6 = 0;
  v6[1] = 0;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

uint64_t sub_12268C()
{
  return type metadata accessor for InformationCell(0);
}

uint64_t type metadata accessor for InformationCell(uint64_t a1)
{
  uint64_t result;

  result = qword_3D77D0;
  if (!qword_3D77D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InformationCell);
  return result;
}

void sub_1226D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_2F81F8;
  sub_122768(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_2F8210;
    v4[3] = &unk_2F8210;
    v4[4] = &unk_2F8228;
    v4[5] = &unk_2F8240;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_122768(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3D77E0)
  {
    v2 = type metadata accessor for Information(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3D77E0);
  }
}

uint64_t sub_1227BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7810);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for Information(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info;
  swift_beginAccess(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_info, v11, 33, 0);
  sub_122C9C((uint64_t)v5, v8);
  swift_endAccess(v11);
  sub_121078();
  return sub_D1D4((uint64_t)v5, &qword_3D7810);
}

uint64_t sub_1228AC()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_objectGraph));
}

uint64_t sub_1228BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_objectGraph);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_objectGraph) = a1;
  swift_release(v3);
  v4 = swift_retain(a1);
  result = ModernShelf.ItemPresentation.itemKind.getter(v4);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_kind) = result;
  return result;
}

uint64_t sub_122914(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = sub_89A0(&qword_3D7820, type metadata accessor for InformationCell, (uint64_t)&unk_2F8408);
  return TypedShelfUIKitCell.apply(model:)(a1, ObjectType, v3);
}

double sub_12296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v5 = (_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews15InformationCell_reload + 8);
  *v5 = a2;
  v5[1] = a3;
  sub_1D618(v6, v7);
  *(_QWORD *)&result = swift_retain(a3).n128_u64[0];
  return result;
}

uint64_t sub_1229AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_89A0(&qword_3D7820, type metadata accessor for InformationCell, (uint64_t)&unk_2F8408);
  return static TypedShelfUIKitCell.modelType.getter(v0, v1);
}

uint64_t sub_1229E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for ShelfCellListSeparatorMode.Placement(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfCellListSeparatorMode.Layout(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ShelfCellListSeparatorMode(0);
  __swift_allocate_value_buffer(v8, qword_3FAE10);
  __swift_project_value_buffer(v8, (uint64_t)qword_3FAE10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ShelfCellListSeparatorMode.Layout.marginToMargin(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ShelfCellListSeparatorMode.Placement.default(_:), v0);
  return ShelfCellListSeparatorMode.init(placement:layout:)(v3, v7);
}

uint64_t sub_122AF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3CF3F0 != -1)
    swift_once(&qword_3CF3F0, sub_1229E0);
  v2 = type metadata accessor for ShelfCellListSeparatorMode(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_3FAE10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

BOOL sub_122B68(uint64_t a1)
{
  return (ModernShelf.ItemPresentation.itemKind.getter(a1) & 0xFE) == 14;
}

uint64_t sub_122B94()
{
  return sub_89A0(&qword_3D77E8, type metadata accessor for InformationCell, (uint64_t)&unk_2F8288);
}

uint64_t sub_122BC0()
{
  return sub_89A0(&qword_3D77F0, type metadata accessor for InformationCell, (uint64_t)&unk_2F82E0);
}

uint64_t sub_122BEC()
{
  return sub_89A0(&qword_3D5CB0, type metadata accessor for InformationCell, (uint64_t)&unk_2F8368);
}

uint64_t sub_122C18()
{
  return sub_89A0(&qword_3D77F8, type metadata accessor for InformationCell, (uint64_t)&unk_2F8340);
}

uint64_t sub_122C44()
{
  return sub_89A0(&qword_3D7800, type metadata accessor for InformationCell, (uint64_t)&unk_2F8398);
}

uint64_t sub_122C70()
{
  return sub_89A0(&qword_3D7808, (uint64_t (*)(uint64_t))&type metadata accessor for Information, (uint64_t)&protocol conformance descriptor for Information);
}

uint64_t sub_122C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_122CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_122D2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_122D50()
{
  uint64_t v0;

  sub_122354(v0);
}

id sub_122D58()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;

  v1 = v0;
  v2 = type metadata accessor for Glyph(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v13 - v6;
  v8 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_style;
  if ((v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_style] & 1) != 0)
    v15 = 0x4024000000000000;
  else
    v15 = 0x4038000000000000;
  v14 = 0x4024000000000000;
  static Platform.preferred<A>(iOS:mac:)(&v16, &v15, &v14, &type metadata for CGFloat);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView], "setLayoutMargins:", UIEdgeInsets.init(topBottom:sides:)(0.0, v16));
  v9 = sub_1FEB8();
  v10 = static UITraitCollection.interfaceIdiomIsMac.getter(v9);
  v11 = sub_122F38();
  if ((v10 & 1) != 0)
  {
    static Glyph.HeaderButtons.xmarkMac.getter();
    v5 = v7;
  }
  else if ((v1[v8] & 1) != 0)
  {
    static Glyph.HeaderButtons.xmarkiPadSheet.getter();
  }
  else
  {
    static Glyph.HeaderButtons.xmark.getter();
  }
  sub_1E2B60(v5);

  return objc_msgSend(v1, "invalidateIntrinsicContentSize");
}

void sub_122EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void))(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler);
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler + 8);
    sub_2C690((uint64_t)v5, v6);

    if (v5)
    {
      v5();
      sub_1D618((uint64_t)v5, v6);
    }
  }
}

id sub_122F38()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar____lazy_storage___closeButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar____lazy_storage___closeButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar____lazy_storage___closeButton);
  }
  else
  {
    v4 = sub_122F94();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_122F94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v28[4];
  char v29;
  Swift::String v30;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v0);
  v2 = (_QWORD *)((char *)&v28[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1FEB8();
  if ((static UITraitCollection.interfaceIdiomIsMac.getter(v6) & 1) != 0)
    static Glyph.HeaderButtons.xmarkMac.getter();
  else
    static Glyph.HeaderButtons.xmark.getter();
  *v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v7 = enum case for Glyph.Color.monochrome(_:);
  v8 = type metadata accessor for Glyph.Color(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  v10 = objc_allocWithZone((Class)type metadata accessor for GlyphButton(0));
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v5, (uint64_t)v2, 0, 0, 1, 0.0, 0.0, 0.0, 0.0);
  v12 = v11;
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v12;
  v15 = objc_msgSend(v13, "mainBundle");
  v30._object = (void *)0xEC0000006E6F7474;
  v16._countAndFlagsBits = 0x45534F4C435F5841;
  v16._object = (void *)0xEF4E4F545455425FLL;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0x75422065736F6C43;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v30)._object;

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityLabel:", v19, swift_bridgeObjectRelease(object).n128_f64[0]);

  v20 = v14;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityIdentifier:", v21);

  v22 = v20;
  v28[0] = UIEdgeInsets.init(topBottom:sides:)(-10.0, -10.0);
  v28[1] = v23;
  v28[2] = v24;
  v28[3] = v25;
  v29 = 0;
  sub_123804((uint64_t)v28, (uint64_t)v22 + OBJC_IVAR____TtC23ShelfKitCollectionViews21ButtonWithTouchInsets_touchInsets);
  type metadata accessor for DebugInsetsView();
  sub_2D1DCC((uint64_t)v22, (uint64_t)v28);

  return v22;
}

char *sub_123268(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  _BYTE *v12;
  id v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Swift::OpaquePointer v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  double leading;
  double bottom;
  double trailing;
  char *v31;
  id v32;
  char *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  objc_super v40;

  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_style] = 0;
  v9 = &v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler];
  *v9 = 0;
  v9[1] = 0;
  v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_lightContent] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar____lazy_storage___closeButton] = 0;
  v10 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView;
  v11 = objc_allocWithZone((Class)UIStackView);
  v12 = v4;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setAxis:", 0);
  objc_msgSend(v13, "setAlignment:", 3);
  objc_msgSend(v13, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v13, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v4[v10] = v13;

  v40.receiver = v12;
  v40.super_class = (Class)type metadata accessor for UpsellTitleBar();
  v14 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  v15 = objc_msgSend(v14, "traitCollection");
  v16 = (char *)objc_msgSend(v15, "userInterfaceIdiom");

  if (v16 == (_BYTE *)&dword_4 + 1)
  {
    v17 = objc_msgSend(v14, "traitCollection");
    v18 = objc_msgSend(v17, "layoutDirection");

    if (v18)
      v19 = 3;
    else
      v19 = 4;
    objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView], "setSemanticContentAttribute:", v19);
  }
  objc_msgSend(v14, "setPreservesSuperviewLayoutMargins:", 1);
  v20 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView;
  v21 = *(void **)&v14[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
  v23._rawValue = (void *)swift_allocObject(v22, 48, 7);
  *((_OWORD *)v23._rawValue + 1) = xmmword_2EFC90;
  v24 = objc_allocWithZone((Class)UIView);
  v25 = v21;
  *((_QWORD *)v23._rawValue + 4) = objc_msgSend(v24, "init");
  v26 = sub_122F38();
  *((_QWORD *)v23._rawValue + 5) = v26;
  specialized Array._endMutation()(v26);
  UIStackView.addArrangedSubviews(_:)(v23);

  swift_bridgeObjectRelease(v23._rawValue);
  v27 = *(void **)&v14[v20];
  leading = NSDirectionalEdgeInsetsZero.leading;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v31 = v14;
  v32 = v27;
  UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(v32, 0, NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);

  v33 = (char *)sub_122F38();
  v34 = *(id *)&v33[OBJC_IVAR____TtC23ShelfKitCollectionViews11GlyphButton_glyphView];

  v35 = objc_msgSend(v34, "trailingAnchor");
  v36 = objc_msgSend(*(id *)&v14[v20], "layoutMarginsGuide");
  v37 = objc_msgSend(v36, "trailingAnchor");

  v38 = objc_msgSend(v35, "constraintEqualToAnchor:", v37);
  objc_msgSend(v38, "setActive:", 1);

  return v31;
}

id sub_123654()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UpsellTitleBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UpsellTitleBar()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews14UpsellTitleBar);
}

uint64_t storeEnumTagSinglePayload for UpsellTitleBar.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_12373C + 4 * byte_2F8455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_123770 + 4 * byte_2F8450[v4]))();
}

uint64_t sub_123770(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_123778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x123780);
  return result;
}

uint64_t sub_12378C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x123794);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_123798(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1237A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpsellTitleBar.Style()
{
  return &type metadata for UpsellTitleBar.Style;
}

unint64_t sub_1237C0()
{
  unint64_t result;

  result = qword_3D7878;
  if (!qword_3D7878)
  {
    result = swift_getWitnessTable(&unk_2F84D0, &type metadata for UpsellTitleBar.Style);
    atomic_store(result, (unint64_t *)&qword_3D7878);
  }
  return result;
}

uint64_t sub_123804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_12384C()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;

  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_style] = 0;
  v1 = &v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_dismissHandler];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_lightContent] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar____lazy_storage___closeButton] = 0;
  v2 = OBJC_IVAR____TtC23ShelfKitCollectionViews14UpsellTitleBar_containerStackView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setAxis:", 0);
  objc_msgSend(v3, "setAlignment:", 3);
  objc_msgSend(v3, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v3, "setLayoutMarginsRelativeArrangement:", 1);
  *(_QWORD *)&v0[v2] = v3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000000307D10, "ShelfKitCollectionViews/UpsellTitleBar.swift", 44, 2, 101, 0);
  __break(1u);
}

uint64_t sub_12396C(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[5];

  v51 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D4C90);
  __chkstk_darwin(v5);
  v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Glyph(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActionMetrics(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowDestinationPageHeader(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FlowPresentationContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for FlowDestination(0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, __n128))(v25 + 104))(v24, enum case for FlowDestination.prototypeUpNextSettings(_:), v22);
  v26.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for FlowPresentationContext.presentPopover(_:), v17);
  v27 = static Link.Presentation.textFollowsTintColor.getter(v26);
  v28 = static Link.Presentation.hasDisclosureIndicatorCompactOnly.getter();
  v29 = Link.Presentation.init(rawValue:)(0);
  v30 = Link.Presentation.init(rawValue:)(v29);
  if (Link.Presentation.init(rawValue:)(v30 & v27) != v27)
    v29 = Link.Presentation.init(rawValue:)(v29 | v27);
  v31 = Link.Presentation.init(rawValue:)(v29);
  if (Link.Presentation.init(rawValue:)(v31 & v28) != v28)
    v29 = Link.Presentation.init(rawValue:)(v29 | v28);
  v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FlowDestinationPageHeader.standard(_:), v13);
  static ActionMetrics.notInstrumented.getter(v32);
  v34 = type metadata accessor for FlowAction(0, v33);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v24, 0, 0, 0, 0, v20, 0, v29, v16, v12);
  v37 = static Link.Presentation.textFollowsTintColor.getter(v36);
  v38 = Link.Presentation.init(rawValue:)(0);
  v39 = Link.Presentation.init(rawValue:)(v38);
  if (Link.Presentation.init(rawValue:)(v39 & v37) != v37)
    v38 = Link.Presentation.init(rawValue:)(v38 | v37);
  v40 = type metadata accessor for PopoverAction(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v41 = PopoverAction.init(title:presentationStyle:flowAction:)(0, 0, v38, v35);
  LOBYTE(v48) = 0;
  Glyph.init(name:pointSize:weight:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(1918985575, 0xE400000000000000, 0x4030000000000000, 0, 7, 2, 0, 0, v48);
  v42 = type metadata accessor for Glyph.Color(0);
  v43 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v50, 1, 1, v42);
  v44 = objc_allocWithZone((Class)type metadata accessor for GlyphButton(0));
  GlyphButton.init(frame:glyph:color:style:layout:autolayoutMode:)((uint64_t)v9, v43, 2, 0, 1, 0.0, 0.0, a2, a3);
  v46 = v45;
  v52[3] = v40;
  v52[4] = sub_123D5C();
  v52[0] = v41;
  swift_retain(v41);
  UIControl.setAction(_:for:asPartOf:)(v52, 0x2000, v51);
  swift_release(v41);
  __swift_destroy_boxed_opaque_existential_0(v52);
  return v46;
}

unint64_t sub_123D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7888;
  if (!qword_3D7888)
  {
    v1 = type metadata accessor for PopoverAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_3D7888);
  }
  return result;
}

void sub_123DA4(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  __int128 v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  objc_super v36;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissTapGestureRecognizer] = 0;
  v7 = &v3[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_scrollDismissInitialTranslationY] = 0;
  v3[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_isScrollDismissActive] = 0;
  v8 = v3;
  v9 = objc_msgSend(a1, "traitCollection");
  v10 = sub_125A30();

  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView] = v10;
  v11 = type metadata accessor for ShadowView();
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");
  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_presentedContainerView] = v12;

  v36.receiver = v8;
  v36.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v36, "initWithPresentedViewController:presentingViewController:", a1, a2);
  v14 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v15 = (char *)v13;
  v16 = objc_msgSend(v14, "initWithTarget:action:", v15, "dismissTapDidChange:");
  v17 = OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissTapGestureRecognizer;
  v18 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissTapGestureRecognizer];
  *(_QWORD *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissTapGestureRecognizer] = v16;

  if (*(_QWORD *)&v15[v17])
  {
    objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView], "addGestureRecognizer:");
    v19 = OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView;
    v20 = qword_3CFA80;
    v21 = (char *)*(id *)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView];
    if (v20 != -1)
      swift_once(&qword_3CFA80, sub_1D655C);
    v22 = (void *)qword_3FCED8;
    v23 = qword_3FCEF0;
    v24 = &v21[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v25 = *(void **)&v21[OBJC_IVAR____TtC23ShelfKitCollectionViews10ShadowView_shadow];
    v26 = unk_3FCEE0;
    *(_QWORD *)v24 = qword_3FCED8;
    *(_OWORD *)(v24 + 8) = v26;
    *((_QWORD *)v24 + 3) = v23;
    v27 = v22;

    sub_CC328();
    v28 = objc_msgSend(*(id *)&v15[v19], "layer");
    objc_msgSend(v28, "setMaskedCorners:", 3);

    v29 = *(void **)&v15[v19];
    objc_msgSend(v29, "_setContinuousCornerRadius:", 14.0);
    objc_msgSend(v29, "setAutoresizingMask:", 18);
    v30 = OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_presentedContainerView;
    v31 = *(void **)&v15[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_presentedContainerView];
    objc_msgSend(v31, "setClipsToBounds:", 0);
    v32 = v29;
    objc_msgSend(v31, "bounds");
    objc_msgSend(v32, "setFrame:");

    v33 = *(void **)&v15[v19];
    v34 = *(id *)&v15[v30];
    v35 = v33;
    objc_msgSend(v34, "addSubview:", v35);

  }
  else
  {
    __break(1u);
  }
}

void sub_124184()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  double v8;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v1 = v0;
  v2 = objc_msgSend(v0, "containerView");
  if (!v2)
    return;
  v3 = v2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = (char *)objc_msgSend(v4, "horizontalSizeClass");

  v6 = objc_msgSend(v1, "presentingViewController");
  v7 = v6;
  if (v5 != (_BYTE *)&dword_0 + 2)
  {
    v14 = objc_msgSend(v6, "view");

    if (!v14)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v14, "bounds");
LABEL_10:

    return;
  }
  v8 = UIViewController.presentedArticleWidth.getter();

  objc_msgSend(v3, "bounds");
  x = v23.origin.x;
  y = v23.origin.y;
  width = v23.size.width;
  height = v23.size.height;
  v21 = CGRectGetHeight(v23);
  v24.origin.x = x;
  v24.origin.y = y;
  v24.size.width = width;
  v24.size.height = height;
  v13 = CGRectGetMidX(v24) + v8 * -0.5;
  v25.origin.x = x;
  v25.origin.y = y;
  v25.size.width = width;
  v25.size.height = height;
  CGRectGetMinY(v25);
  v26.origin.x = x;
  v26.origin.y = y;
  v26.size.width = width;
  v26.size.height = height;
  CGRectGetHeight(v26);
  UIEdgeInsetsInsetRect_0(v13);
  v14 = objc_msgSend(v1, "presentedViewController");
  v15 = type metadata accessor for ModelViewOverflowViewController();
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
    goto LABEL_10;
  v17 = v16;
  v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_modelView + 8);
  swift_getObjectType();
  v22 = 1;
  (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t, double, double))(v18 + 32))(v17 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model, v17, &protocol witness table for UIViewController, &v22, 1, 1, v8, v21);
  if (v19 < v21)
  {
    v27.origin.x = x;
    v20 = v19;
    v27.origin.y = y;
    v27.size.width = width;
    v27.size.height = height;
    CGRectGetMidX(v27);
    v28.origin.x = x;
    v28.origin.y = y;
    v28.size.width = width;
    v28.size.height = height;
    floor(CGRectGetMidY(v28) - v20 * 0.5);
    v29.origin.x = x;
    v29.origin.y = y;
    v29.size.width = width;
    v29.size.height = height;
    CGRectGetHeight(v29);
  }

}

void sub_124490(uint64_t a1, void *a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "willTransitionToTraitCollection:withTransitionCoordinator:", a1, a2);
  v5 = objc_msgSend(v2, "containerView");
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject(&unk_383CD8, 32, 7);
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v6;
    v12[4] = sub_125CD0;
    v13 = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_277A4C;
    v12[3] = &block_descriptor_19;
    v8 = _Block_copy(v12);
    v9 = v13;
    v10 = v2;
    v11 = v6;
    objc_msgSend(a2, "animateAlongsideTransition:completion:", v8, 0, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
}

void sub_1245A4(int a1, char *a2, void *a3)
{
  id v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a2, "presentedViewController");
  v10 = objc_msgSend(v5, "view");

  v6 = objc_msgSend(a2, "traitCollection");
  v7 = (char *)objc_msgSend(v6, "horizontalSizeClass");

  if (v7 == (_BYTE *)&dword_0 + 2)
  {
    if (v10)
    {
      v8 = *(void **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView];
      v9 = v10;
      objc_msgSend(v8, "_continuousCornerRadius");
      objc_msgSend(v9, "_setContinuousCornerRadius:");

    }
  }
  else if (v10)
  {
    objc_msgSend(v10, "_setContinuousCornerRadius:", 0.0);
  }
  objc_msgSend(a3, "bounds");
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView], "setFrame:");

}

void sub_124808()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = objc_msgSend(v0, "containerView");
  if (v1)
  {
    v18 = v1;
    objc_msgSend(v1, "bounds");
    v2 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView];
    objc_msgSend(v2, "setFrame:");
    objc_msgSend(v18, "addSubview:", v2);
    v3 = objc_msgSend(v0, "presentedViewController");
    v4 = objc_msgSend(v3, "view");

    if (v4)
    {
      objc_msgSend(v4, "setClipsToBounds:", 1);
      objc_msgSend(v4, "setAutoresizingMask:", 18);
      v5 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_presentedContainerView];
      objc_msgSend(v5, "bounds");
      objc_msgSend(v4, "setFrame:");
      v6 = objc_msgSend(v4, "layer");
      v7 = *(void **)&v0[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView];
      v8 = objc_msgSend(v7, "layer");
      v9 = objc_msgSend(v8, "maskedCorners");

      objc_msgSend(v6, "setMaskedCorners:", v9);
      objc_msgSend(v7, "_cornerRadius");
      objc_msgSend(v4, "_setCornerRadius:");
      objc_msgSend(v5, "addSubview:", v4);
      v10 = objc_msgSend(v0, "presentedViewController");
      v11 = objc_msgSend(v10, "contentScrollView");

      sub_125BB8((uint64_t)v11);
    }
    v12 = objc_msgSend(v0, "presentingViewController");
    v13 = objc_msgSend(v12, "transitionCoordinator");

    objc_msgSend(v2, "setAlpha:", 0.0);
    if (v13)
    {
      v14 = swift_allocObject(&unk_383C88, 24, 7);
      *(_QWORD *)(v14 + 16) = v0;
      aBlock[4] = sub_125A28;
      v20 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_277A4C;
      aBlock[3] = &block_descriptor_13_1;
      v15 = _Block_copy(aBlock);
      v16 = v20;
      swift_unknownObjectRetain(v13);
      v17 = v0;
      objc_msgSend(v13, "animateAlongsideTransition:completion:", v15, 0, swift_release(v16).n128_f64[0]);

      swift_unknownObjectRelease(v13);
      _Block_release(v15);
      swift_unknownObjectRelease(v13);
    }
    else
    {

    }
  }
}

void sub_124B2C(uint64_t a1, char *a2)
{
  id v3;
  char *v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView], "setAlpha:", 1.0);
  v3 = objc_msgSend(a2, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (_BYTE *)&dword_0 + 1)
  {
    v5 = objc_msgSend(a2, "presentedViewController");
    v6 = objc_msgSend(v5, "view");

    if (v6)
    {
      objc_msgSend(v6, "_setCornerRadius:", 0.0);

    }
  }
}

void sub_124C4C(char a1)
{
  char *v1;
  id v2;
  id v3;
  id v4;

  if ((a1 & 1) == 0)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView], "removeFromSuperview");
    v2 = objc_msgSend(v1, "presentedViewController");
    v4 = objc_msgSend(v2, "view");

    if (v4)
    {
      objc_msgSend(v4, "setClipsToBounds:", 0);
      v3 = objc_msgSend(v4, "layer");
      objc_msgSend(v3, "setMaskedCorners:", 15);

      objc_msgSend(v4, "_setCornerRadius:", 0.0);
    }
  }
}

double sub_124D74()
{
  void *v0;
  id v1;
  id v2;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend(v0, "presentingViewController");
  v2 = objc_msgSend(v1, "transitionCoordinator");

  if (v2)
  {
    v4 = swift_allocObject(&unk_383C38, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v8[4] = sub_125A20;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_277A4C;
    v8[3] = &block_descriptor_7_0;
    v5 = _Block_copy(v8);
    v6 = v9;
    swift_unknownObjectRetain(v2);
    v7 = v0;
    objc_msgSend(v2, "animateAlongsideTransition:completion:", v5, 0, swift_release(v6).n128_f64[0]);
    swift_unknownObjectRelease(v2);
    _Block_release(v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void sub_124E7C(uint64_t a1, char *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_overlayView], "setAlpha:", 0.0);
  v3 = *(void **)&a2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView];
  objc_msgSend(v3, "setAlpha:", 0.0);
  v4 = objc_msgSend(a2, "presentedViewController");
  v5 = objc_msgSend(v4, "view");

  if (v5)
  {
    objc_msgSend(v3, "_cornerRadius");
    objc_msgSend(v5, "_setCornerRadius:");

  }
  v6 = objc_msgSend(a2, "presentedViewController");
  v7 = objc_msgSend(v6, "view");

  if (v7)
  {
    v8 = objc_msgSend(v7, "layer");

    objc_msgSend(v8, "setMaskedCorners:", 15);
  }
  v9 = objc_msgSend(a2, "presentedViewController");
  objc_msgSend(v9, "setNeedsStatusBarAppearanceUpdate");

}

uint64_t sub_125030()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  void **v3;
  __int128 v5[2];
  uint64_t v6;
  id v7;
  _QWORD v8[5];

  v7 = objc_msgSend(v0, "presentedViewController");
  v1 = sub_10EDAC();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7960);
  if ((swift_dynamicCast(v5, &v7, v1, v2, 6) & 1) != 0)
  {
    sub_1B738(v5, (uint64_t)v8);
    v3 = (void **)__swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_12582C((uint64_t)*v3 + OBJC_IVAR____TtC23ShelfKitCollectionViews31ModelViewOverflowViewController_model, 0, 1, *v3);
    return __swift_destroy_boxed_opaque_existential_0(v8);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    return sub_D1D4((uint64_t)v5, (uint64_t *)&unk_3D7968);
  }
}

void sub_125198(void *a1)
{
  char *v1;
  _BYTE *v2;
  uint64_t Strong;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  id v42;
  __int128 aBlock;
  __int128 v44;
  uint64_t (*v45)();
  _QWORD *v46;
  _BYTE v47[24];
  _BYTE v48[24];
  CGRect v49;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView]);
  if (Strong)
  {
    v42 = (id)Strong;
    v5 = OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_isScrollDismissActive;
    if (v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_isScrollDismissActive] == 1)
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_presentedContainerView], "frame");
      v6 = CGRectGetHeight(v49) * 0.14;
      objc_msgSend(a1, "translationInView:", 0);
      v8 = v7
         - *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_scrollDismissInitialTranslationY];
      if (v8 >= v6)
        v9 = v6;
      else
        v9 = v7
           - *(double *)&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_scrollDismissInitialTranslationY];
      v10 = 0.0;
      if (v6 <= 0.0)
        v10 = v6;
      if (v8 < 0.0)
        v11 = v10;
      else
        v11 = v9;
      v12 = v11 / v6;
      switch((unint64_t)objc_msgSend(a1, "state"))
      {
        case 0uLL:
        case 4uLL:
        case 5uLL:
          goto LABEL_12;
        case 1uLL:
          goto LABEL_27;
        case 2uLL:
          v38 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal];
          swift_beginAccess(&v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal], &aBlock, 0, 0);
          v39 = *((_QWORD *)v38 + 3);
          if (v39)
          {
            v40 = __swift_project_boxed_opaque_existential_1(v38, v39);
            sub_100DFC(*v40, v40[1], v12, *((double *)v40 + 2));
          }

          return;
        case 3uLL:
          if (v12 == 1.0)
          {
            v41 = objc_msgSend(v1, "presentedViewController");
            objc_msgSend(v41, "dismissViewControllerAnimated:completion:", 1, 0);

            goto LABEL_27;
          }
LABEL_12:
          v13 = &v1[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal];
          swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal], v48, 0, 0);
          v14 = *((_QWORD *)v13 + 3);
          if (v14)
          {
            v15 = __swift_project_boxed_opaque_existential_1(v13, v14);
            v16 = *v15;
            v17 = v15[1];
            v18 = v15[2];
            v19 = (void *)objc_opt_self(UIView);
            v20 = (_QWORD *)swift_allocObject(&unk_383BE8, 40, 7);
            v20[2] = v16;
            v20[3] = v17;
            v20[4] = v18;
            v45 = sub_1259D8;
            v46 = v20;
            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
            *((_QWORD *)&aBlock + 1) = 1107296256;
            *(_QWORD *)&v44 = sub_24360;
            *((_QWORD *)&v44 + 1) = &block_descriptor_22;
            v21 = _Block_copy(&aBlock);
            v22 = v46;
            swift_bridgeObjectRetain(v16);
            swift_bridgeObjectRetain(v17);
            swift_release(v22);
            objc_msgSend(v19, "animateWithDuration:animations:", v21, 0.15);
            _Block_release(v21);
          }

          v45 = 0;
          aBlock = 0u;
          v44 = 0u;
          swift_beginAccess(v13, v47, 33, 0);
          sub_125964((uint64_t)&aBlock, (uint64_t)v13);
          swift_endAccess(v47);
          v2[v5] = 0;
          break;
        default:
          objc_msgSend(a1, "state");
          goto LABEL_27;
      }
    }
    else if (objc_msgSend(a1, "state") == (char *)&dword_0 + 1
           && (v23 = objc_msgSend(v1, "traitCollection"),
               v24 = (char *)objc_msgSend(v23, "horizontalSizeClass"),
               v23,
               v24 == (_BYTE *)&dword_0 + 2)
           && (objc_msgSend(v42, "contentOffset"), v26 = v25,
                                                   objc_msgSend(v42, "adjustedContentInset"),
                                                   v26 + v27 <= 0.0))
    {
      objc_msgSend(v42, "adjustedContentInset");
      objc_msgSend(v42, "contentOffset");
      objc_msgSend(v42, "setContentOffset:");
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7980);
      v29 = swift_allocObject(v28, 48, 7);
      *(_OWORD *)(v29 + 16) = xmmword_2EFC90;
      v30 = objc_msgSend(v2, "presentedViewController");
      v31 = objc_msgSend(v30, "view");

      if (!v31)
      {
        __break(1u);
        JUMPOUT(0x125674);
      }
      v33 = *(void **)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_shadowView];
      *(_QWORD *)(v29 + 32) = v31;
      *(_QWORD *)(v29 + 40) = v33;
      *(_QWORD *)&aBlock = v29;
      specialized Array._endMutation()(v32);
      v45 = (uint64_t (*)())&off_382070;
      *((_QWORD *)&aBlock + 1) = _swiftEmptyArrayStorage;
      *(_QWORD *)&v44 = 0x3FB1EB851EB851ECLL;
      *((_QWORD *)&v44 + 1) = &type metadata for PullDownInteractiveDismissal;
      v34 = (uint64_t)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal];
      swift_beginAccess(&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_interactiveDismissal], v48, 33, 0);
      v35 = v33;
      sub_125964((uint64_t)&aBlock, v34);
      objc_msgSend(a1, "translationInView:", 0, swift_endAccess(v48).n128_f64[0]);
      v37 = v36;

      *(_QWORD *)&v2[OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_scrollDismissInitialTranslationY] = v37;
      v2[v5] = 1;
    }
    else
    {
LABEL_27:

    }
  }
}

uint64_t type metadata accessor for ModelViewOverflowPresentationController()
{
  return objc_opt_self(_TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController);
}

void sub_12582C(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _BYTE v15[40];

  sub_1D5D4(a1, (uint64_t)v15);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D1E90);
  v9 = type metadata accessor for Review(0);
  if (swift_dynamicCast(&v14, v15, v8, v9, 6))
  {
    v10 = v14;
    v11 = objc_msgSend(a4, "traitCollection");
    sub_1BE2B0(v10, a2 & 1, a3 & 1);
    swift_release(v10);

  }
  else
  {
    v12 = sub_12591C();
    ObjectType = swift_getObjectType();
    sub_1B4990(a1, v9, v12, ObjectType);
  }
}

unint64_t sub_12591C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3D7978;
  if (!qword_3D7978)
  {
    v1 = type metadata accessor for Review(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Review, v1);
    atomic_store(result, (unint64_t *)&qword_3D7978);
  }
  return result;
}

uint64_t sub_125964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1259AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1259D8()
{
  uint64_t v0;

  return sub_101058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_22(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1259FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_125A20(uint64_t a1)
{
  uint64_t v1;

  sub_124E7C(a1, *(char **)(v1 + 16));
}

void sub_125A28(uint64_t a1)
{
  uint64_t v1;

  sub_124B2C(a1, *(char **)(v1 + 16));
}

id sub_125A30()
{
  id v0;
  id v1;

  if ((UITraitCollection.interfaceIdiomIsMac.getter() & 1) != 0)
  {
    v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.45);
    objc_msgSend(v0, "setBackgroundColor:", v1);
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 4);
    v0 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);
  }

  return v0;
}

void sub_125B00()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0 + OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v4, "removeTarget:action:", v0, "scrollPanDidChange:");
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "_removeScrollViewScrollObserver:", v0);

  }
}

void sub_125BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  void *v8;
  id v9;

  sub_125B00();
  v3 = v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView;
  v4 = swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC23ShelfKitCollectionViews39ModelViewOverflowPresentationController_dismissalScrollView, a1);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "panGestureRecognizer");

    objc_msgSend(v7, "addTarget:action:", v1, "scrollPanDidChange:");
  }
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "_addScrollViewScrollObserver:", v1);

  }
}

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + 0.0;
}

uint64_t sub_125CA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_125CD0(int a1)
{
  uint64_t v1;

  sub_1245A4(a1, *(char **)(v1 + 16), *(void **)(v1 + 24));
}

double sub_125CF4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double result;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F8650);
  v4 = v0;
  v2 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104)).n128_u64[0];
  return result;
}

double sub_125D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  os_unfair_lock_s *v49;
  os_unfair_lock_s *v50;
  os_unfair_lock_s *v51;
  double result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65[2];
  uint64_t v66;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D2E70);
  __chkstk_darwin(v1);
  v60 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7A90);
  v4 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  v62 = v4;
  __chkstk_darwin(v3);
  v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7A98);
  v7 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  v64 = v7;
  __chkstk_darwin(v6);
  v59 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AA0);
  v55 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AA8);
  v56 = *(_QWORD *)(v54 - 8);
  v12 = __chkstk_darwin(v54);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = CategoryObserverProvider.favoritedCategoriesPublisher.getter(v12);
  v66 = RecommendationsMetadataProvider.metadata.getter();
  v58 = v0;
  v15 = *(_QWORD *)(v0 + 32);
  sub_1D5D4(v58 + 40, (uint64_t)v65);
  v16 = swift_allocObject(&unk_383D28, 64, 7);
  sub_1B738(v65, v16 + 16);
  *(_QWORD *)(v16 + 56) = v15;
  v17 = swift_retain(v15);
  v18 = static Subscribers.Demand.unlimited.getter(v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AB0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AB8);
  v21 = sub_10EDC(&qword_3D7AC0, &qword_3D7AB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v22 = sub_10EDC(&qword_3D7AC8, &qword_3D7AB8, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  Publisher<>.flatMap<A>(maxPublishers:_:)(v18, sub_129148, v16, v19, v20, v21, v22);
  swift_release(v16);
  swift_release(v66);
  v23 = type metadata accessor for ManageCategoriesPage(0);
  v24 = sub_10EDC(&qword_3D7AD0, &qword_3D7AA0, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  Publisher.compactMap<A>(_:)(sub_126D70, 0, v9, v23, v24);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v9);
  v25 = sub_10EDC(&qword_3D7AD8, &qword_3D7AA8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v26 = v54;
  v27 = Publisher.eraseToAnyPublisher()(v54, v25);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v26);
  v28 = v53;
  *(_QWORD *)&v65[0] = v53;
  v66 = v27;
  swift_retain(v53);
  swift_retain(v27);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AE0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7AE8);
  v31 = sub_10EDC(&qword_3D7AF0, &qword_3D7AE0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v32 = sub_10EDC(&qword_3D7AF8, &qword_3D7AE8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v33 = v57;
  Publishers.CombineLatest.init(_:_:)(v65, &v66, v29, v30, v31, v32);
  v34 = sub_1E2A0();
  *(_QWORD *)&v65[0] = static OS_dispatch_queue.main.getter(v35);
  v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v37 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v60, 1, 1, v36);
  v38 = sub_10EDC(&qword_3D7B00, &qword_3D7A90, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v39 = sub_89A0((unint64_t *)&qword_3D4D80, (uint64_t (*)(uint64_t))sub_1E2A0, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v40 = v59;
  v41 = v61;
  Publisher.receive<A>(on:options:)(v65, v37, v61, v34, v38, v39);
  sub_D1D4(v37, &qword_3D2E70);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v41);
  v42 = swift_allocObject(&unk_383D50, 24, 7);
  v43 = v58;
  swift_weakInit(v42 + 16, v58);
  v44 = swift_allocObject(&unk_383D78, 32, 7);
  *(_QWORD *)(v44 + 16) = sub_129178;
  *(_QWORD *)(v44 + 24) = v42;
  v45 = sub_10EDC(&qword_3D7B08, &qword_3D7A98, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v46 = v63;
  v47 = Publisher<>.sink(receiveValue:)(sub_129180, v44, v63, v45);
  v48 = swift_release(v44);
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v40, v46, v48);
  v49 = *(os_unfair_lock_s **)(v43 + 96);
  v50 = v49 + 4;
  v51 = v49 + 6;
  os_unfair_lock_lock(v49 + 6);
  AnyCancellable.store(in:)(v50);
  os_unfair_lock_unlock(v51);
  swift_release(v28);
  swift_release(v27);
  *(_QWORD *)&result = swift_release(v47).n128_u64[0];
  return result;
}

uint64_t sub_1262F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  __int16 v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  _QWORD *v51;

  v49 = a1;
  v1 = type metadata accessor for AttributedString.InterpolationOptions(0);
  v2 = *(_QWORD *)(v1 - 8);
  v47 = v1;
  v48 = v2;
  __chkstk_darwin(v1);
  v42 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_3D2D70);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AttributedString.FormattingOptions(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B28);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AttributedString(0);
  v45 = *(_QWORD *)(v19 - 8);
  v46 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)(0x535F4E4F49544341, 0xEF53474E49545445);
  v22 = type metadata accessor for Locale(0);
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v44 = v22;
  v43(v15, 1, 1, v22);
  v51 = _swiftEmptyArrayStorage;
  v23 = sub_89A0(&qword_3D7B38, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions, (uint64_t)&protocol conformance descriptor for AttributedString.FormattingOptions);
  v41 = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B40);
  v40 = v24;
  v39 = sub_10EDC(&qword_3D7B48, &qword_3D7B40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v24, v39, v10, v23);
  v36 = 256;
  AttributedString.init(localized:options:table:bundle:locale:comment:)(v18, v12, 0, 0, 0, v15, 0, 0, v36);
  KeyPath = swift_getKeyPath(&unk_2F8678);
  v25 = swift_getKeyPath(&unk_2F86A8);
  URL.init(string:)(0xD000000000000013);
  v26 = sub_129234();
  AttributedString.subscript.setter(v9, v25, v26);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(100, 1);
  v27._countAndFlagsBits = 0xD000000000000063;
  v27._object = (void *)0x800000000030F080;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
  v51 = _swiftEmptyArrayStorage;
  v28 = sub_89A0(&qword_3D7B58, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.InterpolationOptions, (uint64_t)&protocol conformance descriptor for AttributedString.InterpolationOptions);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B60);
  v30 = sub_10EDC(&qword_3D7B68, &qword_3D7B60, (uint64_t)&protocol conformance descriptor for [A]);
  v31 = v42;
  v32 = v29;
  v33 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v32, v30, v47, v28);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)(v21, v31);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v33);
  v34._countAndFlagsBits = 46;
  v34._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v34);
  String.LocalizationValue.init(stringInterpolation:)(v6);
  v43(v15, 1, 1, v44);
  v51 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v40, v39, v10, v41);
  LOWORD(v37) = 256;
  AttributedString.init(localized:options:table:bundle:locale:comment:)(v18, v12, 0, 0, 0, v15, 0, 0, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v21, v46);
}

uint64_t sub_126794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_3D7B70);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

double sub_1267EC@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F8650);
  v8 = v3;
  v5 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 104);
  *a2 = v6;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v6).n128_u64[0];
  return result;
}

double sub_12687C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F8650);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_89A0(&qword_3D1978, type metadata accessor for ManageCategoriesController, (uint64_t)&unk_2F8630);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1291CC, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

